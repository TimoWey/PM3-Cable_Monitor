
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002b9a4  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000175b0  0802bb54  0802bb54  0003bb54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08043104  08043104  00053104  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08046dfc  08046dfc  00056dfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 000007c4  08047048  08047048  00057048  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  0804780c  0804780c  0005780c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0816083c  0816083c  00180168  2**0
                  CONTENTS
  8 .ARM          00000008  0816083c  0816083c  0017083c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08160844  08160844  00180168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08160844  08160844  00170844  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  08160858  08160858  00170858  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  0816085c  00180000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013884  20000168  081609c4  00180168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  200139ec  081609c4  001839ec  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00180168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00190000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  00180198  2**0
                  CONTENTS, READONLY
 18 .debug_line   0009c5c3  00000000  00000000  001802ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 000000a9  00000000  00000000  0021c88d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00299603  00000000  00000000  0021c936  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 00032851  00000000  00000000  004b5f39  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004808  00000000  00000000  004e8790  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    001210c4  00000000  00000000  004ecf98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 0000826e  00000000  00000000  0060e05c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 000323dc  00000000  00000000  006162ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003ccd1  00000000  00000000  006486a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d4c8  00000000  00000000  00685378  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  00692840  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  00695bb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802bb3c 	.word	0x0802bb3c

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802bb3c 	.word	0x0802bb3c

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_dmul>:
 8000350:	b570      	push	{r4, r5, r6, lr}
 8000352:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000356:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800035a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800035e:	bf1d      	ittte	ne
 8000360:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000364:	ea94 0f0c 	teqne	r4, ip
 8000368:	ea95 0f0c 	teqne	r5, ip
 800036c:	f000 f8de 	bleq	800052c <__aeabi_dmul+0x1dc>
 8000370:	442c      	add	r4, r5
 8000372:	ea81 0603 	eor.w	r6, r1, r3
 8000376:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800037a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800037e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000382:	bf18      	it	ne
 8000384:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000388:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800038c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000390:	d038      	beq.n	8000404 <__aeabi_dmul+0xb4>
 8000392:	fba0 ce02 	umull	ip, lr, r0, r2
 8000396:	f04f 0500 	mov.w	r5, #0
 800039a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800039e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80003a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80003a6:	f04f 0600 	mov.w	r6, #0
 80003aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80003ae:	f09c 0f00 	teq	ip, #0
 80003b2:	bf18      	it	ne
 80003b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80003b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80003bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80003c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80003c4:	d204      	bcs.n	80003d0 <__aeabi_dmul+0x80>
 80003c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80003ca:	416d      	adcs	r5, r5
 80003cc:	eb46 0606 	adc.w	r6, r6, r6
 80003d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80003d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80003d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80003dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80003e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80003e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80003e8:	bf88      	it	hi
 80003ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80003ee:	d81e      	bhi.n	800042e <__aeabi_dmul+0xde>
 80003f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80003f4:	bf08      	it	eq
 80003f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80003fa:	f150 0000 	adcs.w	r0, r0, #0
 80003fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000402:	bd70      	pop	{r4, r5, r6, pc}
 8000404:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000408:	ea46 0101 	orr.w	r1, r6, r1
 800040c:	ea40 0002 	orr.w	r0, r0, r2
 8000410:	ea81 0103 	eor.w	r1, r1, r3
 8000414:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000418:	bfc2      	ittt	gt
 800041a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800041e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000422:	bd70      	popgt	{r4, r5, r6, pc}
 8000424:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000428:	f04f 0e00 	mov.w	lr, #0
 800042c:	3c01      	subs	r4, #1
 800042e:	f300 80ab 	bgt.w	8000588 <__aeabi_dmul+0x238>
 8000432:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000436:	bfde      	ittt	le
 8000438:	2000      	movle	r0, #0
 800043a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800043e:	bd70      	pople	{r4, r5, r6, pc}
 8000440:	f1c4 0400 	rsb	r4, r4, #0
 8000444:	3c20      	subs	r4, #32
 8000446:	da35      	bge.n	80004b4 <__aeabi_dmul+0x164>
 8000448:	340c      	adds	r4, #12
 800044a:	dc1b      	bgt.n	8000484 <__aeabi_dmul+0x134>
 800044c:	f104 0414 	add.w	r4, r4, #20
 8000450:	f1c4 0520 	rsb	r5, r4, #32
 8000454:	fa00 f305 	lsl.w	r3, r0, r5
 8000458:	fa20 f004 	lsr.w	r0, r0, r4
 800045c:	fa01 f205 	lsl.w	r2, r1, r5
 8000460:	ea40 0002 	orr.w	r0, r0, r2
 8000464:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000468:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800046c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000470:	fa21 f604 	lsr.w	r6, r1, r4
 8000474:	eb42 0106 	adc.w	r1, r2, r6
 8000478:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800047c:	bf08      	it	eq
 800047e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000482:	bd70      	pop	{r4, r5, r6, pc}
 8000484:	f1c4 040c 	rsb	r4, r4, #12
 8000488:	f1c4 0520 	rsb	r5, r4, #32
 800048c:	fa00 f304 	lsl.w	r3, r0, r4
 8000490:	fa20 f005 	lsr.w	r0, r0, r5
 8000494:	fa01 f204 	lsl.w	r2, r1, r4
 8000498:	ea40 0002 	orr.w	r0, r0, r2
 800049c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80004a4:	f141 0100 	adc.w	r1, r1, #0
 80004a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004ac:	bf08      	it	eq
 80004ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004b2:	bd70      	pop	{r4, r5, r6, pc}
 80004b4:	f1c4 0520 	rsb	r5, r4, #32
 80004b8:	fa00 f205 	lsl.w	r2, r0, r5
 80004bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80004c0:	fa20 f304 	lsr.w	r3, r0, r4
 80004c4:	fa01 f205 	lsl.w	r2, r1, r5
 80004c8:	ea43 0302 	orr.w	r3, r3, r2
 80004cc:	fa21 f004 	lsr.w	r0, r1, r4
 80004d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004d4:	fa21 f204 	lsr.w	r2, r1, r4
 80004d8:	ea20 0002 	bic.w	r0, r0, r2
 80004dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80004e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004e4:	bf08      	it	eq
 80004e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004ea:	bd70      	pop	{r4, r5, r6, pc}
 80004ec:	f094 0f00 	teq	r4, #0
 80004f0:	d10f      	bne.n	8000512 <__aeabi_dmul+0x1c2>
 80004f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80004f6:	0040      	lsls	r0, r0, #1
 80004f8:	eb41 0101 	adc.w	r1, r1, r1
 80004fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000500:	bf08      	it	eq
 8000502:	3c01      	subeq	r4, #1
 8000504:	d0f7      	beq.n	80004f6 <__aeabi_dmul+0x1a6>
 8000506:	ea41 0106 	orr.w	r1, r1, r6
 800050a:	f095 0f00 	teq	r5, #0
 800050e:	bf18      	it	ne
 8000510:	4770      	bxne	lr
 8000512:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000516:	0052      	lsls	r2, r2, #1
 8000518:	eb43 0303 	adc.w	r3, r3, r3
 800051c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000520:	bf08      	it	eq
 8000522:	3d01      	subeq	r5, #1
 8000524:	d0f7      	beq.n	8000516 <__aeabi_dmul+0x1c6>
 8000526:	ea43 0306 	orr.w	r3, r3, r6
 800052a:	4770      	bx	lr
 800052c:	ea94 0f0c 	teq	r4, ip
 8000530:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000534:	bf18      	it	ne
 8000536:	ea95 0f0c 	teqne	r5, ip
 800053a:	d00c      	beq.n	8000556 <__aeabi_dmul+0x206>
 800053c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000540:	bf18      	it	ne
 8000542:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000546:	d1d1      	bne.n	80004ec <__aeabi_dmul+0x19c>
 8000548:	ea81 0103 	eor.w	r1, r1, r3
 800054c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000550:	f04f 0000 	mov.w	r0, #0
 8000554:	bd70      	pop	{r4, r5, r6, pc}
 8000556:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800055a:	bf06      	itte	eq
 800055c:	4610      	moveq	r0, r2
 800055e:	4619      	moveq	r1, r3
 8000560:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000564:	d019      	beq.n	800059a <__aeabi_dmul+0x24a>
 8000566:	ea94 0f0c 	teq	r4, ip
 800056a:	d102      	bne.n	8000572 <__aeabi_dmul+0x222>
 800056c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000570:	d113      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000572:	ea95 0f0c 	teq	r5, ip
 8000576:	d105      	bne.n	8000584 <__aeabi_dmul+0x234>
 8000578:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800057c:	bf1c      	itt	ne
 800057e:	4610      	movne	r0, r2
 8000580:	4619      	movne	r1, r3
 8000582:	d10a      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000584:	ea81 0103 	eor.w	r1, r1, r3
 8000588:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800058c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000590:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000594:	f04f 0000 	mov.w	r0, #0
 8000598:	bd70      	pop	{r4, r5, r6, pc}
 800059a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800059e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80005a2:	bd70      	pop	{r4, r5, r6, pc}

080005a4 <__aeabi_drsub>:
 80005a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e002      	b.n	80005b0 <__adddf3>
 80005aa:	bf00      	nop

080005ac <__aeabi_dsub>:
 80005ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080005b0 <__adddf3>:
 80005b0:	b530      	push	{r4, r5, lr}
 80005b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80005b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80005ba:	ea94 0f05 	teq	r4, r5
 80005be:	bf08      	it	eq
 80005c0:	ea90 0f02 	teqeq	r0, r2
 80005c4:	bf1f      	itttt	ne
 80005c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80005ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80005ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80005d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005d6:	f000 80e2 	beq.w	800079e <__adddf3+0x1ee>
 80005da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80005de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80005e2:	bfb8      	it	lt
 80005e4:	426d      	neglt	r5, r5
 80005e6:	dd0c      	ble.n	8000602 <__adddf3+0x52>
 80005e8:	442c      	add	r4, r5
 80005ea:	ea80 0202 	eor.w	r2, r0, r2
 80005ee:	ea81 0303 	eor.w	r3, r1, r3
 80005f2:	ea82 0000 	eor.w	r0, r2, r0
 80005f6:	ea83 0101 	eor.w	r1, r3, r1
 80005fa:	ea80 0202 	eor.w	r2, r0, r2
 80005fe:	ea81 0303 	eor.w	r3, r1, r3
 8000602:	2d36      	cmp	r5, #54	; 0x36
 8000604:	bf88      	it	hi
 8000606:	bd30      	pophi	{r4, r5, pc}
 8000608:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800060c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000610:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000614:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000618:	d002      	beq.n	8000620 <__adddf3+0x70>
 800061a:	4240      	negs	r0, r0
 800061c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000620:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000624:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000628:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800062c:	d002      	beq.n	8000634 <__adddf3+0x84>
 800062e:	4252      	negs	r2, r2
 8000630:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000634:	ea94 0f05 	teq	r4, r5
 8000638:	f000 80a7 	beq.w	800078a <__adddf3+0x1da>
 800063c:	f1a4 0401 	sub.w	r4, r4, #1
 8000640:	f1d5 0e20 	rsbs	lr, r5, #32
 8000644:	db0d      	blt.n	8000662 <__adddf3+0xb2>
 8000646:	fa02 fc0e 	lsl.w	ip, r2, lr
 800064a:	fa22 f205 	lsr.w	r2, r2, r5
 800064e:	1880      	adds	r0, r0, r2
 8000650:	f141 0100 	adc.w	r1, r1, #0
 8000654:	fa03 f20e 	lsl.w	r2, r3, lr
 8000658:	1880      	adds	r0, r0, r2
 800065a:	fa43 f305 	asr.w	r3, r3, r5
 800065e:	4159      	adcs	r1, r3
 8000660:	e00e      	b.n	8000680 <__adddf3+0xd0>
 8000662:	f1a5 0520 	sub.w	r5, r5, #32
 8000666:	f10e 0e20 	add.w	lr, lr, #32
 800066a:	2a01      	cmp	r2, #1
 800066c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000670:	bf28      	it	cs
 8000672:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000676:	fa43 f305 	asr.w	r3, r3, r5
 800067a:	18c0      	adds	r0, r0, r3
 800067c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000680:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000684:	d507      	bpl.n	8000696 <__adddf3+0xe6>
 8000686:	f04f 0e00 	mov.w	lr, #0
 800068a:	f1dc 0c00 	rsbs	ip, ip, #0
 800068e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000692:	eb6e 0101 	sbc.w	r1, lr, r1
 8000696:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800069a:	d31b      	bcc.n	80006d4 <__adddf3+0x124>
 800069c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80006a0:	d30c      	bcc.n	80006bc <__adddf3+0x10c>
 80006a2:	0849      	lsrs	r1, r1, #1
 80006a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80006a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80006ac:	f104 0401 	add.w	r4, r4, #1
 80006b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80006b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80006b8:	f080 809a 	bcs.w	80007f0 <__adddf3+0x240>
 80006bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80006c0:	bf08      	it	eq
 80006c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80006c6:	f150 0000 	adcs.w	r0, r0, #0
 80006ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ce:	ea41 0105 	orr.w	r1, r1, r5
 80006d2:	bd30      	pop	{r4, r5, pc}
 80006d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80006d8:	4140      	adcs	r0, r0
 80006da:	eb41 0101 	adc.w	r1, r1, r1
 80006de:	3c01      	subs	r4, #1
 80006e0:	bf28      	it	cs
 80006e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80006e6:	d2e9      	bcs.n	80006bc <__adddf3+0x10c>
 80006e8:	f091 0f00 	teq	r1, #0
 80006ec:	bf04      	itt	eq
 80006ee:	4601      	moveq	r1, r0
 80006f0:	2000      	moveq	r0, #0
 80006f2:	fab1 f381 	clz	r3, r1
 80006f6:	bf08      	it	eq
 80006f8:	3320      	addeq	r3, #32
 80006fa:	f1a3 030b 	sub.w	r3, r3, #11
 80006fe:	f1b3 0220 	subs.w	r2, r3, #32
 8000702:	da0c      	bge.n	800071e <__adddf3+0x16e>
 8000704:	320c      	adds	r2, #12
 8000706:	dd08      	ble.n	800071a <__adddf3+0x16a>
 8000708:	f102 0c14 	add.w	ip, r2, #20
 800070c:	f1c2 020c 	rsb	r2, r2, #12
 8000710:	fa01 f00c 	lsl.w	r0, r1, ip
 8000714:	fa21 f102 	lsr.w	r1, r1, r2
 8000718:	e00c      	b.n	8000734 <__adddf3+0x184>
 800071a:	f102 0214 	add.w	r2, r2, #20
 800071e:	bfd8      	it	le
 8000720:	f1c2 0c20 	rsble	ip, r2, #32
 8000724:	fa01 f102 	lsl.w	r1, r1, r2
 8000728:	fa20 fc0c 	lsr.w	ip, r0, ip
 800072c:	bfdc      	itt	le
 800072e:	ea41 010c 	orrle.w	r1, r1, ip
 8000732:	4090      	lslle	r0, r2
 8000734:	1ae4      	subs	r4, r4, r3
 8000736:	bfa2      	ittt	ge
 8000738:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800073c:	4329      	orrge	r1, r5
 800073e:	bd30      	popge	{r4, r5, pc}
 8000740:	ea6f 0404 	mvn.w	r4, r4
 8000744:	3c1f      	subs	r4, #31
 8000746:	da1c      	bge.n	8000782 <__adddf3+0x1d2>
 8000748:	340c      	adds	r4, #12
 800074a:	dc0e      	bgt.n	800076a <__adddf3+0x1ba>
 800074c:	f104 0414 	add.w	r4, r4, #20
 8000750:	f1c4 0220 	rsb	r2, r4, #32
 8000754:	fa20 f004 	lsr.w	r0, r0, r4
 8000758:	fa01 f302 	lsl.w	r3, r1, r2
 800075c:	ea40 0003 	orr.w	r0, r0, r3
 8000760:	fa21 f304 	lsr.w	r3, r1, r4
 8000764:	ea45 0103 	orr.w	r1, r5, r3
 8000768:	bd30      	pop	{r4, r5, pc}
 800076a:	f1c4 040c 	rsb	r4, r4, #12
 800076e:	f1c4 0220 	rsb	r2, r4, #32
 8000772:	fa20 f002 	lsr.w	r0, r0, r2
 8000776:	fa01 f304 	lsl.w	r3, r1, r4
 800077a:	ea40 0003 	orr.w	r0, r0, r3
 800077e:	4629      	mov	r1, r5
 8000780:	bd30      	pop	{r4, r5, pc}
 8000782:	fa21 f004 	lsr.w	r0, r1, r4
 8000786:	4629      	mov	r1, r5
 8000788:	bd30      	pop	{r4, r5, pc}
 800078a:	f094 0f00 	teq	r4, #0
 800078e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000792:	bf06      	itte	eq
 8000794:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000798:	3401      	addeq	r4, #1
 800079a:	3d01      	subne	r5, #1
 800079c:	e74e      	b.n	800063c <__adddf3+0x8c>
 800079e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80007a2:	bf18      	it	ne
 80007a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80007a8:	d029      	beq.n	80007fe <__adddf3+0x24e>
 80007aa:	ea94 0f05 	teq	r4, r5
 80007ae:	bf08      	it	eq
 80007b0:	ea90 0f02 	teqeq	r0, r2
 80007b4:	d005      	beq.n	80007c2 <__adddf3+0x212>
 80007b6:	ea54 0c00 	orrs.w	ip, r4, r0
 80007ba:	bf04      	itt	eq
 80007bc:	4619      	moveq	r1, r3
 80007be:	4610      	moveq	r0, r2
 80007c0:	bd30      	pop	{r4, r5, pc}
 80007c2:	ea91 0f03 	teq	r1, r3
 80007c6:	bf1e      	ittt	ne
 80007c8:	2100      	movne	r1, #0
 80007ca:	2000      	movne	r0, #0
 80007cc:	bd30      	popne	{r4, r5, pc}
 80007ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80007d2:	d105      	bne.n	80007e0 <__adddf3+0x230>
 80007d4:	0040      	lsls	r0, r0, #1
 80007d6:	4149      	adcs	r1, r1
 80007d8:	bf28      	it	cs
 80007da:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80007de:	bd30      	pop	{r4, r5, pc}
 80007e0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80007e4:	bf3c      	itt	cc
 80007e6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80007ea:	bd30      	popcc	{r4, r5, pc}
 80007ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007f0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80007f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd30      	pop	{r4, r5, pc}
 80007fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000802:	bf1a      	itte	ne
 8000804:	4619      	movne	r1, r3
 8000806:	4610      	movne	r0, r2
 8000808:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800080c:	bf1c      	itt	ne
 800080e:	460b      	movne	r3, r1
 8000810:	4602      	movne	r2, r0
 8000812:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000816:	bf06      	itte	eq
 8000818:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800081c:	ea91 0f03 	teqeq	r1, r3
 8000820:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop

08000828 <__aeabi_ui2d>:
 8000828:	f090 0f00 	teq	r0, #0
 800082c:	bf04      	itt	eq
 800082e:	2100      	moveq	r1, #0
 8000830:	4770      	bxeq	lr
 8000832:	b530      	push	{r4, r5, lr}
 8000834:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000838:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800083c:	f04f 0500 	mov.w	r5, #0
 8000840:	f04f 0100 	mov.w	r1, #0
 8000844:	e750      	b.n	80006e8 <__adddf3+0x138>
 8000846:	bf00      	nop

08000848 <__aeabi_i2d>:
 8000848:	f090 0f00 	teq	r0, #0
 800084c:	bf04      	itt	eq
 800084e:	2100      	moveq	r1, #0
 8000850:	4770      	bxeq	lr
 8000852:	b530      	push	{r4, r5, lr}
 8000854:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000858:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800085c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000860:	bf48      	it	mi
 8000862:	4240      	negmi	r0, r0
 8000864:	f04f 0100 	mov.w	r1, #0
 8000868:	e73e      	b.n	80006e8 <__adddf3+0x138>
 800086a:	bf00      	nop

0800086c <__aeabi_f2d>:
 800086c:	0042      	lsls	r2, r0, #1
 800086e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000872:	ea4f 0131 	mov.w	r1, r1, rrx
 8000876:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800087a:	bf1f      	itttt	ne
 800087c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000880:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000884:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000888:	4770      	bxne	lr
 800088a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800088e:	bf08      	it	eq
 8000890:	4770      	bxeq	lr
 8000892:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000896:	bf04      	itt	eq
 8000898:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800089c:	4770      	bxeq	lr
 800089e:	b530      	push	{r4, r5, lr}
 80008a0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80008a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80008a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80008ac:	e71c      	b.n	80006e8 <__adddf3+0x138>
 80008ae:	bf00      	nop

080008b0 <__aeabi_ul2d>:
 80008b0:	ea50 0201 	orrs.w	r2, r0, r1
 80008b4:	bf08      	it	eq
 80008b6:	4770      	bxeq	lr
 80008b8:	b530      	push	{r4, r5, lr}
 80008ba:	f04f 0500 	mov.w	r5, #0
 80008be:	e00a      	b.n	80008d6 <__aeabi_l2d+0x16>

080008c0 <__aeabi_l2d>:
 80008c0:	ea50 0201 	orrs.w	r2, r0, r1
 80008c4:	bf08      	it	eq
 80008c6:	4770      	bxeq	lr
 80008c8:	b530      	push	{r4, r5, lr}
 80008ca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80008ce:	d502      	bpl.n	80008d6 <__aeabi_l2d+0x16>
 80008d0:	4240      	negs	r0, r0
 80008d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80008d6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80008da:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80008de:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80008e2:	f43f aed8 	beq.w	8000696 <__adddf3+0xe6>
 80008e6:	f04f 0203 	mov.w	r2, #3
 80008ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008ee:	bf18      	it	ne
 80008f0:	3203      	addne	r2, #3
 80008f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008f6:	bf18      	it	ne
 80008f8:	3203      	addne	r2, #3
 80008fa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80008fe:	f1c2 0320 	rsb	r3, r2, #32
 8000902:	fa00 fc03 	lsl.w	ip, r0, r3
 8000906:	fa20 f002 	lsr.w	r0, r0, r2
 800090a:	fa01 fe03 	lsl.w	lr, r1, r3
 800090e:	ea40 000e 	orr.w	r0, r0, lr
 8000912:	fa21 f102 	lsr.w	r1, r1, r2
 8000916:	4414      	add	r4, r2
 8000918:	e6bd      	b.n	8000696 <__adddf3+0xe6>
 800091a:	bf00      	nop

0800091c <__aeabi_d2f>:
 800091c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000920:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000924:	bf24      	itt	cs
 8000926:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800092a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800092e:	d90d      	bls.n	800094c <__aeabi_d2f+0x30>
 8000930:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000934:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000938:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800093c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000940:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000944:	bf08      	it	eq
 8000946:	f020 0001 	biceq.w	r0, r0, #1
 800094a:	4770      	bx	lr
 800094c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000950:	d121      	bne.n	8000996 <__aeabi_d2f+0x7a>
 8000952:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000956:	bfbc      	itt	lt
 8000958:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 800095c:	4770      	bxlt	lr
 800095e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000962:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000966:	f1c2 0218 	rsb	r2, r2, #24
 800096a:	f1c2 0c20 	rsb	ip, r2, #32
 800096e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000972:	fa20 f002 	lsr.w	r0, r0, r2
 8000976:	bf18      	it	ne
 8000978:	f040 0001 	orrne.w	r0, r0, #1
 800097c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000980:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000984:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000988:	ea40 000c 	orr.w	r0, r0, ip
 800098c:	fa23 f302 	lsr.w	r3, r3, r2
 8000990:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000994:	e7cc      	b.n	8000930 <__aeabi_d2f+0x14>
 8000996:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800099a:	d107      	bne.n	80009ac <__aeabi_d2f+0x90>
 800099c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80009a0:	bf1e      	ittt	ne
 80009a2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80009a6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80009aa:	4770      	bxne	lr
 80009ac:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80009b0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80009b4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80009b8:	4770      	bx	lr
 80009ba:	bf00      	nop

080009bc <__aeabi_uldivmod>:
 80009bc:	b953      	cbnz	r3, 80009d4 <__aeabi_uldivmod+0x18>
 80009be:	b94a      	cbnz	r2, 80009d4 <__aeabi_uldivmod+0x18>
 80009c0:	2900      	cmp	r1, #0
 80009c2:	bf08      	it	eq
 80009c4:	2800      	cmpeq	r0, #0
 80009c6:	bf1c      	itt	ne
 80009c8:	f04f 31ff 	movne.w	r1, #4294967295
 80009cc:	f04f 30ff 	movne.w	r0, #4294967295
 80009d0:	f000 b970 	b.w	8000cb4 <__aeabi_idiv0>
 80009d4:	f1ad 0c08 	sub.w	ip, sp, #8
 80009d8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80009dc:	f000 f806 	bl	80009ec <__udivmoddi4>
 80009e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80009e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80009e8:	b004      	add	sp, #16
 80009ea:	4770      	bx	lr

080009ec <__udivmoddi4>:
 80009ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80009f0:	9e08      	ldr	r6, [sp, #32]
 80009f2:	460d      	mov	r5, r1
 80009f4:	4604      	mov	r4, r0
 80009f6:	460f      	mov	r7, r1
 80009f8:	2b00      	cmp	r3, #0
 80009fa:	d14a      	bne.n	8000a92 <__udivmoddi4+0xa6>
 80009fc:	428a      	cmp	r2, r1
 80009fe:	4694      	mov	ip, r2
 8000a00:	d965      	bls.n	8000ace <__udivmoddi4+0xe2>
 8000a02:	fab2 f382 	clz	r3, r2
 8000a06:	b143      	cbz	r3, 8000a1a <__udivmoddi4+0x2e>
 8000a08:	fa02 fc03 	lsl.w	ip, r2, r3
 8000a0c:	f1c3 0220 	rsb	r2, r3, #32
 8000a10:	409f      	lsls	r7, r3
 8000a12:	fa20 f202 	lsr.w	r2, r0, r2
 8000a16:	4317      	orrs	r7, r2
 8000a18:	409c      	lsls	r4, r3
 8000a1a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000a1e:	fa1f f58c 	uxth.w	r5, ip
 8000a22:	fbb7 f1fe 	udiv	r1, r7, lr
 8000a26:	0c22      	lsrs	r2, r4, #16
 8000a28:	fb0e 7711 	mls	r7, lr, r1, r7
 8000a2c:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000a30:	fb01 f005 	mul.w	r0, r1, r5
 8000a34:	4290      	cmp	r0, r2
 8000a36:	d90a      	bls.n	8000a4e <__udivmoddi4+0x62>
 8000a38:	eb1c 0202 	adds.w	r2, ip, r2
 8000a3c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000a40:	f080 811c 	bcs.w	8000c7c <__udivmoddi4+0x290>
 8000a44:	4290      	cmp	r0, r2
 8000a46:	f240 8119 	bls.w	8000c7c <__udivmoddi4+0x290>
 8000a4a:	3902      	subs	r1, #2
 8000a4c:	4462      	add	r2, ip
 8000a4e:	1a12      	subs	r2, r2, r0
 8000a50:	b2a4      	uxth	r4, r4
 8000a52:	fbb2 f0fe 	udiv	r0, r2, lr
 8000a56:	fb0e 2210 	mls	r2, lr, r0, r2
 8000a5a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000a5e:	fb00 f505 	mul.w	r5, r0, r5
 8000a62:	42a5      	cmp	r5, r4
 8000a64:	d90a      	bls.n	8000a7c <__udivmoddi4+0x90>
 8000a66:	eb1c 0404 	adds.w	r4, ip, r4
 8000a6a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000a6e:	f080 8107 	bcs.w	8000c80 <__udivmoddi4+0x294>
 8000a72:	42a5      	cmp	r5, r4
 8000a74:	f240 8104 	bls.w	8000c80 <__udivmoddi4+0x294>
 8000a78:	4464      	add	r4, ip
 8000a7a:	3802      	subs	r0, #2
 8000a7c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000a80:	1b64      	subs	r4, r4, r5
 8000a82:	2100      	movs	r1, #0
 8000a84:	b11e      	cbz	r6, 8000a8e <__udivmoddi4+0xa2>
 8000a86:	40dc      	lsrs	r4, r3
 8000a88:	2300      	movs	r3, #0
 8000a8a:	e9c6 4300 	strd	r4, r3, [r6]
 8000a8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a92:	428b      	cmp	r3, r1
 8000a94:	d908      	bls.n	8000aa8 <__udivmoddi4+0xbc>
 8000a96:	2e00      	cmp	r6, #0
 8000a98:	f000 80ed 	beq.w	8000c76 <__udivmoddi4+0x28a>
 8000a9c:	2100      	movs	r1, #0
 8000a9e:	e9c6 0500 	strd	r0, r5, [r6]
 8000aa2:	4608      	mov	r0, r1
 8000aa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000aa8:	fab3 f183 	clz	r1, r3
 8000aac:	2900      	cmp	r1, #0
 8000aae:	d149      	bne.n	8000b44 <__udivmoddi4+0x158>
 8000ab0:	42ab      	cmp	r3, r5
 8000ab2:	d302      	bcc.n	8000aba <__udivmoddi4+0xce>
 8000ab4:	4282      	cmp	r2, r0
 8000ab6:	f200 80f8 	bhi.w	8000caa <__udivmoddi4+0x2be>
 8000aba:	1a84      	subs	r4, r0, r2
 8000abc:	eb65 0203 	sbc.w	r2, r5, r3
 8000ac0:	2001      	movs	r0, #1
 8000ac2:	4617      	mov	r7, r2
 8000ac4:	2e00      	cmp	r6, #0
 8000ac6:	d0e2      	beq.n	8000a8e <__udivmoddi4+0xa2>
 8000ac8:	e9c6 4700 	strd	r4, r7, [r6]
 8000acc:	e7df      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000ace:	b902      	cbnz	r2, 8000ad2 <__udivmoddi4+0xe6>
 8000ad0:	deff      	udf	#255	; 0xff
 8000ad2:	fab2 f382 	clz	r3, r2
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	f040 8090 	bne.w	8000bfc <__udivmoddi4+0x210>
 8000adc:	1a8a      	subs	r2, r1, r2
 8000ade:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ae2:	fa1f fe8c 	uxth.w	lr, ip
 8000ae6:	2101      	movs	r1, #1
 8000ae8:	fbb2 f5f7 	udiv	r5, r2, r7
 8000aec:	fb07 2015 	mls	r0, r7, r5, r2
 8000af0:	0c22      	lsrs	r2, r4, #16
 8000af2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000af6:	fb0e f005 	mul.w	r0, lr, r5
 8000afa:	4290      	cmp	r0, r2
 8000afc:	d908      	bls.n	8000b10 <__udivmoddi4+0x124>
 8000afe:	eb1c 0202 	adds.w	r2, ip, r2
 8000b02:	f105 38ff 	add.w	r8, r5, #4294967295
 8000b06:	d202      	bcs.n	8000b0e <__udivmoddi4+0x122>
 8000b08:	4290      	cmp	r0, r2
 8000b0a:	f200 80cb 	bhi.w	8000ca4 <__udivmoddi4+0x2b8>
 8000b0e:	4645      	mov	r5, r8
 8000b10:	1a12      	subs	r2, r2, r0
 8000b12:	b2a4      	uxth	r4, r4
 8000b14:	fbb2 f0f7 	udiv	r0, r2, r7
 8000b18:	fb07 2210 	mls	r2, r7, r0, r2
 8000b1c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000b20:	fb0e fe00 	mul.w	lr, lr, r0
 8000b24:	45a6      	cmp	lr, r4
 8000b26:	d908      	bls.n	8000b3a <__udivmoddi4+0x14e>
 8000b28:	eb1c 0404 	adds.w	r4, ip, r4
 8000b2c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000b30:	d202      	bcs.n	8000b38 <__udivmoddi4+0x14c>
 8000b32:	45a6      	cmp	lr, r4
 8000b34:	f200 80bb 	bhi.w	8000cae <__udivmoddi4+0x2c2>
 8000b38:	4610      	mov	r0, r2
 8000b3a:	eba4 040e 	sub.w	r4, r4, lr
 8000b3e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000b42:	e79f      	b.n	8000a84 <__udivmoddi4+0x98>
 8000b44:	f1c1 0720 	rsb	r7, r1, #32
 8000b48:	408b      	lsls	r3, r1
 8000b4a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000b4e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000b52:	fa05 f401 	lsl.w	r4, r5, r1
 8000b56:	fa20 f307 	lsr.w	r3, r0, r7
 8000b5a:	40fd      	lsrs	r5, r7
 8000b5c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000b60:	4323      	orrs	r3, r4
 8000b62:	fbb5 f8f9 	udiv	r8, r5, r9
 8000b66:	fa1f fe8c 	uxth.w	lr, ip
 8000b6a:	fb09 5518 	mls	r5, r9, r8, r5
 8000b6e:	0c1c      	lsrs	r4, r3, #16
 8000b70:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000b74:	fb08 f50e 	mul.w	r5, r8, lr
 8000b78:	42a5      	cmp	r5, r4
 8000b7a:	fa02 f201 	lsl.w	r2, r2, r1
 8000b7e:	fa00 f001 	lsl.w	r0, r0, r1
 8000b82:	d90b      	bls.n	8000b9c <__udivmoddi4+0x1b0>
 8000b84:	eb1c 0404 	adds.w	r4, ip, r4
 8000b88:	f108 3aff 	add.w	sl, r8, #4294967295
 8000b8c:	f080 8088 	bcs.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b90:	42a5      	cmp	r5, r4
 8000b92:	f240 8085 	bls.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b96:	f1a8 0802 	sub.w	r8, r8, #2
 8000b9a:	4464      	add	r4, ip
 8000b9c:	1b64      	subs	r4, r4, r5
 8000b9e:	b29d      	uxth	r5, r3
 8000ba0:	fbb4 f3f9 	udiv	r3, r4, r9
 8000ba4:	fb09 4413 	mls	r4, r9, r3, r4
 8000ba8:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000bac:	fb03 fe0e 	mul.w	lr, r3, lr
 8000bb0:	45a6      	cmp	lr, r4
 8000bb2:	d908      	bls.n	8000bc6 <__udivmoddi4+0x1da>
 8000bb4:	eb1c 0404 	adds.w	r4, ip, r4
 8000bb8:	f103 35ff 	add.w	r5, r3, #4294967295
 8000bbc:	d26c      	bcs.n	8000c98 <__udivmoddi4+0x2ac>
 8000bbe:	45a6      	cmp	lr, r4
 8000bc0:	d96a      	bls.n	8000c98 <__udivmoddi4+0x2ac>
 8000bc2:	3b02      	subs	r3, #2
 8000bc4:	4464      	add	r4, ip
 8000bc6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000bca:	fba3 9502 	umull	r9, r5, r3, r2
 8000bce:	eba4 040e 	sub.w	r4, r4, lr
 8000bd2:	42ac      	cmp	r4, r5
 8000bd4:	46c8      	mov	r8, r9
 8000bd6:	46ae      	mov	lr, r5
 8000bd8:	d356      	bcc.n	8000c88 <__udivmoddi4+0x29c>
 8000bda:	d053      	beq.n	8000c84 <__udivmoddi4+0x298>
 8000bdc:	b156      	cbz	r6, 8000bf4 <__udivmoddi4+0x208>
 8000bde:	ebb0 0208 	subs.w	r2, r0, r8
 8000be2:	eb64 040e 	sbc.w	r4, r4, lr
 8000be6:	fa04 f707 	lsl.w	r7, r4, r7
 8000bea:	40ca      	lsrs	r2, r1
 8000bec:	40cc      	lsrs	r4, r1
 8000bee:	4317      	orrs	r7, r2
 8000bf0:	e9c6 7400 	strd	r7, r4, [r6]
 8000bf4:	4618      	mov	r0, r3
 8000bf6:	2100      	movs	r1, #0
 8000bf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bfc:	f1c3 0120 	rsb	r1, r3, #32
 8000c00:	fa02 fc03 	lsl.w	ip, r2, r3
 8000c04:	fa20 f201 	lsr.w	r2, r0, r1
 8000c08:	fa25 f101 	lsr.w	r1, r5, r1
 8000c0c:	409d      	lsls	r5, r3
 8000c0e:	432a      	orrs	r2, r5
 8000c10:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c14:	fa1f fe8c 	uxth.w	lr, ip
 8000c18:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c1c:	fb07 1510 	mls	r5, r7, r0, r1
 8000c20:	0c11      	lsrs	r1, r2, #16
 8000c22:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000c26:	fb00 f50e 	mul.w	r5, r0, lr
 8000c2a:	428d      	cmp	r5, r1
 8000c2c:	fa04 f403 	lsl.w	r4, r4, r3
 8000c30:	d908      	bls.n	8000c44 <__udivmoddi4+0x258>
 8000c32:	eb1c 0101 	adds.w	r1, ip, r1
 8000c36:	f100 38ff 	add.w	r8, r0, #4294967295
 8000c3a:	d22f      	bcs.n	8000c9c <__udivmoddi4+0x2b0>
 8000c3c:	428d      	cmp	r5, r1
 8000c3e:	d92d      	bls.n	8000c9c <__udivmoddi4+0x2b0>
 8000c40:	3802      	subs	r0, #2
 8000c42:	4461      	add	r1, ip
 8000c44:	1b49      	subs	r1, r1, r5
 8000c46:	b292      	uxth	r2, r2
 8000c48:	fbb1 f5f7 	udiv	r5, r1, r7
 8000c4c:	fb07 1115 	mls	r1, r7, r5, r1
 8000c50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c54:	fb05 f10e 	mul.w	r1, r5, lr
 8000c58:	4291      	cmp	r1, r2
 8000c5a:	d908      	bls.n	8000c6e <__udivmoddi4+0x282>
 8000c5c:	eb1c 0202 	adds.w	r2, ip, r2
 8000c60:	f105 38ff 	add.w	r8, r5, #4294967295
 8000c64:	d216      	bcs.n	8000c94 <__udivmoddi4+0x2a8>
 8000c66:	4291      	cmp	r1, r2
 8000c68:	d914      	bls.n	8000c94 <__udivmoddi4+0x2a8>
 8000c6a:	3d02      	subs	r5, #2
 8000c6c:	4462      	add	r2, ip
 8000c6e:	1a52      	subs	r2, r2, r1
 8000c70:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000c74:	e738      	b.n	8000ae8 <__udivmoddi4+0xfc>
 8000c76:	4631      	mov	r1, r6
 8000c78:	4630      	mov	r0, r6
 8000c7a:	e708      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000c7c:	4639      	mov	r1, r7
 8000c7e:	e6e6      	b.n	8000a4e <__udivmoddi4+0x62>
 8000c80:	4610      	mov	r0, r2
 8000c82:	e6fb      	b.n	8000a7c <__udivmoddi4+0x90>
 8000c84:	4548      	cmp	r0, r9
 8000c86:	d2a9      	bcs.n	8000bdc <__udivmoddi4+0x1f0>
 8000c88:	ebb9 0802 	subs.w	r8, r9, r2
 8000c8c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000c90:	3b01      	subs	r3, #1
 8000c92:	e7a3      	b.n	8000bdc <__udivmoddi4+0x1f0>
 8000c94:	4645      	mov	r5, r8
 8000c96:	e7ea      	b.n	8000c6e <__udivmoddi4+0x282>
 8000c98:	462b      	mov	r3, r5
 8000c9a:	e794      	b.n	8000bc6 <__udivmoddi4+0x1da>
 8000c9c:	4640      	mov	r0, r8
 8000c9e:	e7d1      	b.n	8000c44 <__udivmoddi4+0x258>
 8000ca0:	46d0      	mov	r8, sl
 8000ca2:	e77b      	b.n	8000b9c <__udivmoddi4+0x1b0>
 8000ca4:	3d02      	subs	r5, #2
 8000ca6:	4462      	add	r2, ip
 8000ca8:	e732      	b.n	8000b10 <__udivmoddi4+0x124>
 8000caa:	4608      	mov	r0, r1
 8000cac:	e70a      	b.n	8000ac4 <__udivmoddi4+0xd8>
 8000cae:	4464      	add	r4, ip
 8000cb0:	3802      	subs	r0, #2
 8000cb2:	e742      	b.n	8000b3a <__udivmoddi4+0x14e>

08000cb4 <__aeabi_idiv0>:
 8000cb4:	4770      	bx	lr
 8000cb6:	bf00      	nop

08000cb8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000cb8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000cf0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000cbc:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000cbe:	e003      	b.n	8000cc8 <LoopCopyDataInit>

08000cc0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000cc0:	4b0c      	ldr	r3, [pc, #48]	; (8000cf4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000cc2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000cc4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000cc6:	3104      	adds	r1, #4

08000cc8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000cc8:	480b      	ldr	r0, [pc, #44]	; (8000cf8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000ccc:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000cce:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000cd0:	d3f6      	bcc.n	8000cc0 <CopyDataInit>
  ldr  r2, =_sbss
 8000cd2:	4a0b      	ldr	r2, [pc, #44]	; (8000d00 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000cd4:	e002      	b.n	8000cdc <LoopFillZerobss>

08000cd6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000cd6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000cd8:	f842 3b04 	str.w	r3, [r2], #4

08000cdc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000cdc:	4b09      	ldr	r3, [pc, #36]	; (8000d04 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000cde:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000ce0:	d3f9      	bcc.n	8000cd6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000ce2:	f009 f931 	bl	8009f48 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ce6:	f02a f9ad 	bl	802b044 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000cea:	f000 facd 	bl	8001288 <main>
  bx  lr    
 8000cee:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000cf0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000cf4:	0816085c 	.word	0x0816085c
  ldr  r0, =_sdata
 8000cf8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000cfc:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000d00:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000d04:	200139ec 	.word	0x200139ec

08000d08 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000d08:	e7fe      	b.n	8000d08 <ADC_IRQHandler>
	...

08000d0c <calculate_freq_and_signalstrength>:
 *are calculated.
 * @param samples Pointer to the array of input samples.
 * @return FFT structure containing the calculated main frequency and signal
 *strength.
 **/
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples) {
 8000d0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000d10:	ed2d 8b02 	vpush	{d8}
 8000d14:	b08d      	sub	sp, #52	; 0x34
 8000d16:	af00      	add	r7, sp, #0
 8000d18:	460d      	mov	r5, r1
 8000d1a:	60f8      	str	r0, [r7, #12]
 8000d1c:	4690      	mov	r8, r2
    // Perform FFT using CMSIS-DSP library
    uint8_t buffer_size = MEAS_get_num_of_samples();
 8000d1e:	f000 ff35 	bl	8001b8c <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 8000d22:	b203      	sxth	r3, r0
 8000d24:	60bb      	str	r3, [r7, #8]
 8000d26:	009b      	lsls	r3, r3, #2
 8000d28:	607b      	str	r3, [r7, #4]
 8000d2a:	3307      	adds	r3, #7
 8000d2c:	f023 0307 	bic.w	r3, r3, #7
 8000d30:	ebad 0d03 	sub.w	sp, sp, r3
    uint8_t buffer_size = MEAS_get_num_of_samples();
 8000d34:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 8000d36:	46eb      	mov	fp, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 8000d38:	b1f0      	cbz	r0, 8000d78 <calculate_freq_and_signalstrength+0x6c>
 8000d3a:	3d01      	subs	r5, #1
 8000d3c:	46d9      	mov	r9, fp
        input_samples[i] =
            (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 8000d3e:	46da      	mov	sl, fp
    for (uint32_t i = 0; i < fft_size; i++) {
 8000d40:	2600      	movs	r6, #0
            (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 8000d42:	f000 ff21 	bl	8001b88 <MEAS_get_num_of_chan>
 8000d46:	fb06 5000 	mla	r0, r6, r0, r5
 8000d4a:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 8000d4e:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 8000d52:	3601      	adds	r6, #1
            (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 8000d54:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 8000d58:	42b4      	cmp	r4, r6
            (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 8000d5a:	ecea 7a01 	vstmia	sl!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 8000d5e:	d1f0      	bne.n	8000d42 <calculate_freq_and_signalstrength+0x36>
 8000d60:	687e      	ldr	r6, [r7, #4]
    }
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 8000d62:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8000e80 <calculate_freq_and_signalstrength+0x174>
 8000d66:	445e      	add	r6, fp
 8000d68:	edd9 7a00 	vldr	s15, [r9]
 8000d6c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000d70:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 8000d74:	454e      	cmp	r6, r9
 8000d76:	d1f7      	bne.n	8000d68 <calculate_freq_and_signalstrength+0x5c>
    }
    // Create an array for the FFT output
    float32_t fft_complex_output[2 * buffer_size];
 8000d78:	68bb      	ldr	r3, [r7, #8]
 8000d7a:	466a      	mov	r2, sp
 8000d7c:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
    // Create an instance of the FFT structure
    FFT fft;
    // Calculate the main frequency
    float main_frequency =
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000d80:	ee07 4a90 	vmov	s15, r4
    float32_t fft_complex_output[2 * buffer_size];
 8000d84:	469d      	mov	sp, r3
 8000d86:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000d88:	b2a1      	uxth	r1, r4
 8000d8a:	f107 0018 	add.w	r0, r7, #24
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000d8e:	eef8 8a67 	vcvt.f32.u32	s17, s15
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000d92:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000d94:	f027 feaa 	bl	8028aec <arm_rfft_fast_init_f32>
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000d98:	2300      	movs	r3, #0
 8000d9a:	4659      	mov	r1, fp
 8000d9c:	f107 0018 	add.w	r0, r7, #24
 8000da0:	462a      	mov	r2, r5
 8000da2:	f027 ff27 	bl	8028bf4 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000da6:	4622      	mov	r2, r4
 8000da8:	4629      	mov	r1, r5
 8000daa:	4628      	mov	r0, r5
 8000dac:	f028 fb90 	bl	80294d0 <arm_cmplx_mag_f32>
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000db0:	f107 0310 	add.w	r3, r7, #16
 8000db4:	f107 0214 	add.w	r2, r7, #20
 8000db8:	4621      	mov	r1, r4
 8000dba:	4628      	mov	r0, r5
 8000dbc:	f027 fe2e 	bl	8028a1c <arm_max_f32>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000dc0:	edd7 7a04 	vldr	s15, [r7, #16]
 8000dc4:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000dc8:	f000 fee2 	bl	8001b90 <MEAS_get_samp_freq>
 8000dcc:	ee07 0a90 	vmov	s15, r0
 8000dd0:	eef8 7a67 	vcvt.f32.u32	s15, s15
    uint8_t given_frequency = 0;
    // Check if the main frequency is in the range of 45-55 Hz
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000dd4:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8000e84 <calculate_freq_and_signalstrength+0x178>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000dd8:	ee67 7a88 	vmul.f32	s15, s15, s16
    float main_frequency =
 8000ddc:	ee87 8aa8 	vdiv.f32	s16, s15, s17
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000de0:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8000de4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000de8:	d81b      	bhi.n	8000e22 <calculate_freq_and_signalstrength+0x116>
 8000dea:	eddf 7a27 	vldr	s15, [pc, #156]	; 8000e88 <calculate_freq_and_signalstrength+0x17c>
 8000dee:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000df2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000df6:	db2d      	blt.n	8000e54 <calculate_freq_and_signalstrength+0x148>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
        // If yes, round the given frequency to 60 Hz
        given_frequency = 60;
    } else given_frequency = 0;
    // calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000df8:	68bb      	ldr	r3, [r7, #8]
 8000dfa:	eb03 0983 	add.w	r9, r3, r3, lsl #2
 8000dfe:	f000 fec7 	bl	8001b90 <MEAS_get_samp_freq>
 8000e02:	eb09 0989 	add.w	r9, r9, r9, lsl #2
 8000e06:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8000e0a:	fbb9 f0f0 	udiv	r0, r9, r0
    // set the signal strength to 0
    float signal_strength = 0; 
    // check if the given frequency is 50 or 60 Hz
    if (given_frequency != 0) {
        // calculate the signal strength
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000e0e:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 8000e12:	edd0 7a00 	vldr	s15, [r0]
 8000e16:	ee77 7aa7 	vadd.f32	s15, s15, s15
        fft.error = CALC_ERROR_NONE;
 8000e1a:	2301      	movs	r3, #1
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000e1c:	ee87 7aa8 	vdiv.f32	s14, s15, s17
        fft.error = CALC_ERROR_NONE;
 8000e20:	e00b      	b.n	8000e3a <calculate_freq_and_signalstrength+0x12e>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000e22:	eddf 7a1a 	vldr	s15, [pc, #104]	; 8000e8c <calculate_freq_and_signalstrength+0x180>
 8000e26:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000e2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000e2e:	d91d      	bls.n	8000e6c <calculate_freq_and_signalstrength+0x160>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000e30:	f000 feae 	bl	8001b90 <MEAS_get_samp_freq>
    float signal_strength = 0; 
 8000e34:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8000e90 <calculate_freq_and_signalstrength+0x184>
    } else fft.error = CALC_ERROR_FREQUENCY;  // if the given frequency is not 50 or 60 Hz
 8000e38:	2300      	movs	r3, #0
    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 8000e3a:	68fa      	ldr	r2, [r7, #12]
}
 8000e3c:	3734      	adds	r7, #52	; 0x34
 8000e3e:	4610      	mov	r0, r2
    return fft;
 8000e40:	ed82 8a00 	vstr	s16, [r2]
 8000e44:	ed82 7a01 	vstr	s14, [r2, #4]
 8000e48:	7213      	strb	r3, [r2, #8]
}
 8000e4a:	46bd      	mov	sp, r7
 8000e4c:	ecbd 8b02 	vpop	{d8}
 8000e50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000e54:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8000e8c <calculate_freq_and_signalstrength+0x180>
 8000e58:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000e5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000e60:	d8e6      	bhi.n	8000e30 <calculate_freq_and_signalstrength+0x124>
 8000e62:	eeb4 8a47 	vcmp.f32	s16, s14
 8000e66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000e6a:	d1e1      	bne.n	8000e30 <calculate_freq_and_signalstrength+0x124>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000e6c:	68bb      	ldr	r3, [r7, #8]
 8000e6e:	ebc3 1903 	rsb	r9, r3, r3, lsl #4
 8000e72:	f000 fe8d 	bl	8001b90 <MEAS_get_samp_freq>
 8000e76:	ea4f 0989 	mov.w	r9, r9, lsl #2
 8000e7a:	fbb9 f0f0 	udiv	r0, r9, r0
    if (given_frequency != 0) {
 8000e7e:	e7c6      	b.n	8000e0e <calculate_freq_and_signalstrength+0x102>
 8000e80:	44fff000 	.word	0x44fff000
 8000e84:	425c0000 	.word	0x425c0000
 8000e88:	42340000 	.word	0x42340000
 8000e8c:	42820000 	.word	0x42820000
 8000e90:	00000000 	.word	0x00000000

08000e94 <calculate_average_of_measurements>:
// Calculate the average of all measurements and return as pointer to array
uint32_t* calculate_average_of_measurements() {
 8000e94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint32_t* Samples = 0;
    uint32_t buffer_size = MEAS_get_num_of_samples()*MEAS_get_num_of_chan();
 8000e98:	f000 fe78 	bl	8001b8c <MEAS_get_num_of_samples>
 8000e9c:	4605      	mov	r5, r0
 8000e9e:	f000 fe73 	bl	8001b88 <MEAS_get_num_of_chan>
 8000ea2:	fb15 f500 	smulbb	r5, r5, r0
    uint32_t* average = malloc(buffer_size * sizeof(uint32_t));
 8000ea6:	00af      	lsls	r7, r5, #2
 8000ea8:	4638      	mov	r0, r7
 8000eaa:	f029 fdeb 	bl	802aa84 <malloc>
 8000eae:	1f04      	subs	r4, r0, #4
 8000eb0:	4606      	mov	r6, r0
    for (uint32_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++) {
 8000eb2:	4427      	add	r7, r4
    uint32_t* average = malloc(buffer_size * sizeof(uint32_t));
 8000eb4:	f04f 080a 	mov.w	r8, #10
        Samples = MEAS_start_measure();
 8000eb8:	f000 fe3a 	bl	8001b30 <MEAS_start_measure>
        for (uint32_t j = 0; j < buffer_size; j++) {
 8000ebc:	b14d      	cbz	r5, 8000ed2 <calculate_average_of_measurements+0x3e>
 8000ebe:	4623      	mov	r3, r4
 8000ec0:	1f01      	subs	r1, r0, #4
            average[j] += Samples[j];
 8000ec2:	f853 2f04 	ldr.w	r2, [r3, #4]!
 8000ec6:	f851 0f04 	ldr.w	r0, [r1, #4]!
        for (uint32_t j = 0; j < buffer_size; j++) {
 8000eca:	42bb      	cmp	r3, r7
            average[j] += Samples[j];
 8000ecc:	4402      	add	r2, r0
 8000ece:	601a      	str	r2, [r3, #0]
        for (uint32_t j = 0; j < buffer_size; j++) {
 8000ed0:	d1f7      	bne.n	8000ec2 <calculate_average_of_measurements+0x2e>
    for (uint32_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++) {
 8000ed2:	f1b8 0801 	subs.w	r8, r8, #1
 8000ed6:	d1ef      	bne.n	8000eb8 <calculate_average_of_measurements+0x24>
        }
    }
    for (uint32_t i = 0; i < buffer_size; i++) {
 8000ed8:	b145      	cbz	r5, 8000eec <calculate_average_of_measurements+0x58>
        average[i] /= ACCURATE_MEASUREMENT_LOOPS;
 8000eda:	4a06      	ldr	r2, [pc, #24]	; (8000ef4 <calculate_average_of_measurements+0x60>)
 8000edc:	f854 3f04 	ldr.w	r3, [r4, #4]!
 8000ee0:	fba2 1303 	umull	r1, r3, r2, r3
 8000ee4:	08db      	lsrs	r3, r3, #3
    for (uint32_t i = 0; i < buffer_size; i++) {
 8000ee6:	42bc      	cmp	r4, r7
        average[i] /= ACCURATE_MEASUREMENT_LOOPS;
 8000ee8:	6023      	str	r3, [r4, #0]
    for (uint32_t i = 0; i < buffer_size; i++) {
 8000eea:	d1f7      	bne.n	8000edc <calculate_average_of_measurements+0x48>
    }
    return average;
}
 8000eec:	4630      	mov	r0, r6
 8000eee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000ef2:	bf00      	nop
 8000ef4:	cccccccd 	.word	0xcccccccd

08000ef8 <calculate_coefficients_single_pad>:
    // s = x_0, x_1, x_2 d= y_0, y_1, y_2
    // Calculate the coefficients for the distance approximation from an approximation based on a second degree polynomial
    // a=((x_0^(2)*(x_1-x_2)*y_0-x_0*(x_1^(2)*y_1-x_2^(2)*y_2)+x_1*(x_1*y_1-x_2*y_2)*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2]) 
 8000ef8:	ed90 6a01 	vldr	s12, [r0, #4]
 8000efc:	edd0 5a02 	vldr	s11, [r0, #8]
 8000f00:	edd0 4a00 	vldr	s9, [r0]
 8000f04:	edd1 6a02 	vldr	s13, [r1, #8]
 8000f08:	edd1 3a01 	vldr	s7, [r1, #4]
 8000f0c:	ed91 4a00 	vldr	s8, [r1]
 8000f10:	492e      	ldr	r1, [pc, #184]	; (8000fcc <calculate_coefficients_single_pad+0xd4>)
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
    // b = ((−(x_0^(2)*(x_1^(2)*(y_0-y_1)-x_2^(2)*(y_0-y_2))+x_1^(2)*x_2^(2)*(y_1-y_2)))/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS

    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8000f12:	4a2f      	ldr	r2, [pc, #188]	; (8000fd0 <calculate_coefficients_single_pad+0xd8>)
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));

    // c=((x_0*(x_0*(x_1*(y_0-y_1)-x_2*(y_0-y_2))+x_1*x_2*(y_1-y_2))*x_1*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8000f14:	4b2f      	ldr	r3, [pc, #188]	; (8000fd4 <calculate_coefficients_single_pad+0xdc>)
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f16:	ee76 7a25 	vadd.f32	s15, s12, s11
 8000f1a:	ee26 1a25 	vmul.f32	s2, s12, s11
 8000f1e:	ee74 7ae7 	vsub.f32	s15, s9, s15
 8000f22:	eeb0 7a41 	vmov.f32	s14, s2
 8000f26:	eea4 7aa7 	vfma.f32	s14, s9, s15
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2]) 
 8000f2a:	ee36 3a65 	vsub.f32	s6, s12, s11
 8000f2e:	ee66 7ae5 	vnmul.f32	s15, s13, s11
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f32:	ee23 7a07 	vmul.f32	s14, s6, s14
 8000f36:	eeb7 5a00 	vmov.f32	s10, #112	; 0x3f800000  1.0
 8000f3a:	eec5 1a07 	vdiv.f32	s3, s10, s14
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2]) 
 8000f3e:	eee6 7a23 	vfma.f32	s15, s12, s7
 8000f42:	ee26 5a06 	vmul.f32	s10, s12, s12
 8000f46:	ee24 7aa4 	vmul.f32	s14, s9, s9
 8000f4a:	ee65 0aa5 	vmul.f32	s1, s11, s11
 8000f4e:	ee27 3a03 	vmul.f32	s6, s14, s6
 8000f52:	ee23 0ac5 	vnmul.f32	s0, s7, s10
 8000f56:	ee67 7a81 	vmul.f32	s15, s15, s2
 8000f5a:	eea0 0aa6 	vfma.f32	s0, s1, s13
 8000f5e:	eee3 7a04 	vfma.f32	s15, s6, s8
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8000f62:	ee76 2ac4 	vsub.f32	s5, s13, s8
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2]) 
 8000f66:	eee4 7a80 	vfma.f32	s15, s9, s0
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8000f6a:	ee33 2ac4 	vsub.f32	s4, s7, s8
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000f6e:	ee67 7aa1 	vmul.f32	s15, s15, s3
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8000f72:	ee22 2a05 	vmul.f32	s4, s4, s10
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8000f76:	ee62 2aa5 	vmul.f32	s5, s5, s11
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8000f7a:	ee20 3a85 	vmul.f32	s6, s1, s10
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8000f7e:	ee24 5a86 	vmul.f32	s10, s9, s12
    a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2]) 
 8000f82:	edc1 7a00 	vstr	s15, [r1]
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8000f86:	ee74 7a66 	vsub.f32	s15, s8, s13
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8000f8a:	ee34 4a63 	vsub.f32	s8, s8, s7
 8000f8e:	ee65 5a25 	vmul.f32	s11, s10, s11
 8000f92:	eeb0 5a62 	vmov.f32	s10, s5
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8000f96:	eea0 2aa7 	vfma.f32	s4, s1, s15
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8000f9a:	eea6 5a04 	vfma.f32	s10, s12, s8
 8000f9e:	ee73 7ae6 	vsub.f32	s15, s7, s13
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8000fa2:	ee27 7a02 	vmul.f32	s14, s14, s4
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8000fa6:	ee67 7a81 	vmul.f32	s15, s15, s2
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8000faa:	ee76 6ae3 	vsub.f32	s13, s13, s7
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8000fae:	eee4 7a85 	vfma.f32	s15, s9, s10
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8000fb2:	eea3 7a26 	vfma.f32	s14, s6, s13
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8000fb6:	ee65 7aa7 	vmul.f32	s15, s11, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000fba:	ee27 7a21 	vmul.f32	s14, s14, s3
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8000fbe:	ee67 7aa1 	vmul.f32	s15, s15, s3
    b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2]))) 
 8000fc2:	ed82 7a00 	vstr	s14, [r2]
    c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2])) 
 8000fc6:	edc3 7a00 	vstr	s15, [r3]
}
 8000fca:	4770      	bx	lr
 8000fcc:	20000184 	.word	0x20000184
 8000fd0:	20000188 	.word	0x20000188
 8000fd4:	2000018c 	.word	0x2000018c

08000fd8 <calculate_distance_and_angle>:


DISTANCE_ANGLE calculate_distance_and_angle()
{ 
 8000fd8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    float32_t distance[3] = {10, 50, 100};
 8000fdc:	4b40      	ldr	r3, [pc, #256]	; (80010e0 <calculate_distance_and_angle+0x108>)
    // Create an instance of the DISTANCE_ANGLE structure
    DISTANCE_ANGLE dist_angle;

    // Calculate the coefficients for the distance approximation from a second degree polynomial
    calculate_coefficients_single_pad(signal_r, distance);
    poly_coeff.a_r = a;
 8000fde:	f8df 910c 	ldr.w	r9, [pc, #268]	; 80010ec <calculate_distance_and_angle+0x114>
    poly_coeff.b_r = b;
 8000fe2:	f8df 810c 	ldr.w	r8, [pc, #268]	; 80010f0 <calculate_distance_and_angle+0x118>
    poly_coeff.c_r = c;
 8000fe6:	4f3f      	ldr	r7, [pc, #252]	; (80010e4 <calculate_distance_and_angle+0x10c>)
{ 
 8000fe8:	ed2d 8b08 	vpush	{d8-d11}
 8000fec:	4604      	mov	r4, r0
    float32_t distance[3] = {10, 50, 100};
 8000fee:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
{ 
 8000ff2:	b08f      	sub	sp, #60	; 0x3c
    float32_t distance[3] = {10, 50, 100};
 8000ff4:	ad02      	add	r5, sp, #8
 8000ff6:	e885 0007 	stmia.w	r5, {r0, r1, r2}
    float32_t signal_r[3] = {1030, 717, 543};
 8000ffa:	f103 020c 	add.w	r2, r3, #12
 8000ffe:	ca07      	ldmia	r2, {r0, r1, r2}
 8001000:	f10d 0c14 	add.w	ip, sp, #20
    float32_t signal_l[3] = {920, 655, 553};
 8001004:	3318      	adds	r3, #24
    float32_t signal_r[3] = {1030, 717, 543};
 8001006:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    float32_t signal_l[3] = {920, 655, 553};
 800100a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800100e:	ae08      	add	r6, sp, #32
 8001010:	e886 0007 	stmia.w	r6, {r0, r1, r2}
    calculate_coefficients_single_pad(signal_r, distance);
 8001014:	4660      	mov	r0, ip
 8001016:	4629      	mov	r1, r5
 8001018:	f7ff ff6e 	bl	8000ef8 <calculate_coefficients_single_pad>

    calculate_coefficients_single_pad(signal_l, distance);
 800101c:	4629      	mov	r1, r5
 800101e:	4630      	mov	r0, r6
    poly_coeff.a_r = a;
 8001020:	ed99 8a00 	vldr	s16, [r9]
    poly_coeff.b_r = b;
 8001024:	ed98 ba00 	vldr	s22, [r8]
    poly_coeff.c_r = c;
 8001028:	edd7 aa00 	vldr	s21, [r7]
    calculate_coefficients_single_pad(signal_l, distance);
 800102c:	f7ff ff64 	bl	8000ef8 <calculate_coefficients_single_pad>
    poly_coeff.a_l = a;
 8001030:	ed99 9a00 	vldr	s18, [r9]
    poly_coeff.b_l = b;
 8001034:	ed98 aa00 	vldr	s20, [r8]
    poly_coeff.c_l = c;
 8001038:	edd7 9a00 	vldr	s19, [r7]

    // measure the signal strength and calculate the distance and angle
    uint32_t* Samples = MEAS_start_measure();
 800103c:	f000 fd78 	bl	8001b30 <MEAS_start_measure>
    FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8001040:	2101      	movs	r1, #1
    uint32_t* Samples = MEAS_start_measure();
 8001042:	4602      	mov	r2, r0
    FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8001044:	9001      	str	r0, [sp, #4]
 8001046:	a80b      	add	r0, sp, #44	; 0x2c
 8001048:	f7ff fe60 	bl	8000d0c <calculate_freq_and_signalstrength>
 800104c:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
    float32_t calc_distance = poly_coeff.a_r + (poly_coeff.b_r / signal_pad) + (poly_coeff.c_r / POW2(signal_pad));
    
    // Set the calculated values
    dist_angle.distance_r = calc_distance;

    fft = calculate_freq_and_signalstrength(2, Samples);
 8001050:	9a01      	ldr	r2, [sp, #4]
    float32_t calc_distance = poly_coeff.a_r + (poly_coeff.b_r / signal_pad) + (poly_coeff.c_r / POW2(signal_pad));
 8001052:	eecb 8a27 	vdiv.f32	s17, s22, s15
    fft = calculate_freq_and_signalstrength(2, Samples);
 8001056:	a80b      	add	r0, sp, #44	; 0x2c
 8001058:	2102      	movs	r1, #2
    float32_t calc_distance = poly_coeff.a_r + (poly_coeff.b_r / signal_pad) + (poly_coeff.c_r / POW2(signal_pad));
 800105a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 800105e:	ee78 8a88 	vadd.f32	s17, s17, s16
 8001062:	ee8a 7aa7 	vdiv.f32	s14, s21, s15
 8001066:	ee78 8a87 	vadd.f32	s17, s17, s14
    fft = calculate_freq_and_signalstrength(2, Samples);
 800106a:	f7ff fe4f 	bl	8000d0c <calculate_freq_and_signalstrength>
 800106e:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
    signal_pad = fft.signal_strength;
    // Calculate the distance using the coefficients and the actual signal strength
    calc_distance = poly_coeff.a_l + (poly_coeff.b_l / signal_pad) + (poly_coeff.c_l / POW2(signal_pad));
 8001072:	ee8a 8a27 	vdiv.f32	s16, s20, s15
 8001076:	ee67 7aa7 	vmul.f32	s15, s15, s15
 800107a:	ee38 8a09 	vadd.f32	s16, s16, s18
 800107e:	ee89 7aa7 	vdiv.f32	s14, s19, s15
 8001082:	ee38 8a07 	vadd.f32	s16, s16, s14
    dist_angle.distance_l = calc_distance;

    // calculate the distance and angle (using ratio of distances)
    dist_angle.distance = (dist_angle.distance_r + dist_angle.distance_l) / 2;

    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 8001086:	ee78 7a68 	vsub.f32	s15, s16, s17
 800108a:	ee17 0a90 	vmov	r0, s15
 800108e:	f7ff fbed 	bl	800086c <__aeabi_f2d>
 8001092:	a311      	add	r3, pc, #68	; (adr r3, 80010d8 <calculate_distance_and_angle+0x100>)
 8001094:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001098:	f7ff f95a 	bl	8000350 <__aeabi_dmul>
 800109c:	f7ff fc3e 	bl	800091c <__aeabi_d2f>
 80010a0:	ee00 0a10 	vmov	s0, r0
 80010a4:	f028 fe2a 	bl	8029cfc <atanf>
    dist_angle.distance = (dist_angle.distance_r + dist_angle.distance_l) / 2;
 80010a8:	ee78 7a88 	vadd.f32	s15, s17, s16
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 80010ac:	ed9f 7a0e 	vldr	s14, [pc, #56]	; 80010e8 <calculate_distance_and_angle+0x110>

    // Return the calculated values
    return dist_angle;
 80010b0:	edc4 8a00 	vstr	s17, [r4]
    dist_angle.distance = (dist_angle.distance_r + dist_angle.distance_l) / 2;
 80010b4:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 80010b8:	ee67 7aa6 	vmul.f32	s15, s15, s13
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 80010bc:	ee20 0a07 	vmul.f32	s0, s0, s14
}
 80010c0:	4620      	mov	r0, r4
    return dist_angle;
 80010c2:	ed84 8a02 	vstr	s16, [r4, #8]
 80010c6:	edc4 7a04 	vstr	s15, [r4, #16]
 80010ca:	ed84 0a05 	vstr	s0, [r4, #20]
}
 80010ce:	b00f      	add	sp, #60	; 0x3c
 80010d0:	ecbd 8b08 	vpop	{d8-d11}
 80010d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80010d8:	a8ef1b4a 	.word	0xa8ef1b4a
 80010dc:	3f99fd66 	.word	0x3f99fd66
 80010e0:	0802bb54 	.word	0x0802bb54
 80010e4:	2000018c 	.word	0x2000018c
 80010e8:	42652ee0 	.word	0x42652ee0
 80010ec:	20000184 	.word	0x20000184
 80010f0:	20000188 	.word	0x20000188

080010f4 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80010f4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 80010f6:	2064      	movs	r0, #100	; 0x64
 80010f8:	f00c fb38 	bl	800d76c <osDelay>
  for(;;)
 80010fc:	e7fb      	b.n	80010f6 <StartDefaultTask+0x2>
 80010fe:	bf00      	nop

08001100 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001100:	b580      	push	{r7, lr}
 8001102:	4c10      	ldr	r4, [pc, #64]	; (8001144 <StartTimeoutTask+0x44>)
 8001104:	f8df 8048 	ldr.w	r8, [pc, #72]	; 8001150 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001108:	4f0f      	ldr	r7, [pc, #60]	; (8001148 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800110a:	4e10      	ldr	r6, [pc, #64]	; (800114c <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 800110c:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800110e:	2300      	movs	r3, #0
 8001110:	461a      	mov	r2, r3
 8001112:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 8001114:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001116:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 800111a:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800111c:	f00c fc22 	bl	800d964 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 8001120:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 8001122:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001124:	4638      	mov	r0, r7
 8001126:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 8001128:	b912      	cbnz	r2, 8001130 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 800112a:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800112c:	f009 f924 	bl	800a378 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8001130:	4630      	mov	r0, r6
 8001132:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001136:	f009 f923 	bl	800a380 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 800113a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800113e:	f00c fb15 	bl	800d76c <osDelay>
	  sleep_timeout_value--;
 8001142:	e7e3      	b.n	800110c <StartTimeoutTask+0xc>
 8001144:	2000000c 	.word	0x2000000c
 8001148:	40021000 	.word	0x40021000
 800114c:	40021800 	.word	0x40021800
 8001150:	20000198 	.word	0x20000198

08001154 <updateGUI_test>:
	return sleep_timeout_value;
 8001154:	4b01      	ldr	r3, [pc, #4]	; (800115c <updateGUI_test+0x8>)
}
 8001156:	6818      	ldr	r0, [r3, #0]
 8001158:	4770      	bx	lr
 800115a:	bf00      	nop
 800115c:	2000000c 	.word	0x2000000c

08001160 <gyro_disable>:
{
 8001160:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001162:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001164:	4e1f      	ldr	r6, [pc, #124]	; (80011e4 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001166:	4d20      	ldr	r5, [pc, #128]	; (80011e8 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8001168:	4c20      	ldr	r4, [pc, #128]	; (80011ec <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 800116a:	2700      	movs	r7, #0
 800116c:	9700      	str	r7, [sp, #0]
 800116e:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001170:	f043 0304 	orr.w	r3, r3, #4
 8001174:	6333      	str	r3, [r6, #48]	; 0x30
 8001176:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001178:	f003 0304 	and.w	r3, r3, #4
 800117c:	9300      	str	r3, [sp, #0]
 800117e:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001180:	682b      	ldr	r3, [r5, #0]
 8001182:	f023 030c 	bic.w	r3, r3, #12
 8001186:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8001188:	682b      	ldr	r3, [r5, #0]
 800118a:	f043 0304 	orr.w	r3, r3, #4
 800118e:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8001190:	69ab      	ldr	r3, [r5, #24]
 8001192:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001196:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8001198:	200a      	movs	r0, #10
 800119a:	f008 ff0f 	bl	8009fbc <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 800119e:	682b      	ldr	r3, [r5, #0]
 80011a0:	f043 030c 	orr.w	r3, r3, #12
 80011a4:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80011a6:	9701      	str	r7, [sp, #4]
 80011a8:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80011aa:	f043 0320 	orr.w	r3, r3, #32
 80011ae:	6333      	str	r3, [r6, #48]	; 0x30
 80011b0:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80011b2:	f003 0320 	and.w	r3, r3, #32
 80011b6:	9301      	str	r3, [sp, #4]
 80011b8:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80011ba:	68a3      	ldr	r3, [r4, #8]
 80011bc:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80011c0:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 80011c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80011c4:	f023 030f 	bic.w	r3, r3, #15
 80011c8:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 80011ca:	68e3      	ldr	r3, [r4, #12]
 80011cc:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80011d0:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 80011d2:	200a      	movs	r0, #10
 80011d4:	f008 fef2 	bl	8009fbc <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 80011d8:	6823      	ldr	r3, [r4, #0]
 80011da:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 80011de:	6023      	str	r3, [r4, #0]
}
 80011e0:	b003      	add	sp, #12
 80011e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011e4:	40023800 	.word	0x40023800
 80011e8:	40020800 	.word	0x40020800
 80011ec:	40021400 	.word	0x40021400

080011f0 <SystemClock_Config>:
{
 80011f0:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80011f2:	2400      	movs	r4, #0
{
 80011f4:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80011f6:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80011fa:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80011fe:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8001202:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001206:	4a1e      	ldr	r2, [pc, #120]	; (8001280 <SystemClock_Config+0x90>)
 8001208:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800120a:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 800120c:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800120e:	4b1d      	ldr	r3, [pc, #116]	; (8001284 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001210:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001214:	6411      	str	r1, [r2, #64]	; 0x40
 8001216:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8001218:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 800121c:	9201      	str	r2, [sp, #4]
 800121e:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001220:	9402      	str	r4, [sp, #8]
 8001222:	681a      	ldr	r2, [r3, #0]
 8001224:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001228:	601a      	str	r2, [r3, #0]
 800122a:	681b      	ldr	r3, [r3, #0]
 800122c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001230:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001232:	2201      	movs	r2, #1
 8001234:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001238:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 800123c:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800123e:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001240:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001242:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001246:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800124a:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 800124e:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001250:	2202      	movs	r2, #2
 8001252:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001254:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001256:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800125a:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800125c:	f00a feca 	bl	800bff4 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001260:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001262:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001266:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800126a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800126e:	a803      	add	r0, sp, #12
 8001270:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001272:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001276:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001278:	f00b f8d4 	bl	800c424 <HAL_RCC_ClockConfig>
}
 800127c:	b015      	add	sp, #84	; 0x54
 800127e:	bd30      	pop	{r4, r5, pc}
 8001280:	40023800 	.word	0x40023800
 8001284:	40007000 	.word	0x40007000

08001288 <main>:
{
 8001288:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800128c:	2400      	movs	r4, #0
{
 800128e:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 8001290:	f008 fe68 	bl	8009f64 <HAL_Init>
  SystemClock_Config();
 8001294:	f7ff ffac 	bl	80011f0 <SystemClock_Config>
  gyro_disable();
 8001298:	f7ff ff62 	bl	8001160 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800129c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
 80012a0:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80012a4:	4bbe      	ldr	r3, [pc, #760]	; (80015a0 <main+0x318>)
 80012a6:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012a8:	9411      	str	r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80012aa:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80012ac:	48bd      	ldr	r0, [pc, #756]	; (80015a4 <main+0x31c>)
  hi2c3.Instance = I2C3;
 80012ae:	4dbe      	ldr	r5, [pc, #760]	; (80015a8 <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80012b0:	f041 0110 	orr.w	r1, r1, #16
 80012b4:	6319      	str	r1, [r3, #48]	; 0x30
 80012b6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80012b8:	f001 0110 	and.w	r1, r1, #16
 80012bc:	9100      	str	r1, [sp, #0]
 80012be:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80012c0:	9401      	str	r4, [sp, #4]
 80012c2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80012c4:	f041 0120 	orr.w	r1, r1, #32
 80012c8:	6319      	str	r1, [r3, #48]	; 0x30
 80012ca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80012cc:	f001 0120 	and.w	r1, r1, #32
 80012d0:	9101      	str	r1, [sp, #4]
 80012d2:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80012d4:	9402      	str	r4, [sp, #8]
 80012d6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80012d8:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80012dc:	6319      	str	r1, [r3, #48]	; 0x30
 80012de:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80012e0:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80012e4:	9102      	str	r1, [sp, #8]
 80012e6:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80012e8:	9403      	str	r4, [sp, #12]
 80012ea:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80012ec:	f041 0104 	orr.w	r1, r1, #4
 80012f0:	6319      	str	r1, [r3, #48]	; 0x30
 80012f2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80012f4:	f001 0104 	and.w	r1, r1, #4
 80012f8:	9103      	str	r1, [sp, #12]
 80012fa:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80012fc:	9404      	str	r4, [sp, #16]
 80012fe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001300:	f041 0101 	orr.w	r1, r1, #1
 8001304:	6319      	str	r1, [r3, #48]	; 0x30
 8001306:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001308:	f001 0101 	and.w	r1, r1, #1
 800130c:	9104      	str	r1, [sp, #16]
 800130e:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001310:	9405      	str	r4, [sp, #20]
 8001312:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001314:	f041 0102 	orr.w	r1, r1, #2
 8001318:	6319      	str	r1, [r3, #48]	; 0x30
 800131a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800131c:	f001 0102 	and.w	r1, r1, #2
 8001320:	9105      	str	r1, [sp, #20]
 8001322:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001324:	9406      	str	r4, [sp, #24]
 8001326:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001328:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800132c:	6319      	str	r1, [r3, #48]	; 0x30
 800132e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001330:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8001334:	9106      	str	r1, [sp, #24]
 8001336:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001338:	9407      	str	r4, [sp, #28]
 800133a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800133c:	f041 0108 	orr.w	r1, r1, #8
 8001340:	6319      	str	r1, [r3, #48]	; 0x30
 8001342:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001344:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001348:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800134a:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800134c:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800134e:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001350:	f009 f812 	bl	800a378 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001354:	4893      	ldr	r0, [pc, #588]	; (80015a4 <main+0x31c>)
 8001356:	2120      	movs	r1, #32
 8001358:	2201      	movs	r2, #1
 800135a:	f009 f80d 	bl	800a378 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 800135e:	4893      	ldr	r0, [pc, #588]	; (80015ac <main+0x324>)
 8001360:	4622      	mov	r2, r4
 8001362:	2114      	movs	r1, #20
 8001364:	f009 f808 	bl	800a378 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 8001368:	4891      	ldr	r0, [pc, #580]	; (80015b0 <main+0x328>)
 800136a:	4622      	mov	r2, r4
 800136c:	2180      	movs	r1, #128	; 0x80
 800136e:	f009 f803 	bl	800a378 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8001372:	4890      	ldr	r0, [pc, #576]	; (80015b4 <main+0x32c>)
 8001374:	4622      	mov	r2, r4
 8001376:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800137a:	f008 fffd 	bl	800a378 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800137e:	488e      	ldr	r0, [pc, #568]	; (80015b8 <main+0x330>)
 8001380:	4622      	mov	r2, r4
 8001382:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8001386:	f008 fff7 	bl	800a378 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 800138a:	488c      	ldr	r0, [pc, #560]	; (80015bc <main+0x334>)
 800138c:	4622      	mov	r2, r4
 800138e:	2104      	movs	r1, #4
 8001390:	f008 fff2 	bl	800a378 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001394:	2201      	movs	r2, #1
 8001396:	4889      	ldr	r0, [pc, #548]	; (80015bc <main+0x334>)
 8001398:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800139c:	f008 ffec 	bl	800a378 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013a0:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013a2:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 80013a6:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80013a8:	487e      	ldr	r0, [pc, #504]	; (80015a4 <main+0x31c>)
 80013aa:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 80013ac:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013b0:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013b4:	e9cd 490f 	strd	r4, r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80013b8:	f008 fe9a 	bl	800a0f0 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80013bc:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80013c0:	4878      	ldr	r0, [pc, #480]	; (80015a4 <main+0x31c>)
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80013c2:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80013c4:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 80013c6:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013ca:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80013cc:	f008 fe90 	bl	800a0f0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80013d0:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80013d2:	4874      	ldr	r0, [pc, #464]	; (80015a4 <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80013d4:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80013d6:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013d8:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80013da:	f04f 0b04 	mov.w	fp, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013de:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80013e2:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80013e4:	f008 fe84 	bl	800a0f0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013e8:	4870      	ldr	r0, [pc, #448]	; (80015ac <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80013ea:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013ee:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013f0:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013f4:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013f6:	f008 fe7b 	bl	800a0f0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 80013fa:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 80013fc:	486c      	ldr	r0, [pc, #432]	; (80015b0 <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 80013fe:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001400:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8001402:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001406:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800140a:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 800140c:	f008 fe70 	bl	800a0f0 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001410:	4866      	ldr	r0, [pc, #408]	; (80015ac <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001412:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001414:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001416:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 800141a:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 800141e:	f008 fe67 	bl	800a0f0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001422:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001426:	4863      	ldr	r0, [pc, #396]	; (80015b4 <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001428:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800142a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800142c:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001430:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001432:	f008 fe5d 	bl	800a0f0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001436:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800143a:	485f      	ldr	r0, [pc, #380]	; (80015b8 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800143c:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800143e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001440:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001444:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001446:	f008 fe53 	bl	800a0f0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 800144a:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800144e:	485b      	ldr	r0, [pc, #364]	; (80015bc <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8001450:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001452:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001454:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001458:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800145a:	f008 fe49 	bl	800a0f0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 800145e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001462:	4853      	ldr	r0, [pc, #332]	; (80015b0 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001464:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001466:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8001468:	230f      	movs	r3, #15
 800146a:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800146c:	e9cd 740e 	strd	r7, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001470:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001472:	f008 fe3d 	bl	800a0f0 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8001476:	4622      	mov	r2, r4
 8001478:	2105      	movs	r1, #5
 800147a:	2009      	movs	r0, #9
 800147c:	f008 fdc2 	bl	800a004 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001480:	2009      	movs	r0, #9
 8001482:	f008 fdfd 	bl	800a080 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001486:	484e      	ldr	r0, [pc, #312]	; (80015c0 <main+0x338>)
 8001488:	4b4e      	ldr	r3, [pc, #312]	; (80015c4 <main+0x33c>)
 800148a:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800148c:	f008 fe06 	bl	800a09c <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001490:	494d      	ldr	r1, [pc, #308]	; (80015c8 <main+0x340>)
 8001492:	4b4e      	ldr	r3, [pc, #312]	; (80015cc <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001494:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8001496:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800149a:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800149e:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80014a0:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 80014a4:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80014a8:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80014ac:	f009 f9ca 	bl	800a844 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80014b0:	4651      	mov	r1, sl
 80014b2:	4628      	mov	r0, r5
 80014b4:	f00a fb92 	bl	800bbdc <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80014b8:	4621      	mov	r1, r4
 80014ba:	4628      	mov	r0, r5
 80014bc:	f00a fbae 	bl	800bc1c <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80014c0:	f8df c118 	ldr.w	ip, [pc, #280]	; 80015dc <main+0x354>
  hspi5.Instance = SPI5;
 80014c4:	4842      	ldr	r0, [pc, #264]	; (80015d0 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80014c6:	4d43      	ldr	r5, [pc, #268]	; (80015d4 <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80014c8:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80014ca:	f44f 7382 	mov.w	r3, #260	; 0x104
 80014ce:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80014d2:	f44f 7e00 	mov.w	lr, #512	; 0x200
 80014d6:	2318      	movs	r3, #24
 80014d8:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 80014dc:	230a      	movs	r3, #10
 80014de:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80014e0:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80014e4:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80014e8:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80014ec:	f00b fa88 	bl	800ca00 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 80014f0:	2307      	movs	r3, #7
 80014f2:	930e      	str	r3, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 80014f4:	9310      	str	r3, [sp, #64]	; 0x40
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80014f6:	4b38      	ldr	r3, [pc, #224]	; (80015d8 <main+0x350>)
 80014f8:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80014fa:	2040      	movs	r0, #64	; 0x40
 80014fc:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8001500:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001504:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001508:	622b      	str	r3, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800150a:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800150c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001510:	4628      	mov	r0, r5
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001512:	62ab      	str	r3, [r5, #40]	; 0x28
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8001514:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8001518:	e9c5 ba03 	strd	fp, sl, [r5, #12]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800151c:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 800151e:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8001520:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  SdramTiming.RPDelay = 2;
 8001524:	e9cd 9711 	strd	r9, r7, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 8001528:	970d      	str	r7, [sp, #52]	; 0x34
  SdramTiming.RCDDelay = 2;
 800152a:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800152c:	f00b f976 	bl	800c81c <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001530:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001534:	a909      	add	r1, sp, #36	; 0x24
 8001536:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001538:	e9cd 6809 	strd	r6, r8, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 800153c:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
 __IO uint32_t tmpmrd =0;
 8001540:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001542:	f00b f98d 	bl	800c860 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001546:	4630      	mov	r0, r6
 8001548:	f008 fd38 	bl	8009fbc <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800154c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001550:	a909      	add	r1, sp, #36	; 0x24
 8001552:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 8001554:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001558:	e9cd 7809 	strd	r7, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800155c:	f00b f980 	bl	800c860 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001560:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001564:	a909      	add	r1, sp, #36	; 0x24
 8001566:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 8001568:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800156c:	e9cd 9809 	strd	r9, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001570:	f00b f976 	bl	800c860 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001574:	f44f 730c 	mov.w	r3, #560	; 0x230
 8001578:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800157a:	9b08      	ldr	r3, [sp, #32]
 800157c:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800157e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001582:	a909      	add	r1, sp, #36	; 0x24
 8001584:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001586:	e9cd b809 	strd	fp, r8, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 800158a:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800158c:	f00b f968 	bl	800c860 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001590:	4628      	mov	r0, r5
 8001592:	f240 516a 	movw	r1, #1386	; 0x56a
 8001596:	f00b f981 	bl	800c89c <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800159a:	2234      	movs	r2, #52	; 0x34
 800159c:	e020      	b.n	80015e0 <main+0x358>
 800159e:	bf00      	nop
 80015a0:	40023800 	.word	0x40023800
 80015a4:	40021000 	.word	0x40021000
 80015a8:	200001ac 	.word	0x200001ac
 80015ac:	40020800 	.word	0x40020800
 80015b0:	40020000 	.word	0x40020000
 80015b4:	40020400 	.word	0x40020400
 80015b8:	40020c00 	.word	0x40020c00
 80015bc:	40021800 	.word	0x40021800
 80015c0:	200001a4 	.word	0x200001a4
 80015c4:	40023000 	.word	0x40023000
 80015c8:	40005c00 	.word	0x40005c00
 80015cc:	000186a0 	.word	0x000186a0
 80015d0:	200002dc 	.word	0x200002dc
 80015d4:	200002a8 	.word	0x200002a8
 80015d8:	a0000140 	.word	0xa0000140
 80015dc:	40015000 	.word	0x40015000
  hltdc.Instance = LTDC;
 80015e0:	4d3a      	ldr	r5, [pc, #232]	; (80016cc <main+0x444>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80015e2:	4621      	mov	r1, r4
 80015e4:	eb0d 0002 	add.w	r0, sp, r2
 80015e8:	f029 fc2d 	bl	802ae46 <memset>
  hltdc.Instance = LTDC;
 80015ec:	4b38      	ldr	r3, [pc, #224]	; (80016d0 <main+0x448>)
 80015ee:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 80015f0:	2309      	movs	r3, #9
 80015f2:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 80015f4:	231d      	movs	r3, #29
 80015f6:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80015f8:	f240 1b0d 	movw	fp, #269	; 0x10d
 80015fc:	f240 1343 	movw	r3, #323	; 0x143
 8001600:	e9c5 b309 	strd	fp, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8001604:	f240 1217 	movw	r2, #279	; 0x117
 8001608:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 800160c:	86ac      	strh	r4, [r5, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800160e:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001610:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8001614:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001616:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800161a:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.AccumulatedVBP = 3;
 800161e:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8001622:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001626:	f00a fb1d 	bl	800bc64 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 800162a:	23f0      	movs	r3, #240	; 0xf0
 800162c:	930e      	str	r3, [sp, #56]	; 0x38
  pLayerCfg.ImageWidth = 240;
 800162e:	9317      	str	r3, [sp, #92]	; 0x5c
  pLayerCfg.WindowY1 = 320;
 8001630:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001634:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageHeight = 320;
 8001636:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.Alpha = 255;
 8001638:	23ff      	movs	r3, #255	; 0xff
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800163a:	a90d      	add	r1, sp, #52	; 0x34
 800163c:	4622      	mov	r2, r4
 800163e:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 8001640:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001642:	f44f 6680 	mov.w	r6, #1024	; 0x400
 8001646:	2305      	movs	r3, #5
  LcdDrv = &ili9341_drv;
 8001648:	4d22      	ldr	r5, [pc, #136]	; (80016d4 <main+0x44c>)
  pLayerCfg.WindowX0 = 0;
 800164a:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800164c:	e9cd 6314 	strd	r6, r3, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 8001650:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001652:	9711      	str	r7, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 8001654:	9413      	str	r4, [sp, #76]	; 0x4c
  pLayerCfg.FBStartAdress = 0;
 8001656:	9416      	str	r4, [sp, #88]	; 0x58
  pLayerCfg.Backcolor.Blue = 0;
 8001658:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 800165c:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001660:	f00a fbd6 	bl	800be10 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001664:	4b1c      	ldr	r3, [pc, #112]	; (80016d8 <main+0x450>)
 8001666:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001668:	681b      	ldr	r3, [r3, #0]
 800166a:	4798      	blx	r3
  LcdDrv->DisplayOff();
 800166c:	682b      	ldr	r3, [r5, #0]
 800166e:	68db      	ldr	r3, [r3, #12]
 8001670:	4798      	blx	r3
  MX_TouchGFX_Init();
 8001672:	f000 fde9 	bl	8002248 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001676:	f000 fde5 	bl	8002244 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 800167a:	f7ff fd71 	bl	8001160 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 800167e:	f000 f945 	bl	800190c <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001682:	f000 f977 	bl	8001974 <MEAS_timer_init>
  osKernelInitialize();
 8001686:	f00b fff9 	bl	800d67c <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800168a:	4a14      	ldr	r2, [pc, #80]	; (80016dc <main+0x454>)
 800168c:	4639      	mov	r1, r7
 800168e:	4650      	mov	r0, sl
 8001690:	f00c f92e 	bl	800d8f0 <osMessageQueueNew>
 8001694:	4b12      	ldr	r3, [pc, #72]	; (80016e0 <main+0x458>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001696:	4a13      	ldr	r2, [pc, #76]	; (80016e4 <main+0x45c>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001698:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800169a:	4621      	mov	r1, r4
 800169c:	4812      	ldr	r0, [pc, #72]	; (80016e8 <main+0x460>)
 800169e:	f00c f819 	bl	800d6d4 <osThreadNew>
 80016a2:	4b12      	ldr	r3, [pc, #72]	; (80016ec <main+0x464>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80016a4:	4a12      	ldr	r2, [pc, #72]	; (80016f0 <main+0x468>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 80016a6:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80016a8:	4621      	mov	r1, r4
 80016aa:	4812      	ldr	r0, [pc, #72]	; (80016f4 <main+0x46c>)
 80016ac:	f00c f812 	bl	800d6d4 <osThreadNew>
 80016b0:	4b11      	ldr	r3, [pc, #68]	; (80016f8 <main+0x470>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 80016b2:	4a12      	ldr	r2, [pc, #72]	; (80016fc <main+0x474>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80016b4:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 80016b6:	4621      	mov	r1, r4
 80016b8:	4811      	ldr	r0, [pc, #68]	; (8001700 <main+0x478>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80016ba:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 80016bc:	f00c f80a 	bl	800d6d4 <osThreadNew>
 80016c0:	4b10      	ldr	r3, [pc, #64]	; (8001704 <main+0x47c>)
 80016c2:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80016c4:	f00b ffec 	bl	800d6a0 <osKernelStart>
  while (1)
 80016c8:	e7fe      	b.n	80016c8 <main+0x440>
 80016ca:	bf00      	nop
 80016cc:	20000200 	.word	0x20000200
 80016d0:	40016800 	.word	0x40016800
 80016d4:	20000194 	.word	0x20000194
 80016d8:	20000018 	.word	0x20000018
 80016dc:	0802bc10 	.word	0x0802bc10
 80016e0:	20000198 	.word	0x20000198
 80016e4:	0802bc4c 	.word	0x0802bc4c
 80016e8:	080010f5 	.word	0x080010f5
 80016ec:	200001a0 	.word	0x200001a0
 80016f0:	0802bbec 	.word	0x0802bbec
 80016f4:	08002259 	.word	0x08002259
 80016f8:	20000190 	.word	0x20000190
 80016fc:	0802bc28 	.word	0x0802bc28
 8001700:	08001101 	.word	0x08001101
 8001704:	2000019c 	.word	0x2000019c

08001708 <IOE_Init>:
 8001708:	4770      	bx	lr
 800170a:	bf00      	nop

0800170c <IOE_ITConfig>:
 800170c:	4770      	bx	lr
 800170e:	bf00      	nop

08001710 <IOE_Write>:
{
 8001710:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001712:	4c09      	ldr	r4, [pc, #36]	; (8001738 <IOE_Write+0x28>)
{
 8001714:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001716:	6824      	ldr	r4, [r4, #0]
 8001718:	9402      	str	r4, [sp, #8]
{
 800171a:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800171c:	2301      	movs	r3, #1
 800171e:	f88d 4017 	strb.w	r4, [sp, #23]
 8001722:	f10d 0417 	add.w	r4, sp, #23
 8001726:	460a      	mov	r2, r1
 8001728:	9301      	str	r3, [sp, #4]
 800172a:	4601      	mov	r1, r0
 800172c:	9400      	str	r4, [sp, #0]
 800172e:	4803      	ldr	r0, [pc, #12]	; (800173c <IOE_Write+0x2c>)
 8001730:	f009 f950 	bl	800a9d4 <HAL_I2C_Mem_Write>
}
 8001734:	b006      	add	sp, #24
 8001736:	bd10      	pop	{r4, pc}
 8001738:	20000004 	.word	0x20000004
 800173c:	200001ac 	.word	0x200001ac

08001740 <IOE_Read>:
{
 8001740:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001742:	4b0b      	ldr	r3, [pc, #44]	; (8001770 <IOE_Read+0x30>)
{
 8001744:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001746:	681b      	ldr	r3, [r3, #0]
 8001748:	9302      	str	r3, [sp, #8]
{
 800174a:	4684      	mov	ip, r0
 800174c:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800174e:	2301      	movs	r3, #1
 8001750:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001754:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001756:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 800175a:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800175e:	4661      	mov	r1, ip
 8001760:	4804      	ldr	r0, [pc, #16]	; (8001774 <IOE_Read+0x34>)
 8001762:	f009 fa29 	bl	800abb8 <HAL_I2C_Mem_Read>
}
 8001766:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800176a:	b007      	add	sp, #28
 800176c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001770:	20000004 	.word	0x20000004
 8001774:	200001ac 	.word	0x200001ac

08001778 <IOE_ReadMultiple>:
{
 8001778:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800177a:	4c09      	ldr	r4, [pc, #36]	; (80017a0 <IOE_ReadMultiple+0x28>)
{
 800177c:	b084      	sub	sp, #16
 800177e:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001780:	6820      	ldr	r0, [r4, #0]
 8001782:	9002      	str	r0, [sp, #8]
 8001784:	e9cd 2300 	strd	r2, r3, [sp]
 8001788:	4806      	ldr	r0, [pc, #24]	; (80017a4 <IOE_ReadMultiple+0x2c>)
 800178a:	460a      	mov	r2, r1
 800178c:	2301      	movs	r3, #1
 800178e:	4661      	mov	r1, ip
 8001790:	f009 fa12 	bl	800abb8 <HAL_I2C_Mem_Read>
}
 8001794:	3800      	subs	r0, #0
 8001796:	bf18      	it	ne
 8001798:	2001      	movne	r0, #1
 800179a:	b004      	add	sp, #16
 800179c:	bd10      	pop	{r4, pc}
 800179e:	bf00      	nop
 80017a0:	20000004 	.word	0x20000004
 80017a4:	200001ac 	.word	0x200001ac

080017a8 <IOE_Delay>:
 80017a8:	f008 bc08 	b.w	8009fbc <HAL_Delay>

080017ac <LCD_IO_Init>:
{
 80017ac:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80017ae:	4806      	ldr	r0, [pc, #24]	; (80017c8 <LCD_IO_Init+0x1c>)
 80017b0:	2200      	movs	r2, #0
 80017b2:	2104      	movs	r1, #4
 80017b4:	f008 fde0 	bl	800a378 <HAL_GPIO_WritePin>
}
 80017b8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80017bc:	4802      	ldr	r0, [pc, #8]	; (80017c8 <LCD_IO_Init+0x1c>)
 80017be:	2201      	movs	r2, #1
 80017c0:	2104      	movs	r1, #4
 80017c2:	f008 bdd9 	b.w	800a378 <HAL_GPIO_WritePin>
 80017c6:	bf00      	nop
 80017c8:	40020800 	.word	0x40020800

080017cc <LCD_IO_WriteData>:
{
 80017cc:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80017ce:	4d10      	ldr	r5, [pc, #64]	; (8001810 <LCD_IO_WriteData+0x44>)
{
 80017d0:	b083      	sub	sp, #12
 80017d2:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80017d4:	2201      	movs	r2, #1
 80017d6:	480f      	ldr	r0, [pc, #60]	; (8001814 <LCD_IO_WriteData+0x48>)
 80017d8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80017dc:	f008 fdcc 	bl	800a378 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80017e0:	4628      	mov	r0, r5
 80017e2:	2200      	movs	r2, #0
 80017e4:	2104      	movs	r1, #4
 80017e6:	f008 fdc7 	bl	800a378 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80017ea:	4b0b      	ldr	r3, [pc, #44]	; (8001818 <LCD_IO_WriteData+0x4c>)
 80017ec:	480b      	ldr	r0, [pc, #44]	; (800181c <LCD_IO_WriteData+0x50>)
 80017ee:	681b      	ldr	r3, [r3, #0]
 80017f0:	f8ad 4006 	strh.w	r4, [sp, #6]
 80017f4:	f10d 0106 	add.w	r1, sp, #6
 80017f8:	2201      	movs	r2, #1
 80017fa:	f00b f963 	bl	800cac4 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80017fe:	2201      	movs	r2, #1
 8001800:	2104      	movs	r1, #4
 8001802:	4628      	mov	r0, r5
}
 8001804:	b003      	add	sp, #12
 8001806:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800180a:	f008 bdb5 	b.w	800a378 <HAL_GPIO_WritePin>
 800180e:	bf00      	nop
 8001810:	40020800 	.word	0x40020800
 8001814:	40020c00 	.word	0x40020c00
 8001818:	20000008 	.word	0x20000008
 800181c:	200002dc 	.word	0x200002dc

08001820 <LCD_IO_WriteReg>:
{
 8001820:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001822:	4d10      	ldr	r5, [pc, #64]	; (8001864 <LCD_IO_WriteReg+0x44>)
{
 8001824:	b083      	sub	sp, #12
 8001826:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001828:	2200      	movs	r2, #0
 800182a:	480f      	ldr	r0, [pc, #60]	; (8001868 <LCD_IO_WriteReg+0x48>)
 800182c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001830:	f008 fda2 	bl	800a378 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001834:	4628      	mov	r0, r5
 8001836:	2200      	movs	r2, #0
 8001838:	2104      	movs	r1, #4
 800183a:	f008 fd9d 	bl	800a378 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800183e:	4b0b      	ldr	r3, [pc, #44]	; (800186c <LCD_IO_WriteReg+0x4c>)
 8001840:	480b      	ldr	r0, [pc, #44]	; (8001870 <LCD_IO_WriteReg+0x50>)
 8001842:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001844:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001848:	f10d 0106 	add.w	r1, sp, #6
 800184c:	2201      	movs	r2, #1
 800184e:	f00b f939 	bl	800cac4 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001852:	2201      	movs	r2, #1
 8001854:	2104      	movs	r1, #4
 8001856:	4628      	mov	r0, r5
}
 8001858:	b003      	add	sp, #12
 800185a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800185e:	f008 bd8b 	b.w	800a378 <HAL_GPIO_WritePin>
 8001862:	bf00      	nop
 8001864:	40020800 	.word	0x40020800
 8001868:	40020c00 	.word	0x40020c00
 800186c:	20000008 	.word	0x20000008
 8001870:	200002dc 	.word	0x200002dc

08001874 <LCD_IO_ReadData>:
{
 8001874:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001878:	4e19      	ldr	r6, [pc, #100]	; (80018e0 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800187a:	4f1a      	ldr	r7, [pc, #104]	; (80018e4 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800187c:	f8df 9068 	ldr.w	r9, [pc, #104]	; 80018e8 <LCD_IO_ReadData+0x74>
 8001880:	f8df 8068 	ldr.w	r8, [pc, #104]	; 80018ec <LCD_IO_ReadData+0x78>
{
 8001884:	b083      	sub	sp, #12
 8001886:	460c      	mov	r4, r1
 8001888:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800188a:	2200      	movs	r2, #0
 800188c:	4630      	mov	r0, r6
 800188e:	2104      	movs	r1, #4
 8001890:	f008 fd72 	bl	800a378 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001894:	4638      	mov	r0, r7
 8001896:	2200      	movs	r2, #0
 8001898:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800189c:	f008 fd6c 	bl	800a378 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80018a0:	f8d9 3000 	ldr.w	r3, [r9]
 80018a4:	f8ad 5004 	strh.w	r5, [sp, #4]
 80018a8:	a901      	add	r1, sp, #4
 80018aa:	2201      	movs	r2, #1
 80018ac:	4640      	mov	r0, r8
 80018ae:	f00b f909 	bl	800cac4 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80018b2:	f8d9 3000 	ldr.w	r3, [r9]
 80018b6:	4622      	mov	r2, r4
 80018b8:	a901      	add	r1, sp, #4
 80018ba:	4640      	mov	r0, r8
 80018bc:	f00b fbaa 	bl	800d014 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018c0:	4638      	mov	r0, r7
 80018c2:	2201      	movs	r2, #1
 80018c4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 80018c8:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018ca:	f008 fd55 	bl	800a378 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018ce:	4630      	mov	r0, r6
 80018d0:	2201      	movs	r2, #1
 80018d2:	2104      	movs	r1, #4
 80018d4:	f008 fd50 	bl	800a378 <HAL_GPIO_WritePin>
}
 80018d8:	4620      	mov	r0, r4
 80018da:	b003      	add	sp, #12
 80018dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80018e0:	40020800 	.word	0x40020800
 80018e4:	40020c00 	.word	0x40020c00
 80018e8:	20000008 	.word	0x20000008
 80018ec:	200002dc 	.word	0x200002dc

080018f0 <LCD_Delay>:
  HAL_Delay(Delay);
 80018f0:	f008 bb64 	b.w	8009fbc <HAL_Delay>

080018f4 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80018f4:	4b03      	ldr	r3, [pc, #12]	; (8001904 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80018f6:	6802      	ldr	r2, [r0, #0]
 80018f8:	429a      	cmp	r2, r3
 80018fa:	d000      	beq.n	80018fe <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80018fc:	4770      	bx	lr
    HAL_IncTick();
 80018fe:	f008 bb4b 	b.w	8009f98 <HAL_IncTick>
 8001902:	bf00      	nop
 8001904:	40001000 	.word	0x40001000

08001908 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001908:	4770      	bx	lr
 800190a:	bf00      	nop

0800190c <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 800190c:	b410      	push	{r4}
 800190e:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001910:	4b15      	ldr	r3, [pc, #84]	; (8001968 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001912:	4916      	ldr	r1, [pc, #88]	; (800196c <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001914:	2400      	movs	r4, #0
 8001916:	9400      	str	r4, [sp, #0]
 8001918:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800191a:	f042 0220 	orr.w	r2, r2, #32
 800191e:	631a      	str	r2, [r3, #48]	; 0x30
 8001920:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001922:	f002 0220 	and.w	r2, r2, #32
 8001926:	9200      	str	r2, [sp, #0]
 8001928:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 800192a:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 800192c:	4a10      	ldr	r2, [pc, #64]	; (8001970 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 800192e:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001932:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001934:	6808      	ldr	r0, [r1, #0]
 8001936:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 800193a:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 800193c:	9401      	str	r4, [sp, #4]
 800193e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001940:	f041 0104 	orr.w	r1, r1, #4
 8001944:	6319      	str	r1, [r3, #48]	; 0x30
 8001946:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001948:	f003 0304 	and.w	r3, r3, #4
 800194c:	9301      	str	r3, [sp, #4]
 800194e:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001950:	6813      	ldr	r3, [r2, #0]
 8001952:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001956:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001958:	6813      	ldr	r3, [r2, #0]
 800195a:	f043 030c 	orr.w	r3, r3, #12
 800195e:	6013      	str	r3, [r2, #0]
}
 8001960:	b003      	add	sp, #12
 8001962:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001966:	4770      	bx	lr
 8001968:	40023800 	.word	0x40023800
 800196c:	40021400 	.word	0x40021400
 8001970:	40020800 	.word	0x40020800

08001974 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001974:	b410      	push	{r4}
 8001976:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001978:	4a0e      	ldr	r2, [pc, #56]	; (80019b4 <MEAS_timer_init+0x40>)
 800197a:	2000      	movs	r0, #0
 800197c:	9001      	str	r0, [sp, #4]
 800197e:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001980:	f041 0101 	orr.w	r1, r1, #1
 8001984:	6411      	str	r1, [r2, #64]	; 0x40
 8001986:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001988:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 800198c:	f002 0201 	and.w	r2, r2, #1
 8001990:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001992:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001996:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001998:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800199a:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 800199c:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 800199e:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80019a0:	4905      	ldr	r1, [pc, #20]	; (80019b8 <MEAS_timer_init+0x44>)
 80019a2:	f042 0220 	orr.w	r2, r2, #32
 80019a6:	605a      	str	r2, [r3, #4]
 80019a8:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 80019ac:	b003      	add	sp, #12
 80019ae:	f85d 4b04 	ldr.w	r4, [sp], #4
 80019b2:	4770      	bx	lr
 80019b4:	40023800 	.word	0x40023800
 80019b8:	e000e100 	.word	0xe000e100

080019bc <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 80019bc:	b410      	push	{r4}
 80019be:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 80019c0:	4a36      	ldr	r2, [pc, #216]	; (8001a9c <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 80019c2:	4b37      	ldr	r3, [pc, #220]	; (8001aa0 <MEAS_ADC3_scan_init+0xe4>)
 80019c4:	4c37      	ldr	r4, [pc, #220]	; (8001aa4 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 80019c6:	2100      	movs	r1, #0
 80019c8:	9100      	str	r1, [sp, #0]
 80019ca:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80019cc:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 80019d0:	6450      	str	r0, [r2, #68]	; 0x44
 80019d2:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80019d4:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 80019d8:	9000      	str	r0, [sp, #0]
 80019da:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 80019dc:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80019de:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 80019e2:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 80019e4:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80019e6:	f040 0004 	orr.w	r0, r0, #4
 80019ea:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 80019ec:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80019ee:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 80019f2:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 80019f4:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80019f6:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 80019fa:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 80019fc:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80019fe:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8001a02:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001a04:	6858      	ldr	r0, [r3, #4]
 8001a06:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001a0a:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001a0c:	6898      	ldr	r0, [r3, #8]
 8001a0e:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001a12:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001a14:	6898      	ldr	r0, [r3, #8]
 8001a16:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001a1a:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001a1c:	6898      	ldr	r0, [r3, #8]
 8001a1e:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001a22:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001a24:	9101      	str	r1, [sp, #4]
 8001a26:	6b10      	ldr	r0, [r2, #48]	; 0x30
 8001a28:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 8001a2c:	6310      	str	r0, [r2, #48]	; 0x30
 8001a2e:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8001a30:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001a34:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001a36:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001a3a:	9a01      	ldr	r2, [sp, #4]
 8001a3c:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001a40:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001a42:	f022 0201 	bic.w	r2, r2, #1
 8001a46:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN);     // Wait for DMA to finish
 8001a48:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001a4a:	07d2      	lsls	r2, r2, #31
 8001a4c:	d4fc      	bmi.n	8001a48 <MEAS_ADC3_scan_init+0x8c>
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001a4e:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001a50:	4815      	ldr	r0, [pc, #84]	; (8001aa8 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001a52:	4916      	ldr	r1, [pc, #88]	; (8001aac <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001a54:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001a58:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001a5a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001a5c:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001a60:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 8001a62:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001a64:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001a68:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001a6a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001a6c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001a70:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001a72:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001a74:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a78:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001a7a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001a7c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001a80:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001a82:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001a84:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001a88:	f042 0210 	orr.w	r2, r2, #16
 8001a8c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001a8e:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001a90:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001a92:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001a94:	b003      	add	sp, #12
 8001a96:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001a9a:	4770      	bx	lr
 8001a9c:	40023800 	.word	0x40023800
 8001aa0:	40012200 	.word	0x40012200
 8001aa4:	e000e100 	.word	0xe000e100
 8001aa8:	4001224c 	.word	0x4001224c
 8001aac:	20000334 	.word	0x20000334

08001ab0 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001ab0:	4b1b      	ldr	r3, [pc, #108]	; (8001b20 <DMA2_Stream1_IRQHandler+0x70>)
 8001ab2:	681a      	ldr	r2, [r3, #0]
 8001ab4:	0511      	lsls	r1, r2, #20
 8001ab6:	d400      	bmi.n	8001aba <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8001ab8:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001aba:	4a1a      	ldr	r2, [pc, #104]	; (8001b24 <DMA2_Stream1_IRQHandler+0x74>)
 8001abc:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001ac0:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001ac4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001ac8:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001acc:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001ad0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001ad2:	f022 0201 	bic.w	r2, r2, #1
 8001ad6:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN);	  // Wait for DMA to finish
 8001ad8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001ada:	07d2      	lsls	r2, r2, #31
 8001adc:	d4fc      	bmi.n	8001ad8 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001ade:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001ae0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001ae4:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001ae8:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001aea:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001aec:	490e      	ldr	r1, [pc, #56]	; (8001b28 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001aee:	f023 0301 	bic.w	r3, r3, #1
 8001af2:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001af4:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001af6:	4b0d      	ldr	r3, [pc, #52]	; (8001b2c <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001af8:	f020 0001 	bic.w	r0, r0, #1
 8001afc:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8001afe:	6888      	ldr	r0, [r1, #8]
 8001b00:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001b04:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001b06:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001b08:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001b0c:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8001b0e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001b10:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8001b14:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001b16:	6813      	ldr	r3, [r2, #0]
 8001b18:	f023 0301 	bic.w	r3, r3, #1
 8001b1c:	6013      	str	r3, [r2, #0]
}
 8001b1e:	4770      	bx	lr
 8001b20:	40026400 	.word	0x40026400
 8001b24:	e000e100 	.word	0xe000e100
 8001b28:	40012200 	.word	0x40012200
 8001b2c:	40023800 	.word	0x40023800

08001b30 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8001b30:	b510      	push	{r4, lr}
        buffer[i] = 0;
 8001b32:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001b36:	2100      	movs	r1, #0
 8001b38:	480f      	ldr	r0, [pc, #60]	; (8001b78 <MEAS_start_measure+0x48>)
 8001b3a:	f029 f984 	bl	802ae46 <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 8001b3e:	f7ff ff3d 	bl	80019bc <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001b42:	4a0e      	ldr	r2, [pc, #56]	; (8001b7c <MEAS_start_measure+0x4c>)
 8001b44:	490e      	ldr	r1, [pc, #56]	; (8001b80 <MEAS_start_measure+0x50>)
 8001b46:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001b48:	480e      	ldr	r0, [pc, #56]	; (8001b84 <MEAS_start_measure+0x54>)
 8001b4a:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001b4e:	f043 0301 	orr.w	r3, r3, #1
 8001b52:	6293      	str	r3, [r2, #40]	; 0x28
 8001b54:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001b58:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001b5a:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001b5c:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001b60:	f043 0301 	orr.w	r3, r3, #1
 8001b64:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001b66:	680b      	ldr	r3, [r1, #0]
 8001b68:	f043 0301 	orr.w	r3, r3, #1
 8001b6c:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001b6e:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8001b70:	07db      	lsls	r3, r3, #31
 8001b72:	d4fc      	bmi.n	8001b6e <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8001b74:	4800      	ldr	r0, [pc, #0]	; (8001b78 <MEAS_start_measure+0x48>)
 8001b76:	bd10      	pop	{r4, pc}
 8001b78:	20000334 	.word	0x20000334
 8001b7c:	40026400 	.word	0x40026400
 8001b80:	e000e100 	.word	0xe000e100
 8001b84:	40012200 	.word	0x40012200

08001b88 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001b88:	2004      	movs	r0, #4
 8001b8a:	4770      	bx	lr

08001b8c <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001b8c:	2040      	movs	r0, #64	; 0x40
 8001b8e:	4770      	bx	lr

08001b90 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001b90:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001b94:	4770      	bx	lr
 8001b96:	bf00      	nop

08001b98 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001b98:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001b9a:	4b0e      	ldr	r3, [pc, #56]	; (8001bd4 <HAL_MspInit+0x3c>)
 8001b9c:	2200      	movs	r2, #0
 8001b9e:	9200      	str	r2, [sp, #0]
 8001ba0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001ba2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001ba6:	6459      	str	r1, [r3, #68]	; 0x44
 8001ba8:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001baa:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001bae:	9000      	str	r0, [sp, #0]
 8001bb0:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001bb2:	9201      	str	r2, [sp, #4]
 8001bb4:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001bb6:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001bba:	6418      	str	r0, [r3, #64]	; 0x40
 8001bbc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001bbe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001bc2:	9301      	str	r3, [sp, #4]
 8001bc4:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001bc6:	210f      	movs	r1, #15
 8001bc8:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001bcc:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001bce:	f008 ba19 	b.w	800a004 <HAL_NVIC_SetPriority>
 8001bd2:	bf00      	nop
 8001bd4:	40023800 	.word	0x40023800

08001bd8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001bd8:	4b0b      	ldr	r3, [pc, #44]	; (8001c08 <HAL_CRC_MspInit+0x30>)
 8001bda:	6802      	ldr	r2, [r0, #0]
 8001bdc:	429a      	cmp	r2, r3
 8001bde:	d000      	beq.n	8001be2 <HAL_CRC_MspInit+0xa>
 8001be0:	4770      	bx	lr
{
 8001be2:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001be4:	2200      	movs	r2, #0
 8001be6:	9201      	str	r2, [sp, #4]
 8001be8:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001bec:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001bf0:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001bf4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001bf8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bfa:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001bfe:	9301      	str	r3, [sp, #4]
 8001c00:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001c02:	b002      	add	sp, #8
 8001c04:	4770      	bx	lr
 8001c06:	bf00      	nop
 8001c08:	40023000 	.word	0x40023000

08001c0c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001c0c:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001c10:	4b2e      	ldr	r3, [pc, #184]	; (8001ccc <HAL_I2C_MspInit+0xc0>)
 8001c12:	6802      	ldr	r2, [r0, #0]
{
 8001c14:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c16:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001c18:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c1a:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001c1e:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001c22:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001c24:	d002      	beq.n	8001c2c <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001c26:	b00a      	add	sp, #40	; 0x28
 8001c28:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c2c:	4d28      	ldr	r5, [pc, #160]	; (8001cd0 <HAL_I2C_MspInit+0xc4>)
 8001c2e:	9401      	str	r4, [sp, #4]
 8001c30:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c32:	4828      	ldr	r0, [pc, #160]	; (8001cd4 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c34:	f043 0304 	orr.w	r3, r3, #4
 8001c38:	632b      	str	r3, [r5, #48]	; 0x30
 8001c3a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c3c:	f003 0304 	and.w	r3, r3, #4
 8001c40:	9301      	str	r3, [sp, #4]
 8001c42:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c44:	9402      	str	r4, [sp, #8]
 8001c46:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c48:	f043 0301 	orr.w	r3, r3, #1
 8001c4c:	632b      	str	r3, [r5, #48]	; 0x30
 8001c4e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001c50:	f003 0301 	and.w	r3, r3, #1
 8001c54:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c56:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001c5a:	f04f 0801 	mov.w	r8, #1
 8001c5e:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c62:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c64:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001c66:	2312      	movs	r3, #18
 8001c68:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001c6c:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c70:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c72:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c74:	f008 fa3c 	bl	800a0f0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c78:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c7a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001c7e:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c80:	4815      	ldr	r0, [pc, #84]	; (8001cd8 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001c82:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001c84:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001c88:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c8c:	f008 fa30 	bl	800a0f0 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001c90:	9403      	str	r4, [sp, #12]
 8001c92:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001c94:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001c98:	642b      	str	r3, [r5, #64]	; 0x40
 8001c9a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001c9c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001ca0:	4622      	mov	r2, r4
 8001ca2:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ca4:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001ca6:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ca8:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001caa:	f008 f9ab 	bl	800a004 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001cae:	2048      	movs	r0, #72	; 0x48
 8001cb0:	f008 f9e6 	bl	800a080 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001cb4:	6a2b      	ldr	r3, [r5, #32]
 8001cb6:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001cba:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001cbc:	6a2b      	ldr	r3, [r5, #32]
 8001cbe:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001cc2:	622b      	str	r3, [r5, #32]
}
 8001cc4:	b00a      	add	sp, #40	; 0x28
 8001cc6:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001cca:	bf00      	nop
 8001ccc:	40005c00 	.word	0x40005c00
 8001cd0:	40023800 	.word	0x40023800
 8001cd4:	40020800 	.word	0x40020800
 8001cd8:	40020000 	.word	0x40020000

08001cdc <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001cdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001ce0:	4604      	mov	r4, r0
 8001ce2:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ce4:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001ce6:	2230      	movs	r2, #48	; 0x30
 8001ce8:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cea:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001cee:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001cf2:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001cf4:	f029 f8a7 	bl	802ae46 <memset>
  if(hltdc->Instance==LTDC)
 8001cf8:	4b67      	ldr	r3, [pc, #412]	; (8001e98 <HAL_LTDC_MspInit+0x1bc>)
 8001cfa:	6822      	ldr	r2, [r4, #0]
 8001cfc:	429a      	cmp	r2, r3
 8001cfe:	d002      	beq.n	8001d06 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001d00:	b01a      	add	sp, #104	; 0x68
 8001d02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001d06:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001d08:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001d0a:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001d0c:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d0e:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001d10:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001d14:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001d16:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001d18:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d1a:	f00a fc53 	bl	800c5c4 <HAL_RCCEx_PeriphCLKConfig>
 8001d1e:	2800      	cmp	r0, #0
 8001d20:	f040 80b7 	bne.w	8001e92 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d24:	4b5d      	ldr	r3, [pc, #372]	; (8001e9c <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d26:	485e      	ldr	r0, [pc, #376]	; (8001ea0 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d28:	2400      	movs	r4, #0
 8001d2a:	9401      	str	r4, [sp, #4]
 8001d2c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d2e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001d32:	645a      	str	r2, [r3, #68]	; 0x44
 8001d34:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d36:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001d3a:	9201      	str	r2, [sp, #4]
 8001d3c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d3e:	9402      	str	r4, [sp, #8]
 8001d40:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d42:	f042 0220 	orr.w	r2, r2, #32
 8001d46:	631a      	str	r2, [r3, #48]	; 0x30
 8001d48:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d4a:	f002 0220 	and.w	r2, r2, #32
 8001d4e:	9202      	str	r2, [sp, #8]
 8001d50:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d52:	9403      	str	r4, [sp, #12]
 8001d54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d56:	f042 0201 	orr.w	r2, r2, #1
 8001d5a:	631a      	str	r2, [r3, #48]	; 0x30
 8001d5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d5e:	f002 0201 	and.w	r2, r2, #1
 8001d62:	9203      	str	r2, [sp, #12]
 8001d64:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d66:	9404      	str	r4, [sp, #16]
 8001d68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d6a:	f042 0202 	orr.w	r2, r2, #2
 8001d6e:	631a      	str	r2, [r3, #48]	; 0x30
 8001d70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d72:	f002 0202 	and.w	r2, r2, #2
 8001d76:	9204      	str	r2, [sp, #16]
 8001d78:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001d7a:	9405      	str	r4, [sp, #20]
 8001d7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d7e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001d82:	631a      	str	r2, [r3, #48]	; 0x30
 8001d84:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d86:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001d8a:	9205      	str	r2, [sp, #20]
 8001d8c:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001d8e:	9406      	str	r4, [sp, #24]
 8001d90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d92:	f042 0204 	orr.w	r2, r2, #4
 8001d96:	631a      	str	r2, [r3, #48]	; 0x30
 8001d98:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d9a:	f002 0204 	and.w	r2, r2, #4
 8001d9e:	9206      	str	r2, [sp, #24]
 8001da0:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001da2:	9407      	str	r4, [sp, #28]
 8001da4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001da6:	f042 0208 	orr.w	r2, r2, #8
 8001daa:	631a      	str	r2, [r3, #48]	; 0x30
 8001dac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dae:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001db2:	2600      	movs	r6, #0
 8001db4:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001db6:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001db8:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dba:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001dbc:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001dc0:	2302      	movs	r3, #2
 8001dc2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001dc6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001dca:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001dcc:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001dce:	f008 f98f 	bl	800a0f0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dd2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001dd4:	f641 0258 	movw	r2, #6232	; 0x1858
 8001dd8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dda:	4832      	ldr	r0, [pc, #200]	; (8001ea4 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ddc:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001dde:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001de2:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001de6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dea:	f008 f981 	bl	800a0f0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dee:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001df0:	2203      	movs	r2, #3
 8001df2:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001df4:	482c      	ldr	r0, [pc, #176]	; (8001ea8 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001df6:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001dfa:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001dfe:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e02:	f008 f975 	bl	800a0f0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e06:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e08:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8001e0c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e0e:	4826      	ldr	r0, [pc, #152]	; (8001ea8 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e10:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e12:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e16:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e1a:	f008 f969 	bl	800a0f0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e1e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e20:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8001e24:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e26:	4821      	ldr	r0, [pc, #132]	; (8001eac <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e28:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e2a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e2e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e32:	f008 f95d 	bl	800a0f0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e36:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e38:	22c0      	movs	r2, #192	; 0xc0
 8001e3a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e3c:	481c      	ldr	r0, [pc, #112]	; (8001eb0 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e3e:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e40:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e44:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e48:	f008 f952 	bl	800a0f0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e4c:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e4e:	2208      	movs	r2, #8
 8001e50:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e52:	4818      	ldr	r0, [pc, #96]	; (8001eb4 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e54:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e56:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e5a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e5e:	f008 f947 	bl	800a0f0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e62:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e64:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e66:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e6a:	4810      	ldr	r0, [pc, #64]	; (8001eac <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e6c:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e70:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001e74:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e78:	f008 f93a 	bl	800a0f0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001e7c:	4622      	mov	r2, r4
 8001e7e:	2105      	movs	r1, #5
 8001e80:	2058      	movs	r0, #88	; 0x58
 8001e82:	f008 f8bf 	bl	800a004 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001e86:	2058      	movs	r0, #88	; 0x58
 8001e88:	f008 f8fa 	bl	800a080 <HAL_NVIC_EnableIRQ>
}
 8001e8c:	b01a      	add	sp, #104	; 0x68
 8001e8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8001e92:	f7ff fd39 	bl	8001908 <Error_Handler>
 8001e96:	e745      	b.n	8001d24 <HAL_LTDC_MspInit+0x48>
 8001e98:	40016800 	.word	0x40016800
 8001e9c:	40023800 	.word	0x40023800
 8001ea0:	40021400 	.word	0x40021400
 8001ea4:	40020000 	.word	0x40020000
 8001ea8:	40020400 	.word	0x40020400
 8001eac:	40021800 	.word	0x40021800
 8001eb0:	40020800 	.word	0x40020800
 8001eb4:	40020c00 	.word	0x40020c00

08001eb8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001eb8:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8001eba:	4a1b      	ldr	r2, [pc, #108]	; (8001f28 <HAL_SPI_MspInit+0x70>)
 8001ebc:	6801      	ldr	r1, [r0, #0]
{
 8001ebe:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ec0:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8001ec2:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ec4:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001ec8:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001ecc:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8001ece:	d001      	beq.n	8001ed4 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001ed0:	b008      	add	sp, #32
 8001ed2:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001ed4:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001ed8:	9300      	str	r3, [sp, #0]
 8001eda:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001edc:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001ee0:	6450      	str	r0, [r2, #68]	; 0x44
 8001ee2:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001ee4:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8001ee8:	9000      	str	r0, [sp, #0]
 8001eea:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001eec:	9301      	str	r3, [sp, #4]
 8001eee:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ef0:	480e      	ldr	r0, [pc, #56]	; (8001f2c <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001ef2:	f043 0320 	orr.w	r3, r3, #32
 8001ef6:	6313      	str	r3, [r2, #48]	; 0x30
 8001ef8:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001efa:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8001f20 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001efe:	f003 0320 	and.w	r3, r3, #32
 8001f02:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f04:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f06:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f08:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001f0a:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f0e:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f12:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f14:	f008 f8ec 	bl	800a0f0 <HAL_GPIO_Init>
}
 8001f18:	b008      	add	sp, #32
 8001f1a:	bd10      	pop	{r4, pc}
 8001f1c:	f3af 8000 	nop.w
 8001f20:	00000380 	.word	0x00000380
 8001f24:	00000002 	.word	0x00000002
 8001f28:	40015000 	.word	0x40015000
 8001f2c:	40021400 	.word	0x40021400

08001f30 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001f30:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 8001f32:	4a21      	ldr	r2, [pc, #132]	; (8001fb8 <HAL_TIM_Base_MspInit+0x88>)
 8001f34:	6803      	ldr	r3, [r0, #0]
 8001f36:	4293      	cmp	r3, r2
{
 8001f38:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 8001f3a:	d008      	beq.n	8001f4e <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 8001f3c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001f40:	d023      	beq.n	8001f8a <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8001f42:	4a1e      	ldr	r2, [pc, #120]	; (8001fbc <HAL_TIM_Base_MspInit+0x8c>)
 8001f44:	4293      	cmp	r3, r2
 8001f46:	d011      	beq.n	8001f6c <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001f48:	b005      	add	sp, #20
 8001f4a:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001f4e:	4b1c      	ldr	r3, [pc, #112]	; (8001fc0 <HAL_TIM_Base_MspInit+0x90>)
 8001f50:	2200      	movs	r2, #0
 8001f52:	9201      	str	r2, [sp, #4]
 8001f54:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f56:	f042 0201 	orr.w	r2, r2, #1
 8001f5a:	645a      	str	r2, [r3, #68]	; 0x44
 8001f5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f5e:	f003 0301 	and.w	r3, r3, #1
 8001f62:	9301      	str	r3, [sp, #4]
 8001f64:	9b01      	ldr	r3, [sp, #4]
}
 8001f66:	b005      	add	sp, #20
 8001f68:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001f6c:	4b14      	ldr	r3, [pc, #80]	; (8001fc0 <HAL_TIM_Base_MspInit+0x90>)
 8001f6e:	2200      	movs	r2, #0
 8001f70:	9203      	str	r2, [sp, #12]
 8001f72:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001f74:	f042 0202 	orr.w	r2, r2, #2
 8001f78:	641a      	str	r2, [r3, #64]	; 0x40
 8001f7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f7c:	f003 0302 	and.w	r3, r3, #2
 8001f80:	9303      	str	r3, [sp, #12]
 8001f82:	9b03      	ldr	r3, [sp, #12]
}
 8001f84:	b005      	add	sp, #20
 8001f86:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001f8a:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8001f8e:	2200      	movs	r2, #0
 8001f90:	9202      	str	r2, [sp, #8]
 8001f92:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001f94:	f041 0101 	orr.w	r1, r1, #1
 8001f98:	6419      	str	r1, [r3, #64]	; 0x40
 8001f9a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f9c:	f003 0301 	and.w	r3, r3, #1
 8001fa0:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8001fa2:	201c      	movs	r0, #28
 8001fa4:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001fa6:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8001fa8:	f008 f82c 	bl	800a004 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001fac:	201c      	movs	r0, #28
}
 8001fae:	b005      	add	sp, #20
 8001fb0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001fb4:	f008 b864 	b.w	800a080 <HAL_NVIC_EnableIRQ>
 8001fb8:	40010000 	.word	0x40010000
 8001fbc:	40000400 	.word	0x40000400
 8001fc0:	40023800 	.word	0x40023800

08001fc4 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fc4:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001fc6:	4b2b      	ldr	r3, [pc, #172]	; (8002074 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001fc8:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8001fca:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001fcc:	2200      	movs	r2, #0
 8001fce:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001fd0:	2c00      	cmp	r4, #0
 8001fd2:	d14c      	bne.n	800206e <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8001fd4:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fd6:	4a28      	ldr	r2, [pc, #160]	; (8002078 <HAL_SDRAM_MspInit+0xb4>)
 8001fd8:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8001fda:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fdc:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fde:	4827      	ldr	r0, [pc, #156]	; (800207c <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fe0:	433b      	orrs	r3, r7
 8001fe2:	6393      	str	r3, [r2, #56]	; 0x38
 8001fe4:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001fe6:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fe8:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fea:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001fec:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8001ff0:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ff2:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001ff4:	2302      	movs	r3, #2
 8001ff6:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ffa:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001ffe:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002000:	f008 f876 	bl	800a0f0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002004:	481e      	ldr	r0, [pc, #120]	; (8002080 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002006:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002008:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800200a:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800200c:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002010:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002014:	f008 f86c 	bl	800a0f0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002018:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800201c:	4819      	ldr	r0, [pc, #100]	; (8002084 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800201e:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002020:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002022:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002026:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800202a:	f008 f861 	bl	800a0f0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800202e:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002032:	4815      	ldr	r0, [pc, #84]	; (8002088 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002034:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002036:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002038:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800203c:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002040:	f008 f856 	bl	800a0f0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002044:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002048:	4810      	ldr	r0, [pc, #64]	; (800208c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 800204a:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800204c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800204e:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002052:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002056:	f008 f84b 	bl	800a0f0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800205a:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800205c:	480c      	ldr	r0, [pc, #48]	; (8002090 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800205e:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002060:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002062:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002066:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002068:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800206a:	f008 f841 	bl	800a0f0 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800206e:	b009      	add	sp, #36	; 0x24
 8002070:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002072:	bf00      	nop
 8002074:	20000734 	.word	0x20000734
 8002078:	40023800 	.word	0x40023800
 800207c:	40021400 	.word	0x40021400
 8002080:	40020800 	.word	0x40020800
 8002084:	40021800 	.word	0x40021800
 8002088:	40021000 	.word	0x40021000
 800208c:	40020c00 	.word	0x40020c00
 8002090:	40020400 	.word	0x40020400

08002094 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002094:	b570      	push	{r4, r5, r6, lr}
 8002096:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002098:	4b23      	ldr	r3, [pc, #140]	; (8002128 <HAL_InitTick+0x94>)
 800209a:	2200      	movs	r2, #0
 800209c:	9202      	str	r2, [sp, #8]
 800209e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80020a0:	f042 0210 	orr.w	r2, r2, #16
 80020a4:	641a      	str	r2, [r3, #64]	; 0x40
 80020a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020a8:	f003 0310 	and.w	r3, r3, #16
 80020ac:	9302      	str	r3, [sp, #8]
{
 80020ae:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80020b0:	a901      	add	r1, sp, #4
 80020b2:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80020b4:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80020b6:	f00a fa63 	bl	800c580 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80020ba:	9b06      	ldr	r3, [sp, #24]
 80020bc:	b9d3      	cbnz	r3, 80020f4 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80020be:	f00a fa4f 	bl	800c560 <HAL_RCC_GetPCLK1Freq>
 80020c2:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020c4:	4a19      	ldr	r2, [pc, #100]	; (800212c <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80020c6:	4c1a      	ldr	r4, [pc, #104]	; (8002130 <HAL_InitTick+0x9c>)
 80020c8:	491a      	ldr	r1, [pc, #104]	; (8002134 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80020ca:	fba2 2303 	umull	r2, r3, r2, r3
 80020ce:	0c9b      	lsrs	r3, r3, #18
 80020d0:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 80020d2:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80020d4:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80020d8:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020da:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 80020de:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020e0:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80020e2:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80020e4:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 80020e6:	f00b f87b 	bl	800d1e0 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80020ea:	4606      	mov	r6, r0
 80020ec:	b130      	cbz	r0, 80020fc <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 80020ee:	4630      	mov	r0, r6
 80020f0:	b008      	add	sp, #32
 80020f2:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80020f4:	f00a fa34 	bl	800c560 <HAL_RCC_GetPCLK1Freq>
 80020f8:	0043      	lsls	r3, r0, #1
 80020fa:	e7e3      	b.n	80020c4 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80020fc:	4620      	mov	r0, r4
 80020fe:	f00b f8fd 	bl	800d2fc <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002102:	4606      	mov	r6, r0
 8002104:	2800      	cmp	r0, #0
 8002106:	d1f2      	bne.n	80020ee <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002108:	2036      	movs	r0, #54	; 0x36
 800210a:	f007 ffb9 	bl	800a080 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800210e:	2d0f      	cmp	r5, #15
 8002110:	d901      	bls.n	8002116 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8002112:	2601      	movs	r6, #1
 8002114:	e7eb      	b.n	80020ee <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002116:	4632      	mov	r2, r6
 8002118:	4629      	mov	r1, r5
 800211a:	2036      	movs	r0, #54	; 0x36
 800211c:	f007 ff72 	bl	800a004 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002120:	4b05      	ldr	r3, [pc, #20]	; (8002138 <HAL_InitTick+0xa4>)
 8002122:	601d      	str	r5, [r3, #0]
 8002124:	e7e3      	b.n	80020ee <HAL_InitTick+0x5a>
 8002126:	bf00      	nop
 8002128:	40023800 	.word	0x40023800
 800212c:	431bde83 	.word	0x431bde83
 8002130:	20000738 	.word	0x20000738
 8002134:	40001000 	.word	0x40001000
 8002138:	20000080 	.word	0x20000080

0800213c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 800213c:	4770      	bx	lr
 800213e:	bf00      	nop

08002140 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002140:	e7fe      	b.n	8002140 <HardFault_Handler>
 8002142:	bf00      	nop

08002144 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002144:	e7fe      	b.n	8002144 <MemManage_Handler>
 8002146:	bf00      	nop

08002148 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002148:	e7fe      	b.n	8002148 <BusFault_Handler>
 800214a:	bf00      	nop

0800214c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800214c:	e7fe      	b.n	800214c <UsageFault_Handler>
 800214e:	bf00      	nop

08002150 <DebugMon_Handler>:
 8002150:	4770      	bx	lr
 8002152:	bf00      	nop

08002154 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002154:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8002156:	20c8      	movs	r0, #200	; 0xc8
 8002158:	f007 ff30 	bl	8009fbc <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800215c:	4804      	ldr	r0, [pc, #16]	; (8002170 <EXTI3_IRQHandler+0x1c>)
 800215e:	2200      	movs	r2, #0
 8002160:	2120      	movs	r1, #32
 8002162:	f008 f909 	bl	800a378 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8002166:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 800216a:	2008      	movs	r0, #8
 800216c:	f008 b914 	b.w	800a398 <HAL_GPIO_EXTI_IRQHandler>
 8002170:	40021000 	.word	0x40021000

08002174 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002174:	4801      	ldr	r0, [pc, #4]	; (800217c <TIM6_DAC_IRQHandler+0x8>)
 8002176:	f00b b905 	b.w	800d384 <HAL_TIM_IRQHandler>
 800217a:	bf00      	nop
 800217c:	20000738 	.word	0x20000738

08002180 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8002180:	4801      	ldr	r0, [pc, #4]	; (8002188 <I2C3_EV_IRQHandler+0x8>)
 8002182:	f009 b869 	b.w	800b258 <HAL_I2C_EV_IRQHandler>
 8002186:	bf00      	nop
 8002188:	200001ac 	.word	0x200001ac

0800218c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 800218c:	4801      	ldr	r0, [pc, #4]	; (8002194 <LTDC_IRQHandler+0x8>)
 800218e:	f009 bddd 	b.w	800bd4c <HAL_LTDC_IRQHandler>
 8002192:	bf00      	nop
 8002194:	20000200 	.word	0x20000200

08002198 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002198:	2001      	movs	r0, #1
 800219a:	4770      	bx	lr

0800219c <_kill>:

int _kill(int pid, int sig)
{
 800219c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800219e:	f028 ff4b 	bl	802b038 <__errno>
 80021a2:	2316      	movs	r3, #22
 80021a4:	6003      	str	r3, [r0, #0]
	return -1;
}
 80021a6:	f04f 30ff 	mov.w	r0, #4294967295
 80021aa:	bd08      	pop	{r3, pc}

080021ac <_exit>:

void _exit (int status)
{
 80021ac:	b508      	push	{r3, lr}
	errno = EINVAL;
 80021ae:	f028 ff43 	bl	802b038 <__errno>
 80021b2:	2316      	movs	r3, #22
 80021b4:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80021b6:	e7fe      	b.n	80021b6 <_exit+0xa>

080021b8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80021b8:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021ba:	1e16      	subs	r6, r2, #0
 80021bc:	dd07      	ble.n	80021ce <_read+0x16>
 80021be:	460c      	mov	r4, r1
 80021c0:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 80021c2:	f3af 8000 	nop.w
 80021c6:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021ca:	42a5      	cmp	r5, r4
 80021cc:	d1f9      	bne.n	80021c2 <_read+0xa>
	}

return len;
}
 80021ce:	4630      	mov	r0, r6
 80021d0:	bd70      	pop	{r4, r5, r6, pc}
 80021d2:	bf00      	nop

080021d4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80021d4:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021d6:	1e16      	subs	r6, r2, #0
 80021d8:	dd07      	ble.n	80021ea <_write+0x16>
 80021da:	460c      	mov	r4, r1
 80021dc:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 80021de:	f814 0b01 	ldrb.w	r0, [r4], #1
 80021e2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80021e6:	42ac      	cmp	r4, r5
 80021e8:	d1f9      	bne.n	80021de <_write+0xa>
	}
	return len;
}
 80021ea:	4630      	mov	r0, r6
 80021ec:	bd70      	pop	{r4, r5, r6, pc}
 80021ee:	bf00      	nop

080021f0 <_close>:

int _close(int file)
{
	return -1;
}
 80021f0:	f04f 30ff 	mov.w	r0, #4294967295
 80021f4:	4770      	bx	lr
 80021f6:	bf00      	nop

080021f8 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80021f8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80021fc:	604b      	str	r3, [r1, #4]
	return 0;
}
 80021fe:	2000      	movs	r0, #0
 8002200:	4770      	bx	lr
 8002202:	bf00      	nop

08002204 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002204:	2001      	movs	r0, #1
 8002206:	4770      	bx	lr

08002208 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002208:	2000      	movs	r0, #0
 800220a:	4770      	bx	lr

0800220c <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800220c:	4a0b      	ldr	r2, [pc, #44]	; (800223c <_sbrk+0x30>)
{
 800220e:	b508      	push	{r3, lr}
 8002210:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002212:	6810      	ldr	r0, [r2, #0]
 8002214:	b128      	cbz	r0, 8002222 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8002216:	4403      	add	r3, r0
 8002218:	4669      	mov	r1, sp
 800221a:	428b      	cmp	r3, r1
 800221c:	d807      	bhi.n	800222e <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 800221e:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002220:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8002222:	4807      	ldr	r0, [pc, #28]	; (8002240 <_sbrk+0x34>)
 8002224:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002226:	4403      	add	r3, r0
 8002228:	4669      	mov	r1, sp
 800222a:	428b      	cmp	r3, r1
 800222c:	d9f7      	bls.n	800221e <_sbrk+0x12>
		errno = ENOMEM;
 800222e:	f028 ff03 	bl	802b038 <__errno>
 8002232:	230c      	movs	r3, #12
 8002234:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002236:	f04f 30ff 	mov.w	r0, #4294967295
}
 800223a:	bd08      	pop	{r3, pc}
 800223c:	20000780 	.word	0x20000780
 8002240:	200139f0 	.word	0x200139f0

08002244 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8002244:	4770      	bx	lr
 8002246:	bf00      	nop

08002248 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8002248:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 800224a:	f000 fba9 	bl	80029a0 <touchgfx_components_init>
  touchgfx_init();
}
 800224e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8002252:	f000 bb33 	b.w	80028bc <touchgfx_init>
 8002256:	bf00      	nop

08002258 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8002258:	f000 bba4 	b.w	80029a4 <touchgfx_taskEntry>

0800225c <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800225c:	4770      	bx	lr

0800225e <_ZN20STM32TouchControllerD0Ev>:
 800225e:	b510      	push	{r4, lr}
 8002260:	2104      	movs	r1, #4
 8002262:	4604      	mov	r4, r0
 8002264:	f027 fd03 	bl	8029c6e <_ZdlPvj>
 8002268:	4620      	mov	r0, r4
 800226a:	bd10      	pop	{r4, pc}

0800226c <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 800226c:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800226e:	4b0c      	ldr	r3, [pc, #48]	; (80022a0 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8002270:	4c0c      	ldr	r4, [pc, #48]	; (80022a4 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8002272:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8002274:	4b0c      	ldr	r3, [pc, #48]	; (80022a8 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8002276:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8002278:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800227a:	6863      	ldr	r3, [r4, #4]
 800227c:	4798      	blx	r3
 800227e:	f640 0311 	movw	r3, #2065	; 0x811
 8002282:	4298      	cmp	r0, r3
 8002284:	d10a      	bne.n	800229c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8002286:	4d09      	ldr	r5, [pc, #36]	; (80022ac <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8002288:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800228a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 800228c:	2082      	movs	r0, #130	; 0x82
 800228e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8002290:	682b      	ldr	r3, [r5, #0]
 8002292:	2082      	movs	r0, #130	; 0x82
 8002294:	68db      	ldr	r3, [r3, #12]
 8002296:	4798      	blx	r3
 8002298:	2000      	movs	r0, #0
    }

    return ret;
}
 800229a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 800229c:	2001      	movs	r0, #1
 800229e:	e7fc      	b.n	800229a <_Z11BSP_TS_Inittt+0x2e>
 80022a0:	20000784 	.word	0x20000784
 80022a4:	20000050 	.word	0x20000050
 80022a8:	20000786 	.word	0x20000786
 80022ac:	20000788 	.word	0x20000788

080022b0 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 80022b0:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80022b4:	20f0      	movs	r0, #240	; 0xf0
 80022b6:	f7ff bfd9 	b.w	800226c <_Z11BSP_TS_Inittt>
	...

080022bc <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 80022bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80022be:	4d33      	ldr	r5, [pc, #204]	; (800238c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 80022c0:	682b      	ldr	r3, [r5, #0]
{
 80022c2:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80022c4:	691b      	ldr	r3, [r3, #16]
 80022c6:	2082      	movs	r0, #130	; 0x82
 80022c8:	4798      	blx	r3
 80022ca:	b280      	uxth	r0, r0
 80022cc:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 80022ce:	2800      	cmp	r0, #0
 80022d0:	d04a      	beq.n	8002368 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 80022d2:	682b      	ldr	r3, [r5, #0]
 80022d4:	f10d 0206 	add.w	r2, sp, #6
 80022d8:	695b      	ldr	r3, [r3, #20]
 80022da:	a901      	add	r1, sp, #4
 80022dc:	2082      	movs	r0, #130	; 0x82
 80022de:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 80022e0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80022e4:	f640 6274 	movw	r2, #3700	; 0xe74
 80022e8:	4293      	cmp	r3, r2
 80022ea:	d93f      	bls.n	800236c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 80022ec:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 80022f0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80022f4:	1ad2      	subs	r2, r2, r3
 80022f6:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 80022f8:	2a0a      	cmp	r2, #10
 80022fa:	d93d      	bls.n	8002378 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 80022fc:	230b      	movs	r3, #11
 80022fe:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8002302:	4b23      	ldr	r3, [pc, #140]	; (8002390 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8002304:	881b      	ldrh	r3, [r3, #0]
 8002306:	429a      	cmp	r2, r3
 8002308:	d901      	bls.n	800230e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 800230a:	3b01      	subs	r3, #1
 800230c:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800230e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8002312:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8002316:	428b      	cmp	r3, r1
 8002318:	d830      	bhi.n	800237c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 800231a:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 800231e:	330e      	adds	r3, #14
 8002320:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8002322:	210f      	movs	r1, #15
 8002324:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8002328:	491a      	ldr	r1, [pc, #104]	; (8002394 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 800232a:	8809      	ldrh	r1, [r1, #0]
 800232c:	428b      	cmp	r3, r1
 800232e:	d901      	bls.n	8002334 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8002330:	3901      	subs	r1, #1
 8002332:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002334:	4e18      	ldr	r6, [pc, #96]	; (8002398 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002336:	4d19      	ldr	r5, [pc, #100]	; (800239c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002338:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 800233a:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 800233c:	4283      	cmp	r3, r0
 800233e:	b281      	uxth	r1, r0
 8002340:	bf8c      	ite	hi
 8002342:	1a59      	subhi	r1, r3, r1
 8002344:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002346:	b2b8      	uxth	r0, r7
 8002348:	42ba      	cmp	r2, r7
 800234a:	bf8c      	ite	hi
 800234c:	1a10      	subhi	r0, r2, r0
 800234e:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002350:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002352:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8002354:	4401      	add	r1, r0
 8002356:	2905      	cmp	r1, #5
        {
            _x = x;
 8002358:	bfc8      	it	gt
 800235a:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 800235c:	6833      	ldr	r3, [r6, #0]
            _y = y;
 800235e:	bfc8      	it	gt
 8002360:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8002362:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8002364:	682b      	ldr	r3, [r5, #0]
 8002366:	80a3      	strh	r3, [r4, #4]
    }
}
 8002368:	b003      	add	sp, #12
 800236a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 800236c:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 800236e:	bf9c      	itt	ls
 8002370:	23b4      	movls	r3, #180	; 0xb4
 8002372:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8002376:	e7bb      	b.n	80022f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8002378:	2200      	movs	r2, #0
 800237a:	e7c8      	b.n	800230e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 800237c:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8002380:	3308      	adds	r3, #8
 8002382:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8002384:	2b0e      	cmp	r3, #14
 8002386:	d8cc      	bhi.n	8002322 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8002388:	2300      	movs	r3, #0
 800238a:	e7d3      	b.n	8002334 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 800238c:	20000788 	.word	0x20000788
 8002390:	20000786 	.word	0x20000786
 8002394:	20000784 	.word	0x20000784
 8002398:	2000078c 	.word	0x2000078c
 800239c:	20000790 	.word	0x20000790

080023a0 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80023a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80023a2:	4668      	mov	r0, sp
{
 80023a4:	460d      	mov	r5, r1
 80023a6:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 80023a8:	f7ff ff88 	bl	80022bc <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 80023ac:	f8bd 0000 	ldrh.w	r0, [sp]
 80023b0:	b148      	cbz	r0, 80023c6 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 80023b2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80023b6:	602b      	str	r3, [r5, #0]
        y = state.Y;
 80023b8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80023bc:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 80023be:	4b03      	ldr	r3, [pc, #12]	; (80023cc <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 80023c0:	223c      	movs	r2, #60	; 0x3c
 80023c2:	601a      	str	r2, [r3, #0]
        return true;
 80023c4:	2001      	movs	r0, #1
}
 80023c6:	b003      	add	sp, #12
 80023c8:	bd30      	pop	{r4, r5, pc}
 80023ca:	bf00      	nop
 80023cc:	2000000c 	.word	0x2000000c

080023d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 80023d0:	b110      	cbz	r0, 80023d8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 80023d2:	2802      	cmp	r0, #2
 80023d4:	d009      	beq.n	80023ea <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 80023d6:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 80023d8:	4b07      	ldr	r3, [pc, #28]	; (80023f8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 80023da:	681a      	ldr	r2, [r3, #0]
 80023dc:	fab2 f282 	clz	r2, r2
 80023e0:	0952      	lsrs	r2, r2, #5
 80023e2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 80023e4:	4805      	ldr	r0, [pc, #20]	; (80023fc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 80023e6:	f007 bfc7 	b.w	800a378 <HAL_GPIO_WritePin>
 80023ea:	4b03      	ldr	r3, [pc, #12]	; (80023f8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 80023ec:	689a      	ldr	r2, [r3, #8]
 80023ee:	fab2 f282 	clz	r2, r2
 80023f2:	0952      	lsrs	r2, r2, #5
 80023f4:	2110      	movs	r1, #16
 80023f6:	e7f5      	b.n	80023e4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 80023f8:	20000794 	.word	0x20000794
 80023fc:	40021000 	.word	0x40021000

08002400 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8002400:	b110      	cbz	r0, 8002408 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8002402:	2802      	cmp	r0, #2
 8002404:	d009      	beq.n	800241a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8002406:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8002408:	4b07      	ldr	r3, [pc, #28]	; (8002428 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 800240a:	681a      	ldr	r2, [r3, #0]
 800240c:	3a00      	subs	r2, #0
 800240e:	bf18      	it	ne
 8002410:	2201      	movne	r2, #1
 8002412:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8002414:	4805      	ldr	r0, [pc, #20]	; (800242c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8002416:	f007 bfaf 	b.w	800a378 <HAL_GPIO_WritePin>
 800241a:	4b03      	ldr	r3, [pc, #12]	; (8002428 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 800241c:	689a      	ldr	r2, [r3, #8]
 800241e:	3a00      	subs	r2, #0
 8002420:	bf18      	it	ne
 8002422:	2201      	movne	r2, #1
 8002424:	2110      	movs	r1, #16
 8002426:	e7f5      	b.n	8002414 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8002428:	20000794 	.word	0x20000794
 800242c:	40021000 	.word	0x40021000

08002430 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8002430:	b110      	cbz	r0, 8002438 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8002432:	2802      	cmp	r0, #2
 8002434:	d004      	beq.n	8002440 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8002436:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002438:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800243a:	4802      	ldr	r0, [pc, #8]	; (8002444 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 800243c:	f007 bfa0 	b.w	800a380 <HAL_GPIO_TogglePin>
 8002440:	2110      	movs	r1, #16
 8002442:	e7fa      	b.n	800243a <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8002444:	40021000 	.word	0x40021000

08002448 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8002448:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800244a:	b130      	cbz	r0, 800245a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 800244c:	2802      	cmp	r0, #2
 800244e:	d009      	beq.n	8002464 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8002450:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8002452:	1e43      	subs	r3, r0, #1
 8002454:	4258      	negs	r0, r3
 8002456:	4158      	adcs	r0, r3
 8002458:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800245a:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800245c:	4802      	ldr	r0, [pc, #8]	; (8002468 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 800245e:	f007 ff85 	bl	800a36c <HAL_GPIO_ReadPin>
        break;
 8002462:	e7f6      	b.n	8002452 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002464:	2110      	movs	r1, #16
 8002466:	e7f9      	b.n	800245c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8002468:	40021000 	.word	0x40021000

0800246c <_ZN8touchgfx4GPIO4initEv>:
{
 800246c:	b570      	push	{r4, r5, r6, lr}
 800246e:	4d08      	ldr	r5, [pc, #32]	; (8002490 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8002470:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8002472:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8002474:	b2e0      	uxtb	r0, r4
 8002476:	f7ff ffe7 	bl	8002448 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800247a:	b118      	cbz	r0, 8002484 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 800247c:	682b      	ldr	r3, [r5, #0]
 800247e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8002480:	bf18      	it	ne
 8002482:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8002484:	3401      	adds	r4, #1
 8002486:	2c05      	cmp	r4, #5
 8002488:	f105 0504 	add.w	r5, r5, #4
 800248c:	d1f2      	bne.n	8002474 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800248e:	bd70      	pop	{r4, r5, r6, pc}
 8002490:	20000794 	.word	0x20000794

08002494 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8002494:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8002496:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 800249a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 800249e:	4770      	bx	lr

080024a0 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80024a0:	2000      	movs	r0, #0
 80024a2:	4770      	bx	lr

080024a4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80024a4:	4b03      	ldr	r3, [pc, #12]	; (80024b4 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80024a6:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80024a8:	3900      	subs	r1, #0
 80024aa:	bf18      	it	ne
 80024ac:	2101      	movne	r1, #1
 80024ae:	7019      	strb	r1, [r3, #0]
    }
 80024b0:	4770      	bx	lr
 80024b2:	bf00      	nop
 80024b4:	20012db3 	.word	0x20012db3

080024b8 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80024b8:	2000      	movs	r0, #0
 80024ba:	4770      	bx	lr

080024bc <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80024bc:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80024be:	b10b      	cbz	r3, 80024c4 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80024c0:	4608      	mov	r0, r1
 80024c2:	4718      	bx	r3
        }
    }
 80024c4:	4770      	bx	lr

080024c6 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80024c6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80024ca:	4770      	bx	lr

080024cc <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80024cc:	6840      	ldr	r0, [r0, #4]
 80024ce:	6803      	ldr	r3, [r0, #0]
 80024d0:	699b      	ldr	r3, [r3, #24]
 80024d2:	4718      	bx	r3

080024d4 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80024d4:	4770      	bx	lr

080024d6 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80024d6:	4770      	bx	lr

080024d8 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80024d8:	4770      	bx	lr
	...

080024dc <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 80024dc:	b510      	push	{r4, lr}
 80024de:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80024e0:	f000 fb4c 	bl	8002b7c <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 80024e4:	6823      	ldr	r3, [r4, #0]
 80024e6:	4903      	ldr	r1, [pc, #12]	; (80024f4 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 80024e8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80024ec:	4620      	mov	r0, r4
}
 80024ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 80024f2:	4718      	bx	r3
 80024f4:	d0000000 	.word	0xd0000000

080024f8 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80024f8:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80024fa:	6803      	ldr	r3, [r0, #0]
{
 80024fc:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80024fe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8002502:	4798      	blx	r3
    enableInterrupts();
 8002504:	6823      	ldr	r3, [r4, #0]
 8002506:	4620      	mov	r0, r4
 8002508:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800250a:	4798      	blx	r3

    OSWrappers::waitForVSync();
 800250c:	f000 f8ec 	bl	80026e8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8002510:	6823      	ldr	r3, [r4, #0]
 8002512:	4620      	mov	r0, r4
 8002514:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002516:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8002518:	2029      	movs	r0, #41	; 0x29
 800251a:	f7ff f981 	bl	8001820 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800251e:	f000 f8e3 	bl	80026e8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8002522:	6823      	ldr	r3, [r4, #0]
 8002524:	4620      	mov	r0, r4
 8002526:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002528:	4798      	blx	r3
    for (;;)
 800252a:	e7f8      	b.n	800251e <_ZN11TouchGFXHAL9taskEntryEv+0x26>

0800252c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800252c:	b510      	push	{r4, lr}
 800252e:	4604      	mov	r4, r0
        swapFrameBuffers();
 8002530:	f00f f8b8 	bl	80116a4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8002534:	6823      	ldr	r3, [r4, #0]
 8002536:	4620      	mov	r0, r4
 8002538:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 800253c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8002540:	4718      	bx	r3

08002542 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8002542:	f000 bb0d 	b.w	8002b60 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08002546 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8002546:	f000 bb11 	b.w	8002b6c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

0800254a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800254a:	f000 bb35 	b.w	8002bb8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800254e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800254e:	f000 badd 	b.w	8002b0c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08002552 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8002552:	f000 bae3 	b.w	8002b1c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08002556 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8002556:	f000 bb3b 	b.w	8002bd0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

0800255a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800255a:	f000 bae7 	b.w	8002b2c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

0800255e <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800255e:	f00e bb0d 	b.w	8010b7c <_ZN8touchgfx3HAL16flushFrameBufferEv>

08002562 <_ZN11TouchGFXHALD0Ev>:
 8002562:	b510      	push	{r4, lr}
 8002564:	217c      	movs	r1, #124	; 0x7c
 8002566:	4604      	mov	r4, r0
 8002568:	f027 fb81 	bl	8029c6e <_ZdlPvj>
 800256c:	4620      	mov	r0, r4
 800256e:	bd10      	pop	{r4, pc}

08002570 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8002570:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8002574:	b11b      	cbz	r3, 800257e <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8002576:	6840      	ldr	r0, [r0, #4]
 8002578:	6803      	ldr	r3, [r0, #0]
 800257a:	681b      	ldr	r3, [r3, #0]
 800257c:	4718      	bx	r3
    }
 800257e:	4618      	mov	r0, r3
 8002580:	4770      	bx	lr
	...

08002584 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8002584:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8002586:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 800258a:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 800258e:	4b0c      	ldr	r3, [pc, #48]	; (80025c0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8002590:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8002592:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8002594:	d009      	beq.n	80025aa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8002596:	b93a      	cbnz	r2, 80025a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002598:	4a0a      	ldr	r2, [pc, #40]	; (80025c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 800259a:	490b      	ldr	r1, [pc, #44]	; (80025c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800259c:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800259e:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80025a0:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80025a2:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 80025a4:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 80025a6:	701a      	strb	r2, [r3, #0]
    }
 80025a8:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80025aa:	2a00      	cmp	r2, #0
 80025ac:	d0fc      	beq.n	80025a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80025ae:	4a05      	ldr	r2, [pc, #20]	; (80025c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 80025b0:	4905      	ldr	r1, [pc, #20]	; (80025c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80025b2:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80025b4:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80025b6:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80025b8:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80025ba:	2200      	movs	r2, #0
 80025bc:	e7f3      	b.n	80025a6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80025be:	bf00      	nop
 80025c0:	20012dac 	.word	0x20012dac
 80025c4:	20012da8 	.word	0x20012da8
 80025c8:	20012daa 	.word	0x20012daa

080025cc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80025cc:	b570      	push	{r4, r5, r6, lr}
 80025ce:	460d      	mov	r5, r1
 80025d0:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80025d2:	b935      	cbnz	r5, 80025e2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80025d4:	4b09      	ldr	r3, [pc, #36]	; (80025fc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80025d6:	4a0a      	ldr	r2, [pc, #40]	; (8002600 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80025d8:	480a      	ldr	r0, [pc, #40]	; (8002604 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80025da:	f240 21d2 	movw	r1, #722	; 0x2d2
 80025de:	f028 fa2d 	bl	802aa3c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80025e2:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80025e6:	4b08      	ldr	r3, [pc, #32]	; (8002608 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80025e8:	3a00      	subs	r2, #0
 80025ea:	bf18      	it	ne
 80025ec:	2201      	movne	r2, #1
 80025ee:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80025f0:	6803      	ldr	r3, [r0, #0]
    }
 80025f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80025f6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80025fa:	4718      	bx	r3
 80025fc:	0802bc88 	.word	0x0802bc88
 8002600:	0802bcc0 	.word	0x0802bcc0
 8002604:	0802bd0e 	.word	0x0802bd0e
 8002608:	20012db2 	.word	0x20012db2

0800260c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800260c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800260e:	4b09      	ldr	r3, [pc, #36]	; (8002634 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8002610:	881b      	ldrh	r3, [r3, #0]
 8002612:	428b      	cmp	r3, r1
 8002614:	d803      	bhi.n	800261e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8002616:	4b08      	ldr	r3, [pc, #32]	; (8002638 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8002618:	881b      	ldrh	r3, [r3, #0]
 800261a:	4293      	cmp	r3, r2
 800261c:	d905      	bls.n	800262a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800261e:	4b07      	ldr	r3, [pc, #28]	; (800263c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8002620:	4a07      	ldr	r2, [pc, #28]	; (8002640 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8002622:	4808      	ldr	r0, [pc, #32]	; (8002644 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8002624:	219e      	movs	r1, #158	; 0x9e
 8002626:	f028 fa09 	bl	802aa3c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800262a:	4b07      	ldr	r3, [pc, #28]	; (8002648 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 800262c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800262e:	4b07      	ldr	r3, [pc, #28]	; (800264c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8002630:	801a      	strh	r2, [r3, #0]
    }
 8002632:	bd08      	pop	{r3, pc}
 8002634:	20012da8 	.word	0x20012da8
 8002638:	20012daa 	.word	0x20012daa
 800263c:	0802bd53 	.word	0x0802bd53
 8002640:	0802bdb6 	.word	0x0802bdb6
 8002644:	0802bd0e 	.word	0x0802bd0e
 8002648:	20012dae 	.word	0x20012dae
 800264c:	20012db0 	.word	0x20012db0

08002650 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002650:	2101      	movs	r1, #1
{
 8002652:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002654:	2200      	movs	r2, #0
 8002656:	4608      	mov	r0, r1
 8002658:	f00b f896 	bl	800d788 <osSemaphoreNew>
 800265c:	4b0a      	ldr	r3, [pc, #40]	; (8002688 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800265e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002660:	b928      	cbnz	r0, 800266e <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8002662:	4b0a      	ldr	r3, [pc, #40]	; (800268c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8002664:	4a0a      	ldr	r2, [pc, #40]	; (8002690 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002666:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002668:	480a      	ldr	r0, [pc, #40]	; (8002694 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 800266a:	f028 f9e7 	bl	802aa3c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 800266e:	2200      	movs	r2, #0
 8002670:	2104      	movs	r1, #4
 8002672:	2001      	movs	r0, #1
 8002674:	f00b f93c 	bl	800d8f0 <osMessageQueueNew>
 8002678:	4b07      	ldr	r3, [pc, #28]	; (8002698 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 800267a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800267c:	b918      	cbnz	r0, 8002686 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 800267e:	4b07      	ldr	r3, [pc, #28]	; (800269c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002680:	4a03      	ldr	r2, [pc, #12]	; (8002690 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002682:	212c      	movs	r1, #44	; 0x2c
 8002684:	e7f0      	b.n	8002668 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8002686:	bd08      	pop	{r3, pc}
 8002688:	200007a8 	.word	0x200007a8
 800268c:	0802bed4 	.word	0x0802bed4
 8002690:	0802bf1d 	.word	0x0802bf1d
 8002694:	0802bf4c 	.word	0x0802bf4c
 8002698:	200007a4 	.word	0x200007a4
 800269c:	0802bfdc 	.word	0x0802bfdc

080026a0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 80026a0:	4b02      	ldr	r3, [pc, #8]	; (80026ac <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 80026a2:	f04f 31ff 	mov.w	r1, #4294967295
 80026a6:	6818      	ldr	r0, [r3, #0]
 80026a8:	f00b b8c2 	b.w	800d830 <osSemaphoreAcquire>
 80026ac:	200007a8 	.word	0x200007a8

080026b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80026b0:	4b01      	ldr	r3, [pc, #4]	; (80026b8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80026b2:	6818      	ldr	r0, [r3, #0]
 80026b4:	f00b b8f0 	b.w	800d898 <osSemaphoreRelease>
 80026b8:	200007a8 	.word	0x200007a8

080026bc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80026bc:	4b02      	ldr	r3, [pc, #8]	; (80026c8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80026be:	2100      	movs	r1, #0
 80026c0:	6818      	ldr	r0, [r3, #0]
 80026c2:	f00b b8b5 	b.w	800d830 <osSemaphoreAcquire>
 80026c6:	bf00      	nop
 80026c8:	200007a8 	.word	0x200007a8

080026cc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 80026cc:	f7ff bff0 	b.w	80026b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080026d0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80026d0:	4803      	ldr	r0, [pc, #12]	; (80026e0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 80026d2:	4904      	ldr	r1, [pc, #16]	; (80026e4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80026d4:	6800      	ldr	r0, [r0, #0]
 80026d6:	2300      	movs	r3, #0
 80026d8:	461a      	mov	r2, r3
 80026da:	f00b b943 	b.w	800d964 <osMessageQueuePut>
 80026de:	bf00      	nop
 80026e0:	200007a4 	.word	0x200007a4
 80026e4:	20000010 	.word	0x20000010

080026e8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80026e8:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80026ea:	4c08      	ldr	r4, [pc, #32]	; (800270c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80026ec:	2300      	movs	r3, #0
 80026ee:	461a      	mov	r2, r3
 80026f0:	a901      	add	r1, sp, #4
 80026f2:	6820      	ldr	r0, [r4, #0]
 80026f4:	f00b f96c 	bl	800d9d0 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80026f8:	6820      	ldr	r0, [r4, #0]
 80026fa:	f04f 33ff 	mov.w	r3, #4294967295
 80026fe:	2200      	movs	r2, #0
 8002700:	a901      	add	r1, sp, #4
 8002702:	f00b f965 	bl	800d9d0 <osMessageQueueGet>
}
 8002706:	b002      	add	sp, #8
 8002708:	bd10      	pop	{r4, pc}
 800270a:	bf00      	nop
 800270c:	200007a4 	.word	0x200007a4

08002710 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8002710:	4770      	bx	lr

08002712 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8002712:	2000      	movs	r0, #0
 8002714:	4770      	bx	lr

08002716 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8002716:	4770      	bx	lr

08002718 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8002718:	4770      	bx	lr

0800271a <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 800271a:	2000      	movs	r0, #0
 800271c:	4770      	bx	lr

0800271e <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 800271e:	4770      	bx	lr

08002720 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8002720:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002722:	4a03      	ldr	r2, [pc, #12]	; (8002730 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8002724:	4b03      	ldr	r3, [pc, #12]	; (8002734 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8002726:	4804      	ldr	r0, [pc, #16]	; (8002738 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8002728:	2122      	movs	r1, #34	; 0x22
 800272a:	f028 f987 	bl	802aa3c <__assert_func>
 800272e:	bf00      	nop
 8002730:	0802c041 	.word	0x0802c041
 8002734:	0802c01e 	.word	0x0802c01e
 8002738:	0802c07f 	.word	0x0802c07f

0800273c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 800273c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 800273e:	4a03      	ldr	r2, [pc, #12]	; (800274c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8002740:	4b03      	ldr	r3, [pc, #12]	; (8002750 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8002742:	4804      	ldr	r0, [pc, #16]	; (8002754 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8002744:	2127      	movs	r1, #39	; 0x27
 8002746:	f028 f979 	bl	802aa3c <__assert_func>
 800274a:	bf00      	nop
 800274c:	0802c10d 	.word	0x0802c10d
 8002750:	0802c01e 	.word	0x0802c01e
 8002754:	0802c07f 	.word	0x0802c07f

08002758 <_ZN8STM32DMAD0Ev>:
 8002758:	b510      	push	{r4, lr}
 800275a:	2144      	movs	r1, #68	; 0x44
 800275c:	4604      	mov	r4, r0
 800275e:	f027 fa86 	bl	8029c6e <_ZdlPvj>
 8002762:	4620      	mov	r0, r4
 8002764:	bd10      	pop	{r4, pc}
	...

08002768 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002768:	b538      	push	{r3, r4, r5, lr}
 800276a:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 800276c:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800276e:	2500      	movs	r5, #0
 8002770:	4b06      	ldr	r3, [pc, #24]	; (800278c <_ZN8STM32DMAC1Ev+0x24>)
 8002772:	7225      	strb	r5, [r4, #8]
 8002774:	300c      	adds	r0, #12
 8002776:	6060      	str	r0, [r4, #4]
 8002778:	7265      	strb	r5, [r4, #9]
 800277a:	2201      	movs	r2, #1
 800277c:	f841 3b20 	str.w	r3, [r1], #32
 8002780:	f00f f8e8 	bl	8011954 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002784:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8002786:	4620      	mov	r0, r4
 8002788:	bd38      	pop	{r3, r4, r5, pc}
 800278a:	bf00      	nop
 800278c:	0802c154 	.word	0x0802c154

08002790 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002790:	2001      	movs	r0, #1
 8002792:	4770      	bx	lr

08002794 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002794:	2038      	movs	r0, #56	; 0x38
 8002796:	4770      	bx	lr

08002798 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002798:	2338      	movs	r3, #56	; 0x38
 800279a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800279e:	3008      	adds	r0, #8
 80027a0:	4770      	bx	lr

080027a2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80027a2:	2338      	movs	r3, #56	; 0x38
 80027a4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80027a8:	3008      	adds	r0, #8
 80027aa:	4770      	bx	lr

080027ac <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80027ac:	2001      	movs	r0, #1
 80027ae:	4770      	bx	lr

080027b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80027b0:	f241 30f8 	movw	r0, #5112	; 0x13f8
 80027b4:	4770      	bx	lr

080027b6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80027b6:	f241 33f8 	movw	r3, #5112	; 0x13f8
 80027ba:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80027be:	3008      	adds	r0, #8
 80027c0:	4770      	bx	lr

080027c2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80027c2:	f241 33f8 	movw	r3, #5112	; 0x13f8
 80027c6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80027ca:	3008      	adds	r0, #8
 80027cc:	4770      	bx	lr

080027ce <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80027ce:	2001      	movs	r0, #1
 80027d0:	4770      	bx	lr

080027d2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80027d2:	2010      	movs	r0, #16
 80027d4:	4770      	bx	lr

080027d6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80027d6:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80027da:	3008      	adds	r0, #8
 80027dc:	4770      	bx	lr

080027de <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80027de:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80027e2:	3008      	adds	r0, #8
 80027e4:	4770      	bx	lr

080027e6 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 80027e6:	4608      	mov	r0, r1
 80027e8:	f001 bfa4 	b.w	8004734 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

080027ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80027ec:	b510      	push	{r4, lr}
 80027ee:	4b03      	ldr	r3, [pc, #12]	; (80027fc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 80027f0:	6003      	str	r3, [r0, #0]
 80027f2:	4604      	mov	r4, r0
 80027f4:	f00d fd4b 	bl	801028e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80027f8:	4620      	mov	r0, r4
 80027fa:	bd10      	pop	{r4, pc}
 80027fc:	0802c20c 	.word	0x0802c20c

08002800 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002800:	b510      	push	{r4, lr}
 8002802:	4604      	mov	r4, r0
 8002804:	f7ff fff2 	bl	80027ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002808:	4620      	mov	r0, r4
 800280a:	2140      	movs	r1, #64	; 0x40
 800280c:	f027 fa2f 	bl	8029c6e <_ZdlPvj>
 8002810:	4620      	mov	r0, r4
 8002812:	bd10      	pop	{r4, pc}

08002814 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002814:	b510      	push	{r4, lr}
 8002816:	4b03      	ldr	r3, [pc, #12]	; (8002824 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002818:	6003      	str	r3, [r0, #0]
 800281a:	4604      	mov	r4, r0
 800281c:	f00d fd37 	bl	801028e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002820:	4620      	mov	r0, r4
 8002822:	bd10      	pop	{r4, pc}
 8002824:	0802c1d8 	.word	0x0802c1d8

08002828 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002828:	b510      	push	{r4, lr}
 800282a:	4604      	mov	r4, r0
 800282c:	f7ff fff2 	bl	8002814 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002830:	4620      	mov	r0, r4
 8002832:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8002836:	f027 fa1a 	bl	8029c6e <_ZdlPvj>
 800283a:	4620      	mov	r0, r4
 800283c:	bd10      	pop	{r4, pc}
	...

08002840 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002840:	b510      	push	{r4, lr}
 8002842:	4b03      	ldr	r3, [pc, #12]	; (8002850 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002844:	6003      	str	r3, [r0, #0]
 8002846:	4604      	mov	r4, r0
 8002848:	f00d fd21 	bl	801028e <_ZN8touchgfx17AbstractPartitionD1Ev>
 800284c:	4620      	mov	r0, r4
 800284e:	bd10      	pop	{r4, pc}
 8002850:	0802c1a4 	.word	0x0802c1a4

08002854 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002854:	b510      	push	{r4, lr}
 8002856:	4604      	mov	r4, r0
 8002858:	f7ff fff2 	bl	8002840 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800285c:	4620      	mov	r0, r4
 800285e:	2118      	movs	r1, #24
 8002860:	f027 fa05 	bl	8029c6e <_ZdlPvj>
 8002864:	4620      	mov	r0, r4
 8002866:	bd10      	pop	{r4, pc}

08002868 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002868:	b510      	push	{r4, lr}
 800286a:	4b09      	ldr	r3, [pc, #36]	; (8002890 <_ZN12FrontendHeapD1Ev+0x28>)
 800286c:	6003      	str	r3, [r0, #0]
 800286e:	4604      	mov	r4, r0
 8002870:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 8002874:	300c      	adds	r0, #12
 8002876:	f7ff ffb9 	bl	80027ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800287a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800287e:	f7ff ffc9 	bl	8002814 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002882:	f104 0014 	add.w	r0, r4, #20
 8002886:	f7ff ffdb 	bl	8002840 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800288a:	4620      	mov	r0, r4
 800288c:	bd10      	pop	{r4, pc}
 800288e:	bf00      	nop
 8002890:	0802c240 	.word	0x0802c240

08002894 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002894:	b508      	push	{r3, lr}
 8002896:	4802      	ldr	r0, [pc, #8]	; (80028a0 <__tcf_0+0xc>)
 8002898:	f7ff ffe6 	bl	8002868 <_ZN12FrontendHeapD1Ev>
 800289c:	bd08      	pop	{r3, pc}
 800289e:	bf00      	nop
 80028a0:	200007b0 	.word	0x200007b0

080028a4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80028a4:	b510      	push	{r4, lr}
 80028a6:	4604      	mov	r4, r0
 80028a8:	f7ff ffde 	bl	8002868 <_ZN12FrontendHeapD1Ev>
 80028ac:	4620      	mov	r0, r4
 80028ae:	f241 51d0 	movw	r1, #5584	; 0x15d0
 80028b2:	f027 f9dc 	bl	8029c6e <_ZdlPvj>
 80028b6:	4620      	mov	r0, r4
 80028b8:	bd10      	pop	{r4, pc}
	...

080028bc <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 80028bc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80028c0:	f000 fa5a 	bl	8002d78 <_ZN14BitmapDatabase11getInstanceEv>
 80028c4:	4605      	mov	r5, r0
 80028c6:	f000 fa5b 	bl	8002d80 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80028ca:	2400      	movs	r4, #0
 80028cc:	4601      	mov	r1, r0
 80028ce:	4623      	mov	r3, r4
 80028d0:	4628      	mov	r0, r5
 80028d2:	4622      	mov	r2, r4
 80028d4:	9400      	str	r4, [sp, #0]
 80028d6:	f016 fd51 	bl	801937c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80028da:	4b26      	ldr	r3, [pc, #152]	; (8002974 <touchgfx_init+0xb8>)
 80028dc:	4a26      	ldr	r2, [pc, #152]	; (8002978 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 80028de:	4d27      	ldr	r5, [pc, #156]	; (800297c <touchgfx_init+0xc0>)
 80028e0:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80028e2:	4620      	mov	r0, r4
 80028e4:	f006 fb06 	bl	8008ef4 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80028e8:	4825      	ldr	r0, [pc, #148]	; (8002980 <touchgfx_init+0xc4>)
 80028ea:	f016 fcaf 	bl	801924c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80028ee:	682b      	ldr	r3, [r5, #0]
 80028f0:	f3bf 8f5b 	dmb	ish
 80028f4:	07db      	lsls	r3, r3, #31
 80028f6:	d437      	bmi.n	8002968 <touchgfx_init+0xac>
 80028f8:	4628      	mov	r0, r5
 80028fa:	f027 f9ba 	bl	8029c72 <__cxa_guard_acquire>
 80028fe:	b398      	cbz	r0, 8002968 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8002900:	4c20      	ldr	r4, [pc, #128]	; (8002984 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8002902:	4b21      	ldr	r3, [pc, #132]	; (8002988 <touchgfx_init+0xcc>)
 8002904:	6023      	str	r3, [r4, #0]
 8002906:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 800290a:	f104 082c 	add.w	r8, r4, #44	; 0x2c
          transitionStorage(tra),
          frontendApplication(app)
 800290e:	f500 56a3 	add.w	r6, r0, #5216	; 0x1460
          transitionStorage(tra),
 8002912:	f508 57a0 	add.w	r7, r8, #5120	; 0x1400
        : presenterStorage(pres),
 8002916:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8002918:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 800291c:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 800291e:	6126      	str	r6, [r4, #16]
 8002920:	f00d fcb6 	bl	8010290 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002924:	4b19      	ldr	r3, [pc, #100]	; (800298c <touchgfx_init+0xd0>)
 8002926:	6163      	str	r3, [r4, #20]
 8002928:	4640      	mov	r0, r8
 800292a:	f00d fcb1 	bl	8010290 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800292e:	4b18      	ldr	r3, [pc, #96]	; (8002990 <touchgfx_init+0xd4>)
 8002930:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002932:	4638      	mov	r0, r7
 8002934:	f00d fcac 	bl	8010290 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002938:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800293c:	4a15      	ldr	r2, [pc, #84]	; (8002994 <touchgfx_init+0xd8>)
 800293e:	f8c3 242c 	str.w	r2, [r3, #1068]	; 0x42c
 8002942:	f203 406c 	addw	r0, r3, #1132	; 0x46c
 8002946:	f006 ffbf 	bl	80098c8 <_ZN5ModelC1Ev>
 800294a:	4622      	mov	r2, r4
 800294c:	f1a6 0108 	sub.w	r1, r6, #8
 8002950:	4630      	mov	r0, r6
 8002952:	f006 fcbf 	bl	80092d4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8002956:	4630      	mov	r0, r6
 8002958:	f001 feec 	bl	8004734 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 800295c:	480e      	ldr	r0, [pc, #56]	; (8002998 <touchgfx_init+0xdc>)
 800295e:	f028 f88b 	bl	802aa78 <atexit>
 8002962:	4628      	mov	r0, r5
 8002964:	f027 f991 	bl	8029c8a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002968:	480c      	ldr	r0, [pc, #48]	; (800299c <touchgfx_init+0xe0>)
}
 800296a:	b002      	add	sp, #8
 800296c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002970:	f7ff bdb4 	b.w	80024dc <_ZN11TouchGFXHAL10initializeEv>
 8002974:	20012e18 	.word	0x20012e18
 8002978:	20001e44 	.word	0x20001e44
 800297c:	200007ac 	.word	0x200007ac
 8002980:	20000014 	.word	0x20000014
 8002984:	200007b0 	.word	0x200007b0
 8002988:	0802c240 	.word	0x0802c240
 800298c:	0802c1a4 	.word	0x0802c1a4
 8002990:	0802c1d8 	.word	0x0802c1d8
 8002994:	0802c20c 	.word	0x0802c20c
 8002998:	08002895 	.word	0x08002895
 800299c:	20001dc8 	.word	0x20001dc8

080029a0 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 80029a0:	4770      	bx	lr
	...

080029a4 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80029a4:	4801      	ldr	r0, [pc, #4]	; (80029ac <touchgfx_taskEntry+0x8>)
 80029a6:	f7ff bda7 	b.w	80024f8 <_ZN11TouchGFXHAL9taskEntryEv>
 80029aa:	bf00      	nop
 80029ac:	20001dc8 	.word	0x20001dc8

080029b0 <_GLOBAL__sub_I_touchgfx_init>:
}
 80029b0:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 80029b2:	4e22      	ldr	r6, [pc, #136]	; (8002a3c <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 80029b4:	4c22      	ldr	r4, [pc, #136]	; (8002a40 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 80029b6:	4d23      	ldr	r5, [pc, #140]	; (8002a44 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 80029b8:	4b23      	ldr	r3, [pc, #140]	; (8002a48 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80029ba:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80029bc:	4630      	mov	r0, r6
 80029be:	f7ff fed3 	bl	8002768 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80029c2:	4628      	mov	r0, r5
 80029c4:	f01a ffa6 	bl	801d914 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 80029c8:	4b20      	ldr	r3, [pc, #128]	; (8002a4c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80029ca:	4821      	ldr	r0, [pc, #132]	; (8002a50 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 80029cc:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 80029ce:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 80029d0:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 80029d4:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 80029d8:	491e      	ldr	r1, [pc, #120]	; (8002a54 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80029da:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 80029dc:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 80029e0:	491d      	ldr	r1, [pc, #116]	; (8002a58 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80029e2:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 80029e4:	491d      	ldr	r1, [pc, #116]	; (8002a5c <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 80029e6:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 80029ea:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80029ec:	21f0      	movs	r1, #240	; 0xf0
 80029ee:	8001      	strh	r1, [r0, #0]
 80029f0:	481b      	ldr	r0, [pc, #108]	; (8002a60 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80029f2:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80029f4:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80029f6:	481b      	ldr	r0, [pc, #108]	; (8002a64 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80029f8:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80029fc:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8002a00:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8002a04:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8002a08:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8002a0c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8002a10:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8002a14:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8002a18:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8002a1c:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8002a20:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8002a22:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002a26:	8001      	strh	r1, [r0, #0]
 8002a28:	480f      	ldr	r0, [pc, #60]	; (8002a68 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8002a2a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8002a2c:	490f      	ldr	r1, [pc, #60]	; (8002a6c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8002a2e:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8002a30:	2201      	movs	r2, #1
 8002a32:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8002a36:	4a0e      	ldr	r2, [pc, #56]	; (8002a70 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8002a38:	601a      	str	r2, [r3, #0]
}
 8002a3a:	bd70      	pop	{r4, r5, r6, pc}
 8002a3c:	20001d84 	.word	0x20001d84
 8002a40:	20001d80 	.word	0x20001d80
 8002a44:	20001e48 	.word	0x20001e48
 8002a48:	0802bc78 	.word	0x0802bc78
 8002a4c:	20001dc8 	.word	0x20001dc8
 8002a50:	20012da8 	.word	0x20012da8
 8002a54:	01000001 	.word	0x01000001
 8002a58:	01010000 	.word	0x01010000
 8002a5c:	20012db4 	.word	0x20012db4
 8002a60:	20012dae 	.word	0x20012dae
 8002a64:	20012daa 	.word	0x20012daa
 8002a68:	20012db0 	.word	0x20012db0
 8002a6c:	20012dac 	.word	0x20012dac
 8002a70:	0802be04 	.word	0x0802be04

08002a74 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002a74:	2000      	movs	r0, #0
 8002a76:	4770      	bx	lr

08002a78 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002a78:	8081      	strh	r1, [r0, #4]
    }
 8002a7a:	4770      	bx	lr

08002a7c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002a7c:	80c1      	strh	r1, [r0, #6]
    }
 8002a7e:	4770      	bx	lr

08002a80 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002a80:	8101      	strh	r1, [r0, #8]
    }
 8002a82:	4770      	bx	lr

08002a84 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002a84:	8141      	strh	r1, [r0, #10]
    }
 8002a86:	4770      	bx	lr

08002a88 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002a88:	4770      	bx	lr

08002a8a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002a8a:	4770      	bx	lr

08002a8c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002a8c:	4770      	bx	lr

08002a8e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002a8e:	4770      	bx	lr

08002a90 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002a90:	4770      	bx	lr

08002a92 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002a92:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002a94:	88c4      	ldrh	r4, [r0, #6]
 8002a96:	6803      	ldr	r3, [r0, #0]
 8002a98:	1b12      	subs	r2, r2, r4
 8002a9a:	8884      	ldrh	r4, [r0, #4]
 8002a9c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002a9e:	1b09      	subs	r1, r1, r4
 8002aa0:	b212      	sxth	r2, r2
    }
 8002aa2:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002aa6:	b209      	sxth	r1, r1
 8002aa8:	4718      	bx	r3

08002aaa <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002aaa:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002aae:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002ab0:	f04f 33ff 	mov.w	r3, #4294967295
 8002ab4:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002ab6:	6813      	ldr	r3, [r2, #0]
 8002ab8:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002aba:	6010      	str	r0, [r2, #0]
    }
 8002abc:	4770      	bx	lr

08002abe <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002abe:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002ac2:	b11a      	cbz	r2, 8002acc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002ac4:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002ac8:	b102      	cbz	r2, 8002acc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002aca:	6018      	str	r0, [r3, #0]
        }
    }
 8002acc:	4770      	bx	lr

08002ace <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8002ace:	2000      	movs	r0, #0
 8002ad0:	4770      	bx	lr

08002ad2 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8002ad2:	888b      	ldrh	r3, [r1, #4]
 8002ad4:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8002ad6:	2001      	movs	r0, #1
 8002ad8:	4770      	bx	lr

08002ada <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8002ada:	4770      	bx	lr

08002adc <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002adc:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8002ae0:	4770      	bx	lr

08002ae2 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8002ae2:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8002ae6:	4770      	bx	lr

08002ae8 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002ae8:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002aea:	2200      	movs	r2, #0
        return rect.width;
 8002aec:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8002af0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8002af4:	8002      	strh	r2, [r0, #0]
 8002af6:	8042      	strh	r2, [r0, #2]
 8002af8:	8084      	strh	r4, [r0, #4]
 8002afa:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8002afc:	bd10      	pop	{r4, pc}

08002afe <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002afe:	2200      	movs	r2, #0
 8002b00:	8002      	strh	r2, [r0, #0]
 8002b02:	8042      	strh	r2, [r0, #2]
 8002b04:	8082      	strh	r2, [r0, #4]
 8002b06:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002b08:	4770      	bx	lr
	...

08002b0c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002b0c:	4b02      	ldr	r3, [pc, #8]	; (8002b18 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8002b0e:	2290      	movs	r2, #144	; 0x90
 8002b10:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8002b14:	4770      	bx	lr
 8002b16:	bf00      	nop
 8002b18:	e000e100 	.word	0xe000e100

08002b1c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002b1c:	4b02      	ldr	r3, [pc, #8]	; (8002b28 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8002b1e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002b22:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8002b24:	4770      	bx	lr
 8002b26:	bf00      	nop
 8002b28:	e000e100 	.word	0xe000e100

08002b2c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002b2c:	4a09      	ldr	r2, [pc, #36]	; (8002b54 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8002b2e:	490a      	ldr	r1, [pc, #40]	; (8002b58 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8002b30:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002b32:	480a      	ldr	r0, [pc, #40]	; (8002b5c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002b34:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002b38:	3b01      	subs	r3, #1
 8002b3a:	b29b      	uxth	r3, r3
 8002b3c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002b3e:	6911      	ldr	r1, [r2, #16]
 8002b40:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8002b44:	3901      	subs	r1, #1
 8002b46:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8002b48:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8002b4a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8002b4c:	f043 0301 	orr.w	r3, r3, #1
 8002b50:	6353      	str	r3, [r2, #52]	; 0x34
}
 8002b52:	4770      	bx	lr
 8002b54:	40016800 	.word	0x40016800
 8002b58:	20001ece 	.word	0x20001ece
 8002b5c:	20001ecc 	.word	0x20001ecc

08002b60 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8002b60:	4b01      	ldr	r3, [pc, #4]	; (8002b68 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8002b62:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8002b66:	4770      	bx	lr
 8002b68:	40016800 	.word	0x40016800

08002b6c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002b6c:	4b02      	ldr	r3, [pc, #8]	; (8002b78 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002b6e:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002b70:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002b74:	625a      	str	r2, [r3, #36]	; 0x24
}
 8002b76:	4770      	bx	lr
 8002b78:	40016800 	.word	0x40016800

08002b7c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002b7c:	b570      	push	{r4, r5, r6, lr}
 8002b7e:	4604      	mov	r4, r0
    HAL::initialize();
 8002b80:	f00e f851 	bl	8010c26 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002b84:	6823      	ldr	r3, [r4, #0]
 8002b86:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8002b88:	f012 fffa 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
 8002b8c:	4601      	mov	r1, r0
 8002b8e:	4620      	mov	r0, r4
 8002b90:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002b92:	6823      	ldr	r3, [r4, #0]
 8002b94:	4a05      	ldr	r2, [pc, #20]	; (8002bac <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8002b96:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8002b9a:	4620      	mov	r0, r4
 8002b9c:	46ac      	mov	ip, r5
 8002b9e:	2300      	movs	r3, #0
}
 8002ba0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002ba4:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8002ba8:	4760      	bx	ip
 8002baa:	bf00      	nop
 8002bac:	d004b000 	.word	0xd004b000

08002bb0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002bb0:	f00e b820 	b.w	8010bf4 <_ZN8touchgfx3HAL10beginFrameEv>

08002bb4 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002bb4:	f00e b82a 	b.w	8010c0c <_ZN8touchgfx3HAL8endFrameEv>

08002bb8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002bb8:	f00d bfe6 	b.w	8010b88 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002bbc <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002bbc:	f00e b947 	b.w	8010e4e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002bc0 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002bc0:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002bc4:	b112      	cbz	r2, 8002bcc <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002bc6:	6803      	ldr	r3, [r0, #0]
 8002bc8:	695b      	ldr	r3, [r3, #20]
 8002bca:	4718      	bx	r3
    }
 8002bcc:	4770      	bx	lr
	...

08002bd0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002bd0:	4b04      	ldr	r3, [pc, #16]	; (8002be4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8002bd2:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8002bd6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002bda:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002bde:	f3bf 8f6f 	isb	sy
}
 8002be2:	4770      	bx	lr
 8002be4:	e000e100 	.word	0xe000e100

08002be8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8002be8:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8002bea:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002bec:	4e12      	ldr	r6, [pc, #72]	; (8002c38 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8002bee:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8002bf0:	4b12      	ldr	r3, [pc, #72]	; (8002c3c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8002bf2:	6003      	str	r3, [r0, #0]
 8002bf4:	6833      	ldr	r3, [r6, #0]
 8002bf6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8002bfa:	4605      	mov	r5, r0
 8002bfc:	b10a      	cbz	r2, 8002c02 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8002bfe:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002c00:	b900      	cbnz	r0, 8002c04 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8002c02:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8002c04:	6803      	ldr	r3, [r0, #0]
 8002c06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002c08:	4798      	blx	r3
        return auxiliaryLCD;
 8002c0a:	6833      	ldr	r3, [r6, #0]
 8002c0c:	fab0 f480 	clz	r4, r0
 8002c10:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002c12:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8002c14:	b130      	cbz	r0, 8002c24 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8002c16:	6803      	ldr	r3, [r0, #0]
 8002c18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002c1a:	4798      	blx	r3
 8002c1c:	2800      	cmp	r0, #0
 8002c1e:	bf08      	it	eq
 8002c20:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8002c24:	b92c      	cbnz	r4, 8002c32 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8002c26:	4b06      	ldr	r3, [pc, #24]	; (8002c40 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8002c28:	4a06      	ldr	r2, [pc, #24]	; (8002c44 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8002c2a:	4807      	ldr	r0, [pc, #28]	; (8002c48 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8002c2c:	212c      	movs	r1, #44	; 0x2c
 8002c2e:	f027 ff05 	bl	802aa3c <__assert_func>
    }
 8002c32:	4628      	mov	r0, r5
 8002c34:	bd70      	pop	{r4, r5, r6, pc}
 8002c36:	bf00      	nop
 8002c38:	20012db4 	.word	0x20012db4
 8002c3c:	0802c350 	.word	0x0802c350
 8002c40:	0802c24c 	.word	0x0802c24c
 8002c44:	0802c2aa 	.word	0x0802c2aa
 8002c48:	0802c2e3 	.word	0x0802c2e3

08002c4c <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 8002c4c:	4770      	bx	lr
	...

08002c50 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8002c50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 8002c54:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 8002c56:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 8002c5a:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 8002c5e:	d105      	bne.n	8002c6c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 8002c60:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 8002c64:	4281      	cmp	r1, r0
 8002c66:	d8fb      	bhi.n	8002c60 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8002c68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8002c6c:	4f17      	ldr	r7, [pc, #92]	; (8002ccc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002c6e:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002c72:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002c76:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002c7a:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002c7e:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002c80:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 8002c82:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002c84:	b2db      	uxtb	r3, r3
 8002c86:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002c88:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002c8c:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002c90:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002c94:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002c98:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002c9c:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002ca0:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002ca4:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002ca8:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002caa:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002cae:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002cb2:	fb03 4e0e 	mla	lr, r3, lr, r4
 8002cb6:	fbbe fef5 	udiv	lr, lr, r5
 8002cba:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002cbe:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002cc2:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8002cc6:	4281      	cmp	r1, r0
 8002cc8:	d8de      	bhi.n	8002c88 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8002cca:	e7cd      	b.n	8002c68 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8002ccc:	fffff800 	.word	0xfffff800

08002cd0 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002cd0:	b510      	push	{r4, lr}
        return instance;
 8002cd2:	4c14      	ldr	r4, [pc, #80]	; (8002d24 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002cd4:	6823      	ldr	r3, [r4, #0]
 8002cd6:	b323      	cbz	r3, 8002d22 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002cd8:	4b13      	ldr	r3, [pc, #76]	; (8002d28 <HAL_LTDC_LineEventCallback+0x58>)
 8002cda:	4a14      	ldr	r2, [pc, #80]	; (8002d2c <HAL_LTDC_LineEventCallback+0x5c>)
 8002cdc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002cde:	8811      	ldrh	r1, [r2, #0]
 8002ce0:	428b      	cmp	r3, r1
 8002ce2:	d113      	bne.n	8002d0c <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8002ce4:	4b12      	ldr	r3, [pc, #72]	; (8002d30 <HAL_LTDC_LineEventCallback+0x60>)
 8002ce6:	8819      	ldrh	r1, [r3, #0]
 8002ce8:	f009 f962 	bl	800bfb0 <HAL_LTDC_ProgramLineEvent>
 8002cec:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002cee:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8002cf2:	3301      	adds	r3, #1
 8002cf4:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002cf8:	f7ff fcea 	bl	80026d0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002cfc:	6820      	ldr	r0, [r4, #0]
 8002cfe:	f00e fcd1 	bl	80116a4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8002d02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8002d06:	2000      	movs	r0, #0
 8002d08:	f7ff bb62 	b.w	80023d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002d0c:	f009 f950 	bl	800bfb0 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002d10:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8002d12:	6803      	ldr	r3, [r0, #0]
 8002d14:	6a1b      	ldr	r3, [r3, #32]
 8002d16:	4798      	blx	r3
    }
 8002d18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002d1c:	2000      	movs	r0, #0
 8002d1e:	f7ff bb6f 	b.w	8002400 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8002d22:	bd10      	pop	{r4, pc}
 8002d24:	20012db4 	.word	0x20012db4
 8002d28:	40016800 	.word	0x40016800
 8002d2c:	20001ece 	.word	0x20001ece
 8002d30:	20001ecc 	.word	0x20001ecc

08002d34 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002d34:	4770      	bx	lr

08002d36 <_ZN23ApplicationFontProviderD0Ev>:
 8002d36:	b510      	push	{r4, lr}
 8002d38:	2104      	movs	r1, #4
 8002d3a:	4604      	mov	r4, r0
 8002d3c:	f026 ff97 	bl	8029c6e <_ZdlPvj>
 8002d40:	4620      	mov	r0, r4
 8002d42:	bd10      	pop	{r4, pc}

08002d44 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002d44:	b508      	push	{r3, lr}
    switch (typography)
 8002d46:	2903      	cmp	r1, #3
 8002d48:	d813      	bhi.n	8002d72 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 8002d4a:	e8df f001 	tbb	[pc, r1]
 8002d4e:	0602      	.short	0x0602
 8002d50:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002d52:	f006 f91b 	bl	8008f8c <_ZN17TypedTextDatabase8getFontsEv>
 8002d56:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8002d58:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002d5a:	f006 f917 	bl	8008f8c <_ZN17TypedTextDatabase8getFontsEv>
 8002d5e:	6840      	ldr	r0, [r0, #4]
 8002d60:	e7fa      	b.n	8002d58 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002d62:	f006 f913 	bl	8008f8c <_ZN17TypedTextDatabase8getFontsEv>
 8002d66:	6880      	ldr	r0, [r0, #8]
 8002d68:	e7f6      	b.n	8002d58 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002d6a:	f006 f90f 	bl	8008f8c <_ZN17TypedTextDatabase8getFontsEv>
 8002d6e:	68c0      	ldr	r0, [r0, #12]
 8002d70:	e7f2      	b.n	8002d58 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002d72:	2000      	movs	r0, #0
 8002d74:	e7f0      	b.n	8002d58 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002d78 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002d78:	4800      	ldr	r0, [pc, #0]	; (8002d7c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002d7a:	4770      	bx	lr
 8002d7c:	0802c37c 	.word	0x0802c37c

08002d80 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002d80:	200d      	movs	r0, #13
 8002d82:	4770      	bx	lr

08002d84 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002d84:	b513      	push	{r0, r1, r4, lr}
 8002d86:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002d88:	b151      	cbz	r1, 8002da0 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002d8a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002d8c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002d8e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002d92:	aa01      	add	r2, sp, #4
 8002d94:	689c      	ldr	r4, [r3, #8]
 8002d96:	f10d 0303 	add.w	r3, sp, #3
 8002d9a:	47a0      	blx	r4
        return glyph;
    }
 8002d9c:	b002      	add	sp, #8
 8002d9e:	bd10      	pop	{r4, pc}
            return 0;
 8002da0:	4608      	mov	r0, r1
 8002da2:	e7fb      	b.n	8002d9c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002da4 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002da4:	89c0      	ldrh	r0, [r0, #14]
 8002da6:	4770      	bx	lr

08002da8 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002da8:	8a00      	ldrh	r0, [r0, #16]
 8002daa:	4770      	bx	lr

08002dac <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002dac:	88c0      	ldrh	r0, [r0, #6]
 8002dae:	4770      	bx	lr

08002db0 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002db0:	8880      	ldrh	r0, [r0, #4]
 8002db2:	4770      	bx	lr

08002db4 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002db4:	7a80      	ldrb	r0, [r0, #10]
    }
 8002db6:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002dba:	4770      	bx	lr

08002dbc <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002dbc:	7a80      	ldrb	r0, [r0, #10]
    }
 8002dbe:	09c0      	lsrs	r0, r0, #7
 8002dc0:	4770      	bx	lr

08002dc2 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002dc2:	4770      	bx	lr

08002dc4 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002dc4:	4770      	bx	lr

08002dc6 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002dc6:	4770      	bx	lr

08002dc8 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002dc8:	4770      	bx	lr

08002dca <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002dca:	4770      	bx	lr

08002dcc <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002dcc:	4770      	bx	lr

08002dce <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002dce:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002dd0:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002dd2:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002dd4:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002dd6:	466d      	mov	r5, sp
 8002dd8:	4601      	mov	r1, r0
 8002dda:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002dde:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002de0:	4628      	mov	r0, r5
 8002de2:	4798      	blx	r3
 8002de4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002de8:	343c      	adds	r4, #60	; 0x3c
 8002dea:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002dee:	b005      	add	sp, #20
 8002df0:	bd30      	pop	{r4, r5, pc}

08002df2 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002df2:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002df4:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002df6:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002df8:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002dfa:	466d      	mov	r5, sp
 8002dfc:	4601      	mov	r1, r0
 8002dfe:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002e02:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002e04:	4628      	mov	r0, r5
 8002e06:	4798      	blx	r3
 8002e08:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002e0c:	343c      	adds	r4, #60	; 0x3c
 8002e0e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002e12:	b005      	add	sp, #20
 8002e14:	bd30      	pop	{r4, r5, pc}

08002e16 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002e16:	2200      	movs	r2, #0
 8002e18:	8002      	strh	r2, [r0, #0]
 8002e1a:	8042      	strh	r2, [r0, #2]
 8002e1c:	8082      	strh	r2, [r0, #4]
 8002e1e:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002e20:	4770      	bx	lr

08002e22 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002e22:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002e26:	4770      	bx	lr

08002e28 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002e28:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002e2a:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002e2c:	4604      	mov	r4, r0
        setX(x);
 8002e2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002e30:	4615      	mov	r5, r2
        setX(x);
 8002e32:	4798      	blx	r3
        setBaselineY(baselineY);
 8002e34:	6823      	ldr	r3, [r4, #0]
 8002e36:	4629      	mov	r1, r5
 8002e38:	4620      	mov	r0, r4
 8002e3a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002e3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002e40:	4718      	bx	r3

08002e42 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002e42:	2000      	movs	r0, #0
 8002e44:	4770      	bx	lr

08002e46 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002e46:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002e48:	4770      	bx	lr

08002e4a <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 8002e4a:	4770      	bx	lr

08002e4c <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002e4c:	4770      	bx	lr

08002e4e <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002e4e:	4770      	bx	lr

08002e50 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002e50:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002e52:	68c2      	ldr	r2, [r0, #12]
 8002e54:	6844      	ldr	r4, [r0, #4]
 8002e56:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002e58:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002e5a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002e5e:	07d2      	lsls	r2, r2, #31
 8002e60:	bf48      	it	mi
 8002e62:	5962      	ldrmi	r2, [r4, r5]
 8002e64:	689b      	ldr	r3, [r3, #8]
    }
 8002e66:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002e68:	bf48      	it	mi
 8002e6a:	58d3      	ldrmi	r3, [r2, r3]
 8002e6c:	4718      	bx	r3

08002e6e <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002e6e:	6843      	ldr	r3, [r0, #4]
 8002e70:	b12b      	cbz	r3, 8002e7e <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002e72:	6883      	ldr	r3, [r0, #8]
 8002e74:	b92b      	cbnz	r3, 8002e82 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002e76:	68c0      	ldr	r0, [r0, #12]
 8002e78:	f000 0001 	and.w	r0, r0, #1
 8002e7c:	4770      	bx	lr
 8002e7e:	4618      	mov	r0, r3
 8002e80:	4770      	bx	lr
 8002e82:	2001      	movs	r0, #1
    }
 8002e84:	4770      	bx	lr

08002e86 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002e86:	b510      	push	{r4, lr}
    }
 8002e88:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002e8a:	4604      	mov	r4, r0
    }
 8002e8c:	f026 feef 	bl	8029c6e <_ZdlPvj>
 8002e90:	4620      	mov	r0, r4
 8002e92:	bd10      	pop	{r4, pc}

08002e94 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002e94:	b510      	push	{r4, lr}
 8002e96:	214c      	movs	r1, #76	; 0x4c
 8002e98:	4604      	mov	r4, r0
 8002e9a:	f026 fee8 	bl	8029c6e <_ZdlPvj>
 8002e9e:	4620      	mov	r0, r4
 8002ea0:	bd10      	pop	{r4, pc}

08002ea2 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ea2:	b510      	push	{r4, lr}
 8002ea4:	2110      	movs	r1, #16
 8002ea6:	4604      	mov	r4, r0
 8002ea8:	f026 fee1 	bl	8029c6e <_ZdlPvj>
 8002eac:	4620      	mov	r0, r4
 8002eae:	bd10      	pop	{r4, pc}

08002eb0 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002eb0:	b510      	push	{r4, lr}
 8002eb2:	4b03      	ldr	r3, [pc, #12]	; (8002ec0 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 8002eb4:	6003      	str	r3, [r0, #0]
 8002eb6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002eb8:	f011 f960 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002ebc:	4620      	mov	r0, r4
 8002ebe:	bd10      	pop	{r4, pc}
 8002ec0:	0802c6e8 	.word	0x0802c6e8

08002ec4 <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002ec4:	b507      	push	{r0, r1, r2, lr}
 8002ec6:	4b07      	ldr	r3, [pc, #28]	; (8002ee4 <_ZN19CalibrationViewBaseD0Ev+0x20>)
 8002ec8:	6003      	str	r3, [r0, #0]
 8002eca:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002ecc:	f011 f956 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002ed0:	9801      	ldr	r0, [sp, #4]
 8002ed2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8002ed6:	f026 feca 	bl	8029c6e <_ZdlPvj>
 8002eda:	9801      	ldr	r0, [sp, #4]
 8002edc:	b003      	add	sp, #12
 8002ede:	f85d fb04 	ldr.w	pc, [sp], #4
 8002ee2:	bf00      	nop
 8002ee4:	0802c6e8 	.word	0x0802c6e8

08002ee8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002ee8:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002eea:	f7ff fe69 	bl	8002bc0 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002eee:	bd08      	pop	{r3, pc}

08002ef0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002ef0:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002ef2:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002ef4:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002ef6:	4b12      	ldr	r3, [pc, #72]	; (8002f40 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002ef8:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002efa:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002efc:	b28d      	uxth	r5, r1
 8002efe:	b92b      	cbnz	r3, 8002f0c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002f00:	4b10      	ldr	r3, [pc, #64]	; (8002f44 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002f02:	4a11      	ldr	r2, [pc, #68]	; (8002f48 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002f04:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002f06:	4811      	ldr	r0, [pc, #68]	; (8002f4c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002f08:	f027 fd98 	bl	802aa3c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002f0c:	4910      	ldr	r1, [pc, #64]	; (8002f50 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002f0e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002f10:	8809      	ldrh	r1, [r1, #0]
 8002f12:	4291      	cmp	r1, r2
 8002f14:	d803      	bhi.n	8002f1e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002f16:	4b0f      	ldr	r3, [pc, #60]	; (8002f54 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002f18:	4a0b      	ldr	r2, [pc, #44]	; (8002f48 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002f1a:	216d      	movs	r1, #109	; 0x6d
 8002f1c:	e7f3      	b.n	8002f06 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002f1e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002f22:	4b0d      	ldr	r3, [pc, #52]	; (8002f58 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002f24:	681b      	ldr	r3, [r3, #0]
 8002f26:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002f2a:	6803      	ldr	r3, [r0, #0]
 8002f2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f2e:	4798      	blx	r3
 8002f30:	1a28      	subs	r0, r5, r0
 8002f32:	b201      	sxth	r1, r0
 8002f34:	4633      	mov	r3, r6
 8002f36:	4620      	mov	r0, r4
    }
 8002f38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002f3c:	4718      	bx	r3
 8002f3e:	bf00      	nop
 8002f40:	20012e0c 	.word	0x20012e0c
 8002f44:	0802c480 	.word	0x0802c480
 8002f48:	0802c4c2 	.word	0x0802c4c2
 8002f4c:	0802c4fd 	.word	0x0802c4fd
 8002f50:	20012e10 	.word	0x20012e10
 8002f54:	0802c544 	.word	0x0802c544
 8002f58:	20012e14 	.word	0x20012e14

08002f5c <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002f5c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8002f5e:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8002f62:	4299      	cmp	r1, r3
{
 8002f64:	4604      	mov	r4, r0
 8002f66:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002f68:	d103      	bne.n	8002f72 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002f6a:	f012 fe09 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002f6e:	f001 fbf1 	bl	8004754 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8002f72:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002f76:	429d      	cmp	r5, r3
 8002f78:	d103      	bne.n	8002f82 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8002f7a:	f012 fe01 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8002f7e:	f001 fca9 	bl	80048d4 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8002f82:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8002f86:	42a5      	cmp	r5, r4
 8002f88:	d105      	bne.n	8002f96 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8002f8a:	f012 fdf9 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 8002f8e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 8002f92:	f001 bcaf 	b.w	80048f4 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 8002f96:	bd38      	pop	{r3, r4, r5, pc}

08002f98 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002f98:	2200      	movs	r2, #0
 8002f9a:	f04f 31ff 	mov.w	r1, #4294967295
 8002f9e:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002fa2:	6082      	str	r2, [r0, #8]
    }
 8002fa4:	4770      	bx	lr

08002fa6 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002fa6:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002fa8:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002faa:	4604      	mov	r4, r0
        setX(x);
 8002fac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002fae:	4615      	mov	r5, r2
        setX(x);
 8002fb0:	4798      	blx	r3
        setY(y);
 8002fb2:	6823      	ldr	r3, [r4, #0]
 8002fb4:	4629      	mov	r1, r5
 8002fb6:	4620      	mov	r0, r4
 8002fb8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002fba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002fbe:	4718      	bx	r3

08002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002fc0:	b570      	push	{r4, r5, r6, lr}
 8002fc2:	4604      	mov	r4, r0
 8002fc4:	461d      	mov	r5, r3
 8002fc6:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002fca:	f7ff ffec 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002fce:	6823      	ldr	r3, [r4, #0]
 8002fd0:	4629      	mov	r1, r5
 8002fd2:	4620      	mov	r0, r4
 8002fd4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002fd6:	4798      	blx	r3
        setHeight(height);
 8002fd8:	6823      	ldr	r3, [r4, #0]
 8002fda:	4631      	mov	r1, r6
 8002fdc:	4620      	mov	r0, r4
 8002fde:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002fe0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002fe4:	4718      	bx	r3
	...

08002fe8 <_ZN8touchgfx6WidgetC1Ev>:
 8002fe8:	2200      	movs	r2, #0
 8002fea:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002fee:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002ff2:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002ff6:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002ffa:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002ffe:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8003000:	4a01      	ldr	r2, [pc, #4]	; (8003008 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8003002:	6002      	str	r2, [r0, #0]
 8003004:	4770      	bx	lr
 8003006:	bf00      	nop
 8003008:	0802c5c8 	.word	0x0802c5c8

0800300c <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 800300c:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800300e:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8003010:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003012:	2100      	movs	r1, #0
 8003014:	f027 ff17 	bl	802ae46 <memset>
 8003018:	4620      	mov	r0, r4
 800301a:	f7ff ffe5 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 800301e:	4b0a      	ldr	r3, [pc, #40]	; (8003048 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8003020:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8003022:	4b0a      	ldr	r3, [pc, #40]	; (800304c <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8003024:	62a3      	str	r3, [r4, #40]	; 0x28
 8003026:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800302a:	85a3      	strh	r3, [r4, #44]	; 0x2c
 800302c:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8003030:	2300      	movs	r3, #0
 8003032:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003036:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 800303a:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800303e:	8723      	strh	r3, [r4, #56]	; 0x38
 8003040:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8003042:	4620      	mov	r0, r4
 8003044:	bd10      	pop	{r4, pc}
 8003046:	bf00      	nop
 8003048:	0802ef00 	.word	0x0802ef00
 800304c:	0802c630 	.word	0x0802c630

08003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8003050:	4b1a      	ldr	r3, [pc, #104]	; (80030bc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8003052:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8003054:	881b      	ldrh	r3, [r3, #0]
 8003056:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8003058:	428b      	cmp	r3, r1
    void updateTextPosition()
 800305a:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 800305c:	d92b      	bls.n	80030b6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800305e:	4b18      	ldr	r3, [pc, #96]	; (80030c0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8003060:	681b      	ldr	r3, [r3, #0]
 8003062:	b92b      	cbnz	r3, 8003070 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003064:	4b17      	ldr	r3, [pc, #92]	; (80030c4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8003066:	4a18      	ldr	r2, [pc, #96]	; (80030c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8003068:	4818      	ldr	r0, [pc, #96]	; (80030cc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800306a:	216c      	movs	r1, #108	; 0x6c
 800306c:	f027 fce6 	bl	802aa3c <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003070:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8003074:	4b16      	ldr	r3, [pc, #88]	; (80030d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8003076:	681b      	ldr	r3, [r3, #0]
 8003078:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 800307c:	4b15      	ldr	r3, [pc, #84]	; (80030d4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 800307e:	6818      	ldr	r0, [r3, #0]
 8003080:	f005 ff74 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003084:	682b      	ldr	r3, [r5, #0]
 8003086:	9001      	str	r0, [sp, #4]
 8003088:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800308a:	4628      	mov	r0, r5
 800308c:	4798      	blx	r3
 800308e:	682b      	ldr	r3, [r5, #0]
 8003090:	9901      	ldr	r1, [sp, #4]
 8003092:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003094:	4604      	mov	r4, r0
 8003096:	4628      	mov	r0, r5
 8003098:	4798      	blx	r3
 800309a:	682b      	ldr	r3, [r5, #0]
 800309c:	9901      	ldr	r1, [sp, #4]
 800309e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030a0:	fb14 f400 	smulbb	r4, r4, r0
 80030a4:	4628      	mov	r0, r5
 80030a6:	4798      	blx	r3
 80030a8:	b2a4      	uxth	r4, r4
 80030aa:	1823      	adds	r3, r4, r0
 80030ac:	b21b      	sxth	r3, r3
 80030ae:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80030b2:	b002      	add	sp, #8
 80030b4:	bd70      	pop	{r4, r5, r6, pc}
 80030b6:	2300      	movs	r3, #0
 80030b8:	e7f9      	b.n	80030ae <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 80030ba:	bf00      	nop
 80030bc:	20012e10 	.word	0x20012e10
 80030c0:	20012e0c 	.word	0x20012e0c
 80030c4:	0802c480 	.word	0x0802c480
 80030c8:	0802c4c2 	.word	0x0802c4c2
 80030cc:	0802c4fd 	.word	0x0802c4fd
 80030d0:	20012e14 	.word	0x20012e14
 80030d4:	20012e18 	.word	0x20012e18

080030d8 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 80030d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80030dc:	ed2d 8b06 	vpush	{d8-d10}
 80030e0:	4604      	mov	r4, r0
 80030e2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 80030e4:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 80030e6:	2500      	movs	r5, #0
 80030e8:	f014 f9ca 	bl	8017480 <_ZN8touchgfx6ScreenC1Ev>
 80030ec:	4b66      	ldr	r3, [pc, #408]	; (8003288 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 80030ee:	63e5      	str	r5, [r4, #60]	; 0x3c
 80030f0:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80030f4:	2226      	movs	r2, #38	; 0x26
 80030f6:	4629      	mov	r1, r5
 80030f8:	4658      	mov	r0, fp
 80030fa:	f027 fea4 	bl	802ae46 <memset>
 80030fe:	4658      	mov	r0, fp
 8003100:	f7ff ff72 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 8003104:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8003108:	26ff      	movs	r6, #255	; 0xff
 800310a:	4b60      	ldr	r3, [pc, #384]	; (800328c <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 800310c:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 800310e:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003110:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003114:	4629      	mov	r1, r5
 8003116:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800311a:	4650      	mov	r0, sl
        : color(col)
 800311c:	66a5      	str	r5, [r4, #104]	; 0x68
 800311e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003122:	f027 fe90 	bl	802ae46 <memset>
 8003126:	4650      	mov	r0, sl
 8003128:	f7ff ff5e 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 800312c:	4b58      	ldr	r3, [pc, #352]	; (8003290 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 800312e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003130:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003134:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8003138:	a90a      	add	r1, sp, #40	; 0x28
 800313a:	4650      	mov	r0, sl
 800313c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8003140:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003144:	f010 f813 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8003148:	4648      	mov	r0, r9
 800314a:	f7ff ff5f 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 800314e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8003152:	4b50      	ldr	r3, [pc, #320]	; (8003294 <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 8003154:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8003158:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800315c:	4638      	mov	r0, r7
 800315e:	f00e fecf 	bl	8011f00 <_ZN8touchgfx4LineC1Ev>
 8003162:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003166:	4618      	mov	r0, r3
 8003168:	9303      	str	r3, [sp, #12]
 800316a:	f7ff fd3d 	bl	8002be8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800316e:	4b4a      	ldr	r3, [pc, #296]	; (8003298 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8003170:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8003174:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8003178:	3324      	adds	r3, #36	; 0x24
 800317a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 800317e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8003182:	4640      	mov	r0, r8
 8003184:	f7ff ff42 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8003188:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 800318c:	4618      	mov	r0, r3
 800318e:	ee08 3a10 	vmov	s16, r3
 8003192:	f7ff ff3b 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8003196:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800319a:	4618      	mov	r0, r3
 800319c:	ee08 3a90 	vmov	s17, r3
 80031a0:	f7ff ff34 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80031a4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80031a8:	4618      	mov	r0, r3
 80031aa:	ee09 3a10 	vmov	s18, r3
 80031ae:	f010 f91f 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80031b2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80031b6:	4618      	mov	r0, r3
 80031b8:	ee09 3a90 	vmov	s19, r3
 80031bc:	f010 f918 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80031c0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80031c4:	4618      	mov	r0, r3
 80031c6:	ee0a 3a10 	vmov	s20, r3
 80031ca:	f010 f911 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80031ce:	4a33      	ldr	r2, [pc, #204]	; (800329c <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 80031d0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80031d4:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80031d8:	4a31      	ldr	r2, [pc, #196]	; (80032a0 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80031da:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80031de:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80031e2:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80031e6:	f010 ffbf 	bl	8014168 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80031ea:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80031ee:	462a      	mov	r2, r5
 80031f0:	4658      	mov	r0, fp
 80031f2:	9300      	str	r3, [sp, #0]
 80031f4:	4629      	mov	r1, r5
 80031f6:	23f0      	movs	r3, #240	; 0xf0
 80031f8:	f7ff fee2 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80031fc:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80031fe:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003202:	66a3      	str	r3, [r4, #104]	; 0x68
 8003204:	4659      	mov	r1, fp
 8003206:	4630      	mov	r0, r6
 8003208:	f00d fa22 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800320c:	462a      	mov	r2, r5
 800320e:	4650      	mov	r0, sl
 8003210:	4629      	mov	r1, r5
 8003212:	f7ff fec8 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8003216:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003218:	4650      	mov	r0, sl
 800321a:	a90a      	add	r1, sp, #40	; 0x28
 800321c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003220:	f00f ffa5 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003224:	4651      	mov	r1, sl
 8003226:	4630      	mov	r0, r6
 8003228:	f00d fa12 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 800322c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8003230:	2159      	movs	r1, #89	; 0x59
 8003232:	4648      	mov	r0, r9
 8003234:	f7ff feb7 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003238:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800323c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8003240:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8003244:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8003248:	4650      	mov	r0, sl
 800324a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800324e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8003252:	4649      	mov	r1, r9
 8003254:	4798      	blx	r3
 8003256:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800325a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800325e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003262:	4b10      	ldr	r3, [pc, #64]	; (80032a4 <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 8003264:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 8003266:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800326a:	b92b      	cbnz	r3, 8003278 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 800326c:	4b0e      	ldr	r3, [pc, #56]	; (80032a8 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 800326e:	4a0f      	ldr	r2, [pc, #60]	; (80032ac <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8003270:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003272:	480f      	ldr	r0, [pc, #60]	; (80032b0 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 8003274:	f027 fbe2 	bl	802aa3c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8003278:	4b0e      	ldr	r3, [pc, #56]	; (80032b4 <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800327a:	881b      	ldrh	r3, [r3, #0]
 800327c:	2b24      	cmp	r3, #36	; 0x24
 800327e:	d81d      	bhi.n	80032bc <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8003280:	4b0d      	ldr	r3, [pc, #52]	; (80032b8 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 8003282:	4a0a      	ldr	r2, [pc, #40]	; (80032ac <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8003284:	2161      	movs	r1, #97	; 0x61
 8003286:	e7f4      	b.n	8003272 <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8003288:	0802c6e8 	.word	0x0802c6e8
 800328c:	0802ef90 	.word	0x0802ef90
 8003290:	0802f158 	.word	0x0802f158
 8003294:	0802c640 	.word	0x0802c640
 8003298:	0802ecc4 	.word	0x0802ecc4
 800329c:	0802c6d0 	.word	0x0802c6d0
 80032a0:	08002f5d 	.word	0x08002f5d
 80032a4:	20012e0c 	.word	0x20012e0c
 80032a8:	0802c480 	.word	0x0802c480
 80032ac:	0802c582 	.word	0x0802c582
 80032b0:	0802c4fd 	.word	0x0802c4fd
 80032b4:	20012e10 	.word	0x20012e10
 80032b8:	0802c544 	.word	0x0802c544
        return texts->getText(typedTextId);
 80032bc:	4b93      	ldr	r3, [pc, #588]	; (800350c <_ZN19CalibrationViewBaseC1Ev+0x434>)
 80032be:	2124      	movs	r1, #36	; 0x24
 80032c0:	6818      	ldr	r0, [r3, #0]
 80032c2:	f005 fe53 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 80032c6:	4a92      	ldr	r2, [pc, #584]	; (8003510 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 80032c8:	4603      	mov	r3, r0
 80032ca:	2104      	movs	r1, #4
 80032cc:	4650      	mov	r0, sl
 80032ce:	f015 fdc7 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80032d2:	4648      	mov	r0, r9
        wc1 = value;
 80032d4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80032d8:	f00f fb4e 	bl	8012978 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80032dc:	4b8d      	ldr	r3, [pc, #564]	; (8003514 <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 80032de:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 80032e0:	a90a      	add	r1, sp, #40	; 0x28
 80032e2:	2325      	movs	r3, #37	; 0x25
 80032e4:	4648      	mov	r0, r9
 80032e6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80032ea:	f00f fb65 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80032ee:	4649      	mov	r1, r9
 80032f0:	4630      	mov	r0, r6
 80032f2:	f00d f9ad 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80032f6:	230a      	movs	r3, #10
 80032f8:	9300      	str	r3, [sp, #0]
 80032fa:	2232      	movs	r2, #50	; 0x32
 80032fc:	23f0      	movs	r3, #240	; 0xf0
 80032fe:	4629      	mov	r1, r5
 8003300:	4638      	mov	r0, r7
 8003302:	f7ff fe5d 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8003306:	9b03      	ldr	r3, [sp, #12]
 8003308:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800330c:	22a0      	movs	r2, #160	; 0xa0
 800330e:	4611      	mov	r1, r2
 8003310:	4638      	mov	r0, r7
 8003312:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003316:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800331a:	f00e ff07 	bl	801212c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800331e:	22a0      	movs	r2, #160	; 0xa0
 8003320:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003324:	4638      	mov	r0, r7
 8003326:	f00e ff0c 	bl	8012142 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 800332a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800332e:	2b20      	cmp	r3, #32
 8003330:	d005      	beq.n	800333e <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8003332:	2320      	movs	r3, #32
 8003334:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 8003338:	4638      	mov	r0, r7
 800333a:	f00e fe01 	bl	8011f40 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800333e:	4638      	mov	r0, r7
 8003340:	2101      	movs	r1, #1
 8003342:	f00e ff09 	bl	8012158 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003346:	4639      	mov	r1, r7
 8003348:	4630      	mov	r0, r6
 800334a:	ad04      	add	r5, sp, #16
        color = newColor;
 800334c:	f04f 37ff 	mov.w	r7, #4294967295
 8003350:	f00d f97e 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8003354:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8003358:	223c      	movs	r2, #60	; 0x3c
 800335a:	4640      	mov	r0, r8
 800335c:	2146      	movs	r1, #70	; 0x46
 800335e:	f7ff fe22 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003362:	4641      	mov	r1, r8
 8003364:	4628      	mov	r0, r5
        color = newColor;
 8003366:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800336a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800336e:	f00f f889 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003372:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003376:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800337a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800337e:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8003514 <_ZN19CalibrationViewBaseC1Ev+0x43c>
 8003382:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8003386:	231d      	movs	r3, #29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8003388:	a90a      	add	r1, sp, #40	; 0x28
 800338a:	4640      	mov	r0, r8
 800338c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003390:	f00f fb12 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003394:	4641      	mov	r1, r8
 8003396:	4630      	mov	r0, r6
 8003398:	f00d f95a 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 800339c:	ee18 0a10 	vmov	r0, s16
 80033a0:	2223      	movs	r2, #35	; 0x23
 80033a2:	2145      	movs	r1, #69	; 0x45
 80033a4:	f7ff fdff 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80033a8:	ee18 1a10 	vmov	r1, s16
 80033ac:	4628      	mov	r0, r5
        color = newColor;
 80033ae:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80033b2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80033b6:	f00f f865 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80033ba:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80033be:	ee18 3a10 	vmov	r3, s16
 80033c2:	333c      	adds	r3, #60	; 0x3c
 80033c4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80033c8:	235a      	movs	r3, #90	; 0x5a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 80033ca:	ee18 0a10 	vmov	r0, s16
 80033ce:	a90a      	add	r1, sp, #40	; 0x28
 80033d0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80033d4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80033d8:	f00f faee 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80033dc:	ee18 1a10 	vmov	r1, s16
 80033e0:	4630      	mov	r0, r6
 80033e2:	f00d f935 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80033e6:	ee18 0a90 	vmov	r0, s17
 80033ea:	220c      	movs	r2, #12
 80033ec:	2136      	movs	r1, #54	; 0x36
 80033ee:	f7ff fdda 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80033f2:	ee18 1a90 	vmov	r1, s17
 80033f6:	4628      	mov	r0, r5
        color = newColor;
 80033f8:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80033fc:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8003400:	f00f f840 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003404:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003408:	ee18 3a90 	vmov	r3, s17
 800340c:	333c      	adds	r3, #60	; 0x3c
 800340e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003412:	2359      	movs	r3, #89	; 0x59
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 8003414:	ee18 0a90 	vmov	r0, s17
 8003418:	a90a      	add	r1, sp, #40	; 0x28
 800341a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800341e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8003422:	f00f fac9 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003426:	ee18 1a90 	vmov	r1, s17
 800342a:	4630      	mov	r0, r6
 800342c:	f00d f910 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8003430:	ee19 0a10 	vmov	r0, s18
 8003434:	22f0      	movs	r2, #240	; 0xf0
 8003436:	2121      	movs	r1, #33	; 0x21
 8003438:	f7ff fdb5 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 800343c:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003440:	aa0a      	add	r2, sp, #40	; 0x28
 8003442:	f04f 0802 	mov.w	r8, #2
 8003446:	a909      	add	r1, sp, #36	; 0x24
 8003448:	ee19 0a10 	vmov	r0, s18
 800344c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8003450:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8003454:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003458:	f00f fc93 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800345c:	2358      	movs	r3, #88	; 0x58
 800345e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8003462:	3510      	adds	r5, #16
        updateTextPosition();
 8003464:	ee19 0a10 	vmov	r0, s18
 8003468:	f7ff fdf2 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800346c:	ee19 1a10 	vmov	r1, s18
 8003470:	4630      	mov	r0, r6
        colorPressed = col;
 8003472:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003476:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800347a:	f00d f8e9 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800347e:	ee19 0a90 	vmov	r0, s19
 8003482:	22aa      	movs	r2, #170	; 0xaa
 8003484:	2121      	movs	r1, #33	; 0x21
 8003486:	f7ff fd8e 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800348a:	aa0a      	add	r2, sp, #40	; 0x28
 800348c:	a909      	add	r1, sp, #36	; 0x24
 800348e:	ee19 0a90 	vmov	r0, s19
 8003492:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8003496:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800349a:	f00f fc72 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800349e:	2357      	movs	r3, #87	; 0x57
 80034a0:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80034a4:	ee19 0a90 	vmov	r0, s19
 80034a8:	f7ff fdd2 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80034ac:	ee19 1a90 	vmov	r1, s19
 80034b0:	4630      	mov	r0, r6
        colorPressed = col;
 80034b2:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80034b6:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80034ba:	f00d f8c9 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80034be:	ee1a 0a10 	vmov	r0, s20
 80034c2:	2264      	movs	r2, #100	; 0x64
 80034c4:	2121      	movs	r1, #33	; 0x21
 80034c6:	f7ff fd6e 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80034ca:	aa0a      	add	r2, sp, #40	; 0x28
 80034cc:	a909      	add	r1, sp, #36	; 0x24
 80034ce:	ee1a 0a10 	vmov	r0, s20
 80034d2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80034d6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80034da:	f00f fc52 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80034de:	2356      	movs	r3, #86	; 0x56
        updateTextPosition();
 80034e0:	ee1a 0a10 	vmov	r0, s20
 80034e4:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80034e8:	f7ff fdb2 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80034ec:	4630      	mov	r0, r6
        colorPressed = col;
 80034ee:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80034f2:	ee1a 1a10 	vmov	r1, s20
 80034f6:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80034fa:	f00d f8a9 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80034fe:	4620      	mov	r0, r4
 8003500:	b00d      	add	sp, #52	; 0x34
 8003502:	ecbd 8b06 	vpop	{d8-d10}
 8003506:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800350a:	bf00      	nop
 800350c:	20012e18 	.word	0x20012e18
 8003510:	0802c5ba 	.word	0x0802c5ba
 8003514:	0802c630 	.word	0x0802c630

08003518 <_ZN24Calibration_HallViewBase25function_cali_hall_sensorEv>:
     * Virtual Action Handlers
     */
    virtual void function_cali_hall_sensor()
    {
        // Override and implement this function in Calibration_Hall
    }
 8003518:	4770      	bx	lr

0800351a <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 800351a:	4770      	bx	lr

0800351c <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800351c:	4770      	bx	lr

0800351e <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800351e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003520:	68c2      	ldr	r2, [r0, #12]
 8003522:	6844      	ldr	r4, [r0, #4]
 8003524:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003526:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003528:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800352c:	07d2      	lsls	r2, r2, #31
 800352e:	bf48      	it	mi
 8003530:	5962      	ldrmi	r2, [r4, r5]
 8003532:	689b      	ldr	r3, [r3, #8]
    }
 8003534:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003536:	bf48      	it	mi
 8003538:	58d3      	ldrmi	r3, [r2, r3]
 800353a:	4718      	bx	r3

0800353c <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800353c:	6843      	ldr	r3, [r0, #4]
 800353e:	b12b      	cbz	r3, 800354c <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003540:	6883      	ldr	r3, [r0, #8]
 8003542:	b92b      	cbnz	r3, 8003550 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003544:	68c0      	ldr	r0, [r0, #12]
 8003546:	f000 0001 	and.w	r0, r0, #1
 800354a:	4770      	bx	lr
 800354c:	4618      	mov	r0, r3
 800354e:	4770      	bx	lr
 8003550:	2001      	movs	r0, #1
    }
 8003552:	4770      	bx	lr

08003554 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003554:	b510      	push	{r4, lr}
 8003556:	2110      	movs	r1, #16
 8003558:	4604      	mov	r4, r0
 800355a:	f026 fb88 	bl	8029c6e <_ZdlPvj>
 800355e:	4620      	mov	r0, r4
 8003560:	bd10      	pop	{r4, pc}
	...

08003564 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8003564:	b510      	push	{r4, lr}
 8003566:	4b03      	ldr	r3, [pc, #12]	; (8003574 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8003568:	6003      	str	r3, [r0, #0]
 800356a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800356c:	f010 fe06 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003570:	4620      	mov	r0, r4
 8003572:	bd10      	pop	{r4, pc}
 8003574:	0802c734 	.word	0x0802c734

08003578 <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8003578:	b507      	push	{r0, r1, r2, lr}
 800357a:	4b07      	ldr	r3, [pc, #28]	; (8003598 <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 800357c:	6003      	str	r3, [r0, #0]
 800357e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003580:	f010 fdfc 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003584:	9801      	ldr	r0, [sp, #4]
 8003586:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 800358a:	f026 fb70 	bl	8029c6e <_ZdlPvj>
 800358e:	9801      	ldr	r0, [sp, #4]
 8003590:	b003      	add	sp, #12
 8003592:	f85d fb04 	ldr.w	pc, [sp], #4
 8003596:	bf00      	nop
 8003598:	0802c734 	.word	0x0802c734

0800359c <_ZN24Calibration_HallViewBase15handleTickEventEv>:
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}

void Calibration_HallViewBase::handleTickEvent()
{
 800359c:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 800359e:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 80035a2:	f8d4 21dc 	ldr.w	r2, [r4, #476]	; 0x1dc
 80035a6:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 80035a8:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 80035aa:	f8c4 21dc 	str.w	r2, [r4, #476]	; 0x1dc
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 80035ae:	d105      	bne.n	80035bc <_ZN24Calibration_HallViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call function_cali_hall_sensor
        function_cali_hall_sensor();
 80035b0:	6803      	ldr	r3, [r0, #0]
 80035b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80035b4:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 80035b6:	2300      	movs	r3, #0
 80035b8:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
    }
}
 80035bc:	bd10      	pop	{r4, pc}

080035be <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 80035be:	f500 70e4 	add.w	r0, r0, #456	; 0x1c8
 80035c2:	4288      	cmp	r0, r1
{
 80035c4:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80035c6:	d105      	bne.n	80035d4 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80035c8:	f012 fada 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
}
 80035cc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 80035d0:	f001 b970 	b.w	80048b4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 80035d4:	bd08      	pop	{r3, pc}
	...

080035d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 80035d8:	b510      	push	{r4, lr}
 80035da:	4604      	mov	r4, r0
        : TextArea()
 80035dc:	f7ff fd16 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80035e0:	4b02      	ldr	r3, [pc, #8]	; (80035ec <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 80035e2:	6023      	str	r3, [r4, #0]
 80035e4:	2300      	movs	r3, #0
 80035e6:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 80035e8:	4620      	mov	r0, r4
 80035ea:	bd10      	pop	{r4, pc}
 80035ec:	0802c640 	.word	0x0802c640

080035f0 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 80035f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80035f4:	ed2d 8b06 	vpush	{d8-d10}
 80035f8:	4604      	mov	r4, r0
 80035fa:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 80035fc:	46a3      	mov	fp, r4
 80035fe:	2500      	movs	r5, #0
 8003600:	f013 ff3e 	bl	8017480 <_ZN8touchgfx6ScreenC1Ev>
 8003604:	4b69      	ldr	r3, [pc, #420]	; (80037ac <_ZN24Calibration_HallViewBaseC1Ev+0x1bc>)
 8003606:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003608:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800360c:	2226      	movs	r2, #38	; 0x26
 800360e:	4629      	mov	r1, r5
 8003610:	4658      	mov	r0, fp
 8003612:	f027 fc18 	bl	802ae46 <memset>
 8003616:	4658      	mov	r0, fp
 8003618:	f7ff fce6 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 800361c:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 8003620:	27ff      	movs	r7, #255	; 0xff
 8003622:	4b63      	ldr	r3, [pc, #396]	; (80037b0 <_ZN24Calibration_HallViewBaseC1Ev+0x1c0>)
 8003624:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8003626:	2226      	movs	r2, #38	; 0x26
 8003628:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800362c:	4629      	mov	r1, r5
 800362e:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 8003632:	4630      	mov	r0, r6
 8003634:	66a5      	str	r5, [r4, #104]	; 0x68
 8003636:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800363a:	f027 fc04 	bl	802ae46 <memset>
 800363e:	4630      	mov	r0, r6
 8003640:	f7ff fcd2 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 8003644:	4b5b      	ldr	r3, [pc, #364]	; (80037b4 <_ZN24Calibration_HallViewBaseC1Ev+0x1c4>)
 8003646:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003648:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800364c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003650:	a90a      	add	r1, sp, #40	; 0x28
 8003652:	4630      	mov	r0, r6
 8003654:	f104 0a98 	add.w	sl, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8003658:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800365c:	f00f fd87 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003660:	f104 09e4 	add.w	r9, r4, #228	; 0xe4
 8003664:	4650      	mov	r0, sl
 8003666:	f7ff ffb7 	bl	80035d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800366a:	4648      	mov	r0, r9
 800366c:	f7ff ffb4 	bl	80035d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003670:	f504 7398 	add.w	r3, r4, #304	; 0x130
 8003674:	4618      	mov	r0, r3
 8003676:	ee09 3a10 	vmov	s18, r3
 800367a:	f7ff ffad 	bl	80035d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800367e:	f504 73be 	add.w	r3, r4, #380	; 0x17c
 8003682:	4618      	mov	r0, r3
 8003684:	ee09 3a90 	vmov	s19, r3
 8003688:	f7ff ffa6 	bl	80035d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800368c:	f504 73e4 	add.w	r3, r4, #456	; 0x1c8
 8003690:	4618      	mov	r0, r3
 8003692:	ee0a 3a10 	vmov	s20, r3
 8003696:	f00f feab 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800369a:	f504 7304 	add.w	r3, r4, #528	; 0x210
 800369e:	4618      	mov	r0, r3
 80036a0:	f504 7816 	add.w	r8, r4, #600	; 0x258
 80036a4:	ee0a 3a90 	vmov	s21, r3
 80036a8:	f7ff fcb0 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80036ac:	4640      	mov	r0, r8
 80036ae:	f00e fc27 	bl	8011f00 <_ZN8touchgfx4LineC1Ev>
 80036b2:	f504 7332 	add.w	r3, r4, #712	; 0x2c8
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80036b6:	4618      	mov	r0, r3
 80036b8:	9302      	str	r3, [sp, #8]
 80036ba:	f7ff fa95 	bl	8002be8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80036be:	4b3e      	ldr	r3, [pc, #248]	; (80037b8 <_ZN24Calibration_HallViewBaseC1Ev+0x1c8>)
 80036c0:	f8c4 32c8 	str.w	r3, [r4, #712]	; 0x2c8
 80036c4:	3324      	adds	r3, #36	; 0x24
 80036c6:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
 80036ca:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 80036ce:	4618      	mov	r0, r3
 80036d0:	f8c4 52d4 	str.w	r5, [r4, #724]	; 0x2d4
 80036d4:	ee08 3a10 	vmov	s16, r3
 80036d8:	f7ff fc98 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80036dc:	f504 7349 	add.w	r3, r4, #804	; 0x324
 80036e0:	4618      	mov	r0, r3
 80036e2:	ee08 3a90 	vmov	s17, r3
 80036e6:	f7ff fc91 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80036ea:	4a34      	ldr	r2, [pc, #208]	; (80037bc <_ZN24Calibration_HallViewBaseC1Ev+0x1cc>)
 80036ec:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80036f0:	e9c3 2473 	strd	r2, r4, [r3, #460]	; 0x1cc
 80036f4:	4a32      	ldr	r2, [pc, #200]	; (80037c0 <_ZN24Calibration_HallViewBaseC1Ev+0x1d0>)
 80036f6:	f8c3 51dc 	str.w	r5, [r3, #476]	; 0x1dc
 80036fa:	e9c3 2575 	strd	r2, r5, [r3, #468]	; 0x1d4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80036fe:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003702:	f504 706f 	add.w	r0, r4, #956	; 0x3bc
 8003706:	f010 fd2f 	bl	8014168 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800370a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800370e:	462a      	mov	r2, r5
 8003710:	4658      	mov	r0, fp
 8003712:	9300      	str	r3, [sp, #0]
 8003714:	4629      	mov	r1, r5
 8003716:	23f0      	movs	r3, #240	; 0xf0
 8003718:	f7ff fc52 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800371c:	1d27      	adds	r7, r4, #4
        color = newColor;
 800371e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003722:	66a3      	str	r3, [r4, #104]	; 0x68
 8003724:	4659      	mov	r1, fp
 8003726:	4638      	mov	r0, r7
 8003728:	f00c ff92 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800372c:	462a      	mov	r2, r5
 800372e:	4630      	mov	r0, r6
 8003730:	4629      	mov	r1, r5
 8003732:	f7ff fc38 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8003736:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003738:	4630      	mov	r0, r6
 800373a:	a90a      	add	r1, sp, #40	; 0x28
 800373c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003740:	f00f fd15 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003744:	4631      	mov	r1, r6
 8003746:	4638      	mov	r0, r7
 8003748:	f00c ff82 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSL_S.setPosition(0, 160, 207, 27);
 800374c:	231b      	movs	r3, #27
 800374e:	22a0      	movs	r2, #160	; 0xa0
 8003750:	9300      	str	r3, [sp, #0]
 8003752:	4629      	mov	r1, r5
 8003754:	23cf      	movs	r3, #207	; 0xcf
 8003756:	4650      	mov	r0, sl
 8003758:	f7ff fc32 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800375c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8003760:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8003764:	ae04      	add	r6, sp, #16
        color = newColor;
 8003766:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800376a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800376e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8003772:	4651      	mov	r1, sl
 8003774:	4630      	mov	r0, r6
 8003776:	4798      	blx	r3
 8003778:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800377c:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003780:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(CALIBRATION_HSL_SBuffer, CALIBRATION_HSL_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_96IR).getText());
 8003784:	f504 735b 	add.w	r3, r4, #876	; 0x36c
 8003788:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800378a:	4b0e      	ldr	r3, [pc, #56]	; (80037c4 <_ZN24Calibration_HallViewBaseC1Ev+0x1d4>)
 800378c:	681b      	ldr	r3, [r3, #0]
 800378e:	b92b      	cbnz	r3, 800379c <_ZN24Calibration_HallViewBaseC1Ev+0x1ac>
 8003790:	4b0d      	ldr	r3, [pc, #52]	; (80037c8 <_ZN24Calibration_HallViewBaseC1Ev+0x1d8>)
 8003792:	4a0e      	ldr	r2, [pc, #56]	; (80037cc <_ZN24Calibration_HallViewBaseC1Ev+0x1dc>)
 8003794:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003796:	480e      	ldr	r0, [pc, #56]	; (80037d0 <_ZN24Calibration_HallViewBaseC1Ev+0x1e0>)
 8003798:	f027 f950 	bl	802aa3c <__assert_func>
 800379c:	4b0d      	ldr	r3, [pc, #52]	; (80037d4 <_ZN24Calibration_HallViewBaseC1Ev+0x1e4>)
 800379e:	881b      	ldrh	r3, [r3, #0]
 80037a0:	b9e3      	cbnz	r3, 80037dc <_ZN24Calibration_HallViewBaseC1Ev+0x1ec>
 80037a2:	4b0d      	ldr	r3, [pc, #52]	; (80037d8 <_ZN24Calibration_HallViewBaseC1Ev+0x1e8>)
 80037a4:	4a09      	ldr	r2, [pc, #36]	; (80037cc <_ZN24Calibration_HallViewBaseC1Ev+0x1dc>)
 80037a6:	2161      	movs	r1, #97	; 0x61
 80037a8:	e7f5      	b.n	8003796 <_ZN24Calibration_HallViewBaseC1Ev+0x1a6>
 80037aa:	bf00      	nop
 80037ac:	0802c734 	.word	0x0802c734
 80037b0:	0802ef90 	.word	0x0802ef90
 80037b4:	0802f158 	.word	0x0802f158
 80037b8:	0802ecc4 	.word	0x0802ecc4
 80037bc:	0802c71c 	.word	0x0802c71c
 80037c0:	080035bf 	.word	0x080035bf
 80037c4:	20012e0c 	.word	0x20012e0c
 80037c8:	0802c480 	.word	0x0802c480
 80037cc:	0802c582 	.word	0x0802c582
 80037d0:	0802c4fd 	.word	0x0802c4fd
 80037d4:	20012e10 	.word	0x20012e10
 80037d8:	0802c544 	.word	0x0802c544
        return texts->getText(typedTextId);
 80037dc:	4bd7      	ldr	r3, [pc, #860]	; (8003b3c <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 80037de:	4629      	mov	r1, r5
 80037e0:	6818      	ldr	r0, [r3, #0]
 80037e2:	f005 fbc3 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 80037e6:	4ad6      	ldr	r2, [pc, #856]	; (8003b40 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 80037e8:	4603      	mov	r3, r0
 80037ea:	210a      	movs	r1, #10
 80037ec:	9803      	ldr	r0, [sp, #12]
 80037ee:	f015 fb37 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80037f2:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 80037f4:	4bd3      	ldr	r3, [pc, #844]	; (8003b44 <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 80037f6:	f8c4 10e0 	str.w	r1, [r4, #224]	; 0xe0
    CALIBRATION_HSL_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T1XZ));
 80037fa:	4650      	mov	r0, sl
 80037fc:	930a      	str	r3, [sp, #40]	; 0x28
 80037fe:	a90a      	add	r1, sp, #40	; 0x28
 8003800:	2301      	movs	r3, #1
 8003802:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003806:	f00f f8d7 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800380a:	4651      	mov	r1, sl
 800380c:	4638      	mov	r0, r7
 800380e:	f00c ff1f 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSL_F.setPosition(25, 187, 207, 22);
 8003812:	2116      	movs	r1, #22
 8003814:	22bb      	movs	r2, #187	; 0xbb
 8003816:	9100      	str	r1, [sp, #0]
 8003818:	23cf      	movs	r3, #207	; 0xcf
 800381a:	2119      	movs	r1, #25
 800381c:	4648      	mov	r0, r9
 800381e:	f7ff fbcf 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003822:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
        color = newColor;
 8003826:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800382a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800382e:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8003832:	4649      	mov	r1, r9
 8003834:	4630      	mov	r0, r6
 8003836:	4798      	blx	r3
 8003838:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800383c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8003840:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003844:	49c0      	ldr	r1, [pc, #768]	; (8003b48 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 8003846:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSL_FBuffer, CALIBRATION_HSL_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PU07).getText());
 8003848:	f504 7a60 	add.w	sl, r4, #896	; 0x380
 800384c:	2b00      	cmp	r3, #0
 800384e:	d09f      	beq.n	8003790 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003850:	48be      	ldr	r0, [pc, #760]	; (8003b4c <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 8003852:	8803      	ldrh	r3, [r0, #0]
 8003854:	2b02      	cmp	r3, #2
 8003856:	d9a4      	bls.n	80037a2 <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 8003858:	4ab8      	ldr	r2, [pc, #736]	; (8003b3c <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 800385a:	2102      	movs	r1, #2
 800385c:	6810      	ldr	r0, [r2, #0]
 800385e:	f005 fb85 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 8003862:	4ab7      	ldr	r2, [pc, #732]	; (8003b40 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 8003864:	4603      	mov	r3, r0
 8003866:	210a      	movs	r1, #10
 8003868:	4650      	mov	r0, sl
 800386a:	f015 faf9 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_HSL_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AFGX));
 800386e:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8003872:	4bb4      	ldr	r3, [pc, #720]	; (8003b44 <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003874:	f8c4 a12c 	str.w	sl, [r4, #300]	; 0x12c
 8003878:	4661      	mov	r1, ip
 800387a:	4648      	mov	r0, r9
 800387c:	f04f 0a03 	mov.w	sl, #3
 8003880:	930a      	str	r3, [sp, #40]	; 0x28
 8003882:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 8003886:	f00f f897 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800388a:	4649      	mov	r1, r9
 800388c:	4638      	mov	r0, r7
 800388e:	f00c fedf 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSR_F.setPosition(25, 119, 207, 22);
 8003892:	f04f 0c16 	mov.w	ip, #22
 8003896:	2277      	movs	r2, #119	; 0x77
 8003898:	ee19 0a10 	vmov	r0, s18
 800389c:	f8cd c000 	str.w	ip, [sp]
 80038a0:	23cf      	movs	r3, #207	; 0xcf
 80038a2:	2119      	movs	r1, #25
 80038a4:	f7ff fb8c 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80038a8:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
        color = newColor;
 80038ac:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 80038b0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80038b4:	f8a4 5164 	strh.w	r5, [r4, #356]	; 0x164
        boundingArea = calculateBoundingArea();
 80038b8:	ee19 1a10 	vmov	r1, s18
 80038bc:	4630      	mov	r0, r6
 80038be:	4798      	blx	r3
 80038c0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80038c4:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 80038c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80038cc:	499e      	ldr	r1, [pc, #632]	; (8003b48 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 80038ce:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSR_FBuffer, CALIBRATION_HSR_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IPYE).getText());
 80038d0:	f504 7965 	add.w	r9, r4, #916	; 0x394
 80038d4:	2b00      	cmp	r3, #0
 80038d6:	f43f af5b 	beq.w	8003790 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80038da:	489c      	ldr	r0, [pc, #624]	; (8003b4c <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 80038dc:	8803      	ldrh	r3, [r0, #0]
 80038de:	2b04      	cmp	r3, #4
 80038e0:	f67f af5f 	bls.w	80037a2 <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 80038e4:	4a95      	ldr	r2, [pc, #596]	; (8003b3c <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 80038e6:	2104      	movs	r1, #4
 80038e8:	6810      	ldr	r0, [r2, #0]
 80038ea:	f005 fb3f 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 80038ee:	4a94      	ldr	r2, [pc, #592]	; (8003b40 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 80038f0:	4603      	mov	r3, r0
 80038f2:	210a      	movs	r1, #10
 80038f4:	4648      	mov	r0, r9
 80038f6:	f015 fab3 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_HSR_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0EGP));
 80038fa:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 80038fe:	4b91      	ldr	r3, [pc, #580]	; (8003b44 <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003900:	f8c4 9178 	str.w	r9, [r4, #376]	; 0x178
 8003904:	4661      	mov	r1, ip
 8003906:	ee19 0a10 	vmov	r0, s18
 800390a:	930a      	str	r3, [sp, #40]	; 0x28
 800390c:	2305      	movs	r3, #5
 800390e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003912:	f00f f851 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003916:	ee19 1a10 	vmov	r1, s18
 800391a:	4638      	mov	r0, r7
 800391c:	f00c fe98 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_HSR_S.setPosition(0, 92, 207, 27);
 8003920:	f04f 0c1b 	mov.w	ip, #27
 8003924:	225c      	movs	r2, #92	; 0x5c
 8003926:	ee19 0a90 	vmov	r0, s19
 800392a:	f8cd c000 	str.w	ip, [sp]
 800392e:	23cf      	movs	r3, #207	; 0xcf
 8003930:	4629      	mov	r1, r5
 8003932:	f7ff fb45 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003936:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
        color = newColor;
 800393a:	f8c4 b1ac 	str.w	fp, [r4, #428]	; 0x1ac
        boundingArea = calculateBoundingArea();
 800393e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003942:	f8a4 51b0 	strh.w	r5, [r4, #432]	; 0x1b0
        boundingArea = calculateBoundingArea();
 8003946:	ee19 1a90 	vmov	r1, s19
 800394a:	4630      	mov	r0, r6
 800394c:	4798      	blx	r3
 800394e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003952:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 8003956:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800395a:	497b      	ldr	r1, [pc, #492]	; (8003b48 <_ZN24Calibration_HallViewBaseC1Ev+0x558>)
 800395c:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_HSR_SBuffer, CALIBRATION_HSR_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KCM3).getText());
 800395e:	f504 796a 	add.w	r9, r4, #936	; 0x3a8
 8003962:	2b00      	cmp	r3, #0
 8003964:	f43f af14 	beq.w	8003790 <_ZN24Calibration_HallViewBaseC1Ev+0x1a0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003968:	4878      	ldr	r0, [pc, #480]	; (8003b4c <_ZN24Calibration_HallViewBaseC1Ev+0x55c>)
 800396a:	8803      	ldrh	r3, [r0, #0]
 800396c:	2b06      	cmp	r3, #6
 800396e:	f67f af18 	bls.w	80037a2 <_ZN24Calibration_HallViewBaseC1Ev+0x1b2>
        return texts->getText(typedTextId);
 8003972:	4a72      	ldr	r2, [pc, #456]	; (8003b3c <_ZN24Calibration_HallViewBaseC1Ev+0x54c>)
 8003974:	2106      	movs	r1, #6
 8003976:	6810      	ldr	r0, [r2, #0]
 8003978:	f005 faf8 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 800397c:	4a70      	ldr	r2, [pc, #448]	; (8003b40 <_ZN24Calibration_HallViewBaseC1Ev+0x550>)
 800397e:	4603      	mov	r3, r0
 8003980:	210a      	movs	r1, #10
 8003982:	4648      	mov	r0, r9
 8003984:	f015 fa6c 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003988:	4b6e      	ldr	r3, [pc, #440]	; (8003b44 <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 800398a:	930a      	str	r3, [sp, #40]	; 0x28
    CALIBRATION_HSR_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2MWJ));
 800398c:	ee19 0a90 	vmov	r0, s19
 8003990:	2307      	movs	r3, #7
 8003992:	a90a      	add	r1, sp, #40	; 0x28
 8003994:	f8c4 91c4 	str.w	r9, [r4, #452]	; 0x1c4
 8003998:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800399c:	f00f f80c 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80039a0:	ee19 1a90 	vmov	r1, s19
 80039a4:	4638      	mov	r0, r7
 80039a6:	f00c fe53 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80039aa:	ee1a 0a10 	vmov	r0, s20
 80039ae:	f240 1201 	movw	r2, #257	; 0x101
 80039b2:	2121      	movs	r1, #33	; 0x21
 80039b4:	f7ff faf7 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80039b8:	aa0a      	add	r2, sp, #40	; 0x28
 80039ba:	2302      	movs	r3, #2
 80039bc:	a909      	add	r1, sp, #36	; 0x24
 80039be:	ee1a 0a10 	vmov	r0, s20
 80039c2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80039c6:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 80039ca:	f00f f9da 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80039ce:	2319      	movs	r3, #25
        updateTextPosition();
 80039d0:	ee1a 0a10 	vmov	r0, s20
 80039d4:	f8a4 3200 	strh.w	r3, [r4, #512]	; 0x200
 80039d8:	f7ff fb3a 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80039dc:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 80039e0:	330c      	adds	r3, #12
 80039e2:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 80039e6:	ee1a 1a10 	vmov	r1, s20
 80039ea:	4638      	mov	r0, r7
        colorPressed = col;
 80039ec:	e9c4 bb81 	strd	fp, fp, [r4, #516]	; 0x204
 80039f0:	f00c fe2e 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(32, 60);
 80039f4:	223c      	movs	r2, #60	; 0x3c
 80039f6:	ee1a 0a90 	vmov	r0, s21
 80039fa:	2120      	movs	r1, #32
 80039fc:	f7ff fad3 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8003a00:	ee1a 1a90 	vmov	r1, s21
 8003a04:	4630      	mov	r0, r6
        color = newColor;
 8003a06:	f8c4 b240 	str.w	fp, [r4, #576]	; 0x240
        linespace = space;
 8003a0a:	f8a4 5244 	strh.w	r5, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 8003a0e:	f00e fd39 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003a12:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003a16:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8003a1a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003a1e:	4b49      	ldr	r3, [pc, #292]	; (8003b44 <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003a20:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8003a22:	ee1a 0a90 	vmov	r0, s21
 8003a26:	231a      	movs	r3, #26
 8003a28:	a90a      	add	r1, sp, #40	; 0x28
 8003a2a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003a2e:	f00e ffc3 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a32:	ee1a 1a90 	vmov	r1, s21
 8003a36:	4638      	mov	r0, r7
 8003a38:	f00c fe0a 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8003a3c:	230a      	movs	r3, #10
 8003a3e:	9300      	str	r3, [sp, #0]
 8003a40:	2232      	movs	r2, #50	; 0x32
 8003a42:	23f0      	movs	r3, #240	; 0xf0
 8003a44:	4629      	mov	r1, r5
 8003a46:	4640      	mov	r0, r8
 8003a48:	f7ff faba 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a4c:	9b02      	ldr	r3, [sp, #8]
 8003a4e:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003a52:	22a0      	movs	r2, #160	; 0xa0
 8003a54:	4611      	mov	r1, r2
 8003a56:	4640      	mov	r0, r8
 8003a58:	f8c4 b2d4 	str.w	fp, [r4, #724]	; 0x2d4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003a5c:	f8a4 b2d8 	strh.w	fp, [r4, #728]	; 0x2d8
 8003a60:	f00e fb64 	bl	801212c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003a64:	22a0      	movs	r2, #160	; 0xa0
 8003a66:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003a6a:	4640      	mov	r0, r8
 8003a6c:	f00e fb69 	bl	8012142 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003a70:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 8003a74:	2b20      	cmp	r3, #32
 8003a76:	d005      	beq.n	8003a84 <_ZN24Calibration_HallViewBaseC1Ev+0x494>
        lineWidthQ5 = widthQ5;
 8003a78:	2320      	movs	r3, #32
 8003a7a:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
        updateCachedShape();
 8003a7e:	4640      	mov	r0, r8
 8003a80:	f00e fa5e 	bl	8011f40 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003a84:	4640      	mov	r0, r8
 8003a86:	2101      	movs	r1, #1
 8003a88:	f00e fb66 	bl	8012158 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003a8c:	4641      	mov	r1, r8
 8003a8e:	4638      	mov	r0, r7
 8003a90:	f00c fdde 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003a94:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8003a96:	ee18 0a10 	vmov	r0, s16
 8003a9a:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8003a9c:	f04f 39ff 	mov.w	r9, #4294967295
        linespace = space;
 8003aa0:	f04f 0800 	mov.w	r8, #0
 8003aa4:	2145      	movs	r1, #69	; 0x45
 8003aa6:	f7ff fa7e 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003aaa:	ee18 1a10 	vmov	r1, s16
 8003aae:	4628      	mov	r0, r5
        color = newColor;
 8003ab0:	f8c4 930c 	str.w	r9, [r4, #780]	; 0x30c
        linespace = space;
 8003ab4:	f8a4 8310 	strh.w	r8, [r4, #784]	; 0x310
        boundingArea = calculateBoundingArea();
 8003ab8:	f00e fce4 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003abc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003ac0:	ee18 3a10 	vmov	r3, s16
 8003ac4:	333c      	adds	r3, #60	; 0x3c
 8003ac6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003aca:	4e1e      	ldr	r6, [pc, #120]	; (8003b44 <_ZN24Calibration_HallViewBaseC1Ev+0x554>)
 8003acc:	960a      	str	r6, [sp, #40]	; 0x28
 8003ace:	231b      	movs	r3, #27
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8003ad0:	ee18 0a10 	vmov	r0, s16
 8003ad4:	a90a      	add	r1, sp, #40	; 0x28
 8003ad6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003ada:	f00e ff6d 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003ade:	ee18 1a10 	vmov	r1, s16
 8003ae2:	4638      	mov	r0, r7
 8003ae4:	f00c fdb4 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003ae8:	ee18 0a90 	vmov	r0, s17
 8003aec:	220c      	movs	r2, #12
 8003aee:	2136      	movs	r1, #54	; 0x36
 8003af0:	f7ff fa59 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8003af4:	ee18 1a90 	vmov	r1, s17
 8003af8:	4628      	mov	r0, r5
        color = newColor;
 8003afa:	f8c4 9354 	str.w	r9, [r4, #852]	; 0x354
        linespace = space;
 8003afe:	f8a4 8358 	strh.w	r8, [r4, #856]	; 0x358
        boundingArea = calculateBoundingArea();
 8003b02:	f00e fcbf 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003b06:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003b0a:	ee18 3a90 	vmov	r3, s17
 8003b0e:	333c      	adds	r3, #60	; 0x3c
 8003b10:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003b14:	231c      	movs	r3, #28
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8003b16:	ee18 0a90 	vmov	r0, s17
 8003b1a:	a90a      	add	r1, sp, #40	; 0x28
 8003b1c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003b20:	960a      	str	r6, [sp, #40]	; 0x28
 8003b22:	f00e ff49 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003b26:	4638      	mov	r0, r7
 8003b28:	ee18 1a90 	vmov	r1, s17
 8003b2c:	f00c fd90 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003b30:	4620      	mov	r0, r4
 8003b32:	b00d      	add	sp, #52	; 0x34
 8003b34:	ecbd 8b06 	vpop	{d8-d10}
 8003b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b3c:	20012e18 	.word	0x20012e18
 8003b40:	0802c5ba 	.word	0x0802c5ba
 8003b44:	0802c630 	.word	0x0802c630
 8003b48:	20012e0c 	.word	0x20012e0c
 8003b4c:	20012e10 	.word	0x20012e10

08003b50 <_ZN23Calibration_PadViewBase17function_cali_padEv>:
     * Virtual Action Handlers
     */
    virtual void function_cali_pad()
    {
        // Override and implement this function in Calibration_Pad
    }
 8003b50:	4770      	bx	lr

08003b52 <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 8003b52:	4770      	bx	lr

08003b54 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003b54:	4770      	bx	lr

08003b56 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003b56:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003b58:	68c2      	ldr	r2, [r0, #12]
 8003b5a:	6844      	ldr	r4, [r0, #4]
 8003b5c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003b5e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003b60:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003b64:	07d2      	lsls	r2, r2, #31
 8003b66:	bf48      	it	mi
 8003b68:	5962      	ldrmi	r2, [r4, r5]
 8003b6a:	689b      	ldr	r3, [r3, #8]
    }
 8003b6c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003b6e:	bf48      	it	mi
 8003b70:	58d3      	ldrmi	r3, [r2, r3]
 8003b72:	4718      	bx	r3

08003b74 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003b74:	6843      	ldr	r3, [r0, #4]
 8003b76:	b12b      	cbz	r3, 8003b84 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003b78:	6883      	ldr	r3, [r0, #8]
 8003b7a:	b92b      	cbnz	r3, 8003b88 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003b7c:	68c0      	ldr	r0, [r0, #12]
 8003b7e:	f000 0001 	and.w	r0, r0, #1
 8003b82:	4770      	bx	lr
 8003b84:	4618      	mov	r0, r3
 8003b86:	4770      	bx	lr
 8003b88:	2001      	movs	r0, #1
    }
 8003b8a:	4770      	bx	lr

08003b8c <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003b8c:	b510      	push	{r4, lr}
 8003b8e:	2110      	movs	r1, #16
 8003b90:	4604      	mov	r4, r0
 8003b92:	f026 f86c 	bl	8029c6e <_ZdlPvj>
 8003b96:	4620      	mov	r0, r4
 8003b98:	bd10      	pop	{r4, pc}
	...

08003b9c <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003b9c:	b510      	push	{r4, lr}
 8003b9e:	4b03      	ldr	r3, [pc, #12]	; (8003bac <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8003ba0:	6003      	str	r3, [r0, #0]
 8003ba2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003ba4:	f010 faea 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003ba8:	4620      	mov	r0, r4
 8003baa:	bd10      	pop	{r4, pc}
 8003bac:	0802c784 	.word	0x0802c784

08003bb0 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003bb0:	b507      	push	{r0, r1, r2, lr}
 8003bb2:	4b07      	ldr	r3, [pc, #28]	; (8003bd0 <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 8003bb4:	6003      	str	r3, [r0, #0]
 8003bb6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003bb8:	f010 fae0 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003bbc:	9801      	ldr	r0, [sp, #4]
 8003bbe:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 8003bc2:	f026 f854 	bl	8029c6e <_ZdlPvj>
 8003bc6:	9801      	ldr	r0, [sp, #4]
 8003bc8:	b003      	add	sp, #12
 8003bca:	f85d fb04 	ldr.w	pc, [sp], #4
 8003bce:	bf00      	nop
 8003bd0:	0802c784 	.word	0x0802c784

08003bd4 <_ZN23Calibration_PadViewBase15handleTickEventEv>:
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}

void Calibration_PadViewBase::handleTickEvent()
{
 8003bd4:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8003bd6:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8003bda:	f8d4 21dc 	ldr.w	r2, [r4, #476]	; 0x1dc
 8003bde:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003be0:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8003be2:	f8c4 21dc 	str.w	r2, [r4, #476]	; 0x1dc
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8003be6:	d105      	bne.n	8003bf4 <_ZN23Calibration_PadViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call function_cali_pad
        function_cali_pad();
 8003be8:	6803      	ldr	r3, [r0, #0]
 8003bea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003bec:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8003bee:	2300      	movs	r3, #0
 8003bf0:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
    }
}
 8003bf4:	bd10      	pop	{r4, pc}

08003bf6 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8003bf6:	f500 70e4 	add.w	r0, r0, #456	; 0x1c8
 8003bfa:	4288      	cmp	r0, r1
{
 8003bfc:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8003bfe:	d105      	bne.n	8003c0c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003c00:	f011 ffbe 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
}
 8003c04:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8003c08:	f000 be54 	b.w	80048b4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8003c0c:	bd08      	pop	{r3, pc}
	...

08003c10 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c14:	ed2d 8b06 	vpush	{d8-d10}
 8003c18:	4604      	mov	r4, r0
 8003c1a:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8003c1c:	46a3      	mov	fp, r4
 8003c1e:	2600      	movs	r6, #0
 8003c20:	f013 fc2e 	bl	8017480 <_ZN8touchgfx6ScreenC1Ev>
 8003c24:	4b6a      	ldr	r3, [pc, #424]	; (8003dd0 <_ZN23Calibration_PadViewBaseC1Ev+0x1c0>)
 8003c26:	63e6      	str	r6, [r4, #60]	; 0x3c
 8003c28:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8003c2c:	2226      	movs	r2, #38	; 0x26
 8003c2e:	4631      	mov	r1, r6
 8003c30:	4658      	mov	r0, fp
 8003c32:	f027 f908 	bl	802ae46 <memset>
 8003c36:	4658      	mov	r0, fp
 8003c38:	f7ff f9d6 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 8003c3c:	f104 056c 	add.w	r5, r4, #108	; 0x6c
 8003c40:	27ff      	movs	r7, #255	; 0xff
 8003c42:	4b64      	ldr	r3, [pc, #400]	; (8003dd4 <_ZN23Calibration_PadViewBaseC1Ev+0x1c4>)
 8003c44:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8003c46:	2226      	movs	r2, #38	; 0x26
 8003c48:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003c4c:	4631      	mov	r1, r6
 8003c4e:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 8003c52:	4628      	mov	r0, r5
 8003c54:	66a6      	str	r6, [r4, #104]	; 0x68
 8003c56:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003c5a:	f027 f8f4 	bl	802ae46 <memset>
 8003c5e:	4628      	mov	r0, r5
 8003c60:	f7ff f9c2 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 8003c64:	4b5c      	ldr	r3, [pc, #368]	; (8003dd8 <_ZN23Calibration_PadViewBaseC1Ev+0x1c8>)
 8003c66:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003c68:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003c6c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003c70:	a90a      	add	r1, sp, #40	; 0x28
 8003c72:	4628      	mov	r0, r5
 8003c74:	f104 0a98 	add.w	sl, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8003c78:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003c7c:	f00f fa77 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003c80:	f104 09e4 	add.w	r9, r4, #228	; 0xe4
 8003c84:	4650      	mov	r0, sl
 8003c86:	f7ff fca7 	bl	80035d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003c8a:	4648      	mov	r0, r9
 8003c8c:	f7ff fca4 	bl	80035d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003c90:	f504 7398 	add.w	r3, r4, #304	; 0x130
 8003c94:	4618      	mov	r0, r3
 8003c96:	ee09 3a10 	vmov	s18, r3
 8003c9a:	f7ff fc9d 	bl	80035d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003c9e:	f504 73be 	add.w	r3, r4, #380	; 0x17c
 8003ca2:	4618      	mov	r0, r3
 8003ca4:	ee09 3a90 	vmov	s19, r3
 8003ca8:	f7ff fc96 	bl	80035d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003cac:	f504 73e4 	add.w	r3, r4, #456	; 0x1c8
 8003cb0:	4618      	mov	r0, r3
 8003cb2:	ee0a 3a10 	vmov	s20, r3
 8003cb6:	f00f fb9b 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003cba:	f504 7304 	add.w	r3, r4, #528	; 0x210
 8003cbe:	4618      	mov	r0, r3
 8003cc0:	f504 7816 	add.w	r8, r4, #600	; 0x258
 8003cc4:	ee0a 3a90 	vmov	s21, r3
 8003cc8:	f7ff f9a0 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8003ccc:	4640      	mov	r0, r8
 8003cce:	f00e f917 	bl	8011f00 <_ZN8touchgfx4LineC1Ev>
 8003cd2:	f504 7332 	add.w	r3, r4, #712	; 0x2c8
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003cd6:	4618      	mov	r0, r3
 8003cd8:	9302      	str	r3, [sp, #8]
 8003cda:	f7fe ff85 	bl	8002be8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003cde:	4b3f      	ldr	r3, [pc, #252]	; (8003ddc <_ZN23Calibration_PadViewBaseC1Ev+0x1cc>)
 8003ce0:	f8c4 32c8 	str.w	r3, [r4, #712]	; 0x2c8
 8003ce4:	3324      	adds	r3, #36	; 0x24
 8003ce6:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
 8003cea:	f504 7337 	add.w	r3, r4, #732	; 0x2dc
 8003cee:	4618      	mov	r0, r3
 8003cf0:	f8c4 62d4 	str.w	r6, [r4, #724]	; 0x2d4
 8003cf4:	ee08 3a10 	vmov	s16, r3
 8003cf8:	f7ff f988 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8003cfc:	f504 7349 	add.w	r3, r4, #804	; 0x324
 8003d00:	4618      	mov	r0, r3
 8003d02:	ee08 3a90 	vmov	s17, r3
 8003d06:	f7ff f981 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003d0a:	4a35      	ldr	r2, [pc, #212]	; (8003de0 <_ZN23Calibration_PadViewBaseC1Ev+0x1d0>)
 8003d0c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003d10:	e9c3 2473 	strd	r2, r4, [r3, #460]	; 0x1cc
 8003d14:	4a33      	ldr	r2, [pc, #204]	; (8003de4 <_ZN23Calibration_PadViewBaseC1Ev+0x1d4>)
 8003d16:	f8c3 61dc 	str.w	r6, [r3, #476]	; 0x1dc
 8003d1a:	e9c3 2675 	strd	r2, r6, [r3, #468]	; 0x1d4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003d1e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003d22:	f504 706f 	add.w	r0, r4, #956	; 0x3bc
 8003d26:	f010 fa1f 	bl	8014168 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003d2a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003d2e:	4632      	mov	r2, r6
 8003d30:	4658      	mov	r0, fp
 8003d32:	9300      	str	r3, [sp, #0]
 8003d34:	4631      	mov	r1, r6
 8003d36:	23f0      	movs	r3, #240	; 0xf0
 8003d38:	f7ff f942 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003d3c:	1d27      	adds	r7, r4, #4
        color = newColor;
 8003d3e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003d42:	66a3      	str	r3, [r4, #104]	; 0x68
 8003d44:	4659      	mov	r1, fp
 8003d46:	4638      	mov	r0, r7
 8003d48:	f00c fc82 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003d4c:	4632      	mov	r2, r6
 8003d4e:	4628      	mov	r0, r5
 8003d50:	4631      	mov	r1, r6
 8003d52:	f7ff f928 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8003d56:	f04f 0309 	mov.w	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003d5a:	4628      	mov	r0, r5
 8003d5c:	a90a      	add	r1, sp, #40	; 0x28
 8003d5e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003d62:	f00f fa04 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003d66:	4629      	mov	r1, r5
 8003d68:	4638      	mov	r0, r7
 8003d6a:	f00c fc71 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADR_S.setPosition(0, 92, 207, 27);
 8003d6e:	231b      	movs	r3, #27
 8003d70:	225c      	movs	r2, #92	; 0x5c
 8003d72:	9300      	str	r3, [sp, #0]
 8003d74:	4631      	mov	r1, r6
 8003d76:	23cf      	movs	r3, #207	; 0xcf
 8003d78:	4650      	mov	r0, sl
 8003d7a:	f7ff f921 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003d7e:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8003d82:	f8a4 60cc 	strh.w	r6, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8003d86:	ad04      	add	r5, sp, #16
        color = newColor;
 8003d88:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8003d8c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003d90:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8003d94:	4651      	mov	r1, sl
 8003d96:	4628      	mov	r0, r5
 8003d98:	4798      	blx	r3
 8003d9a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003d9e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8003da2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(CALIBRATION_PADR_SBuffer, CALIBRATION_PADR_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NNGV).getText());
 8003da6:	f504 735b 	add.w	r3, r4, #876	; 0x36c
 8003daa:	9303      	str	r3, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003dac:	4b0e      	ldr	r3, [pc, #56]	; (8003de8 <_ZN23Calibration_PadViewBaseC1Ev+0x1d8>)
 8003dae:	681b      	ldr	r3, [r3, #0]
 8003db0:	b92b      	cbnz	r3, 8003dbe <_ZN23Calibration_PadViewBaseC1Ev+0x1ae>
 8003db2:	4b0e      	ldr	r3, [pc, #56]	; (8003dec <_ZN23Calibration_PadViewBaseC1Ev+0x1dc>)
 8003db4:	4a0e      	ldr	r2, [pc, #56]	; (8003df0 <_ZN23Calibration_PadViewBaseC1Ev+0x1e0>)
 8003db6:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003db8:	480e      	ldr	r0, [pc, #56]	; (8003df4 <_ZN23Calibration_PadViewBaseC1Ev+0x1e4>)
 8003dba:	f026 fe3f 	bl	802aa3c <__assert_func>
 8003dbe:	4b0e      	ldr	r3, [pc, #56]	; (8003df8 <_ZN23Calibration_PadViewBaseC1Ev+0x1e8>)
 8003dc0:	881b      	ldrh	r3, [r3, #0]
 8003dc2:	2b0a      	cmp	r3, #10
 8003dc4:	d81c      	bhi.n	8003e00 <_ZN23Calibration_PadViewBaseC1Ev+0x1f0>
 8003dc6:	4b0d      	ldr	r3, [pc, #52]	; (8003dfc <_ZN23Calibration_PadViewBaseC1Ev+0x1ec>)
 8003dc8:	4a09      	ldr	r2, [pc, #36]	; (8003df0 <_ZN23Calibration_PadViewBaseC1Ev+0x1e0>)
 8003dca:	2161      	movs	r1, #97	; 0x61
 8003dcc:	e7f4      	b.n	8003db8 <_ZN23Calibration_PadViewBaseC1Ev+0x1a8>
 8003dce:	bf00      	nop
 8003dd0:	0802c784 	.word	0x0802c784
 8003dd4:	0802ef90 	.word	0x0802ef90
 8003dd8:	0802f158 	.word	0x0802f158
 8003ddc:	0802ecc4 	.word	0x0802ecc4
 8003de0:	0802c76c 	.word	0x0802c76c
 8003de4:	08003bf7 	.word	0x08003bf7
 8003de8:	20012e0c 	.word	0x20012e0c
 8003dec:	0802c480 	.word	0x0802c480
 8003df0:	0802c582 	.word	0x0802c582
 8003df4:	0802c4fd 	.word	0x0802c4fd
 8003df8:	20012e10 	.word	0x20012e10
 8003dfc:	0802c544 	.word	0x0802c544
        return texts->getText(typedTextId);
 8003e00:	4bd8      	ldr	r3, [pc, #864]	; (8004164 <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8003e02:	210a      	movs	r1, #10
 8003e04:	6818      	ldr	r0, [r3, #0]
 8003e06:	f005 f8b1 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 8003e0a:	4ad7      	ldr	r2, [pc, #860]	; (8004168 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8003e0c:	4603      	mov	r3, r0
 8003e0e:	210a      	movs	r1, #10
 8003e10:	9803      	ldr	r0, [sp, #12]
 8003e12:	f015 f825 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003e16:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 8003e18:	4bd4      	ldr	r3, [pc, #848]	; (800416c <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8003e1a:	f8c4 10e0 	str.w	r1, [r4, #224]	; 0xe0
    CALIBRATION_PADR_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WYEC));
 8003e1e:	4650      	mov	r0, sl
 8003e20:	930a      	str	r3, [sp, #40]	; 0x28
 8003e22:	a90a      	add	r1, sp, #40	; 0x28
 8003e24:	230b      	movs	r3, #11
 8003e26:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003e2a:	f00e fdc5 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003e2e:	4651      	mov	r1, sl
 8003e30:	4638      	mov	r0, r7
 8003e32:	f00c fc0d 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADR_F.setPosition(25, 119, 207, 22);
 8003e36:	2116      	movs	r1, #22
 8003e38:	2277      	movs	r2, #119	; 0x77
 8003e3a:	9100      	str	r1, [sp, #0]
 8003e3c:	23cf      	movs	r3, #207	; 0xcf
 8003e3e:	2119      	movs	r1, #25
 8003e40:	4648      	mov	r0, r9
 8003e42:	f7ff f8bd 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003e46:	f8d4 30e4 	ldr.w	r3, [r4, #228]	; 0xe4
        color = newColor;
 8003e4a:	f8c4 b114 	str.w	fp, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8003e4e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003e52:	f8a4 6118 	strh.w	r6, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8003e56:	4649      	mov	r1, r9
 8003e58:	4628      	mov	r0, r5
 8003e5a:	4798      	blx	r3
 8003e5c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003e60:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8003e64:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e68:	49c1      	ldr	r1, [pc, #772]	; (8004170 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 8003e6a:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADR_FBuffer, CALIBRATION_PADR_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9DMI).getText());
 8003e6c:	f504 7a60 	add.w	sl, r4, #896	; 0x380
 8003e70:	2b00      	cmp	r3, #0
 8003e72:	d09e      	beq.n	8003db2 <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e74:	48bf      	ldr	r0, [pc, #764]	; (8004174 <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 8003e76:	8803      	ldrh	r3, [r0, #0]
 8003e78:	2b0c      	cmp	r3, #12
 8003e7a:	d9a4      	bls.n	8003dc6 <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 8003e7c:	4ab9      	ldr	r2, [pc, #740]	; (8004164 <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8003e7e:	210c      	movs	r1, #12
 8003e80:	6810      	ldr	r0, [r2, #0]
 8003e82:	f005 f873 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 8003e86:	4ab8      	ldr	r2, [pc, #736]	; (8004168 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8003e88:	4603      	mov	r3, r0
 8003e8a:	210a      	movs	r1, #10
 8003e8c:	4650      	mov	r0, sl
 8003e8e:	f014 ffe7 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    CALIBRATION_PADR_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MDOA));
 8003e92:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8003e96:	4bb5      	ldr	r3, [pc, #724]	; (800416c <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8003e98:	930a      	str	r3, [sp, #40]	; 0x28
 8003e9a:	4661      	mov	r1, ip
 8003e9c:	230d      	movs	r3, #13
 8003e9e:	4648      	mov	r0, r9
 8003ea0:	f8c4 a12c 	str.w	sl, [r4, #300]	; 0x12c
 8003ea4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003ea8:	f00e fd86 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003eac:	4649      	mov	r1, r9
 8003eae:	4638      	mov	r0, r7
 8003eb0:	f00c fbce 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADL_F.setPosition(25, 187, 207, 22);
 8003eb4:	f04f 0c16 	mov.w	ip, #22
 8003eb8:	22bb      	movs	r2, #187	; 0xbb
 8003eba:	ee19 0a10 	vmov	r0, s18
 8003ebe:	f8cd c000 	str.w	ip, [sp]
 8003ec2:	23cf      	movs	r3, #207	; 0xcf
 8003ec4:	2119      	movs	r1, #25
 8003ec6:	f7ff f87b 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003eca:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
        color = newColor;
 8003ece:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 8003ed2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003ed6:	f8a4 6164 	strh.w	r6, [r4, #356]	; 0x164
        boundingArea = calculateBoundingArea();
 8003eda:	ee19 1a10 	vmov	r1, s18
 8003ede:	4628      	mov	r0, r5
 8003ee0:	4798      	blx	r3
 8003ee2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003ee6:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8003eea:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003eee:	49a0      	ldr	r1, [pc, #640]	; (8004170 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 8003ef0:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADL_FBuffer, CALIBRATION_PADL_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZTO).getText());
 8003ef2:	f504 7965 	add.w	r9, r4, #916	; 0x394
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	f43f af5b 	beq.w	8003db2 <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003efc:	489d      	ldr	r0, [pc, #628]	; (8004174 <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 8003efe:	8803      	ldrh	r3, [r0, #0]
 8003f00:	2b08      	cmp	r3, #8
 8003f02:	f67f af60 	bls.w	8003dc6 <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 8003f06:	4a97      	ldr	r2, [pc, #604]	; (8004164 <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8003f08:	2108      	movs	r1, #8
 8003f0a:	6810      	ldr	r0, [r2, #0]
 8003f0c:	f005 f82e 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 8003f10:	4a95      	ldr	r2, [pc, #596]	; (8004168 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8003f12:	4603      	mov	r3, r0
 8003f14:	210a      	movs	r1, #10
 8003f16:	4648      	mov	r0, r9
 8003f18:	f014 ffa2 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003f1c:	f04f 0c09 	mov.w	ip, #9
 8003f20:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
    CALIBRATION_PADL_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H127));
 8003f24:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8003f28:	4b90      	ldr	r3, [pc, #576]	; (800416c <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8003f2a:	f8c4 9178 	str.w	r9, [r4, #376]	; 0x178
 8003f2e:	4661      	mov	r1, ip
 8003f30:	ee19 0a10 	vmov	r0, s18
 8003f34:	930a      	str	r3, [sp, #40]	; 0x28
 8003f36:	f00e fd3f 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003f3a:	ee19 1a10 	vmov	r1, s18
 8003f3e:	4638      	mov	r0, r7
 8003f40:	f00c fb86 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    CALIBRATION_PADL_S.setPosition(0, 160, 207, 27);
 8003f44:	f04f 0c1b 	mov.w	ip, #27
 8003f48:	22a0      	movs	r2, #160	; 0xa0
 8003f4a:	ee19 0a90 	vmov	r0, s19
 8003f4e:	f8cd c000 	str.w	ip, [sp]
 8003f52:	23cf      	movs	r3, #207	; 0xcf
 8003f54:	4631      	mov	r1, r6
 8003f56:	f7ff f833 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003f5a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
        color = newColor;
 8003f5e:	f8c4 b1ac 	str.w	fp, [r4, #428]	; 0x1ac
        boundingArea = calculateBoundingArea();
 8003f62:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003f66:	f8a4 61b0 	strh.w	r6, [r4, #432]	; 0x1b0
        boundingArea = calculateBoundingArea();
 8003f6a:	ee19 1a90 	vmov	r1, s19
 8003f6e:	4628      	mov	r0, r5
 8003f70:	4798      	blx	r3
 8003f72:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003f76:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
 8003f7a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003f7e:	497c      	ldr	r1, [pc, #496]	; (8004170 <_ZN23Calibration_PadViewBaseC1Ev+0x560>)
 8003f80:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(CALIBRATION_PADL_SBuffer, CALIBRATION_PADL_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KIGA).getText());
 8003f82:	f504 796a 	add.w	r9, r4, #936	; 0x3a8
 8003f86:	2b00      	cmp	r3, #0
 8003f88:	f43f af13 	beq.w	8003db2 <_ZN23Calibration_PadViewBaseC1Ev+0x1a2>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003f8c:	4879      	ldr	r0, [pc, #484]	; (8004174 <_ZN23Calibration_PadViewBaseC1Ev+0x564>)
 8003f8e:	8803      	ldrh	r3, [r0, #0]
 8003f90:	2b0f      	cmp	r3, #15
 8003f92:	f67f af18 	bls.w	8003dc6 <_ZN23Calibration_PadViewBaseC1Ev+0x1b6>
        return texts->getText(typedTextId);
 8003f96:	4a73      	ldr	r2, [pc, #460]	; (8004164 <_ZN23Calibration_PadViewBaseC1Ev+0x554>)
 8003f98:	210f      	movs	r1, #15
 8003f9a:	6810      	ldr	r0, [r2, #0]
 8003f9c:	f004 ffe6 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 8003fa0:	4a71      	ldr	r2, [pc, #452]	; (8004168 <_ZN23Calibration_PadViewBaseC1Ev+0x558>)
 8003fa2:	4603      	mov	r3, r0
 8003fa4:	210a      	movs	r1, #10
 8003fa6:	4648      	mov	r0, r9
 8003fa8:	f014 ff5a 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003fac:	4b6f      	ldr	r3, [pc, #444]	; (800416c <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8003fae:	930a      	str	r3, [sp, #40]	; 0x28
    CALIBRATION_PADL_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2BW0));
 8003fb0:	ee19 0a90 	vmov	r0, s19
 8003fb4:	230e      	movs	r3, #14
 8003fb6:	a90a      	add	r1, sp, #40	; 0x28
 8003fb8:	f8c4 91c4 	str.w	r9, [r4, #452]	; 0x1c4
 8003fbc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003fc0:	f00e fcfa 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003fc4:	ee19 1a90 	vmov	r1, s19
 8003fc8:	4638      	mov	r0, r7
 8003fca:	f00c fb41 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8003fce:	ee1a 0a10 	vmov	r0, s20
 8003fd2:	f240 1201 	movw	r2, #257	; 0x101
 8003fd6:	2121      	movs	r1, #33	; 0x21
 8003fd8:	f7fe ffe5 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8003fdc:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003fde:	aa0a      	add	r2, sp, #40	; 0x28
 8003fe0:	a909      	add	r1, sp, #36	; 0x24
 8003fe2:	ee1a 0a10 	vmov	r0, s20
 8003fe6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003fea:	2302      	movs	r3, #2
 8003fec:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003ff0:	f00e fec7 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003ff4:	231f      	movs	r3, #31
        updateTextPosition();
 8003ff6:	ee1a 0a10 	vmov	r0, s20
 8003ffa:	f8a4 3200 	strh.w	r3, [r4, #512]	; 0x200
 8003ffe:	f7ff f827 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8004002:	f504 538e 	add.w	r3, r4, #4544	; 0x11c0
 8004006:	330c      	adds	r3, #12
 8004008:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
 800400c:	ee1a 1a10 	vmov	r1, s20
 8004010:	4638      	mov	r0, r7
        colorPressed = col;
 8004012:	e9c4 bb81 	strd	fp, fp, [r4, #516]	; 0x204
 8004016:	f00c fb1b 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(58, 60);
 800401a:	223c      	movs	r2, #60	; 0x3c
 800401c:	ee1a 0a90 	vmov	r0, s21
 8004020:	213a      	movs	r1, #58	; 0x3a
 8004022:	f7fe ffc0 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8004026:	ee1a 1a90 	vmov	r1, s21
 800402a:	4628      	mov	r0, r5
        color = newColor;
 800402c:	f8c4 b240 	str.w	fp, [r4, #576]	; 0x240
        linespace = space;
 8004030:	f8a4 6244 	strh.w	r6, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 8004034:	f00e fa26 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004038:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800403c:	f504 7313 	add.w	r3, r4, #588	; 0x24c
 8004040:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8004044:	4b49      	ldr	r3, [pc, #292]	; (800416c <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 8004046:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8004048:	ee1a 0a90 	vmov	r0, s21
 800404c:	231e      	movs	r3, #30
 800404e:	a90a      	add	r1, sp, #40	; 0x28
 8004050:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004054:	f00e fcb0 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004058:	ee1a 1a90 	vmov	r1, s21
 800405c:	4638      	mov	r0, r7
 800405e:	f00c faf7 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8004062:	230a      	movs	r3, #10
 8004064:	9300      	str	r3, [sp, #0]
 8004066:	2232      	movs	r2, #50	; 0x32
 8004068:	23f0      	movs	r3, #240	; 0xf0
 800406a:	4631      	mov	r1, r6
 800406c:	4640      	mov	r0, r8
 800406e:	f7fe ffa7 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004072:	9b02      	ldr	r3, [sp, #8]
 8004074:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8004078:	22a0      	movs	r2, #160	; 0xa0
 800407a:	4611      	mov	r1, r2
 800407c:	4640      	mov	r0, r8
 800407e:	f8c4 b2d4 	str.w	fp, [r4, #724]	; 0x2d4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8004082:	f8a4 b2d8 	strh.w	fp, [r4, #728]	; 0x2d8
 8004086:	f00e f851 	bl	801212c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800408a:	22a0      	movs	r2, #160	; 0xa0
 800408c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8004090:	4640      	mov	r0, r8
 8004092:	f00e f856 	bl	8012142 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8004096:	f8d4 3294 	ldr.w	r3, [r4, #660]	; 0x294
 800409a:	2b20      	cmp	r3, #32
 800409c:	d005      	beq.n	80040aa <_ZN23Calibration_PadViewBaseC1Ev+0x49a>
        lineWidthQ5 = widthQ5;
 800409e:	2320      	movs	r3, #32
 80040a0:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
        updateCachedShape();
 80040a4:	4640      	mov	r0, r8
 80040a6:	f00d ff4b 	bl	8011f40 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80040aa:	4640      	mov	r0, r8
 80040ac:	2101      	movs	r1, #1
 80040ae:	f00e f853 	bl	8012158 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80040b2:	4641      	mov	r1, r8
 80040b4:	4638      	mov	r0, r7
 80040b6:	f00c facb 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80040ba:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 80040bc:	ee18 0a10 	vmov	r0, s16
 80040c0:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 80040c2:	f04f 39ff 	mov.w	r9, #4294967295
        linespace = space;
 80040c6:	f04f 0800 	mov.w	r8, #0
 80040ca:	2145      	movs	r1, #69	; 0x45
 80040cc:	f7fe ff6b 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80040d0:	ee18 1a10 	vmov	r1, s16
 80040d4:	4628      	mov	r0, r5
        color = newColor;
 80040d6:	f8c4 930c 	str.w	r9, [r4, #780]	; 0x30c
        linespace = space;
 80040da:	f8a4 8310 	strh.w	r8, [r4, #784]	; 0x310
        boundingArea = calculateBoundingArea();
 80040de:	f00e f9d1 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80040e2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80040e6:	ee18 3a10 	vmov	r3, s16
 80040ea:	333c      	adds	r3, #60	; 0x3c
 80040ec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80040f0:	4e1e      	ldr	r6, [pc, #120]	; (800416c <_ZN23Calibration_PadViewBaseC1Ev+0x55c>)
 80040f2:	960a      	str	r6, [sp, #40]	; 0x28
 80040f4:	2320      	movs	r3, #32
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 80040f6:	ee18 0a10 	vmov	r0, s16
 80040fa:	a90a      	add	r1, sp, #40	; 0x28
 80040fc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004100:	f00e fc5a 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004104:	ee18 1a10 	vmov	r1, s16
 8004108:	4638      	mov	r0, r7
 800410a:	f00c faa1 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800410e:	ee18 0a90 	vmov	r0, s17
 8004112:	220c      	movs	r2, #12
 8004114:	2136      	movs	r1, #54	; 0x36
 8004116:	f7fe ff46 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 800411a:	ee18 1a90 	vmov	r1, s17
 800411e:	4628      	mov	r0, r5
        color = newColor;
 8004120:	f8c4 9354 	str.w	r9, [r4, #852]	; 0x354
        linespace = space;
 8004124:	f8a4 8358 	strh.w	r8, [r4, #856]	; 0x358
        boundingArea = calculateBoundingArea();
 8004128:	f00e f9ac 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800412c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004130:	ee18 3a90 	vmov	r3, s17
 8004134:	333c      	adds	r3, #60	; 0x3c
 8004136:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800413a:	2321      	movs	r3, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 800413c:	ee18 0a90 	vmov	r0, s17
 8004140:	a90a      	add	r1, sp, #40	; 0x28
 8004142:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8004146:	960a      	str	r6, [sp, #40]	; 0x28
 8004148:	f00e fc36 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800414c:	4638      	mov	r0, r7
 800414e:	ee18 1a90 	vmov	r1, s17
 8004152:	f00c fa7d 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004156:	4620      	mov	r0, r4
 8004158:	b00d      	add	sp, #52	; 0x34
 800415a:	ecbd 8b06 	vpop	{d8-d10}
 800415e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004162:	bf00      	nop
 8004164:	20012e18 	.word	0x20012e18
 8004168:	0802c5ba 	.word	0x0802c5ba
 800416c:	0802c630 	.word	0x0802c630
 8004170:	20012e0c 	.word	0x20012e0c
 8004174:	20012e10 	.word	0x20012e10

08004178 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8004178:	4770      	bx	lr

0800417a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800417a:	4770      	bx	lr

0800417c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800417c:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8004180:	6808      	ldr	r0, [r1, #0]
 8004182:	6849      	ldr	r1, [r1, #4]
 8004184:	c303      	stmia	r3!, {r0, r1}
    }
 8004186:	4770      	bx	lr

08004188 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004188:	4770      	bx	lr

0800418a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800418a:	4770      	bx	lr

0800418c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800418c:	6041      	str	r1, [r0, #4]
    }
 800418e:	4770      	bx	lr

08004190 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8004190:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004192:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8004194:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8004198:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800419c:	8002      	strh	r2, [r0, #0]
 800419e:	8042      	strh	r2, [r0, #2]
 80041a0:	8084      	strh	r4, [r0, #4]
 80041a2:	80c1      	strh	r1, [r0, #6]
        }
 80041a4:	bd10      	pop	{r4, pc}

080041a6 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80041a6:	4770      	bx	lr

080041a8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80041a8:	4770      	bx	lr
	...

080041ac <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80041ac:	4b06      	ldr	r3, [pc, #24]	; (80041c8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80041ae:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80041b2:	2300      	movs	r3, #0
 80041b4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80041b8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80041bc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80041c0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 80041c4:	4770      	bx	lr
 80041c6:	bf00      	nop
 80041c8:	08004569 	.word	0x08004569

080041cc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80041cc:	2301      	movs	r3, #1
 80041ce:	7203      	strb	r3, [r0, #8]
    }
 80041d0:	4770      	bx	lr

080041d2 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 80041d2:	4770      	bx	lr

080041d4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 80041d4:	4770      	bx	lr

080041d6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 80041d6:	4770      	bx	lr

080041d8 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80041d8:	4770      	bx	lr

080041da <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80041da:	4770      	bx	lr

080041dc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 80041dc:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80041de:	6840      	ldr	r0, [r0, #4]
 80041e0:	6803      	ldr	r3, [r0, #0]
 80041e2:	3110      	adds	r1, #16
 80041e4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80041e6:	4718      	bx	r3

080041e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 80041e8:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 80041ea:	6840      	ldr	r0, [r0, #4]
 80041ec:	6803      	ldr	r3, [r0, #0]
 80041ee:	3110      	adds	r1, #16
 80041f0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80041f2:	4718      	bx	r3

080041f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 80041f4:	4770      	bx	lr

080041f6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 80041f6:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 80041f8:	6840      	ldr	r0, [r0, #4]
 80041fa:	6803      	ldr	r3, [r0, #0]
 80041fc:	3110      	adds	r1, #16
 80041fe:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004200:	4718      	bx	r3

08004202 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8004202:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8004204:	6840      	ldr	r0, [r0, #4]
 8004206:	6803      	ldr	r3, [r0, #0]
 8004208:	3110      	adds	r1, #16
 800420a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800420c:	4718      	bx	r3

0800420e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 800420e:	4770      	bx	lr

08004210 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8004210:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8004212:	68c2      	ldr	r2, [r0, #12]
 8004214:	6841      	ldr	r1, [r0, #4]
 8004216:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8004218:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800421a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800421e:	07d2      	lsls	r2, r2, #31
 8004220:	bf48      	it	mi
 8004222:	590a      	ldrmi	r2, [r1, r4]
 8004224:	689b      	ldr	r3, [r3, #8]
    }
 8004226:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800422a:	bf48      	it	mi
 800422c:	58d3      	ldrmi	r3, [r2, r3]
 800422e:	4718      	bx	r3

08004230 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8004230:	6843      	ldr	r3, [r0, #4]
 8004232:	b12b      	cbz	r3, 8004240 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8004234:	6883      	ldr	r3, [r0, #8]
 8004236:	b92b      	cbnz	r3, 8004244 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8004238:	68c0      	ldr	r0, [r0, #12]
 800423a:	f000 0001 	and.w	r0, r0, #1
 800423e:	4770      	bx	lr
 8004240:	4618      	mov	r0, r3
 8004242:	4770      	bx	lr
 8004244:	2001      	movs	r0, #1
    }
 8004246:	4770      	bx	lr

08004248 <_ZN8touchgfx12NoTransitionD0Ev>:
 8004248:	b510      	push	{r4, lr}
 800424a:	210c      	movs	r1, #12
 800424c:	4604      	mov	r4, r0
 800424e:	f025 fd0e 	bl	8029c6e <_ZdlPvj>
 8004252:	4620      	mov	r0, r4
 8004254:	bd10      	pop	{r4, pc}

08004256 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004256:	b510      	push	{r4, lr}
 8004258:	2110      	movs	r1, #16
 800425a:	4604      	mov	r4, r0
 800425c:	f025 fd07 	bl	8029c6e <_ZdlPvj>
 8004260:	4620      	mov	r0, r4
 8004262:	bd10      	pop	{r4, pc}

08004264 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8004264:	b510      	push	{r4, lr}
 8004266:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800426a:	4604      	mov	r4, r0
 800426c:	f025 fcff 	bl	8029c6e <_ZdlPvj>
 8004270:	4620      	mov	r0, r4
 8004272:	bd10      	pop	{r4, pc}

08004274 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8004274:	b510      	push	{r4, lr}
 8004276:	2138      	movs	r1, #56	; 0x38
 8004278:	4604      	mov	r4, r0
 800427a:	f025 fcf8 	bl	8029c6e <_ZdlPvj>
 800427e:	4620      	mov	r0, r4
 8004280:	bd10      	pop	{r4, pc}

08004282 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8004282:	b510      	push	{r4, lr}
 8004284:	2128      	movs	r1, #40	; 0x28
 8004286:	4604      	mov	r4, r0
 8004288:	f025 fcf1 	bl	8029c6e <_ZdlPvj>
 800428c:	4620      	mov	r0, r4
 800428e:	bd10      	pop	{r4, pc}

08004290 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8004290:	b510      	push	{r4, lr}
 8004292:	2138      	movs	r1, #56	; 0x38
 8004294:	4604      	mov	r4, r0
 8004296:	f025 fcea 	bl	8029c6e <_ZdlPvj>
 800429a:	4620      	mov	r0, r4
 800429c:	bd10      	pop	{r4, pc}

0800429e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800429e:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80042a0:	f011 fc6e 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
 80042a4:	6803      	ldr	r3, [r0, #0]
    }
 80042a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80042aa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80042ac:	4718      	bx	r3
	...

080042b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80042b0:	b513      	push	{r0, r1, r4, lr}
 80042b2:	4604      	mov	r4, r0
        animationCounter++;
 80042b4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80042b6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80042b8:	3001      	adds	r0, #1
 80042ba:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80042bc:	4298      	cmp	r0, r3
        animationCounter++;
 80042be:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80042c0:	d905      	bls.n	80042ce <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80042c2:	2301      	movs	r3, #1
 80042c4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80042c6:	2300      	movs	r3, #0
 80042c8:	72a3      	strb	r3, [r4, #10]
    }
 80042ca:	b002      	add	sp, #8
 80042cc:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80042ce:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80042d2:	2100      	movs	r1, #0
 80042d4:	f013 fa86 	bl	80177e4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80042d8:	f010 0201 	ands.w	r2, r0, #1
 80042dc:	b283      	uxth	r3, r0
 80042de:	d12a      	bne.n	8004336 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80042e0:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80042e2:	4a19      	ldr	r2, [pc, #100]	; (8004348 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 80042e4:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 80042e8:	89e3      	ldrh	r3, [r4, #14]
 80042ea:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 80042ec:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 80042f0:	82a0      	strh	r0, [r4, #20]
 80042f2:	2000      	movs	r0, #0
 80042f4:	1ad2      	subs	r2, r2, r3
 80042f6:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 80042fa:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 80042fc:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 80042fe:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004300:	4a12      	ldr	r2, [pc, #72]	; (800434c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8004302:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8004306:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004308:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 800430c:	691b      	ldr	r3, [r3, #16]
 800430e:	f8ad 1000 	strh.w	r1, [sp]
 8004312:	f8ad 2006 	strh.w	r2, [sp, #6]
 8004316:	4669      	mov	r1, sp
 8004318:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800431a:	7aa3      	ldrb	r3, [r4, #10]
 800431c:	2b01      	cmp	r3, #1
 800431e:	d1d4      	bne.n	80042ca <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8004320:	4b0b      	ldr	r3, [pc, #44]	; (8004350 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8004322:	781b      	ldrb	r3, [r3, #0]
 8004324:	2b00      	cmp	r3, #0
 8004326:	d0d0      	beq.n	80042ca <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004328:	f011 fc2a 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800432c:	b002      	add	sp, #8
 800432e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004332:	f011 bc2b 	b.w	8015b8c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004336:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800433a:	2800      	cmp	r0, #0
 800433c:	bfd8      	it	le
 800433e:	460a      	movle	r2, r1
 8004340:	4413      	add	r3, r2
 8004342:	81e3      	strh	r3, [r4, #14]
 8004344:	e7cd      	b.n	80042e2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8004346:	bf00      	nop
 8004348:	20012da8 	.word	0x20012da8
 800434c:	20012daa 	.word	0x20012daa
 8004350:	20012db2 	.word	0x20012db2

08004354 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8004354:	b510      	push	{r4, lr}
 8004356:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8004358:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 800435c:	b158      	cbz	r0, 8004376 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800435e:	6803      	ldr	r3, [r0, #0]
 8004360:	68db      	ldr	r3, [r3, #12]
 8004362:	4798      	blx	r3
 8004364:	b138      	cbz	r0, 8004376 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8004366:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800436a:	6803      	ldr	r3, [r0, #0]
 800436c:	689b      	ldr	r3, [r3, #8]
 800436e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8004370:	2300      	movs	r3, #0
 8004372:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8004376:	bd10      	pop	{r4, pc}

08004378 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8004378:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800437c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004380:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004382:	68a8      	ldr	r0, [r5, #8]
 8004384:	6803      	ldr	r3, [r0, #0]
 8004386:	6a1b      	ldr	r3, [r3, #32]
 8004388:	4798      	blx	r3
 800438a:	2897      	cmp	r0, #151	; 0x97
 800438c:	d805      	bhi.n	800439a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 800438e:	4b46      	ldr	r3, [pc, #280]	; (80044a8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8004390:	4a46      	ldr	r2, [pc, #280]	; (80044ac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8004392:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004394:	4846      	ldr	r0, [pc, #280]	; (80044b0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 8004396:	f026 fb51 	bl	802aa3c <__assert_func>
 800439a:	6868      	ldr	r0, [r5, #4]
 800439c:	6803      	ldr	r3, [r0, #0]
 800439e:	6a1b      	ldr	r3, [r3, #32]
 80043a0:	4798      	blx	r3
 80043a2:	280f      	cmp	r0, #15
 80043a4:	d803      	bhi.n	80043ae <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80043a6:	4b43      	ldr	r3, [pc, #268]	; (80044b4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80043a8:	4a40      	ldr	r2, [pc, #256]	; (80044ac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80043aa:	21a4      	movs	r1, #164	; 0xa4
 80043ac:	e7f2      	b.n	8004394 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80043ae:	68e8      	ldr	r0, [r5, #12]
 80043b0:	6803      	ldr	r3, [r0, #0]
 80043b2:	6a1b      	ldr	r3, [r3, #32]
 80043b4:	4798      	blx	r3
 80043b6:	280b      	cmp	r0, #11
 80043b8:	d803      	bhi.n	80043c2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80043ba:	4b3f      	ldr	r3, [pc, #252]	; (80044b8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80043bc:	4a3b      	ldr	r2, [pc, #236]	; (80044ac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80043be:	21a5      	movs	r1, #165	; 0xa5
 80043c0:	e7e8      	b.n	8004394 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80043c2:	f011 fbdd 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80043c6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80044c0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80043ca:	3004      	adds	r0, #4
 80043cc:	f011 fc3e 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80043d0:	f8d9 0000 	ldr.w	r0, [r9]
 80043d4:	b110      	cbz	r0, 80043dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80043d6:	6803      	ldr	r3, [r0, #0]
 80043d8:	68db      	ldr	r3, [r3, #12]
 80043da:	4798      	blx	r3
    if (*currentTrans)
 80043dc:	f8d9 0000 	ldr.w	r0, [r9]
 80043e0:	b110      	cbz	r0, 80043e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80043e2:	6803      	ldr	r3, [r0, #0]
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	4798      	blx	r3
    if (*currentScreen)
 80043e8:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80044c4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 80043ec:	f8d8 0000 	ldr.w	r0, [r8]
 80043f0:	b110      	cbz	r0, 80043f8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80043f2:	6803      	ldr	r3, [r0, #0]
 80043f4:	695b      	ldr	r3, [r3, #20]
 80043f6:	4798      	blx	r3
    if (*currentPresenter)
 80043f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80043fc:	b110      	cbz	r0, 8004404 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80043fe:	6803      	ldr	r3, [r0, #0]
 8004400:	685b      	ldr	r3, [r3, #4]
 8004402:	4798      	blx	r3
    if (*currentScreen)
 8004404:	f8d8 0000 	ldr.w	r0, [r8]
 8004408:	b110      	cbz	r0, 8004410 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800440a:	6803      	ldr	r3, [r0, #0]
 800440c:	681b      	ldr	r3, [r3, #0]
 800440e:	4798      	blx	r3
    if (*currentPresenter)
 8004410:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004414:	b110      	cbz	r0, 800441c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8004416:	6803      	ldr	r3, [r0, #0]
 8004418:	689b      	ldr	r3, [r3, #8]
 800441a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800441c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800441e:	6803      	ldr	r3, [r0, #0]
 8004420:	2100      	movs	r1, #0
 8004422:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004424:	4798      	blx	r3
        : screenContainer(0), done(false)
 8004426:	f04f 0b00 	mov.w	fp, #0
 800442a:	4b24      	ldr	r3, [pc, #144]	; (80044bc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 800442c:	6003      	str	r3, [r0, #0]
 800442e:	4604      	mov	r4, r0
 8004430:	f8c0 b004 	str.w	fp, [r0, #4]
 8004434:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004438:	68a8      	ldr	r0, [r5, #8]
 800443a:	6803      	ldr	r3, [r0, #0]
 800443c:	4659      	mov	r1, fp
 800443e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004440:	4798      	blx	r3
 8004442:	4606      	mov	r6, r0
 8004444:	f005 faf2 	bl	8009a2c <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004448:	6868      	ldr	r0, [r5, #4]
 800444a:	6803      	ldr	r3, [r0, #0]
 800444c:	4659      	mov	r1, fp
 800444e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004450:	4798      	blx	r3
 8004452:	4631      	mov	r1, r6
 8004454:	4605      	mov	r5, r0
 8004456:	f005 fac5 	bl	80099e4 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 800445a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800445e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004462:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004466:	b1e5      	cbz	r5, 80044a2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8004468:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800446a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800446e:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8004470:	f8c5 a008 	str.w	sl, [r5, #8]
 8004474:	4630      	mov	r0, r6
 8004476:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8004478:	63f5      	str	r5, [r6, #60]	; 0x3c
 800447a:	4798      	blx	r3
    newPresenter->activate();
 800447c:	682b      	ldr	r3, [r5, #0]
 800447e:	4628      	mov	r0, r5
 8004480:	681b      	ldr	r3, [r3, #0]
 8004482:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004484:	4621      	mov	r1, r4
 8004486:	4630      	mov	r0, r6
 8004488:	f013 f9a6 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800448c:	6823      	ldr	r3, [r4, #0]
 800448e:	4620      	mov	r0, r4
 8004490:	691b      	ldr	r3, [r3, #16]
 8004492:	4798      	blx	r3
    newTransition->invalidate();
 8004494:	6823      	ldr	r3, [r4, #0]
 8004496:	695b      	ldr	r3, [r3, #20]
 8004498:	4620      	mov	r0, r4
}
 800449a:	b001      	add	sp, #4
 800449c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044a0:	4718      	bx	r3
    model->bind(newPresenter);
 80044a2:	462b      	mov	r3, r5
 80044a4:	e7e1      	b.n	800446a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80044a6:	bf00      	nop
 80044a8:	0802c7b4 	.word	0x0802c7b4
 80044ac:	0802c842 	.word	0x0802c842
 80044b0:	0802c950 	.word	0x0802c950
 80044b4:	0802c997 	.word	0x0802c997
 80044b8:	0802ca3a 	.word	0x0802ca3a
 80044bc:	0802de58 	.word	0x0802de58
 80044c0:	20012dfc 	.word	0x20012dfc
 80044c4:	20012df8 	.word	0x20012df8

080044c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80044c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80044ca:	4604      	mov	r4, r0
        animationCounter++;
 80044cc:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80044ce:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80044d0:	3001      	adds	r0, #1
 80044d2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80044d4:	4298      	cmp	r0, r3
        animationCounter++;
 80044d6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80044d8:	d905      	bls.n	80044e6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 80044da:	2301      	movs	r3, #1
 80044dc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80044de:	2300      	movs	r3, #0
 80044e0:	72a3      	strb	r3, [r4, #10]
    }
 80044e2:	b003      	add	sp, #12
 80044e4:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80044e6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80044ea:	2100      	movs	r1, #0
 80044ec:	f013 f97a 	bl	80177e4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80044f0:	f010 0201 	ands.w	r2, r0, #1
 80044f4:	b283      	uxth	r3, r0
 80044f6:	d128      	bne.n	800454a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80044f8:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80044fa:	4b18      	ldr	r3, [pc, #96]	; (800455c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80044fc:	4818      	ldr	r0, [pc, #96]	; (8004560 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80044fe:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8004500:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004502:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004504:	f9b0 0000 	ldrsh.w	r0, [r0]
 8004508:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800450c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800450e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8004510:	442b      	add	r3, r5
 8004512:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004514:	b212      	sxth	r2, r2
 8004516:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800451a:	6803      	ldr	r3, [r0, #0]
 800451c:	8322      	strh	r2, [r4, #24]
 800451e:	f8ad 2000 	strh.w	r2, [sp]
 8004522:	2200      	movs	r2, #0
 8004524:	691b      	ldr	r3, [r3, #16]
 8004526:	f8ad 2002 	strh.w	r2, [sp, #2]
 800452a:	4669      	mov	r1, sp
 800452c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800452e:	7aa3      	ldrb	r3, [r4, #10]
 8004530:	2b01      	cmp	r3, #1
 8004532:	d1d6      	bne.n	80044e2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8004534:	4b0b      	ldr	r3, [pc, #44]	; (8004564 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8004536:	781b      	ldrb	r3, [r3, #0]
 8004538:	2b00      	cmp	r3, #0
 800453a:	d0d2      	beq.n	80044e2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800453c:	f011 fb20 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004540:	b003      	add	sp, #12
 8004542:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004546:	f011 bb21 	b.w	8015b8c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800454a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800454e:	2800      	cmp	r0, #0
 8004550:	bfd8      	it	le
 8004552:	460a      	movle	r2, r1
 8004554:	4413      	add	r3, r2
 8004556:	81e3      	strh	r3, [r4, #14]
 8004558:	e7cf      	b.n	80044fa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800455a:	bf00      	nop
 800455c:	20012da8 	.word	0x20012da8
 8004560:	20012daa 	.word	0x20012daa
 8004564:	20012db2 	.word	0x20012db2

08004568 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8004568:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800456c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004570:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004572:	68a8      	ldr	r0, [r5, #8]
 8004574:	6803      	ldr	r3, [r0, #0]
 8004576:	6a1b      	ldr	r3, [r3, #32]
 8004578:	4798      	blx	r3
 800457a:	f241 137b 	movw	r3, #4475	; 0x117b
 800457e:	4298      	cmp	r0, r3
 8004580:	d805      	bhi.n	800458e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 8004582:	4b46      	ldr	r3, [pc, #280]	; (800469c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8004584:	4a46      	ldr	r2, [pc, #280]	; (80046a0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8004586:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004588:	4846      	ldr	r0, [pc, #280]	; (80046a4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 800458a:	f026 fa57 	bl	802aa3c <__assert_func>
 800458e:	6868      	ldr	r0, [r5, #4]
 8004590:	6803      	ldr	r3, [r0, #0]
 8004592:	6a1b      	ldr	r3, [r3, #32]
 8004594:	4798      	blx	r3
 8004596:	280f      	cmp	r0, #15
 8004598:	d803      	bhi.n	80045a2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 800459a:	4b43      	ldr	r3, [pc, #268]	; (80046a8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 800459c:	4a40      	ldr	r2, [pc, #256]	; (80046a0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800459e:	21a4      	movs	r1, #164	; 0xa4
 80045a0:	e7f2      	b.n	8004588 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80045a2:	68e8      	ldr	r0, [r5, #12]
 80045a4:	6803      	ldr	r3, [r0, #0]
 80045a6:	6a1b      	ldr	r3, [r3, #32]
 80045a8:	4798      	blx	r3
 80045aa:	280b      	cmp	r0, #11
 80045ac:	d803      	bhi.n	80045b6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 80045ae:	4b3f      	ldr	r3, [pc, #252]	; (80046ac <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 80045b0:	4a3b      	ldr	r2, [pc, #236]	; (80046a0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80045b2:	21a5      	movs	r1, #165	; 0xa5
 80045b4:	e7e8      	b.n	8004588 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80045b6:	f011 fae3 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80045ba:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80046b4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 80045be:	3004      	adds	r0, #4
 80045c0:	f011 fb44 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80045c4:	f8d9 0000 	ldr.w	r0, [r9]
 80045c8:	b110      	cbz	r0, 80045d0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80045ca:	6803      	ldr	r3, [r0, #0]
 80045cc:	68db      	ldr	r3, [r3, #12]
 80045ce:	4798      	blx	r3
    if (*currentTrans)
 80045d0:	f8d9 0000 	ldr.w	r0, [r9]
 80045d4:	b110      	cbz	r0, 80045dc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80045d6:	6803      	ldr	r3, [r0, #0]
 80045d8:	681b      	ldr	r3, [r3, #0]
 80045da:	4798      	blx	r3
    if (*currentScreen)
 80045dc:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80046b8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 80045e0:	f8d8 0000 	ldr.w	r0, [r8]
 80045e4:	b110      	cbz	r0, 80045ec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80045e6:	6803      	ldr	r3, [r0, #0]
 80045e8:	695b      	ldr	r3, [r3, #20]
 80045ea:	4798      	blx	r3
    if (*currentPresenter)
 80045ec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045f0:	b110      	cbz	r0, 80045f8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 80045f2:	6803      	ldr	r3, [r0, #0]
 80045f4:	685b      	ldr	r3, [r3, #4]
 80045f6:	4798      	blx	r3
    if (*currentScreen)
 80045f8:	f8d8 0000 	ldr.w	r0, [r8]
 80045fc:	b110      	cbz	r0, 8004604 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 80045fe:	6803      	ldr	r3, [r0, #0]
 8004600:	681b      	ldr	r3, [r3, #0]
 8004602:	4798      	blx	r3
    if (*currentPresenter)
 8004604:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004608:	b110      	cbz	r0, 8004610 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800460a:	6803      	ldr	r3, [r0, #0]
 800460c:	689b      	ldr	r3, [r3, #8]
 800460e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004610:	68e8      	ldr	r0, [r5, #12]
 8004612:	6803      	ldr	r3, [r0, #0]
 8004614:	2100      	movs	r1, #0
 8004616:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004618:	4798      	blx	r3
 800461a:	f04f 0b00 	mov.w	fp, #0
 800461e:	4b24      	ldr	r3, [pc, #144]	; (80046b0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8004620:	6003      	str	r3, [r0, #0]
 8004622:	4604      	mov	r4, r0
 8004624:	f8c0 b004 	str.w	fp, [r0, #4]
 8004628:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800462c:	68a8      	ldr	r0, [r5, #8]
 800462e:	6803      	ldr	r3, [r0, #0]
 8004630:	4659      	mov	r1, fp
 8004632:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004634:	4798      	blx	r3
 8004636:	4606      	mov	r6, r0
 8004638:	f004 feb4 	bl	80093a4 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800463c:	6868      	ldr	r0, [r5, #4]
 800463e:	6803      	ldr	r3, [r0, #0]
 8004640:	4659      	mov	r1, fp
 8004642:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004644:	4798      	blx	r3
 8004646:	4631      	mov	r1, r6
 8004648:	4605      	mov	r5, r0
 800464a:	f004 fe85 	bl	8009358 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 800464e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004652:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004656:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800465a:	b1e5      	cbz	r5, 8004696 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 800465c:	1d2b      	adds	r3, r5, #4
 800465e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004662:	6833      	ldr	r3, [r6, #0]
 8004664:	f8c5 a008 	str.w	sl, [r5, #8]
 8004668:	4630      	mov	r0, r6
 800466a:	68db      	ldr	r3, [r3, #12]
 800466c:	63f5      	str	r5, [r6, #60]	; 0x3c
 800466e:	4798      	blx	r3
    newPresenter->activate();
 8004670:	682b      	ldr	r3, [r5, #0]
 8004672:	4628      	mov	r0, r5
 8004674:	681b      	ldr	r3, [r3, #0]
 8004676:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004678:	4621      	mov	r1, r4
 800467a:	4630      	mov	r0, r6
 800467c:	f013 f8ac 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004680:	6823      	ldr	r3, [r4, #0]
 8004682:	4620      	mov	r0, r4
 8004684:	691b      	ldr	r3, [r3, #16]
 8004686:	4798      	blx	r3
    newTransition->invalidate();
 8004688:	6823      	ldr	r3, [r4, #0]
 800468a:	695b      	ldr	r3, [r3, #20]
 800468c:	4620      	mov	r0, r4
}
 800468e:	b001      	add	sp, #4
 8004690:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004694:	4718      	bx	r3
    model->bind(newPresenter);
 8004696:	462b      	mov	r3, r5
 8004698:	e7e1      	b.n	800465e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 800469a:	bf00      	nop
 800469c:	0802c7b4 	.word	0x0802c7b4
 80046a0:	0802cadd 	.word	0x0802cadd
 80046a4:	0802c950 	.word	0x0802c950
 80046a8:	0802c997 	.word	0x0802c997
 80046ac:	0802ca3a 	.word	0x0802ca3a
 80046b0:	0802de58 	.word	0x0802de58
 80046b4:	20012dfc 	.word	0x20012dfc
 80046b8:	20012df8 	.word	0x20012df8

080046bc <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80046bc:	4b04      	ldr	r3, [pc, #16]	; (80046d0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80046be:	681b      	ldr	r3, [r3, #0]
 80046c0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80046c4:	b10a      	cbz	r2, 80046ca <_ZN8touchgfx3HAL3lcdEv+0xe>
 80046c6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80046c8:	b900      	cbnz	r0, 80046cc <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80046ca:	6898      	ldr	r0, [r3, #8]
    }
 80046cc:	4770      	bx	lr
 80046ce:	bf00      	nop
 80046d0:	20012db4 	.word	0x20012db4

080046d4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80046d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80046d6:	4604      	mov	r4, r0
 80046d8:	4617      	mov	r7, r2
 80046da:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80046dc:	f011 fb84 	bl	8015de8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80046e0:	4b10      	ldr	r3, [pc, #64]	; (8004724 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 80046e2:	601c      	str	r4, [r3, #0]
      model(m)
 80046e4:	4b10      	ldr	r3, [pc, #64]	; (8004728 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80046e6:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80046e8:	4b10      	ldr	r3, [pc, #64]	; (800472c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 80046ea:	2500      	movs	r5, #0
 80046ec:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 80046f0:	4b0f      	ldr	r3, [pc, #60]	; (8004730 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80046f2:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 80046f6:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80046f8:	6803      	ldr	r3, [r0, #0]
 80046fa:	2101      	movs	r1, #1
 80046fc:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80046fe:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8004702:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8004706:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8004708:	4628      	mov	r0, r5
 800470a:	f004 fbf3 	bl	8008ef4 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800470e:	f7ff ffd5 	bl	80046bc <_ZN8touchgfx3HAL3lcdEv>
 8004712:	f01a ff2e 	bl	801f572 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8004716:	f7ff ffd1 	bl	80046bc <_ZN8touchgfx3HAL3lcdEv>
 800471a:	f01a ffa5 	bl	801f668 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800471e:	4620      	mov	r0, r4
 8004720:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004722:	bf00      	nop
 8004724:	20012e08 	.word	0x20012e08
 8004728:	0802de04 	.word	0x0802de04
 800472c:	0802ddec 	.word	0x0802ddec
 8004730:	20012db4 	.word	0x20012db4

08004734 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004734:	4b06      	ldr	r3, [pc, #24]	; (8004750 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8004736:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800473a:	2300      	movs	r3, #0
 800473c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004740:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004744:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004748:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800474c:	4770      	bx	lr
 800474e:	bf00      	nop
 8004750:	08004569 	.word	0x08004569

08004754 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8004754:	4b06      	ldr	r3, [pc, #24]	; (8004770 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8004756:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800475a:	2300      	movs	r3, #0
 800475c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004760:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004764:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004768:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800476c:	4770      	bx	lr
 800476e:	bf00      	nop
 8004770:	08004d79 	.word	0x08004d79

08004774 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8004774:	4b06      	ldr	r3, [pc, #24]	; (8004790 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8004776:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800477a:	2300      	movs	r3, #0
 800477c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004780:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004784:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004788:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800478c:	4770      	bx	lr
 800478e:	bf00      	nop
 8004790:	08005b9d 	.word	0x08005b9d

08004794 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8004794:	4b06      	ldr	r3, [pc, #24]	; (80047b0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8004796:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800479a:	2300      	movs	r3, #0
 800479c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80047a0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80047a4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80047a8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80047ac:	4770      	bx	lr
 80047ae:	bf00      	nop
 80047b0:	08004c39 	.word	0x08004c39

080047b4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80047b4:	4b06      	ldr	r3, [pc, #24]	; (80047d0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80047b6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80047ba:	2300      	movs	r3, #0
 80047bc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80047c0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80047c4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80047c8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80047cc:	4770      	bx	lr
 80047ce:	bf00      	nop
 80047d0:	08005a5d 	.word	0x08005a5d

080047d4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 80047d4:	4b06      	ldr	r3, [pc, #24]	; (80047f0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 80047d6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80047da:	2300      	movs	r3, #0
 80047dc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80047e0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80047e4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80047e8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80047ec:	4770      	bx	lr
 80047ee:	bf00      	nop
 80047f0:	0800591d 	.word	0x0800591d

080047f4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 80047f4:	4b06      	ldr	r3, [pc, #24]	; (8004810 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 80047f6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80047fa:	2300      	movs	r3, #0
 80047fc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004800:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004804:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004808:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800480c:	4770      	bx	lr
 800480e:	bf00      	nop
 8004810:	080057dd 	.word	0x080057dd

08004814 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8004814:	4b06      	ldr	r3, [pc, #24]	; (8004830 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8004816:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800481a:	2300      	movs	r3, #0
 800481c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004820:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004824:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004828:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800482c:	4770      	bx	lr
 800482e:	bf00      	nop
 8004830:	0800569d 	.word	0x0800569d

08004834 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8004834:	4b06      	ldr	r3, [pc, #24]	; (8004850 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8004836:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800483a:	2300      	movs	r3, #0
 800483c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004840:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004844:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004848:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800484c:	4770      	bx	lr
 800484e:	bf00      	nop
 8004850:	08004af9 	.word	0x08004af9

08004854 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8004854:	4b06      	ldr	r3, [pc, #24]	; (8004870 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8004856:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800485a:	2300      	movs	r3, #0
 800485c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004860:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004864:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004868:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800486c:	4770      	bx	lr
 800486e:	bf00      	nop
 8004870:	0800555d 	.word	0x0800555d

08004874 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8004874:	4b06      	ldr	r3, [pc, #24]	; (8004890 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8004876:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800487a:	2300      	movs	r3, #0
 800487c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004880:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004884:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004888:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800488c:	4770      	bx	lr
 800488e:	bf00      	nop
 8004890:	0800541d 	.word	0x0800541d

08004894 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 8004894:	4b06      	ldr	r3, [pc, #24]	; (80048b0 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 8004896:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800489a:	2300      	movs	r3, #0
 800489c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80048a0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80048a4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80048a8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80048ac:	4770      	bx	lr
 80048ae:	bf00      	nop
 80048b0:	080052dd 	.word	0x080052dd

080048b4 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 80048b4:	4b06      	ldr	r3, [pc, #24]	; (80048d0 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 80048b6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80048ba:	2300      	movs	r3, #0
 80048bc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80048c0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80048c4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80048c8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80048cc:	4770      	bx	lr
 80048ce:	bf00      	nop
 80048d0:	080049b9 	.word	0x080049b9

080048d4 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 80048d4:	4b06      	ldr	r3, [pc, #24]	; (80048f0 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 80048d6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80048da:	2300      	movs	r3, #0
 80048dc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80048e0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80048e4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80048e8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80048ec:	4770      	bx	lr
 80048ee:	bf00      	nop
 80048f0:	0800519d 	.word	0x0800519d

080048f4 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 80048f4:	4b06      	ldr	r3, [pc, #24]	; (8004910 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 80048f6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80048fa:	2300      	movs	r3, #0
 80048fc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004900:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004904:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004908:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800490c:	4770      	bx	lr
 800490e:	bf00      	nop
 8004910:	0800505d 	.word	0x0800505d

08004914 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8004914:	4b06      	ldr	r3, [pc, #24]	; (8004930 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8004916:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800491a:	2300      	movs	r3, #0
 800491c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004920:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004924:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004928:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800492c:	4770      	bx	lr
 800492e:	bf00      	nop
 8004930:	08004f1d 	.word	0x08004f1d

08004934 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8004934:	4b06      	ldr	r3, [pc, #24]	; (8004950 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8004936:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800493a:	2300      	movs	r3, #0
 800493c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004940:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004944:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004948:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800494c:	4770      	bx	lr
 800494e:	bf00      	nop
 8004950:	08004379 	.word	0x08004379

08004954 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8004954:	6803      	ldr	r3, [r0, #0]
 8004956:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004958:	4718      	bx	r3
	...

0800495c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 800495c:	4b12      	ldr	r3, [pc, #72]	; (80049a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 800495e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004960:	6003      	str	r3, [r0, #0]
 8004962:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004966:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004968:	4b10      	ldr	r3, [pc, #64]	; (80049ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 800496a:	7241      	strb	r1, [r0, #9]
 800496c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800496e:	4910      	ldr	r1, [pc, #64]	; (80049b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004970:	4b10      	ldr	r3, [pc, #64]	; (80049b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004972:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004976:	f9b3 3000 	ldrsh.w	r3, [r3]
 800497a:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 800497c:	2200      	movs	r2, #0
 800497e:	6042      	str	r2, [r0, #4]
 8004980:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004982:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004984:	81c2      	strh	r2, [r0, #14]
          solid()
 8004986:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800498a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800498e:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004992:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004996:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004998:	9100      	str	r1, [sp, #0]
 800499a:	3010      	adds	r0, #16
 800499c:	4611      	mov	r1, r2
 800499e:	f7fe fb0f 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 80049a2:	4620      	mov	r0, r4
 80049a4:	b002      	add	sp, #8
 80049a6:	bd10      	pop	{r4, pc}
 80049a8:	0802dea0 	.word	0x0802dea0
 80049ac:	0802dd84 	.word	0x0802dd84
 80049b0:	20012daa 	.word	0x20012daa
 80049b4:	20012da8 	.word	0x20012da8

080049b8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 80049b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80049bc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80049c0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80049c2:	68a0      	ldr	r0, [r4, #8]
 80049c4:	6803      	ldr	r3, [r0, #0]
 80049c6:	6a1b      	ldr	r3, [r3, #32]
 80049c8:	4798      	blx	r3
 80049ca:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80049ce:	d205      	bcs.n	80049dc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 80049d0:	4b42      	ldr	r3, [pc, #264]	; (8004adc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 80049d2:	4a43      	ldr	r2, [pc, #268]	; (8004ae0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 80049d4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80049d6:	4843      	ldr	r0, [pc, #268]	; (8004ae4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 80049d8:	f026 f830 	bl	802aa3c <__assert_func>
 80049dc:	6860      	ldr	r0, [r4, #4]
 80049de:	6803      	ldr	r3, [r0, #0]
 80049e0:	6a1b      	ldr	r3, [r3, #32]
 80049e2:	4798      	blx	r3
 80049e4:	280f      	cmp	r0, #15
 80049e6:	d803      	bhi.n	80049f0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 80049e8:	4b3f      	ldr	r3, [pc, #252]	; (8004ae8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 80049ea:	4a3d      	ldr	r2, [pc, #244]	; (8004ae0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 80049ec:	21a4      	movs	r1, #164	; 0xa4
 80049ee:	e7f2      	b.n	80049d6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80049f0:	68e0      	ldr	r0, [r4, #12]
 80049f2:	6803      	ldr	r3, [r0, #0]
 80049f4:	6a1b      	ldr	r3, [r3, #32]
 80049f6:	4798      	blx	r3
 80049f8:	2837      	cmp	r0, #55	; 0x37
 80049fa:	d803      	bhi.n	8004a04 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 80049fc:	4b3b      	ldr	r3, [pc, #236]	; (8004aec <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 80049fe:	4a38      	ldr	r2, [pc, #224]	; (8004ae0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8004a00:	21a5      	movs	r1, #165	; 0xa5
 8004a02:	e7e8      	b.n	80049d6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004a04:	f011 f8bc 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004a08:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004af0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8004a0c:	3004      	adds	r0, #4
 8004a0e:	f011 f91d 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004a12:	f8d9 0000 	ldr.w	r0, [r9]
 8004a16:	b110      	cbz	r0, 8004a1e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004a18:	6803      	ldr	r3, [r0, #0]
 8004a1a:	68db      	ldr	r3, [r3, #12]
 8004a1c:	4798      	blx	r3
    if (*currentTrans)
 8004a1e:	f8d9 0000 	ldr.w	r0, [r9]
 8004a22:	b110      	cbz	r0, 8004a2a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004a24:	6803      	ldr	r3, [r0, #0]
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	4798      	blx	r3
    if (*currentScreen)
 8004a2a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004af4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8004a2e:	f8d8 0000 	ldr.w	r0, [r8]
 8004a32:	b110      	cbz	r0, 8004a3a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004a34:	6803      	ldr	r3, [r0, #0]
 8004a36:	695b      	ldr	r3, [r3, #20]
 8004a38:	4798      	blx	r3
    if (*currentPresenter)
 8004a3a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a3e:	b110      	cbz	r0, 8004a46 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004a40:	6803      	ldr	r3, [r0, #0]
 8004a42:	685b      	ldr	r3, [r3, #4]
 8004a44:	4798      	blx	r3
    if (*currentScreen)
 8004a46:	f8d8 0000 	ldr.w	r0, [r8]
 8004a4a:	b110      	cbz	r0, 8004a52 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004a4c:	6803      	ldr	r3, [r0, #0]
 8004a4e:	681b      	ldr	r3, [r3, #0]
 8004a50:	4798      	blx	r3
    if (*currentPresenter)
 8004a52:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a56:	b110      	cbz	r0, 8004a5e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004a58:	6803      	ldr	r3, [r0, #0]
 8004a5a:	689b      	ldr	r3, [r3, #8]
 8004a5c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004a5e:	68e0      	ldr	r0, [r4, #12]
 8004a60:	2100      	movs	r1, #0
 8004a62:	f7ff ff77 	bl	8004954 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004a66:	2114      	movs	r1, #20
 8004a68:	4605      	mov	r5, r0
 8004a6a:	f7ff ff77 	bl	800495c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004a6e:	68a0      	ldr	r0, [r4, #8]
 8004a70:	6803      	ldr	r3, [r0, #0]
 8004a72:	2100      	movs	r1, #0
 8004a74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a76:	4798      	blx	r3
 8004a78:	4606      	mov	r6, r0
 8004a7a:	f004 fad9 	bl	8009030 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004a7e:	6860      	ldr	r0, [r4, #4]
 8004a80:	6803      	ldr	r3, [r0, #0]
 8004a82:	2100      	movs	r1, #0
 8004a84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a86:	4798      	blx	r3
 8004a88:	4631      	mov	r1, r6
 8004a8a:	4604      	mov	r4, r0
 8004a8c:	f004 faaa 	bl	8008fe4 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8004a90:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004a94:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004a98:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004a9c:	b1dc      	cbz	r4, 8004ad6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8004a9e:	1d23      	adds	r3, r4, #4
 8004aa0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004aa4:	6833      	ldr	r3, [r6, #0]
 8004aa6:	f8c4 a008 	str.w	sl, [r4, #8]
 8004aaa:	4630      	mov	r0, r6
 8004aac:	68db      	ldr	r3, [r3, #12]
 8004aae:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004ab0:	4798      	blx	r3
    newPresenter->activate();
 8004ab2:	6823      	ldr	r3, [r4, #0]
 8004ab4:	4620      	mov	r0, r4
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004aba:	4629      	mov	r1, r5
 8004abc:	4630      	mov	r0, r6
 8004abe:	f012 fe8b 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004ac2:	682b      	ldr	r3, [r5, #0]
 8004ac4:	4628      	mov	r0, r5
 8004ac6:	691b      	ldr	r3, [r3, #16]
 8004ac8:	4798      	blx	r3
    newTransition->invalidate();
 8004aca:	682b      	ldr	r3, [r5, #0]
 8004acc:	4628      	mov	r0, r5
 8004ace:	695b      	ldr	r3, [r3, #20]
}
 8004ad0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ad4:	4718      	bx	r3
    model->bind(newPresenter);
 8004ad6:	4623      	mov	r3, r4
 8004ad8:	e7e2      	b.n	8004aa0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8004ada:	bf00      	nop
 8004adc:	0802c7b4 	.word	0x0802c7b4
 8004ae0:	0802cbe5 	.word	0x0802cbe5
 8004ae4:	0802c950 	.word	0x0802c950
 8004ae8:	0802c997 	.word	0x0802c997
 8004aec:	0802ca3a 	.word	0x0802ca3a
 8004af0:	20012dfc 	.word	0x20012dfc
 8004af4:	20012df8 	.word	0x20012df8

08004af8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8004af8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004afc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004b00:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b02:	68a0      	ldr	r0, [r4, #8]
 8004b04:	6803      	ldr	r3, [r0, #0]
 8004b06:	6a1b      	ldr	r3, [r3, #32]
 8004b08:	4798      	blx	r3
 8004b0a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004b0e:	d205      	bcs.n	8004b1c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004b10:	4b42      	ldr	r3, [pc, #264]	; (8004c1c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8004b12:	4a43      	ldr	r2, [pc, #268]	; (8004c20 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004b14:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b16:	4843      	ldr	r0, [pc, #268]	; (8004c24 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8004b18:	f025 ff90 	bl	802aa3c <__assert_func>
 8004b1c:	6860      	ldr	r0, [r4, #4]
 8004b1e:	6803      	ldr	r3, [r0, #0]
 8004b20:	6a1b      	ldr	r3, [r3, #32]
 8004b22:	4798      	blx	r3
 8004b24:	280f      	cmp	r0, #15
 8004b26:	d803      	bhi.n	8004b30 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8004b28:	4b3f      	ldr	r3, [pc, #252]	; (8004c28 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8004b2a:	4a3d      	ldr	r2, [pc, #244]	; (8004c20 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004b2c:	21a4      	movs	r1, #164	; 0xa4
 8004b2e:	e7f2      	b.n	8004b16 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b30:	68e0      	ldr	r0, [r4, #12]
 8004b32:	6803      	ldr	r3, [r0, #0]
 8004b34:	6a1b      	ldr	r3, [r3, #32]
 8004b36:	4798      	blx	r3
 8004b38:	2837      	cmp	r0, #55	; 0x37
 8004b3a:	d803      	bhi.n	8004b44 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8004b3c:	4b3b      	ldr	r3, [pc, #236]	; (8004c2c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8004b3e:	4a38      	ldr	r2, [pc, #224]	; (8004c20 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004b40:	21a5      	movs	r1, #165	; 0xa5
 8004b42:	e7e8      	b.n	8004b16 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004b44:	f011 f81c 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004b48:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004c30 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8004b4c:	3004      	adds	r0, #4
 8004b4e:	f011 f87d 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004b52:	f8d9 0000 	ldr.w	r0, [r9]
 8004b56:	b110      	cbz	r0, 8004b5e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004b58:	6803      	ldr	r3, [r0, #0]
 8004b5a:	68db      	ldr	r3, [r3, #12]
 8004b5c:	4798      	blx	r3
    if (*currentTrans)
 8004b5e:	f8d9 0000 	ldr.w	r0, [r9]
 8004b62:	b110      	cbz	r0, 8004b6a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004b64:	6803      	ldr	r3, [r0, #0]
 8004b66:	681b      	ldr	r3, [r3, #0]
 8004b68:	4798      	blx	r3
    if (*currentScreen)
 8004b6a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004c34 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8004b6e:	f8d8 0000 	ldr.w	r0, [r8]
 8004b72:	b110      	cbz	r0, 8004b7a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004b74:	6803      	ldr	r3, [r0, #0]
 8004b76:	695b      	ldr	r3, [r3, #20]
 8004b78:	4798      	blx	r3
    if (*currentPresenter)
 8004b7a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b7e:	b110      	cbz	r0, 8004b86 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004b80:	6803      	ldr	r3, [r0, #0]
 8004b82:	685b      	ldr	r3, [r3, #4]
 8004b84:	4798      	blx	r3
    if (*currentScreen)
 8004b86:	f8d8 0000 	ldr.w	r0, [r8]
 8004b8a:	b110      	cbz	r0, 8004b92 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004b8c:	6803      	ldr	r3, [r0, #0]
 8004b8e:	681b      	ldr	r3, [r3, #0]
 8004b90:	4798      	blx	r3
    if (*currentPresenter)
 8004b92:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b96:	b110      	cbz	r0, 8004b9e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004b98:	6803      	ldr	r3, [r0, #0]
 8004b9a:	689b      	ldr	r3, [r3, #8]
 8004b9c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b9e:	68e0      	ldr	r0, [r4, #12]
 8004ba0:	2100      	movs	r1, #0
 8004ba2:	f7ff fed7 	bl	8004954 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004ba6:	2114      	movs	r1, #20
 8004ba8:	4605      	mov	r5, r0
 8004baa:	f7ff fed7 	bl	800495c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004bae:	68a0      	ldr	r0, [r4, #8]
 8004bb0:	6803      	ldr	r3, [r0, #0]
 8004bb2:	2100      	movs	r1, #0
 8004bb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bb6:	4798      	blx	r3
 8004bb8:	4606      	mov	r6, r0
 8004bba:	f004 fcb3 	bl	8009524 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004bbe:	6860      	ldr	r0, [r4, #4]
 8004bc0:	6803      	ldr	r3, [r0, #0]
 8004bc2:	2100      	movs	r1, #0
 8004bc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bc6:	4798      	blx	r3
 8004bc8:	4631      	mov	r1, r6
 8004bca:	4604      	mov	r4, r0
 8004bcc:	f004 fc84 	bl	80094d8 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004bd0:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004bd4:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004bd8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004bdc:	b1dc      	cbz	r4, 8004c16 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8004bde:	1d23      	adds	r3, r4, #4
 8004be0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004be4:	6833      	ldr	r3, [r6, #0]
 8004be6:	f8c4 a008 	str.w	sl, [r4, #8]
 8004bea:	4630      	mov	r0, r6
 8004bec:	68db      	ldr	r3, [r3, #12]
 8004bee:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004bf0:	4798      	blx	r3
    newPresenter->activate();
 8004bf2:	6823      	ldr	r3, [r4, #0]
 8004bf4:	4620      	mov	r0, r4
 8004bf6:	681b      	ldr	r3, [r3, #0]
 8004bf8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004bfa:	4629      	mov	r1, r5
 8004bfc:	4630      	mov	r0, r6
 8004bfe:	f012 fdeb 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c02:	682b      	ldr	r3, [r5, #0]
 8004c04:	4628      	mov	r0, r5
 8004c06:	691b      	ldr	r3, [r3, #16]
 8004c08:	4798      	blx	r3
    newTransition->invalidate();
 8004c0a:	682b      	ldr	r3, [r5, #0]
 8004c0c:	4628      	mov	r0, r5
 8004c0e:	695b      	ldr	r3, [r3, #20]
}
 8004c10:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c14:	4718      	bx	r3
    model->bind(newPresenter);
 8004c16:	4623      	mov	r3, r4
 8004c18:	e7e2      	b.n	8004be0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8004c1a:	bf00      	nop
 8004c1c:	0802c7b4 	.word	0x0802c7b4
 8004c20:	0802cd03 	.word	0x0802cd03
 8004c24:	0802c950 	.word	0x0802c950
 8004c28:	0802c997 	.word	0x0802c997
 8004c2c:	0802ca3a 	.word	0x0802ca3a
 8004c30:	20012dfc 	.word	0x20012dfc
 8004c34:	20012df8 	.word	0x20012df8

08004c38 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8004c38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c3c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004c40:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c42:	68a0      	ldr	r0, [r4, #8]
 8004c44:	6803      	ldr	r3, [r0, #0]
 8004c46:	6a1b      	ldr	r3, [r3, #32]
 8004c48:	4798      	blx	r3
 8004c4a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004c4e:	d205      	bcs.n	8004c5c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8004c50:	4b42      	ldr	r3, [pc, #264]	; (8004d5c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8004c52:	4a43      	ldr	r2, [pc, #268]	; (8004d60 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004c54:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c56:	4843      	ldr	r0, [pc, #268]	; (8004d64 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8004c58:	f025 fef0 	bl	802aa3c <__assert_func>
 8004c5c:	6860      	ldr	r0, [r4, #4]
 8004c5e:	6803      	ldr	r3, [r0, #0]
 8004c60:	6a1b      	ldr	r3, [r3, #32]
 8004c62:	4798      	blx	r3
 8004c64:	280f      	cmp	r0, #15
 8004c66:	d803      	bhi.n	8004c70 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8004c68:	4b3f      	ldr	r3, [pc, #252]	; (8004d68 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8004c6a:	4a3d      	ldr	r2, [pc, #244]	; (8004d60 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004c6c:	21a4      	movs	r1, #164	; 0xa4
 8004c6e:	e7f2      	b.n	8004c56 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c70:	68e0      	ldr	r0, [r4, #12]
 8004c72:	6803      	ldr	r3, [r0, #0]
 8004c74:	6a1b      	ldr	r3, [r3, #32]
 8004c76:	4798      	blx	r3
 8004c78:	2837      	cmp	r0, #55	; 0x37
 8004c7a:	d803      	bhi.n	8004c84 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8004c7c:	4b3b      	ldr	r3, [pc, #236]	; (8004d6c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8004c7e:	4a38      	ldr	r2, [pc, #224]	; (8004d60 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004c80:	21a5      	movs	r1, #165	; 0xa5
 8004c82:	e7e8      	b.n	8004c56 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004c84:	f010 ff7c 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c88:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004d70 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8004c8c:	3004      	adds	r0, #4
 8004c8e:	f010 ffdd 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c92:	f8d9 0000 	ldr.w	r0, [r9]
 8004c96:	b110      	cbz	r0, 8004c9e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004c98:	6803      	ldr	r3, [r0, #0]
 8004c9a:	68db      	ldr	r3, [r3, #12]
 8004c9c:	4798      	blx	r3
    if (*currentTrans)
 8004c9e:	f8d9 0000 	ldr.w	r0, [r9]
 8004ca2:	b110      	cbz	r0, 8004caa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004ca4:	6803      	ldr	r3, [r0, #0]
 8004ca6:	681b      	ldr	r3, [r3, #0]
 8004ca8:	4798      	blx	r3
    if (*currentScreen)
 8004caa:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004d74 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004cae:	f8d8 0000 	ldr.w	r0, [r8]
 8004cb2:	b110      	cbz	r0, 8004cba <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004cb4:	6803      	ldr	r3, [r0, #0]
 8004cb6:	695b      	ldr	r3, [r3, #20]
 8004cb8:	4798      	blx	r3
    if (*currentPresenter)
 8004cba:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004cbe:	b110      	cbz	r0, 8004cc6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004cc0:	6803      	ldr	r3, [r0, #0]
 8004cc2:	685b      	ldr	r3, [r3, #4]
 8004cc4:	4798      	blx	r3
    if (*currentScreen)
 8004cc6:	f8d8 0000 	ldr.w	r0, [r8]
 8004cca:	b110      	cbz	r0, 8004cd2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004ccc:	6803      	ldr	r3, [r0, #0]
 8004cce:	681b      	ldr	r3, [r3, #0]
 8004cd0:	4798      	blx	r3
    if (*currentPresenter)
 8004cd2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004cd6:	b110      	cbz	r0, 8004cde <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004cd8:	6803      	ldr	r3, [r0, #0]
 8004cda:	689b      	ldr	r3, [r3, #8]
 8004cdc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004cde:	68e0      	ldr	r0, [r4, #12]
 8004ce0:	2100      	movs	r1, #0
 8004ce2:	f7ff fe37 	bl	8004954 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004ce6:	2114      	movs	r1, #20
 8004ce8:	4605      	mov	r5, r0
 8004cea:	f7ff fe37 	bl	800495c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004cee:	68a0      	ldr	r0, [r4, #8]
 8004cf0:	6803      	ldr	r3, [r0, #0]
 8004cf2:	2100      	movs	r1, #0
 8004cf4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cf6:	4798      	blx	r3
 8004cf8:	4606      	mov	r6, r0
 8004cfa:	f004 fbb3 	bl	8009464 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004cfe:	6860      	ldr	r0, [r4, #4]
 8004d00:	6803      	ldr	r3, [r0, #0]
 8004d02:	2100      	movs	r1, #0
 8004d04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d06:	4798      	blx	r3
 8004d08:	4631      	mov	r1, r6
 8004d0a:	4604      	mov	r4, r0
 8004d0c:	f004 fb84 	bl	8009418 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004d10:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004d14:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004d18:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004d1c:	b1dc      	cbz	r4, 8004d56 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004d1e:	1d23      	adds	r3, r4, #4
 8004d20:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004d24:	6833      	ldr	r3, [r6, #0]
 8004d26:	f8c4 a008 	str.w	sl, [r4, #8]
 8004d2a:	4630      	mov	r0, r6
 8004d2c:	68db      	ldr	r3, [r3, #12]
 8004d2e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004d30:	4798      	blx	r3
    newPresenter->activate();
 8004d32:	6823      	ldr	r3, [r4, #0]
 8004d34:	4620      	mov	r0, r4
 8004d36:	681b      	ldr	r3, [r3, #0]
 8004d38:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d3a:	4629      	mov	r1, r5
 8004d3c:	4630      	mov	r0, r6
 8004d3e:	f012 fd4b 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d42:	682b      	ldr	r3, [r5, #0]
 8004d44:	4628      	mov	r0, r5
 8004d46:	691b      	ldr	r3, [r3, #16]
 8004d48:	4798      	blx	r3
    newTransition->invalidate();
 8004d4a:	682b      	ldr	r3, [r5, #0]
 8004d4c:	4628      	mov	r0, r5
 8004d4e:	695b      	ldr	r3, [r3, #20]
}
 8004d50:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d54:	4718      	bx	r3
    model->bind(newPresenter);
 8004d56:	4623      	mov	r3, r4
 8004d58:	e7e2      	b.n	8004d20 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8004d5a:	bf00      	nop
 8004d5c:	0802c7b4 	.word	0x0802c7b4
 8004d60:	0802ce33 	.word	0x0802ce33
 8004d64:	0802c950 	.word	0x0802c950
 8004d68:	0802c997 	.word	0x0802c997
 8004d6c:	0802ca3a 	.word	0x0802ca3a
 8004d70:	20012dfc 	.word	0x20012dfc
 8004d74:	20012df8 	.word	0x20012df8

08004d78 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004d78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d7c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d80:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d82:	68a0      	ldr	r0, [r4, #8]
 8004d84:	6803      	ldr	r3, [r0, #0]
 8004d86:	6a1b      	ldr	r3, [r3, #32]
 8004d88:	4798      	blx	r3
 8004d8a:	f241 137b 	movw	r3, #4475	; 0x117b
 8004d8e:	4298      	cmp	r0, r3
 8004d90:	d805      	bhi.n	8004d9e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004d92:	4b42      	ldr	r3, [pc, #264]	; (8004e9c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004d94:	4a42      	ldr	r2, [pc, #264]	; (8004ea0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004d96:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d98:	4842      	ldr	r0, [pc, #264]	; (8004ea4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8004d9a:	f025 fe4f 	bl	802aa3c <__assert_func>
 8004d9e:	6860      	ldr	r0, [r4, #4]
 8004da0:	6803      	ldr	r3, [r0, #0]
 8004da2:	6a1b      	ldr	r3, [r3, #32]
 8004da4:	4798      	blx	r3
 8004da6:	280f      	cmp	r0, #15
 8004da8:	d803      	bhi.n	8004db2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8004daa:	4b3f      	ldr	r3, [pc, #252]	; (8004ea8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004dac:	4a3c      	ldr	r2, [pc, #240]	; (8004ea0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004dae:	21a4      	movs	r1, #164	; 0xa4
 8004db0:	e7f2      	b.n	8004d98 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004db2:	68e0      	ldr	r0, [r4, #12]
 8004db4:	6803      	ldr	r3, [r0, #0]
 8004db6:	6a1b      	ldr	r3, [r3, #32]
 8004db8:	4798      	blx	r3
 8004dba:	2837      	cmp	r0, #55	; 0x37
 8004dbc:	d803      	bhi.n	8004dc6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004dbe:	4b3b      	ldr	r3, [pc, #236]	; (8004eac <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004dc0:	4a37      	ldr	r2, [pc, #220]	; (8004ea0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004dc2:	21a5      	movs	r1, #165	; 0xa5
 8004dc4:	e7e8      	b.n	8004d98 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004dc6:	f010 fedb 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004dca:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004eb0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004dce:	3004      	adds	r0, #4
 8004dd0:	f010 ff3c 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004dd4:	f8d9 0000 	ldr.w	r0, [r9]
 8004dd8:	b110      	cbz	r0, 8004de0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004dda:	6803      	ldr	r3, [r0, #0]
 8004ddc:	68db      	ldr	r3, [r3, #12]
 8004dde:	4798      	blx	r3
    if (*currentTrans)
 8004de0:	f8d9 0000 	ldr.w	r0, [r9]
 8004de4:	b110      	cbz	r0, 8004dec <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004de6:	6803      	ldr	r3, [r0, #0]
 8004de8:	681b      	ldr	r3, [r3, #0]
 8004dea:	4798      	blx	r3
    if (*currentScreen)
 8004dec:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004eb4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004df0:	f8d8 0000 	ldr.w	r0, [r8]
 8004df4:	b110      	cbz	r0, 8004dfc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004df6:	6803      	ldr	r3, [r0, #0]
 8004df8:	695b      	ldr	r3, [r3, #20]
 8004dfa:	4798      	blx	r3
    if (*currentPresenter)
 8004dfc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e00:	b110      	cbz	r0, 8004e08 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004e02:	6803      	ldr	r3, [r0, #0]
 8004e04:	685b      	ldr	r3, [r3, #4]
 8004e06:	4798      	blx	r3
    if (*currentScreen)
 8004e08:	f8d8 0000 	ldr.w	r0, [r8]
 8004e0c:	b110      	cbz	r0, 8004e14 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004e0e:	6803      	ldr	r3, [r0, #0]
 8004e10:	681b      	ldr	r3, [r3, #0]
 8004e12:	4798      	blx	r3
    if (*currentPresenter)
 8004e14:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e18:	b110      	cbz	r0, 8004e20 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004e1a:	6803      	ldr	r3, [r0, #0]
 8004e1c:	689b      	ldr	r3, [r3, #8]
 8004e1e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004e20:	68e0      	ldr	r0, [r4, #12]
 8004e22:	2100      	movs	r1, #0
 8004e24:	f7ff fd96 	bl	8004954 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004e28:	2114      	movs	r1, #20
 8004e2a:	4605      	mov	r5, r0
 8004e2c:	f7ff fd96 	bl	800495c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e30:	68a0      	ldr	r0, [r4, #8]
 8004e32:	6803      	ldr	r3, [r0, #0]
 8004e34:	2100      	movs	r1, #0
 8004e36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e38:	4798      	blx	r3
 8004e3a:	4606      	mov	r6, r0
 8004e3c:	f004 fab2 	bl	80093a4 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e40:	6860      	ldr	r0, [r4, #4]
 8004e42:	6803      	ldr	r3, [r0, #0]
 8004e44:	2100      	movs	r1, #0
 8004e46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e48:	4798      	blx	r3
 8004e4a:	4631      	mov	r1, r6
 8004e4c:	4604      	mov	r4, r0
 8004e4e:	f004 fa83 	bl	8009358 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004e52:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004e56:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004e5a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004e5e:	b1dc      	cbz	r4, 8004e98 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004e60:	1d23      	adds	r3, r4, #4
 8004e62:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e66:	6833      	ldr	r3, [r6, #0]
 8004e68:	f8c4 a008 	str.w	sl, [r4, #8]
 8004e6c:	4630      	mov	r0, r6
 8004e6e:	68db      	ldr	r3, [r3, #12]
 8004e70:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e72:	4798      	blx	r3
    newPresenter->activate();
 8004e74:	6823      	ldr	r3, [r4, #0]
 8004e76:	4620      	mov	r0, r4
 8004e78:	681b      	ldr	r3, [r3, #0]
 8004e7a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e7c:	4629      	mov	r1, r5
 8004e7e:	4630      	mov	r0, r6
 8004e80:	f012 fcaa 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e84:	682b      	ldr	r3, [r5, #0]
 8004e86:	4628      	mov	r0, r5
 8004e88:	691b      	ldr	r3, [r3, #16]
 8004e8a:	4798      	blx	r3
    newTransition->invalidate();
 8004e8c:	682b      	ldr	r3, [r5, #0]
 8004e8e:	4628      	mov	r0, r5
 8004e90:	695b      	ldr	r3, [r3, #20]
}
 8004e92:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e96:	4718      	bx	r3
    model->bind(newPresenter);
 8004e98:	4623      	mov	r3, r4
 8004e9a:	e7e2      	b.n	8004e62 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8004e9c:	0802c7b4 	.word	0x0802c7b4
 8004ea0:	0802cf51 	.word	0x0802cf51
 8004ea4:	0802c950 	.word	0x0802c950
 8004ea8:	0802c997 	.word	0x0802c997
 8004eac:	0802ca3a 	.word	0x0802ca3a
 8004eb0:	20012dfc 	.word	0x20012dfc
 8004eb4:	20012df8 	.word	0x20012df8

08004eb8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8004eb8:	6803      	ldr	r3, [r0, #0]
 8004eba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ebc:	4718      	bx	r3
	...

08004ec0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004ec0:	4b12      	ldr	r3, [pc, #72]	; (8004f0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004ec2:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004ec4:	6003      	str	r3, [r0, #0]
 8004ec6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004eca:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004ecc:	4b10      	ldr	r3, [pc, #64]	; (8004f10 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004ece:	7241      	strb	r1, [r0, #9]
 8004ed0:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004ed2:	4910      	ldr	r1, [pc, #64]	; (8004f14 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004ed4:	4b10      	ldr	r3, [pc, #64]	; (8004f18 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004ed6:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004eda:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004ede:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004ee0:	2200      	movs	r2, #0
 8004ee2:	6042      	str	r2, [r0, #4]
 8004ee4:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004ee6:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004ee8:	81c2      	strh	r2, [r0, #14]
          solid()
 8004eea:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004eee:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004ef2:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004ef6:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004efa:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004efc:	9100      	str	r1, [sp, #0]
 8004efe:	3010      	adds	r0, #16
 8004f00:	4611      	mov	r1, r2
 8004f02:	f7fe f85d 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004f06:	4620      	mov	r0, r4
 8004f08:	b002      	add	sp, #8
 8004f0a:	bd10      	pop	{r4, pc}
 8004f0c:	0802de7c 	.word	0x0802de7c
 8004f10:	0802dd84 	.word	0x0802dd84
 8004f14:	20012daa 	.word	0x20012daa
 8004f18:	20012da8 	.word	0x20012da8

08004f1c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8004f1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004f20:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004f24:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004f26:	68a0      	ldr	r0, [r4, #8]
 8004f28:	6803      	ldr	r3, [r0, #0]
 8004f2a:	6a1b      	ldr	r3, [r3, #32]
 8004f2c:	4798      	blx	r3
 8004f2e:	f241 03af 	movw	r3, #4271	; 0x10af
 8004f32:	4298      	cmp	r0, r3
 8004f34:	d805      	bhi.n	8004f42 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8004f36:	4b42      	ldr	r3, [pc, #264]	; (8005040 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8004f38:	4a42      	ldr	r2, [pc, #264]	; (8005044 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004f3a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004f3c:	4842      	ldr	r0, [pc, #264]	; (8005048 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8004f3e:	f025 fd7d 	bl	802aa3c <__assert_func>
 8004f42:	6860      	ldr	r0, [r4, #4]
 8004f44:	6803      	ldr	r3, [r0, #0]
 8004f46:	6a1b      	ldr	r3, [r3, #32]
 8004f48:	4798      	blx	r3
 8004f4a:	280f      	cmp	r0, #15
 8004f4c:	d803      	bhi.n	8004f56 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8004f4e:	4b3f      	ldr	r3, [pc, #252]	; (800504c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004f50:	4a3c      	ldr	r2, [pc, #240]	; (8005044 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004f52:	21a4      	movs	r1, #164	; 0xa4
 8004f54:	e7f2      	b.n	8004f3c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004f56:	68e0      	ldr	r0, [r4, #12]
 8004f58:	6803      	ldr	r3, [r0, #0]
 8004f5a:	6a1b      	ldr	r3, [r3, #32]
 8004f5c:	4798      	blx	r3
 8004f5e:	2837      	cmp	r0, #55	; 0x37
 8004f60:	d803      	bhi.n	8004f6a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8004f62:	4b3b      	ldr	r3, [pc, #236]	; (8005050 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8004f64:	4a37      	ldr	r2, [pc, #220]	; (8005044 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004f66:	21a5      	movs	r1, #165	; 0xa5
 8004f68:	e7e8      	b.n	8004f3c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004f6a:	f010 fe09 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004f6e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005054 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8004f72:	3004      	adds	r0, #4
 8004f74:	f010 fe6a 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004f78:	f8d9 0000 	ldr.w	r0, [r9]
 8004f7c:	b110      	cbz	r0, 8004f84 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004f7e:	6803      	ldr	r3, [r0, #0]
 8004f80:	68db      	ldr	r3, [r3, #12]
 8004f82:	4798      	blx	r3
    if (*currentTrans)
 8004f84:	f8d9 0000 	ldr.w	r0, [r9]
 8004f88:	b110      	cbz	r0, 8004f90 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004f8a:	6803      	ldr	r3, [r0, #0]
 8004f8c:	681b      	ldr	r3, [r3, #0]
 8004f8e:	4798      	blx	r3
    if (*currentScreen)
 8004f90:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005058 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8004f94:	f8d8 0000 	ldr.w	r0, [r8]
 8004f98:	b110      	cbz	r0, 8004fa0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004f9a:	6803      	ldr	r3, [r0, #0]
 8004f9c:	695b      	ldr	r3, [r3, #20]
 8004f9e:	4798      	blx	r3
    if (*currentPresenter)
 8004fa0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004fa4:	b110      	cbz	r0, 8004fac <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004fa6:	6803      	ldr	r3, [r0, #0]
 8004fa8:	685b      	ldr	r3, [r3, #4]
 8004faa:	4798      	blx	r3
    if (*currentScreen)
 8004fac:	f8d8 0000 	ldr.w	r0, [r8]
 8004fb0:	b110      	cbz	r0, 8004fb8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004fb2:	6803      	ldr	r3, [r0, #0]
 8004fb4:	681b      	ldr	r3, [r3, #0]
 8004fb6:	4798      	blx	r3
    if (*currentPresenter)
 8004fb8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004fbc:	b110      	cbz	r0, 8004fc4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004fbe:	6803      	ldr	r3, [r0, #0]
 8004fc0:	689b      	ldr	r3, [r3, #8]
 8004fc2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004fc4:	68e0      	ldr	r0, [r4, #12]
 8004fc6:	2100      	movs	r1, #0
 8004fc8:	f7ff ff76 	bl	8004eb8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004fcc:	2114      	movs	r1, #20
 8004fce:	4605      	mov	r5, r0
 8004fd0:	f7ff ff76 	bl	8004ec0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004fd4:	68a0      	ldr	r0, [r4, #8]
 8004fd6:	6803      	ldr	r3, [r0, #0]
 8004fd8:	2100      	movs	r1, #0
 8004fda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004fdc:	4798      	blx	r3
 8004fde:	4606      	mov	r6, r0
 8004fe0:	f004 fccc 	bl	800997c <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004fe4:	6860      	ldr	r0, [r4, #4]
 8004fe6:	6803      	ldr	r3, [r0, #0]
 8004fe8:	2100      	movs	r1, #0
 8004fea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004fec:	4798      	blx	r3
 8004fee:	4631      	mov	r1, r6
 8004ff0:	4604      	mov	r4, r0
 8004ff2:	f004 fc9d 	bl	8009930 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8004ff6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004ffa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004ffe:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005002:	b1dc      	cbz	r4, 800503c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8005004:	1d23      	adds	r3, r4, #4
 8005006:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800500a:	6833      	ldr	r3, [r6, #0]
 800500c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005010:	4630      	mov	r0, r6
 8005012:	68db      	ldr	r3, [r3, #12]
 8005014:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005016:	4798      	blx	r3
    newPresenter->activate();
 8005018:	6823      	ldr	r3, [r4, #0]
 800501a:	4620      	mov	r0, r4
 800501c:	681b      	ldr	r3, [r3, #0]
 800501e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005020:	4629      	mov	r1, r5
 8005022:	4630      	mov	r0, r6
 8005024:	f012 fbd8 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005028:	682b      	ldr	r3, [r5, #0]
 800502a:	4628      	mov	r0, r5
 800502c:	691b      	ldr	r3, [r3, #16]
 800502e:	4798      	blx	r3
    newTransition->invalidate();
 8005030:	682b      	ldr	r3, [r5, #0]
 8005032:	4628      	mov	r0, r5
 8005034:	695b      	ldr	r3, [r3, #20]
}
 8005036:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800503a:	4718      	bx	r3
    model->bind(newPresenter);
 800503c:	4623      	mov	r3, r4
 800503e:	e7e2      	b.n	8005006 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8005040:	0802c7b4 	.word	0x0802c7b4
 8005044:	0802d06b 	.word	0x0802d06b
 8005048:	0802c950 	.word	0x0802c950
 800504c:	0802c997 	.word	0x0802c997
 8005050:	0802ca3a 	.word	0x0802ca3a
 8005054:	20012dfc 	.word	0x20012dfc
 8005058:	20012df8 	.word	0x20012df8

0800505c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 800505c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005060:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005064:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005066:	68a0      	ldr	r0, [r4, #8]
 8005068:	6803      	ldr	r3, [r0, #0]
 800506a:	6a1b      	ldr	r3, [r3, #32]
 800506c:	4798      	blx	r3
 800506e:	f5b0 5f8f 	cmp.w	r0, #4576	; 0x11e0
 8005072:	d205      	bcs.n	8005080 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x24>
 8005074:	4b42      	ldr	r3, [pc, #264]	; (8005180 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 8005076:	4a43      	ldr	r2, [pc, #268]	; (8005184 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8005078:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800507a:	4843      	ldr	r0, [pc, #268]	; (8005188 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 800507c:	f025 fcde 	bl	802aa3c <__assert_func>
 8005080:	6860      	ldr	r0, [r4, #4]
 8005082:	6803      	ldr	r3, [r0, #0]
 8005084:	6a1b      	ldr	r3, [r3, #32]
 8005086:	4798      	blx	r3
 8005088:	280f      	cmp	r0, #15
 800508a:	d803      	bhi.n	8005094 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x38>
 800508c:	4b3f      	ldr	r3, [pc, #252]	; (800518c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 800508e:	4a3d      	ldr	r2, [pc, #244]	; (8005184 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8005090:	21a4      	movs	r1, #164	; 0xa4
 8005092:	e7f2      	b.n	800507a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005094:	68e0      	ldr	r0, [r4, #12]
 8005096:	6803      	ldr	r3, [r0, #0]
 8005098:	6a1b      	ldr	r3, [r3, #32]
 800509a:	4798      	blx	r3
 800509c:	2837      	cmp	r0, #55	; 0x37
 800509e:	d803      	bhi.n	80050a8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4c>
 80050a0:	4b3b      	ldr	r3, [pc, #236]	; (8005190 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 80050a2:	4a38      	ldr	r2, [pc, #224]	; (8005184 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80050a4:	21a5      	movs	r1, #165	; 0xa5
 80050a6:	e7e8      	b.n	800507a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80050a8:	f010 fd6a 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80050ac:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005194 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 80050b0:	3004      	adds	r0, #4
 80050b2:	f010 fdcb 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80050b6:	f8d9 0000 	ldr.w	r0, [r9]
 80050ba:	b110      	cbz	r0, 80050c2 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80050bc:	6803      	ldr	r3, [r0, #0]
 80050be:	68db      	ldr	r3, [r3, #12]
 80050c0:	4798      	blx	r3
    if (*currentTrans)
 80050c2:	f8d9 0000 	ldr.w	r0, [r9]
 80050c6:	b110      	cbz	r0, 80050ce <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80050c8:	6803      	ldr	r3, [r0, #0]
 80050ca:	681b      	ldr	r3, [r3, #0]
 80050cc:	4798      	blx	r3
    if (*currentScreen)
 80050ce:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005198 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 80050d2:	f8d8 0000 	ldr.w	r0, [r8]
 80050d6:	b110      	cbz	r0, 80050de <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80050d8:	6803      	ldr	r3, [r0, #0]
 80050da:	695b      	ldr	r3, [r3, #20]
 80050dc:	4798      	blx	r3
    if (*currentPresenter)
 80050de:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80050e2:	b110      	cbz	r0, 80050ea <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80050e4:	6803      	ldr	r3, [r0, #0]
 80050e6:	685b      	ldr	r3, [r3, #4]
 80050e8:	4798      	blx	r3
    if (*currentScreen)
 80050ea:	f8d8 0000 	ldr.w	r0, [r8]
 80050ee:	b110      	cbz	r0, 80050f6 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80050f0:	6803      	ldr	r3, [r0, #0]
 80050f2:	681b      	ldr	r3, [r3, #0]
 80050f4:	4798      	blx	r3
    if (*currentPresenter)
 80050f6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80050fa:	b110      	cbz	r0, 8005102 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80050fc:	6803      	ldr	r3, [r0, #0]
 80050fe:	689b      	ldr	r3, [r3, #8]
 8005100:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005102:	68e0      	ldr	r0, [r4, #12]
 8005104:	2100      	movs	r1, #0
 8005106:	f7ff fed7 	bl	8004eb8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800510a:	2114      	movs	r1, #20
 800510c:	4605      	mov	r5, r0
 800510e:	f7ff fed7 	bl	8004ec0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005112:	68a0      	ldr	r0, [r4, #8]
 8005114:	6803      	ldr	r3, [r0, #0]
 8005116:	2100      	movs	r1, #0
 8005118:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800511a:	4798      	blx	r3
 800511c:	4606      	mov	r6, r0
 800511e:	f003 ffe1 	bl	80090e4 <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005122:	6860      	ldr	r0, [r4, #4]
 8005124:	6803      	ldr	r3, [r0, #0]
 8005126:	2100      	movs	r1, #0
 8005128:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800512a:	4798      	blx	r3
 800512c:	4631      	mov	r1, r6
 800512e:	4604      	mov	r4, r0
 8005130:	f003 ffb2 	bl	8009098 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 8005134:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005138:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800513c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005140:	b1dc      	cbz	r4, 800517a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x11e>
 8005142:	1d23      	adds	r3, r4, #4
 8005144:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005148:	6833      	ldr	r3, [r6, #0]
 800514a:	f8c4 a008 	str.w	sl, [r4, #8]
 800514e:	4630      	mov	r0, r6
 8005150:	68db      	ldr	r3, [r3, #12]
 8005152:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005154:	4798      	blx	r3
    newPresenter->activate();
 8005156:	6823      	ldr	r3, [r4, #0]
 8005158:	4620      	mov	r0, r4
 800515a:	681b      	ldr	r3, [r3, #0]
 800515c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800515e:	4629      	mov	r1, r5
 8005160:	4630      	mov	r0, r6
 8005162:	f012 fb39 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005166:	682b      	ldr	r3, [r5, #0]
 8005168:	4628      	mov	r0, r5
 800516a:	691b      	ldr	r3, [r3, #16]
 800516c:	4798      	blx	r3
    newTransition->invalidate();
 800516e:	682b      	ldr	r3, [r5, #0]
 8005170:	4628      	mov	r0, r5
 8005172:	695b      	ldr	r3, [r3, #20]
}
 8005174:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005178:	4718      	bx	r3
    model->bind(newPresenter);
 800517a:	4623      	mov	r3, r4
 800517c:	e7e2      	b.n	8005144 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xe8>
 800517e:	bf00      	nop
 8005180:	0802c7b4 	.word	0x0802c7b4
 8005184:	0802d18b 	.word	0x0802d18b
 8005188:	0802c950 	.word	0x0802c950
 800518c:	0802c997 	.word	0x0802c997
 8005190:	0802ca3a 	.word	0x0802ca3a
 8005194:	20012dfc 	.word	0x20012dfc
 8005198:	20012df8 	.word	0x20012df8

0800519c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 800519c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80051a0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80051a4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80051a6:	68a0      	ldr	r0, [r4, #8]
 80051a8:	6803      	ldr	r3, [r0, #0]
 80051aa:	6a1b      	ldr	r3, [r3, #32]
 80051ac:	4798      	blx	r3
 80051ae:	f5b0 5f8f 	cmp.w	r0, #4576	; 0x11e0
 80051b2:	d205      	bcs.n	80051c0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x24>
 80051b4:	4b42      	ldr	r3, [pc, #264]	; (80052c0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 80051b6:	4a43      	ldr	r2, [pc, #268]	; (80052c4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80051b8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80051ba:	4843      	ldr	r0, [pc, #268]	; (80052c8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 80051bc:	f025 fc3e 	bl	802aa3c <__assert_func>
 80051c0:	6860      	ldr	r0, [r4, #4]
 80051c2:	6803      	ldr	r3, [r0, #0]
 80051c4:	6a1b      	ldr	r3, [r3, #32]
 80051c6:	4798      	blx	r3
 80051c8:	280f      	cmp	r0, #15
 80051ca:	d803      	bhi.n	80051d4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x38>
 80051cc:	4b3f      	ldr	r3, [pc, #252]	; (80052cc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 80051ce:	4a3d      	ldr	r2, [pc, #244]	; (80052c4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80051d0:	21a4      	movs	r1, #164	; 0xa4
 80051d2:	e7f2      	b.n	80051ba <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80051d4:	68e0      	ldr	r0, [r4, #12]
 80051d6:	6803      	ldr	r3, [r0, #0]
 80051d8:	6a1b      	ldr	r3, [r3, #32]
 80051da:	4798      	blx	r3
 80051dc:	2837      	cmp	r0, #55	; 0x37
 80051de:	d803      	bhi.n	80051e8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4c>
 80051e0:	4b3b      	ldr	r3, [pc, #236]	; (80052d0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 80051e2:	4a38      	ldr	r2, [pc, #224]	; (80052c4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80051e4:	21a5      	movs	r1, #165	; 0xa5
 80051e6:	e7e8      	b.n	80051ba <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80051e8:	f010 fcca 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80051ec:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80052d4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 80051f0:	3004      	adds	r0, #4
 80051f2:	f010 fd2b 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80051f6:	f8d9 0000 	ldr.w	r0, [r9]
 80051fa:	b110      	cbz	r0, 8005202 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80051fc:	6803      	ldr	r3, [r0, #0]
 80051fe:	68db      	ldr	r3, [r3, #12]
 8005200:	4798      	blx	r3
    if (*currentTrans)
 8005202:	f8d9 0000 	ldr.w	r0, [r9]
 8005206:	b110      	cbz	r0, 800520e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005208:	6803      	ldr	r3, [r0, #0]
 800520a:	681b      	ldr	r3, [r3, #0]
 800520c:	4798      	blx	r3
    if (*currentScreen)
 800520e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80052d8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8005212:	f8d8 0000 	ldr.w	r0, [r8]
 8005216:	b110      	cbz	r0, 800521e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005218:	6803      	ldr	r3, [r0, #0]
 800521a:	695b      	ldr	r3, [r3, #20]
 800521c:	4798      	blx	r3
    if (*currentPresenter)
 800521e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005222:	b110      	cbz	r0, 800522a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005224:	6803      	ldr	r3, [r0, #0]
 8005226:	685b      	ldr	r3, [r3, #4]
 8005228:	4798      	blx	r3
    if (*currentScreen)
 800522a:	f8d8 0000 	ldr.w	r0, [r8]
 800522e:	b110      	cbz	r0, 8005236 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005230:	6803      	ldr	r3, [r0, #0]
 8005232:	681b      	ldr	r3, [r3, #0]
 8005234:	4798      	blx	r3
    if (*currentPresenter)
 8005236:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800523a:	b110      	cbz	r0, 8005242 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800523c:	6803      	ldr	r3, [r0, #0]
 800523e:	689b      	ldr	r3, [r3, #8]
 8005240:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005242:	68e0      	ldr	r0, [r4, #12]
 8005244:	2100      	movs	r1, #0
 8005246:	f7ff fe37 	bl	8004eb8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800524a:	2114      	movs	r1, #20
 800524c:	4605      	mov	r5, r0
 800524e:	f7ff fe37 	bl	8004ec0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005252:	68a0      	ldr	r0, [r4, #8]
 8005254:	6803      	ldr	r3, [r0, #0]
 8005256:	2100      	movs	r1, #0
 8005258:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800525a:	4798      	blx	r3
 800525c:	4606      	mov	r6, r0
 800525e:	f003 ffcf 	bl	8009200 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005262:	6860      	ldr	r0, [r4, #4]
 8005264:	6803      	ldr	r3, [r0, #0]
 8005266:	2100      	movs	r1, #0
 8005268:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800526a:	4798      	blx	r3
 800526c:	4631      	mov	r1, r6
 800526e:	4604      	mov	r4, r0
 8005270:	f003 ffa0 	bl	80091b4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8005274:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005278:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800527c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005280:	b1dc      	cbz	r4, 80052ba <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x11e>
 8005282:	1d23      	adds	r3, r4, #4
 8005284:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005288:	6833      	ldr	r3, [r6, #0]
 800528a:	f8c4 a008 	str.w	sl, [r4, #8]
 800528e:	4630      	mov	r0, r6
 8005290:	68db      	ldr	r3, [r3, #12]
 8005292:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005294:	4798      	blx	r3
    newPresenter->activate();
 8005296:	6823      	ldr	r3, [r4, #0]
 8005298:	4620      	mov	r0, r4
 800529a:	681b      	ldr	r3, [r3, #0]
 800529c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800529e:	4629      	mov	r1, r5
 80052a0:	4630      	mov	r0, r6
 80052a2:	f012 fa99 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80052a6:	682b      	ldr	r3, [r5, #0]
 80052a8:	4628      	mov	r0, r5
 80052aa:	691b      	ldr	r3, [r3, #16]
 80052ac:	4798      	blx	r3
    newTransition->invalidate();
 80052ae:	682b      	ldr	r3, [r5, #0]
 80052b0:	4628      	mov	r0, r5
 80052b2:	695b      	ldr	r3, [r3, #20]
}
 80052b4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80052b8:	4718      	bx	r3
    model->bind(newPresenter);
 80052ba:	4623      	mov	r3, r4
 80052bc:	e7e2      	b.n	8005284 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xe8>
 80052be:	bf00      	nop
 80052c0:	0802c7b4 	.word	0x0802c7b4
 80052c4:	0802d2b3 	.word	0x0802d2b3
 80052c8:	0802c950 	.word	0x0802c950
 80052cc:	0802c997 	.word	0x0802c997
 80052d0:	0802ca3a 	.word	0x0802ca3a
 80052d4:	20012dfc 	.word	0x20012dfc
 80052d8:	20012df8 	.word	0x20012df8

080052dc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 80052dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80052e0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80052e4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80052e6:	68a0      	ldr	r0, [r4, #8]
 80052e8:	6803      	ldr	r3, [r0, #0]
 80052ea:	6a1b      	ldr	r3, [r3, #32]
 80052ec:	4798      	blx	r3
 80052ee:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80052f2:	d205      	bcs.n	8005300 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 80052f4:	4b42      	ldr	r3, [pc, #264]	; (8005400 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 80052f6:	4a43      	ldr	r2, [pc, #268]	; (8005404 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80052f8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80052fa:	4843      	ldr	r0, [pc, #268]	; (8005408 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 80052fc:	f025 fb9e 	bl	802aa3c <__assert_func>
 8005300:	6860      	ldr	r0, [r4, #4]
 8005302:	6803      	ldr	r3, [r0, #0]
 8005304:	6a1b      	ldr	r3, [r3, #32]
 8005306:	4798      	blx	r3
 8005308:	280f      	cmp	r0, #15
 800530a:	d803      	bhi.n	8005314 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 800530c:	4b3f      	ldr	r3, [pc, #252]	; (800540c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 800530e:	4a3d      	ldr	r2, [pc, #244]	; (8005404 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8005310:	21a4      	movs	r1, #164	; 0xa4
 8005312:	e7f2      	b.n	80052fa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005314:	68e0      	ldr	r0, [r4, #12]
 8005316:	6803      	ldr	r3, [r0, #0]
 8005318:	6a1b      	ldr	r3, [r3, #32]
 800531a:	4798      	blx	r3
 800531c:	2837      	cmp	r0, #55	; 0x37
 800531e:	d803      	bhi.n	8005328 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8005320:	4b3b      	ldr	r3, [pc, #236]	; (8005410 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 8005322:	4a38      	ldr	r2, [pc, #224]	; (8005404 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8005324:	21a5      	movs	r1, #165	; 0xa5
 8005326:	e7e8      	b.n	80052fa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005328:	f010 fc2a 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800532c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005414 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8005330:	3004      	adds	r0, #4
 8005332:	f010 fc8b 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005336:	f8d9 0000 	ldr.w	r0, [r9]
 800533a:	b110      	cbz	r0, 8005342 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800533c:	6803      	ldr	r3, [r0, #0]
 800533e:	68db      	ldr	r3, [r3, #12]
 8005340:	4798      	blx	r3
    if (*currentTrans)
 8005342:	f8d9 0000 	ldr.w	r0, [r9]
 8005346:	b110      	cbz	r0, 800534e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005348:	6803      	ldr	r3, [r0, #0]
 800534a:	681b      	ldr	r3, [r3, #0]
 800534c:	4798      	blx	r3
    if (*currentScreen)
 800534e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005418 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 8005352:	f8d8 0000 	ldr.w	r0, [r8]
 8005356:	b110      	cbz	r0, 800535e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005358:	6803      	ldr	r3, [r0, #0]
 800535a:	695b      	ldr	r3, [r3, #20]
 800535c:	4798      	blx	r3
    if (*currentPresenter)
 800535e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005362:	b110      	cbz	r0, 800536a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005364:	6803      	ldr	r3, [r0, #0]
 8005366:	685b      	ldr	r3, [r3, #4]
 8005368:	4798      	blx	r3
    if (*currentScreen)
 800536a:	f8d8 0000 	ldr.w	r0, [r8]
 800536e:	b110      	cbz	r0, 8005376 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005370:	6803      	ldr	r3, [r0, #0]
 8005372:	681b      	ldr	r3, [r3, #0]
 8005374:	4798      	blx	r3
    if (*currentPresenter)
 8005376:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800537a:	b110      	cbz	r0, 8005382 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800537c:	6803      	ldr	r3, [r0, #0]
 800537e:	689b      	ldr	r3, [r3, #8]
 8005380:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005382:	68e0      	ldr	r0, [r4, #12]
 8005384:	2100      	movs	r1, #0
 8005386:	f7ff fd97 	bl	8004eb8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800538a:	2114      	movs	r1, #20
 800538c:	4605      	mov	r5, r0
 800538e:	f7ff fd97 	bl	8004ec0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005392:	68a0      	ldr	r0, [r4, #8]
 8005394:	6803      	ldr	r3, [r0, #0]
 8005396:	2100      	movs	r1, #0
 8005398:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800539a:	4798      	blx	r3
 800539c:	4606      	mov	r6, r0
 800539e:	f003 fe47 	bl	8009030 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80053a2:	6860      	ldr	r0, [r4, #4]
 80053a4:	6803      	ldr	r3, [r0, #0]
 80053a6:	2100      	movs	r1, #0
 80053a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053aa:	4798      	blx	r3
 80053ac:	4631      	mov	r1, r6
 80053ae:	4604      	mov	r4, r0
 80053b0:	f003 fe18 	bl	8008fe4 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 80053b4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80053b8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80053bc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80053c0:	b1dc      	cbz	r4, 80053fa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 80053c2:	1d23      	adds	r3, r4, #4
 80053c4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80053c8:	6833      	ldr	r3, [r6, #0]
 80053ca:	f8c4 a008 	str.w	sl, [r4, #8]
 80053ce:	4630      	mov	r0, r6
 80053d0:	68db      	ldr	r3, [r3, #12]
 80053d2:	63f4      	str	r4, [r6, #60]	; 0x3c
 80053d4:	4798      	blx	r3
    newPresenter->activate();
 80053d6:	6823      	ldr	r3, [r4, #0]
 80053d8:	4620      	mov	r0, r4
 80053da:	681b      	ldr	r3, [r3, #0]
 80053dc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80053de:	4629      	mov	r1, r5
 80053e0:	4630      	mov	r0, r6
 80053e2:	f012 f9f9 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80053e6:	682b      	ldr	r3, [r5, #0]
 80053e8:	4628      	mov	r0, r5
 80053ea:	691b      	ldr	r3, [r3, #16]
 80053ec:	4798      	blx	r3
    newTransition->invalidate();
 80053ee:	682b      	ldr	r3, [r5, #0]
 80053f0:	4628      	mov	r0, r5
 80053f2:	695b      	ldr	r3, [r3, #20]
}
 80053f4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80053f8:	4718      	bx	r3
    model->bind(newPresenter);
 80053fa:	4623      	mov	r3, r4
 80053fc:	e7e2      	b.n	80053c4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 80053fe:	bf00      	nop
 8005400:	0802c7b4 	.word	0x0802c7b4
 8005404:	0802d3d9 	.word	0x0802d3d9
 8005408:	0802c950 	.word	0x0802c950
 800540c:	0802c997 	.word	0x0802c997
 8005410:	0802ca3a 	.word	0x0802ca3a
 8005414:	20012dfc 	.word	0x20012dfc
 8005418:	20012df8 	.word	0x20012df8

0800541c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 800541c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005420:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005424:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005426:	68a0      	ldr	r0, [r4, #8]
 8005428:	6803      	ldr	r3, [r0, #0]
 800542a:	6a1b      	ldr	r3, [r3, #32]
 800542c:	4798      	blx	r3
 800542e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8005432:	4298      	cmp	r0, r3
 8005434:	d805      	bhi.n	8005442 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8005436:	4b42      	ldr	r3, [pc, #264]	; (8005540 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8005438:	4a42      	ldr	r2, [pc, #264]	; (8005544 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800543a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800543c:	4842      	ldr	r0, [pc, #264]	; (8005548 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 800543e:	f025 fafd 	bl	802aa3c <__assert_func>
 8005442:	6860      	ldr	r0, [r4, #4]
 8005444:	6803      	ldr	r3, [r0, #0]
 8005446:	6a1b      	ldr	r3, [r3, #32]
 8005448:	4798      	blx	r3
 800544a:	280f      	cmp	r0, #15
 800544c:	d803      	bhi.n	8005456 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 800544e:	4b3f      	ldr	r3, [pc, #252]	; (800554c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8005450:	4a3c      	ldr	r2, [pc, #240]	; (8005544 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005452:	21a4      	movs	r1, #164	; 0xa4
 8005454:	e7f2      	b.n	800543c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005456:	68e0      	ldr	r0, [r4, #12]
 8005458:	6803      	ldr	r3, [r0, #0]
 800545a:	6a1b      	ldr	r3, [r3, #32]
 800545c:	4798      	blx	r3
 800545e:	2837      	cmp	r0, #55	; 0x37
 8005460:	d803      	bhi.n	800546a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8005462:	4b3b      	ldr	r3, [pc, #236]	; (8005550 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8005464:	4a37      	ldr	r2, [pc, #220]	; (8005544 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005466:	21a5      	movs	r1, #165	; 0xa5
 8005468:	e7e8      	b.n	800543c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800546a:	f010 fb89 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800546e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005554 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8005472:	3004      	adds	r0, #4
 8005474:	f010 fbea 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005478:	f8d9 0000 	ldr.w	r0, [r9]
 800547c:	b110      	cbz	r0, 8005484 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800547e:	6803      	ldr	r3, [r0, #0]
 8005480:	68db      	ldr	r3, [r3, #12]
 8005482:	4798      	blx	r3
    if (*currentTrans)
 8005484:	f8d9 0000 	ldr.w	r0, [r9]
 8005488:	b110      	cbz	r0, 8005490 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800548a:	6803      	ldr	r3, [r0, #0]
 800548c:	681b      	ldr	r3, [r3, #0]
 800548e:	4798      	blx	r3
    if (*currentScreen)
 8005490:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005558 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8005494:	f8d8 0000 	ldr.w	r0, [r8]
 8005498:	b110      	cbz	r0, 80054a0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800549a:	6803      	ldr	r3, [r0, #0]
 800549c:	695b      	ldr	r3, [r3, #20]
 800549e:	4798      	blx	r3
    if (*currentPresenter)
 80054a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80054a4:	b110      	cbz	r0, 80054ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80054a6:	6803      	ldr	r3, [r0, #0]
 80054a8:	685b      	ldr	r3, [r3, #4]
 80054aa:	4798      	blx	r3
    if (*currentScreen)
 80054ac:	f8d8 0000 	ldr.w	r0, [r8]
 80054b0:	b110      	cbz	r0, 80054b8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80054b2:	6803      	ldr	r3, [r0, #0]
 80054b4:	681b      	ldr	r3, [r3, #0]
 80054b6:	4798      	blx	r3
    if (*currentPresenter)
 80054b8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80054bc:	b110      	cbz	r0, 80054c4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80054be:	6803      	ldr	r3, [r0, #0]
 80054c0:	689b      	ldr	r3, [r3, #8]
 80054c2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80054c4:	68e0      	ldr	r0, [r4, #12]
 80054c6:	2100      	movs	r1, #0
 80054c8:	f7ff fcf6 	bl	8004eb8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80054cc:	2114      	movs	r1, #20
 80054ce:	4605      	mov	r5, r0
 80054d0:	f7ff fcf6 	bl	8004ec0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80054d4:	68a0      	ldr	r0, [r4, #8]
 80054d6:	6803      	ldr	r3, [r0, #0]
 80054d8:	2100      	movs	r1, #0
 80054da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054dc:	4798      	blx	r3
 80054de:	4606      	mov	r6, r0
 80054e0:	f004 f8bc 	bl	800965c <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80054e4:	6860      	ldr	r0, [r4, #4]
 80054e6:	6803      	ldr	r3, [r0, #0]
 80054e8:	2100      	movs	r1, #0
 80054ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054ec:	4798      	blx	r3
 80054ee:	4631      	mov	r1, r6
 80054f0:	4604      	mov	r4, r0
 80054f2:	f004 f88d 	bl	8009610 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 80054f6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80054fa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80054fe:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005502:	b1dc      	cbz	r4, 800553c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8005504:	1d23      	adds	r3, r4, #4
 8005506:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800550a:	6833      	ldr	r3, [r6, #0]
 800550c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005510:	4630      	mov	r0, r6
 8005512:	68db      	ldr	r3, [r3, #12]
 8005514:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005516:	4798      	blx	r3
    newPresenter->activate();
 8005518:	6823      	ldr	r3, [r4, #0]
 800551a:	4620      	mov	r0, r4
 800551c:	681b      	ldr	r3, [r3, #0]
 800551e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005520:	4629      	mov	r1, r5
 8005522:	4630      	mov	r0, r6
 8005524:	f012 f958 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005528:	682b      	ldr	r3, [r5, #0]
 800552a:	4628      	mov	r0, r5
 800552c:	691b      	ldr	r3, [r3, #16]
 800552e:	4798      	blx	r3
    newTransition->invalidate();
 8005530:	682b      	ldr	r3, [r5, #0]
 8005532:	4628      	mov	r0, r5
 8005534:	695b      	ldr	r3, [r3, #20]
}
 8005536:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800553a:	4718      	bx	r3
    model->bind(newPresenter);
 800553c:	4623      	mov	r3, r4
 800553e:	e7e2      	b.n	8005506 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8005540:	0802c7b4 	.word	0x0802c7b4
 8005544:	0802d4f7 	.word	0x0802d4f7
 8005548:	0802c950 	.word	0x0802c950
 800554c:	0802c997 	.word	0x0802c997
 8005550:	0802ca3a 	.word	0x0802ca3a
 8005554:	20012dfc 	.word	0x20012dfc
 8005558:	20012df8 	.word	0x20012df8

0800555c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 800555c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005560:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005564:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005566:	68a0      	ldr	r0, [r4, #8]
 8005568:	6803      	ldr	r3, [r0, #0]
 800556a:	6a1b      	ldr	r3, [r3, #32]
 800556c:	4798      	blx	r3
 800556e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8005572:	4298      	cmp	r0, r3
 8005574:	d805      	bhi.n	8005582 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8005576:	4b42      	ldr	r3, [pc, #264]	; (8005680 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8005578:	4a42      	ldr	r2, [pc, #264]	; (8005684 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800557a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800557c:	4842      	ldr	r0, [pc, #264]	; (8005688 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 800557e:	f025 fa5d 	bl	802aa3c <__assert_func>
 8005582:	6860      	ldr	r0, [r4, #4]
 8005584:	6803      	ldr	r3, [r0, #0]
 8005586:	6a1b      	ldr	r3, [r3, #32]
 8005588:	4798      	blx	r3
 800558a:	280f      	cmp	r0, #15
 800558c:	d803      	bhi.n	8005596 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 800558e:	4b3f      	ldr	r3, [pc, #252]	; (800568c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8005590:	4a3c      	ldr	r2, [pc, #240]	; (8005684 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005592:	21a4      	movs	r1, #164	; 0xa4
 8005594:	e7f2      	b.n	800557c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005596:	68e0      	ldr	r0, [r4, #12]
 8005598:	6803      	ldr	r3, [r0, #0]
 800559a:	6a1b      	ldr	r3, [r3, #32]
 800559c:	4798      	blx	r3
 800559e:	2837      	cmp	r0, #55	; 0x37
 80055a0:	d803      	bhi.n	80055aa <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80055a2:	4b3b      	ldr	r3, [pc, #236]	; (8005690 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80055a4:	4a37      	ldr	r2, [pc, #220]	; (8005684 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80055a6:	21a5      	movs	r1, #165	; 0xa5
 80055a8:	e7e8      	b.n	800557c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80055aa:	f010 fae9 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80055ae:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005694 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80055b2:	3004      	adds	r0, #4
 80055b4:	f010 fb4a 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80055b8:	f8d9 0000 	ldr.w	r0, [r9]
 80055bc:	b110      	cbz	r0, 80055c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80055be:	6803      	ldr	r3, [r0, #0]
 80055c0:	68db      	ldr	r3, [r3, #12]
 80055c2:	4798      	blx	r3
    if (*currentTrans)
 80055c4:	f8d9 0000 	ldr.w	r0, [r9]
 80055c8:	b110      	cbz	r0, 80055d0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80055ca:	6803      	ldr	r3, [r0, #0]
 80055cc:	681b      	ldr	r3, [r3, #0]
 80055ce:	4798      	blx	r3
    if (*currentScreen)
 80055d0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005698 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 80055d4:	f8d8 0000 	ldr.w	r0, [r8]
 80055d8:	b110      	cbz	r0, 80055e0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80055da:	6803      	ldr	r3, [r0, #0]
 80055dc:	695b      	ldr	r3, [r3, #20]
 80055de:	4798      	blx	r3
    if (*currentPresenter)
 80055e0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80055e4:	b110      	cbz	r0, 80055ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80055e6:	6803      	ldr	r3, [r0, #0]
 80055e8:	685b      	ldr	r3, [r3, #4]
 80055ea:	4798      	blx	r3
    if (*currentScreen)
 80055ec:	f8d8 0000 	ldr.w	r0, [r8]
 80055f0:	b110      	cbz	r0, 80055f8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80055f2:	6803      	ldr	r3, [r0, #0]
 80055f4:	681b      	ldr	r3, [r3, #0]
 80055f6:	4798      	blx	r3
    if (*currentPresenter)
 80055f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80055fc:	b110      	cbz	r0, 8005604 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80055fe:	6803      	ldr	r3, [r0, #0]
 8005600:	689b      	ldr	r3, [r3, #8]
 8005602:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005604:	68e0      	ldr	r0, [r4, #12]
 8005606:	2100      	movs	r1, #0
 8005608:	f7ff fc56 	bl	8004eb8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800560c:	2114      	movs	r1, #20
 800560e:	4605      	mov	r5, r0
 8005610:	f7ff fc56 	bl	8004ec0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005614:	68a0      	ldr	r0, [r4, #8]
 8005616:	6803      	ldr	r3, [r0, #0]
 8005618:	2100      	movs	r1, #0
 800561a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800561c:	4798      	blx	r3
 800561e:	4606      	mov	r6, r0
 8005620:	f003 ffda 	bl	80095d8 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005624:	6860      	ldr	r0, [r4, #4]
 8005626:	6803      	ldr	r3, [r0, #0]
 8005628:	2100      	movs	r1, #0
 800562a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800562c:	4798      	blx	r3
 800562e:	4631      	mov	r1, r6
 8005630:	4604      	mov	r4, r0
 8005632:	f003 ffab 	bl	800958c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8005636:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800563a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800563e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005642:	b1dc      	cbz	r4, 800567c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8005644:	1d23      	adds	r3, r4, #4
 8005646:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800564a:	6833      	ldr	r3, [r6, #0]
 800564c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005650:	4630      	mov	r0, r6
 8005652:	68db      	ldr	r3, [r3, #12]
 8005654:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005656:	4798      	blx	r3
    newPresenter->activate();
 8005658:	6823      	ldr	r3, [r4, #0]
 800565a:	4620      	mov	r0, r4
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005660:	4629      	mov	r1, r5
 8005662:	4630      	mov	r0, r6
 8005664:	f012 f8b8 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005668:	682b      	ldr	r3, [r5, #0]
 800566a:	4628      	mov	r0, r5
 800566c:	691b      	ldr	r3, [r3, #16]
 800566e:	4798      	blx	r3
    newTransition->invalidate();
 8005670:	682b      	ldr	r3, [r5, #0]
 8005672:	4628      	mov	r0, r5
 8005674:	695b      	ldr	r3, [r3, #20]
}
 8005676:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800567a:	4718      	bx	r3
    model->bind(newPresenter);
 800567c:	4623      	mov	r3, r4
 800567e:	e7e2      	b.n	8005646 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8005680:	0802c7b4 	.word	0x0802c7b4
 8005684:	0802d63b 	.word	0x0802d63b
 8005688:	0802c950 	.word	0x0802c950
 800568c:	0802c997 	.word	0x0802c997
 8005690:	0802ca3a 	.word	0x0802ca3a
 8005694:	20012dfc 	.word	0x20012dfc
 8005698:	20012df8 	.word	0x20012df8

0800569c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 800569c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80056a0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80056a4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80056a6:	68a0      	ldr	r0, [r4, #8]
 80056a8:	6803      	ldr	r3, [r0, #0]
 80056aa:	6a1b      	ldr	r3, [r3, #32]
 80056ac:	4798      	blx	r3
 80056ae:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80056b2:	d205      	bcs.n	80056c0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80056b4:	4b42      	ldr	r3, [pc, #264]	; (80057c0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80056b6:	4a43      	ldr	r2, [pc, #268]	; (80057c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80056b8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80056ba:	4843      	ldr	r0, [pc, #268]	; (80057c8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80056bc:	f025 f9be 	bl	802aa3c <__assert_func>
 80056c0:	6860      	ldr	r0, [r4, #4]
 80056c2:	6803      	ldr	r3, [r0, #0]
 80056c4:	6a1b      	ldr	r3, [r3, #32]
 80056c6:	4798      	blx	r3
 80056c8:	280f      	cmp	r0, #15
 80056ca:	d803      	bhi.n	80056d4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 80056cc:	4b3f      	ldr	r3, [pc, #252]	; (80057cc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 80056ce:	4a3d      	ldr	r2, [pc, #244]	; (80057c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80056d0:	21a4      	movs	r1, #164	; 0xa4
 80056d2:	e7f2      	b.n	80056ba <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80056d4:	68e0      	ldr	r0, [r4, #12]
 80056d6:	6803      	ldr	r3, [r0, #0]
 80056d8:	6a1b      	ldr	r3, [r3, #32]
 80056da:	4798      	blx	r3
 80056dc:	2837      	cmp	r0, #55	; 0x37
 80056de:	d803      	bhi.n	80056e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 80056e0:	4b3b      	ldr	r3, [pc, #236]	; (80057d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 80056e2:	4a38      	ldr	r2, [pc, #224]	; (80057c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80056e4:	21a5      	movs	r1, #165	; 0xa5
 80056e6:	e7e8      	b.n	80056ba <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80056e8:	f010 fa4a 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80056ec:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80057d4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 80056f0:	3004      	adds	r0, #4
 80056f2:	f010 faab 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80056f6:	f8d9 0000 	ldr.w	r0, [r9]
 80056fa:	b110      	cbz	r0, 8005702 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80056fc:	6803      	ldr	r3, [r0, #0]
 80056fe:	68db      	ldr	r3, [r3, #12]
 8005700:	4798      	blx	r3
    if (*currentTrans)
 8005702:	f8d9 0000 	ldr.w	r0, [r9]
 8005706:	b110      	cbz	r0, 800570e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005708:	6803      	ldr	r3, [r0, #0]
 800570a:	681b      	ldr	r3, [r3, #0]
 800570c:	4798      	blx	r3
    if (*currentScreen)
 800570e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80057d8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8005712:	f8d8 0000 	ldr.w	r0, [r8]
 8005716:	b110      	cbz	r0, 800571e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005718:	6803      	ldr	r3, [r0, #0]
 800571a:	695b      	ldr	r3, [r3, #20]
 800571c:	4798      	blx	r3
    if (*currentPresenter)
 800571e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005722:	b110      	cbz	r0, 800572a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005724:	6803      	ldr	r3, [r0, #0]
 8005726:	685b      	ldr	r3, [r3, #4]
 8005728:	4798      	blx	r3
    if (*currentScreen)
 800572a:	f8d8 0000 	ldr.w	r0, [r8]
 800572e:	b110      	cbz	r0, 8005736 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005730:	6803      	ldr	r3, [r0, #0]
 8005732:	681b      	ldr	r3, [r3, #0]
 8005734:	4798      	blx	r3
    if (*currentPresenter)
 8005736:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800573a:	b110      	cbz	r0, 8005742 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800573c:	6803      	ldr	r3, [r0, #0]
 800573e:	689b      	ldr	r3, [r3, #8]
 8005740:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005742:	68e0      	ldr	r0, [r4, #12]
 8005744:	2100      	movs	r1, #0
 8005746:	f7ff fbb7 	bl	8004eb8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800574a:	2114      	movs	r1, #20
 800574c:	4605      	mov	r5, r0
 800574e:	f7ff fbb7 	bl	8004ec0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005752:	68a0      	ldr	r0, [r4, #8]
 8005754:	6803      	ldr	r3, [r0, #0]
 8005756:	2100      	movs	r1, #0
 8005758:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800575a:	4798      	blx	r3
 800575c:	4606      	mov	r6, r0
 800575e:	f003 fee1 	bl	8009524 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005762:	6860      	ldr	r0, [r4, #4]
 8005764:	6803      	ldr	r3, [r0, #0]
 8005766:	2100      	movs	r1, #0
 8005768:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800576a:	4798      	blx	r3
 800576c:	4631      	mov	r1, r6
 800576e:	4604      	mov	r4, r0
 8005770:	f003 feb2 	bl	80094d8 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8005774:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005778:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800577c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005780:	b1dc      	cbz	r4, 80057ba <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 8005782:	1d23      	adds	r3, r4, #4
 8005784:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005788:	6833      	ldr	r3, [r6, #0]
 800578a:	f8c4 a008 	str.w	sl, [r4, #8]
 800578e:	4630      	mov	r0, r6
 8005790:	68db      	ldr	r3, [r3, #12]
 8005792:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005794:	4798      	blx	r3
    newPresenter->activate();
 8005796:	6823      	ldr	r3, [r4, #0]
 8005798:	4620      	mov	r0, r4
 800579a:	681b      	ldr	r3, [r3, #0]
 800579c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800579e:	4629      	mov	r1, r5
 80057a0:	4630      	mov	r0, r6
 80057a2:	f012 f819 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80057a6:	682b      	ldr	r3, [r5, #0]
 80057a8:	4628      	mov	r0, r5
 80057aa:	691b      	ldr	r3, [r3, #16]
 80057ac:	4798      	blx	r3
    newTransition->invalidate();
 80057ae:	682b      	ldr	r3, [r5, #0]
 80057b0:	4628      	mov	r0, r5
 80057b2:	695b      	ldr	r3, [r3, #20]
}
 80057b4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80057b8:	4718      	bx	r3
    model->bind(newPresenter);
 80057ba:	4623      	mov	r3, r4
 80057bc:	e7e2      	b.n	8005784 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 80057be:	bf00      	nop
 80057c0:	0802c7b4 	.word	0x0802c7b4
 80057c4:	0802d77b 	.word	0x0802d77b
 80057c8:	0802c950 	.word	0x0802c950
 80057cc:	0802c997 	.word	0x0802c997
 80057d0:	0802ca3a 	.word	0x0802ca3a
 80057d4:	20012dfc 	.word	0x20012dfc
 80057d8:	20012df8 	.word	0x20012df8

080057dc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 80057dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80057e0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80057e4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80057e6:	68a0      	ldr	r0, [r4, #8]
 80057e8:	6803      	ldr	r3, [r0, #0]
 80057ea:	6a1b      	ldr	r3, [r3, #32]
 80057ec:	4798      	blx	r3
 80057ee:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80057f2:	4298      	cmp	r0, r3
 80057f4:	d805      	bhi.n	8005802 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 80057f6:	4b42      	ldr	r3, [pc, #264]	; (8005900 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 80057f8:	4a42      	ldr	r2, [pc, #264]	; (8005904 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80057fa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80057fc:	4842      	ldr	r0, [pc, #264]	; (8005908 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 80057fe:	f025 f91d 	bl	802aa3c <__assert_func>
 8005802:	6860      	ldr	r0, [r4, #4]
 8005804:	6803      	ldr	r3, [r0, #0]
 8005806:	6a1b      	ldr	r3, [r3, #32]
 8005808:	4798      	blx	r3
 800580a:	280f      	cmp	r0, #15
 800580c:	d803      	bhi.n	8005816 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 800580e:	4b3f      	ldr	r3, [pc, #252]	; (800590c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8005810:	4a3c      	ldr	r2, [pc, #240]	; (8005904 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005812:	21a4      	movs	r1, #164	; 0xa4
 8005814:	e7f2      	b.n	80057fc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005816:	68e0      	ldr	r0, [r4, #12]
 8005818:	6803      	ldr	r3, [r0, #0]
 800581a:	6a1b      	ldr	r3, [r3, #32]
 800581c:	4798      	blx	r3
 800581e:	2837      	cmp	r0, #55	; 0x37
 8005820:	d803      	bhi.n	800582a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8005822:	4b3b      	ldr	r3, [pc, #236]	; (8005910 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8005824:	4a37      	ldr	r2, [pc, #220]	; (8005904 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005826:	21a5      	movs	r1, #165	; 0xa5
 8005828:	e7e8      	b.n	80057fc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800582a:	f010 f9a9 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800582e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005914 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8005832:	3004      	adds	r0, #4
 8005834:	f010 fa0a 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005838:	f8d9 0000 	ldr.w	r0, [r9]
 800583c:	b110      	cbz	r0, 8005844 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800583e:	6803      	ldr	r3, [r0, #0]
 8005840:	68db      	ldr	r3, [r3, #12]
 8005842:	4798      	blx	r3
    if (*currentTrans)
 8005844:	f8d9 0000 	ldr.w	r0, [r9]
 8005848:	b110      	cbz	r0, 8005850 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800584a:	6803      	ldr	r3, [r0, #0]
 800584c:	681b      	ldr	r3, [r3, #0]
 800584e:	4798      	blx	r3
    if (*currentScreen)
 8005850:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005918 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8005854:	f8d8 0000 	ldr.w	r0, [r8]
 8005858:	b110      	cbz	r0, 8005860 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800585a:	6803      	ldr	r3, [r0, #0]
 800585c:	695b      	ldr	r3, [r3, #20]
 800585e:	4798      	blx	r3
    if (*currentPresenter)
 8005860:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005864:	b110      	cbz	r0, 800586c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005866:	6803      	ldr	r3, [r0, #0]
 8005868:	685b      	ldr	r3, [r3, #4]
 800586a:	4798      	blx	r3
    if (*currentScreen)
 800586c:	f8d8 0000 	ldr.w	r0, [r8]
 8005870:	b110      	cbz	r0, 8005878 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005872:	6803      	ldr	r3, [r0, #0]
 8005874:	681b      	ldr	r3, [r3, #0]
 8005876:	4798      	blx	r3
    if (*currentPresenter)
 8005878:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800587c:	b110      	cbz	r0, 8005884 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800587e:	6803      	ldr	r3, [r0, #0]
 8005880:	689b      	ldr	r3, [r3, #8]
 8005882:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005884:	68e0      	ldr	r0, [r4, #12]
 8005886:	2100      	movs	r1, #0
 8005888:	f7ff fb16 	bl	8004eb8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800588c:	2114      	movs	r1, #20
 800588e:	4605      	mov	r5, r0
 8005890:	f7ff fb16 	bl	8004ec0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005894:	68a0      	ldr	r0, [r4, #8]
 8005896:	6803      	ldr	r3, [r0, #0]
 8005898:	2100      	movs	r1, #0
 800589a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800589c:	4798      	blx	r3
 800589e:	4606      	mov	r6, r0
 80058a0:	f004 f806 	bl	80098b0 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80058a4:	6860      	ldr	r0, [r4, #4]
 80058a6:	6803      	ldr	r3, [r0, #0]
 80058a8:	2100      	movs	r1, #0
 80058aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80058ac:	4798      	blx	r3
 80058ae:	4631      	mov	r1, r6
 80058b0:	4604      	mov	r4, r0
 80058b2:	f003 ffd7 	bl	8009864 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 80058b6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80058ba:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80058be:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80058c2:	b1dc      	cbz	r4, 80058fc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 80058c4:	1d23      	adds	r3, r4, #4
 80058c6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80058ca:	6833      	ldr	r3, [r6, #0]
 80058cc:	f8c4 a008 	str.w	sl, [r4, #8]
 80058d0:	4630      	mov	r0, r6
 80058d2:	68db      	ldr	r3, [r3, #12]
 80058d4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80058d6:	4798      	blx	r3
    newPresenter->activate();
 80058d8:	6823      	ldr	r3, [r4, #0]
 80058da:	4620      	mov	r0, r4
 80058dc:	681b      	ldr	r3, [r3, #0]
 80058de:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80058e0:	4629      	mov	r1, r5
 80058e2:	4630      	mov	r0, r6
 80058e4:	f011 ff78 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80058e8:	682b      	ldr	r3, [r5, #0]
 80058ea:	4628      	mov	r0, r5
 80058ec:	691b      	ldr	r3, [r3, #16]
 80058ee:	4798      	blx	r3
    newTransition->invalidate();
 80058f0:	682b      	ldr	r3, [r5, #0]
 80058f2:	4628      	mov	r0, r5
 80058f4:	695b      	ldr	r3, [r3, #20]
}
 80058f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80058fa:	4718      	bx	r3
    model->bind(newPresenter);
 80058fc:	4623      	mov	r3, r4
 80058fe:	e7e2      	b.n	80058c6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8005900:	0802c7b4 	.word	0x0802c7b4
 8005904:	0802d8ab 	.word	0x0802d8ab
 8005908:	0802c950 	.word	0x0802c950
 800590c:	0802c997 	.word	0x0802c997
 8005910:	0802ca3a 	.word	0x0802ca3a
 8005914:	20012dfc 	.word	0x20012dfc
 8005918:	20012df8 	.word	0x20012df8

0800591c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 800591c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005920:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005924:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005926:	68a0      	ldr	r0, [r4, #8]
 8005928:	6803      	ldr	r3, [r0, #0]
 800592a:	6a1b      	ldr	r3, [r3, #32]
 800592c:	4798      	blx	r3
 800592e:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8005932:	4298      	cmp	r0, r3
 8005934:	d805      	bhi.n	8005942 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8005936:	4b42      	ldr	r3, [pc, #264]	; (8005a40 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8005938:	4a42      	ldr	r2, [pc, #264]	; (8005a44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800593a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800593c:	4842      	ldr	r0, [pc, #264]	; (8005a48 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 800593e:	f025 f87d 	bl	802aa3c <__assert_func>
 8005942:	6860      	ldr	r0, [r4, #4]
 8005944:	6803      	ldr	r3, [r0, #0]
 8005946:	6a1b      	ldr	r3, [r3, #32]
 8005948:	4798      	blx	r3
 800594a:	280f      	cmp	r0, #15
 800594c:	d803      	bhi.n	8005956 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 800594e:	4b3f      	ldr	r3, [pc, #252]	; (8005a4c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8005950:	4a3c      	ldr	r2, [pc, #240]	; (8005a44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005952:	21a4      	movs	r1, #164	; 0xa4
 8005954:	e7f2      	b.n	800593c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005956:	68e0      	ldr	r0, [r4, #12]
 8005958:	6803      	ldr	r3, [r0, #0]
 800595a:	6a1b      	ldr	r3, [r3, #32]
 800595c:	4798      	blx	r3
 800595e:	2837      	cmp	r0, #55	; 0x37
 8005960:	d803      	bhi.n	800596a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8005962:	4b3b      	ldr	r3, [pc, #236]	; (8005a50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8005964:	4a37      	ldr	r2, [pc, #220]	; (8005a44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005966:	21a5      	movs	r1, #165	; 0xa5
 8005968:	e7e8      	b.n	800593c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800596a:	f010 f909 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800596e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005a54 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8005972:	3004      	adds	r0, #4
 8005974:	f010 f96a 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005978:	f8d9 0000 	ldr.w	r0, [r9]
 800597c:	b110      	cbz	r0, 8005984 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800597e:	6803      	ldr	r3, [r0, #0]
 8005980:	68db      	ldr	r3, [r3, #12]
 8005982:	4798      	blx	r3
    if (*currentTrans)
 8005984:	f8d9 0000 	ldr.w	r0, [r9]
 8005988:	b110      	cbz	r0, 8005990 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800598a:	6803      	ldr	r3, [r0, #0]
 800598c:	681b      	ldr	r3, [r3, #0]
 800598e:	4798      	blx	r3
    if (*currentScreen)
 8005990:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005a58 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8005994:	f8d8 0000 	ldr.w	r0, [r8]
 8005998:	b110      	cbz	r0, 80059a0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800599a:	6803      	ldr	r3, [r0, #0]
 800599c:	695b      	ldr	r3, [r3, #20]
 800599e:	4798      	blx	r3
    if (*currentPresenter)
 80059a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80059a4:	b110      	cbz	r0, 80059ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80059a6:	6803      	ldr	r3, [r0, #0]
 80059a8:	685b      	ldr	r3, [r3, #4]
 80059aa:	4798      	blx	r3
    if (*currentScreen)
 80059ac:	f8d8 0000 	ldr.w	r0, [r8]
 80059b0:	b110      	cbz	r0, 80059b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80059b2:	6803      	ldr	r3, [r0, #0]
 80059b4:	681b      	ldr	r3, [r3, #0]
 80059b6:	4798      	blx	r3
    if (*currentPresenter)
 80059b8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80059bc:	b110      	cbz	r0, 80059c4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80059be:	6803      	ldr	r3, [r0, #0]
 80059c0:	689b      	ldr	r3, [r3, #8]
 80059c2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80059c4:	68e0      	ldr	r0, [r4, #12]
 80059c6:	2100      	movs	r1, #0
 80059c8:	f7ff fa76 	bl	8004eb8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80059cc:	2114      	movs	r1, #20
 80059ce:	4605      	mov	r5, r0
 80059d0:	f7ff fa76 	bl	8004ec0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80059d4:	68a0      	ldr	r0, [r4, #8]
 80059d6:	6803      	ldr	r3, [r0, #0]
 80059d8:	2100      	movs	r1, #0
 80059da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80059dc:	4798      	blx	r3
 80059de:	4606      	mov	r6, r0
 80059e0:	f003 fede 	bl	80097a0 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80059e4:	6860      	ldr	r0, [r4, #4]
 80059e6:	6803      	ldr	r3, [r0, #0]
 80059e8:	2100      	movs	r1, #0
 80059ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80059ec:	4798      	blx	r3
 80059ee:	4631      	mov	r1, r6
 80059f0:	4604      	mov	r4, r0
 80059f2:	f003 feaf 	bl	8009754 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 80059f6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80059fa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80059fe:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005a02:	b1dc      	cbz	r4, 8005a3c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8005a04:	1d23      	adds	r3, r4, #4
 8005a06:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005a0a:	6833      	ldr	r3, [r6, #0]
 8005a0c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005a10:	4630      	mov	r0, r6
 8005a12:	68db      	ldr	r3, [r3, #12]
 8005a14:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005a16:	4798      	blx	r3
    newPresenter->activate();
 8005a18:	6823      	ldr	r3, [r4, #0]
 8005a1a:	4620      	mov	r0, r4
 8005a1c:	681b      	ldr	r3, [r3, #0]
 8005a1e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005a20:	4629      	mov	r1, r5
 8005a22:	4630      	mov	r0, r6
 8005a24:	f011 fed8 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005a28:	682b      	ldr	r3, [r5, #0]
 8005a2a:	4628      	mov	r0, r5
 8005a2c:	691b      	ldr	r3, [r3, #16]
 8005a2e:	4798      	blx	r3
    newTransition->invalidate();
 8005a30:	682b      	ldr	r3, [r5, #0]
 8005a32:	4628      	mov	r0, r5
 8005a34:	695b      	ldr	r3, [r3, #20]
}
 8005a36:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005a3a:	4718      	bx	r3
    model->bind(newPresenter);
 8005a3c:	4623      	mov	r3, r4
 8005a3e:	e7e2      	b.n	8005a06 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8005a40:	0802c7b4 	.word	0x0802c7b4
 8005a44:	0802d9ed 	.word	0x0802d9ed
 8005a48:	0802c950 	.word	0x0802c950
 8005a4c:	0802c997 	.word	0x0802c997
 8005a50:	0802ca3a 	.word	0x0802ca3a
 8005a54:	20012dfc 	.word	0x20012dfc
 8005a58:	20012df8 	.word	0x20012df8

08005a5c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8005a5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005a60:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005a64:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005a66:	68a0      	ldr	r0, [r4, #8]
 8005a68:	6803      	ldr	r3, [r0, #0]
 8005a6a:	6a1b      	ldr	r3, [r3, #32]
 8005a6c:	4798      	blx	r3
 8005a6e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005a72:	d205      	bcs.n	8005a80 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8005a74:	4b42      	ldr	r3, [pc, #264]	; (8005b80 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8005a76:	4a43      	ldr	r2, [pc, #268]	; (8005b84 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005a78:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005a7a:	4843      	ldr	r0, [pc, #268]	; (8005b88 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8005a7c:	f024 ffde 	bl	802aa3c <__assert_func>
 8005a80:	6860      	ldr	r0, [r4, #4]
 8005a82:	6803      	ldr	r3, [r0, #0]
 8005a84:	6a1b      	ldr	r3, [r3, #32]
 8005a86:	4798      	blx	r3
 8005a88:	280f      	cmp	r0, #15
 8005a8a:	d803      	bhi.n	8005a94 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8005a8c:	4b3f      	ldr	r3, [pc, #252]	; (8005b8c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8005a8e:	4a3d      	ldr	r2, [pc, #244]	; (8005b84 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005a90:	21a4      	movs	r1, #164	; 0xa4
 8005a92:	e7f2      	b.n	8005a7a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005a94:	68e0      	ldr	r0, [r4, #12]
 8005a96:	6803      	ldr	r3, [r0, #0]
 8005a98:	6a1b      	ldr	r3, [r3, #32]
 8005a9a:	4798      	blx	r3
 8005a9c:	2837      	cmp	r0, #55	; 0x37
 8005a9e:	d803      	bhi.n	8005aa8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8005aa0:	4b3b      	ldr	r3, [pc, #236]	; (8005b90 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8005aa2:	4a38      	ldr	r2, [pc, #224]	; (8005b84 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005aa4:	21a5      	movs	r1, #165	; 0xa5
 8005aa6:	e7e8      	b.n	8005a7a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005aa8:	f010 f86a 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005aac:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005b94 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8005ab0:	3004      	adds	r0, #4
 8005ab2:	f010 f8cb 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005ab6:	f8d9 0000 	ldr.w	r0, [r9]
 8005aba:	b110      	cbz	r0, 8005ac2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005abc:	6803      	ldr	r3, [r0, #0]
 8005abe:	68db      	ldr	r3, [r3, #12]
 8005ac0:	4798      	blx	r3
    if (*currentTrans)
 8005ac2:	f8d9 0000 	ldr.w	r0, [r9]
 8005ac6:	b110      	cbz	r0, 8005ace <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005ac8:	6803      	ldr	r3, [r0, #0]
 8005aca:	681b      	ldr	r3, [r3, #0]
 8005acc:	4798      	blx	r3
    if (*currentScreen)
 8005ace:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005b98 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8005ad2:	f8d8 0000 	ldr.w	r0, [r8]
 8005ad6:	b110      	cbz	r0, 8005ade <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005ad8:	6803      	ldr	r3, [r0, #0]
 8005ada:	695b      	ldr	r3, [r3, #20]
 8005adc:	4798      	blx	r3
    if (*currentPresenter)
 8005ade:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005ae2:	b110      	cbz	r0, 8005aea <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005ae4:	6803      	ldr	r3, [r0, #0]
 8005ae6:	685b      	ldr	r3, [r3, #4]
 8005ae8:	4798      	blx	r3
    if (*currentScreen)
 8005aea:	f8d8 0000 	ldr.w	r0, [r8]
 8005aee:	b110      	cbz	r0, 8005af6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005af0:	6803      	ldr	r3, [r0, #0]
 8005af2:	681b      	ldr	r3, [r3, #0]
 8005af4:	4798      	blx	r3
    if (*currentPresenter)
 8005af6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005afa:	b110      	cbz	r0, 8005b02 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005afc:	6803      	ldr	r3, [r0, #0]
 8005afe:	689b      	ldr	r3, [r3, #8]
 8005b00:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005b02:	68e0      	ldr	r0, [r4, #12]
 8005b04:	2100      	movs	r1, #0
 8005b06:	f7ff f9d7 	bl	8004eb8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005b0a:	2114      	movs	r1, #20
 8005b0c:	4605      	mov	r5, r0
 8005b0e:	f7ff f9d7 	bl	8004ec0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005b12:	68a0      	ldr	r0, [r4, #8]
 8005b14:	6803      	ldr	r3, [r0, #0]
 8005b16:	2100      	movs	r1, #0
 8005b18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b1a:	4798      	blx	r3
 8005b1c:	4606      	mov	r6, r0
 8005b1e:	f003 fde5 	bl	80096ec <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005b22:	6860      	ldr	r0, [r4, #4]
 8005b24:	6803      	ldr	r3, [r0, #0]
 8005b26:	2100      	movs	r1, #0
 8005b28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b2a:	4798      	blx	r3
 8005b2c:	4631      	mov	r1, r6
 8005b2e:	4604      	mov	r4, r0
 8005b30:	f003 fdb6 	bl	80096a0 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8005b34:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005b38:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005b3c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005b40:	b1dc      	cbz	r4, 8005b7a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8005b42:	1d23      	adds	r3, r4, #4
 8005b44:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005b48:	6833      	ldr	r3, [r6, #0]
 8005b4a:	f8c4 a008 	str.w	sl, [r4, #8]
 8005b4e:	4630      	mov	r0, r6
 8005b50:	68db      	ldr	r3, [r3, #12]
 8005b52:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005b54:	4798      	blx	r3
    newPresenter->activate();
 8005b56:	6823      	ldr	r3, [r4, #0]
 8005b58:	4620      	mov	r0, r4
 8005b5a:	681b      	ldr	r3, [r3, #0]
 8005b5c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005b5e:	4629      	mov	r1, r5
 8005b60:	4630      	mov	r0, r6
 8005b62:	f011 fe39 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005b66:	682b      	ldr	r3, [r5, #0]
 8005b68:	4628      	mov	r0, r5
 8005b6a:	691b      	ldr	r3, [r3, #16]
 8005b6c:	4798      	blx	r3
    newTransition->invalidate();
 8005b6e:	682b      	ldr	r3, [r5, #0]
 8005b70:	4628      	mov	r0, r5
 8005b72:	695b      	ldr	r3, [r3, #20]
}
 8005b74:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005b78:	4718      	bx	r3
    model->bind(newPresenter);
 8005b7a:	4623      	mov	r3, r4
 8005b7c:	e7e2      	b.n	8005b44 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8005b7e:	bf00      	nop
 8005b80:	0802c7b4 	.word	0x0802c7b4
 8005b84:	0802db2f 	.word	0x0802db2f
 8005b88:	0802c950 	.word	0x0802c950
 8005b8c:	0802c997 	.word	0x0802c997
 8005b90:	0802ca3a 	.word	0x0802ca3a
 8005b94:	20012dfc 	.word	0x20012dfc
 8005b98:	20012df8 	.word	0x20012df8

08005b9c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8005b9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005ba0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005ba4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005ba6:	68a0      	ldr	r0, [r4, #8]
 8005ba8:	6803      	ldr	r3, [r0, #0]
 8005baa:	6a1b      	ldr	r3, [r3, #32]
 8005bac:	4798      	blx	r3
 8005bae:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005bb2:	d205      	bcs.n	8005bc0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8005bb4:	4b42      	ldr	r3, [pc, #264]	; (8005cc0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8005bb6:	4a43      	ldr	r2, [pc, #268]	; (8005cc4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005bb8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005bba:	4843      	ldr	r0, [pc, #268]	; (8005cc8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8005bbc:	f024 ff3e 	bl	802aa3c <__assert_func>
 8005bc0:	6860      	ldr	r0, [r4, #4]
 8005bc2:	6803      	ldr	r3, [r0, #0]
 8005bc4:	6a1b      	ldr	r3, [r3, #32]
 8005bc6:	4798      	blx	r3
 8005bc8:	280f      	cmp	r0, #15
 8005bca:	d803      	bhi.n	8005bd4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8005bcc:	4b3f      	ldr	r3, [pc, #252]	; (8005ccc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8005bce:	4a3d      	ldr	r2, [pc, #244]	; (8005cc4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005bd0:	21a4      	movs	r1, #164	; 0xa4
 8005bd2:	e7f2      	b.n	8005bba <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005bd4:	68e0      	ldr	r0, [r4, #12]
 8005bd6:	6803      	ldr	r3, [r0, #0]
 8005bd8:	6a1b      	ldr	r3, [r3, #32]
 8005bda:	4798      	blx	r3
 8005bdc:	2837      	cmp	r0, #55	; 0x37
 8005bde:	d803      	bhi.n	8005be8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8005be0:	4b3b      	ldr	r3, [pc, #236]	; (8005cd0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8005be2:	4a38      	ldr	r2, [pc, #224]	; (8005cc4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005be4:	21a5      	movs	r1, #165	; 0xa5
 8005be6:	e7e8      	b.n	8005bba <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005be8:	f00f ffca 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005bec:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005cd4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005bf0:	3004      	adds	r0, #4
 8005bf2:	f010 f82b 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005bf6:	f8d9 0000 	ldr.w	r0, [r9]
 8005bfa:	b110      	cbz	r0, 8005c02 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005bfc:	6803      	ldr	r3, [r0, #0]
 8005bfe:	68db      	ldr	r3, [r3, #12]
 8005c00:	4798      	blx	r3
    if (*currentTrans)
 8005c02:	f8d9 0000 	ldr.w	r0, [r9]
 8005c06:	b110      	cbz	r0, 8005c0e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005c08:	6803      	ldr	r3, [r0, #0]
 8005c0a:	681b      	ldr	r3, [r3, #0]
 8005c0c:	4798      	blx	r3
    if (*currentScreen)
 8005c0e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005cd8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8005c12:	f8d8 0000 	ldr.w	r0, [r8]
 8005c16:	b110      	cbz	r0, 8005c1e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005c18:	6803      	ldr	r3, [r0, #0]
 8005c1a:	695b      	ldr	r3, [r3, #20]
 8005c1c:	4798      	blx	r3
    if (*currentPresenter)
 8005c1e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005c22:	b110      	cbz	r0, 8005c2a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005c24:	6803      	ldr	r3, [r0, #0]
 8005c26:	685b      	ldr	r3, [r3, #4]
 8005c28:	4798      	blx	r3
    if (*currentScreen)
 8005c2a:	f8d8 0000 	ldr.w	r0, [r8]
 8005c2e:	b110      	cbz	r0, 8005c36 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005c30:	6803      	ldr	r3, [r0, #0]
 8005c32:	681b      	ldr	r3, [r3, #0]
 8005c34:	4798      	blx	r3
    if (*currentPresenter)
 8005c36:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005c3a:	b110      	cbz	r0, 8005c42 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005c3c:	6803      	ldr	r3, [r0, #0]
 8005c3e:	689b      	ldr	r3, [r3, #8]
 8005c40:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005c42:	68e0      	ldr	r0, [r4, #12]
 8005c44:	2100      	movs	r1, #0
 8005c46:	f7ff f937 	bl	8004eb8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005c4a:	2114      	movs	r1, #20
 8005c4c:	4605      	mov	r5, r0
 8005c4e:	f7ff f937 	bl	8004ec0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005c52:	68a0      	ldr	r0, [r4, #8]
 8005c54:	6803      	ldr	r3, [r0, #0]
 8005c56:	2100      	movs	r1, #0
 8005c58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c5a:	4798      	blx	r3
 8005c5c:	4606      	mov	r6, r0
 8005c5e:	f003 fc01 	bl	8009464 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005c62:	6860      	ldr	r0, [r4, #4]
 8005c64:	6803      	ldr	r3, [r0, #0]
 8005c66:	2100      	movs	r1, #0
 8005c68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c6a:	4798      	blx	r3
 8005c6c:	4631      	mov	r1, r6
 8005c6e:	4604      	mov	r4, r0
 8005c70:	f003 fbd2 	bl	8009418 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8005c74:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005c78:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005c7c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005c80:	b1dc      	cbz	r4, 8005cba <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8005c82:	1d23      	adds	r3, r4, #4
 8005c84:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005c88:	6833      	ldr	r3, [r6, #0]
 8005c8a:	f8c4 a008 	str.w	sl, [r4, #8]
 8005c8e:	4630      	mov	r0, r6
 8005c90:	68db      	ldr	r3, [r3, #12]
 8005c92:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005c94:	4798      	blx	r3
    newPresenter->activate();
 8005c96:	6823      	ldr	r3, [r4, #0]
 8005c98:	4620      	mov	r0, r4
 8005c9a:	681b      	ldr	r3, [r3, #0]
 8005c9c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005c9e:	4629      	mov	r1, r5
 8005ca0:	4630      	mov	r0, r6
 8005ca2:	f011 fd99 	bl	80177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005ca6:	682b      	ldr	r3, [r5, #0]
 8005ca8:	4628      	mov	r0, r5
 8005caa:	691b      	ldr	r3, [r3, #16]
 8005cac:	4798      	blx	r3
    newTransition->invalidate();
 8005cae:	682b      	ldr	r3, [r5, #0]
 8005cb0:	4628      	mov	r0, r5
 8005cb2:	695b      	ldr	r3, [r3, #20]
}
 8005cb4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005cb8:	4718      	bx	r3
    model->bind(newPresenter);
 8005cba:	4623      	mov	r3, r4
 8005cbc:	e7e2      	b.n	8005c84 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8005cbe:	bf00      	nop
 8005cc0:	0802c7b4 	.word	0x0802c7b4
 8005cc4:	0802dc5b 	.word	0x0802dc5b
 8005cc8:	0802c950 	.word	0x0802c950
 8005ccc:	0802c997 	.word	0x0802c997
 8005cd0:	0802ca3a 	.word	0x0802ca3a
 8005cd4:	20012dfc 	.word	0x20012dfc
 8005cd8:	20012df8 	.word	0x20012df8

08005cdc <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8005cdc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005cde:	4770      	bx	lr

08005ce0 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8005ce0:	4770      	bx	lr

08005ce2 <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8005ce2:	4770      	bx	lr

08005ce4 <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8005ce4:	b510      	push	{r4, lr}
}
 8005ce6:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8005cea:	4604      	mov	r4, r0
}
 8005cec:	f023 ffbf 	bl	8029c6e <_ZdlPvj>
 8005cf0:	4620      	mov	r0, r4
 8005cf2:	bd10      	pop	{r4, pc}

08005cf4 <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8005cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8005cf8:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005cfc:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8005cfe:	2600      	movs	r6, #0
 8005d00:	ed2d 8b02 	vpush	{d8}
 8005d04:	8483      	strh	r3, [r0, #36]	; 0x24
 8005d06:	4bb2      	ldr	r3, [pc, #712]	; (8005fd0 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8005d08:	6286      	str	r6, [r0, #40]	; 0x28
 8005d0a:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005d0e:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8005d12:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8005d16:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8005d1a:	f848 3b2c 	str.w	r3, [r8], #44
 8005d1e:	b08b      	sub	sp, #44	; 0x2c
 8005d20:	4604      	mov	r4, r0
 8005d22:	4640      	mov	r0, r8
 8005d24:	f7fd f972 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8005d28:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8005d2c:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8005d30:	4618      	mov	r0, r3
 8005d32:	9303      	str	r3, [sp, #12]
 8005d34:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8005d38:	f7fd f968 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8005d3c:	4658      	mov	r0, fp
 8005d3e:	f7fd f965 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8005d42:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8005d46:	4da3      	ldr	r5, [pc, #652]	; (8005fd4 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8005d48:	4650      	mov	r0, sl
 8005d4a:	f7fd f95f 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005d4e:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8005d52:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8005d56:	4648      	mov	r0, r9
 8005d58:	f7fd f958 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8005d5c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8005d60:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8005d64:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8005d66:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8005d6a:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8005d6e:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8005d72:	f7fd f94b 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005d76:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8005d7a:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8005d7e:	4638      	mov	r0, r7
 8005d80:	f00c feb8 	bl	8012af4 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8005d84:	4a94      	ldr	r2, [pc, #592]	; (8005fd8 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 8005d86:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8005d88:	4640      	mov	r0, r8
 8005d8a:	226d      	movs	r2, #109	; 0x6d
 8005d8c:	21d9      	movs	r1, #217	; 0xd9
 8005d8e:	ad04      	add	r5, sp, #16
 8005d90:	f7fd f909 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005d94:	f04f 33ff 	mov.w	r3, #4294967295
 8005d98:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 8005d9a:	4641      	mov	r1, r8
 8005d9c:	4628      	mov	r0, r5
        linespace = space;
 8005d9e:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8005da2:	f00c fb6f 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005da6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005daa:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 8005dae:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005db2:	4b8a      	ldr	r3, [pc, #552]	; (8005fdc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005db4:	9308      	str	r3, [sp, #32]
 8005db6:	223f      	movs	r2, #63	; 0x3f
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8005db8:	a908      	add	r1, sp, #32
 8005dba:	4640      	mov	r0, r8
 8005dbc:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8005dc0:	f00c fdfa 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8005dc4:	4641      	mov	r1, r8
 8005dc6:	4620      	mov	r0, r4
 8005dc8:	f00a fc42 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 8005dcc:	9b03      	ldr	r3, [sp, #12]
 8005dce:	4631      	mov	r1, r6
 8005dd0:	4618      	mov	r0, r3
 8005dd2:	226d      	movs	r2, #109	; 0x6d
 8005dd4:	f7fd f8e7 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8005dd8:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 8005dda:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 8005dde:	f04f 32ff 	mov.w	r2, #4294967295
 8005de2:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 8005de6:	4619      	mov	r1, r3
 8005de8:	4628      	mov	r0, r5
 8005dea:	f00c fb4b 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005dee:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005df2:	4b7a      	ldr	r3, [pc, #488]	; (8005fdc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005df4:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 8005df6:	9b03      	ldr	r3, [sp, #12]
 8005df8:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 8005dfc:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005e00:	2240      	movs	r2, #64	; 0x40
 8005e02:	a908      	add	r1, sp, #32
 8005e04:	4618      	mov	r0, r3
 8005e06:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8005e0a:	f00c fdd5 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 8005e0e:	9b03      	ldr	r3, [sp, #12]
 8005e10:	4620      	mov	r0, r4
 8005e12:	4619      	mov	r1, r3
 8005e14:	f00a fc1c 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8005e18:	4632      	mov	r2, r6
 8005e1a:	4658      	mov	r0, fp
 8005e1c:	2171      	movs	r1, #113	; 0x71
 8005e1e:	f7fd f8c2 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005e22:	f04f 32ff 	mov.w	r2, #4294967295
 8005e26:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 8005e2a:	4659      	mov	r1, fp
 8005e2c:	4628      	mov	r0, r5
        linespace = space;
 8005e2e:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8005e32:	f00c fb27 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e36:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e3a:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 8005e3e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e42:	4b66      	ldr	r3, [pc, #408]	; (8005fdc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005e44:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 8005e46:	a908      	add	r1, sp, #32
 8005e48:	2341      	movs	r3, #65	; 0x41
 8005e4a:	4658      	mov	r0, fp
 8005e4c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005e50:	f00c fdb2 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8005e54:	4659      	mov	r1, fp
 8005e56:	4620      	mov	r0, r4
 8005e58:	f00a fbfa 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 8005e5c:	4650      	mov	r0, sl
 8005e5e:	227c      	movs	r2, #124	; 0x7c
 8005e60:	214c      	movs	r1, #76	; 0x4c
 8005e62:	f7fd f8a0 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8005e66:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 8005e6a:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 8005e6e:	f04f 32ff 	mov.w	r2, #4294967295
 8005e72:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8005e76:	4651      	mov	r1, sl
 8005e78:	4628      	mov	r0, r5
 8005e7a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005e7e:	4798      	blx	r3
 8005e80:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005e84:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8005e88:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e8c:	4b53      	ldr	r3, [pc, #332]	; (8005fdc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005e8e:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 8005e90:	a908      	add	r1, sp, #32
 8005e92:	233e      	movs	r3, #62	; 0x3e
 8005e94:	4650      	mov	r0, sl
 8005e96:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005e9a:	f00c fd8d 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 8005e9e:	4651      	mov	r1, sl
 8005ea0:	4620      	mov	r0, r4
 8005ea2:	f00a fbd5 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 8005ea6:	4648      	mov	r0, r9
 8005ea8:	228b      	movs	r2, #139	; 0x8b
 8005eaa:	2156      	movs	r1, #86	; 0x56
 8005eac:	f7fd f87b 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8005eb0:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 8005eb4:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 8005eb8:	f04f 32ff 	mov.w	r2, #4294967295
 8005ebc:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8005ec0:	4649      	mov	r1, r9
 8005ec2:	4628      	mov	r0, r5
 8005ec4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005ec8:	4798      	blx	r3
 8005eca:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005ece:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 8005ed2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005ed6:	4b41      	ldr	r3, [pc, #260]	; (8005fdc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005ed8:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 8005eda:	a908      	add	r1, sp, #32
 8005edc:	233d      	movs	r3, #61	; 0x3d
 8005ede:	4648      	mov	r0, r9
 8005ee0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005ee4:	f00c fd68 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 8005ee8:	4649      	mov	r1, r9
 8005eea:	4620      	mov	r0, r4
 8005eec:	f00a fbb0 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8005ef0:	ee18 0a10 	vmov	r0, s16
 8005ef4:	229a      	movs	r2, #154	; 0x9a
 8005ef6:	2156      	movs	r1, #86	; 0x56
 8005ef8:	f7fd f855 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8005efc:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8005f00:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 8005f04:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8005f08:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 8005f0c:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8005f10:	4628      	mov	r0, r5
 8005f12:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005f16:	4798      	blx	r3
 8005f18:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f1c:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8005f20:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005f24:	4b2d      	ldr	r3, [pc, #180]	; (8005fdc <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005f26:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 8005f28:	ee18 0a10 	vmov	r0, s16
 8005f2c:	233c      	movs	r3, #60	; 0x3c
 8005f2e:	a908      	add	r1, sp, #32
 8005f30:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005f34:	f00c fd40 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 8005f38:	ee18 1a10 	vmov	r1, s16
 8005f3c:	4620      	mov	r0, r4
 8005f3e:	f00a fb87 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005f42:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8005f44:	a908      	add	r1, sp, #32
 8005f46:	4638      	mov	r0, r7
 8005f48:	f8ad 3020 	strh.w	r3, [sp, #32]
 8005f4c:	f00a fb12 	bl	8010574 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8005f50:	2212      	movs	r2, #18
 8005f52:	4638      	mov	r0, r7
 8005f54:	211c      	movs	r1, #28
 8005f56:	f7fd f826 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8005f5a:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8005f5e:	4638      	mov	r0, r7
 8005f60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005f62:	21b8      	movs	r1, #184	; 0xb8
 8005f64:	4798      	blx	r3
        setHeight(height);
 8005f66:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 8005f6a:	4638      	mov	r0, r7
 8005f6c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005f6e:	216a      	movs	r1, #106	; 0x6a
 8005f70:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 8005f72:	225c      	movs	r2, #92	; 0x5c
 8005f74:	4611      	mov	r1, r2
 8005f76:	4638      	mov	r0, r7
 8005f78:	f00c fe67 	bl	8012c4a <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 8005f7c:	4638      	mov	r0, r7
 8005f7e:	225a      	movs	r2, #90	; 0x5a
 8005f80:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8005f84:	f00c fee6 	bl	8012d54 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 8005f88:	4633      	mov	r3, r6
 8005f8a:	225a      	movs	r2, #90	; 0x5a
 8005f8c:	4638      	mov	r0, r7
 8005f8e:	9600      	str	r6, [sp, #0]
 8005f90:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8005f94:	f00a f99b 	bl	80102ce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 8005f98:	4631      	mov	r1, r6
 8005f9a:	4638      	mov	r0, r7
 8005f9c:	f00c fe84 	bl	8012ca8 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8005fa0:	2335      	movs	r3, #53	; 0x35
 8005fa2:	2208      	movs	r2, #8
 8005fa4:	4638      	mov	r0, r7
 8005fa6:	2105      	movs	r1, #5
 8005fa8:	f00c fe3a 	bl	8012c20 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8005fac:	4638      	mov	r0, r7
 8005fae:	2101      	movs	r1, #1
 8005fb0:	f00c fdd8 	bl	8012b64 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8005fb4:	4638      	mov	r0, r7
 8005fb6:	2101      	movs	r1, #1
 8005fb8:	f00c fdd7 	bl	8012b6a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 8005fbc:	4620      	mov	r0, r4
 8005fbe:	4639      	mov	r1, r7
 8005fc0:	f00a fb46 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005fc4:	4620      	mov	r0, r4
 8005fc6:	b00b      	add	sp, #44	; 0x2c
 8005fc8:	ecbd 8b02 	vpop	{d8}
 8005fcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005fd0:	0802dec4 	.word	0x0802dec4
 8005fd4:	0802c640 	.word	0x0802c640
 8005fd8:	00a900f0 	.word	0x00a900f0
 8005fdc:	0802c630 	.word	0x0802c630

08005fe0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005fe0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005fe2:	4770      	bx	lr

08005fe4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005fe4:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005fe6:	4770      	bx	lr

08005fe8 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005fe8:	4770      	bx	lr

08005fea <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8005fea:	888b      	ldrh	r3, [r1, #4]
 8005fec:	69c0      	ldr	r0, [r0, #28]
 8005fee:	680a      	ldr	r2, [r1, #0]
 8005ff0:	0adb      	lsrs	r3, r3, #11
 8005ff2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005ff6:	4410      	add	r0, r2
 8005ff8:	4770      	bx	lr

08005ffa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005ffa:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005ffc:	b1c2      	cbz	r2, 8006030 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005ffe:	7b13      	ldrb	r3, [r2, #12]
 8006000:	b1b3      	cbz	r3, 8006030 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8006002:	7b54      	ldrb	r4, [r2, #13]
 8006004:	7ad2      	ldrb	r2, [r2, #11]
 8006006:	0224      	lsls	r4, r4, #8
 8006008:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800600c:	4314      	orrs	r4, r2
 800600e:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8006010:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8006012:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8006016:	8813      	ldrh	r3, [r2, #0]
 8006018:	428b      	cmp	r3, r1
 800601a:	d102      	bne.n	8006022 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800601c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8006020:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8006022:	d805      	bhi.n	8006030 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8006024:	3801      	subs	r0, #1
 8006026:	b280      	uxth	r0, r0
 8006028:	3204      	adds	r2, #4
 800602a:	2800      	cmp	r0, #0
 800602c:	d1f3      	bne.n	8006016 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800602e:	e7f7      	b.n	8006020 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8006030:	2000      	movs	r0, #0
 8006032:	e7f5      	b.n	8006020 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08006034 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8006034:	b510      	push	{r4, lr}
 8006036:	212c      	movs	r1, #44	; 0x2c
 8006038:	4604      	mov	r4, r0
 800603a:	f023 fe18 	bl	8029c6e <_ZdlPvj>
 800603e:	4620      	mov	r0, r4
 8006040:	bd10      	pop	{r4, pc}
	...

08006044 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8006044:	b530      	push	{r4, r5, lr}
 8006046:	b08b      	sub	sp, #44	; 0x2c
 8006048:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800604a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 800604e:	9508      	str	r5, [sp, #32]
 8006050:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8006054:	9507      	str	r5, [sp, #28]
 8006056:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800605a:	9506      	str	r5, [sp, #24]
 800605c:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8006060:	9505      	str	r5, [sp, #20]
 8006062:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8006066:	9504      	str	r5, [sp, #16]
 8006068:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800606c:	9503      	str	r5, [sp, #12]
 800606e:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8006072:	9502      	str	r5, [sp, #8]
 8006074:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8006078:	9501      	str	r5, [sp, #4]
 800607a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800607e:	9500      	str	r5, [sp, #0]
 8006080:	f010 ff14 	bl	8016eac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8006084:	4b06      	ldr	r3, [pc, #24]	; (80060a0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8006086:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8006088:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800608a:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 800608c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800608e:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8006090:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8006092:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8006094:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8006096:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8006098:	4620      	mov	r0, r4
 800609a:	b00b      	add	sp, #44	; 0x2c
 800609c:	bd30      	pop	{r4, r5, pc}
 800609e:	bf00      	nop
 80060a0:	0802df58 	.word	0x0802df58

080060a4 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 80060a4:	4770      	bx	lr

080060a6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80060a6:	4770      	bx	lr

080060a8 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80060a8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80060aa:	68c2      	ldr	r2, [r0, #12]
 80060ac:	6844      	ldr	r4, [r0, #4]
 80060ae:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80060b0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80060b2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80060b6:	07d2      	lsls	r2, r2, #31
 80060b8:	bf48      	it	mi
 80060ba:	5962      	ldrmi	r2, [r4, r5]
 80060bc:	689b      	ldr	r3, [r3, #8]
    }
 80060be:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80060c0:	bf48      	it	mi
 80060c2:	58d3      	ldrmi	r3, [r2, r3]
 80060c4:	4718      	bx	r3

080060c6 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80060c6:	6843      	ldr	r3, [r0, #4]
 80060c8:	b12b      	cbz	r3, 80060d6 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80060ca:	6883      	ldr	r3, [r0, #8]
 80060cc:	b92b      	cbnz	r3, 80060da <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80060ce:	68c0      	ldr	r0, [r0, #12]
 80060d0:	f000 0001 	and.w	r0, r0, #1
 80060d4:	4770      	bx	lr
 80060d6:	4618      	mov	r0, r3
 80060d8:	4770      	bx	lr
 80060da:	2001      	movs	r0, #1
    }
 80060dc:	4770      	bx	lr

080060de <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80060de:	b510      	push	{r4, lr}
 80060e0:	2110      	movs	r1, #16
 80060e2:	4604      	mov	r4, r0
 80060e4:	f023 fdc3 	bl	8029c6e <_ZdlPvj>
 80060e8:	4620      	mov	r0, r4
 80060ea:	bd10      	pop	{r4, pc}

080060ec <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80060ec:	b510      	push	{r4, lr}
 80060ee:	4b03      	ldr	r3, [pc, #12]	; (80060fc <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 80060f0:	6003      	str	r3, [r0, #0]
 80060f2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80060f4:	f00e f842 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80060f8:	4620      	mov	r0, r4
 80060fa:	bd10      	pop	{r4, pc}
 80060fc:	0802dfd0 	.word	0x0802dfd0

08006100 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8006100:	b507      	push	{r0, r1, r2, lr}
 8006102:	4b07      	ldr	r3, [pc, #28]	; (8006120 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8006104:	6003      	str	r3, [r0, #0]
 8006106:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006108:	f00e f838 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800610c:	9801      	ldr	r0, [sp, #4]
 800610e:	f241 117c 	movw	r1, #4476	; 0x117c
 8006112:	f023 fdac 	bl	8029c6e <_ZdlPvj>
 8006116:	9801      	ldr	r0, [sp, #4]
 8006118:	b003      	add	sp, #12
 800611a:	f85d fb04 	ldr.w	pc, [sp], #4
 800611e:	bf00      	nop
 8006120:	0802dfd0 	.word	0x0802dfd0

08006124 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006124:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 8006126:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 800612a:	4299      	cmp	r1, r3
{
 800612c:	4604      	mov	r4, r0
 800612e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8006130:	d103      	bne.n	800613a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006132:	f00f fd25 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 8006136:	f7fe fb1d 	bl	8004774 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800613a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800613e:	429d      	cmp	r5, r3
 8006140:	d103      	bne.n	800614a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006142:	f00f fd1d 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 8006146:	f7fe fba5 	bl	8004894 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 800614a:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800614e:	429d      	cmp	r5, r3
 8006150:	d103      	bne.n	800615a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8006152:	f00f fd15 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 8006156:	f7fe fbdd 	bl	8004914 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 800615a:	f504 7446 	add.w	r4, r4, #792	; 0x318
 800615e:	42a5      	cmp	r5, r4
 8006160:	d10a      	bne.n	8006178 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8006162:	4806      	ldr	r0, [pc, #24]	; (800617c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8006164:	2200      	movs	r2, #0
 8006166:	2120      	movs	r1, #32
 8006168:	f004 f906 	bl	800a378 <HAL_GPIO_WritePin>
 800616c:	f00f fd08 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8006170:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8006174:	f7fe bbde 	b.w	8004934 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8006178:	bd38      	pop	{r3, r4, r5, pc}
 800617a:	bf00      	nop
 800617c:	40021000 	.word	0x40021000

08006180 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8006180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006184:	ed2d 8b06 	vpush	{d8-d10}
 8006188:	4604      	mov	r4, r0
 800618a:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 800618c:	46a3      	mov	fp, r4
        : presenter(0)
 800618e:	2500      	movs	r5, #0
 8006190:	f011 f976 	bl	8017480 <_ZN8touchgfx6ScreenC1Ev>
 8006194:	4b6a      	ldr	r3, [pc, #424]	; (8006340 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 8006196:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006198:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800619c:	2226      	movs	r2, #38	; 0x26
 800619e:	4629      	mov	r1, r5
 80061a0:	4658      	mov	r0, fp
 80061a2:	f024 fe50 	bl	802ae46 <memset>
 80061a6:	4658      	mov	r0, fp
 80061a8:	f7fc ff1e 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 80061ac:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80061b0:	26ff      	movs	r6, #255	; 0xff
 80061b2:	4b64      	ldr	r3, [pc, #400]	; (8006344 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 80061b4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80061b6:	2226      	movs	r2, #38	; 0x26
 80061b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80061bc:	4629      	mov	r1, r5
 80061be:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80061c2:	4650      	mov	r0, sl
        : color(col)
 80061c4:	66a5      	str	r5, [r4, #104]	; 0x68
 80061c6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80061ca:	f024 fe3c 	bl	802ae46 <memset>
 80061ce:	4650      	mov	r0, sl
 80061d0:	f7fc ff0a 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 80061d4:	4b5c      	ldr	r3, [pc, #368]	; (8006348 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 80061d6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80061d8:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 80061dc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80061e0:	a90c      	add	r1, sp, #48	; 0x30
 80061e2:	4650      	mov	r0, sl
 80061e4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80061e8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80061ec:	f00c ffbf 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80061f0:	4648      	mov	r0, r9
 80061f2:	f7fc ff0b 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80061f6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80061fa:	4b54      	ldr	r3, [pc, #336]	; (800634c <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 80061fc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006200:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006204:	4638      	mov	r0, r7
 8006206:	f00b fe7b 	bl	8011f00 <_ZN8touchgfx4LineC1Ev>
 800620a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800620e:	4618      	mov	r0, r3
 8006210:	9303      	str	r3, [sp, #12]
 8006212:	f7fc fce9 	bl	8002be8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006216:	4b4e      	ldr	r3, [pc, #312]	; (8006350 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8006218:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 800621c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8006220:	3324      	adds	r3, #36	; 0x24
 8006222:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8006226:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800622a:	4640      	mov	r0, r8
 800622c:	f7fc feee 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8006230:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8006234:	4618      	mov	r0, r3
 8006236:	ee08 3a10 	vmov	s16, r3
 800623a:	f7fc fee7 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 800623e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006242:	4618      	mov	r0, r3
 8006244:	ee08 3a90 	vmov	s17, r3
 8006248:	f7fc fee0 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 800624c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006250:	4618      	mov	r0, r3
 8006252:	ee09 3a10 	vmov	s18, r3
 8006256:	f00d f8cb 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800625a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800625e:	4618      	mov	r0, r3
 8006260:	ee09 3a90 	vmov	s19, r3
 8006264:	f00d f8c4 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006268:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800626c:	4618      	mov	r0, r3
 800626e:	ee0a 3a10 	vmov	s20, r3
 8006272:	f00d f8bd 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006276:	f504 7346 	add.w	r3, r4, #792	; 0x318
 800627a:	4618      	mov	r0, r3
 800627c:	ee0a 3a90 	vmov	s21, r3
 8006280:	f00c ff4e 	bl	8013120 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006284:	4a33      	ldr	r2, [pc, #204]	; (8006354 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 8006286:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800628a:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 800628e:	4a32      	ldr	r2, [pc, #200]	; (8006358 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006290:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006294:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8006298:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 800629c:	f00d ff64 	bl	8014168 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80062a0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80062a4:	462a      	mov	r2, r5
 80062a6:	4658      	mov	r0, fp
 80062a8:	9300      	str	r3, [sp, #0]
 80062aa:	4629      	mov	r1, r5
 80062ac:	23f0      	movs	r3, #240	; 0xf0
 80062ae:	f7fc fe87 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80062b2:	1d26      	adds	r6, r4, #4
        color = newColor;
 80062b4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80062b8:	66a3      	str	r3, [r4, #104]	; 0x68
 80062ba:	4659      	mov	r1, fp
 80062bc:	4630      	mov	r0, r6
 80062be:	f00a f9c7 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80062c2:	462a      	mov	r2, r5
 80062c4:	4650      	mov	r0, sl
 80062c6:	4629      	mov	r1, r5
 80062c8:	f7fc fe6d 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80062cc:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80062ce:	4650      	mov	r0, sl
 80062d0:	a90c      	add	r1, sp, #48	; 0x30
 80062d2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80062d6:	f00c ff4a 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80062da:	4651      	mov	r1, sl
 80062dc:	4630      	mov	r0, r6
 80062de:	f00a f9b7 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 80062e2:	f44f 729a 	mov.w	r2, #308	; 0x134
 80062e6:	2156      	movs	r1, #86	; 0x56
 80062e8:	4648      	mov	r0, r9
 80062ea:	f7fc fe5c 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80062ee:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80062f2:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80062f6:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80062fa:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80062fe:	4650      	mov	r0, sl
 8006300:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006304:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006308:	4649      	mov	r1, r9
 800630a:	4798      	blx	r3
 800630c:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8006310:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006314:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006318:	4b10      	ldr	r3, [pc, #64]	; (800635c <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 800631a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 800631c:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8006320:	b92b      	cbnz	r3, 800632e <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8006322:	4b0f      	ldr	r3, [pc, #60]	; (8006360 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8006324:	4a0f      	ldr	r2, [pc, #60]	; (8006364 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8006326:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006328:	480f      	ldr	r0, [pc, #60]	; (8006368 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 800632a:	f024 fb87 	bl	802aa3c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800632e:	4b0f      	ldr	r3, [pc, #60]	; (800636c <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006330:	881b      	ldrh	r3, [r3, #0]
 8006332:	2b3a      	cmp	r3, #58	; 0x3a
 8006334:	d81e      	bhi.n	8006374 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8006336:	4b0e      	ldr	r3, [pc, #56]	; (8006370 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8006338:	4a0a      	ldr	r2, [pc, #40]	; (8006364 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800633a:	2161      	movs	r1, #97	; 0x61
 800633c:	e7f4      	b.n	8006328 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 800633e:	bf00      	nop
 8006340:	0802dfd0 	.word	0x0802dfd0
 8006344:	0802ef90 	.word	0x0802ef90
 8006348:	0802f158 	.word	0x0802f158
 800634c:	0802c640 	.word	0x0802c640
 8006350:	0802ecc4 	.word	0x0802ecc4
 8006354:	0802dfb8 	.word	0x0802dfb8
 8006358:	08006125 	.word	0x08006125
 800635c:	20012e0c 	.word	0x20012e0c
 8006360:	0802c480 	.word	0x0802c480
 8006364:	0802c582 	.word	0x0802c582
 8006368:	0802c4fd 	.word	0x0802c4fd
 800636c:	20012e10 	.word	0x20012e10
 8006370:	0802c544 	.word	0x0802c544
        return texts->getText(typedTextId);
 8006374:	4ba5      	ldr	r3, [pc, #660]	; (800660c <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 8006376:	213a      	movs	r1, #58	; 0x3a
 8006378:	6818      	ldr	r0, [r3, #0]
 800637a:	f002 fdf7 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 800637e:	4aa4      	ldr	r2, [pc, #656]	; (8006610 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8006380:	4603      	mov	r3, r0
 8006382:	2104      	movs	r1, #4
 8006384:	4650      	mov	r0, sl
 8006386:	f012 fd6b 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 800638a:	4648      	mov	r0, r9
        wc1 = value;
 800638c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006390:	f00c faf2 	bl	8012978 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006394:	4b9f      	ldr	r3, [pc, #636]	; (8006614 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 8006396:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8006398:	a90c      	add	r1, sp, #48	; 0x30
 800639a:	233b      	movs	r3, #59	; 0x3b
 800639c:	4648      	mov	r0, r9
 800639e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80063a2:	f00c fb09 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80063a6:	4649      	mov	r1, r9
 80063a8:	4630      	mov	r0, r6
 80063aa:	f00a f951 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80063ae:	230a      	movs	r3, #10
 80063b0:	9300      	str	r3, [sp, #0]
 80063b2:	2232      	movs	r2, #50	; 0x32
 80063b4:	23f0      	movs	r3, #240	; 0xf0
 80063b6:	4629      	mov	r1, r5
 80063b8:	4638      	mov	r0, r7
 80063ba:	f7fc fe01 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80063be:	9b03      	ldr	r3, [sp, #12]
 80063c0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80063c4:	22a0      	movs	r2, #160	; 0xa0
 80063c6:	4611      	mov	r1, r2
 80063c8:	4638      	mov	r0, r7
 80063ca:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 80063ce:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 80063d2:	f00b feab 	bl	801212c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80063d6:	22a0      	movs	r2, #160	; 0xa0
 80063d8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80063dc:	4638      	mov	r0, r7
 80063de:	f00b feb0 	bl	8012142 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80063e2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80063e6:	2b20      	cmp	r3, #32
 80063e8:	d005      	beq.n	80063f6 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 80063ea:	2320      	movs	r3, #32
 80063ec:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80063f0:	4638      	mov	r0, r7
 80063f2:	f00b fda5 	bl	8011f40 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80063f6:	4638      	mov	r0, r7
 80063f8:	2101      	movs	r1, #1
 80063fa:	f00b fead 	bl	8012158 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80063fe:	4639      	mov	r1, r7
 8006400:	4630      	mov	r0, r6
 8006402:	ad04      	add	r5, sp, #16
        color = newColor;
 8006404:	f04f 37ff 	mov.w	r7, #4294967295
 8006408:	f00a f922 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800640c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006410:	2223      	movs	r2, #35	; 0x23
 8006412:	4640      	mov	r0, r8
 8006414:	2145      	movs	r1, #69	; 0x45
 8006416:	f7fc fdc6 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800641a:	4641      	mov	r1, r8
 800641c:	4628      	mov	r0, r5
        color = newColor;
 800641e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8006422:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8006426:	f00c f82d 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800642a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 800642e:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8006432:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006436:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800643a:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8006614 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 800643e:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8006442:	2360      	movs	r3, #96	; 0x60
 8006444:	4649      	mov	r1, r9
 8006446:	4640      	mov	r0, r8
 8006448:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800644c:	f00c fab4 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006450:	4641      	mov	r1, r8
 8006452:	4630      	mov	r0, r6
 8006454:	f00a f8fc 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006458:	ee18 0a10 	vmov	r0, s16
 800645c:	220c      	movs	r2, #12
 800645e:	2136      	movs	r1, #54	; 0x36
 8006460:	f7fc fda1 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8006464:	ee18 1a10 	vmov	r1, s16
 8006468:	4628      	mov	r0, r5
        color = newColor;
 800646a:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 800646e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006472:	f00c f807 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006476:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800647a:	ee18 3a10 	vmov	r3, s16
 800647e:	333c      	adds	r3, #60	; 0x3c
 8006480:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006484:	2361      	movs	r3, #97	; 0x61
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8006486:	ee18 0a10 	vmov	r0, s16
 800648a:	4649      	mov	r1, r9
 800648c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006490:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8006494:	f00c fa90 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006498:	ee18 1a10 	vmov	r1, s16
 800649c:	4630      	mov	r0, r6
 800649e:	f00a f8d7 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 80064a2:	ee18 0a90 	vmov	r0, s17
 80064a6:	223c      	movs	r2, #60	; 0x3c
 80064a8:	2158      	movs	r1, #88	; 0x58
 80064aa:	f7fc fd7c 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80064ae:	ee18 1a90 	vmov	r1, s17
 80064b2:	4628      	mov	r0, r5
        color = newColor;
 80064b4:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80064b8:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80064bc:	f00b ffe2 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064c0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80064c4:	ee18 3a90 	vmov	r3, s17
 80064c8:	333c      	adds	r3, #60	; 0x3c
 80064ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80064ce:	232a      	movs	r3, #42	; 0x2a
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 80064d0:	ee18 0a90 	vmov	r0, s17
 80064d4:	4649      	mov	r1, r9
 80064d6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80064da:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80064de:	f00c fa6b 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80064e2:	ee18 1a90 	vmov	r1, s17
 80064e6:	4630      	mov	r0, r6
 80064e8:	f00a f8b2 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80064ec:	ee19 0a10 	vmov	r0, s18
 80064f0:	22f0      	movs	r2, #240	; 0xf0
 80064f2:	2121      	movs	r1, #33	; 0x21
 80064f4:	f7fc fd57 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80064f8:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80064fc:	464a      	mov	r2, r9
 80064fe:	f04f 0802 	mov.w	r8, #2
 8006502:	a90b      	add	r1, sp, #44	; 0x2c
 8006504:	ee19 0a10 	vmov	r0, s18
 8006508:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800650c:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8006510:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006514:	f00c fc35 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006518:	2362      	movs	r3, #98	; 0x62
 800651a:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800651e:	350c      	adds	r5, #12
        updateTextPosition();
 8006520:	ee19 0a10 	vmov	r0, s18
 8006524:	f7fc fd94 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006528:	ee19 1a10 	vmov	r1, s18
 800652c:	4630      	mov	r0, r6
        colorPressed = col;
 800652e:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006532:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8006536:	f00a f88b 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800653a:	ee19 0a90 	vmov	r0, s19
 800653e:	22aa      	movs	r2, #170	; 0xaa
 8006540:	2121      	movs	r1, #33	; 0x21
 8006542:	f7fc fd30 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006546:	464a      	mov	r2, r9
 8006548:	a90b      	add	r1, sp, #44	; 0x2c
 800654a:	ee19 0a90 	vmov	r0, s19
 800654e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8006552:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8006556:	f00c fc14 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800655a:	2363      	movs	r3, #99	; 0x63
 800655c:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006560:	ee19 0a90 	vmov	r0, s19
 8006564:	f7fc fd74 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006568:	ee19 1a90 	vmov	r1, s19
 800656c:	4630      	mov	r0, r6
        colorPressed = col;
 800656e:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8006572:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8006576:	f00a f86b 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 800657a:	ee1a 0a10 	vmov	r0, s20
 800657e:	2264      	movs	r2, #100	; 0x64
 8006580:	2121      	movs	r1, #33	; 0x21
 8006582:	f7fc fd10 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006586:	464a      	mov	r2, r9
 8006588:	a90b      	add	r1, sp, #44	; 0x2c
 800658a:	ee1a 0a10 	vmov	r0, s20
 800658e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8006592:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8006596:	f00c fbf4 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800659a:	2364      	movs	r3, #100	; 0x64
 800659c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80065a0:	ee1a 0a10 	vmov	r0, s20
 80065a4:	f7fc fd54 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80065a8:	ee1a 1a10 	vmov	r1, s20
 80065ac:	4630      	mov	r0, r6
        colorPressed = col;
 80065ae:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80065b2:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80065b6:	f00a f84b 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80065ba:	ee1a 0a90 	vmov	r0, s21
 80065be:	2205      	movs	r2, #5
 80065c0:	21c6      	movs	r1, #198	; 0xc6
 80065c2:	f7fc fcf0 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80065c6:	2301      	movs	r3, #1
 80065c8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80065cc:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 80065ce:	ee1a 0a90 	vmov	r0, s21
 80065d2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80065d6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80065da:	aa0a      	add	r2, sp, #40	; 0x28
 80065dc:	ab0b      	add	r3, sp, #44	; 0x2c
 80065de:	a909      	add	r1, sp, #36	; 0x24
 80065e0:	f8cd 9000 	str.w	r9, [sp]
 80065e4:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 80065e8:	f00c fd05 	bl	8012ff6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80065ec:	4630      	mov	r0, r6
 80065ee:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80065f2:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 80065f6:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 80065fa:	f00a f829 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80065fe:	4620      	mov	r0, r4
 8006600:	b00f      	add	sp, #60	; 0x3c
 8006602:	ecbd 8b06 	vpop	{d8-d10}
 8006606:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800660a:	bf00      	nop
 800660c:	20012e18 	.word	0x20012e18
 8006610:	0802c5ba 	.word	0x0802c5ba
 8006614:	0802c630 	.word	0x0802c630

08006618 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006618:	4770      	bx	lr

0800661a <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800661a:	4770      	bx	lr

0800661c <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800661c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800661e:	68c2      	ldr	r2, [r0, #12]
 8006620:	6844      	ldr	r4, [r0, #4]
 8006622:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006624:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006626:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800662a:	07d2      	lsls	r2, r2, #31
 800662c:	bf48      	it	mi
 800662e:	5962      	ldrmi	r2, [r4, r5]
 8006630:	689b      	ldr	r3, [r3, #8]
    }
 8006632:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006634:	bf48      	it	mi
 8006636:	58d3      	ldrmi	r3, [r2, r3]
 8006638:	4718      	bx	r3

0800663a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800663a:	6843      	ldr	r3, [r0, #4]
 800663c:	b12b      	cbz	r3, 800664a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800663e:	6883      	ldr	r3, [r0, #8]
 8006640:	b92b      	cbnz	r3, 800664e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006642:	68c0      	ldr	r0, [r0, #12]
 8006644:	f000 0001 	and.w	r0, r0, #1
 8006648:	4770      	bx	lr
 800664a:	4618      	mov	r0, r3
 800664c:	4770      	bx	lr
 800664e:	2001      	movs	r0, #1
    }
 8006650:	4770      	bx	lr

08006652 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006652:	b510      	push	{r4, lr}
 8006654:	2110      	movs	r1, #16
 8006656:	4604      	mov	r4, r0
 8006658:	f023 fb09 	bl	8029c6e <_ZdlPvj>
 800665c:	4620      	mov	r0, r4
 800665e:	bd10      	pop	{r4, pc}

08006660 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006660:	b510      	push	{r4, lr}
 8006662:	4b03      	ldr	r3, [pc, #12]	; (8006670 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8006664:	6003      	str	r3, [r0, #0]
 8006666:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006668:	f00d fd88 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800666c:	4620      	mov	r0, r4
 800666e:	bd10      	pop	{r4, pc}
 8006670:	0802e01c 	.word	0x0802e01c

08006674 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006674:	b507      	push	{r0, r1, r2, lr}
 8006676:	4b07      	ldr	r3, [pc, #28]	; (8006694 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8006678:	6003      	str	r3, [r0, #0]
 800667a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800667c:	f00d fd7e 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006680:	9801      	ldr	r0, [sp, #4]
 8006682:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006686:	f023 faf2 	bl	8029c6e <_ZdlPvj>
 800668a:	9801      	ldr	r0, [sp, #4]
 800668c:	b003      	add	sp, #12
 800668e:	f85d fb04 	ldr.w	pc, [sp], #4
 8006692:	bf00      	nop
 8006694:	0802e01c 	.word	0x0802e01c

08006698 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006698:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 800669a:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800669e:	4299      	cmp	r1, r3
{
 80066a0:	4604      	mov	r4, r0
 80066a2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80066a4:	d103      	bne.n	80066ae <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80066a6:	f00f fa6b 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80066aa:	f7fe f853 	bl	8004754 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80066ae:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80066b2:	429d      	cmp	r5, r3
 80066b4:	d103      	bne.n	80066be <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80066b6:	f00f fa63 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80066ba:	f7fe f87b 	bl	80047b4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80066be:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80066c2:	42a5      	cmp	r5, r4
 80066c4:	d105      	bne.n	80066d2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80066c6:	f00f fa5b 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 80066ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 80066ce:	f7fe b8a1 	b.w	8004814 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 80066d2:	bd38      	pop	{r3, r4, r5, pc}

080066d4 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 80066d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80066d8:	ed2d 8b06 	vpush	{d8-d10}
 80066dc:	4604      	mov	r4, r0
 80066de:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 80066e0:	46a3      	mov	fp, r4
 80066e2:	2500      	movs	r5, #0
 80066e4:	f010 fecc 	bl	8017480 <_ZN8touchgfx6ScreenC1Ev>
 80066e8:	4b66      	ldr	r3, [pc, #408]	; (8006884 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 80066ea:	63e5      	str	r5, [r4, #60]	; 0x3c
 80066ec:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80066f0:	2226      	movs	r2, #38	; 0x26
 80066f2:	4629      	mov	r1, r5
 80066f4:	4658      	mov	r0, fp
 80066f6:	f024 fba6 	bl	802ae46 <memset>
 80066fa:	4658      	mov	r0, fp
 80066fc:	f7fc fc74 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 8006700:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006704:	26ff      	movs	r6, #255	; 0xff
 8006706:	4b60      	ldr	r3, [pc, #384]	; (8006888 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8006708:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800670a:	2226      	movs	r2, #38	; 0x26
 800670c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006710:	4629      	mov	r1, r5
 8006712:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006716:	4650      	mov	r0, sl
 8006718:	66a5      	str	r5, [r4, #104]	; 0x68
 800671a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800671e:	f024 fb92 	bl	802ae46 <memset>
 8006722:	4650      	mov	r0, sl
 8006724:	f7fc fc60 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 8006728:	4b58      	ldr	r3, [pc, #352]	; (800688c <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 800672a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800672c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006730:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006734:	a90a      	add	r1, sp, #40	; 0x28
 8006736:	4650      	mov	r0, sl
 8006738:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800673c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006740:	f00c fd15 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006744:	4648      	mov	r0, r9
 8006746:	f7fc fc61 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800674a:	4b51      	ldr	r3, [pc, #324]	; (8006890 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 800674c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006750:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006754:	4618      	mov	r0, r3
 8006756:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800675a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800675e:	ee08 3a90 	vmov	s17, r3
 8006762:	f7fc fc53 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8006766:	4638      	mov	r0, r7
 8006768:	f00b fbca 	bl	8011f00 <_ZN8touchgfx4LineC1Ev>
 800676c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006770:	4618      	mov	r0, r3
 8006772:	9303      	str	r3, [sp, #12]
 8006774:	f7fc fa38 	bl	8002be8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006778:	4b46      	ldr	r3, [pc, #280]	; (8006894 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 800677a:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800677e:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8006782:	3324      	adds	r3, #36	; 0x24
 8006784:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006788:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 800678c:	4640      	mov	r0, r8
 800678e:	f7fc fc3d 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8006792:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006796:	4618      	mov	r0, r3
 8006798:	ee08 3a10 	vmov	s16, r3
 800679c:	f7fc fc36 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80067a0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80067a4:	4618      	mov	r0, r3
 80067a6:	ee09 3a10 	vmov	s18, r3
 80067aa:	f00c fe21 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80067ae:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80067b2:	4618      	mov	r0, r3
 80067b4:	ee09 3a90 	vmov	s19, r3
 80067b8:	f00c fe1a 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80067bc:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80067c0:	4618      	mov	r0, r3
 80067c2:	ee0a 3a10 	vmov	s20, r3
 80067c6:	f00c fe13 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80067ca:	4a33      	ldr	r2, [pc, #204]	; (8006898 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 80067cc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80067d0:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80067d4:	4a31      	ldr	r2, [pc, #196]	; (800689c <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80067d6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80067da:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80067de:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80067e2:	f00d fcc1 	bl	8014168 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80067e6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80067ea:	462a      	mov	r2, r5
 80067ec:	4658      	mov	r0, fp
 80067ee:	9300      	str	r3, [sp, #0]
 80067f0:	4629      	mov	r1, r5
 80067f2:	23f0      	movs	r3, #240	; 0xf0
 80067f4:	f7fc fbe4 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80067f8:	1d26      	adds	r6, r4, #4
        color = newColor;
 80067fa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80067fe:	66a3      	str	r3, [r4, #104]	; 0x68
 8006800:	4659      	mov	r1, fp
 8006802:	4630      	mov	r0, r6
 8006804:	f009 ff24 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006808:	462a      	mov	r2, r5
 800680a:	4650      	mov	r0, sl
 800680c:	4629      	mov	r1, r5
 800680e:	f7fc fbca 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8006812:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006814:	4650      	mov	r0, sl
 8006816:	a90a      	add	r1, sp, #40	; 0x28
 8006818:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800681c:	f00c fca7 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006820:	4651      	mov	r1, sl
 8006822:	4630      	mov	r0, r6
 8006824:	f009 ff14 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006828:	f44f 729a 	mov.w	r2, #308	; 0x134
 800682c:	2156      	movs	r1, #86	; 0x56
 800682e:	4648      	mov	r0, r9
 8006830:	f7fc fbb9 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006834:	f04f 33ff 	mov.w	r3, #4294967295
 8006838:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800683c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006840:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006844:	f10d 0b10 	add.w	fp, sp, #16
 8006848:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800684c:	4649      	mov	r1, r9
 800684e:	4658      	mov	r0, fp
 8006850:	4798      	blx	r3
 8006852:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006856:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800685a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800685e:	4b10      	ldr	r3, [pc, #64]	; (80068a0 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8006860:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8006862:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006866:	b92b      	cbnz	r3, 8006874 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8006868:	4b0e      	ldr	r3, [pc, #56]	; (80068a4 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 800686a:	4a0f      	ldr	r2, [pc, #60]	; (80068a8 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 800686c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800686e:	480f      	ldr	r0, [pc, #60]	; (80068ac <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8006870:	f024 f8e4 	bl	802aa3c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006874:	4b0e      	ldr	r3, [pc, #56]	; (80068b0 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006876:	881b      	ldrh	r3, [r3, #0]
 8006878:	2b2b      	cmp	r3, #43	; 0x2b
 800687a:	d81d      	bhi.n	80068b8 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 800687c:	4b0d      	ldr	r3, [pc, #52]	; (80068b4 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 800687e:	4a0a      	ldr	r2, [pc, #40]	; (80068a8 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006880:	2161      	movs	r1, #97	; 0x61
 8006882:	e7f4      	b.n	800686e <_ZN19MeasurementViewBaseC1Ev+0x19a>
 8006884:	0802e01c 	.word	0x0802e01c
 8006888:	0802ef90 	.word	0x0802ef90
 800688c:	0802f158 	.word	0x0802f158
 8006890:	0802c640 	.word	0x0802c640
 8006894:	0802ecc4 	.word	0x0802ecc4
 8006898:	0802e004 	.word	0x0802e004
 800689c:	08006699 	.word	0x08006699
 80068a0:	20012e0c 	.word	0x20012e0c
 80068a4:	0802c480 	.word	0x0802c480
 80068a8:	0802c582 	.word	0x0802c582
 80068ac:	0802c4fd 	.word	0x0802c4fd
 80068b0:	20012e10 	.word	0x20012e10
 80068b4:	0802c544 	.word	0x0802c544
        return texts->getText(typedTextId);
 80068b8:	4b95      	ldr	r3, [pc, #596]	; (8006b10 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 80068ba:	212b      	movs	r1, #43	; 0x2b
 80068bc:	6818      	ldr	r0, [r3, #0]
 80068be:	f002 fb55 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 80068c2:	4a94      	ldr	r2, [pc, #592]	; (8006b14 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 80068c4:	4603      	mov	r3, r0
 80068c6:	2104      	movs	r1, #4
 80068c8:	4650      	mov	r0, sl
 80068ca:	f012 fac9 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80068ce:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80068d2:	4648      	mov	r0, r9
 80068d4:	f00c f850 	bl	8012978 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80068d8:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006b18 <_ZN19MeasurementViewBaseC1Ev+0x444>
 80068dc:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80068e0:	232c      	movs	r3, #44	; 0x2c
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 80068e2:	a90a      	add	r1, sp, #40	; 0x28
 80068e4:	4648      	mov	r0, r9
 80068e6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80068ea:	f00c f865 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80068ee:	4649      	mov	r1, r9
 80068f0:	4630      	mov	r0, r6
 80068f2:	f009 fead 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 80068f6:	223c      	movs	r2, #60	; 0x3c
 80068f8:	ee18 0a90 	vmov	r0, s17
 80068fc:	213d      	movs	r1, #61	; 0x3d
 80068fe:	f7fc fb52 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006902:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006906:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 800690a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800690e:	4658      	mov	r0, fp
        linespace = space;
 8006910:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006914:	f00b fdb6 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006918:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800691c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006920:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006924:	2339      	movs	r3, #57	; 0x39
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8006926:	ee18 0a90 	vmov	r0, s17
 800692a:	a90a      	add	r1, sp, #40	; 0x28
 800692c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006930:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006934:	f00c f840 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006938:	ee18 1a90 	vmov	r1, s17
 800693c:	4630      	mov	r0, r6
 800693e:	f009 fe87 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006942:	230a      	movs	r3, #10
 8006944:	9300      	str	r3, [sp, #0]
 8006946:	2232      	movs	r2, #50	; 0x32
 8006948:	23f0      	movs	r3, #240	; 0xf0
 800694a:	4629      	mov	r1, r5
 800694c:	4638      	mov	r0, r7
 800694e:	f7fc fb37 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006952:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006956:	22a0      	movs	r2, #160	; 0xa0
 8006958:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 800695c:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006960:	9b03      	ldr	r3, [sp, #12]
 8006962:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006966:	4611      	mov	r1, r2
 8006968:	4638      	mov	r0, r7
 800696a:	f00b fbdf 	bl	801212c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800696e:	22a0      	movs	r2, #160	; 0xa0
 8006970:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006974:	4638      	mov	r0, r7
 8006976:	f00b fbe4 	bl	8012142 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800697a:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 800697e:	2b20      	cmp	r3, #32
 8006980:	d005      	beq.n	800698e <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8006982:	2320      	movs	r3, #32
 8006984:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006988:	4638      	mov	r0, r7
 800698a:	f00b fad9 	bl	8011f40 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800698e:	4638      	mov	r0, r7
 8006990:	2101      	movs	r1, #1
 8006992:	f00b fbe1 	bl	8012158 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006996:	4639      	mov	r1, r7
 8006998:	4630      	mov	r0, r6
 800699a:	f009 fe59 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800699e:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 80069a2:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 80069a4:	2223      	movs	r2, #35	; 0x23
 80069a6:	4640      	mov	r0, r8
        linespace = space;
 80069a8:	f04f 0a00 	mov.w	sl, #0
 80069ac:	2145      	movs	r1, #69	; 0x45
 80069ae:	f7fc fafa 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80069b2:	4641      	mov	r1, r8
 80069b4:	4638      	mov	r0, r7
        color = newColor;
 80069b6:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 80069ba:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80069be:	f00b fd61 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069c2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80069c6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80069ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069ce:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006b18 <_ZN19MeasurementViewBaseC1Ev+0x444>
 80069d2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80069d6:	235e      	movs	r3, #94	; 0x5e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 80069d8:	a90a      	add	r1, sp, #40	; 0x28
 80069da:	4640      	mov	r0, r8
 80069dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069e0:	f00b ffea 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069e4:	4641      	mov	r1, r8
 80069e6:	4630      	mov	r0, r6
 80069e8:	f009 fe32 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80069ec:	ee18 0a10 	vmov	r0, s16
 80069f0:	220c      	movs	r2, #12
 80069f2:	2136      	movs	r1, #54	; 0x36
 80069f4:	f7fc fad7 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80069f8:	ee18 1a10 	vmov	r1, s16
 80069fc:	4638      	mov	r0, r7
        color = newColor;
 80069fe:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006a02:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006a06:	f00b fd3d 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a0a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006a0e:	ee18 3a10 	vmov	r3, s16
 8006a12:	333c      	adds	r3, #60	; 0x3c
 8006a14:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a18:	235f      	movs	r3, #95	; 0x5f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8006a1a:	ee18 0a10 	vmov	r0, s16
 8006a1e:	a90a      	add	r1, sp, #40	; 0x28
 8006a20:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a24:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a28:	f00b ffc6 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a2c:	ee18 1a10 	vmov	r1, s16
 8006a30:	4630      	mov	r0, r6
 8006a32:	f009 fe0d 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006a36:	ee19 0a10 	vmov	r0, s18
 8006a3a:	22f0      	movs	r2, #240	; 0xf0
 8006a3c:	2121      	movs	r1, #33	; 0x21
 8006a3e:	f7fc fab2 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8006a42:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a46:	aa0a      	add	r2, sp, #40	; 0x28
 8006a48:	f04f 0802 	mov.w	r8, #2
 8006a4c:	a909      	add	r1, sp, #36	; 0x24
 8006a4e:	ee19 0a10 	vmov	r0, s18
 8006a52:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006a56:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006a5a:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a5e:	f00c f990 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006a62:	235d      	movs	r3, #93	; 0x5d
 8006a64:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006a68:	3710      	adds	r7, #16
        updateTextPosition();
 8006a6a:	ee19 0a10 	vmov	r0, s18
 8006a6e:	f7fc faef 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006a72:	ee19 1a10 	vmov	r1, s18
 8006a76:	4630      	mov	r0, r6
        colorPressed = col;
 8006a78:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006a7c:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006a80:	f009 fde6 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006a84:	ee19 0a90 	vmov	r0, s19
 8006a88:	22aa      	movs	r2, #170	; 0xaa
 8006a8a:	2121      	movs	r1, #33	; 0x21
 8006a8c:	f7fc fa8b 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a90:	aa0a      	add	r2, sp, #40	; 0x28
 8006a92:	a909      	add	r1, sp, #36	; 0x24
 8006a94:	ee19 0a90 	vmov	r0, s19
 8006a98:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006a9c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006aa0:	f00c f96f 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006aa4:	235c      	movs	r3, #92	; 0x5c
 8006aa6:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006aaa:	ee19 0a90 	vmov	r0, s19
 8006aae:	f7fc facf 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006ab2:	ee19 1a90 	vmov	r1, s19
 8006ab6:	4630      	mov	r0, r6
        colorPressed = col;
 8006ab8:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006abc:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006ac0:	f009 fdc6 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006ac4:	ee1a 0a10 	vmov	r0, s20
 8006ac8:	2264      	movs	r2, #100	; 0x64
 8006aca:	2121      	movs	r1, #33	; 0x21
 8006acc:	f7fc fa6b 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006ad0:	aa0a      	add	r2, sp, #40	; 0x28
 8006ad2:	a909      	add	r1, sp, #36	; 0x24
 8006ad4:	ee1a 0a10 	vmov	r0, s20
 8006ad8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006adc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006ae0:	f00c f94f 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006ae4:	235b      	movs	r3, #91	; 0x5b
        updateTextPosition();
 8006ae6:	ee1a 0a10 	vmov	r0, s20
 8006aea:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006aee:	f7fc faaf 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006af2:	4630      	mov	r0, r6
        colorPressed = col;
 8006af4:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006af8:	ee1a 1a10 	vmov	r1, s20
 8006afc:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006b00:	f009 fda6 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006b04:	4620      	mov	r0, r4
 8006b06:	b00d      	add	sp, #52	; 0x34
 8006b08:	ecbd 8b06 	vpop	{d8-d10}
 8006b0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b10:	20012e18 	.word	0x20012e18
 8006b14:	0802c5ba 	.word	0x0802c5ba
 8006b18:	0802c630 	.word	0x0802c630

08006b1c <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8006b1c:	4770      	bx	lr

08006b1e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b1e:	4770      	bx	lr

08006b20 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006b20:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b22:	68c2      	ldr	r2, [r0, #12]
 8006b24:	6844      	ldr	r4, [r0, #4]
 8006b26:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006b28:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006b2a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006b2e:	07d2      	lsls	r2, r2, #31
 8006b30:	bf48      	it	mi
 8006b32:	5962      	ldrmi	r2, [r4, r5]
 8006b34:	689b      	ldr	r3, [r3, #8]
    }
 8006b36:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b38:	bf48      	it	mi
 8006b3a:	58d3      	ldrmi	r3, [r2, r3]
 8006b3c:	4718      	bx	r3

08006b3e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006b3e:	6843      	ldr	r3, [r0, #4]
 8006b40:	b12b      	cbz	r3, 8006b4e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006b42:	6883      	ldr	r3, [r0, #8]
 8006b44:	b92b      	cbnz	r3, 8006b52 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006b46:	68c0      	ldr	r0, [r0, #12]
 8006b48:	f000 0001 	and.w	r0, r0, #1
 8006b4c:	4770      	bx	lr
 8006b4e:	4618      	mov	r0, r3
 8006b50:	4770      	bx	lr
 8006b52:	2001      	movs	r0, #1
    }
 8006b54:	4770      	bx	lr

08006b56 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b56:	b510      	push	{r4, lr}
 8006b58:	2110      	movs	r1, #16
 8006b5a:	4604      	mov	r4, r0
 8006b5c:	f023 f887 	bl	8029c6e <_ZdlPvj>
 8006b60:	4620      	mov	r0, r4
 8006b62:	bd10      	pop	{r4, pc}

08006b64 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006b64:	b510      	push	{r4, lr}
 8006b66:	4b03      	ldr	r3, [pc, #12]	; (8006b74 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8006b68:	6003      	str	r3, [r0, #0]
 8006b6a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006b6c:	f00d fb06 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006b70:	4620      	mov	r0, r4
 8006b72:	bd10      	pop	{r4, pc}
 8006b74:	0802e068 	.word	0x0802e068

08006b78 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006b78:	b507      	push	{r0, r1, r2, lr}
 8006b7a:	4b07      	ldr	r3, [pc, #28]	; (8006b98 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8006b7c:	6003      	str	r3, [r0, #0]
 8006b7e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006b80:	f00d fafc 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006b84:	9801      	ldr	r0, [sp, #4]
 8006b86:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006b8a:	f023 f870 	bl	8029c6e <_ZdlPvj>
 8006b8e:	9801      	ldr	r0, [sp, #4]
 8006b90:	b003      	add	sp, #12
 8006b92:	f85d fb04 	ldr.w	pc, [sp], #4
 8006b96:	bf00      	nop
 8006b98:	0802e068 	.word	0x0802e068

08006b9c <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006b9c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006b9e:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006ba2:	4299      	cmp	r1, r3
{
 8006ba4:	4604      	mov	r4, r0
 8006ba6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006ba8:	d103      	bne.n	8006bb2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006baa:	f00e ffe9 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006bae:	f7fd fdf1 	bl	8004794 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8006bb2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006bb6:	429d      	cmp	r5, r3
 8006bb8:	d103      	bne.n	8006bc2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006bba:	f00e ffe1 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8006bbe:	f7fd fe59 	bl	8004874 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8006bc2:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8006bc6:	42a5      	cmp	r5, r4
 8006bc8:	d105      	bne.n	8006bd6 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006bca:	f00e ffd9 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8006bce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8006bd2:	f7fd be3f 	b.w	8004854 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8006bd6:	bd38      	pop	{r3, r4, r5, pc}

08006bd8 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8006bd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006bdc:	ed2d 8b06 	vpush	{d8-d10}
 8006be0:	4604      	mov	r4, r0
 8006be2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8006be4:	46a3      	mov	fp, r4
 8006be6:	2500      	movs	r5, #0
 8006be8:	f010 fc4a 	bl	8017480 <_ZN8touchgfx6ScreenC1Ev>
 8006bec:	4b66      	ldr	r3, [pc, #408]	; (8006d88 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8006bee:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006bf0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006bf4:	2226      	movs	r2, #38	; 0x26
 8006bf6:	4629      	mov	r1, r5
 8006bf8:	4658      	mov	r0, fp
 8006bfa:	f024 f924 	bl	802ae46 <memset>
 8006bfe:	4658      	mov	r0, fp
 8006c00:	f7fc f9f2 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 8006c04:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006c08:	26ff      	movs	r6, #255	; 0xff
 8006c0a:	4b60      	ldr	r3, [pc, #384]	; (8006d8c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8006c0c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006c0e:	2226      	movs	r2, #38	; 0x26
 8006c10:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006c14:	4629      	mov	r1, r5
 8006c16:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006c1a:	4650      	mov	r0, sl
 8006c1c:	66a5      	str	r5, [r4, #104]	; 0x68
 8006c1e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c22:	f024 f910 	bl	802ae46 <memset>
 8006c26:	4650      	mov	r0, sl
 8006c28:	f7fc f9de 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 8006c2c:	4b58      	ldr	r3, [pc, #352]	; (8006d90 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8006c2e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006c30:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006c34:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006c38:	a90a      	add	r1, sp, #40	; 0x28
 8006c3a:	4650      	mov	r0, sl
 8006c3c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006c40:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006c44:	f00c fa93 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006c48:	4648      	mov	r0, r9
 8006c4a:	f7fc f9df 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8006c4e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8006c52:	4b50      	ldr	r3, [pc, #320]	; (8006d94 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8006c54:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006c58:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006c5c:	4638      	mov	r0, r7
 8006c5e:	f00b f94f 	bl	8011f00 <_ZN8touchgfx4LineC1Ev>
 8006c62:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006c66:	4618      	mov	r0, r3
 8006c68:	9303      	str	r3, [sp, #12]
 8006c6a:	f7fb ffbd 	bl	8002be8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006c6e:	4b4a      	ldr	r3, [pc, #296]	; (8006d98 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8006c70:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006c74:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8006c78:	3324      	adds	r3, #36	; 0x24
 8006c7a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8006c7e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8006c82:	4640      	mov	r0, r8
 8006c84:	f7fc f9c2 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8006c88:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8006c8c:	4618      	mov	r0, r3
 8006c8e:	ee08 3a10 	vmov	s16, r3
 8006c92:	f7fc f9bb 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8006c96:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006c9a:	4618      	mov	r0, r3
 8006c9c:	ee08 3a90 	vmov	s17, r3
 8006ca0:	f7fc f9b4 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8006ca4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006ca8:	4618      	mov	r0, r3
 8006caa:	ee09 3a10 	vmov	s18, r3
 8006cae:	f00c fb9f 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006cb2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006cb6:	4618      	mov	r0, r3
 8006cb8:	ee09 3a90 	vmov	s19, r3
 8006cbc:	f00c fb98 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006cc0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006cc4:	4618      	mov	r0, r3
 8006cc6:	ee0a 3a10 	vmov	s20, r3
 8006cca:	f00c fb91 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006cce:	4a33      	ldr	r2, [pc, #204]	; (8006d9c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8006cd0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006cd4:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006cd8:	4a31      	ldr	r2, [pc, #196]	; (8006da0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006cda:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006cde:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006ce2:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006ce6:	f00d fa3f 	bl	8014168 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006cea:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006cee:	462a      	mov	r2, r5
 8006cf0:	4658      	mov	r0, fp
 8006cf2:	9300      	str	r3, [sp, #0]
 8006cf4:	4629      	mov	r1, r5
 8006cf6:	23f0      	movs	r3, #240	; 0xf0
 8006cf8:	f7fc f962 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006cfc:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006cfe:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006d02:	66a3      	str	r3, [r4, #104]	; 0x68
 8006d04:	4659      	mov	r1, fp
 8006d06:	4630      	mov	r0, r6
 8006d08:	f009 fca2 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006d0c:	462a      	mov	r2, r5
 8006d0e:	4650      	mov	r0, sl
 8006d10:	4629      	mov	r1, r5
 8006d12:	f7fc f948 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8006d16:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006d18:	4650      	mov	r0, sl
 8006d1a:	a90a      	add	r1, sp, #40	; 0x28
 8006d1c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006d20:	f00c fa25 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006d24:	4651      	mov	r1, sl
 8006d26:	4630      	mov	r0, r6
 8006d28:	f009 fc92 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006d2c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006d30:	2156      	movs	r1, #86	; 0x56
 8006d32:	4648      	mov	r0, r9
 8006d34:	f7fc f937 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8006d38:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006d3c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006d40:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006d44:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8006d48:	4650      	mov	r0, sl
 8006d4a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006d4e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006d52:	4649      	mov	r1, r9
 8006d54:	4798      	blx	r3
 8006d56:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8006d5a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006d5e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006d62:	4b10      	ldr	r3, [pc, #64]	; (8006da4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8006d64:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8006d66:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006d6a:	b92b      	cbnz	r3, 8006d78 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8006d6c:	4b0e      	ldr	r3, [pc, #56]	; (8006da8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8006d6e:	4a0f      	ldr	r2, [pc, #60]	; (8006dac <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006d70:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006d72:	480f      	ldr	r0, [pc, #60]	; (8006db0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8006d74:	f023 fe62 	bl	802aa3c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006d78:	4b0e      	ldr	r3, [pc, #56]	; (8006db4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006d7a:	881b      	ldrh	r3, [r3, #0]
 8006d7c:	2b26      	cmp	r3, #38	; 0x26
 8006d7e:	d81d      	bhi.n	8006dbc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8006d80:	4b0d      	ldr	r3, [pc, #52]	; (8006db8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8006d82:	4a0a      	ldr	r2, [pc, #40]	; (8006dac <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006d84:	2161      	movs	r1, #97	; 0x61
 8006d86:	e7f4      	b.n	8006d72 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8006d88:	0802e068 	.word	0x0802e068
 8006d8c:	0802ef90 	.word	0x0802ef90
 8006d90:	0802f158 	.word	0x0802f158
 8006d94:	0802c640 	.word	0x0802c640
 8006d98:	0802ecc4 	.word	0x0802ecc4
 8006d9c:	0802e050 	.word	0x0802e050
 8006da0:	08006b9d 	.word	0x08006b9d
 8006da4:	20012e0c 	.word	0x20012e0c
 8006da8:	0802c480 	.word	0x0802c480
 8006dac:	0802c582 	.word	0x0802c582
 8006db0:	0802c4fd 	.word	0x0802c4fd
 8006db4:	20012e10 	.word	0x20012e10
 8006db8:	0802c544 	.word	0x0802c544
        return texts->getText(typedTextId);
 8006dbc:	4b93      	ldr	r3, [pc, #588]	; (800700c <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8006dbe:	2126      	movs	r1, #38	; 0x26
 8006dc0:	6818      	ldr	r0, [r3, #0]
 8006dc2:	f002 f8d3 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 8006dc6:	4a92      	ldr	r2, [pc, #584]	; (8007010 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8006dc8:	4603      	mov	r3, r0
 8006dca:	2104      	movs	r1, #4
 8006dcc:	4650      	mov	r0, sl
 8006dce:	f012 f847 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8006dd2:	4648      	mov	r0, r9
        wc1 = value;
 8006dd4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006dd8:	f00b fdce 	bl	8012978 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006ddc:	4b8d      	ldr	r3, [pc, #564]	; (8007014 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8006dde:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8006de0:	a90a      	add	r1, sp, #40	; 0x28
 8006de2:	2327      	movs	r3, #39	; 0x27
 8006de4:	4648      	mov	r0, r9
 8006de6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006dea:	f00b fde5 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006dee:	4649      	mov	r1, r9
 8006df0:	4630      	mov	r0, r6
 8006df2:	f009 fc2d 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006df6:	230a      	movs	r3, #10
 8006df8:	9300      	str	r3, [sp, #0]
 8006dfa:	2232      	movs	r2, #50	; 0x32
 8006dfc:	23f0      	movs	r3, #240	; 0xf0
 8006dfe:	4629      	mov	r1, r5
 8006e00:	4638      	mov	r0, r7
 8006e02:	f7fc f8dd 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006e06:	9b03      	ldr	r3, [sp, #12]
 8006e08:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006e0c:	22a0      	movs	r2, #160	; 0xa0
 8006e0e:	4611      	mov	r1, r2
 8006e10:	4638      	mov	r0, r7
 8006e12:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006e16:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8006e1a:	f00b f987 	bl	801212c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006e1e:	22a0      	movs	r2, #160	; 0xa0
 8006e20:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006e24:	4638      	mov	r0, r7
 8006e26:	f00b f98c 	bl	8012142 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006e2a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8006e2e:	2b20      	cmp	r3, #32
 8006e30:	d005      	beq.n	8006e3e <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8006e32:	2320      	movs	r3, #32
 8006e34:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006e38:	4638      	mov	r0, r7
 8006e3a:	f00b f881 	bl	8011f40 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006e3e:	4638      	mov	r0, r7
 8006e40:	2101      	movs	r1, #1
 8006e42:	f00b f989 	bl	8012158 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006e46:	4639      	mov	r1, r7
 8006e48:	4630      	mov	r0, r6
 8006e4a:	ad04      	add	r5, sp, #16
        color = newColor;
 8006e4c:	f04f 37ff 	mov.w	r7, #4294967295
 8006e50:	f009 fbfe 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006e54:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006e58:	2223      	movs	r2, #35	; 0x23
 8006e5a:	4640      	mov	r0, r8
 8006e5c:	2145      	movs	r1, #69	; 0x45
 8006e5e:	f7fc f8a2 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006e62:	4641      	mov	r1, r8
 8006e64:	4628      	mov	r0, r5
        color = newColor;
 8006e66:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8006e6a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8006e6e:	f00b fb09 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e72:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006e76:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006e7a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e7e:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8007014 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8006e82:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006e86:	234c      	movs	r3, #76	; 0x4c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8006e88:	a90a      	add	r1, sp, #40	; 0x28
 8006e8a:	4640      	mov	r0, r8
 8006e8c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e90:	f00b fd92 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e94:	4641      	mov	r1, r8
 8006e96:	4630      	mov	r0, r6
 8006e98:	f009 fbda 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006e9c:	ee18 0a10 	vmov	r0, s16
 8006ea0:	220c      	movs	r2, #12
 8006ea2:	2136      	movs	r1, #54	; 0x36
 8006ea4:	f7fc f87f 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8006ea8:	ee18 1a10 	vmov	r1, s16
 8006eac:	4628      	mov	r0, r5
        color = newColor;
 8006eae:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8006eb2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006eb6:	f00b fae5 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006eba:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006ebe:	ee18 3a10 	vmov	r3, s16
 8006ec2:	333c      	adds	r3, #60	; 0x3c
 8006ec4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006ec8:	234b      	movs	r3, #75	; 0x4b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8006eca:	ee18 0a10 	vmov	r0, s16
 8006ece:	a90a      	add	r1, sp, #40	; 0x28
 8006ed0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006ed4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006ed8:	f00b fd6e 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006edc:	ee18 1a10 	vmov	r1, s16
 8006ee0:	4630      	mov	r0, r6
 8006ee2:	f009 fbb5 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8006ee6:	ee18 0a90 	vmov	r0, s17
 8006eea:	223c      	movs	r2, #60	; 0x3c
 8006eec:	2121      	movs	r1, #33	; 0x21
 8006eee:	f7fc f85a 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8006ef2:	ee18 1a90 	vmov	r1, s17
 8006ef6:	4628      	mov	r0, r5
        color = newColor;
 8006ef8:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006efc:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006f00:	f00b fac0 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006f04:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006f08:	ee18 3a90 	vmov	r3, s17
 8006f0c:	333c      	adds	r3, #60	; 0x3c
 8006f0e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006f12:	2335      	movs	r3, #53	; 0x35
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8006f14:	ee18 0a90 	vmov	r0, s17
 8006f18:	a90a      	add	r1, sp, #40	; 0x28
 8006f1a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006f1e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006f22:	f00b fd49 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006f26:	ee18 1a90 	vmov	r1, s17
 8006f2a:	4630      	mov	r0, r6
 8006f2c:	f009 fb90 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006f30:	ee19 0a10 	vmov	r0, s18
 8006f34:	22f0      	movs	r2, #240	; 0xf0
 8006f36:	2121      	movs	r1, #33	; 0x21
 8006f38:	f7fc f835 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8006f3c:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006f40:	aa0a      	add	r2, sp, #40	; 0x28
 8006f42:	f04f 0802 	mov.w	r8, #2
 8006f46:	a909      	add	r1, sp, #36	; 0x24
 8006f48:	ee19 0a10 	vmov	r0, s18
 8006f4c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006f50:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006f54:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006f58:	f00b ff13 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006f5c:	234a      	movs	r3, #74	; 0x4a
 8006f5e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006f62:	3510      	adds	r5, #16
        updateTextPosition();
 8006f64:	ee19 0a10 	vmov	r0, s18
 8006f68:	f7fc f872 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006f6c:	ee19 1a10 	vmov	r1, s18
 8006f70:	4630      	mov	r0, r6
        colorPressed = col;
 8006f72:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006f76:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8006f7a:	f009 fb69 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006f7e:	ee19 0a90 	vmov	r0, s19
 8006f82:	22aa      	movs	r2, #170	; 0xaa
 8006f84:	2121      	movs	r1, #33	; 0x21
 8006f86:	f7fc f80e 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006f8a:	aa0a      	add	r2, sp, #40	; 0x28
 8006f8c:	a909      	add	r1, sp, #36	; 0x24
 8006f8e:	ee19 0a90 	vmov	r0, s19
 8006f92:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006f96:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006f9a:	f00b fef2 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006f9e:	2349      	movs	r3, #73	; 0x49
 8006fa0:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006fa4:	ee19 0a90 	vmov	r0, s19
 8006fa8:	f7fc f852 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006fac:	ee19 1a90 	vmov	r1, s19
 8006fb0:	4630      	mov	r0, r6
        colorPressed = col;
 8006fb2:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8006fb6:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8006fba:	f009 fb49 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006fbe:	ee1a 0a10 	vmov	r0, s20
 8006fc2:	2264      	movs	r2, #100	; 0x64
 8006fc4:	2121      	movs	r1, #33	; 0x21
 8006fc6:	f7fb ffee 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006fca:	aa0a      	add	r2, sp, #40	; 0x28
 8006fcc:	a909      	add	r1, sp, #36	; 0x24
 8006fce:	ee1a 0a10 	vmov	r0, s20
 8006fd2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006fd6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006fda:	f00b fed2 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006fde:	2348      	movs	r3, #72	; 0x48
        updateTextPosition();
 8006fe0:	ee1a 0a10 	vmov	r0, s20
 8006fe4:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006fe8:	f7fc f832 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006fec:	4630      	mov	r0, r6
        colorPressed = col;
 8006fee:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006ff2:	ee1a 1a10 	vmov	r1, s20
 8006ff6:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006ffa:	f009 fb29 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006ffe:	4620      	mov	r0, r4
 8007000:	b00d      	add	sp, #52	; 0x34
 8007002:	ecbd 8b06 	vpop	{d8-d10}
 8007006:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800700a:	bf00      	nop
 800700c:	20012e18 	.word	0x20012e18
 8007010:	0802c5ba 	.word	0x0802c5ba
 8007014:	0802c630 	.word	0x0802c630

08007018 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007018:	4770      	bx	lr

0800701a <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800701a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800701c:	68c2      	ldr	r2, [r0, #12]
 800701e:	6844      	ldr	r4, [r0, #4]
 8007020:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007022:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007024:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007028:	07d2      	lsls	r2, r2, #31
 800702a:	bf48      	it	mi
 800702c:	5962      	ldrmi	r2, [r4, r5]
 800702e:	689b      	ldr	r3, [r3, #8]
    }
 8007030:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007032:	bf48      	it	mi
 8007034:	58d3      	ldrmi	r3, [r2, r3]
 8007036:	4718      	bx	r3

08007038 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007038:	6843      	ldr	r3, [r0, #4]
 800703a:	b12b      	cbz	r3, 8007048 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800703c:	6883      	ldr	r3, [r0, #8]
 800703e:	b92b      	cbnz	r3, 800704c <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007040:	68c0      	ldr	r0, [r0, #12]
 8007042:	f000 0001 	and.w	r0, r0, #1
 8007046:	4770      	bx	lr
 8007048:	4618      	mov	r0, r3
 800704a:	4770      	bx	lr
 800704c:	2001      	movs	r0, #1
    }
 800704e:	4770      	bx	lr

08007050 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007050:	b510      	push	{r4, lr}
 8007052:	2110      	movs	r1, #16
 8007054:	4604      	mov	r4, r0
 8007056:	f022 fe0a 	bl	8029c6e <_ZdlPvj>
 800705a:	4620      	mov	r0, r4
 800705c:	bd10      	pop	{r4, pc}

0800705e <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800705e:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8007062:	f002 b961 	b.w	8009328 <_ZN17Gauge_with_Values10initializeEv>

08007066 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007066:	3098      	adds	r0, #152	; 0x98
 8007068:	4288      	cmp	r0, r1
{
 800706a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800706c:	d105      	bne.n	800707a <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800706e:	f00e fd87 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8007072:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8007076:	f7fd bbdd 	b.w	8004834 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 800707a:	bd08      	pop	{r3, pc}

0800707c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 800707c:	b510      	push	{r4, lr}
 800707e:	4b07      	ldr	r3, [pc, #28]	; (800709c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 8007080:	6003      	str	r3, [r0, #0]
 8007082:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007084:	f00d f87a 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 8007088:	4b05      	ldr	r3, [pc, #20]	; (80070a0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 800708a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800708e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007092:	f7fe fe25 	bl	8005ce0 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8007096:	4620      	mov	r0, r4
 8007098:	bd10      	pop	{r4, pc}
 800709a:	bf00      	nop
 800709c:	0802e0b4 	.word	0x0802e0b4
 80070a0:	0802e61c 	.word	0x0802e61c

080070a4 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80070a4:	b510      	push	{r4, lr}
 80070a6:	4604      	mov	r4, r0
}
 80070a8:	f7ff ffe8 	bl	800707c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80070ac:	4620      	mov	r0, r4
 80070ae:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80070b2:	f022 fddc 	bl	8029c6e <_ZdlPvj>
 80070b6:	4620      	mov	r0, r4
 80070b8:	bd10      	pop	{r4, pc}
	...

080070bc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 80070bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80070c0:	ed2d 8b04 	vpush	{d8-d9}
 80070c4:	4604      	mov	r4, r0
 80070c6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 80070c8:	46a1      	mov	r9, r4
 80070ca:	2500      	movs	r5, #0
 80070cc:	f010 f9d8 	bl	8017480 <_ZN8touchgfx6ScreenC1Ev>
 80070d0:	4bad      	ldr	r3, [pc, #692]	; (8007388 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 80070d2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80070d4:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80070d8:	2226      	movs	r2, #38	; 0x26
 80070da:	4629      	mov	r1, r5
 80070dc:	4648      	mov	r0, r9
 80070de:	f023 feb2 	bl	802ae46 <memset>
 80070e2:	4648      	mov	r0, r9
 80070e4:	f7fb ff80 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 80070e8:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80070ec:	26ff      	movs	r6, #255	; 0xff
 80070ee:	4ba7      	ldr	r3, [pc, #668]	; (800738c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 80070f0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80070f2:	2226      	movs	r2, #38	; 0x26
 80070f4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80070f8:	4629      	mov	r1, r5
 80070fa:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80070fe:	4640      	mov	r0, r8
 8007100:	66a5      	str	r5, [r4, #104]	; 0x68
 8007102:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007106:	f023 fe9e 	bl	802ae46 <memset>
 800710a:	4640      	mov	r0, r8
 800710c:	f7fb ff6c 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 8007110:	4b9f      	ldr	r3, [pc, #636]	; (8007390 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 8007112:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007114:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007118:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800711c:	a90a      	add	r1, sp, #40	; 0x28
 800711e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8007122:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8007124:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007128:	f00c f821 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800712c:	4658      	mov	r0, fp
 800712e:	f00c f95f 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007132:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8007136:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800713a:	4618      	mov	r0, r3
 800713c:	ee08 3a90 	vmov	s17, r3
 8007140:	f7fb ff64 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8007144:	4638      	mov	r0, r7
 8007146:	f00a fedb 	bl	8011f00 <_ZN8touchgfx4LineC1Ev>
 800714a:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800714e:	4618      	mov	r0, r3
 8007150:	9303      	str	r3, [sp, #12]
 8007152:	f7fb fd49 	bl	8002be8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007156:	4b8f      	ldr	r3, [pc, #572]	; (8007394 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 8007158:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 800715c:	3324      	adds	r3, #36	; 0x24
 800715e:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8007162:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8007166:	4618      	mov	r0, r3
 8007168:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 800716c:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8007170:	ee08 3a10 	vmov	s16, r3
 8007174:	f7fb ff4a 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8007178:	4650      	mov	r0, sl
 800717a:	f7fb ff47 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 800717e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8007182:	4618      	mov	r0, r3
 8007184:	ee09 3a10 	vmov	s18, r3
 8007188:	f002 f8c4 	bl	8009314 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800718c:	4a82      	ldr	r2, [pc, #520]	; (8007398 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
 800718e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007192:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8007196:	4a81      	ldr	r2, [pc, #516]	; (800739c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007198:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800719c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80071a0:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80071a4:	f00c ffe0 	bl	8014168 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80071a8:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80071ac:	462a      	mov	r2, r5
 80071ae:	4648      	mov	r0, r9
 80071b0:	9300      	str	r3, [sp, #0]
 80071b2:	4629      	mov	r1, r5
 80071b4:	23f0      	movs	r3, #240	; 0xf0
 80071b6:	f7fb ff03 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80071ba:	1d26      	adds	r6, r4, #4
        color = newColor;
 80071bc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80071c0:	66a3      	str	r3, [r4, #104]	; 0x68
 80071c2:	4649      	mov	r1, r9
 80071c4:	4630      	mov	r0, r6
 80071c6:	f009 fa43 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80071ca:	462a      	mov	r2, r5
 80071cc:	4640      	mov	r0, r8
 80071ce:	4629      	mov	r1, r5
 80071d0:	f7fb fee9 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80071d4:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80071d6:	4640      	mov	r0, r8
 80071d8:	a90a      	add	r1, sp, #40	; 0x28
 80071da:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80071de:	f00b ffc6 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80071e2:	4641      	mov	r1, r8
 80071e4:	4630      	mov	r0, r6
 80071e6:	f009 fa33 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80071ea:	4658      	mov	r0, fp
 80071ec:	f240 1201 	movw	r2, #257	; 0x101
 80071f0:	2121      	movs	r1, #33	; 0x21
 80071f2:	f7fb fed8 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80071f6:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80071f8:	aa0a      	add	r2, sp, #40	; 0x28
 80071fa:	a909      	add	r1, sp, #36	; 0x24
 80071fc:	4658      	mov	r0, fp
 80071fe:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007202:	2302      	movs	r3, #2
 8007204:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007208:	f00b fdbb 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800720c:	2331      	movs	r3, #49	; 0x31
        updateTextPosition();
 800720e:	4658      	mov	r0, fp
 8007210:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8007214:	f7fb ff1c 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007218:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 800721c:	3314      	adds	r3, #20
        color = col;
 800721e:	f04f 39ff 	mov.w	r9, #4294967295
 8007222:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007226:	4659      	mov	r1, fp
 8007228:	4630      	mov	r0, r6
        colorPressed = col;
 800722a:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800722e:	f009 fa0f 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007232:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8007236:	223c      	movs	r2, #60	; 0x3c
 8007238:	ee18 0a90 	vmov	r0, s17
 800723c:	2117      	movs	r1, #23
 800723e:	f7fb feb2 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8007242:	ee18 1a90 	vmov	r1, s17
 8007246:	4640      	mov	r0, r8
        color = newColor;
 8007248:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 800724c:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007250:	f00b f918 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007254:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007258:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800725c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007260:	f04f 0b32 	mov.w	fp, #50	; 0x32
 8007264:	4b4e      	ldr	r3, [pc, #312]	; (80073a0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e4>)
 8007266:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8007268:	ee18 0a90 	vmov	r0, s17
 800726c:	a90a      	add	r1, sp, #40	; 0x28
 800726e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8007272:	f00b fba1 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007276:	ee18 1a90 	vmov	r1, s17
 800727a:	4630      	mov	r0, r6
 800727c:	f009 f9e8 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007280:	230a      	movs	r3, #10
 8007282:	9300      	str	r3, [sp, #0]
 8007284:	465a      	mov	r2, fp
 8007286:	23f0      	movs	r3, #240	; 0xf0
 8007288:	4629      	mov	r1, r5
 800728a:	4638      	mov	r0, r7
 800728c:	f7fb fe98 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007290:	9b03      	ldr	r3, [sp, #12]
 8007292:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007296:	22a0      	movs	r2, #160	; 0xa0
 8007298:	4611      	mov	r1, r2
 800729a:	4638      	mov	r0, r7
 800729c:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80072a0:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80072a4:	f00a ff42 	bl	801212c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80072a8:	22a0      	movs	r2, #160	; 0xa0
 80072aa:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80072ae:	4638      	mov	r0, r7
 80072b0:	f00a ff47 	bl	8012142 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80072b4:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80072b8:	2b20      	cmp	r3, #32
 80072ba:	d005      	beq.n	80072c8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x20c>
        lineWidthQ5 = widthQ5;
 80072bc:	2320      	movs	r3, #32
 80072be:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80072c2:	4638      	mov	r0, r7
 80072c4:	f00a fe3c 	bl	8011f40 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80072c8:	4638      	mov	r0, r7
 80072ca:	2101      	movs	r1, #1
 80072cc:	f00a ff44 	bl	8012158 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80072d0:	4639      	mov	r1, r7
 80072d2:	4630      	mov	r0, r6
 80072d4:	f009 f9bc 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80072d8:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 80072da:	ee18 0a10 	vmov	r0, s16
 80072de:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 80072e0:	f04f 39ff 	mov.w	r9, #4294967295
 80072e4:	2145      	movs	r1, #69	; 0x45
 80072e6:	f7fb fe5e 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80072ea:	ee18 1a10 	vmov	r1, s16
 80072ee:	4640      	mov	r0, r8
        color = newColor;
 80072f0:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 80072f4:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80072f8:	f00b f8c4 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80072fc:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007300:	ee18 3a10 	vmov	r3, s16
 8007304:	333c      	adds	r3, #60	; 0x3c
 8007306:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800730a:	4f25      	ldr	r7, [pc, #148]	; (80073a0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e4>)
 800730c:	970a      	str	r7, [sp, #40]	; 0x28
 800730e:	2333      	movs	r3, #51	; 0x33
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8007310:	ee18 0a10 	vmov	r0, s16
 8007314:	a90a      	add	r1, sp, #40	; 0x28
 8007316:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800731a:	f00b fb4d 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800731e:	ee18 1a10 	vmov	r1, s16
 8007322:	4630      	mov	r0, r6
 8007324:	f009 f994 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007328:	220c      	movs	r2, #12
 800732a:	4650      	mov	r0, sl
 800732c:	2136      	movs	r1, #54	; 0x36
 800732e:	f7fb fe3a 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8007332:	4651      	mov	r1, sl
 8007334:	4640      	mov	r0, r8
        color = newColor;
 8007336:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800733a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800733e:	f00b f8a1 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007342:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007346:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800734a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800734e:	2334      	movs	r3, #52	; 0x34
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8007350:	a90a      	add	r1, sp, #40	; 0x28
 8007352:	4650      	mov	r0, sl
 8007354:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007358:	970a      	str	r7, [sp, #40]	; 0x28
 800735a:	f00b fb2d 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800735e:	4651      	mov	r1, sl
 8007360:	4630      	mov	r0, r6
 8007362:	f009 f975 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8007366:	ee19 0a10 	vmov	r0, s18
 800736a:	224e      	movs	r2, #78	; 0x4e
 800736c:	4629      	mov	r1, r5
 800736e:	f7fb fe1a 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8007372:	4630      	mov	r0, r6
 8007374:	ee19 1a10 	vmov	r1, s18
 8007378:	f009 f96a 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800737c:	4620      	mov	r0, r4
 800737e:	b00d      	add	sp, #52	; 0x34
 8007380:	ecbd 8b04 	vpop	{d8-d9}
 8007384:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007388:	0802e0b4 	.word	0x0802e0b4
 800738c:	0802ef90 	.word	0x0802ef90
 8007390:	0802f158 	.word	0x0802f158
 8007394:	0802ecc4 	.word	0x0802ecc4
 8007398:	0802e09c 	.word	0x0802e09c
 800739c:	08007067 	.word	0x08007067
 80073a0:	0802c630 	.word	0x0802c630

080073a4 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80073a4:	4770      	bx	lr

080073a6 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80073a6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80073a8:	68c2      	ldr	r2, [r0, #12]
 80073aa:	6844      	ldr	r4, [r0, #4]
 80073ac:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80073ae:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80073b0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80073b4:	07d2      	lsls	r2, r2, #31
 80073b6:	bf48      	it	mi
 80073b8:	5962      	ldrmi	r2, [r4, r5]
 80073ba:	689b      	ldr	r3, [r3, #8]
    }
 80073bc:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80073be:	bf48      	it	mi
 80073c0:	58d3      	ldrmi	r3, [r2, r3]
 80073c2:	4718      	bx	r3

080073c4 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80073c4:	6843      	ldr	r3, [r0, #4]
 80073c6:	b12b      	cbz	r3, 80073d4 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80073c8:	6883      	ldr	r3, [r0, #8]
 80073ca:	b92b      	cbnz	r3, 80073d8 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80073cc:	68c0      	ldr	r0, [r0, #12]
 80073ce:	f000 0001 	and.w	r0, r0, #1
 80073d2:	4770      	bx	lr
 80073d4:	4618      	mov	r0, r3
 80073d6:	4770      	bx	lr
 80073d8:	2001      	movs	r0, #1
    }
 80073da:	4770      	bx	lr

080073dc <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80073dc:	b510      	push	{r4, lr}
 80073de:	2110      	movs	r1, #16
 80073e0:	4604      	mov	r4, r0
 80073e2:	f022 fc44 	bl	8029c6e <_ZdlPvj>
 80073e6:	4620      	mov	r0, r4
 80073e8:	bd10      	pop	{r4, pc}

080073ea <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80073ea:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80073ee:	f001 bf9b 	b.w	8009328 <_ZN17Gauge_with_Values10initializeEv>

080073f2 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80073f2:	3098      	adds	r0, #152	; 0x98
 80073f4:	4288      	cmp	r0, r1
{
 80073f6:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80073f8:	d105      	bne.n	8007406 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80073fa:	f00e fbc1 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80073fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8007402:	f7fd ba17 	b.w	8004834 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8007406:	bd08      	pop	{r3, pc}

08007408 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8007408:	b510      	push	{r4, lr}
 800740a:	4b07      	ldr	r3, [pc, #28]	; (8007428 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 800740c:	6003      	str	r3, [r0, #0]
 800740e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007410:	f00c feb4 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8007414:	4b05      	ldr	r3, [pc, #20]	; (800742c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 8007416:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800741a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800741e:	f7fe fc5f 	bl	8005ce0 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8007422:	4620      	mov	r0, r4
 8007424:	bd10      	pop	{r4, pc}
 8007426:	bf00      	nop
 8007428:	0802e100 	.word	0x0802e100
 800742c:	0802e61c 	.word	0x0802e61c

08007430 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8007430:	b510      	push	{r4, lr}
 8007432:	4604      	mov	r4, r0
}
 8007434:	f7ff ffe8 	bl	8007408 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8007438:	4620      	mov	r0, r4
 800743a:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800743e:	f022 fc16 	bl	8029c6e <_ZdlPvj>
 8007442:	4620      	mov	r0, r4
 8007444:	bd10      	pop	{r4, pc}
	...

08007448 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8007448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800744c:	ed2d 8b04 	vpush	{d8-d9}
 8007450:	4604      	mov	r4, r0
 8007452:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8007454:	46a1      	mov	r9, r4
 8007456:	2500      	movs	r5, #0
 8007458:	f010 f812 	bl	8017480 <_ZN8touchgfx6ScreenC1Ev>
 800745c:	4bac      	ldr	r3, [pc, #688]	; (8007710 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 800745e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007460:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8007464:	2226      	movs	r2, #38	; 0x26
 8007466:	4629      	mov	r1, r5
 8007468:	4648      	mov	r0, r9
 800746a:	f023 fcec 	bl	802ae46 <memset>
 800746e:	4648      	mov	r0, r9
 8007470:	f7fb fdba 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 8007474:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007478:	26ff      	movs	r6, #255	; 0xff
 800747a:	4ba6      	ldr	r3, [pc, #664]	; (8007714 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 800747c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800747e:	2226      	movs	r2, #38	; 0x26
 8007480:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007484:	4629      	mov	r1, r5
 8007486:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800748a:	4640      	mov	r0, r8
 800748c:	66a5      	str	r5, [r4, #104]	; 0x68
 800748e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007492:	f023 fcd8 	bl	802ae46 <memset>
 8007496:	4640      	mov	r0, r8
 8007498:	f7fb fda6 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 800749c:	4b9e      	ldr	r3, [pc, #632]	; (8007718 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 800749e:	66e3      	str	r3, [r4, #108]	; 0x6c
 80074a0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80074a4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80074a8:	a90a      	add	r1, sp, #40	; 0x28
 80074aa:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80074ac:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80074b0:	f00b fe5d 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80074b4:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80074b8:	4618      	mov	r0, r3
 80074ba:	ee08 3a10 	vmov	s16, r3
 80074be:	f00b ff97 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80074c2:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80074c6:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80074ca:	4618      	mov	r0, r3
 80074cc:	ee08 3a90 	vmov	s17, r3
 80074d0:	f7fb fd9c 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80074d4:	4638      	mov	r0, r7
 80074d6:	f00a fd13 	bl	8011f00 <_ZN8touchgfx4LineC1Ev>
 80074da:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80074de:	4618      	mov	r0, r3
 80074e0:	9303      	str	r3, [sp, #12]
 80074e2:	f7fb fb81 	bl	8002be8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80074e6:	4b8d      	ldr	r3, [pc, #564]	; (800771c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 80074e8:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80074ec:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 80074f0:	3324      	adds	r3, #36	; 0x24
 80074f2:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80074f6:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80074fa:	4658      	mov	r0, fp
 80074fc:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8007500:	f7fb fd84 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8007504:	4650      	mov	r0, sl
 8007506:	f7fb fd81 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 800750a:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800750e:	4618      	mov	r0, r3
 8007510:	ee09 3a10 	vmov	s18, r3
 8007514:	f001 fefe 	bl	8009314 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007518:	4a81      	ldr	r2, [pc, #516]	; (8007720 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 800751a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800751e:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8007522:	4a80      	ldr	r2, [pc, #512]	; (8007724 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007524:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007528:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 800752c:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8007530:	f00c fe1a 	bl	8014168 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007534:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007538:	462a      	mov	r2, r5
 800753a:	4648      	mov	r0, r9
 800753c:	9300      	str	r3, [sp, #0]
 800753e:	4629      	mov	r1, r5
 8007540:	23f0      	movs	r3, #240	; 0xf0
 8007542:	f7fb fd3d 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007546:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007548:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800754c:	66a3      	str	r3, [r4, #104]	; 0x68
 800754e:	4649      	mov	r1, r9
 8007550:	4630      	mov	r0, r6
 8007552:	f009 f87d 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007556:	462a      	mov	r2, r5
 8007558:	4640      	mov	r0, r8
 800755a:	4629      	mov	r1, r5
 800755c:	f7fb fd23 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8007560:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007562:	4640      	mov	r0, r8
 8007564:	a90a      	add	r1, sp, #40	; 0x28
 8007566:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800756a:	f00b fe00 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800756e:	4641      	mov	r1, r8
 8007570:	4630      	mov	r0, r6
 8007572:	f009 f86d 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007576:	ee18 0a10 	vmov	r0, s16
 800757a:	f240 1201 	movw	r2, #257	; 0x101
 800757e:	2121      	movs	r1, #33	; 0x21
 8007580:	f7fb fd11 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8007584:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007586:	aa0a      	add	r2, sp, #40	; 0x28
 8007588:	a909      	add	r1, sp, #36	; 0x24
 800758a:	ee18 0a10 	vmov	r0, s16
 800758e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007592:	2302      	movs	r3, #2
 8007594:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007598:	f00b fbf3 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800759c:	232d      	movs	r3, #45	; 0x2d
        updateTextPosition();
 800759e:	ee18 0a10 	vmov	r0, s16
 80075a2:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80075a6:	f7fb fd53 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80075aa:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80075ae:	3314      	adds	r3, #20
        color = col;
 80075b0:	f04f 39ff 	mov.w	r9, #4294967295
 80075b4:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80075b8:	ee18 1a10 	vmov	r1, s16
 80075bc:	4630      	mov	r0, r6
        colorPressed = col;
 80075be:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80075c2:	f009 f845 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80075c6:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80075ca:	223c      	movs	r2, #60	; 0x3c
 80075cc:	ee18 0a90 	vmov	r0, s17
 80075d0:	2117      	movs	r1, #23
 80075d2:	f7fb fce8 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80075d6:	ee18 1a90 	vmov	r1, s17
 80075da:	4640      	mov	r0, r8
        color = newColor;
 80075dc:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80075e0:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80075e4:	f00a ff4e 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075e8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80075ec:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80075f0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80075f4:	4b4c      	ldr	r3, [pc, #304]	; (8007728 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80075f6:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 80075f8:	ee18 0a90 	vmov	r0, s17
 80075fc:	232e      	movs	r3, #46	; 0x2e
 80075fe:	a90a      	add	r1, sp, #40	; 0x28
 8007600:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007604:	f00b f9d8 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007608:	ee18 1a90 	vmov	r1, s17
 800760c:	4630      	mov	r0, r6
 800760e:	f009 f81f 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007612:	230a      	movs	r3, #10
 8007614:	9300      	str	r3, [sp, #0]
 8007616:	2232      	movs	r2, #50	; 0x32
 8007618:	23f0      	movs	r3, #240	; 0xf0
 800761a:	4629      	mov	r1, r5
 800761c:	4638      	mov	r0, r7
 800761e:	f7fb fccf 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007622:	9b03      	ldr	r3, [sp, #12]
 8007624:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007628:	22a0      	movs	r2, #160	; 0xa0
 800762a:	4611      	mov	r1, r2
 800762c:	4638      	mov	r0, r7
 800762e:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007632:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8007636:	f00a fd79 	bl	801212c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800763a:	22a0      	movs	r2, #160	; 0xa0
 800763c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007640:	4638      	mov	r0, r7
 8007642:	f00a fd7e 	bl	8012142 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007646:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 800764a:	2b20      	cmp	r3, #32
 800764c:	d005      	beq.n	800765a <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 800764e:	2320      	movs	r3, #32
 8007650:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8007654:	4638      	mov	r0, r7
 8007656:	f00a fc73 	bl	8011f40 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800765a:	4638      	mov	r0, r7
 800765c:	2101      	movs	r1, #1
 800765e:	f00a fd7b 	bl	8012158 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007662:	4639      	mov	r1, r7
 8007664:	4630      	mov	r0, r6
 8007666:	f008 fff3 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800766a:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 800766c:	2223      	movs	r2, #35	; 0x23
 800766e:	4658      	mov	r0, fp
        color = newColor;
 8007670:	f04f 39ff 	mov.w	r9, #4294967295
 8007674:	2145      	movs	r1, #69	; 0x45
 8007676:	f7fb fc96 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800767a:	4659      	mov	r1, fp
 800767c:	4640      	mov	r0, r8
        color = newColor;
 800767e:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 8007682:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007686:	f00a fefd 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800768a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800768e:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8007692:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007696:	4f24      	ldr	r7, [pc, #144]	; (8007728 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 8007698:	970a      	str	r7, [sp, #40]	; 0x28
 800769a:	232f      	movs	r3, #47	; 0x2f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 800769c:	a90a      	add	r1, sp, #40	; 0x28
 800769e:	4658      	mov	r0, fp
 80076a0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80076a4:	f00b f988 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80076a8:	4659      	mov	r1, fp
 80076aa:	4630      	mov	r0, r6
 80076ac:	f008 ffd0 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80076b0:	220c      	movs	r2, #12
 80076b2:	4650      	mov	r0, sl
 80076b4:	2136      	movs	r1, #54	; 0x36
 80076b6:	f7fb fc76 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80076ba:	4651      	mov	r1, sl
 80076bc:	4640      	mov	r0, r8
        color = newColor;
 80076be:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 80076c2:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80076c6:	f00a fedd 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80076ca:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80076ce:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80076d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80076d6:	2330      	movs	r3, #48	; 0x30
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 80076d8:	a90a      	add	r1, sp, #40	; 0x28
 80076da:	4650      	mov	r0, sl
 80076dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80076e0:	970a      	str	r7, [sp, #40]	; 0x28
 80076e2:	f00b f969 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80076e6:	4651      	mov	r1, sl
 80076e8:	4630      	mov	r0, r6
 80076ea:	f008 ffb1 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80076ee:	ee19 0a10 	vmov	r0, s18
 80076f2:	224e      	movs	r2, #78	; 0x4e
 80076f4:	4629      	mov	r1, r5
 80076f6:	f7fb fc56 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80076fa:	4630      	mov	r0, r6
 80076fc:	ee19 1a10 	vmov	r1, s18
 8007700:	f008 ffa6 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007704:	4620      	mov	r0, r4
 8007706:	b00d      	add	sp, #52	; 0x34
 8007708:	ecbd 8b04 	vpop	{d8-d9}
 800770c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007710:	0802e100 	.word	0x0802e100
 8007714:	0802ef90 	.word	0x0802ef90
 8007718:	0802f158 	.word	0x0802f158
 800771c:	0802ecc4 	.word	0x0802ecc4
 8007720:	0802e0e8 	.word	0x0802e0e8
 8007724:	080073f3 	.word	0x080073f3
 8007728:	0802c630 	.word	0x0802c630

0800772c <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 800772c:	4770      	bx	lr

0800772e <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800772e:	4770      	bx	lr

08007730 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007730:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007732:	68c2      	ldr	r2, [r0, #12]
 8007734:	6844      	ldr	r4, [r0, #4]
 8007736:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007738:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800773a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800773e:	07d2      	lsls	r2, r2, #31
 8007740:	bf48      	it	mi
 8007742:	5962      	ldrmi	r2, [r4, r5]
 8007744:	689b      	ldr	r3, [r3, #8]
    }
 8007746:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007748:	bf48      	it	mi
 800774a:	58d3      	ldrmi	r3, [r2, r3]
 800774c:	4718      	bx	r3

0800774e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800774e:	6843      	ldr	r3, [r0, #4]
 8007750:	b12b      	cbz	r3, 800775e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007752:	6883      	ldr	r3, [r0, #8]
 8007754:	b92b      	cbnz	r3, 8007762 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007756:	68c0      	ldr	r0, [r0, #12]
 8007758:	f000 0001 	and.w	r0, r0, #1
 800775c:	4770      	bx	lr
 800775e:	4618      	mov	r0, r3
 8007760:	4770      	bx	lr
 8007762:	2001      	movs	r0, #1
    }
 8007764:	4770      	bx	lr

08007766 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007766:	b510      	push	{r4, lr}
 8007768:	2110      	movs	r1, #16
 800776a:	4604      	mov	r4, r0
 800776c:	f022 fa7f 	bl	8029c6e <_ZdlPvj>
 8007770:	4620      	mov	r0, r4
 8007772:	bd10      	pop	{r4, pc}

08007774 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007774:	b510      	push	{r4, lr}
 8007776:	4b03      	ldr	r3, [pc, #12]	; (8007784 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8007778:	6003      	str	r3, [r0, #0]
 800777a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800777c:	f00c fcfe 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007780:	4620      	mov	r0, r4
 8007782:	bd10      	pop	{r4, pc}
 8007784:	0802e14c 	.word	0x0802e14c

08007788 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007788:	b507      	push	{r0, r1, r2, lr}
 800778a:	4b07      	ldr	r3, [pc, #28]	; (80077a8 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 800778c:	6003      	str	r3, [r0, #0]
 800778e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007790:	f00c fcf4 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007794:	9801      	ldr	r0, [sp, #4]
 8007796:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800779a:	f022 fa68 	bl	8029c6e <_ZdlPvj>
 800779e:	9801      	ldr	r0, [sp, #4]
 80077a0:	b003      	add	sp, #12
 80077a2:	f85d fb04 	ldr.w	pc, [sp], #4
 80077a6:	bf00      	nop
 80077a8:	0802e14c 	.word	0x0802e14c

080077ac <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80077ac:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80077ae:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80077b2:	4299      	cmp	r1, r3
{
 80077b4:	4604      	mov	r4, r0
 80077b6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80077b8:	d103      	bne.n	80077c2 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80077ba:	f00e f9e1 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80077be:	f7fc ffe9 	bl	8004794 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80077c2:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80077c6:	429d      	cmp	r5, r3
 80077c8:	d103      	bne.n	80077d2 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80077ca:	f00e f9d9 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 80077ce:	f7fd f801 	bl	80047d4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80077d2:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80077d6:	42a5      	cmp	r5, r4
 80077d8:	d105      	bne.n	80077e6 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80077da:	f00e f9d1 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 80077de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 80077e2:	f7fd b807 	b.w	80047f4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 80077e6:	bd38      	pop	{r3, r4, r5, pc}

080077e8 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 80077e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80077ec:	ed2d 8b06 	vpush	{d8-d10}
 80077f0:	4604      	mov	r4, r0
 80077f2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 80077f4:	46a3      	mov	fp, r4
 80077f6:	2500      	movs	r5, #0
 80077f8:	f00f fe42 	bl	8017480 <_ZN8touchgfx6ScreenC1Ev>
 80077fc:	4b66      	ldr	r3, [pc, #408]	; (8007998 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 80077fe:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007800:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007804:	2226      	movs	r2, #38	; 0x26
 8007806:	4629      	mov	r1, r5
 8007808:	4658      	mov	r0, fp
 800780a:	f023 fb1c 	bl	802ae46 <memset>
 800780e:	4658      	mov	r0, fp
 8007810:	f7fb fbea 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 8007814:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007818:	26ff      	movs	r6, #255	; 0xff
 800781a:	4b60      	ldr	r3, [pc, #384]	; (800799c <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 800781c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800781e:	2226      	movs	r2, #38	; 0x26
 8007820:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007824:	4629      	mov	r1, r5
 8007826:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800782a:	4650      	mov	r0, sl
 800782c:	66a5      	str	r5, [r4, #104]	; 0x68
 800782e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007832:	f023 fb08 	bl	802ae46 <memset>
 8007836:	4650      	mov	r0, sl
 8007838:	f7fb fbd6 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 800783c:	4b58      	ldr	r3, [pc, #352]	; (80079a0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 800783e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007840:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007844:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007848:	a90a      	add	r1, sp, #40	; 0x28
 800784a:	4650      	mov	r0, sl
 800784c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007850:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007854:	f00b fc8b 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007858:	4648      	mov	r0, r9
 800785a:	f7fb fbd7 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800785e:	4b51      	ldr	r3, [pc, #324]	; (80079a4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8007860:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007864:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007868:	4618      	mov	r0, r3
 800786a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800786e:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8007872:	ee08 3a90 	vmov	s17, r3
 8007876:	f7fb fbc9 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 800787a:	4638      	mov	r0, r7
 800787c:	f00a fb40 	bl	8011f00 <_ZN8touchgfx4LineC1Ev>
 8007880:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007884:	4618      	mov	r0, r3
 8007886:	9303      	str	r3, [sp, #12]
 8007888:	f7fb f9ae 	bl	8002be8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800788c:	4b46      	ldr	r3, [pc, #280]	; (80079a8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 800788e:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8007892:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007896:	3324      	adds	r3, #36	; 0x24
 8007898:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 800789c:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80078a0:	4640      	mov	r0, r8
 80078a2:	f7fb fbb3 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80078a6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80078aa:	4618      	mov	r0, r3
 80078ac:	ee08 3a10 	vmov	s16, r3
 80078b0:	f7fb fbac 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80078b4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80078b8:	4618      	mov	r0, r3
 80078ba:	ee09 3a10 	vmov	s18, r3
 80078be:	f00b fd97 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80078c2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80078c6:	4618      	mov	r0, r3
 80078c8:	ee09 3a90 	vmov	s19, r3
 80078cc:	f00b fd90 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80078d0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80078d4:	4618      	mov	r0, r3
 80078d6:	ee0a 3a10 	vmov	s20, r3
 80078da:	f00b fd89 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80078de:	4a33      	ldr	r2, [pc, #204]	; (80079ac <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 80078e0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80078e4:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80078e8:	4a31      	ldr	r2, [pc, #196]	; (80079b0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80078ea:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80078ee:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80078f2:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80078f6:	f00c fc37 	bl	8014168 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80078fa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80078fe:	462a      	mov	r2, r5
 8007900:	4658      	mov	r0, fp
 8007902:	9300      	str	r3, [sp, #0]
 8007904:	4629      	mov	r1, r5
 8007906:	23f0      	movs	r3, #240	; 0xf0
 8007908:	f7fb fb5a 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800790c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800790e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007912:	66a3      	str	r3, [r4, #104]	; 0x68
 8007914:	4659      	mov	r1, fp
 8007916:	4630      	mov	r0, r6
 8007918:	f008 fe9a 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800791c:	462a      	mov	r2, r5
 800791e:	4650      	mov	r0, sl
 8007920:	4629      	mov	r1, r5
 8007922:	f7fb fb40 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8007926:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007928:	4650      	mov	r0, sl
 800792a:	a90a      	add	r1, sp, #40	; 0x28
 800792c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007930:	f00b fc1d 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007934:	4651      	mov	r1, sl
 8007936:	4630      	mov	r0, r6
 8007938:	f008 fe8a 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 800793c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007940:	2156      	movs	r1, #86	; 0x56
 8007942:	4648      	mov	r0, r9
 8007944:	f7fb fb2f 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007948:	f04f 33ff 	mov.w	r3, #4294967295
 800794c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007950:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007954:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007958:	f10d 0b10 	add.w	fp, sp, #16
 800795c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007960:	4649      	mov	r1, r9
 8007962:	4658      	mov	r0, fp
 8007964:	4798      	blx	r3
 8007966:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800796a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800796e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007972:	4b10      	ldr	r3, [pc, #64]	; (80079b4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8007974:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8007976:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800797a:	b92b      	cbnz	r3, 8007988 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 800797c:	4b0e      	ldr	r3, [pc, #56]	; (80079b8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 800797e:	4a0f      	ldr	r2, [pc, #60]	; (80079bc <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007980:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007982:	480f      	ldr	r0, [pc, #60]	; (80079c0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8007984:	f023 f85a 	bl	802aa3c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007988:	4b0e      	ldr	r3, [pc, #56]	; (80079c4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800798a:	881b      	ldrh	r3, [r3, #0]
 800798c:	2b28      	cmp	r3, #40	; 0x28
 800798e:	d81d      	bhi.n	80079cc <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8007990:	4b0d      	ldr	r3, [pc, #52]	; (80079c8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8007992:	4a0a      	ldr	r2, [pc, #40]	; (80079bc <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007994:	2161      	movs	r1, #97	; 0x61
 8007996:	e7f4      	b.n	8007982 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8007998:	0802e14c 	.word	0x0802e14c
 800799c:	0802ef90 	.word	0x0802ef90
 80079a0:	0802f158 	.word	0x0802f158
 80079a4:	0802c640 	.word	0x0802c640
 80079a8:	0802ecc4 	.word	0x0802ecc4
 80079ac:	0802e134 	.word	0x0802e134
 80079b0:	080077ad 	.word	0x080077ad
 80079b4:	20012e0c 	.word	0x20012e0c
 80079b8:	0802c480 	.word	0x0802c480
 80079bc:	0802c582 	.word	0x0802c582
 80079c0:	0802c4fd 	.word	0x0802c4fd
 80079c4:	20012e10 	.word	0x20012e10
 80079c8:	0802c544 	.word	0x0802c544
        return texts->getText(typedTextId);
 80079cc:	4b95      	ldr	r3, [pc, #596]	; (8007c24 <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 80079ce:	2128      	movs	r1, #40	; 0x28
 80079d0:	6818      	ldr	r0, [r3, #0]
 80079d2:	f001 facb 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 80079d6:	4a94      	ldr	r2, [pc, #592]	; (8007c28 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 80079d8:	4603      	mov	r3, r0
 80079da:	2104      	movs	r1, #4
 80079dc:	4650      	mov	r0, sl
 80079de:	f011 fa3f 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80079e2:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80079e6:	4648      	mov	r0, r9
 80079e8:	f00a ffc6 	bl	8012978 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80079ec:	f04f 0a29 	mov.w	sl, #41	; 0x29
 80079f0:	4b8e      	ldr	r3, [pc, #568]	; (8007c2c <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 80079f2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 80079f4:	a90a      	add	r1, sp, #40	; 0x28
 80079f6:	4648      	mov	r0, r9
 80079f8:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 80079fc:	f00a ffdc 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a00:	4649      	mov	r1, r9
 8007a02:	4630      	mov	r0, r6
 8007a04:	f008 fe24 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8007a08:	ee18 0a90 	vmov	r0, s17
 8007a0c:	223c      	movs	r2, #60	; 0x3c
 8007a0e:	4651      	mov	r1, sl
 8007a10:	f7fb fac9 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007a14:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8007a18:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8007a1c:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007a20:	4658      	mov	r0, fp
        linespace = space;
 8007a22:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8007a26:	f00a fd2d 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007a2a:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007a2e:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8007a32:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007a36:	4b7d      	ldr	r3, [pc, #500]	; (8007c2c <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8007a38:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8007a3a:	ee18 0a90 	vmov	r0, s17
 8007a3e:	2338      	movs	r3, #56	; 0x38
 8007a40:	a90a      	add	r1, sp, #40	; 0x28
 8007a42:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a46:	f00a ffb7 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a4a:	ee18 1a90 	vmov	r1, s17
 8007a4e:	4630      	mov	r0, r6
 8007a50:	f008 fdfe 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007a54:	230a      	movs	r3, #10
 8007a56:	9300      	str	r3, [sp, #0]
 8007a58:	2232      	movs	r2, #50	; 0x32
 8007a5a:	23f0      	movs	r3, #240	; 0xf0
 8007a5c:	4629      	mov	r1, r5
 8007a5e:	4638      	mov	r0, r7
 8007a60:	f7fb faae 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007a64:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007a68:	22a0      	movs	r2, #160	; 0xa0
 8007a6a:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007a6e:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8007a72:	9b03      	ldr	r3, [sp, #12]
 8007a74:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007a78:	4611      	mov	r1, r2
 8007a7a:	4638      	mov	r0, r7
 8007a7c:	f00a fb56 	bl	801212c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007a80:	22a0      	movs	r2, #160	; 0xa0
 8007a82:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007a86:	4638      	mov	r0, r7
 8007a88:	f00a fb5b 	bl	8012142 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007a8c:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8007a90:	2b20      	cmp	r3, #32
 8007a92:	d005      	beq.n	8007aa0 <_ZN26Measurement_SingleViewBaseC1Ev+0x2b8>
        lineWidthQ5 = widthQ5;
 8007a94:	2320      	movs	r3, #32
 8007a96:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8007a9a:	4638      	mov	r0, r7
 8007a9c:	f00a fa50 	bl	8011f40 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007aa0:	4638      	mov	r0, r7
 8007aa2:	2101      	movs	r1, #1
 8007aa4:	f00a fb58 	bl	8012158 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007aa8:	4639      	mov	r1, r7
 8007aaa:	4630      	mov	r0, r6
 8007aac:	f008 fdd0 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007ab0:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8007ab4:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8007ab6:	2223      	movs	r2, #35	; 0x23
 8007ab8:	4640      	mov	r0, r8
        linespace = space;
 8007aba:	f04f 0a00 	mov.w	sl, #0
 8007abe:	2145      	movs	r1, #69	; 0x45
 8007ac0:	f7fb fa71 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007ac4:	4641      	mov	r1, r8
 8007ac6:	4638      	mov	r0, r7
        color = newColor;
 8007ac8:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8007acc:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007ad0:	f00a fcd8 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007ad4:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007ad8:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007adc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007ae0:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8007c2c <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8007ae4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007ae8:	2351      	movs	r3, #81	; 0x51
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8007aea:	a90a      	add	r1, sp, #40	; 0x28
 8007aec:	4640      	mov	r0, r8
 8007aee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007af2:	f00a ff61 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007af6:	4641      	mov	r1, r8
 8007af8:	4630      	mov	r0, r6
 8007afa:	f008 fda9 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007afe:	ee18 0a10 	vmov	r0, s16
 8007b02:	220c      	movs	r2, #12
 8007b04:	2136      	movs	r1, #54	; 0x36
 8007b06:	f7fb fa4e 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8007b0a:	ee18 1a10 	vmov	r1, s16
 8007b0e:	4638      	mov	r0, r7
        color = newColor;
 8007b10:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8007b14:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007b18:	f00a fcb4 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007b1c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007b20:	ee18 3a10 	vmov	r3, s16
 8007b24:	333c      	adds	r3, #60	; 0x3c
 8007b26:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007b2a:	2350      	movs	r3, #80	; 0x50
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8007b2c:	ee18 0a10 	vmov	r0, s16
 8007b30:	a90a      	add	r1, sp, #40	; 0x28
 8007b32:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b36:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007b3a:	f00a ff3d 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b3e:	ee18 1a10 	vmov	r1, s16
 8007b42:	4630      	mov	r0, r6
 8007b44:	f008 fd84 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007b48:	ee19 0a10 	vmov	r0, s18
 8007b4c:	22f0      	movs	r2, #240	; 0xf0
 8007b4e:	2121      	movs	r1, #33	; 0x21
 8007b50:	f7fb fa29 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8007b54:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007b58:	aa0a      	add	r2, sp, #40	; 0x28
 8007b5a:	f04f 0802 	mov.w	r8, #2
 8007b5e:	a909      	add	r1, sp, #36	; 0x24
 8007b60:	ee19 0a10 	vmov	r0, s18
 8007b64:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007b68:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8007b6c:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007b70:	f00b f907 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007b74:	234f      	movs	r3, #79	; 0x4f
 8007b76:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8007b7a:	3710      	adds	r7, #16
        updateTextPosition();
 8007b7c:	ee19 0a10 	vmov	r0, s18
 8007b80:	f7fb fa66 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007b84:	ee19 1a10 	vmov	r1, s18
 8007b88:	4630      	mov	r0, r6
        colorPressed = col;
 8007b8a:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8007b8e:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8007b92:	f008 fd5d 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8007b96:	ee19 0a90 	vmov	r0, s19
 8007b9a:	22aa      	movs	r2, #170	; 0xaa
 8007b9c:	2121      	movs	r1, #33	; 0x21
 8007b9e:	f7fb fa02 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007ba2:	aa0a      	add	r2, sp, #40	; 0x28
 8007ba4:	a909      	add	r1, sp, #36	; 0x24
 8007ba6:	ee19 0a90 	vmov	r0, s19
 8007baa:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007bae:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007bb2:	f00b f8e6 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007bb6:	234e      	movs	r3, #78	; 0x4e
 8007bb8:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8007bbc:	ee19 0a90 	vmov	r0, s19
 8007bc0:	f7fb fa46 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007bc4:	ee19 1a90 	vmov	r1, s19
 8007bc8:	4630      	mov	r0, r6
        colorPressed = col;
 8007bca:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8007bce:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8007bd2:	f008 fd3d 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8007bd6:	ee1a 0a10 	vmov	r0, s20
 8007bda:	2264      	movs	r2, #100	; 0x64
 8007bdc:	2121      	movs	r1, #33	; 0x21
 8007bde:	f7fb f9e2 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007be2:	aa0a      	add	r2, sp, #40	; 0x28
 8007be4:	a909      	add	r1, sp, #36	; 0x24
 8007be6:	ee1a 0a10 	vmov	r0, s20
 8007bea:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007bee:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007bf2:	f00b f8c6 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007bf6:	234d      	movs	r3, #77	; 0x4d
        updateTextPosition();
 8007bf8:	ee1a 0a10 	vmov	r0, s20
 8007bfc:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8007c00:	f7fb fa26 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007c04:	4630      	mov	r0, r6
        colorPressed = col;
 8007c06:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8007c0a:	ee1a 1a10 	vmov	r1, s20
 8007c0e:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8007c12:	f008 fd1d 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007c16:	4620      	mov	r0, r4
 8007c18:	b00d      	add	sp, #52	; 0x34
 8007c1a:	ecbd 8b06 	vpop	{d8-d10}
 8007c1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007c22:	bf00      	nop
 8007c24:	20012e18 	.word	0x20012e18
 8007c28:	0802c5ba 	.word	0x0802c5ba
 8007c2c:	0802c630 	.word	0x0802c630

08007c30 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8007c30:	4770      	bx	lr

08007c32 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8007c32:	4770      	bx	lr

08007c34 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007c34:	4770      	bx	lr

08007c36 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007c36:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007c38:	68c2      	ldr	r2, [r0, #12]
 8007c3a:	6844      	ldr	r4, [r0, #4]
 8007c3c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007c3e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007c40:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007c44:	07d2      	lsls	r2, r2, #31
 8007c46:	bf48      	it	mi
 8007c48:	5962      	ldrmi	r2, [r4, r5]
 8007c4a:	689b      	ldr	r3, [r3, #8]
    }
 8007c4c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007c4e:	bf48      	it	mi
 8007c50:	58d3      	ldrmi	r3, [r2, r3]
 8007c52:	4718      	bx	r3

08007c54 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007c54:	6843      	ldr	r3, [r0, #4]
 8007c56:	b12b      	cbz	r3, 8007c64 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007c58:	6883      	ldr	r3, [r0, #8]
 8007c5a:	b92b      	cbnz	r3, 8007c68 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007c5c:	68c0      	ldr	r0, [r0, #12]
 8007c5e:	f000 0001 	and.w	r0, r0, #1
 8007c62:	4770      	bx	lr
 8007c64:	4618      	mov	r0, r3
 8007c66:	4770      	bx	lr
 8007c68:	2001      	movs	r0, #1
    }
 8007c6a:	4770      	bx	lr

08007c6c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007c6c:	b510      	push	{r4, lr}
 8007c6e:	2110      	movs	r1, #16
 8007c70:	4604      	mov	r4, r0
 8007c72:	f021 fffc 	bl	8029c6e <_ZdlPvj>
 8007c76:	4620      	mov	r0, r4
 8007c78:	bd10      	pop	{r4, pc}
	...

08007c7c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007c7c:	b510      	push	{r4, lr}
 8007c7e:	4b03      	ldr	r3, [pc, #12]	; (8007c8c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8007c80:	6003      	str	r3, [r0, #0]
 8007c82:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007c84:	f00c fa7a 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007c88:	4620      	mov	r0, r4
 8007c8a:	bd10      	pop	{r4, pc}
 8007c8c:	0802e198 	.word	0x0802e198

08007c90 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007c90:	b507      	push	{r0, r1, r2, lr}
 8007c92:	4b07      	ldr	r3, [pc, #28]	; (8007cb0 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8007c94:	6003      	str	r3, [r0, #0]
 8007c96:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007c98:	f00c fa70 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007c9c:	9801      	ldr	r0, [sp, #4]
 8007c9e:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8007ca2:	f021 ffe4 	bl	8029c6e <_ZdlPvj>
 8007ca6:	9801      	ldr	r0, [sp, #4]
 8007ca8:	b003      	add	sp, #12
 8007caa:	f85d fb04 	ldr.w	pc, [sp], #4
 8007cae:	bf00      	nop
 8007cb0:	0802e198 	.word	0x0802e198

08007cb4 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8007cb4:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8007cb6:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8007cba:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 8007cbe:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007cc0:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8007cc2:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007cc6:	d105      	bne.n	8007cd4 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8007cc8:	6803      	ldr	r3, [r0, #0]
 8007cca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007ccc:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8007cce:	2300      	movs	r3, #0
 8007cd0:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8007cd4:	bd10      	pop	{r4, pc}

08007cd6 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8007cd6:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8007cda:	4288      	cmp	r0, r1
{
 8007cdc:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007cde:	d105      	bne.n	8007cec <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007ce0:	f00d ff4e 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
}
 8007ce4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007ce8:	f7fc bd64 	b.w	80047b4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007cec:	bd08      	pop	{r3, pc}
	...

08007cf0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8007cf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007cf4:	ed2d 8b0a 	vpush	{d8-d12}
 8007cf8:	4604      	mov	r4, r0
 8007cfa:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8007cfc:	46a1      	mov	r9, r4
 8007cfe:	2500      	movs	r5, #0
 8007d00:	f00f fbbe 	bl	8017480 <_ZN8touchgfx6ScreenC1Ev>
 8007d04:	4ba9      	ldr	r3, [pc, #676]	; (8007fac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2bc>)
 8007d06:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007d08:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8007d0c:	2226      	movs	r2, #38	; 0x26
 8007d0e:	4629      	mov	r1, r5
 8007d10:	4648      	mov	r0, r9
 8007d12:	f023 f898 	bl	802ae46 <memset>
 8007d16:	4648      	mov	r0, r9
 8007d18:	f7fb f966 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 8007d1c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007d20:	26ff      	movs	r6, #255	; 0xff
 8007d22:	4ba3      	ldr	r3, [pc, #652]	; (8007fb0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8007d24:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007d26:	2226      	movs	r2, #38	; 0x26
 8007d28:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007d2c:	4629      	mov	r1, r5
 8007d2e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007d32:	4640      	mov	r0, r8
 8007d34:	66a5      	str	r5, [r4, #104]	; 0x68
 8007d36:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007d3a:	f023 f884 	bl	802ae46 <memset>
 8007d3e:	4640      	mov	r0, r8
 8007d40:	f7fb f952 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 8007d44:	4b9b      	ldr	r3, [pc, #620]	; (8007fb4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 8007d46:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007d48:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007d4c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007d50:	a90a      	add	r1, sp, #40	; 0x28
 8007d52:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8007d56:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8007d58:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007d5c:	f00b fa07 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007d60:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8007d64:	4658      	mov	r0, fp
 8007d66:	f7fb f951 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8007d6a:	4638      	mov	r0, r7
 8007d6c:	f00a fec2 	bl	8012af4 <_ZN8touchgfx5GaugeC1Ev>
 8007d70:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8007d74:	4618      	mov	r0, r3
 8007d76:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007d7a:	4e8f      	ldr	r6, [pc, #572]	; (8007fb8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
        : TextArea()
 8007d7c:	f7fb f946 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8007d80:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 8007d84:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 8007d88:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007d8a:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 8007d8e:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8007d92:	f7fb f93b 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8007d96:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8007d9a:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 8007d9e:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007da0:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8007da4:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8007da8:	f7fb f930 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8007dac:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8007db0:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8007db4:	4618      	mov	r0, r3
 8007db6:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8007dba:	ee0a 3a90 	vmov	s21, r3
 8007dbe:	f7fb f925 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8007dc2:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8007dc6:	4618      	mov	r0, r3
 8007dc8:	ee0b 3a10 	vmov	s22, r3
 8007dcc:	f7fb f91e 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8007dd0:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8007dd4:	4618      	mov	r0, r3
 8007dd6:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 8007dda:	ee0b 3a90 	vmov	s23, r3
 8007dde:	f7fb f915 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8007de2:	4650      	mov	r0, sl
 8007de4:	f00a f88c 	bl	8011f00 <_ZN8touchgfx4LineC1Ev>
 8007de8:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007dec:	4618      	mov	r0, r3
 8007dee:	9303      	str	r3, [sp, #12]
 8007df0:	f7fa fefa 	bl	8002be8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007df4:	4b71      	ldr	r3, [pc, #452]	; (8007fbc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8007df6:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8007dfa:	3324      	adds	r3, #36	; 0x24
 8007dfc:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007e00:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007e04:	4618      	mov	r0, r3
 8007e06:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8007e0a:	ee08 3a10 	vmov	s16, r3
 8007e0e:	f7fb f8fd 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8007e12:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8007e16:	4618      	mov	r0, r3
 8007e18:	ee08 3a90 	vmov	s17, r3
 8007e1c:	f7fb f8f6 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8007e20:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8007e24:	4618      	mov	r0, r3
 8007e26:	ee0c 3a10 	vmov	s24, r3
 8007e2a:	f00b fae1 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007e2e:	4a64      	ldr	r2, [pc, #400]	; (8007fc0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8007e30:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007e34:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8007e38:	4a62      	ldr	r2, [pc, #392]	; (8007fc4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8007e3a:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 8007e3e:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007e42:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007e46:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8007e4a:	f00c f98d 	bl	8014168 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007e4e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007e52:	462a      	mov	r2, r5
 8007e54:	4648      	mov	r0, r9
 8007e56:	9300      	str	r3, [sp, #0]
 8007e58:	4629      	mov	r1, r5
 8007e5a:	23f0      	movs	r3, #240	; 0xf0
 8007e5c:	f7fb f8b0 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007e60:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007e62:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007e66:	66a3      	str	r3, [r4, #104]	; 0x68
 8007e68:	4649      	mov	r1, r9
 8007e6a:	4630      	mov	r0, r6
 8007e6c:	f008 fbf0 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007e70:	462a      	mov	r2, r5
 8007e72:	4640      	mov	r0, r8
 8007e74:	4629      	mov	r1, r5
 8007e76:	f7fb f896 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8007e7a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007e7c:	4640      	mov	r0, r8
 8007e7e:	a90a      	add	r1, sp, #40	; 0x28
 8007e80:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007e84:	f00b f973 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007e88:	4641      	mov	r1, r8
 8007e8a:	4630      	mov	r0, r6
 8007e8c:	f008 fbe0 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007e90:	223c      	movs	r2, #60	; 0x3c
 8007e92:	211f      	movs	r1, #31
 8007e94:	4658      	mov	r0, fp
 8007e96:	f7fb f886 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8007e9a:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 8007e9e:	f04f 33ff 	mov.w	r3, #4294967295
 8007ea2:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007ea6:	4659      	mov	r1, fp
 8007ea8:	4640      	mov	r0, r8
        linespace = space;
 8007eaa:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007eae:	f00a fae9 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007eb2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007eb6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007eba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007ebe:	4b42      	ldr	r3, [pc, #264]	; (8007fc8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8007ec0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8007ec2:	a90a      	add	r1, sp, #40	; 0x28
 8007ec4:	2337      	movs	r3, #55	; 0x37
 8007ec6:	4658      	mov	r0, fp
 8007ec8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007ecc:	f00a fd74 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007ed0:	4659      	mov	r1, fp
 8007ed2:	4630      	mov	r0, r6
 8007ed4:	f008 fbbc 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007ed8:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8007eda:	4638      	mov	r0, r7
 8007edc:	a90a      	add	r1, sp, #40	; 0x28
 8007ede:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007ee2:	f008 fb47 	bl	8010574 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8007ee6:	236a      	movs	r3, #106	; 0x6a
 8007ee8:	4638      	mov	r0, r7
 8007eea:	9300      	str	r3, [sp, #0]
 8007eec:	225e      	movs	r2, #94	; 0x5e
 8007eee:	23b8      	movs	r3, #184	; 0xb8
 8007ef0:	211c      	movs	r1, #28
 8007ef2:	f7fb f865 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 8007ef6:	225c      	movs	r2, #92	; 0x5c
 8007ef8:	4611      	mov	r1, r2
 8007efa:	4638      	mov	r0, r7
 8007efc:	f00a fea5 	bl	8012c4a <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8007f00:	4638      	mov	r0, r7
 8007f02:	225a      	movs	r2, #90	; 0x5a
 8007f04:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007f08:	f00a ff24 	bl	8012d54 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 8007f0c:	462b      	mov	r3, r5
 8007f0e:	225a      	movs	r2, #90	; 0x5a
 8007f10:	4638      	mov	r0, r7
 8007f12:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007f16:	9500      	str	r5, [sp, #0]
 8007f18:	f008 f9d9 	bl	80102ce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 8007f1c:	4638      	mov	r0, r7
 8007f1e:	4629      	mov	r1, r5
 8007f20:	f00a fec2 	bl	8012ca8 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007f24:	2335      	movs	r3, #53	; 0x35
 8007f26:	2208      	movs	r2, #8
 8007f28:	4638      	mov	r0, r7
 8007f2a:	2105      	movs	r1, #5
 8007f2c:	f00a fe78 	bl	8012c20 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007f30:	4638      	mov	r0, r7
 8007f32:	2101      	movs	r1, #1
 8007f34:	f00a fe16 	bl	8012b64 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007f38:	4638      	mov	r0, r7
 8007f3a:	2101      	movs	r1, #1
 8007f3c:	f00a fe15 	bl	8012b6a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007f40:	4639      	mov	r1, r7
 8007f42:	4630      	mov	r0, r6
 8007f44:	f008 fb84 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 8007f48:	230f      	movs	r3, #15
 8007f4a:	22e6      	movs	r2, #230	; 0xe6
 8007f4c:	ee19 0a10 	vmov	r0, s18
 8007f50:	9300      	str	r3, [sp, #0]
 8007f52:	4629      	mov	r1, r5
 8007f54:	23f0      	movs	r3, #240	; 0xf0
 8007f56:	f7fb f833 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8007f5a:	f04f 33ff 	mov.w	r3, #4294967295
 8007f5e:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8007f62:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 8007f66:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8007f6a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007f6e:	4f17      	ldr	r7, [pc, #92]	; (8007fcc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8007f70:	ee19 1a10 	vmov	r1, s18
 8007f74:	4640      	mov	r0, r8
 8007f76:	4798      	blx	r3
 8007f78:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007f7c:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 8007f80:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007f84:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8007f86:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 8007f8a:	b92b      	cbnz	r3, 8007f98 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a8>
 8007f8c:	4b10      	ldr	r3, [pc, #64]	; (8007fd0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8007f8e:	4a11      	ldr	r2, [pc, #68]	; (8007fd4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007f90:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007f92:	4811      	ldr	r0, [pc, #68]	; (8007fd8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8007f94:	f022 fd52 	bl	802aa3c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007f98:	f8df b044 	ldr.w	fp, [pc, #68]	; 8007fe0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007f9c:	f8bb 3000 	ldrh.w	r3, [fp]
 8007fa0:	2b10      	cmp	r3, #16
 8007fa2:	d81f      	bhi.n	8007fe4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 8007fa4:	4b0d      	ldr	r3, [pc, #52]	; (8007fdc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8007fa6:	4a0b      	ldr	r2, [pc, #44]	; (8007fd4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007fa8:	2161      	movs	r1, #97	; 0x61
 8007faa:	e7f2      	b.n	8007f92 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a2>
 8007fac:	0802e198 	.word	0x0802e198
 8007fb0:	0802ef90 	.word	0x0802ef90
 8007fb4:	0802f158 	.word	0x0802f158
 8007fb8:	0802c640 	.word	0x0802c640
 8007fbc:	0802ecc4 	.word	0x0802ecc4
 8007fc0:	0802e180 	.word	0x0802e180
 8007fc4:	08007cd7 	.word	0x08007cd7
 8007fc8:	0802c630 	.word	0x0802c630
 8007fcc:	20012e0c 	.word	0x20012e0c
 8007fd0:	0802c480 	.word	0x0802c480
 8007fd4:	0802c582 	.word	0x0802c582
 8007fd8:	0802c4fd 	.word	0x0802c4fd
 8007fdc:	0802c544 	.word	0x0802c544
 8007fe0:	20012e10 	.word	0x20012e10
        return texts->getText(typedTextId);
 8007fe4:	4bde      	ldr	r3, [pc, #888]	; (8008360 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007fe6:	2110      	movs	r1, #16
 8007fe8:	6818      	ldr	r0, [r3, #0]
 8007fea:	f000 ffbf 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 8007fee:	4add      	ldr	r2, [pc, #884]	; (8008364 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007ff0:	4603      	mov	r3, r0
 8007ff2:	210a      	movs	r1, #10
 8007ff4:	4648      	mov	r0, r9
 8007ff6:	f010 ff33 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007ffa:	4bdb      	ldr	r3, [pc, #876]	; (8008368 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        wc1 = value;
 8007ffc:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8008000:	ee19 0a10 	vmov	r0, s18
 8008004:	930a      	str	r3, [sp, #40]	; 0x28
 8008006:	a90a      	add	r1, sp, #40	; 0x28
 8008008:	2313      	movs	r3, #19
 800800a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800800e:	f00a fcd3 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008012:	ee19 1a10 	vmov	r1, s18
 8008016:	4630      	mov	r0, r6
 8008018:	f008 fb1a 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 800801c:	210f      	movs	r1, #15
 800801e:	22d7      	movs	r2, #215	; 0xd7
 8008020:	ee19 0a90 	vmov	r0, s19
 8008024:	9100      	str	r1, [sp, #0]
 8008026:	23f0      	movs	r3, #240	; 0xf0
 8008028:	4629      	mov	r1, r5
 800802a:	f7fa ffc9 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 800802e:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 8008032:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 8008036:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 800803a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800803e:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8008042:	4640      	mov	r0, r8
 8008044:	ee19 1a90 	vmov	r1, s19
 8008048:	4798      	blx	r3
 800804a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800804e:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8008052:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008056:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8008058:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 800805c:	2b00      	cmp	r3, #0
 800805e:	d095      	beq.n	8007f8c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008060:	f8bb 3000 	ldrh.w	r3, [fp]
 8008064:	2b11      	cmp	r3, #17
 8008066:	d99d      	bls.n	8007fa4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 8008068:	4abd      	ldr	r2, [pc, #756]	; (8008360 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 800806a:	2111      	movs	r1, #17
 800806c:	6810      	ldr	r0, [r2, #0]
 800806e:	f000 ff7d 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 8008072:	4abc      	ldr	r2, [pc, #752]	; (8008364 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8008074:	4603      	mov	r3, r0
 8008076:	210a      	movs	r1, #10
 8008078:	4648      	mov	r0, r9
 800807a:	f010 fef1 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800807e:	4bba      	ldr	r3, [pc, #744]	; (8008368 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8008080:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8008084:	ee19 0a90 	vmov	r0, s19
 8008088:	930a      	str	r3, [sp, #40]	; 0x28
 800808a:	a90a      	add	r1, sp, #40	; 0x28
 800808c:	2314      	movs	r3, #20
 800808e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008092:	f00a fc91 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008096:	ee19 1a90 	vmov	r1, s19
 800809a:	4630      	mov	r0, r6
 800809c:	f008 fad8 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 80080a0:	210f      	movs	r1, #15
 80080a2:	22c8      	movs	r2, #200	; 0xc8
 80080a4:	ee1a 0a10 	vmov	r0, s20
 80080a8:	9100      	str	r1, [sp, #0]
 80080aa:	23f0      	movs	r3, #240	; 0xf0
 80080ac:	4629      	mov	r1, r5
 80080ae:	f7fa ff87 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80080b2:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 80080b6:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 80080ba:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80080be:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80080c2:	f8c4 1348 	str.w	r1, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 80080c6:	4640      	mov	r0, r8
 80080c8:	ee1a 1a10 	vmov	r1, s20
 80080cc:	4798      	blx	r3
 80080ce:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80080d2:	f504 7355 	add.w	r3, r4, #852	; 0x354
 80080d6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80080da:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 80080dc:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 80080e0:	2b00      	cmp	r3, #0
 80080e2:	f43f af53 	beq.w	8007f8c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80080e6:	f8bb 3000 	ldrh.w	r3, [fp]
 80080ea:	2b12      	cmp	r3, #18
 80080ec:	f67f af5a 	bls.w	8007fa4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 80080f0:	4a9b      	ldr	r2, [pc, #620]	; (8008360 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
        : typedTextId(id)
 80080f2:	4f9d      	ldr	r7, [pc, #628]	; (8008368 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
        return texts->getText(typedTextId);
 80080f4:	6810      	ldr	r0, [r2, #0]
 80080f6:	2112      	movs	r1, #18
 80080f8:	f000 ff38 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 80080fc:	4a99      	ldr	r2, [pc, #612]	; (8008364 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 80080fe:	4603      	mov	r3, r0
 8008100:	210a      	movs	r1, #10
 8008102:	4648      	mov	r0, r9
 8008104:	f010 feac 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8008108:	2315      	movs	r3, #21
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 800810a:	ee1a 0a10 	vmov	r0, s20
 800810e:	a90a      	add	r1, sp, #40	; 0x28
 8008110:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 8008114:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008118:	970a      	str	r7, [sp, #40]	; 0x28
 800811a:	f00a fc4d 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800811e:	ee1a 1a10 	vmov	r1, s20
 8008122:	4630      	mov	r0, r6
 8008124:	f008 fa94 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 8008128:	224c      	movs	r2, #76	; 0x4c
 800812a:	ee1a 0a90 	vmov	r0, s21
 800812e:	2171      	movs	r1, #113	; 0x71
 8008130:	f7fa ff39 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8008134:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8008138:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 800813c:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 8008140:	4640      	mov	r0, r8
        linespace = space;
 8008142:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8008146:	f00a f99d 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800814a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800814e:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8008152:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008156:	2316      	movs	r3, #22
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8008158:	ee1a 0a90 	vmov	r0, s21
 800815c:	a90a      	add	r1, sp, #40	; 0x28
 800815e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008162:	970a      	str	r7, [sp, #40]	; 0x28
 8008164:	f00a fc28 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008168:	ee1a 1a90 	vmov	r1, s21
 800816c:	4630      	mov	r0, r6
 800816e:	f008 fa6f 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8008172:	22b9      	movs	r2, #185	; 0xb9
 8008174:	ee1b 0a10 	vmov	r0, s22
 8008178:	4629      	mov	r1, r5
 800817a:	f7fa ff14 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800817e:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8008182:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 8008186:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 800818a:	4640      	mov	r0, r8
        linespace = space;
 800818c:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 8008190:	f00a f978 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008194:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8008198:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 800819c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80081a0:	2317      	movs	r3, #23
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80081a2:	ee1b 0a10 	vmov	r0, s22
 80081a6:	a90a      	add	r1, sp, #40	; 0x28
 80081a8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80081ac:	970a      	str	r7, [sp, #40]	; 0x28
 80081ae:	f00a fc03 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80081b2:	ee1b 1a10 	vmov	r1, s22
 80081b6:	4630      	mov	r0, r6
 80081b8:	f008 fa4a 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 80081bc:	22b9      	movs	r2, #185	; 0xb9
 80081be:	ee1b 0a90 	vmov	r0, s23
 80081c2:	21d9      	movs	r1, #217	; 0xd9
 80081c4:	f7fa feef 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80081c8:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80081cc:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 80081d0:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 80081d4:	4640      	mov	r0, r8
        linespace = space;
 80081d6:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 80081da:	f00a f953 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80081de:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80081e2:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 80081e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80081ea:	2318      	movs	r3, #24
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 80081ec:	ee1b 0a90 	vmov	r0, s23
 80081f0:	a90a      	add	r1, sp, #40	; 0x28
 80081f2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80081f6:	970a      	str	r7, [sp, #40]	; 0x28
 80081f8:	f00a fbde 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80081fc:	ee1b 1a90 	vmov	r1, s23
 8008200:	4630      	mov	r0, r6
 8008202:	f008 fa25 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008206:	230a      	movs	r3, #10
 8008208:	9300      	str	r3, [sp, #0]
 800820a:	2232      	movs	r2, #50	; 0x32
 800820c:	23f0      	movs	r3, #240	; 0xf0
 800820e:	4629      	mov	r1, r5
 8008210:	4650      	mov	r0, sl
 8008212:	f7fa fed5 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008216:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800821a:	22a0      	movs	r2, #160	; 0xa0
 800821c:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008220:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 8008224:	9b03      	ldr	r3, [sp, #12]
 8008226:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 800822a:	4611      	mov	r1, r2
 800822c:	4650      	mov	r0, sl
 800822e:	f009 ff7d 	bl	801212c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008232:	22a0      	movs	r2, #160	; 0xa0
 8008234:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008238:	4650      	mov	r0, sl
 800823a:	f009 ff82 	bl	8012142 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800823e:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8008242:	2b20      	cmp	r3, #32
 8008244:	d005      	beq.n	8008252 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x562>
        lineWidthQ5 = widthQ5;
 8008246:	2320      	movs	r3, #32
 8008248:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 800824c:	4650      	mov	r0, sl
 800824e:	f009 fe77 	bl	8011f40 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008252:	4650      	mov	r0, sl
 8008254:	2101      	movs	r1, #1
 8008256:	f009 ff7f 	bl	8012158 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800825a:	4651      	mov	r1, sl
 800825c:	4630      	mov	r0, r6
 800825e:	f008 f9f7 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008262:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 8008266:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8008268:	ee18 0a10 	vmov	r0, s16
 800826c:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800826e:	f04f 0900 	mov.w	r9, #0
 8008272:	2145      	movs	r1, #69	; 0x45
 8008274:	f7fa fe97 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008278:	ee18 1a10 	vmov	r1, s16
 800827c:	4628      	mov	r0, r5
        color = newColor;
 800827e:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 8008282:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8008286:	f00a f8fd 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800828a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800828e:	ee18 3a10 	vmov	r3, s16
 8008292:	333c      	adds	r3, #60	; 0x3c
 8008294:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008298:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 8008368 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>
 800829c:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80082a0:	2344      	movs	r3, #68	; 0x44
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 80082a2:	ee18 0a10 	vmov	r0, s16
 80082a6:	a90a      	add	r1, sp, #40	; 0x28
 80082a8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80082ac:	f00a fb84 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80082b0:	ee18 1a10 	vmov	r1, s16
 80082b4:	4630      	mov	r0, r6
 80082b6:	f008 f9cb 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80082ba:	ee18 0a90 	vmov	r0, s17
 80082be:	220c      	movs	r2, #12
 80082c0:	2136      	movs	r1, #54	; 0x36
 80082c2:	f7fa fe70 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80082c6:	ee18 1a90 	vmov	r1, s17
 80082ca:	4628      	mov	r0, r5
        color = newColor;
 80082cc:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 80082d0:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 80082d4:	f00a f8d6 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80082d8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80082dc:	ee18 3a90 	vmov	r3, s17
 80082e0:	333c      	adds	r3, #60	; 0x3c
 80082e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80082e6:	2343      	movs	r3, #67	; 0x43
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 80082e8:	ee18 0a90 	vmov	r0, s17
 80082ec:	a90a      	add	r1, sp, #40	; 0x28
 80082ee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80082f2:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80082f6:	f00a fb5f 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80082fa:	ee18 1a90 	vmov	r1, s17
 80082fe:	4630      	mov	r0, r6
 8008300:	f008 f9a6 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8008304:	ee1c 0a10 	vmov	r0, s24
 8008308:	f44f 7280 	mov.w	r2, #256	; 0x100
 800830c:	2121      	movs	r1, #33	; 0x21
 800830e:	f7fa fe4a 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8008312:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008314:	aa0a      	add	r2, sp, #40	; 0x28
 8008316:	a909      	add	r1, sp, #36	; 0x24
 8008318:	ee1c 0a10 	vmov	r0, s24
 800831c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008320:	2302      	movs	r3, #2
 8008322:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008326:	f00a fd2c 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800832a:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 800832c:	ee1c 0a10 	vmov	r0, s24
 8008330:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 8008334:	f7fa fe8c 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8008338:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 800833c:	3304      	adds	r3, #4
 800833e:	4630      	mov	r0, r6
 8008340:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8008344:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 8008348:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 800834c:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8008350:	f008 f97e 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008354:	4620      	mov	r0, r4
 8008356:	b00d      	add	sp, #52	; 0x34
 8008358:	ecbd 8b0a 	vpop	{d8-d12}
 800835c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008360:	20012e18 	.word	0x20012e18
 8008364:	0802c5ba 	.word	0x0802c5ba
 8008368:	0802c630 	.word	0x0802c630

0800836c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800836c:	4770      	bx	lr

0800836e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800836e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008370:	68c2      	ldr	r2, [r0, #12]
 8008372:	6844      	ldr	r4, [r0, #4]
 8008374:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008376:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008378:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800837c:	07d2      	lsls	r2, r2, #31
 800837e:	bf48      	it	mi
 8008380:	5962      	ldrmi	r2, [r4, r5]
 8008382:	689b      	ldr	r3, [r3, #8]
    }
 8008384:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008386:	bf48      	it	mi
 8008388:	58d3      	ldrmi	r3, [r2, r3]
 800838a:	4718      	bx	r3

0800838c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800838c:	6843      	ldr	r3, [r0, #4]
 800838e:	b12b      	cbz	r3, 800839c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008390:	6883      	ldr	r3, [r0, #8]
 8008392:	b92b      	cbnz	r3, 80083a0 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008394:	68c0      	ldr	r0, [r0, #12]
 8008396:	f000 0001 	and.w	r0, r0, #1
 800839a:	4770      	bx	lr
 800839c:	4618      	mov	r0, r3
 800839e:	4770      	bx	lr
 80083a0:	2001      	movs	r0, #1
    }
 80083a2:	4770      	bx	lr

080083a4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80083a4:	b510      	push	{r4, lr}
 80083a6:	2110      	movs	r1, #16
 80083a8:	4604      	mov	r4, r0
 80083aa:	f021 fc60 	bl	8029c6e <_ZdlPvj>
 80083ae:	4620      	mov	r0, r4
 80083b0:	bd10      	pop	{r4, pc}

080083b2 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80083b2:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80083b6:	f000 bfb7 	b.w	8009328 <_ZN17Gauge_with_Values10initializeEv>

080083ba <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80083ba:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 80083be:	4288      	cmp	r0, r1
{
 80083c0:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80083c2:	d105      	bne.n	80083d0 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80083c4:	f00d fbdc 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 80083c8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80083cc:	f7fc b9f2 	b.w	80047b4 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 80083d0:	bd08      	pop	{r3, pc}
	...

080083d4 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80083d4:	b510      	push	{r4, lr}
 80083d6:	4b07      	ldr	r3, [pc, #28]	; (80083f4 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 80083d8:	6003      	str	r3, [r0, #0]
 80083da:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80083dc:	f00b fece 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 80083e0:	4b05      	ldr	r3, [pc, #20]	; (80083f8 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 80083e2:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80083e6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80083ea:	f7fd fc79 	bl	8005ce0 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80083ee:	4620      	mov	r0, r4
 80083f0:	bd10      	pop	{r4, pc}
 80083f2:	bf00      	nop
 80083f4:	0802e1e8 	.word	0x0802e1e8
 80083f8:	0802e61c 	.word	0x0802e61c

080083fc <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80083fc:	b510      	push	{r4, lr}
 80083fe:	4604      	mov	r4, r0
}
 8008400:	f7ff ffe8 	bl	80083d4 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8008404:	4620      	mov	r0, r4
 8008406:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800840a:	f021 fc30 	bl	8029c6e <_ZdlPvj>
 800840e:	4620      	mov	r0, r4
 8008410:	bd10      	pop	{r4, pc}
	...

08008414 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8008414:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008418:	ed2d 8b04 	vpush	{d8-d9}
 800841c:	4604      	mov	r4, r0
 800841e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8008420:	46a3      	mov	fp, r4
 8008422:	2500      	movs	r5, #0
 8008424:	f00f f82c 	bl	8017480 <_ZN8touchgfx6ScreenC1Ev>
 8008428:	4bae      	ldr	r3, [pc, #696]	; (80086e4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 800842a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800842c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8008430:	2226      	movs	r2, #38	; 0x26
 8008432:	4629      	mov	r1, r5
 8008434:	4658      	mov	r0, fp
 8008436:	f022 fd06 	bl	802ae46 <memset>
 800843a:	4658      	mov	r0, fp
 800843c:	f7fa fdd4 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 8008440:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8008444:	26ff      	movs	r6, #255	; 0xff
 8008446:	4ba8      	ldr	r3, [pc, #672]	; (80086e8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 8008448:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800844a:	2226      	movs	r2, #38	; 0x26
 800844c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008450:	4629      	mov	r1, r5
 8008452:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008456:	66a5      	str	r5, [r4, #104]	; 0x68
 8008458:	4650      	mov	r0, sl
 800845a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800845e:	f022 fcf2 	bl	802ae46 <memset>
 8008462:	4650      	mov	r0, sl
 8008464:	f7fa fdc0 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 8008468:	4ba0      	ldr	r3, [pc, #640]	; (80086ec <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 800846a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800846c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008470:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008474:	a90a      	add	r1, sp, #40	; 0x28
 8008476:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800847a:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800847e:	4650      	mov	r0, sl
 8008480:	f00a fe75 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008484:	4638      	mov	r0, r7
 8008486:	f009 fd3b 	bl	8011f00 <_ZN8touchgfx4LineC1Ev>
 800848a:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800848e:	4618      	mov	r0, r3
 8008490:	9303      	str	r3, [sp, #12]
 8008492:	f7fa fba9 	bl	8002be8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008496:	4b96      	ldr	r3, [pc, #600]	; (80086f0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 8008498:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 800849c:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 80084a0:	3324      	adds	r3, #36	; 0x24
 80084a2:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80084a6:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80084aa:	4648      	mov	r0, r9
 80084ac:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 80084b0:	f7fa fdac 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80084b4:	4640      	mov	r0, r8
 80084b6:	f7fa fda9 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80084ba:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80084be:	4618      	mov	r0, r3
 80084c0:	ee08 3a10 	vmov	s16, r3
 80084c4:	f7fa fda2 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 80084c8:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 80084cc:	4618      	mov	r0, r3
 80084ce:	ee08 3a90 	vmov	s17, r3
 80084d2:	f00a ff8d 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80084d6:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80084da:	4618      	mov	r0, r3
 80084dc:	ee09 3a10 	vmov	s18, r3
 80084e0:	f000 ff18 	bl	8009314 <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80084e4:	4a83      	ldr	r2, [pc, #524]	; (80086f4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 80084e6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80084ea:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80084ee:	4a82      	ldr	r2, [pc, #520]	; (80086f8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80084f0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80084f4:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80084f8:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80084fc:	f00b fe34 	bl	8014168 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008500:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008504:	462a      	mov	r2, r5
 8008506:	9300      	str	r3, [sp, #0]
 8008508:	4629      	mov	r1, r5
 800850a:	23f0      	movs	r3, #240	; 0xf0
 800850c:	4658      	mov	r0, fp
 800850e:	f7fa fd57 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008512:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008514:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008518:	66a3      	str	r3, [r4, #104]	; 0x68
 800851a:	4659      	mov	r1, fp
 800851c:	4630      	mov	r0, r6
 800851e:	f008 f897 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8008522:	462a      	mov	r2, r5
 8008524:	4629      	mov	r1, r5
 8008526:	4650      	mov	r0, sl
 8008528:	f7fa fd3d 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 800852c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800852e:	a90a      	add	r1, sp, #40	; 0x28
 8008530:	4650      	mov	r0, sl
 8008532:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008536:	f00a fe1a 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800853a:	4651      	mov	r1, sl
 800853c:	4630      	mov	r0, r6
 800853e:	f008 f887 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008542:	230a      	movs	r3, #10
 8008544:	9300      	str	r3, [sp, #0]
 8008546:	2232      	movs	r2, #50	; 0x32
 8008548:	23f0      	movs	r3, #240	; 0xf0
 800854a:	4629      	mov	r1, r5
 800854c:	4638      	mov	r0, r7
 800854e:	f7fa fd37 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008552:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008556:	22a0      	movs	r2, #160	; 0xa0
 8008558:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 800855c:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8008560:	9b03      	ldr	r3, [sp, #12]
 8008562:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8008566:	4611      	mov	r1, r2
 8008568:	4638      	mov	r0, r7
 800856a:	f009 fddf 	bl	801212c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800856e:	22a0      	movs	r2, #160	; 0xa0
 8008570:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008574:	4638      	mov	r0, r7
 8008576:	f009 fde4 	bl	8012142 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800857a:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 800857e:	2b20      	cmp	r3, #32
 8008580:	d005      	beq.n	800858e <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 8008582:	2320      	movs	r3, #32
 8008584:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8008588:	4638      	mov	r0, r7
 800858a:	f009 fcd9 	bl	8011f40 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800858e:	4638      	mov	r0, r7
 8008590:	2101      	movs	r1, #1
 8008592:	f009 fde1 	bl	8012158 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008596:	4639      	mov	r1, r7
 8008598:	4630      	mov	r0, r6
 800859a:	ad04      	add	r5, sp, #16
 800859c:	f008 f858 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80085a0:	f04f 3aff 	mov.w	sl, #4294967295
        linespace = space;
 80085a4:	2700      	movs	r7, #0
    textArea2.setXY(69, 35);
 80085a6:	2223      	movs	r2, #35	; 0x23
 80085a8:	4648      	mov	r0, r9
 80085aa:	2145      	movs	r1, #69	; 0x45
 80085ac:	f7fa fcfb 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80085b0:	4649      	mov	r1, r9
 80085b2:	4628      	mov	r0, r5
        color = newColor;
 80085b4:	f8c4 a14c 	str.w	sl, [r4, #332]	; 0x14c
        linespace = space;
 80085b8:	f8a4 7150 	strh.w	r7, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 80085bc:	f009 ff62 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80085c0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80085c4:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 80085c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80085cc:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80086fc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 80085d0:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80085d4:	2347      	movs	r3, #71	; 0x47
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 80085d6:	a90a      	add	r1, sp, #40	; 0x28
 80085d8:	4648      	mov	r0, r9
 80085da:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80085de:	f00a f9eb 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80085e2:	4649      	mov	r1, r9
 80085e4:	4630      	mov	r0, r6
 80085e6:	f008 f833 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 80085ea:	223c      	movs	r2, #60	; 0x3c
 80085ec:	4640      	mov	r0, r8
 80085ee:	211f      	movs	r1, #31
 80085f0:	f7fa fcd9 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80085f4:	4641      	mov	r1, r8
 80085f6:	4628      	mov	r0, r5
        color = newColor;
 80085f8:	f8c4 a194 	str.w	sl, [r4, #404]	; 0x194
        linespace = space;
 80085fc:	f8a4 7198 	strh.w	r7, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8008600:	f009 ff40 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008604:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008608:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800860c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008610:	f04f 0936 	mov.w	r9, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8008614:	a90a      	add	r1, sp, #40	; 0x28
 8008616:	4640      	mov	r0, r8
 8008618:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800861c:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8008620:	f00a f9ca 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008624:	4641      	mov	r1, r8
 8008626:	4630      	mov	r0, r6
 8008628:	f008 f812 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800862c:	ee18 0a10 	vmov	r0, s16
 8008630:	220c      	movs	r2, #12
 8008632:	4649      	mov	r1, r9
 8008634:	f7fa fcb7 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8008638:	ee18 1a10 	vmov	r1, s16
 800863c:	4628      	mov	r0, r5
        color = newColor;
 800863e:	f8c4 a1dc 	str.w	sl, [r4, #476]	; 0x1dc
        linespace = space;
 8008642:	f8a4 71e0 	strh.w	r7, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8008646:	f009 ff1d 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800864a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800864e:	ee18 3a10 	vmov	r3, s16
 8008652:	333c      	adds	r3, #60	; 0x3c
 8008654:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008658:	2346      	movs	r3, #70	; 0x46
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 800865a:	ee18 0a10 	vmov	r0, s16
 800865e:	a90a      	add	r1, sp, #40	; 0x28
 8008660:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008664:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8008668:	f00a f9a6 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800866c:	ee18 1a10 	vmov	r1, s16
 8008670:	4630      	mov	r0, r6
 8008672:	f007 ffed 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8008676:	ee18 0a90 	vmov	r0, s17
 800867a:	f240 1201 	movw	r2, #257	; 0x101
 800867e:	2121      	movs	r1, #33	; 0x21
 8008680:	f7fa fc91 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8008684:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008686:	aa0a      	add	r2, sp, #40	; 0x28
 8008688:	a909      	add	r1, sp, #36	; 0x24
 800868a:	ee18 0a90 	vmov	r0, s17
 800868e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008692:	2302      	movs	r3, #2
 8008694:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008698:	f00a fb73 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800869c:	2345      	movs	r3, #69	; 0x45
        updateTextPosition();
 800869e:	ee18 0a90 	vmov	r0, s17
 80086a2:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 80086a6:	f7fa fcd3 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80086aa:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80086ae:	3314      	adds	r3, #20
 80086b0:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 80086b4:	ee18 1a90 	vmov	r1, s17
 80086b8:	4630      	mov	r0, r6
        colorPressed = col;
 80086ba:	e9c4 aa8c 	strd	sl, sl, [r4, #560]	; 0x230
 80086be:	f007 ffc7 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80086c2:	ee19 0a10 	vmov	r0, s18
 80086c6:	224e      	movs	r2, #78	; 0x4e
 80086c8:	4639      	mov	r1, r7
 80086ca:	f7fa fc6c 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80086ce:	4630      	mov	r0, r6
 80086d0:	ee19 1a10 	vmov	r1, s18
 80086d4:	f007 ffbc 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80086d8:	4620      	mov	r0, r4
 80086da:	b00d      	add	sp, #52	; 0x34
 80086dc:	ecbd 8b04 	vpop	{d8-d9}
 80086e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80086e4:	0802e1e8 	.word	0x0802e1e8
 80086e8:	0802ef90 	.word	0x0802ef90
 80086ec:	0802f158 	.word	0x0802f158
 80086f0:	0802ecc4 	.word	0x0802ecc4
 80086f4:	0802e1d0 	.word	0x0802e1d0
 80086f8:	080083bb 	.word	0x080083bb
 80086fc:	0802c630 	.word	0x0802c630

08008700 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8008700:	4770      	bx	lr

08008702 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008702:	4770      	bx	lr

08008704 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008704:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008706:	68c2      	ldr	r2, [r0, #12]
 8008708:	6844      	ldr	r4, [r0, #4]
 800870a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800870c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800870e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008712:	07d2      	lsls	r2, r2, #31
 8008714:	bf48      	it	mi
 8008716:	5962      	ldrmi	r2, [r4, r5]
 8008718:	689b      	ldr	r3, [r3, #8]
    }
 800871a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800871c:	bf48      	it	mi
 800871e:	58d3      	ldrmi	r3, [r2, r3]
 8008720:	4718      	bx	r3

08008722 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8008722:	6843      	ldr	r3, [r0, #4]
 8008724:	b12b      	cbz	r3, 8008732 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008726:	6883      	ldr	r3, [r0, #8]
 8008728:	b92b      	cbnz	r3, 8008736 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800872a:	68c0      	ldr	r0, [r0, #12]
 800872c:	f000 0001 	and.w	r0, r0, #1
 8008730:	4770      	bx	lr
 8008732:	4618      	mov	r0, r3
 8008734:	4770      	bx	lr
 8008736:	2001      	movs	r0, #1
    }
 8008738:	4770      	bx	lr

0800873a <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800873a:	b510      	push	{r4, lr}
 800873c:	2110      	movs	r1, #16
 800873e:	4604      	mov	r4, r0
 8008740:	f021 fa95 	bl	8029c6e <_ZdlPvj>
 8008744:	4620      	mov	r0, r4
 8008746:	bd10      	pop	{r4, pc}

08008748 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8008748:	b510      	push	{r4, lr}
 800874a:	4b03      	ldr	r3, [pc, #12]	; (8008758 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 800874c:	6003      	str	r3, [r0, #0]
 800874e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008750:	f00b fd14 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008754:	4620      	mov	r0, r4
 8008756:	bd10      	pop	{r4, pc}
 8008758:	0802e234 	.word	0x0802e234

0800875c <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 800875c:	b507      	push	{r0, r1, r2, lr}
 800875e:	4b07      	ldr	r3, [pc, #28]	; (800877c <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8008760:	6003      	str	r3, [r0, #0]
 8008762:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008764:	f00b fd0a 	bl	801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008768:	9801      	ldr	r0, [sp, #4]
 800876a:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800876e:	f021 fa7e 	bl	8029c6e <_ZdlPvj>
 8008772:	9801      	ldr	r0, [sp, #4]
 8008774:	b003      	add	sp, #12
 8008776:	f85d fb04 	ldr.w	pc, [sp], #4
 800877a:	bf00      	nop
 800877c:	0802e234 	.word	0x0802e234

08008780 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8008780:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8008784:	4288      	cmp	r0, r1
{
 8008786:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8008788:	d105      	bne.n	8008796 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800878a:	f00d f9f9 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 800878e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8008792:	f7fb bfdf 	b.w	8004754 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8008796:	bd08      	pop	{r3, pc}

08008798 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8008798:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800879c:	ed2d 8b04 	vpush	{d8-d9}
 80087a0:	4604      	mov	r4, r0
 80087a2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 80087a4:	46a3      	mov	fp, r4
 80087a6:	2500      	movs	r5, #0
 80087a8:	f00e fe6a 	bl	8017480 <_ZN8touchgfx6ScreenC1Ev>
 80087ac:	4bd1      	ldr	r3, [pc, #836]	; (8008af4 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 80087ae:	63e5      	str	r5, [r4, #60]	; 0x3c
 80087b0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80087b4:	2226      	movs	r2, #38	; 0x26
 80087b6:	4629      	mov	r1, r5
 80087b8:	4658      	mov	r0, fp
 80087ba:	f022 fb44 	bl	802ae46 <memset>
 80087be:	4658      	mov	r0, fp
 80087c0:	f7fa fc12 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 80087c4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80087c8:	26ff      	movs	r6, #255	; 0xff
 80087ca:	4bcb      	ldr	r3, [pc, #812]	; (8008af8 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 80087cc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80087ce:	2226      	movs	r2, #38	; 0x26
 80087d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80087d4:	4629      	mov	r1, r5
 80087d6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80087da:	4650      	mov	r0, sl
 80087dc:	66a5      	str	r5, [r4, #104]	; 0x68
 80087de:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80087e2:	f022 fb30 	bl	802ae46 <memset>
 80087e6:	4650      	mov	r0, sl
 80087e8:	f7fa fbfe 	bl	8002fe8 <_ZN8touchgfx6WidgetC1Ev>
 80087ec:	4bc3      	ldr	r3, [pc, #780]	; (8008afc <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 80087ee:	66e3      	str	r3, [r4, #108]	; 0x6c
 80087f0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80087f4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80087f8:	a90a      	add	r1, sp, #40	; 0x28
 80087fa:	4650      	mov	r0, sl
 80087fc:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8008800:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008804:	f00a fcb3 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8008808:	4648      	mov	r0, r9
 800880a:	f7fa fbff 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 800880e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8008812:	4bbb      	ldr	r3, [pc, #748]	; (8008b00 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8008814:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8008818:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800881c:	4638      	mov	r0, r7
 800881e:	f009 fb6f 	bl	8011f00 <_ZN8touchgfx4LineC1Ev>
 8008822:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008826:	4618      	mov	r0, r3
 8008828:	9303      	str	r3, [sp, #12]
 800882a:	f7fa f9dd 	bl	8002be8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800882e:	4bb5      	ldr	r3, [pc, #724]	; (8008b04 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8008830:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8008834:	3324      	adds	r3, #36	; 0x24
 8008836:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800883a:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 800883e:	4618      	mov	r0, r3
 8008840:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8008844:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8008848:	ee09 3a10 	vmov	s18, r3
 800884c:	f00a fdd0 	bl	80133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008850:	4640      	mov	r0, r8
 8008852:	f7fa fbdb 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8008856:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 800885a:	4618      	mov	r0, r3
 800885c:	ee08 3a10 	vmov	s16, r3
 8008860:	f7fa fbd4 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
 8008864:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008868:	4618      	mov	r0, r3
 800886a:	ee08 3a90 	vmov	s17, r3
 800886e:	f7fa fbcd 	bl	800300c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008872:	4aa5      	ldr	r2, [pc, #660]	; (8008b08 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8008874:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008878:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 800887c:	4aa3      	ldr	r2, [pc, #652]	; (8008b0c <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800887e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008882:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8008886:	f504 7024 	add.w	r0, r4, #656	; 0x290
 800888a:	f00b fc6d 	bl	8014168 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800888e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008892:	462a      	mov	r2, r5
 8008894:	4658      	mov	r0, fp
 8008896:	9300      	str	r3, [sp, #0]
 8008898:	4629      	mov	r1, r5
 800889a:	23f0      	movs	r3, #240	; 0xf0
 800889c:	f7fa fb90 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 80088a0:	1d26      	adds	r6, r4, #4
        color = newColor;
 80088a2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80088a6:	66a3      	str	r3, [r4, #104]	; 0x68
 80088a8:	4659      	mov	r1, fp
 80088aa:	4630      	mov	r0, r6
 80088ac:	f007 fed0 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80088b0:	462a      	mov	r2, r5
 80088b2:	4650      	mov	r0, sl
 80088b4:	4629      	mov	r1, r5
 80088b6:	f7fa fb76 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80088ba:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80088bc:	4650      	mov	r0, sl
 80088be:	a90a      	add	r1, sp, #40	; 0x28
 80088c0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80088c4:	f00a fc53 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80088c8:	4651      	mov	r1, sl
 80088ca:	4630      	mov	r0, r6
 80088cc:	f007 fec0 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80088d0:	f44f 729a 	mov.w	r2, #308	; 0x134
 80088d4:	2156      	movs	r1, #86	; 0x56
 80088d6:	4648      	mov	r0, r9
 80088d8:	f7fa fb65 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80088dc:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80088e0:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80088e4:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80088e8:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80088ec:	4650      	mov	r0, sl
 80088ee:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80088f2:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80088f6:	4649      	mov	r1, r9
 80088f8:	4798      	blx	r3
 80088fa:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80088fe:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8008902:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008906:	4b82      	ldr	r3, [pc, #520]	; (8008b10 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8008908:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 800890a:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 800890e:	b92b      	cbnz	r3, 800891c <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8008910:	4b80      	ldr	r3, [pc, #512]	; (8008b14 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8008912:	4a81      	ldr	r2, [pc, #516]	; (8008b18 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8008914:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008916:	4881      	ldr	r0, [pc, #516]	; (8008b1c <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8008918:	f022 f890 	bl	802aa3c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800891c:	4b80      	ldr	r3, [pc, #512]	; (8008b20 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800891e:	881b      	ldrh	r3, [r3, #0]
 8008920:	2b22      	cmp	r3, #34	; 0x22
 8008922:	d803      	bhi.n	800892c <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8008924:	4b7f      	ldr	r3, [pc, #508]	; (8008b24 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8008926:	4a7c      	ldr	r2, [pc, #496]	; (8008b18 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8008928:	2161      	movs	r1, #97	; 0x61
 800892a:	e7f4      	b.n	8008916 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 800892c:	4b7e      	ldr	r3, [pc, #504]	; (8008b28 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 800892e:	2122      	movs	r1, #34	; 0x22
 8008930:	6818      	ldr	r0, [r3, #0]
 8008932:	f000 fb1b 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 8008936:	4a7d      	ldr	r2, [pc, #500]	; (8008b2c <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8008938:	4603      	mov	r3, r0
 800893a:	2104      	movs	r1, #4
 800893c:	4650      	mov	r0, sl
 800893e:	f010 fa8f 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8008942:	4648      	mov	r0, r9
        wc1 = value;
 8008944:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8008948:	f00a f816 	bl	8012978 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800894c:	4b78      	ldr	r3, [pc, #480]	; (8008b30 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 800894e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8008950:	a90a      	add	r1, sp, #40	; 0x28
 8008952:	2323      	movs	r3, #35	; 0x23
 8008954:	4648      	mov	r0, r9
 8008956:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800895a:	f00a f82d 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800895e:	4649      	mov	r1, r9
 8008960:	4630      	mov	r0, r6
 8008962:	f007 fe75 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008966:	230a      	movs	r3, #10
 8008968:	9300      	str	r3, [sp, #0]
 800896a:	2232      	movs	r2, #50	; 0x32
 800896c:	23f0      	movs	r3, #240	; 0xf0
 800896e:	4629      	mov	r1, r5
 8008970:	4638      	mov	r0, r7
 8008972:	f7fa fb25 	bl	8002fc0 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008976:	9b03      	ldr	r3, [sp, #12]
 8008978:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800897c:	22a0      	movs	r2, #160	; 0xa0
 800897e:	4611      	mov	r1, r2
 8008980:	4638      	mov	r0, r7
 8008982:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008986:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800898a:	f009 fbcf 	bl	801212c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800898e:	22a0      	movs	r2, #160	; 0xa0
 8008990:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008994:	4638      	mov	r0, r7
 8008996:	f009 fbd4 	bl	8012142 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800899a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800899e:	2b20      	cmp	r3, #32
 80089a0:	d005      	beq.n	80089ae <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 80089a2:	2320      	movs	r3, #32
 80089a4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80089a8:	4638      	mov	r0, r7
 80089aa:	f009 fac9 	bl	8011f40 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80089ae:	4638      	mov	r0, r7
 80089b0:	2101      	movs	r1, #1
 80089b2:	f009 fbd1 	bl	8012158 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80089b6:	4639      	mov	r1, r7
 80089b8:	4630      	mov	r0, r6
 80089ba:	f007 fe49 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80089be:	ee19 0a10 	vmov	r0, s18
 80089c2:	22f0      	movs	r2, #240	; 0xf0
 80089c4:	2121      	movs	r1, #33	; 0x21
 80089c6:	f7fa faee 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80089ca:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80089cc:	aa0a      	add	r2, sp, #40	; 0x28
 80089ce:	a909      	add	r1, sp, #36	; 0x24
 80089d0:	ee19 0a10 	vmov	r0, s18
 80089d4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80089d8:	2302      	movs	r3, #2
 80089da:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80089de:	f00a f9d0 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80089e2:	2352      	movs	r3, #82	; 0x52
        updateTextPosition();
 80089e4:	ee19 0a10 	vmov	r0, s18
 80089e8:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 80089ec:	f7fa fb30 	bl	8003050 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80089f0:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 80089f4:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 80089f8:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 80089fc:	ee19 1a10 	vmov	r1, s18
 8008a00:	4630      	mov	r0, r6
        colorPressed = col;
 8008a02:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8008a06:	ad04      	add	r5, sp, #16
 8008a08:	f007 fe22 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8008a0c:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8008a10:	225b      	movs	r2, #91	; 0x5b
 8008a12:	4640      	mov	r0, r8
 8008a14:	2105      	movs	r1, #5
 8008a16:	f7fa fac6 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008a1a:	4641      	mov	r1, r8
 8008a1c:	4628      	mov	r0, r5
        color = newColor;
 8008a1e:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8008a22:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8008a26:	f009 fd2d 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008a2a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008a2e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8008a32:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008a36:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8008b30 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8008a3a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008a3e:	2353      	movs	r3, #83	; 0x53
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8008a40:	a90a      	add	r1, sp, #40	; 0x28
 8008a42:	4640      	mov	r0, r8
 8008a44:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008a48:	f009 ffb6 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008a4c:	4641      	mov	r1, r8
 8008a4e:	4630      	mov	r0, r6
 8008a50:	f007 fdfe 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8008a54:	ee18 0a10 	vmov	r0, s16
 8008a58:	2223      	movs	r2, #35	; 0x23
 8008a5a:	2145      	movs	r1, #69	; 0x45
 8008a5c:	f7fa faa3 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8008a60:	ee18 1a10 	vmov	r1, s16
 8008a64:	4628      	mov	r0, r5
        color = newColor;
 8008a66:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8008a6a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8008a6e:	f009 fd09 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008a72:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008a76:	ee18 3a10 	vmov	r3, s16
 8008a7a:	333c      	adds	r3, #60	; 0x3c
 8008a7c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008a80:	2355      	movs	r3, #85	; 0x55
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8008a82:	ee18 0a10 	vmov	r0, s16
 8008a86:	a90a      	add	r1, sp, #40	; 0x28
 8008a88:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008a8c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008a90:	f009 ff92 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008a94:	ee18 1a10 	vmov	r1, s16
 8008a98:	4630      	mov	r0, r6
 8008a9a:	f007 fdd9 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008a9e:	ee18 0a90 	vmov	r0, s17
 8008aa2:	220c      	movs	r2, #12
 8008aa4:	2136      	movs	r1, #54	; 0x36
 8008aa6:	f7fa fa7e 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8008aaa:	ee18 1a90 	vmov	r1, s17
 8008aae:	4628      	mov	r0, r5
        color = newColor;
 8008ab0:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008ab4:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008ab8:	f009 fce4 	bl	8012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008abc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008ac0:	ee18 3a90 	vmov	r3, s17
 8008ac4:	333c      	adds	r3, #60	; 0x3c
 8008ac6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008aca:	2354      	movs	r3, #84	; 0x54
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8008acc:	ee18 0a90 	vmov	r0, s17
 8008ad0:	a90a      	add	r1, sp, #40	; 0x28
 8008ad2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008ad6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008ada:	f009 ff6d 	bl	80129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008ade:	4630      	mov	r0, r6
 8008ae0:	ee18 1a90 	vmov	r1, s17
 8008ae4:	f007 fdb4 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008ae8:	4620      	mov	r0, r4
 8008aea:	b00d      	add	sp, #52	; 0x34
 8008aec:	ecbd 8b04 	vpop	{d8-d9}
 8008af0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008af4:	0802e234 	.word	0x0802e234
 8008af8:	0802ef90 	.word	0x0802ef90
 8008afc:	0802f158 	.word	0x0802f158
 8008b00:	0802c640 	.word	0x0802c640
 8008b04:	0802ecc4 	.word	0x0802ecc4
 8008b08:	0802e21c 	.word	0x0802e21c
 8008b0c:	08008781 	.word	0x08008781
 8008b10:	20012e0c 	.word	0x20012e0c
 8008b14:	0802c480 	.word	0x0802c480
 8008b18:	0802c582 	.word	0x0802c582
 8008b1c:	0802c4fd 	.word	0x0802c4fd
 8008b20:	20012e10 	.word	0x20012e10
 8008b24:	0802c544 	.word	0x0802c544
 8008b28:	20012e18 	.word	0x20012e18
 8008b2c:	0802c5ba 	.word	0x0802c5ba
 8008b30:	0802c630 	.word	0x0802c630

08008b34 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8008b34:	4770      	bx	lr

08008b36 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8008b36:	4770      	bx	lr

08008b38 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008b38:	b510      	push	{r4, lr}
}
 8008b3a:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008b3c:	4604      	mov	r4, r0
}
 8008b3e:	f021 f896 	bl	8029c6e <_ZdlPvj>
 8008b42:	4620      	mov	r0, r4
 8008b44:	bd10      	pop	{r4, pc}
	...

08008b48 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8008b48:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008b4c:	4604      	mov	r4, r0
 8008b4e:	4626      	mov	r6, r4
 8008b50:	f00e fc96 	bl	8017480 <_ZN8touchgfx6ScreenC1Ev>
 8008b54:	2500      	movs	r5, #0
 8008b56:	4b2e      	ldr	r3, [pc, #184]	; (8008c10 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8008b58:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008b5a:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8008b5e:	4b2d      	ldr	r3, [pc, #180]	; (8008c14 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8008b60:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8008b62:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8008b66:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008b6a:	23ff      	movs	r3, #255	; 0xff
 8008b6c:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008b70:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8008b74:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8008b78:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8008b7c:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8008b80:	4a25      	ldr	r2, [pc, #148]	; (8008c18 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8008b82:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8008b86:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8008b8a:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8008b8c:	a901      	add	r1, sp, #4
 8008b8e:	4638      	mov	r0, r7
 8008b90:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8008b94:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8008b98:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8008b9c:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8008ba0:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8008ba4:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8008ba8:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8008bac:	66a5      	str	r5, [r4, #104]	; 0x68
 8008bae:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008bb2:	f00a fadc 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8008bb6:	462a      	mov	r2, r5
 8008bb8:	4629      	mov	r1, r5
 8008bba:	4630      	mov	r0, r6
 8008bbc:	f7fa f9f3 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8008bc0:	4630      	mov	r0, r6
 8008bc2:	21f0      	movs	r1, #240	; 0xf0
 8008bc4:	f7f9 ff5c 	bl	8002a80 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8008bc8:	4630      	mov	r0, r6
 8008bca:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8008bce:	f7f9 ff59 	bl	8002a84 <_ZN8touchgfx8Drawable9setHeightEs>
 8008bd2:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8008bd6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008bda:	66a3      	str	r3, [r4, #104]	; 0x68
 8008bdc:	4631      	mov	r1, r6
 8008bde:	4640      	mov	r0, r8
 8008be0:	f007 fd36 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8008be4:	462a      	mov	r2, r5
 8008be6:	4638      	mov	r0, r7
 8008be8:	f06f 0102 	mvn.w	r1, #2
 8008bec:	f7fa f9db 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8008bf0:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8008bf2:	a901      	add	r1, sp, #4
 8008bf4:	4638      	mov	r0, r7
 8008bf6:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008bfa:	f00a fab8 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008bfe:	4640      	mov	r0, r8
 8008c00:	4639      	mov	r1, r7
 8008c02:	f007 fd25 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008c06:	4620      	mov	r0, r4
 8008c08:	b002      	add	sp, #8
 8008c0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008c0e:	bf00      	nop
 8008c10:	0802e268 	.word	0x0802e268
 8008c14:	0802ef90 	.word	0x0802ef90
 8008c18:	0802f158 	.word	0x0802f158

08008c1c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008c1c:	4770      	bx	lr
	...

08008c20 <_Z23getFont_verdana_10_4bppv>:
{
 8008c20:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008c22:	4d17      	ldr	r5, [pc, #92]	; (8008c80 <_Z23getFont_verdana_10_4bppv+0x60>)
 8008c24:	682c      	ldr	r4, [r5, #0]
 8008c26:	f3bf 8f5b 	dmb	ish
 8008c2a:	f014 0401 	ands.w	r4, r4, #1
{
 8008c2e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008c30:	d122      	bne.n	8008c78 <_Z23getFont_verdana_10_4bppv+0x58>
 8008c32:	4628      	mov	r0, r5
 8008c34:	f021 f81d 	bl	8029c72 <__cxa_guard_acquire>
 8008c38:	b1f0      	cbz	r0, 8008c78 <_Z23getFont_verdana_10_4bppv+0x58>
 8008c3a:	233f      	movs	r3, #63	; 0x3f
 8008c3c:	9309      	str	r3, [sp, #36]	; 0x24
 8008c3e:	4b11      	ldr	r3, [pc, #68]	; (8008c84 <_Z23getFont_verdana_10_4bppv+0x64>)
 8008c40:	9308      	str	r3, [sp, #32]
 8008c42:	4b11      	ldr	r3, [pc, #68]	; (8008c88 <_Z23getFont_verdana_10_4bppv+0x68>)
 8008c44:	9307      	str	r3, [sp, #28]
 8008c46:	2301      	movs	r3, #1
 8008c48:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008c4c:	9304      	str	r3, [sp, #16]
 8008c4e:	2304      	movs	r3, #4
 8008c50:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008c54:	230a      	movs	r3, #10
 8008c56:	490d      	ldr	r1, [pc, #52]	; (8008c8c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8008c58:	9300      	str	r3, [sp, #0]
 8008c5a:	225f      	movs	r2, #95	; 0x5f
 8008c5c:	230c      	movs	r3, #12
 8008c5e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008c62:	480b      	ldr	r0, [pc, #44]	; (8008c90 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008c64:	940a      	str	r4, [sp, #40]	; 0x28
 8008c66:	9401      	str	r4, [sp, #4]
 8008c68:	f7fd f9ec 	bl	8006044 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008c6c:	4809      	ldr	r0, [pc, #36]	; (8008c94 <_Z23getFont_verdana_10_4bppv+0x74>)
 8008c6e:	f021 ff03 	bl	802aa78 <atexit>
 8008c72:	4628      	mov	r0, r5
 8008c74:	f021 f809 	bl	8029c8a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8008c78:	4805      	ldr	r0, [pc, #20]	; (8008c90 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008c7a:	b00f      	add	sp, #60	; 0x3c
 8008c7c:	bd30      	pop	{r4, r5, pc}
 8008c7e:	bf00      	nop
 8008c80:	20001ed0 	.word	0x20001ed0
 8008c84:	08046dfc 	.word	0x08046dfc
 8008c88:	08047038 	.word	0x08047038
 8008c8c:	08045e44 	.word	0x08045e44
 8008c90:	20001ed4 	.word	0x20001ed4
 8008c94:	08008c1d 	.word	0x08008c1d

08008c98 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008c98:	4770      	bx	lr
	...

08008c9c <_Z23getFont_verdana_12_4bppv>:
{
 8008c9c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008c9e:	4d17      	ldr	r5, [pc, #92]	; (8008cfc <_Z23getFont_verdana_12_4bppv+0x60>)
 8008ca0:	682c      	ldr	r4, [r5, #0]
 8008ca2:	f3bf 8f5b 	dmb	ish
 8008ca6:	f014 0401 	ands.w	r4, r4, #1
{
 8008caa:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008cac:	d122      	bne.n	8008cf4 <_Z23getFont_verdana_12_4bppv+0x58>
 8008cae:	4628      	mov	r0, r5
 8008cb0:	f020 ffdf 	bl	8029c72 <__cxa_guard_acquire>
 8008cb4:	b1f0      	cbz	r0, 8008cf4 <_Z23getFont_verdana_12_4bppv+0x58>
 8008cb6:	233f      	movs	r3, #63	; 0x3f
 8008cb8:	9309      	str	r3, [sp, #36]	; 0x24
 8008cba:	4b11      	ldr	r3, [pc, #68]	; (8008d00 <_Z23getFont_verdana_12_4bppv+0x64>)
 8008cbc:	9308      	str	r3, [sp, #32]
 8008cbe:	4b11      	ldr	r3, [pc, #68]	; (8008d04 <_Z23getFont_verdana_12_4bppv+0x68>)
 8008cc0:	9307      	str	r3, [sp, #28]
 8008cc2:	2301      	movs	r3, #1
 8008cc4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008cc8:	9304      	str	r3, [sp, #16]
 8008cca:	2304      	movs	r3, #4
 8008ccc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008cd0:	230c      	movs	r3, #12
 8008cd2:	490d      	ldr	r1, [pc, #52]	; (8008d08 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8008cd4:	9300      	str	r3, [sp, #0]
 8008cd6:	2260      	movs	r2, #96	; 0x60
 8008cd8:	230f      	movs	r3, #15
 8008cda:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008cde:	480b      	ldr	r0, [pc, #44]	; (8008d0c <_Z23getFont_verdana_12_4bppv+0x70>)
 8008ce0:	940a      	str	r4, [sp, #40]	; 0x28
 8008ce2:	9401      	str	r4, [sp, #4]
 8008ce4:	f7fd f9ae 	bl	8006044 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008ce8:	4809      	ldr	r0, [pc, #36]	; (8008d10 <_Z23getFont_verdana_12_4bppv+0x74>)
 8008cea:	f021 fec5 	bl	802aa78 <atexit>
 8008cee:	4628      	mov	r0, r5
 8008cf0:	f020 ffcb 	bl	8029c8a <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8008cf4:	4805      	ldr	r0, [pc, #20]	; (8008d0c <_Z23getFont_verdana_12_4bppv+0x70>)
 8008cf6:	b00f      	add	sp, #60	; 0x3c
 8008cf8:	bd30      	pop	{r4, r5, pc}
 8008cfa:	bf00      	nop
 8008cfc:	20001f00 	.word	0x20001f00
 8008d00:	08046e30 	.word	0x08046e30
 8008d04:	0804703c 	.word	0x0804703c
 8008d08:	08046378 	.word	0x08046378
 8008d0c:	20001f04 	.word	0x20001f04
 8008d10:	08008c99 	.word	0x08008c99

08008d14 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008d14:	4770      	bx	lr
	...

08008d18 <_Z23getFont_verdana_19_4bppv>:
{
 8008d18:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008d1a:	4d17      	ldr	r5, [pc, #92]	; (8008d78 <_Z23getFont_verdana_19_4bppv+0x60>)
 8008d1c:	682c      	ldr	r4, [r5, #0]
 8008d1e:	f3bf 8f5b 	dmb	ish
 8008d22:	f014 0401 	ands.w	r4, r4, #1
{
 8008d26:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008d28:	d122      	bne.n	8008d70 <_Z23getFont_verdana_19_4bppv+0x58>
 8008d2a:	4628      	mov	r0, r5
 8008d2c:	f020 ffa1 	bl	8029c72 <__cxa_guard_acquire>
 8008d30:	b1f0      	cbz	r0, 8008d70 <_Z23getFont_verdana_19_4bppv+0x58>
 8008d32:	233f      	movs	r3, #63	; 0x3f
 8008d34:	9309      	str	r3, [sp, #36]	; 0x24
 8008d36:	4b11      	ldr	r3, [pc, #68]	; (8008d7c <_Z23getFont_verdana_19_4bppv+0x64>)
 8008d38:	9308      	str	r3, [sp, #32]
 8008d3a:	4b11      	ldr	r3, [pc, #68]	; (8008d80 <_Z23getFont_verdana_19_4bppv+0x68>)
 8008d3c:	9307      	str	r3, [sp, #28]
 8008d3e:	2301      	movs	r3, #1
 8008d40:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008d44:	9304      	str	r3, [sp, #16]
 8008d46:	2304      	movs	r3, #4
 8008d48:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008d4c:	2313      	movs	r3, #19
 8008d4e:	490d      	ldr	r1, [pc, #52]	; (8008d84 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8008d50:	9300      	str	r3, [sp, #0]
 8008d52:	225f      	movs	r2, #95	; 0x5f
 8008d54:	2317      	movs	r3, #23
 8008d56:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008d5a:	480b      	ldr	r0, [pc, #44]	; (8008d88 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008d5c:	940a      	str	r4, [sp, #40]	; 0x28
 8008d5e:	9401      	str	r4, [sp, #4]
 8008d60:	f7fd f970 	bl	8006044 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008d64:	4809      	ldr	r0, [pc, #36]	; (8008d8c <_Z23getFont_verdana_19_4bppv+0x74>)
 8008d66:	f021 fe87 	bl	802aa78 <atexit>
 8008d6a:	4628      	mov	r0, r5
 8008d6c:	f020 ff8d 	bl	8029c8a <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8008d70:	4805      	ldr	r0, [pc, #20]	; (8008d88 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008d72:	b00f      	add	sp, #60	; 0x3c
 8008d74:	bd30      	pop	{r4, r5, pc}
 8008d76:	bf00      	nop
 8008d78:	20001f30 	.word	0x20001f30
 8008d7c:	08046eb4 	.word	0x08046eb4
 8008d80:	08047040 	.word	0x08047040
 8008d84:	080468b8 	.word	0x080468b8
 8008d88:	20001f34 	.word	0x20001f34
 8008d8c:	08008d15 	.word	0x08008d15

08008d90 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008d90:	4770      	bx	lr
	...

08008d94 <_Z23getFont_verdana_40_4bppv>:
{
 8008d94:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008d96:	4d16      	ldr	r5, [pc, #88]	; (8008df0 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008d98:	682c      	ldr	r4, [r5, #0]
 8008d9a:	f3bf 8f5b 	dmb	ish
 8008d9e:	f014 0401 	ands.w	r4, r4, #1
{
 8008da2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008da4:	d120      	bne.n	8008de8 <_Z23getFont_verdana_40_4bppv+0x54>
 8008da6:	4628      	mov	r0, r5
 8008da8:	f020 ff63 	bl	8029c72 <__cxa_guard_acquire>
 8008dac:	b1e0      	cbz	r0, 8008de8 <_Z23getFont_verdana_40_4bppv+0x54>
 8008dae:	233f      	movs	r3, #63	; 0x3f
 8008db0:	9309      	str	r3, [sp, #36]	; 0x24
 8008db2:	4b10      	ldr	r3, [pc, #64]	; (8008df4 <_Z23getFont_verdana_40_4bppv+0x60>)
 8008db4:	9308      	str	r3, [sp, #32]
 8008db6:	4b10      	ldr	r3, [pc, #64]	; (8008df8 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008db8:	4910      	ldr	r1, [pc, #64]	; (8008dfc <_Z23getFont_verdana_40_4bppv+0x68>)
 8008dba:	4811      	ldr	r0, [pc, #68]	; (8008e00 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008dbc:	940a      	str	r4, [sp, #40]	; 0x28
 8008dbe:	2201      	movs	r2, #1
 8008dc0:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8008dc4:	2304      	movs	r3, #4
 8008dc6:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8008dca:	2328      	movs	r3, #40	; 0x28
 8008dcc:	9300      	str	r3, [sp, #0]
 8008dce:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008dd2:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8008dd6:	9405      	str	r4, [sp, #20]
 8008dd8:	f7fd f934 	bl	8006044 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008ddc:	4809      	ldr	r0, [pc, #36]	; (8008e04 <_Z23getFont_verdana_40_4bppv+0x70>)
 8008dde:	f021 fe4b 	bl	802aa78 <atexit>
 8008de2:	4628      	mov	r0, r5
 8008de4:	f020 ff51 	bl	8029c8a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8008de8:	4805      	ldr	r0, [pc, #20]	; (8008e00 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008dea:	b00f      	add	sp, #60	; 0x3c
 8008dec:	bd30      	pop	{r4, r5, pc}
 8008dee:	bf00      	nop
 8008df0:	20001f60 	.word	0x20001f60
 8008df4:	08047034 	.word	0x08047034
 8008df8:	08047044 	.word	0x08047044
 8008dfc:	08046dec 	.word	0x08046dec
 8008e00:	20001f64 	.word	0x20001f64
 8008e04:	08008d91 	.word	0x08008d91

08008e08 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8008e08:	2000      	movs	r0, #0
 8008e0a:	4770      	bx	lr

08008e0c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8008e0c:	2000      	movs	r0, #0
 8008e0e:	4770      	bx	lr

08008e10 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008e10:	b40e      	push	{r1, r2, r3}
 8008e12:	b503      	push	{r0, r1, lr}
 8008e14:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008e16:	2100      	movs	r1, #0
{
 8008e18:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8008e1c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008e1e:	f00d fe6d 	bl	8016afc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008e22:	b002      	add	sp, #8
 8008e24:	f85d eb04 	ldr.w	lr, [sp], #4
 8008e28:	b003      	add	sp, #12
 8008e2a:	4770      	bx	lr

08008e2c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008e2c:	b40c      	push	{r2, r3}
 8008e2e:	b507      	push	{r0, r1, r2, lr}
 8008e30:	ab04      	add	r3, sp, #16
 8008e32:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8008e36:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8008e38:	f00d fe60 	bl	8016afc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008e3c:	b003      	add	sp, #12
 8008e3e:	f85d eb04 	ldr.w	lr, [sp], #4
 8008e42:	b002      	add	sp, #8
 8008e44:	4770      	bx	lr
	...

08008e48 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8008e48:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8008e4a:	b510      	push	{r4, lr}
 8008e4c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8008e4e:	b373      	cbz	r3, 8008eae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008e50:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8008e52:	b92b      	cbnz	r3, 8008e60 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008e54:	4b18      	ldr	r3, [pc, #96]	; (8008eb8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8008e56:	4a19      	ldr	r2, [pc, #100]	; (8008ebc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8008e58:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8008e5a:	4819      	ldr	r0, [pc, #100]	; (8008ec0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8008e5c:	f021 fdee 	bl	802aa3c <__assert_func>
            return buffer[pos];
 8008e60:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8008e62:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8008e66:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8008e68:	b30b      	cbz	r3, 8008eae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8008e6a:	f00f fa44 	bl	80182f6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8008e6e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008e70:	2b01      	cmp	r3, #1
 8008e72:	d803      	bhi.n	8008e7c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008e74:	4b13      	ldr	r3, [pc, #76]	; (8008ec4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8008e76:	4a14      	ldr	r2, [pc, #80]	; (8008ec8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008e78:	21cb      	movs	r1, #203	; 0xcb
 8008e7a:	e7ee      	b.n	8008e5a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8008e7c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8008e7e:	1c53      	adds	r3, r2, #1
 8008e80:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8008e82:	2b09      	cmp	r3, #9
 8008e84:	4619      	mov	r1, r3
 8008e86:	bf88      	it	hi
 8008e88:	f1a3 010a 	subhi.w	r1, r3, #10
 8008e8c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008e90:	f640 103f 	movw	r0, #2367	; 0x93f
 8008e94:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8008e96:	4281      	cmp	r1, r0
 8008e98:	d109      	bne.n	8008eae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8008e9a:	2b0a      	cmp	r3, #10
 8008e9c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008ea0:	bf28      	it	cs
 8008ea2:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008ea4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8008ea8:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8008eaa:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8008eac:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8008eae:	4620      	mov	r0, r4
}
 8008eb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008eb4:	f00f b922 	b.w	80180fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8008eb8:	0802e294 	.word	0x0802e294
 8008ebc:	0802e29d 	.word	0x0802e29d
 8008ec0:	0802e348 	.word	0x0802e348
 8008ec4:	0802e392 	.word	0x0802e392
 8008ec8:	0802e3a0 	.word	0x0802e3a0

08008ecc <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8008ecc:	f00f b8dd 	b.w	801808a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08008ed0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8008ed0:	b510      	push	{r4, lr}
 8008ed2:	b086      	sub	sp, #24
 8008ed4:	ac02      	add	r4, sp, #8
 8008ed6:	e884 0006 	stmia.w	r4, {r1, r2}
 8008eda:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8008edc:	ab0a      	add	r3, sp, #40	; 0x28
 8008ede:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8008ee0:	9301      	str	r3, [sp, #4]
 8008ee2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008ee4:	9300      	str	r3, [sp, #0]
 8008ee6:	4621      	mov	r1, r4
 8008ee8:	9b08      	ldr	r3, [sp, #32]
 8008eea:	f00c f9cb 	bl	8015284 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8008eee:	b006      	add	sp, #24
 8008ef0:	bd10      	pop	{r4, pc}
	...

08008ef4 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8008ef4:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8008ef6:	bb18      	cbnz	r0, 8008f40 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8008ef8:	4b12      	ldr	r3, [pc, #72]	; (8008f44 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8008efa:	4813      	ldr	r0, [pc, #76]	; (8008f48 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8008efc:	681c      	ldr	r4, [r3, #0]
 8008efe:	4913      	ldr	r1, [pc, #76]	; (8008f4c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8008f00:	b1b4      	cbz	r4, 8008f30 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8008f02:	6822      	ldr	r2, [r4, #0]
 8008f04:	4422      	add	r2, r4
 8008f06:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8008f08:	6862      	ldr	r2, [r4, #4]
 8008f0a:	4422      	add	r2, r4
 8008f0c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008f0e:	68a2      	ldr	r2, [r4, #8]
 8008f10:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8008f12:	4b0f      	ldr	r3, [pc, #60]	; (8008f50 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8008f14:	2200      	movs	r2, #0
 8008f16:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8008f18:	f000 f838 	bl	8008f8c <_ZN17TypedTextDatabase8getFontsEv>
 8008f1c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8008f1e:	f000 f833 	bl	8008f88 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8008f22:	4b0c      	ldr	r3, [pc, #48]	; (8008f54 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8008f24:	601c      	str	r4, [r3, #0]
        fonts = f;
 8008f26:	4b0c      	ldr	r3, [pc, #48]	; (8008f58 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8008f28:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8008f2a:	4b0c      	ldr	r3, [pc, #48]	; (8008f5c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8008f2c:	8018      	strh	r0, [r3, #0]
    }
}
 8008f2e:	e007      	b.n	8008f40 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8008f30:	4b0b      	ldr	r3, [pc, #44]	; (8008f60 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8008f32:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008f34:	4b0b      	ldr	r3, [pc, #44]	; (8008f64 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8008f36:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8008f38:	4b0b      	ldr	r3, [pc, #44]	; (8008f68 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8008f3a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008f3c:	2c00      	cmp	r4, #0
 8008f3e:	d1e8      	bne.n	8008f12 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008f40:	bd38      	pop	{r3, r4, r5, pc}
 8008f42:	bf00      	nop
 8008f44:	20001f90 	.word	0x20001f90
 8008f48:	20001f94 	.word	0x20001f94
 8008f4c:	20001f98 	.word	0x20001f98
 8008f50:	20001f9c 	.word	0x20001f9c
 8008f54:	20012e0c 	.word	0x20012e0c
 8008f58:	20012e14 	.word	0x20012e14
 8008f5c:	20012e10 	.word	0x20012e10
 8008f60:	080471dc 	.word	0x080471dc
 8008f64:	08047048 	.word	0x08047048
 8008f68:	08047808 	.word	0x08047808

08008f6c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008f6c:	4b04      	ldr	r3, [pc, #16]	; (8008f80 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8008f6e:	681b      	ldr	r3, [r3, #0]
 8008f70:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008f74:	4b03      	ldr	r3, [pc, #12]	; (8008f84 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8008f76:	681b      	ldr	r3, [r3, #0]
}
 8008f78:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8008f7c:	4770      	bx	lr
 8008f7e:	bf00      	nop
 8008f80:	20001f98 	.word	0x20001f98
 8008f84:	20001f94 	.word	0x20001f94

08008f88 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008f88:	2065      	movs	r0, #101	; 0x65
 8008f8a:	4770      	bx	lr

08008f8c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8008f8c:	4800      	ldr	r0, [pc, #0]	; (8008f90 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8008f8e:	4770      	bx	lr
 8008f90:	20001fa0 	.word	0x20001fa0

08008f94 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008f94:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8008f96:	f7ff febf 	bl	8008d18 <_Z23getFont_verdana_19_4bppv>
};
 8008f9a:	4c06      	ldr	r4, [pc, #24]	; (8008fb4 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8008f9c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8008f9e:	f7ff fef9 	bl	8008d94 <_Z23getFont_verdana_40_4bppv>
};
 8008fa2:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8008fa4:	f7ff fe3c 	bl	8008c20 <_Z23getFont_verdana_10_4bppv>
};
 8008fa8:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8008faa:	f7ff fe77 	bl	8008c9c <_Z23getFont_verdana_12_4bppv>
};
 8008fae:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8008fb0:	bd10      	pop	{r4, pc}
 8008fb2:	bf00      	nop
 8008fb4:	20001fa0 	.word	0x20001fa0

08008fb8 <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 8008fb8:	4770      	bx	lr

08008fba <_ZThn4_N20CalibrationPresenterD1Ev>:
 8008fba:	3804      	subs	r0, #4
 8008fbc:	4770      	bx	lr

08008fbe <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 8008fbe:	4770      	bx	lr

08008fc0 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008fc0:	68c0      	ldr	r0, [r0, #12]
 8008fc2:	6803      	ldr	r3, [r0, #0]
 8008fc4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008fc6:	4718      	bx	r3

08008fc8 <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008fc8:	f1a0 0004 	sub.w	r0, r0, #4
 8008fcc:	f7ff bff8 	b.w	8008fc0 <_ZN20CalibrationPresenter15setTimeoutValueEi>

08008fd0 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 8008fd0:	b510      	push	{r4, lr}
 8008fd2:	2110      	movs	r1, #16
 8008fd4:	4604      	mov	r4, r0
 8008fd6:	f020 fe4a 	bl	8029c6e <_ZdlPvj>
 8008fda:	4620      	mov	r0, r4
 8008fdc:	bd10      	pop	{r4, pc}

08008fde <_ZThn4_N20CalibrationPresenterD0Ev>:
 8008fde:	f1a0 0004 	sub.w	r0, r0, #4
 8008fe2:	e7f5      	b.n	8008fd0 <_ZN20CalibrationPresenterD0Ev>

08008fe4 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8008fe4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8008fe6:	2200      	movs	r2, #0
 8008fe8:	6082      	str	r2, [r0, #8]
    : view(v)
 8008fea:	4a04      	ldr	r2, [pc, #16]	; (8008ffc <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8008fec:	60c1      	str	r1, [r0, #12]
 8008fee:	f102 0408 	add.w	r4, r2, #8
 8008ff2:	3224      	adds	r2, #36	; 0x24
 8008ff4:	6004      	str	r4, [r0, #0]
 8008ff6:	6042      	str	r2, [r0, #4]
}
 8008ff8:	bd10      	pop	{r4, pc}
 8008ffa:	bf00      	nop
 8008ffc:	0802e474 	.word	0x0802e474

08009000 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8009000:	4770      	bx	lr
	...

08009004 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8009004:	b510      	push	{r4, lr}
 8009006:	4b03      	ldr	r3, [pc, #12]	; (8009014 <_ZN15CalibrationViewD1Ev+0x10>)
 8009008:	6003      	str	r3, [r0, #0]
 800900a:	4604      	mov	r4, r0
 800900c:	f7f9 ff50 	bl	8002eb0 <_ZN19CalibrationViewBaseD1Ev>
 8009010:	4620      	mov	r0, r4
 8009012:	bd10      	pop	{r4, pc}
 8009014:	0802e4b0 	.word	0x0802e4b0

08009018 <_ZN15CalibrationViewD0Ev>:
 8009018:	b510      	push	{r4, lr}
 800901a:	4604      	mov	r4, r0
 800901c:	f7ff fff2 	bl	8009004 <_ZN15CalibrationViewD1Ev>
 8009020:	4620      	mov	r0, r4
 8009022:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8009026:	f020 fe22 	bl	8029c6e <_ZdlPvj>
 800902a:	4620      	mov	r0, r4
 800902c:	bd10      	pop	{r4, pc}
	...

08009030 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8009030:	b510      	push	{r4, lr}
 8009032:	4604      	mov	r4, r0
 8009034:	f7fa f850 	bl	80030d8 <_ZN19CalibrationViewBaseC1Ev>
 8009038:	4b01      	ldr	r3, [pc, #4]	; (8009040 <_ZN15CalibrationViewC1Ev+0x10>)
 800903a:	6023      	str	r3, [r4, #0]
}
 800903c:	4620      	mov	r0, r4
 800903e:	bd10      	pop	{r4, pc}
 8009040:	0802e4b0 	.word	0x0802e4b0

08009044 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8009044:	f7f9 bf01 	b.w	8002e4a <_ZN19CalibrationViewBase11setupScreenEv>

08009048 <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 8009048:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800904a:	4a0a      	ldr	r2, [pc, #40]	; (8009074 <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 800904c:	4605      	mov	r5, r0
 800904e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009050:	460b      	mov	r3, r1
 8009052:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8009056:	2104      	movs	r1, #4
 8009058:	f00f ff02 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 800905c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009060:	f00d fe76 	bl	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009064:	b92c      	cbnz	r4, 8009072 <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 8009066:	f00c fd8b 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800906a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800906e:	f7fb bc61 	b.w	8004934 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009072:	bd38      	pop	{r3, r4, r5, pc}
 8009074:	0802e4a4 	.word	0x0802e4a4

08009078 <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 8009078:	4770      	bx	lr

0800907a <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 800907a:	3804      	subs	r0, #4
 800907c:	4770      	bx	lr

0800907e <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 800907e:	4770      	bx	lr

08009080 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 8009080:	4770      	bx	lr

08009082 <_ZN25Calibration_HallPresenterD0Ev>:
 8009082:	b510      	push	{r4, lr}
 8009084:	2110      	movs	r1, #16
 8009086:	4604      	mov	r4, r0
 8009088:	f020 fdf1 	bl	8029c6e <_ZdlPvj>
 800908c:	4620      	mov	r0, r4
 800908e:	bd10      	pop	{r4, pc}

08009090 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 8009090:	f1a0 0004 	sub.w	r0, r0, #4
 8009094:	e7f5      	b.n	8009082 <_ZN25Calibration_HallPresenterD0Ev>

08009096 <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 8009096:	4770      	bx	lr

08009098 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 8009098:	b510      	push	{r4, lr}
 800909a:	2200      	movs	r2, #0
 800909c:	6082      	str	r2, [r0, #8]
    : view(v)
 800909e:	4a04      	ldr	r2, [pc, #16]	; (80090b0 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 80090a0:	60c1      	str	r1, [r0, #12]
 80090a2:	f102 0408 	add.w	r4, r2, #8
 80090a6:	3224      	adds	r2, #36	; 0x24
 80090a8:	6004      	str	r4, [r0, #0]
 80090aa:	6042      	str	r2, [r0, #4]
}
 80090ac:	bd10      	pop	{r4, pc}
 80090ae:	bf00      	nop
 80090b0:	0802e4e0 	.word	0x0802e4e0

080090b4 <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 80090b4:	4770      	bx	lr

080090b6 <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 80090b6:	4770      	bx	lr

080090b8 <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 80090b8:	b510      	push	{r4, lr}
 80090ba:	4b03      	ldr	r3, [pc, #12]	; (80090c8 <_ZN20Calibration_HallViewD1Ev+0x10>)
 80090bc:	6003      	str	r3, [r0, #0]
 80090be:	4604      	mov	r4, r0
 80090c0:	f7fa fa50 	bl	8003564 <_ZN24Calibration_HallViewBaseD1Ev>
 80090c4:	4620      	mov	r0, r4
 80090c6:	bd10      	pop	{r4, pc}
 80090c8:	0802e520 	.word	0x0802e520

080090cc <_ZN20Calibration_HallViewD0Ev>:
 80090cc:	b510      	push	{r4, lr}
 80090ce:	4604      	mov	r4, r0
 80090d0:	f7ff fff2 	bl	80090b8 <_ZN20Calibration_HallViewD1Ev>
 80090d4:	4620      	mov	r0, r4
 80090d6:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 80090da:	f020 fdc8 	bl	8029c6e <_ZdlPvj>
 80090de:	4620      	mov	r0, r4
 80090e0:	bd10      	pop	{r4, pc}
	...

080090e4 <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 80090e4:	b510      	push	{r4, lr}
 80090e6:	4604      	mov	r4, r0
 80090e8:	f7fa fa82 	bl	80035f0 <_ZN24Calibration_HallViewBaseC1Ev>
 80090ec:	4b01      	ldr	r3, [pc, #4]	; (80090f4 <_ZN20Calibration_HallViewC1Ev+0x10>)
 80090ee:	6023      	str	r3, [r4, #0]
}
 80090f0:	4620      	mov	r0, r4
 80090f2:	bd10      	pop	{r4, pc}
 80090f4:	0802e520 	.word	0x0802e520

080090f8 <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 80090f8:	f7fa ba0f 	b.w	800351a <_ZN24Calibration_HallViewBase11setupScreenEv>

080090fc <_ZN20Calibration_HallView25function_cali_hall_sensorEv>:

void Calibration_HallView::function_cali_hall_sensor()
{
 80090fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80090fe:	b085      	sub	sp, #20
 8009100:	4604      	mov	r4, r0
#ifndef SIMULATOR

	uint32_t* Samples = MEAS_start_measure();
 8009102:	f7f8 fd15 	bl	8001b30 <MEAS_start_measure>
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8009106:	4d22      	ldr	r5, [pc, #136]	; (8009190 <_ZN20Calibration_HallView25function_cali_hall_sensorEv+0x94>)
 8009108:	4606      	mov	r6, r0
	FFT fft = calculate_freq_and_signalstrength(3, Samples);
 800910a:	4602      	mov	r2, r0
 800910c:	2103      	movs	r1, #3
 800910e:	a801      	add	r0, sp, #4
 8009110:	f7f7 fdfc 	bl	8000d0c <calculate_freq_and_signalstrength>
 8009114:	9b02      	ldr	r3, [sp, #8]
 8009116:	9300      	str	r3, [sp, #0]
 8009118:	462a      	mov	r2, r5
 800911a:	466b      	mov	r3, sp
 800911c:	210a      	movs	r1, #10
 800911e:	f504 706a 	add.w	r0, r4, #936	; 0x3a8
 8009122:	9f01      	ldr	r7, [sp, #4]
 8009124:	f010 f888 	bl	8019238 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	Unicode::snprintfFloat(CALIBRATION_HSR_SBuffer, CALIBRATION_HSR_S_SIZE, "%.2f", fft.signal_strength);
	CALIBRATION_HSR_S.invalidate();
 8009128:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 800912c:	f00d fe10 	bl	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009130:	466b      	mov	r3, sp
 8009132:	462a      	mov	r2, r5
 8009134:	210a      	movs	r1, #10
 8009136:	f504 7065 	add.w	r0, r4, #916	; 0x394
 800913a:	9700      	str	r7, [sp, #0]
 800913c:	f010 f87c 	bl	8019238 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(CALIBRATION_HSR_FBuffer, CALIBRATION_HSR_F_SIZE, "%.2f", fft.main_freq);
	CALIBRATION_HSR_F.invalidate();
 8009140:	f504 7098 	add.w	r0, r4, #304	; 0x130
 8009144:	f00d fe04 	bl	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>

	fft = calculate_freq_and_signalstrength(4, Samples);
 8009148:	2104      	movs	r1, #4
 800914a:	eb0d 0001 	add.w	r0, sp, r1
 800914e:	4632      	mov	r2, r6
 8009150:	f7f7 fddc 	bl	8000d0c <calculate_freq_and_signalstrength>
 8009154:	9b02      	ldr	r3, [sp, #8]
 8009156:	9300      	str	r3, [sp, #0]
 8009158:	462a      	mov	r2, r5
 800915a:	466b      	mov	r3, sp
 800915c:	210a      	movs	r1, #10
 800915e:	f504 705b 	add.w	r0, r4, #876	; 0x36c
 8009162:	9e01      	ldr	r6, [sp, #4]
 8009164:	f010 f868 	bl	8019238 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

	Unicode::snprintfFloat(CALIBRATION_HSL_SBuffer, CALIBRATION_HSL_S_SIZE, "%.2f", fft.signal_strength);
	CALIBRATION_HSL_S.invalidate();
 8009168:	f104 0098 	add.w	r0, r4, #152	; 0x98
 800916c:	f00d fdf0 	bl	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009170:	466b      	mov	r3, sp
 8009172:	462a      	mov	r2, r5
 8009174:	210a      	movs	r1, #10
 8009176:	f504 7060 	add.w	r0, r4, #896	; 0x380
 800917a:	9600      	str	r6, [sp, #0]
 800917c:	f010 f85c 	bl	8019238 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(CALIBRATION_HSL_FBuffer, CALIBRATION_HSL_F_SIZE, "%.2f", fft.main_freq);
	CALIBRATION_HSL_F.invalidate();
 8009180:	f104 00e4 	add.w	r0, r4, #228	; 0xe4

#endif
}
 8009184:	b005      	add	sp, #20
 8009186:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	CALIBRATION_HSL_F.invalidate();
 800918a:	f00d bde1 	b.w	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>
 800918e:	bf00      	nop
 8009190:	0802e510 	.word	0x0802e510

08009194 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8009194:	4770      	bx	lr

08009196 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8009196:	3804      	subs	r0, #4
 8009198:	4770      	bx	lr

0800919a <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 800919a:	4770      	bx	lr

0800919c <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 800919c:	4770      	bx	lr

0800919e <_ZN24Calibration_PadPresenterD0Ev>:
 800919e:	b510      	push	{r4, lr}
 80091a0:	2110      	movs	r1, #16
 80091a2:	4604      	mov	r4, r0
 80091a4:	f020 fd63 	bl	8029c6e <_ZdlPvj>
 80091a8:	4620      	mov	r0, r4
 80091aa:	bd10      	pop	{r4, pc}

080091ac <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 80091ac:	f1a0 0004 	sub.w	r0, r0, #4
 80091b0:	e7f5      	b.n	800919e <_ZN24Calibration_PadPresenterD0Ev>

080091b2 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 80091b2:	4770      	bx	lr

080091b4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 80091b4:	b510      	push	{r4, lr}
 80091b6:	2200      	movs	r2, #0
 80091b8:	6082      	str	r2, [r0, #8]
    : view(v)
 80091ba:	4a04      	ldr	r2, [pc, #16]	; (80091cc <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 80091bc:	60c1      	str	r1, [r0, #12]
 80091be:	f102 0408 	add.w	r4, r2, #8
 80091c2:	3224      	adds	r2, #36	; 0x24
 80091c4:	6004      	str	r4, [r0, #0]
 80091c6:	6042      	str	r2, [r0, #4]
}
 80091c8:	bd10      	pop	{r4, pc}
 80091ca:	bf00      	nop
 80091cc:	0802e554 	.word	0x0802e554

080091d0 <_ZN19Calibration_PadView14tearDownScreenEv>:
    Calibration_PadViewBase::setupScreen();
}

void Calibration_PadView::tearDownScreen() {
    Calibration_PadViewBase::tearDownScreen();
}
 80091d0:	4770      	bx	lr

080091d2 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value) {}
 80091d2:	4770      	bx	lr

080091d4 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 80091d4:	b510      	push	{r4, lr}
 80091d6:	4b03      	ldr	r3, [pc, #12]	; (80091e4 <_ZN19Calibration_PadViewD1Ev+0x10>)
 80091d8:	6003      	str	r3, [r0, #0]
 80091da:	4604      	mov	r4, r0
 80091dc:	f7fa fcde 	bl	8003b9c <_ZN23Calibration_PadViewBaseD1Ev>
 80091e0:	4620      	mov	r0, r4
 80091e2:	bd10      	pop	{r4, pc}
 80091e4:	0802e58c 	.word	0x0802e58c

080091e8 <_ZN19Calibration_PadViewD0Ev>:
 80091e8:	b510      	push	{r4, lr}
 80091ea:	4604      	mov	r4, r0
 80091ec:	f7ff fff2 	bl	80091d4 <_ZN19Calibration_PadViewD1Ev>
 80091f0:	4620      	mov	r0, r4
 80091f2:	f44f 518f 	mov.w	r1, #4576	; 0x11e0
 80091f6:	f020 fd3a 	bl	8029c6e <_ZdlPvj>
 80091fa:	4620      	mov	r0, r4
 80091fc:	bd10      	pop	{r4, pc}
	...

08009200 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView() {}
 8009200:	b510      	push	{r4, lr}
 8009202:	4604      	mov	r4, r0
 8009204:	f7fa fd04 	bl	8003c10 <_ZN23Calibration_PadViewBaseC1Ev>
 8009208:	4b01      	ldr	r3, [pc, #4]	; (8009210 <_ZN19Calibration_PadViewC1Ev+0x10>)
 800920a:	6023      	str	r3, [r4, #0]
 800920c:	4620      	mov	r0, r4
 800920e:	bd10      	pop	{r4, pc}
 8009210:	0802e58c 	.word	0x0802e58c

08009214 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8009214:	f7fa bc9d 	b.w	8003b52 <_ZN23Calibration_PadViewBase11setupScreenEv>

08009218 <_ZN19Calibration_PadView17function_cali_padEv>:

void Calibration_PadView::function_cali_pad() {
 8009218:	b5f0      	push	{r4, r5, r6, r7, lr}
 800921a:	b085      	sub	sp, #20
 800921c:	4604      	mov	r4, r0
#ifndef SIMULATOR
	
	uint32_t* Samples = calculate_average_of_measurements();
 800921e:	f7f7 fe39 	bl	8000e94 <calculate_average_of_measurements>
 8009222:	4d21      	ldr	r5, [pc, #132]	; (80092a8 <_ZN19Calibration_PadView17function_cali_padEv+0x90>)
 8009224:	4606      	mov	r6, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples);
 8009226:	4602      	mov	r2, r0
 8009228:	2101      	movs	r1, #1
 800922a:	a801      	add	r0, sp, #4
 800922c:	f7f7 fd6e 	bl	8000d0c <calculate_freq_and_signalstrength>
 8009230:	9b02      	ldr	r3, [sp, #8]
 8009232:	9300      	str	r3, [sp, #0]
 8009234:	462a      	mov	r2, r5
 8009236:	466b      	mov	r3, sp
 8009238:	210a      	movs	r1, #10
 800923a:	f504 705b 	add.w	r0, r4, #876	; 0x36c
 800923e:	9f01      	ldr	r7, [sp, #4]
 8009240:	f00f fffa 	bl	8019238 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(CALIBRATION_PADR_SBuffer, CALIBRATION_PADR_S_SIZE,
                           "%.2f", fft.signal_strength);
    CALIBRATION_PADR_S.invalidate();
 8009244:	f104 0098 	add.w	r0, r4, #152	; 0x98
 8009248:	f00d fd82 	bl	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>
 800924c:	466b      	mov	r3, sp
 800924e:	462a      	mov	r2, r5
 8009250:	210a      	movs	r1, #10
 8009252:	f504 7060 	add.w	r0, r4, #896	; 0x380
 8009256:	9700      	str	r7, [sp, #0]
 8009258:	f00f ffee 	bl	8019238 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(CALIBRATION_PADR_FBuffer, CALIBRATION_PADR_F_SIZE,
                           "%.2f", fft.main_freq);
    CALIBRATION_PADR_F.invalidate();
 800925c:	f104 00e4 	add.w	r0, r4, #228	; 0xe4
 8009260:	f00d fd76 	bl	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>

    fft = calculate_freq_and_signalstrength(2, Samples);
 8009264:	4632      	mov	r2, r6
 8009266:	a801      	add	r0, sp, #4
 8009268:	2102      	movs	r1, #2
 800926a:	f7f7 fd4f 	bl	8000d0c <calculate_freq_and_signalstrength>
 800926e:	9b02      	ldr	r3, [sp, #8]
 8009270:	9300      	str	r3, [sp, #0]
 8009272:	462a      	mov	r2, r5
 8009274:	466b      	mov	r3, sp
 8009276:	210a      	movs	r1, #10
 8009278:	f504 706a 	add.w	r0, r4, #936	; 0x3a8
 800927c:	9e01      	ldr	r6, [sp, #4]
 800927e:	f00f ffdb 	bl	8019238 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>

    Unicode::snprintfFloat(CALIBRATION_PADL_SBuffer, CALIBRATION_PADL_S_SIZE,
                           "%.2f", fft.signal_strength);
    CALIBRATION_PADL_S.invalidate();
 8009282:	f504 70be 	add.w	r0, r4, #380	; 0x17c
 8009286:	f00d fd63 	bl	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>
 800928a:	466b      	mov	r3, sp
 800928c:	462a      	mov	r2, r5
 800928e:	210a      	movs	r1, #10
 8009290:	f504 7065 	add.w	r0, r4, #916	; 0x394
 8009294:	9600      	str	r6, [sp, #0]
 8009296:	f00f ffcf 	bl	8019238 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(CALIBRATION_PADL_FBuffer, CALIBRATION_PADL_F_SIZE,
                           "%.2f", fft.main_freq);
    CALIBRATION_PADL_F.invalidate();
 800929a:	f504 7098 	add.w	r0, r4, #304	; 0x130

#endif
}
 800929e:	b005      	add	sp, #20
 80092a0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    CALIBRATION_PADL_F.invalidate();
 80092a4:	f00d bd54 	b.w	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>
 80092a8:	0802e510 	.word	0x0802e510

080092ac <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80092ac:	4770      	bx	lr

080092ae <_ZN19FrontendApplicationD0Ev>:
 80092ae:	b510      	push	{r4, lr}
 80092b0:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80092b4:	4604      	mov	r4, r0
 80092b6:	f020 fcda 	bl	8029c6e <_ZdlPvj>
 80092ba:	4620      	mov	r0, r4
 80092bc:	bd10      	pop	{r4, pc}

080092be <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80092be:	b510      	push	{r4, lr}
 80092c0:	4604      	mov	r4, r0
    {
        model.tick();
 80092c2:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80092c6:	f000 fb05 	bl	80098d4 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80092ca:	4620      	mov	r0, r4
    }
 80092cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80092d0:	f00c bd1a 	b.w	8015d08 <_ZN8touchgfx11Application15handleTickEventEv>

080092d4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80092d4:	b510      	push	{r4, lr}
 80092d6:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80092d8:	f7fb f9fc 	bl	80046d4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80092dc:	4b01      	ldr	r3, [pc, #4]	; (80092e4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80092de:	6023      	str	r3, [r4, #0]
{

}
 80092e0:	4620      	mov	r0, r4
 80092e2:	bd10      	pop	{r4, pc}
 80092e4:	0802e5c8 	.word	0x0802e5c8

080092e8 <_ZN17Gauge_with_ValuesD1Ev>:
 80092e8:	b510      	push	{r4, lr}
 80092ea:	4b03      	ldr	r3, [pc, #12]	; (80092f8 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 80092ec:	6003      	str	r3, [r0, #0]
 80092ee:	4604      	mov	r4, r0
 80092f0:	f7fc fcf6 	bl	8005ce0 <_ZN21Gauge_with_ValuesBaseD1Ev>
 80092f4:	4620      	mov	r0, r4
 80092f6:	bd10      	pop	{r4, pc}
 80092f8:	0802e61c 	.word	0x0802e61c

080092fc <_ZN17Gauge_with_ValuesD0Ev>:
 80092fc:	b510      	push	{r4, lr}
 80092fe:	4604      	mov	r4, r0
 8009300:	f7ff fff2 	bl	80092e8 <_ZN17Gauge_with_ValuesD1Ev>
 8009304:	4620      	mov	r0, r4
 8009306:	f44f 7162 	mov.w	r1, #904	; 0x388
 800930a:	f020 fcb0 	bl	8029c6e <_ZdlPvj>
 800930e:	4620      	mov	r0, r4
 8009310:	bd10      	pop	{r4, pc}
	...

08009314 <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 8009314:	b510      	push	{r4, lr}
 8009316:	4604      	mov	r4, r0
 8009318:	f7fc fcec 	bl	8005cf4 <_ZN21Gauge_with_ValuesBaseC1Ev>
 800931c:	4b01      	ldr	r3, [pc, #4]	; (8009324 <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 800931e:	6023      	str	r3, [r4, #0]
{

}
 8009320:	4620      	mov	r0, r4
 8009322:	bd10      	pop	{r4, pc}
 8009324:	0802e61c 	.word	0x0802e61c

08009328 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 8009328:	f7fc bcdb 	b.w	8005ce2 <_ZN21Gauge_with_ValuesBase10initializeEv>

0800932c <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 800932c:	4770      	bx	lr

0800932e <_ZThn4_N18Main_MenuPresenterD1Ev>:
 800932e:	3804      	subs	r0, #4
 8009330:	4770      	bx	lr

08009332 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8009332:	4770      	bx	lr

08009334 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009334:	68c0      	ldr	r0, [r0, #12]
 8009336:	6803      	ldr	r3, [r0, #0]
 8009338:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800933a:	4718      	bx	r3

0800933c <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800933c:	f1a0 0004 	sub.w	r0, r0, #4
 8009340:	f7ff bff8 	b.w	8009334 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08009344 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8009344:	b510      	push	{r4, lr}
 8009346:	2110      	movs	r1, #16
 8009348:	4604      	mov	r4, r0
 800934a:	f020 fc90 	bl	8029c6e <_ZdlPvj>
 800934e:	4620      	mov	r0, r4
 8009350:	bd10      	pop	{r4, pc}

08009352 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8009352:	f1a0 0004 	sub.w	r0, r0, #4
 8009356:	e7f5      	b.n	8009344 <_ZN18Main_MenuPresenterD0Ev>

08009358 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8009358:	b510      	push	{r4, lr}
 800935a:	2200      	movs	r2, #0
 800935c:	6082      	str	r2, [r0, #8]
    : view(v)
 800935e:	4a04      	ldr	r2, [pc, #16]	; (8009370 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8009360:	60c1      	str	r1, [r0, #12]
 8009362:	f102 0408 	add.w	r4, r2, #8
 8009366:	3224      	adds	r2, #36	; 0x24
 8009368:	6004      	str	r4, [r0, #0]
 800936a:	6042      	str	r2, [r0, #4]
}
 800936c:	bd10      	pop	{r4, pc}
 800936e:	bf00      	nop
 8009370:	0802e6a8 	.word	0x0802e6a8

08009374 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8009374:	4770      	bx	lr
	...

08009378 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8009378:	b510      	push	{r4, lr}
 800937a:	4b03      	ldr	r3, [pc, #12]	; (8009388 <_ZN13Main_MenuViewD1Ev+0x10>)
 800937c:	6003      	str	r3, [r0, #0]
 800937e:	4604      	mov	r4, r0
 8009380:	f7fc feb4 	bl	80060ec <_ZN17Main_MenuViewBaseD1Ev>
 8009384:	4620      	mov	r0, r4
 8009386:	bd10      	pop	{r4, pc}
 8009388:	0802e6e0 	.word	0x0802e6e0

0800938c <_ZN13Main_MenuViewD0Ev>:
 800938c:	b510      	push	{r4, lr}
 800938e:	4604      	mov	r4, r0
 8009390:	f7ff fff2 	bl	8009378 <_ZN13Main_MenuViewD1Ev>
 8009394:	4620      	mov	r0, r4
 8009396:	f241 117c 	movw	r1, #4476	; 0x117c
 800939a:	f020 fc68 	bl	8029c6e <_ZdlPvj>
 800939e:	4620      	mov	r0, r4
 80093a0:	bd10      	pop	{r4, pc}
	...

080093a4 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 80093a4:	b510      	push	{r4, lr}
 80093a6:	4604      	mov	r4, r0
 80093a8:	f7fc feea 	bl	8006180 <_ZN17Main_MenuViewBaseC1Ev>
 80093ac:	4b01      	ldr	r3, [pc, #4]	; (80093b4 <_ZN13Main_MenuViewC1Ev+0x10>)
 80093ae:	6023      	str	r3, [r4, #0]
}
 80093b0:	4620      	mov	r0, r4
 80093b2:	bd10      	pop	{r4, pc}
 80093b4:	0802e6e0 	.word	0x0802e6e0

080093b8 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 80093b8:	f7fc be74 	b.w	80060a4 <_ZN17Main_MenuViewBase11setupScreenEv>

080093bc <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 80093bc:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80093be:	4a0a      	ldr	r2, [pc, #40]	; (80093e8 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 80093c0:	4605      	mov	r5, r0
 80093c2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80093c4:	460b      	mov	r3, r1
 80093c6:	f500 7055 	add.w	r0, r0, #852	; 0x354
 80093ca:	2104      	movs	r1, #4
 80093cc:	f00f fd48 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 80093d0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80093d4:	f00d fcbc 	bl	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80093d8:	b92c      	cbnz	r4, 80093e6 <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 80093da:	f00c fbd1 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80093de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80093e2:	f7fb baa7 	b.w	8004934 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80093e6:	bd38      	pop	{r3, r4, r5, pc}
 80093e8:	0802e4a4 	.word	0x0802e4a4

080093ec <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 80093ec:	4770      	bx	lr

080093ee <_ZThn4_N20MeasurementPresenterD1Ev>:
 80093ee:	3804      	subs	r0, #4
 80093f0:	4770      	bx	lr

080093f2 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 80093f2:	4770      	bx	lr

080093f4 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80093f4:	68c0      	ldr	r0, [r0, #12]
 80093f6:	6803      	ldr	r3, [r0, #0]
 80093f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80093fa:	4718      	bx	r3

080093fc <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80093fc:	f1a0 0004 	sub.w	r0, r0, #4
 8009400:	f7ff bff8 	b.w	80093f4 <_ZN20MeasurementPresenter15setTimeoutValueEi>

08009404 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8009404:	b510      	push	{r4, lr}
 8009406:	2110      	movs	r1, #16
 8009408:	4604      	mov	r4, r0
 800940a:	f020 fc30 	bl	8029c6e <_ZdlPvj>
 800940e:	4620      	mov	r0, r4
 8009410:	bd10      	pop	{r4, pc}

08009412 <_ZThn4_N20MeasurementPresenterD0Ev>:
 8009412:	f1a0 0004 	sub.w	r0, r0, #4
 8009416:	e7f5      	b.n	8009404 <_ZN20MeasurementPresenterD0Ev>

08009418 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8009418:	b510      	push	{r4, lr}
 800941a:	2200      	movs	r2, #0
 800941c:	6082      	str	r2, [r0, #8]
    : view(v)
 800941e:	4a04      	ldr	r2, [pc, #16]	; (8009430 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8009420:	60c1      	str	r1, [r0, #12]
 8009422:	f102 0408 	add.w	r4, r2, #8
 8009426:	3224      	adds	r2, #36	; 0x24
 8009428:	6004      	str	r4, [r0, #0]
 800942a:	6042      	str	r2, [r0, #4]
}
 800942c:	bd10      	pop	{r4, pc}
 800942e:	bf00      	nop
 8009430:	0802e710 	.word	0x0802e710

08009434 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8009434:	4770      	bx	lr
	...

08009438 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8009438:	b510      	push	{r4, lr}
 800943a:	4b03      	ldr	r3, [pc, #12]	; (8009448 <_ZN15MeasurementViewD1Ev+0x10>)
 800943c:	6003      	str	r3, [r0, #0]
 800943e:	4604      	mov	r4, r0
 8009440:	f7fd f90e 	bl	8006660 <_ZN19MeasurementViewBaseD1Ev>
 8009444:	4620      	mov	r0, r4
 8009446:	bd10      	pop	{r4, pc}
 8009448:	0802e748 	.word	0x0802e748

0800944c <_ZN15MeasurementViewD0Ev>:
 800944c:	b510      	push	{r4, lr}
 800944e:	4604      	mov	r4, r0
 8009450:	f7ff fff2 	bl	8009438 <_ZN15MeasurementViewD1Ev>
 8009454:	4620      	mov	r0, r4
 8009456:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800945a:	f020 fc08 	bl	8029c6e <_ZdlPvj>
 800945e:	4620      	mov	r0, r4
 8009460:	bd10      	pop	{r4, pc}
	...

08009464 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8009464:	b510      	push	{r4, lr}
 8009466:	4604      	mov	r4, r0
 8009468:	f7fd f934 	bl	80066d4 <_ZN19MeasurementViewBaseC1Ev>
 800946c:	4b01      	ldr	r3, [pc, #4]	; (8009474 <_ZN15MeasurementViewC1Ev+0x10>)
 800946e:	6023      	str	r3, [r4, #0]
}
 8009470:	4620      	mov	r0, r4
 8009472:	bd10      	pop	{r4, pc}
 8009474:	0802e748 	.word	0x0802e748

08009478 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8009478:	f7fd b8ce 	b.w	8006618 <_ZN19MeasurementViewBase11setupScreenEv>

0800947c <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 800947c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800947e:	4a0a      	ldr	r2, [pc, #40]	; (80094a8 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8009480:	4605      	mov	r5, r0
 8009482:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009484:	460b      	mov	r3, r1
 8009486:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800948a:	2104      	movs	r1, #4
 800948c:	f00f fce8 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009490:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009494:	f00d fc5c 	bl	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009498:	b92c      	cbnz	r4, 80094a6 <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 800949a:	f00c fb71 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800949e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80094a2:	f7fb ba47 	b.w	8004934 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80094a6:	bd38      	pop	{r3, r4, r5, pc}
 80094a8:	0802e4a4 	.word	0x0802e4a4

080094ac <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 80094ac:	4770      	bx	lr

080094ae <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 80094ae:	3804      	subs	r0, #4
 80094b0:	4770      	bx	lr

080094b2 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 80094b2:	4770      	bx	lr

080094b4 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80094b4:	68c0      	ldr	r0, [r0, #12]
 80094b6:	6803      	ldr	r3, [r0, #0]
 80094b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80094ba:	4718      	bx	r3

080094bc <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80094bc:	f1a0 0004 	sub.w	r0, r0, #4
 80094c0:	f7ff bff8 	b.w	80094b4 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

080094c4 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 80094c4:	b510      	push	{r4, lr}
 80094c6:	2110      	movs	r1, #16
 80094c8:	4604      	mov	r4, r0
 80094ca:	f020 fbd0 	bl	8029c6e <_ZdlPvj>
 80094ce:	4620      	mov	r0, r4
 80094d0:	bd10      	pop	{r4, pc}

080094d2 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 80094d2:	f1a0 0004 	sub.w	r0, r0, #4
 80094d6:	e7f5      	b.n	80094c4 <_ZN29Measurement_AccuratePresenterD0Ev>

080094d8 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 80094d8:	b510      	push	{r4, lr}
 80094da:	2200      	movs	r2, #0
 80094dc:	6082      	str	r2, [r0, #8]
    : view(v)
 80094de:	4a04      	ldr	r2, [pc, #16]	; (80094f0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 80094e0:	60c1      	str	r1, [r0, #12]
 80094e2:	f102 0408 	add.w	r4, r2, #8
 80094e6:	3224      	adds	r2, #36	; 0x24
 80094e8:	6004      	str	r4, [r0, #0]
 80094ea:	6042      	str	r2, [r0, #4]
}
 80094ec:	bd10      	pop	{r4, pc}
 80094ee:	bf00      	nop
 80094f0:	0802e778 	.word	0x0802e778

080094f4 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 80094f4:	4770      	bx	lr
	...

080094f8 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 80094f8:	b510      	push	{r4, lr}
 80094fa:	4b03      	ldr	r3, [pc, #12]	; (8009508 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 80094fc:	6003      	str	r3, [r0, #0]
 80094fe:	4604      	mov	r4, r0
 8009500:	f7fd fb30 	bl	8006b64 <_ZN28Measurement_AccurateViewBaseD1Ev>
 8009504:	4620      	mov	r0, r4
 8009506:	bd10      	pop	{r4, pc}
 8009508:	0802e7b0 	.word	0x0802e7b0

0800950c <_ZN24Measurement_AccurateViewD0Ev>:
 800950c:	b510      	push	{r4, lr}
 800950e:	4604      	mov	r4, r0
 8009510:	f7ff fff2 	bl	80094f8 <_ZN24Measurement_AccurateViewD1Ev>
 8009514:	4620      	mov	r0, r4
 8009516:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800951a:	f020 fba8 	bl	8029c6e <_ZdlPvj>
 800951e:	4620      	mov	r0, r4
 8009520:	bd10      	pop	{r4, pc}
	...

08009524 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8009524:	b510      	push	{r4, lr}
 8009526:	4604      	mov	r4, r0
 8009528:	f7fd fb56 	bl	8006bd8 <_ZN28Measurement_AccurateViewBaseC1Ev>
 800952c:	4b01      	ldr	r3, [pc, #4]	; (8009534 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 800952e:	6023      	str	r3, [r4, #0]
}
 8009530:	4620      	mov	r0, r4
 8009532:	bd10      	pop	{r4, pc}
 8009534:	0802e7b0 	.word	0x0802e7b0

08009538 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8009538:	f7fd baf0 	b.w	8006b1c <_ZN28Measurement_AccurateViewBase11setupScreenEv>

0800953c <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 800953c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800953e:	4a0a      	ldr	r2, [pc, #40]	; (8009568 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8009540:	4605      	mov	r5, r0
 8009542:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009544:	460b      	mov	r3, r1
 8009546:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800954a:	2104      	movs	r1, #4
 800954c:	f00f fc88 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009550:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009554:	f00d fbfc 	bl	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009558:	b92c      	cbnz	r4, 8009566 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 800955a:	f00c fb11 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800955e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009562:	f7fb b9e7 	b.w	8004934 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009566:	bd38      	pop	{r3, r4, r5, pc}
 8009568:	0802e4a4 	.word	0x0802e4a4

0800956c <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 800956c:	4770      	bx	lr

0800956e <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 800956e:	3804      	subs	r0, #4
 8009570:	4770      	bx	lr

08009572 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8009572:	4770      	bx	lr

08009574 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8009574:	4770      	bx	lr

08009576 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8009576:	b510      	push	{r4, lr}
 8009578:	2110      	movs	r1, #16
 800957a:	4604      	mov	r4, r0
 800957c:	f020 fb77 	bl	8029c6e <_ZdlPvj>
 8009580:	4620      	mov	r0, r4
 8009582:	bd10      	pop	{r4, pc}

08009584 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8009584:	f1a0 0004 	sub.w	r0, r0, #4
 8009588:	e7f5      	b.n	8009576 <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

0800958a <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 800958a:	4770      	bx	lr

0800958c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 800958c:	b510      	push	{r4, lr}
 800958e:	2200      	movs	r2, #0
 8009590:	6082      	str	r2, [r0, #8]
    : view(v)
 8009592:	4a04      	ldr	r2, [pc, #16]	; (80095a4 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8009594:	60c1      	str	r1, [r0, #12]
 8009596:	f102 0408 	add.w	r4, r2, #8
 800959a:	3224      	adds	r2, #36	; 0x24
 800959c:	6004      	str	r4, [r0, #0]
 800959e:	6042      	str	r2, [r0, #4]
}
 80095a0:	bd10      	pop	{r4, pc}
 80095a2:	bf00      	nop
 80095a4:	0802e7e0 	.word	0x0802e7e0

080095a8 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 80095a8:	4770      	bx	lr
	...

080095ac <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 80095ac:	b510      	push	{r4, lr}
 80095ae:	4b03      	ldr	r3, [pc, #12]	; (80095bc <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 80095b0:	6003      	str	r3, [r0, #0]
 80095b2:	4604      	mov	r4, r0
 80095b4:	f7fd fd62 	bl	800707c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80095b8:	4620      	mov	r0, r4
 80095ba:	bd10      	pop	{r4, pc}
 80095bc:	0802e818 	.word	0x0802e818

080095c0 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 80095c0:	b510      	push	{r4, lr}
 80095c2:	4604      	mov	r4, r0
 80095c4:	f7ff fff2 	bl	80095ac <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 80095c8:	4620      	mov	r0, r4
 80095ca:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80095ce:	f020 fb4e 	bl	8029c6e <_ZdlPvj>
 80095d2:	4620      	mov	r0, r4
 80095d4:	bd10      	pop	{r4, pc}
	...

080095d8 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 80095d8:	b510      	push	{r4, lr}
 80095da:	4604      	mov	r4, r0
 80095dc:	f7fd fd6e 	bl	80070bc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 80095e0:	4b01      	ldr	r3, [pc, #4]	; (80095e8 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 80095e2:	6023      	str	r3, [r4, #0]
}
 80095e4:	4620      	mov	r0, r4
 80095e6:	bd10      	pop	{r4, pc}
 80095e8:	0802e818 	.word	0x0802e818

080095ec <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 80095ec:	f7fd bd37 	b.w	800705e <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

080095f0 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 80095f0:	4770      	bx	lr

080095f2 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 80095f2:	3804      	subs	r0, #4
 80095f4:	4770      	bx	lr

080095f6 <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 80095f6:	4770      	bx	lr

080095f8 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 80095f8:	4770      	bx	lr

080095fa <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 80095fa:	b510      	push	{r4, lr}
 80095fc:	2110      	movs	r1, #16
 80095fe:	4604      	mov	r4, r0
 8009600:	f020 fb35 	bl	8029c6e <_ZdlPvj>
 8009604:	4620      	mov	r0, r4
 8009606:	bd10      	pop	{r4, pc}

08009608 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8009608:	f1a0 0004 	sub.w	r0, r0, #4
 800960c:	e7f5      	b.n	80095fa <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

0800960e <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 800960e:	4770      	bx	lr

08009610 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8009610:	b510      	push	{r4, lr}
 8009612:	2200      	movs	r2, #0
 8009614:	6082      	str	r2, [r0, #8]
    : view(v)
 8009616:	4a04      	ldr	r2, [pc, #16]	; (8009628 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8009618:	60c1      	str	r1, [r0, #12]
 800961a:	f102 0408 	add.w	r4, r2, #8
 800961e:	3224      	adds	r2, #36	; 0x24
 8009620:	6004      	str	r4, [r0, #0]
 8009622:	6042      	str	r2, [r0, #4]
}
 8009624:	bd10      	pop	{r4, pc}
 8009626:	bf00      	nop
 8009628:	0802e844 	.word	0x0802e844

0800962c <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 800962c:	4770      	bx	lr
	...

08009630 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8009630:	b510      	push	{r4, lr}
 8009632:	4b03      	ldr	r3, [pc, #12]	; (8009640 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8009634:	6003      	str	r3, [r0, #0]
 8009636:	4604      	mov	r4, r0
 8009638:	f7fd fee6 	bl	8007408 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800963c:	4620      	mov	r0, r4
 800963e:	bd10      	pop	{r4, pc}
 8009640:	0802e87c 	.word	0x0802e87c

08009644 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8009644:	b510      	push	{r4, lr}
 8009646:	4604      	mov	r4, r0
 8009648:	f7ff fff2 	bl	8009630 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 800964c:	4620      	mov	r0, r4
 800964e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8009652:	f020 fb0c 	bl	8029c6e <_ZdlPvj>
 8009656:	4620      	mov	r0, r4
 8009658:	bd10      	pop	{r4, pc}
	...

0800965c <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 800965c:	b510      	push	{r4, lr}
 800965e:	4604      	mov	r4, r0
 8009660:	f7fd fef2 	bl	8007448 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8009664:	4b01      	ldr	r3, [pc, #4]	; (800966c <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8009666:	6023      	str	r3, [r4, #0]
}
 8009668:	4620      	mov	r0, r4
 800966a:	bd10      	pop	{r4, pc}
 800966c:	0802e87c 	.word	0x0802e87c

08009670 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8009670:	f7fd bebb 	b.w	80073ea <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08009674 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8009674:	4770      	bx	lr

08009676 <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8009676:	3804      	subs	r0, #4
 8009678:	4770      	bx	lr

0800967a <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 800967a:	4770      	bx	lr

0800967c <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800967c:	68c0      	ldr	r0, [r0, #12]
 800967e:	6803      	ldr	r3, [r0, #0]
 8009680:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009682:	4718      	bx	r3

08009684 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009684:	f1a0 0004 	sub.w	r0, r0, #4
 8009688:	f7ff bff8 	b.w	800967c <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

0800968c <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 800968c:	b510      	push	{r4, lr}
 800968e:	2110      	movs	r1, #16
 8009690:	4604      	mov	r4, r0
 8009692:	f020 faec 	bl	8029c6e <_ZdlPvj>
 8009696:	4620      	mov	r0, r4
 8009698:	bd10      	pop	{r4, pc}

0800969a <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800969a:	f1a0 0004 	sub.w	r0, r0, #4
 800969e:	e7f5      	b.n	800968c <_ZN27Measurement_SinglePresenterD0Ev>

080096a0 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 80096a0:	b510      	push	{r4, lr}
 80096a2:	2200      	movs	r2, #0
 80096a4:	6082      	str	r2, [r0, #8]
    : view(v)
 80096a6:	4a04      	ldr	r2, [pc, #16]	; (80096b8 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 80096a8:	60c1      	str	r1, [r0, #12]
 80096aa:	f102 0408 	add.w	r4, r2, #8
 80096ae:	3224      	adds	r2, #36	; 0x24
 80096b0:	6004      	str	r4, [r0, #0]
 80096b2:	6042      	str	r2, [r0, #4]
}
 80096b4:	bd10      	pop	{r4, pc}
 80096b6:	bf00      	nop
 80096b8:	0802e8a8 	.word	0x0802e8a8

080096bc <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 80096bc:	4770      	bx	lr
	...

080096c0 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 80096c0:	b510      	push	{r4, lr}
 80096c2:	4b03      	ldr	r3, [pc, #12]	; (80096d0 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 80096c4:	6003      	str	r3, [r0, #0]
 80096c6:	4604      	mov	r4, r0
 80096c8:	f7fe f854 	bl	8007774 <_ZN26Measurement_SingleViewBaseD1Ev>
 80096cc:	4620      	mov	r0, r4
 80096ce:	bd10      	pop	{r4, pc}
 80096d0:	0802e8e0 	.word	0x0802e8e0

080096d4 <_ZN22Measurement_SingleViewD0Ev>:
 80096d4:	b510      	push	{r4, lr}
 80096d6:	4604      	mov	r4, r0
 80096d8:	f7ff fff2 	bl	80096c0 <_ZN22Measurement_SingleViewD1Ev>
 80096dc:	4620      	mov	r0, r4
 80096de:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80096e2:	f020 fac4 	bl	8029c6e <_ZdlPvj>
 80096e6:	4620      	mov	r0, r4
 80096e8:	bd10      	pop	{r4, pc}
	...

080096ec <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 80096ec:	b510      	push	{r4, lr}
 80096ee:	4604      	mov	r4, r0
 80096f0:	f7fe f87a 	bl	80077e8 <_ZN26Measurement_SingleViewBaseC1Ev>
 80096f4:	4b01      	ldr	r3, [pc, #4]	; (80096fc <_ZN22Measurement_SingleViewC1Ev+0x10>)
 80096f6:	6023      	str	r3, [r4, #0]
}
 80096f8:	4620      	mov	r0, r4
 80096fa:	bd10      	pop	{r4, pc}
 80096fc:	0802e8e0 	.word	0x0802e8e0

08009700 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8009700:	f7fe b814 	b.w	800772c <_ZN26Measurement_SingleViewBase11setupScreenEv>

08009704 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 8009704:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009706:	4a0a      	ldr	r2, [pc, #40]	; (8009730 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8009708:	4605      	mov	r5, r0
 800970a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800970c:	460b      	mov	r3, r1
 800970e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8009712:	2104      	movs	r1, #4
 8009714:	f00f fba4 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009718:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800971c:	f00d fb18 	bl	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009720:	b92c      	cbnz	r4, 800972e <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 8009722:	f00c fa2d 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8009726:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800972a:	f7fb b903 	b.w	8004934 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800972e:	bd38      	pop	{r3, r4, r5, pc}
 8009730:	0802e4a4 	.word	0x0802e4a4

08009734 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8009734:	4770      	bx	lr

08009736 <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 8009736:	3804      	subs	r0, #4
 8009738:	4770      	bx	lr

0800973a <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 800973a:	4770      	bx	lr

0800973c <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 800973c:	4770      	bx	lr

0800973e <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 800973e:	b510      	push	{r4, lr}
 8009740:	2110      	movs	r1, #16
 8009742:	4604      	mov	r4, r0
 8009744:	f020 fa93 	bl	8029c6e <_ZdlPvj>
 8009748:	4620      	mov	r0, r4
 800974a:	bd10      	pop	{r4, pc}

0800974c <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 800974c:	f1a0 0004 	sub.w	r0, r0, #4
 8009750:	e7f5      	b.n	800973e <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

08009752 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 8009752:	4770      	bx	lr

08009754 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 8009754:	b510      	push	{r4, lr}
 8009756:	2200      	movs	r2, #0
 8009758:	6082      	str	r2, [r0, #8]
    : view(v)
 800975a:	4a04      	ldr	r2, [pc, #16]	; (800976c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 800975c:	60c1      	str	r1, [r0, #12]
 800975e:	f102 0408 	add.w	r4, r2, #8
 8009762:	3224      	adds	r2, #36	; 0x24
 8009764:	6004      	str	r4, [r0, #0]
 8009766:	6042      	str	r2, [r0, #4]
}
 8009768:	bd10      	pop	{r4, pc}
 800976a:	bf00      	nop
 800976c:	0802e910 	.word	0x0802e910

08009770 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8009770:	4770      	bx	lr
	...

08009774 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8009774:	b510      	push	{r4, lr}
 8009776:	4b03      	ldr	r3, [pc, #12]	; (8009784 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8009778:	6003      	str	r3, [r0, #0]
 800977a:	4604      	mov	r4, r0
 800977c:	f7fe fa7e 	bl	8007c7c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8009780:	4620      	mov	r0, r4
 8009782:	bd10      	pop	{r4, pc}
 8009784:	0802e948 	.word	0x0802e948

08009788 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8009788:	b510      	push	{r4, lr}
 800978a:	4604      	mov	r4, r0
 800978c:	f7ff fff2 	bl	8009774 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8009790:	4620      	mov	r0, r4
 8009792:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8009796:	f020 fa6a 	bl	8029c6e <_ZdlPvj>
 800979a:	4620      	mov	r0, r4
 800979c:	bd10      	pop	{r4, pc}
	...

080097a0 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 80097a0:	b510      	push	{r4, lr}
 80097a2:	4604      	mov	r4, r0
 80097a4:	f7fe faa4 	bl	8007cf0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 80097a8:	4b01      	ldr	r3, [pc, #4]	; (80097b0 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 80097aa:	6023      	str	r3, [r4, #0]
}
 80097ac:	4620      	mov	r0, r4
 80097ae:	bd10      	pop	{r4, pc}
 80097b0:	0802e948 	.word	0x0802e948

080097b4 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 80097b4:	f7fe ba3d 	b.w	8007c32 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

080097b8 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 80097b8:	b530      	push	{r4, r5, lr}
 80097ba:	4d1f      	ldr	r5, [pc, #124]	; (8009838 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x80>)
 80097bc:	4604      	mov	r4, r0
 80097be:	6828      	ldr	r0, [r5, #0]
#ifndef SIMULATOR
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();
 80097c0:	6803      	ldr	r3, [r0, #0]
{
 80097c2:	b08b      	sub	sp, #44	; 0x2c
	touchgfx::HAL::getInstance()->disableInterrupts();
 80097c4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80097c6:	4798      	blx	r3

	int test = 	0;

	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);

	test = updateGUI_test();
 80097c8:	f7f7 fcc4 	bl	8001154 <updateGUI_test>
 80097cc:	9001      	str	r0, [sp, #4]
	//uint32_t* Samples = calculate_average_of_measurements();


	//callback to fft
	//FFT fft = calculate_freq_and_signalstrength(1, Samples);
	DISTANCE_ANGLE distance_angle = calculate_distance_and_angle();
 80097ce:	a804      	add	r0, sp, #16
 80097d0:	f7f7 fc02 	bl	8000fd8 <calculate_distance_and_angle>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(distance_angle.angle);
 80097d4:	eddd 7a09 	vldr	s15, [sp, #36]	; 0x24
 80097d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80097dc:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 80097e0:	ee17 1a90 	vmov	r1, s15
 80097e4:	9000      	str	r0, [sp, #0]
 80097e6:	f009 fa5f 	bl	8012ca8 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 80097ea:	9800      	ldr	r0, [sp, #0]
 80097ec:	f00d fab0 	bl	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 80097f0:	9b01      	ldr	r3, [sp, #4]
 80097f2:	4a12      	ldr	r2, [pc, #72]	; (800983c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x84>)
 80097f4:	210a      	movs	r1, #10
 80097f6:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 80097fa:	f00f fb31 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 80097fe:	f504 7020 	add.w	r0, r4, #640	; 0x280
 8009802:	f00d faa5 	bl	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	//Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
	SMD1_Frequency.invalidate();
 8009806:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 800980a:	f00d faa1 	bl	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	//if(fft.error == CALC_ERROR_NONE)
	//{
		Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", distance_angle.distance);
 800980e:	9b08      	ldr	r3, [sp, #32]
 8009810:	4a0b      	ldr	r2, [pc, #44]	; (8009840 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 8009812:	9303      	str	r3, [sp, #12]
 8009814:	210a      	movs	r1, #10
 8009816:	ab03      	add	r3, sp, #12
 8009818:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 800981c:	f00f fd0c 	bl	8019238 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	//} else Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "Error");
	
	SMD1_Distance.invalidate();
 8009820:	f504 7046 	add.w	r0, r4, #792	; 0x318
 8009824:	f00d fa94 	bl	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>
 8009828:	6828      	ldr	r0, [r5, #0]

	//HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 800982a:	6803      	ldr	r3, [r0, #0]
 800982c:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 800982e:	b00b      	add	sp, #44	; 0x2c
 8009830:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 8009834:	4718      	bx	r3
 8009836:	bf00      	nop
 8009838:	20012db4 	.word	0x20012db4
 800983c:	0802e4a4 	.word	0x0802e4a4
 8009840:	0802e510 	.word	0x0802e510

08009844 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8009844:	4770      	bx	lr

08009846 <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8009846:	3804      	subs	r0, #4
 8009848:	4770      	bx	lr

0800984a <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 800984a:	4770      	bx	lr

0800984c <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 800984c:	4770      	bx	lr

0800984e <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 800984e:	b510      	push	{r4, lr}
 8009850:	2110      	movs	r1, #16
 8009852:	4604      	mov	r4, r0
 8009854:	f020 fa0b 	bl	8029c6e <_ZdlPvj>
 8009858:	4620      	mov	r0, r4
 800985a:	bd10      	pop	{r4, pc}

0800985c <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 800985c:	f1a0 0004 	sub.w	r0, r0, #4
 8009860:	e7f5      	b.n	800984e <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08009862 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8009862:	4770      	bx	lr

08009864 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8009864:	b510      	push	{r4, lr}
 8009866:	2200      	movs	r2, #0
 8009868:	6082      	str	r2, [r0, #8]
    : view(v)
 800986a:	4a04      	ldr	r2, [pc, #16]	; (800987c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 800986c:	60c1      	str	r1, [r0, #12]
 800986e:	f102 0408 	add.w	r4, r2, #8
 8009872:	3224      	adds	r2, #36	; 0x24
 8009874:	6004      	str	r4, [r0, #0]
 8009876:	6042      	str	r2, [r0, #4]
}
 8009878:	bd10      	pop	{r4, pc}
 800987a:	bf00      	nop
 800987c:	0802e978 	.word	0x0802e978

08009880 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8009880:	4770      	bx	lr
	...

08009884 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8009884:	b510      	push	{r4, lr}
 8009886:	4b03      	ldr	r3, [pc, #12]	; (8009894 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8009888:	6003      	str	r3, [r0, #0]
 800988a:	4604      	mov	r4, r0
 800988c:	f7fe fda2 	bl	80083d4 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8009890:	4620      	mov	r0, r4
 8009892:	bd10      	pop	{r4, pc}
 8009894:	0802e9b0 	.word	0x0802e9b0

08009898 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8009898:	b510      	push	{r4, lr}
 800989a:	4604      	mov	r4, r0
 800989c:	f7ff fff2 	bl	8009884 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 80098a0:	4620      	mov	r0, r4
 80098a2:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80098a6:	f020 f9e2 	bl	8029c6e <_ZdlPvj>
 80098aa:	4620      	mov	r0, r4
 80098ac:	bd10      	pop	{r4, pc}
	...

080098b0 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 80098b0:	b510      	push	{r4, lr}
 80098b2:	4604      	mov	r4, r0
 80098b4:	f7fe fdae 	bl	8008414 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 80098b8:	4b01      	ldr	r3, [pc, #4]	; (80098c0 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 80098ba:	6023      	str	r3, [r4, #0]
}
 80098bc:	4620      	mov	r0, r4
 80098be:	bd10      	pop	{r4, pc}
 80098c0:	0802e9b0 	.word	0x0802e9b0

080098c4 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 80098c4:	f7fe bd75 	b.w	80083b2 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

080098c8 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 80098c8:	2100      	movs	r1, #0
 80098ca:	223c      	movs	r2, #60	; 0x3c
 80098cc:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 80098d0:	4770      	bx	lr
	...

080098d4 <_ZN5Model4tickEv>:

void Model::tick()
{
 80098d4:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80098d6:	4d0a      	ldr	r5, [pc, #40]	; (8009900 <_ZN5Model4tickEv+0x2c>)
{
 80098d8:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80098da:	6828      	ldr	r0, [r5, #0]
 80098dc:	f004 f8ac 	bl	800da38 <osMessageQueueGetCount>
 80098e0:	b168      	cbz	r0, 80098fe <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 80098e2:	2300      	movs	r3, #0
 80098e4:	6828      	ldr	r0, [r5, #0]
 80098e6:	461a      	mov	r2, r3
 80098e8:	1d21      	adds	r1, r4, #4
 80098ea:	f004 f871 	bl	800d9d0 <osMessageQueueGet>
 80098ee:	b930      	cbnz	r0, 80098fe <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 80098f0:	6820      	ldr	r0, [r4, #0]
 80098f2:	6861      	ldr	r1, [r4, #4]
 80098f4:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 80098f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 80098fa:	689b      	ldr	r3, [r3, #8]
 80098fc:	4718      	bx	r3
}
 80098fe:	bd70      	pop	{r4, r5, r6, pc}
 8009900:	20000198 	.word	0x20000198

08009904 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8009904:	4770      	bx	lr

08009906 <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8009906:	3804      	subs	r0, #4
 8009908:	4770      	bx	lr

0800990a <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 800990a:	4770      	bx	lr

0800990c <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800990c:	68c0      	ldr	r0, [r0, #12]
 800990e:	6803      	ldr	r3, [r0, #0]
 8009910:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009912:	4718      	bx	r3

08009914 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009914:	f1a0 0004 	sub.w	r0, r0, #4
 8009918:	f7ff bff8 	b.w	800990c <_ZN21Project_InfoPresenter15setTimeoutValueEi>

0800991c <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 800991c:	b510      	push	{r4, lr}
 800991e:	2110      	movs	r1, #16
 8009920:	4604      	mov	r4, r0
 8009922:	f020 f9a4 	bl	8029c6e <_ZdlPvj>
 8009926:	4620      	mov	r0, r4
 8009928:	bd10      	pop	{r4, pc}

0800992a <_ZThn4_N21Project_InfoPresenterD0Ev>:
 800992a:	f1a0 0004 	sub.w	r0, r0, #4
 800992e:	e7f5      	b.n	800991c <_ZN21Project_InfoPresenterD0Ev>

08009930 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8009930:	b510      	push	{r4, lr}
 8009932:	2200      	movs	r2, #0
 8009934:	6082      	str	r2, [r0, #8]
    : view(v)
 8009936:	4a04      	ldr	r2, [pc, #16]	; (8009948 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8009938:	60c1      	str	r1, [r0, #12]
 800993a:	f102 0408 	add.w	r4, r2, #8
 800993e:	3224      	adds	r2, #36	; 0x24
 8009940:	6004      	str	r4, [r0, #0]
 8009942:	6042      	str	r2, [r0, #4]
}
 8009944:	bd10      	pop	{r4, pc}
 8009946:	bf00      	nop
 8009948:	0802e9dc 	.word	0x0802e9dc

0800994c <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 800994c:	4770      	bx	lr
	...

08009950 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8009950:	b510      	push	{r4, lr}
 8009952:	4b03      	ldr	r3, [pc, #12]	; (8009960 <_ZN16Project_InfoViewD1Ev+0x10>)
 8009954:	6003      	str	r3, [r0, #0]
 8009956:	4604      	mov	r4, r0
 8009958:	f7fe fef6 	bl	8008748 <_ZN20Project_InfoViewBaseD1Ev>
 800995c:	4620      	mov	r0, r4
 800995e:	bd10      	pop	{r4, pc}
 8009960:	0802ea14 	.word	0x0802ea14

08009964 <_ZN16Project_InfoViewD0Ev>:
 8009964:	b510      	push	{r4, lr}
 8009966:	4604      	mov	r4, r0
 8009968:	f7ff fff2 	bl	8009950 <_ZN16Project_InfoViewD1Ev>
 800996c:	4620      	mov	r0, r4
 800996e:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8009972:	f020 f97c 	bl	8029c6e <_ZdlPvj>
 8009976:	4620      	mov	r0, r4
 8009978:	bd10      	pop	{r4, pc}
	...

0800997c <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 800997c:	b510      	push	{r4, lr}
 800997e:	4604      	mov	r4, r0
 8009980:	f7fe ff0a 	bl	8008798 <_ZN20Project_InfoViewBaseC1Ev>
 8009984:	4b01      	ldr	r3, [pc, #4]	; (800998c <_ZN16Project_InfoViewC1Ev+0x10>)
 8009986:	6023      	str	r3, [r4, #0]
}
 8009988:	4620      	mov	r0, r4
 800998a:	bd10      	pop	{r4, pc}
 800998c:	0802ea14 	.word	0x0802ea14

08009990 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8009990:	f7fe beb6 	b.w	8008700 <_ZN20Project_InfoViewBase11setupScreenEv>

08009994 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8009994:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009996:	4a0a      	ldr	r2, [pc, #40]	; (80099c0 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8009998:	4605      	mov	r5, r0
 800999a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800999c:	460b      	mov	r3, r1
 800999e:	f500 7022 	add.w	r0, r0, #648	; 0x288
 80099a2:	2104      	movs	r1, #4
 80099a4:	f00f fa5c 	bl	8018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80099a8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80099ac:	f00d f9d0 	bl	8016d50 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 80099b0:	b92c      	cbnz	r4, 80099be <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 80099b2:	f00c f8e5 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80099b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80099ba:	f7fa bfbb 	b.w	8004934 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80099be:	bd38      	pop	{r3, r4, r5, pc}
 80099c0:	0802e4a4 	.word	0x0802e4a4

080099c4 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 80099c4:	4770      	bx	lr

080099c6 <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 80099c6:	3804      	subs	r0, #4
 80099c8:	4770      	bx	lr

080099ca <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 80099ca:	4770      	bx	lr

080099cc <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 80099cc:	4770      	bx	lr

080099ce <_ZN21Shutting_OffPresenterD0Ev>:
 80099ce:	b510      	push	{r4, lr}
 80099d0:	2110      	movs	r1, #16
 80099d2:	4604      	mov	r4, r0
 80099d4:	f020 f94b 	bl	8029c6e <_ZdlPvj>
 80099d8:	4620      	mov	r0, r4
 80099da:	bd10      	pop	{r4, pc}

080099dc <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 80099dc:	f1a0 0004 	sub.w	r0, r0, #4
 80099e0:	e7f5      	b.n	80099ce <_ZN21Shutting_OffPresenterD0Ev>

080099e2 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 80099e2:	4770      	bx	lr

080099e4 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 80099e4:	b510      	push	{r4, lr}
 80099e6:	2200      	movs	r2, #0
 80099e8:	6082      	str	r2, [r0, #8]
    : view(v)
 80099ea:	4a04      	ldr	r2, [pc, #16]	; (80099fc <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 80099ec:	60c1      	str	r1, [r0, #12]
 80099ee:	f102 0408 	add.w	r4, r2, #8
 80099f2:	3224      	adds	r2, #36	; 0x24
 80099f4:	6004      	str	r4, [r0, #0]
 80099f6:	6042      	str	r2, [r0, #4]
}
 80099f8:	bd10      	pop	{r4, pc}
 80099fa:	bf00      	nop
 80099fc:	0802ea44 	.word	0x0802ea44

08009a00 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8009a00:	4770      	bx	lr
	...

08009a04 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8009a04:	b510      	push	{r4, lr}
 8009a06:	4b03      	ldr	r3, [pc, #12]	; (8009a14 <_ZN16Shutting_OffViewD1Ev+0x10>)
 8009a08:	6003      	str	r3, [r0, #0]
 8009a0a:	4604      	mov	r4, r0
 8009a0c:	f7ff f892 	bl	8008b34 <_ZN20Shutting_OffViewBaseD1Ev>
 8009a10:	4620      	mov	r0, r4
 8009a12:	bd10      	pop	{r4, pc}
 8009a14:	0802ea7c 	.word	0x0802ea7c

08009a18 <_ZN16Shutting_OffViewD0Ev>:
 8009a18:	b510      	push	{r4, lr}
 8009a1a:	4604      	mov	r4, r0
 8009a1c:	f7ff fff2 	bl	8009a04 <_ZN16Shutting_OffViewD1Ev>
 8009a20:	4620      	mov	r0, r4
 8009a22:	2198      	movs	r1, #152	; 0x98
 8009a24:	f020 f923 	bl	8029c6e <_ZdlPvj>
 8009a28:	4620      	mov	r0, r4
 8009a2a:	bd10      	pop	{r4, pc}

08009a2c <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8009a2c:	b510      	push	{r4, lr}
 8009a2e:	4604      	mov	r4, r0
 8009a30:	f7ff f88a 	bl	8008b48 <_ZN20Shutting_OffViewBaseC1Ev>
 8009a34:	4b01      	ldr	r3, [pc, #4]	; (8009a3c <_ZN16Shutting_OffViewC1Ev+0x10>)
 8009a36:	6023      	str	r3, [r4, #0]
}
 8009a38:	4620      	mov	r0, r4
 8009a3a:	bd10      	pop	{r4, pc}
 8009a3c:	0802ea7c 	.word	0x0802ea7c

08009a40 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8009a40:	f7ff b879 	b.w	8008b36 <_ZN20Shutting_OffViewBase11setupScreenEv>

08009a44 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8009a44:	20f0      	movs	r0, #240	; 0xf0
 8009a46:	4770      	bx	lr

08009a48 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8009a48:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8009a4c:	4770      	bx	lr
 8009a4e:	bf00      	nop

08009a50 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8009a50:	2029      	movs	r0, #41	; 0x29
 8009a52:	f7f7 bee5 	b.w	8001820 <LCD_IO_WriteReg>
 8009a56:	bf00      	nop

08009a58 <ili9341_DisplayOff>:
 8009a58:	2028      	movs	r0, #40	; 0x28
 8009a5a:	f7f7 bee1 	b.w	8001820 <LCD_IO_WriteReg>
 8009a5e:	bf00      	nop

08009a60 <ili9341_Init>:
{
 8009a60:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009a62:	f7f7 fea3 	bl	80017ac <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8009a66:	20ca      	movs	r0, #202	; 0xca
 8009a68:	f7f7 feda 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009a6c:	20c3      	movs	r0, #195	; 0xc3
 8009a6e:	f7f7 fead 	bl	80017cc <LCD_IO_WriteData>
 8009a72:	2008      	movs	r0, #8
 8009a74:	f7f7 feaa 	bl	80017cc <LCD_IO_WriteData>
 8009a78:	2050      	movs	r0, #80	; 0x50
 8009a7a:	f7f7 fea7 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009a7e:	20cf      	movs	r0, #207	; 0xcf
 8009a80:	f7f7 fece 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009a84:	2000      	movs	r0, #0
 8009a86:	f7f7 fea1 	bl	80017cc <LCD_IO_WriteData>
 8009a8a:	20c1      	movs	r0, #193	; 0xc1
 8009a8c:	f7f7 fe9e 	bl	80017cc <LCD_IO_WriteData>
 8009a90:	2030      	movs	r0, #48	; 0x30
 8009a92:	f7f7 fe9b 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009a96:	20ed      	movs	r0, #237	; 0xed
 8009a98:	f7f7 fec2 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009a9c:	2064      	movs	r0, #100	; 0x64
 8009a9e:	f7f7 fe95 	bl	80017cc <LCD_IO_WriteData>
 8009aa2:	2003      	movs	r0, #3
 8009aa4:	f7f7 fe92 	bl	80017cc <LCD_IO_WriteData>
 8009aa8:	2012      	movs	r0, #18
 8009aaa:	f7f7 fe8f 	bl	80017cc <LCD_IO_WriteData>
 8009aae:	2081      	movs	r0, #129	; 0x81
 8009ab0:	f7f7 fe8c 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009ab4:	20e8      	movs	r0, #232	; 0xe8
 8009ab6:	f7f7 feb3 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009aba:	2085      	movs	r0, #133	; 0x85
 8009abc:	f7f7 fe86 	bl	80017cc <LCD_IO_WriteData>
 8009ac0:	2000      	movs	r0, #0
 8009ac2:	f7f7 fe83 	bl	80017cc <LCD_IO_WriteData>
 8009ac6:	2078      	movs	r0, #120	; 0x78
 8009ac8:	f7f7 fe80 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009acc:	20cb      	movs	r0, #203	; 0xcb
 8009ace:	f7f7 fea7 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009ad2:	2039      	movs	r0, #57	; 0x39
 8009ad4:	f7f7 fe7a 	bl	80017cc <LCD_IO_WriteData>
 8009ad8:	202c      	movs	r0, #44	; 0x2c
 8009ada:	f7f7 fe77 	bl	80017cc <LCD_IO_WriteData>
 8009ade:	2000      	movs	r0, #0
 8009ae0:	f7f7 fe74 	bl	80017cc <LCD_IO_WriteData>
 8009ae4:	2034      	movs	r0, #52	; 0x34
 8009ae6:	f7f7 fe71 	bl	80017cc <LCD_IO_WriteData>
 8009aea:	2002      	movs	r0, #2
 8009aec:	f7f7 fe6e 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009af0:	20f7      	movs	r0, #247	; 0xf7
 8009af2:	f7f7 fe95 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009af6:	2020      	movs	r0, #32
 8009af8:	f7f7 fe68 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009afc:	20ea      	movs	r0, #234	; 0xea
 8009afe:	f7f7 fe8f 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b02:	2000      	movs	r0, #0
 8009b04:	f7f7 fe62 	bl	80017cc <LCD_IO_WriteData>
 8009b08:	2000      	movs	r0, #0
 8009b0a:	f7f7 fe5f 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b0e:	20b1      	movs	r0, #177	; 0xb1
 8009b10:	f7f7 fe86 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b14:	2000      	movs	r0, #0
 8009b16:	f7f7 fe59 	bl	80017cc <LCD_IO_WriteData>
 8009b1a:	201b      	movs	r0, #27
 8009b1c:	f7f7 fe56 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b20:	20b6      	movs	r0, #182	; 0xb6
 8009b22:	f7f7 fe7d 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b26:	200a      	movs	r0, #10
 8009b28:	f7f7 fe50 	bl	80017cc <LCD_IO_WriteData>
 8009b2c:	20a2      	movs	r0, #162	; 0xa2
 8009b2e:	f7f7 fe4d 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b32:	20c0      	movs	r0, #192	; 0xc0
 8009b34:	f7f7 fe74 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b38:	2010      	movs	r0, #16
 8009b3a:	f7f7 fe47 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b3e:	20c1      	movs	r0, #193	; 0xc1
 8009b40:	f7f7 fe6e 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b44:	2010      	movs	r0, #16
 8009b46:	f7f7 fe41 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b4a:	20c5      	movs	r0, #197	; 0xc5
 8009b4c:	f7f7 fe68 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b50:	2045      	movs	r0, #69	; 0x45
 8009b52:	f7f7 fe3b 	bl	80017cc <LCD_IO_WriteData>
 8009b56:	2015      	movs	r0, #21
 8009b58:	f7f7 fe38 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b5c:	20c7      	movs	r0, #199	; 0xc7
 8009b5e:	f7f7 fe5f 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b62:	2090      	movs	r0, #144	; 0x90
 8009b64:	f7f7 fe32 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b68:	2036      	movs	r0, #54	; 0x36
 8009b6a:	f7f7 fe59 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b6e:	20c8      	movs	r0, #200	; 0xc8
 8009b70:	f7f7 fe2c 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b74:	20f2      	movs	r0, #242	; 0xf2
 8009b76:	f7f7 fe53 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b7a:	2000      	movs	r0, #0
 8009b7c:	f7f7 fe26 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b80:	20b0      	movs	r0, #176	; 0xb0
 8009b82:	f7f7 fe4d 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b86:	20c2      	movs	r0, #194	; 0xc2
 8009b88:	f7f7 fe20 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009b8c:	20b6      	movs	r0, #182	; 0xb6
 8009b8e:	f7f7 fe47 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009b92:	200a      	movs	r0, #10
 8009b94:	f7f7 fe1a 	bl	80017cc <LCD_IO_WriteData>
 8009b98:	20a7      	movs	r0, #167	; 0xa7
 8009b9a:	f7f7 fe17 	bl	80017cc <LCD_IO_WriteData>
 8009b9e:	2027      	movs	r0, #39	; 0x27
 8009ba0:	f7f7 fe14 	bl	80017cc <LCD_IO_WriteData>
 8009ba4:	2004      	movs	r0, #4
 8009ba6:	f7f7 fe11 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009baa:	202a      	movs	r0, #42	; 0x2a
 8009bac:	f7f7 fe38 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009bb0:	2000      	movs	r0, #0
 8009bb2:	f7f7 fe0b 	bl	80017cc <LCD_IO_WriteData>
 8009bb6:	2000      	movs	r0, #0
 8009bb8:	f7f7 fe08 	bl	80017cc <LCD_IO_WriteData>
 8009bbc:	2000      	movs	r0, #0
 8009bbe:	f7f7 fe05 	bl	80017cc <LCD_IO_WriteData>
 8009bc2:	20ef      	movs	r0, #239	; 0xef
 8009bc4:	f7f7 fe02 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009bc8:	202b      	movs	r0, #43	; 0x2b
 8009bca:	f7f7 fe29 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009bce:	2000      	movs	r0, #0
 8009bd0:	f7f7 fdfc 	bl	80017cc <LCD_IO_WriteData>
 8009bd4:	2000      	movs	r0, #0
 8009bd6:	f7f7 fdf9 	bl	80017cc <LCD_IO_WriteData>
 8009bda:	2001      	movs	r0, #1
 8009bdc:	f7f7 fdf6 	bl	80017cc <LCD_IO_WriteData>
 8009be0:	203f      	movs	r0, #63	; 0x3f
 8009be2:	f7f7 fdf3 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009be6:	20f6      	movs	r0, #246	; 0xf6
 8009be8:	f7f7 fe1a 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009bec:	2001      	movs	r0, #1
 8009bee:	f7f7 fded 	bl	80017cc <LCD_IO_WriteData>
 8009bf2:	2000      	movs	r0, #0
 8009bf4:	f7f7 fdea 	bl	80017cc <LCD_IO_WriteData>
 8009bf8:	2006      	movs	r0, #6
 8009bfa:	f7f7 fde7 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009bfe:	202c      	movs	r0, #44	; 0x2c
 8009c00:	f7f7 fe0e 	bl	8001820 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009c04:	20c8      	movs	r0, #200	; 0xc8
 8009c06:	f7f7 fe73 	bl	80018f0 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009c0a:	2026      	movs	r0, #38	; 0x26
 8009c0c:	f7f7 fe08 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c10:	2001      	movs	r0, #1
 8009c12:	f7f7 fddb 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c16:	20e0      	movs	r0, #224	; 0xe0
 8009c18:	f7f7 fe02 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c1c:	200f      	movs	r0, #15
 8009c1e:	f7f7 fdd5 	bl	80017cc <LCD_IO_WriteData>
 8009c22:	2029      	movs	r0, #41	; 0x29
 8009c24:	f7f7 fdd2 	bl	80017cc <LCD_IO_WriteData>
 8009c28:	2024      	movs	r0, #36	; 0x24
 8009c2a:	f7f7 fdcf 	bl	80017cc <LCD_IO_WriteData>
 8009c2e:	200c      	movs	r0, #12
 8009c30:	f7f7 fdcc 	bl	80017cc <LCD_IO_WriteData>
 8009c34:	200e      	movs	r0, #14
 8009c36:	f7f7 fdc9 	bl	80017cc <LCD_IO_WriteData>
 8009c3a:	2009      	movs	r0, #9
 8009c3c:	f7f7 fdc6 	bl	80017cc <LCD_IO_WriteData>
 8009c40:	204e      	movs	r0, #78	; 0x4e
 8009c42:	f7f7 fdc3 	bl	80017cc <LCD_IO_WriteData>
 8009c46:	2078      	movs	r0, #120	; 0x78
 8009c48:	f7f7 fdc0 	bl	80017cc <LCD_IO_WriteData>
 8009c4c:	203c      	movs	r0, #60	; 0x3c
 8009c4e:	f7f7 fdbd 	bl	80017cc <LCD_IO_WriteData>
 8009c52:	2009      	movs	r0, #9
 8009c54:	f7f7 fdba 	bl	80017cc <LCD_IO_WriteData>
 8009c58:	2013      	movs	r0, #19
 8009c5a:	f7f7 fdb7 	bl	80017cc <LCD_IO_WriteData>
 8009c5e:	2005      	movs	r0, #5
 8009c60:	f7f7 fdb4 	bl	80017cc <LCD_IO_WriteData>
 8009c64:	2017      	movs	r0, #23
 8009c66:	f7f7 fdb1 	bl	80017cc <LCD_IO_WriteData>
 8009c6a:	2011      	movs	r0, #17
 8009c6c:	f7f7 fdae 	bl	80017cc <LCD_IO_WriteData>
 8009c70:	2000      	movs	r0, #0
 8009c72:	f7f7 fdab 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009c76:	20e1      	movs	r0, #225	; 0xe1
 8009c78:	f7f7 fdd2 	bl	8001820 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009c7c:	2000      	movs	r0, #0
 8009c7e:	f7f7 fda5 	bl	80017cc <LCD_IO_WriteData>
 8009c82:	2016      	movs	r0, #22
 8009c84:	f7f7 fda2 	bl	80017cc <LCD_IO_WriteData>
 8009c88:	201b      	movs	r0, #27
 8009c8a:	f7f7 fd9f 	bl	80017cc <LCD_IO_WriteData>
 8009c8e:	2004      	movs	r0, #4
 8009c90:	f7f7 fd9c 	bl	80017cc <LCD_IO_WriteData>
 8009c94:	2011      	movs	r0, #17
 8009c96:	f7f7 fd99 	bl	80017cc <LCD_IO_WriteData>
 8009c9a:	2007      	movs	r0, #7
 8009c9c:	f7f7 fd96 	bl	80017cc <LCD_IO_WriteData>
 8009ca0:	2031      	movs	r0, #49	; 0x31
 8009ca2:	f7f7 fd93 	bl	80017cc <LCD_IO_WriteData>
 8009ca6:	2033      	movs	r0, #51	; 0x33
 8009ca8:	f7f7 fd90 	bl	80017cc <LCD_IO_WriteData>
 8009cac:	2042      	movs	r0, #66	; 0x42
 8009cae:	f7f7 fd8d 	bl	80017cc <LCD_IO_WriteData>
 8009cb2:	2005      	movs	r0, #5
 8009cb4:	f7f7 fd8a 	bl	80017cc <LCD_IO_WriteData>
 8009cb8:	200c      	movs	r0, #12
 8009cba:	f7f7 fd87 	bl	80017cc <LCD_IO_WriteData>
 8009cbe:	200a      	movs	r0, #10
 8009cc0:	f7f7 fd84 	bl	80017cc <LCD_IO_WriteData>
 8009cc4:	2028      	movs	r0, #40	; 0x28
 8009cc6:	f7f7 fd81 	bl	80017cc <LCD_IO_WriteData>
 8009cca:	202f      	movs	r0, #47	; 0x2f
 8009ccc:	f7f7 fd7e 	bl	80017cc <LCD_IO_WriteData>
 8009cd0:	200f      	movs	r0, #15
 8009cd2:	f7f7 fd7b 	bl	80017cc <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009cd6:	2011      	movs	r0, #17
 8009cd8:	f7f7 fda2 	bl	8001820 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009cdc:	20c8      	movs	r0, #200	; 0xc8
 8009cde:	f7f7 fe07 	bl	80018f0 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8009ce2:	2029      	movs	r0, #41	; 0x29
 8009ce4:	f7f7 fd9c 	bl	8001820 <LCD_IO_WriteReg>
}
 8009ce8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8009cec:	202c      	movs	r0, #44	; 0x2c
 8009cee:	f7f7 bd97 	b.w	8001820 <LCD_IO_WriteReg>
 8009cf2:	bf00      	nop

08009cf4 <ili9341_ReadID>:
{
 8009cf4:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009cf6:	f7f7 fd59 	bl	80017ac <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8009cfa:	2103      	movs	r1, #3
 8009cfc:	20d3      	movs	r0, #211	; 0xd3
 8009cfe:	f7f7 fdb9 	bl	8001874 <LCD_IO_ReadData>
}
 8009d02:	b280      	uxth	r0, r0
 8009d04:	bd08      	pop	{r3, pc}
 8009d06:	bf00      	nop

08009d08 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8009d08:	221f      	movs	r2, #31
 8009d0a:	210b      	movs	r1, #11
 8009d0c:	b2c0      	uxtb	r0, r0
 8009d0e:	f7f7 bcff 	b.w	8001710 <IOE_Write>
 8009d12:	bf00      	nop

08009d14 <stmpe811_Reset>:
{
 8009d14:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009d16:	b2c4      	uxtb	r4, r0
 8009d18:	2202      	movs	r2, #2
 8009d1a:	2103      	movs	r1, #3
 8009d1c:	4620      	mov	r0, r4
 8009d1e:	f7f7 fcf7 	bl	8001710 <IOE_Write>
  IOE_Delay(10); 
 8009d22:	200a      	movs	r0, #10
 8009d24:	f7f7 fd40 	bl	80017a8 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009d28:	4620      	mov	r0, r4
 8009d2a:	2200      	movs	r2, #0
 8009d2c:	2103      	movs	r1, #3
 8009d2e:	f7f7 fcef 	bl	8001710 <IOE_Write>
}
 8009d32:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009d36:	2002      	movs	r0, #2
 8009d38:	f7f7 bd36 	b.w	80017a8 <IOE_Delay>

08009d3c <stmpe811_ReadID>:
{
 8009d3c:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009d3e:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8009d40:	f7f7 fce2 	bl	8001708 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009d44:	2100      	movs	r1, #0
 8009d46:	4620      	mov	r0, r4
 8009d48:	f7f7 fcfa 	bl	8001740 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009d4c:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009d4e:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009d50:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009d52:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009d54:	f7f7 fcf4 	bl	8001740 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009d58:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8009d5c:	b280      	uxth	r0, r0
 8009d5e:	bd10      	pop	{r4, pc}

08009d60 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8009d60:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8009d62:	b2c4      	uxtb	r4, r0
 8009d64:	2140      	movs	r1, #64	; 0x40
 8009d66:	4620      	mov	r0, r4
 8009d68:	f7f7 fcea 	bl	8001740 <IOE_Read>
  
  if(state > 0)
 8009d6c:	0603      	lsls	r3, r0, #24
 8009d6e:	d40b      	bmi.n	8009d88 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009d70:	4620      	mov	r0, r4
 8009d72:	2201      	movs	r2, #1
 8009d74:	214b      	movs	r1, #75	; 0x4b
 8009d76:	f7f7 fccb 	bl	8001710 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009d7a:	4620      	mov	r0, r4
 8009d7c:	2200      	movs	r2, #0
 8009d7e:	214b      	movs	r1, #75	; 0x4b
 8009d80:	f7f7 fcc6 	bl	8001710 <IOE_Write>
  uint8_t ret = 0;
 8009d84:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8009d86:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8009d88:	214c      	movs	r1, #76	; 0x4c
 8009d8a:	4620      	mov	r0, r4
 8009d8c:	f7f7 fcd8 	bl	8001740 <IOE_Read>
      ret = 1;
 8009d90:	3800      	subs	r0, #0
 8009d92:	bf18      	it	ne
 8009d94:	2001      	movne	r0, #1
}
 8009d96:	bd10      	pop	{r4, pc}

08009d98 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8009d98:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8009d9a:	210b      	movs	r1, #11
 8009d9c:	b2c0      	uxtb	r0, r0
 8009d9e:	f7f7 fccf 	bl	8001740 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8009da2:	f000 001f 	and.w	r0, r0, #31
 8009da6:	bd08      	pop	{r3, pc}

08009da8 <stmpe811_TS_GetXY>:
{
 8009da8:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009daa:	2304      	movs	r3, #4
{
 8009dac:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009dae:	b2c4      	uxtb	r4, r0
{
 8009db0:	4615      	mov	r5, r2
 8009db2:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009db4:	eb0d 0203 	add.w	r2, sp, r3
 8009db8:	21d7      	movs	r1, #215	; 0xd7
 8009dba:	4620      	mov	r0, r4
 8009dbc:	f7f7 fcdc 	bl	8001778 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8009dc0:	9b01      	ldr	r3, [sp, #4]
 8009dc2:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009dc4:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009dc6:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009dca:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009dcc:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009dce:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009dd0:	2201      	movs	r2, #1
 8009dd2:	214b      	movs	r1, #75	; 0x4b
 8009dd4:	f7f7 fc9c 	bl	8001710 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009dd8:	2200      	movs	r2, #0
 8009dda:	214b      	movs	r1, #75	; 0x4b
 8009ddc:	4620      	mov	r0, r4
 8009dde:	f7f7 fc97 	bl	8001710 <IOE_Write>
}
 8009de2:	b002      	add	sp, #8
 8009de4:	bd70      	pop	{r4, r5, r6, pc}
 8009de6:	bf00      	nop

08009de8 <stmpe811_TS_Start>:
{
 8009de8:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8009dea:	b2c4      	uxtb	r4, r0
 8009dec:	2104      	movs	r1, #4
 8009dee:	4620      	mov	r0, r4
 8009df0:	f7f7 fca6 	bl	8001740 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009df4:	2104      	movs	r1, #4
 8009df6:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8009dfa:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009dfc:	4620      	mov	r0, r4
 8009dfe:	f7f7 fc87 	bl	8001710 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8009e02:	2117      	movs	r1, #23
 8009e04:	4620      	mov	r0, r4
 8009e06:	f7f7 fc9b 	bl	8001740 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8009e0a:	2117      	movs	r1, #23
 8009e0c:	f000 020f 	and.w	r2, r0, #15
 8009e10:	4620      	mov	r0, r4
 8009e12:	f7f7 fc7d 	bl	8001710 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009e16:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8009e1a:	4620      	mov	r0, r4
 8009e1c:	2104      	movs	r1, #4
 8009e1e:	f7f7 fc77 	bl	8001710 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8009e22:	2249      	movs	r2, #73	; 0x49
 8009e24:	2120      	movs	r1, #32
 8009e26:	4620      	mov	r0, r4
 8009e28:	f7f7 fc72 	bl	8001710 <IOE_Write>
  IOE_Delay(2); 
 8009e2c:	2002      	movs	r0, #2
 8009e2e:	f7f7 fcbb 	bl	80017a8 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8009e32:	4620      	mov	r0, r4
 8009e34:	2201      	movs	r2, #1
 8009e36:	2121      	movs	r1, #33	; 0x21
 8009e38:	f7f7 fc6a 	bl	8001710 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8009e3c:	4620      	mov	r0, r4
 8009e3e:	229a      	movs	r2, #154	; 0x9a
 8009e40:	2141      	movs	r1, #65	; 0x41
 8009e42:	f7f7 fc65 	bl	8001710 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8009e46:	4620      	mov	r0, r4
 8009e48:	2201      	movs	r2, #1
 8009e4a:	214a      	movs	r1, #74	; 0x4a
 8009e4c:	f7f7 fc60 	bl	8001710 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009e50:	4620      	mov	r0, r4
 8009e52:	2201      	movs	r2, #1
 8009e54:	214b      	movs	r1, #75	; 0x4b
 8009e56:	f7f7 fc5b 	bl	8001710 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009e5a:	4620      	mov	r0, r4
 8009e5c:	2200      	movs	r2, #0
 8009e5e:	214b      	movs	r1, #75	; 0x4b
 8009e60:	f7f7 fc56 	bl	8001710 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8009e64:	4620      	mov	r0, r4
 8009e66:	2201      	movs	r2, #1
 8009e68:	2156      	movs	r1, #86	; 0x56
 8009e6a:	f7f7 fc51 	bl	8001710 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8009e6e:	4620      	mov	r0, r4
 8009e70:	2201      	movs	r2, #1
 8009e72:	2158      	movs	r1, #88	; 0x58
 8009e74:	f7f7 fc4c 	bl	8001710 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8009e78:	4620      	mov	r0, r4
 8009e7a:	2201      	movs	r2, #1
 8009e7c:	2140      	movs	r1, #64	; 0x40
 8009e7e:	f7f7 fc47 	bl	8001710 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8009e82:	4620      	mov	r0, r4
 8009e84:	22ff      	movs	r2, #255	; 0xff
 8009e86:	210b      	movs	r1, #11
 8009e88:	f7f7 fc42 	bl	8001710 <IOE_Write>
}
 8009e8c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8009e90:	2002      	movs	r0, #2
 8009e92:	f7f7 bc89 	b.w	80017a8 <IOE_Delay>
 8009e96:	bf00      	nop

08009e98 <stmpe811_TS_DisableIT>:
{
 8009e98:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8009e9a:	b2c4      	uxtb	r4, r0
 8009e9c:	2109      	movs	r1, #9
 8009e9e:	4620      	mov	r0, r4
 8009ea0:	f7f7 fc4e 	bl	8001740 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8009ea4:	2109      	movs	r1, #9
 8009ea6:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8009eaa:	4620      	mov	r0, r4
 8009eac:	f7f7 fc30 	bl	8001710 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009eb0:	210a      	movs	r1, #10
 8009eb2:	4620      	mov	r0, r4
 8009eb4:	f7f7 fc44 	bl	8001740 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009eb8:	210a      	movs	r1, #10
 8009eba:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8009ebe:	4620      	mov	r0, r4
}
 8009ec0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009ec4:	f7f7 bc24 	b.w	8001710 <IOE_Write>

08009ec8 <stmpe811_TS_EnableIT>:
{
 8009ec8:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009eca:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8009ecc:	f7f7 fc1e 	bl	800170c <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009ed0:	210a      	movs	r1, #10
 8009ed2:	4620      	mov	r0, r4
 8009ed4:	f7f7 fc34 	bl	8001740 <IOE_Read>
  tmp |= Source; 
 8009ed8:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009edc:	b2c2      	uxtb	r2, r0
 8009ede:	210a      	movs	r1, #10
 8009ee0:	4620      	mov	r0, r4
 8009ee2:	f7f7 fc15 	bl	8001710 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8009ee6:	2109      	movs	r1, #9
 8009ee8:	4620      	mov	r0, r4
 8009eea:	f7f7 fc29 	bl	8001740 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8009eee:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009ef2:	b2c2      	uxtb	r2, r0
 8009ef4:	2109      	movs	r1, #9
 8009ef6:	4620      	mov	r0, r4
}
 8009ef8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009efc:	f7f7 bc08 	b.w	8001710 <IOE_Write>

08009f00 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8009f00:	4a10      	ldr	r2, [pc, #64]	; (8009f44 <stmpe811_Init+0x44>)
 8009f02:	7813      	ldrb	r3, [r2, #0]
 8009f04:	4298      	cmp	r0, r3
 8009f06:	d004      	beq.n	8009f12 <stmpe811_Init+0x12>
 8009f08:	7851      	ldrb	r1, [r2, #1]
 8009f0a:	4288      	cmp	r0, r1
 8009f0c:	d001      	beq.n	8009f12 <stmpe811_Init+0x12>
 8009f0e:	b113      	cbz	r3, 8009f16 <stmpe811_Init+0x16>
 8009f10:	b101      	cbz	r1, 8009f14 <stmpe811_Init+0x14>
 8009f12:	4770      	bx	lr
 8009f14:	2301      	movs	r3, #1
{
 8009f16:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8009f18:	b2c4      	uxtb	r4, r0
 8009f1a:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8009f1c:	f7f7 fbf4 	bl	8001708 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009f20:	2202      	movs	r2, #2
 8009f22:	2103      	movs	r1, #3
 8009f24:	4620      	mov	r0, r4
 8009f26:	f7f7 fbf3 	bl	8001710 <IOE_Write>
  IOE_Delay(10); 
 8009f2a:	200a      	movs	r0, #10
 8009f2c:	f7f7 fc3c 	bl	80017a8 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009f30:	4620      	mov	r0, r4
 8009f32:	2200      	movs	r2, #0
 8009f34:	2103      	movs	r1, #3
 8009f36:	f7f7 fbeb 	bl	8001710 <IOE_Write>
}
 8009f3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009f3e:	2002      	movs	r0, #2
 8009f40:	f7f7 bc32 	b.w	80017a8 <IOE_Delay>
 8009f44:	20001fb0 	.word	0x20001fb0

08009f48 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009f48:	4b05      	ldr	r3, [pc, #20]	; (8009f60 <SystemInit+0x18>)
 8009f4a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009f4e:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009f52:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8009f56:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009f5a:	6099      	str	r1, [r3, #8]
#endif
}
 8009f5c:	4770      	bx	lr
 8009f5e:	bf00      	nop
 8009f60:	e000ed00 	.word	0xe000ed00

08009f64 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009f64:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009f66:	4b0b      	ldr	r3, [pc, #44]	; (8009f94 <HAL_Init+0x30>)
 8009f68:	681a      	ldr	r2, [r3, #0]
 8009f6a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009f6e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009f70:	681a      	ldr	r2, [r3, #0]
 8009f72:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009f76:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8009f78:	681a      	ldr	r2, [r3, #0]
 8009f7a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009f7e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009f80:	2003      	movs	r0, #3
 8009f82:	f000 f82d 	bl	8009fe0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8009f86:	2000      	movs	r0, #0
 8009f88:	f7f8 f884 	bl	8002094 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8009f8c:	f7f7 fe04 	bl	8001b98 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009f90:	2000      	movs	r0, #0
 8009f92:	bd08      	pop	{r3, pc}
 8009f94:	40023c00 	.word	0x40023c00

08009f98 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8009f98:	4a03      	ldr	r2, [pc, #12]	; (8009fa8 <HAL_IncTick+0x10>)
 8009f9a:	4b04      	ldr	r3, [pc, #16]	; (8009fac <HAL_IncTick+0x14>)
 8009f9c:	6811      	ldr	r1, [r2, #0]
 8009f9e:	781b      	ldrb	r3, [r3, #0]
 8009fa0:	440b      	add	r3, r1
 8009fa2:	6013      	str	r3, [r2, #0]
}
 8009fa4:	4770      	bx	lr
 8009fa6:	bf00      	nop
 8009fa8:	20001fb4 	.word	0x20001fb4
 8009fac:	2000007c 	.word	0x2000007c

08009fb0 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009fb0:	4b01      	ldr	r3, [pc, #4]	; (8009fb8 <HAL_GetTick+0x8>)
 8009fb2:	6818      	ldr	r0, [r3, #0]
}
 8009fb4:	4770      	bx	lr
 8009fb6:	bf00      	nop
 8009fb8:	20001fb4 	.word	0x20001fb4

08009fbc <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8009fbc:	b538      	push	{r3, r4, r5, lr}
 8009fbe:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009fc0:	f7ff fff6 	bl	8009fb0 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8009fc4:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8009fc6:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8009fc8:	d002      	beq.n	8009fd0 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8009fca:	4b04      	ldr	r3, [pc, #16]	; (8009fdc <HAL_Delay+0x20>)
 8009fcc:	781b      	ldrb	r3, [r3, #0]
 8009fce:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8009fd0:	f7ff ffee 	bl	8009fb0 <HAL_GetTick>
 8009fd4:	1b43      	subs	r3, r0, r5
 8009fd6:	42a3      	cmp	r3, r4
 8009fd8:	d3fa      	bcc.n	8009fd0 <HAL_Delay+0x14>
  {
  }
}
 8009fda:	bd38      	pop	{r3, r4, r5, pc}
 8009fdc:	2000007c 	.word	0x2000007c

08009fe0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8009fe0:	4907      	ldr	r1, [pc, #28]	; (800a000 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8009fe2:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009fe4:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009fe6:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009fea:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009fee:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8009ff0:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8009ff2:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8009ff6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8009ffa:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8009ffc:	4770      	bx	lr
 8009ffe:	bf00      	nop
 800a000:	e000ed00 	.word	0xe000ed00

0800a004 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800a004:	4b1c      	ldr	r3, [pc, #112]	; (800a078 <HAL_NVIC_SetPriority+0x74>)
 800a006:	68db      	ldr	r3, [r3, #12]
 800a008:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800a00c:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a00e:	f1c3 0e07 	rsb	lr, r3, #7
 800a012:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a016:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a01a:	bf28      	it	cs
 800a01c:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a020:	f1bc 0f06 	cmp.w	ip, #6
 800a024:	d91b      	bls.n	800a05e <HAL_NVIC_SetPriority+0x5a>
 800a026:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800a028:	f04f 3cff 	mov.w	ip, #4294967295
 800a02c:	fa0c fc03 	lsl.w	ip, ip, r3
 800a030:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a034:	f04f 3cff 	mov.w	ip, #4294967295
 800a038:	fa0c fc0e 	lsl.w	ip, ip, lr
 800a03c:	ea21 010c 	bic.w	r1, r1, ip
 800a040:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800a042:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a044:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800a048:	db0c      	blt.n	800a064 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a04a:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800a04e:	0109      	lsls	r1, r1, #4
 800a050:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800a054:	b2c9      	uxtb	r1, r1
 800a056:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800a05a:	f85d fb04 	ldr.w	pc, [sp], #4
 800a05e:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a060:	4613      	mov	r3, r2
 800a062:	e7e7      	b.n	800a034 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a064:	4b05      	ldr	r3, [pc, #20]	; (800a07c <HAL_NVIC_SetPriority+0x78>)
 800a066:	f000 000f 	and.w	r0, r0, #15
 800a06a:	0109      	lsls	r1, r1, #4
 800a06c:	4403      	add	r3, r0
 800a06e:	b2c9      	uxtb	r1, r1
 800a070:	7619      	strb	r1, [r3, #24]
 800a072:	f85d fb04 	ldr.w	pc, [sp], #4
 800a076:	bf00      	nop
 800a078:	e000ed00 	.word	0xe000ed00
 800a07c:	e000ecfc 	.word	0xe000ecfc

0800a080 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800a080:	2800      	cmp	r0, #0
 800a082:	db07      	blt.n	800a094 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a084:	0941      	lsrs	r1, r0, #5
 800a086:	4a04      	ldr	r2, [pc, #16]	; (800a098 <HAL_NVIC_EnableIRQ+0x18>)
 800a088:	f000 001f 	and.w	r0, r0, #31
 800a08c:	2301      	movs	r3, #1
 800a08e:	4083      	lsls	r3, r0
 800a090:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800a094:	4770      	bx	lr
 800a096:	bf00      	nop
 800a098:	e000e100 	.word	0xe000e100

0800a09c <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800a09c:	b180      	cbz	r0, 800a0c0 <HAL_CRC_Init+0x24>
{
 800a09e:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800a0a0:	7943      	ldrb	r3, [r0, #5]
 800a0a2:	4604      	mov	r4, r0
 800a0a4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a0a8:	b11b      	cbz	r3, 800a0b2 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800a0aa:	2301      	movs	r3, #1
 800a0ac:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800a0ae:	2000      	movs	r0, #0
}
 800a0b0:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800a0b2:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800a0b4:	f7f7 fd90 	bl	8001bd8 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800a0b8:	2301      	movs	r3, #1
 800a0ba:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 800a0bc:	2000      	movs	r0, #0
}
 800a0be:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800a0c0:	2001      	movs	r0, #1
}
 800a0c2:	4770      	bx	lr

0800a0c4 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800a0c4:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a0c8:	2b02      	cmp	r3, #2
 800a0ca:	d003      	beq.n	800a0d4 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800a0cc:	2380      	movs	r3, #128	; 0x80
 800a0ce:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800a0d0:	2001      	movs	r0, #1
 800a0d2:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800a0d4:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800a0d6:	2305      	movs	r3, #5
 800a0d8:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800a0dc:	6813      	ldr	r3, [r2, #0]
 800a0de:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800a0e2:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800a0e4:	6013      	str	r3, [r2, #0]
}
 800a0e6:	4770      	bx	lr

0800a0e8 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 800a0e8:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800a0ec:	4770      	bx	lr
 800a0ee:	bf00      	nop

0800a0f0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800a0f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a0f4:	2200      	movs	r2, #0
 800a0f6:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a0f8:	f8df a260 	ldr.w	sl, [pc, #608]	; 800a35c <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800a0fc:	4e90      	ldr	r6, [pc, #576]	; (800a340 <HAL_GPIO_Init+0x250>)
{
 800a0fe:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a100:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a102:	4689      	mov	r9, r1
 800a104:	e005      	b.n	800a112 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a106:	3301      	adds	r3, #1
 800a108:	2b10      	cmp	r3, #16
 800a10a:	f102 0202 	add.w	r2, r2, #2
 800a10e:	f000 8095 	beq.w	800a23c <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800a112:	2101      	movs	r1, #1
 800a114:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a116:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800a11a:	43a1      	bics	r1, r4
 800a11c:	d1f3      	bne.n	800a106 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800a11e:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800a122:	f00c 0103 	and.w	r1, ip, #3
 800a126:	1e4d      	subs	r5, r1, #1
 800a128:	2d01      	cmp	r5, #1
 800a12a:	f240 808a 	bls.w	800a242 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800a12e:	2903      	cmp	r1, #3
 800a130:	f040 80ca 	bne.w	800a2c8 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a134:	4091      	lsls	r1, r2
 800a136:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800a138:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800a13a:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800a13c:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800a13e:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800a142:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800a144:	d0df      	beq.n	800a106 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a146:	2100      	movs	r1, #0
 800a148:	9103      	str	r1, [sp, #12]
 800a14a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800a14e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800a152:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800a156:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800a15a:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800a15e:	9103      	str	r1, [sp, #12]
 800a160:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800a162:	f023 0103 	bic.w	r1, r3, #3
 800a166:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800a16a:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a16e:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800a172:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a174:	00bf      	lsls	r7, r7, #2
 800a176:	f04f 0e0f 	mov.w	lr, #15
 800a17a:	fa0e fe07 	lsl.w	lr, lr, r7
 800a17e:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a182:	4d70      	ldr	r5, [pc, #448]	; (800a344 <HAL_GPIO_Init+0x254>)
 800a184:	42a8      	cmp	r0, r5
 800a186:	d02e      	beq.n	800a1e6 <HAL_GPIO_Init+0xf6>
 800a188:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800a18c:	42a8      	cmp	r0, r5
 800a18e:	f000 809f 	beq.w	800a2d0 <HAL_GPIO_Init+0x1e0>
 800a192:	4d6d      	ldr	r5, [pc, #436]	; (800a348 <HAL_GPIO_Init+0x258>)
 800a194:	42a8      	cmp	r0, r5
 800a196:	f000 80a2 	beq.w	800a2de <HAL_GPIO_Init+0x1ee>
 800a19a:	4d6c      	ldr	r5, [pc, #432]	; (800a34c <HAL_GPIO_Init+0x25c>)
 800a19c:	42a8      	cmp	r0, r5
 800a19e:	f000 80a5 	beq.w	800a2ec <HAL_GPIO_Init+0x1fc>
 800a1a2:	4d6b      	ldr	r5, [pc, #428]	; (800a350 <HAL_GPIO_Init+0x260>)
 800a1a4:	42a8      	cmp	r0, r5
 800a1a6:	f000 80a8 	beq.w	800a2fa <HAL_GPIO_Init+0x20a>
 800a1aa:	4d6a      	ldr	r5, [pc, #424]	; (800a354 <HAL_GPIO_Init+0x264>)
 800a1ac:	42a8      	cmp	r0, r5
 800a1ae:	f000 80b2 	beq.w	800a316 <HAL_GPIO_Init+0x226>
 800a1b2:	4d69      	ldr	r5, [pc, #420]	; (800a358 <HAL_GPIO_Init+0x268>)
 800a1b4:	42a8      	cmp	r0, r5
 800a1b6:	f000 80b5 	beq.w	800a324 <HAL_GPIO_Init+0x234>
 800a1ba:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800a360 <HAL_GPIO_Init+0x270>
 800a1be:	4570      	cmp	r0, lr
 800a1c0:	f000 80a2 	beq.w	800a308 <HAL_GPIO_Init+0x218>
 800a1c4:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800a364 <HAL_GPIO_Init+0x274>
 800a1c8:	4570      	cmp	r0, lr
 800a1ca:	f000 80b2 	beq.w	800a332 <HAL_GPIO_Init+0x242>
 800a1ce:	f8df e198 	ldr.w	lr, [pc, #408]	; 800a368 <HAL_GPIO_Init+0x278>
 800a1d2:	4570      	cmp	r0, lr
 800a1d4:	bf0c      	ite	eq
 800a1d6:	f04f 0e09 	moveq.w	lr, #9
 800a1da:	f04f 0e0a 	movne.w	lr, #10
 800a1de:	fa0e f707 	lsl.w	r7, lr, r7
 800a1e2:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800a1e6:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800a1ea:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800a1ec:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800a1f0:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800a1f4:	bf0c      	ite	eq
 800a1f6:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a1f8:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800a1fc:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800a1fe:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800a200:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800a204:	bf0c      	ite	eq
 800a206:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a208:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800a20c:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800a20e:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800a210:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800a214:	bf0c      	ite	eq
 800a216:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a218:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800a21c:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800a21e:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800a220:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a224:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800a228:	bf0c      	ite	eq
 800a22a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a22c:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a230:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800a232:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a234:	f102 0202 	add.w	r2, r2, #2
 800a238:	f47f af6b 	bne.w	800a112 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800a23c:	b005      	add	sp, #20
 800a23e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a242:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800a246:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a24a:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a24e:	2503      	movs	r5, #3
 800a250:	fa05 f802 	lsl.w	r8, r5, r2
 800a254:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a258:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800a25c:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800a25e:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800a260:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800a264:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800a268:	409f      	lsls	r7, r3
 800a26a:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a26e:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800a272:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800a274:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800a276:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800a27a:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800a27e:	4097      	lsls	r7, r2
 800a280:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a284:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800a286:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a288:	fa01 f102 	lsl.w	r1, r1, r2
 800a28c:	f47f af54 	bne.w	800a138 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800a290:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800a294:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a298:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800a29c:	f8de 7020 	ldr.w	r7, [lr, #32]
 800a2a0:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a2a2:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a2a6:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a2aa:	fa07 f708 	lsl.w	r7, r7, r8
 800a2ae:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a2b0:	270f      	movs	r7, #15
 800a2b2:	fa07 f808 	lsl.w	r8, r7, r8
 800a2b6:	9f00      	ldr	r7, [sp, #0]
 800a2b8:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a2bc:	9f01      	ldr	r7, [sp, #4]
 800a2be:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800a2c2:	f8ce 7020 	str.w	r7, [lr, #32]
 800a2c6:	e737      	b.n	800a138 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a2c8:	2503      	movs	r5, #3
 800a2ca:	4095      	lsls	r5, r2
 800a2cc:	43ed      	mvns	r5, r5
 800a2ce:	e7d1      	b.n	800a274 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a2d0:	f04f 0e01 	mov.w	lr, #1
 800a2d4:	fa0e f707 	lsl.w	r7, lr, r7
 800a2d8:	ea48 0807 	orr.w	r8, r8, r7
 800a2dc:	e783      	b.n	800a1e6 <HAL_GPIO_Init+0xf6>
 800a2de:	f04f 0e02 	mov.w	lr, #2
 800a2e2:	fa0e f707 	lsl.w	r7, lr, r7
 800a2e6:	ea48 0807 	orr.w	r8, r8, r7
 800a2ea:	e77c      	b.n	800a1e6 <HAL_GPIO_Init+0xf6>
 800a2ec:	f04f 0e03 	mov.w	lr, #3
 800a2f0:	fa0e f707 	lsl.w	r7, lr, r7
 800a2f4:	ea48 0807 	orr.w	r8, r8, r7
 800a2f8:	e775      	b.n	800a1e6 <HAL_GPIO_Init+0xf6>
 800a2fa:	f04f 0e04 	mov.w	lr, #4
 800a2fe:	fa0e f707 	lsl.w	r7, lr, r7
 800a302:	ea48 0807 	orr.w	r8, r8, r7
 800a306:	e76e      	b.n	800a1e6 <HAL_GPIO_Init+0xf6>
 800a308:	f04f 0e07 	mov.w	lr, #7
 800a30c:	fa0e f707 	lsl.w	r7, lr, r7
 800a310:	ea48 0807 	orr.w	r8, r8, r7
 800a314:	e767      	b.n	800a1e6 <HAL_GPIO_Init+0xf6>
 800a316:	f04f 0e05 	mov.w	lr, #5
 800a31a:	fa0e f707 	lsl.w	r7, lr, r7
 800a31e:	ea48 0807 	orr.w	r8, r8, r7
 800a322:	e760      	b.n	800a1e6 <HAL_GPIO_Init+0xf6>
 800a324:	f04f 0e06 	mov.w	lr, #6
 800a328:	fa0e f707 	lsl.w	r7, lr, r7
 800a32c:	ea48 0807 	orr.w	r8, r8, r7
 800a330:	e759      	b.n	800a1e6 <HAL_GPIO_Init+0xf6>
 800a332:	f04f 0e08 	mov.w	lr, #8
 800a336:	fa0e f707 	lsl.w	r7, lr, r7
 800a33a:	ea48 0807 	orr.w	r8, r8, r7
 800a33e:	e752      	b.n	800a1e6 <HAL_GPIO_Init+0xf6>
 800a340:	40013c00 	.word	0x40013c00
 800a344:	40020000 	.word	0x40020000
 800a348:	40020800 	.word	0x40020800
 800a34c:	40020c00 	.word	0x40020c00
 800a350:	40021000 	.word	0x40021000
 800a354:	40021400 	.word	0x40021400
 800a358:	40021800 	.word	0x40021800
 800a35c:	40023800 	.word	0x40023800
 800a360:	40021c00 	.word	0x40021c00
 800a364:	40022000 	.word	0x40022000
 800a368:	40022400 	.word	0x40022400

0800a36c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800a36c:	6903      	ldr	r3, [r0, #16]
 800a36e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800a370:	bf14      	ite	ne
 800a372:	2001      	movne	r0, #1
 800a374:	2000      	moveq	r0, #0
 800a376:	4770      	bx	lr

0800a378 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800a378:	b902      	cbnz	r2, 800a37c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800a37a:	0409      	lsls	r1, r1, #16
 800a37c:	6181      	str	r1, [r0, #24]
  }
}
 800a37e:	4770      	bx	lr

0800a380 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800a380:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800a382:	ea01 0203 	and.w	r2, r1, r3
 800a386:	ea21 0103 	bic.w	r1, r1, r3
 800a38a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800a38e:	6181      	str	r1, [r0, #24]
}
 800a390:	4770      	bx	lr
 800a392:	bf00      	nop

0800a394 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800a394:	4770      	bx	lr
 800a396:	bf00      	nop

0800a398 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800a398:	4a04      	ldr	r2, [pc, #16]	; (800a3ac <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800a39a:	6951      	ldr	r1, [r2, #20]
 800a39c:	4201      	tst	r1, r0
 800a39e:	d100      	bne.n	800a3a2 <HAL_GPIO_EXTI_IRQHandler+0xa>
 800a3a0:	4770      	bx	lr
{
 800a3a2:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800a3a4:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800a3a6:	f7ff fff5 	bl	800a394 <HAL_GPIO_EXTI_Callback>
}
 800a3aa:	bd08      	pop	{r3, pc}
 800a3ac:	40013c00 	.word	0x40013c00

0800a3b0 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800a3b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a3b4:	6804      	ldr	r4, [r0, #0]
{
 800a3b6:	b083      	sub	sp, #12
 800a3b8:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a3ba:	6823      	ldr	r3, [r4, #0]
{
 800a3bc:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800a3c0:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a3c4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a3c8:	4606      	mov	r6, r0
 800a3ca:	468a      	mov	sl, r1
 800a3cc:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a3ce:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a3d0:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a3d4:	d136      	bne.n	800a444 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a3d6:	6965      	ldr	r5, [r4, #20]
 800a3d8:	07e8      	lsls	r0, r5, #31
 800a3da:	d5fc      	bpl.n	800a3d6 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a3dc:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800a3e0:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a3e2:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a3e6:	d003      	beq.n	800a3f0 <I2C_RequestMemoryWrite+0x40>
 800a3e8:	e04f      	b.n	800a48a <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a3ea:	6961      	ldr	r1, [r4, #20]
 800a3ec:	054d      	lsls	r5, r1, #21
 800a3ee:	d45d      	bmi.n	800a4ac <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a3f0:	6961      	ldr	r1, [r4, #20]
 800a3f2:	078b      	lsls	r3, r1, #30
 800a3f4:	d5f9      	bpl.n	800a3ea <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a3f6:	2300      	movs	r3, #0
 800a3f8:	9301      	str	r3, [sp, #4]
 800a3fa:	6963      	ldr	r3, [r4, #20]
 800a3fc:	9301      	str	r3, [sp, #4]
 800a3fe:	69a3      	ldr	r3, [r4, #24]
 800a400:	9301      	str	r3, [sp, #4]
 800a402:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a404:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a408:	f040 8088 	bne.w	800a51c <I2C_RequestMemoryWrite+0x16c>
 800a40c:	6963      	ldr	r3, [r4, #20]
 800a40e:	061a      	lsls	r2, r3, #24
 800a410:	d464      	bmi.n	800a4dc <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a412:	6963      	ldr	r3, [r4, #20]
 800a414:	055b      	lsls	r3, r3, #21
 800a416:	d5f9      	bpl.n	800a40c <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800a418:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a41a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a41e:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a420:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a422:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a424:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a428:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a42c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a42e:	f043 0304 	orr.w	r3, r3, #4
 800a432:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a434:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800a436:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a438:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a43a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a43e:	d066      	beq.n	800a50e <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800a440:	2001      	movs	r0, #1
 800a442:	e01f      	b.n	800a484 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a444:	6963      	ldr	r3, [r4, #20]
 800a446:	07d9      	lsls	r1, r3, #31
 800a448:	d4c8      	bmi.n	800a3dc <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a44a:	f7ff fdb1 	bl	8009fb0 <HAL_GetTick>
 800a44e:	eba0 000b 	sub.w	r0, r0, fp
 800a452:	4581      	cmp	r9, r0
 800a454:	d304      	bcc.n	800a460 <I2C_RequestMemoryWrite+0xb0>
 800a456:	f1b9 0f00 	cmp.w	r9, #0
 800a45a:	d001      	beq.n	800a460 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a45c:	6834      	ldr	r4, [r6, #0]
 800a45e:	e7b7      	b.n	800a3d0 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a460:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a462:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a464:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a466:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a46a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a46e:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a470:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a472:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a476:	f042 0220 	orr.w	r2, r2, #32
 800a47a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a47c:	680b      	ldr	r3, [r1, #0]
 800a47e:	05dc      	lsls	r4, r3, #23
 800a480:	d435      	bmi.n	800a4ee <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800a482:	2003      	movs	r0, #3
}
 800a484:	b003      	add	sp, #12
 800a486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a48a:	6963      	ldr	r3, [r4, #20]
 800a48c:	0798      	lsls	r0, r3, #30
 800a48e:	d4b2      	bmi.n	800a3f6 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a490:	6963      	ldr	r3, [r4, #20]
 800a492:	055a      	lsls	r2, r3, #21
 800a494:	d40a      	bmi.n	800a4ac <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a496:	f7ff fd8b 	bl	8009fb0 <HAL_GetTick>
 800a49a:	eba0 000b 	sub.w	r0, r0, fp
 800a49e:	4581      	cmp	r9, r0
 800a4a0:	d34e      	bcc.n	800a540 <I2C_RequestMemoryWrite+0x190>
 800a4a2:	f1b9 0f00 	cmp.w	r9, #0
 800a4a6:	d04b      	beq.n	800a540 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a4a8:	6834      	ldr	r4, [r6, #0]
 800a4aa:	e79a      	b.n	800a3e2 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4ac:	6823      	ldr	r3, [r4, #0]
 800a4ae:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a4b2:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a4b4:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a4b6:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a4ba:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a4bc:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a4be:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a4c0:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a4c4:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a4c8:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a4ca:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a4ce:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a4d2:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a4d4:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a4d6:	b003      	add	sp, #12
 800a4d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a4dc:	f1b8 0f01 	cmp.w	r8, #1
 800a4e0:	d109      	bne.n	800a4f6 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a4e2:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800a4e4:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a4e6:	6127      	str	r7, [r4, #16]
}
 800a4e8:	b003      	add	sp, #12
 800a4ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a4ee:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a4f2:	6433      	str	r3, [r6, #64]	; 0x40
 800a4f4:	e7c5      	b.n	800a482 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a4f6:	0a3b      	lsrs	r3, r7, #8
 800a4f8:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a4fa:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a4fe:	d12e      	bne.n	800a55e <I2C_RequestMemoryWrite+0x1ae>
 800a500:	6963      	ldr	r3, [r4, #20]
 800a502:	0619      	lsls	r1, r3, #24
 800a504:	d4ed      	bmi.n	800a4e2 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a506:	6963      	ldr	r3, [r4, #20]
 800a508:	055a      	lsls	r2, r3, #21
 800a50a:	d5f9      	bpl.n	800a500 <I2C_RequestMemoryWrite+0x150>
 800a50c:	e784      	b.n	800a418 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a50e:	6832      	ldr	r2, [r6, #0]
 800a510:	6813      	ldr	r3, [r2, #0]
 800a512:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a516:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a518:	6013      	str	r3, [r2, #0]
 800a51a:	e7b3      	b.n	800a484 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a51c:	6963      	ldr	r3, [r4, #20]
 800a51e:	061d      	lsls	r5, r3, #24
 800a520:	d4dc      	bmi.n	800a4dc <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a522:	6963      	ldr	r3, [r4, #20]
 800a524:	0559      	lsls	r1, r3, #21
 800a526:	f53f af77 	bmi.w	800a418 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a52a:	f7ff fd41 	bl	8009fb0 <HAL_GetTick>
 800a52e:	eba0 000b 	sub.w	r0, r0, fp
 800a532:	4581      	cmp	r9, r0
 800a534:	d325      	bcc.n	800a582 <I2C_RequestMemoryWrite+0x1d2>
 800a536:	f1b9 0f00 	cmp.w	r9, #0
 800a53a:	d022      	beq.n	800a582 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a53c:	6834      	ldr	r4, [r6, #0]
 800a53e:	e761      	b.n	800a404 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a540:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a542:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a544:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a546:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a54a:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a54e:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a550:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a554:	f043 0320 	orr.w	r3, r3, #32
 800a558:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800a55a:	2001      	movs	r0, #1
 800a55c:	e792      	b.n	800a484 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a55e:	6963      	ldr	r3, [r4, #20]
 800a560:	061b      	lsls	r3, r3, #24
 800a562:	d4be      	bmi.n	800a4e2 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a564:	6963      	ldr	r3, [r4, #20]
 800a566:	0558      	lsls	r0, r3, #21
 800a568:	f53f af56 	bmi.w	800a418 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a56c:	f7ff fd20 	bl	8009fb0 <HAL_GetTick>
 800a570:	eba0 000b 	sub.w	r0, r0, fp
 800a574:	4581      	cmp	r9, r0
 800a576:	d304      	bcc.n	800a582 <I2C_RequestMemoryWrite+0x1d2>
 800a578:	f1b9 0f00 	cmp.w	r9, #0
 800a57c:	d001      	beq.n	800a582 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a57e:	6834      	ldr	r4, [r6, #0]
 800a580:	e7bb      	b.n	800a4fa <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a582:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a584:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a586:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a588:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a58c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a590:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a592:	4313      	orrs	r3, r2
 800a594:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a596:	e74d      	b.n	800a434 <I2C_RequestMemoryWrite+0x84>

0800a598 <I2C_RequestMemoryRead>:
{
 800a598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a59c:	6804      	ldr	r4, [r0, #0]
{
 800a59e:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a5a0:	6823      	ldr	r3, [r4, #0]
 800a5a2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a5a6:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a5a8:	6823      	ldr	r3, [r4, #0]
{
 800a5aa:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a5ac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a5b0:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800a5b4:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a5b8:	6023      	str	r3, [r4, #0]
{
 800a5ba:	4606      	mov	r6, r0
 800a5bc:	468b      	mov	fp, r1
 800a5be:	4617      	mov	r7, r2
 800a5c0:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a5c4:	d13a      	bne.n	800a63c <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a5c6:	6965      	ldr	r5, [r4, #20]
 800a5c8:	07eb      	lsls	r3, r5, #31
 800a5ca:	d5fc      	bpl.n	800a5c6 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a5cc:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800a5d0:	6123      	str	r3, [r4, #16]
 800a5d2:	fa5f fb8b 	uxtb.w	fp, fp
 800a5d6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a5da:	d003      	beq.n	800a5e4 <I2C_RequestMemoryRead+0x4c>
 800a5dc:	e069      	b.n	800a6b2 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a5de:	6965      	ldr	r5, [r4, #20]
 800a5e0:	056a      	lsls	r2, r5, #21
 800a5e2:	d44e      	bmi.n	800a682 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a5e4:	6965      	ldr	r5, [r4, #20]
 800a5e6:	07a9      	lsls	r1, r5, #30
 800a5e8:	d5f9      	bpl.n	800a5de <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a5ea:	2300      	movs	r3, #0
 800a5ec:	9301      	str	r3, [sp, #4]
 800a5ee:	6963      	ldr	r3, [r4, #20]
 800a5f0:	9301      	str	r3, [sp, #4]
 800a5f2:	69a3      	ldr	r3, [r4, #24]
 800a5f4:	9301      	str	r3, [sp, #4]
 800a5f6:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a5f8:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a5fc:	f040 80bd 	bne.w	800a77a <I2C_RequestMemoryRead+0x1e2>
 800a600:	6963      	ldr	r3, [r4, #20]
 800a602:	0618      	lsls	r0, r3, #24
 800a604:	d468      	bmi.n	800a6d8 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a606:	6963      	ldr	r3, [r4, #20]
 800a608:	0559      	lsls	r1, r3, #21
 800a60a:	d5f9      	bpl.n	800a600 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a60c:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a60e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a612:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a614:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a616:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a618:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a61c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a620:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a622:	f043 0304 	orr.w	r3, r3, #4
 800a626:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a628:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a62a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a62c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a62e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a632:	d070      	beq.n	800a716 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800a634:	2001      	movs	r0, #1
}
 800a636:	b003      	add	sp, #12
 800a638:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a63c:	6963      	ldr	r3, [r4, #20]
 800a63e:	07dd      	lsls	r5, r3, #31
 800a640:	d4c4      	bmi.n	800a5cc <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a642:	f7ff fcb5 	bl	8009fb0 <HAL_GetTick>
 800a646:	eba0 0009 	sub.w	r0, r0, r9
 800a64a:	4582      	cmp	sl, r0
 800a64c:	d304      	bcc.n	800a658 <I2C_RequestMemoryRead+0xc0>
 800a64e:	f1ba 0f00 	cmp.w	sl, #0
 800a652:	d001      	beq.n	800a658 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a654:	6834      	ldr	r4, [r6, #0]
 800a656:	e7b3      	b.n	800a5c0 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a658:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a65a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a65c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a65e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a662:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a666:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a668:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a66a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a66e:	f042 0220 	orr.w	r2, r2, #32
 800a672:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a674:	680b      	ldr	r3, [r1, #0]
 800a676:	05dc      	lsls	r4, r3, #23
 800a678:	d43d      	bmi.n	800a6f6 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800a67a:	2003      	movs	r0, #3
}
 800a67c:	b003      	add	sp, #12
 800a67e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a682:	6823      	ldr	r3, [r4, #0]
 800a684:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a688:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a68a:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a68c:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a690:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a692:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a694:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a696:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a69a:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a69e:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a6a0:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a6a4:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a6a8:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a6aa:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a6ac:	b003      	add	sp, #12
 800a6ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a6b2:	6963      	ldr	r3, [r4, #20]
 800a6b4:	079b      	lsls	r3, r3, #30
 800a6b6:	d498      	bmi.n	800a5ea <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a6b8:	6963      	ldr	r3, [r4, #20]
 800a6ba:	0558      	lsls	r0, r3, #21
 800a6bc:	d4e1      	bmi.n	800a682 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a6be:	f7ff fc77 	bl	8009fb0 <HAL_GetTick>
 800a6c2:	eba0 0009 	sub.w	r0, r0, r9
 800a6c6:	4582      	cmp	sl, r0
 800a6c8:	f0c0 808f 	bcc.w	800a7ea <I2C_RequestMemoryRead+0x252>
 800a6cc:	f1ba 0f00 	cmp.w	sl, #0
 800a6d0:	f000 808b 	beq.w	800a7ea <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a6d4:	6834      	ldr	r4, [r6, #0]
 800a6d6:	e77e      	b.n	800a5d6 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a6d8:	f1b8 0f01 	cmp.w	r8, #1
 800a6dc:	d10f      	bne.n	800a6fe <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a6de:	b2ff      	uxtb	r7, r7
 800a6e0:	6127      	str	r7, [r4, #16]
 800a6e2:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a6e6:	d16e      	bne.n	800a7c6 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a6e8:	6963      	ldr	r3, [r4, #20]
 800a6ea:	061b      	lsls	r3, r3, #24
 800a6ec:	d41a      	bmi.n	800a724 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a6ee:	6963      	ldr	r3, [r4, #20]
 800a6f0:	055f      	lsls	r7, r3, #21
 800a6f2:	d5f9      	bpl.n	800a6e8 <I2C_RequestMemoryRead+0x150>
 800a6f4:	e78a      	b.n	800a60c <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a6f6:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a6fa:	6433      	str	r3, [r6, #64]	; 0x40
 800a6fc:	e7bd      	b.n	800a67a <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a6fe:	0a3b      	lsrs	r3, r7, #8
 800a700:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a702:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a706:	d17e      	bne.n	800a806 <I2C_RequestMemoryRead+0x26e>
 800a708:	6963      	ldr	r3, [r4, #20]
 800a70a:	061d      	lsls	r5, r3, #24
 800a70c:	d4e7      	bmi.n	800a6de <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a70e:	6963      	ldr	r3, [r4, #20]
 800a710:	0558      	lsls	r0, r3, #21
 800a712:	d5f9      	bpl.n	800a708 <I2C_RequestMemoryRead+0x170>
 800a714:	e77a      	b.n	800a60c <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a716:	6832      	ldr	r2, [r6, #0]
 800a718:	6813      	ldr	r3, [r2, #0]
 800a71a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800a71e:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a720:	6013      	str	r3, [r2, #0]
 800a722:	e7ab      	b.n	800a67c <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a724:	6823      	ldr	r3, [r4, #0]
 800a726:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a72a:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a72c:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a730:	d113      	bne.n	800a75a <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a732:	6963      	ldr	r3, [r4, #20]
 800a734:	07d8      	lsls	r0, r3, #31
 800a736:	d5fc      	bpl.n	800a732 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800a738:	f04b 0301 	orr.w	r3, fp, #1
 800a73c:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a73e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a742:	d003      	beq.n	800a74c <I2C_RequestMemoryRead+0x1b4>
 800a744:	e02b      	b.n	800a79e <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a746:	6963      	ldr	r3, [r4, #20]
 800a748:	055b      	lsls	r3, r3, #21
 800a74a:	d49a      	bmi.n	800a682 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a74c:	6963      	ldr	r3, [r4, #20]
 800a74e:	43db      	mvns	r3, r3
 800a750:	f013 0302 	ands.w	r3, r3, #2
 800a754:	d1f7      	bne.n	800a746 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800a756:	4618      	mov	r0, r3
 800a758:	e790      	b.n	800a67c <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a75a:	6963      	ldr	r3, [r4, #20]
 800a75c:	07d9      	lsls	r1, r3, #31
 800a75e:	d4eb      	bmi.n	800a738 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a760:	f7ff fc26 	bl	8009fb0 <HAL_GetTick>
 800a764:	eba0 0009 	sub.w	r0, r0, r9
 800a768:	4582      	cmp	sl, r0
 800a76a:	f4ff af75 	bcc.w	800a658 <I2C_RequestMemoryRead+0xc0>
 800a76e:	f1ba 0f00 	cmp.w	sl, #0
 800a772:	f43f af71 	beq.w	800a658 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a776:	6834      	ldr	r4, [r6, #0]
 800a778:	e7d8      	b.n	800a72c <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a77a:	6963      	ldr	r3, [r4, #20]
 800a77c:	061a      	lsls	r2, r3, #24
 800a77e:	d4ab      	bmi.n	800a6d8 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a780:	6963      	ldr	r3, [r4, #20]
 800a782:	055d      	lsls	r5, r3, #21
 800a784:	f53f af42 	bmi.w	800a60c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a788:	f7ff fc12 	bl	8009fb0 <HAL_GetTick>
 800a78c:	eba0 0009 	sub.w	r0, r0, r9
 800a790:	4582      	cmp	sl, r0
 800a792:	d34b      	bcc.n	800a82c <I2C_RequestMemoryRead+0x294>
 800a794:	f1ba 0f00 	cmp.w	sl, #0
 800a798:	d048      	beq.n	800a82c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a79a:	6834      	ldr	r4, [r6, #0]
 800a79c:	e72c      	b.n	800a5f8 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a79e:	6963      	ldr	r3, [r4, #20]
 800a7a0:	43db      	mvns	r3, r3
 800a7a2:	f013 0302 	ands.w	r3, r3, #2
 800a7a6:	d0d6      	beq.n	800a756 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a7a8:	6963      	ldr	r3, [r4, #20]
 800a7aa:	055a      	lsls	r2, r3, #21
 800a7ac:	f53f af69 	bmi.w	800a682 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a7b0:	f7ff fbfe 	bl	8009fb0 <HAL_GetTick>
 800a7b4:	eba0 0009 	sub.w	r0, r0, r9
 800a7b8:	4582      	cmp	sl, r0
 800a7ba:	d316      	bcc.n	800a7ea <I2C_RequestMemoryRead+0x252>
 800a7bc:	f1ba 0f00 	cmp.w	sl, #0
 800a7c0:	d013      	beq.n	800a7ea <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a7c2:	6834      	ldr	r4, [r6, #0]
 800a7c4:	e7bb      	b.n	800a73e <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a7c6:	6963      	ldr	r3, [r4, #20]
 800a7c8:	061d      	lsls	r5, r3, #24
 800a7ca:	d4ab      	bmi.n	800a724 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a7cc:	6963      	ldr	r3, [r4, #20]
 800a7ce:	055a      	lsls	r2, r3, #21
 800a7d0:	f53f af1c 	bmi.w	800a60c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a7d4:	f7ff fbec 	bl	8009fb0 <HAL_GetTick>
 800a7d8:	eba0 0009 	sub.w	r0, r0, r9
 800a7dc:	4582      	cmp	sl, r0
 800a7de:	d325      	bcc.n	800a82c <I2C_RequestMemoryRead+0x294>
 800a7e0:	f1ba 0f00 	cmp.w	sl, #0
 800a7e4:	d022      	beq.n	800a82c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a7e6:	6834      	ldr	r4, [r6, #0]
 800a7e8:	e77b      	b.n	800a6e2 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a7ea:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a7ec:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a7ee:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a7f0:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a7f4:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a7f8:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a7fa:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a7fe:	f043 0320 	orr.w	r3, r3, #32
 800a802:	6433      	str	r3, [r6, #64]	; 0x40
 800a804:	e716      	b.n	800a634 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a806:	6963      	ldr	r3, [r4, #20]
 800a808:	0619      	lsls	r1, r3, #24
 800a80a:	f53f af68 	bmi.w	800a6de <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a80e:	6963      	ldr	r3, [r4, #20]
 800a810:	055b      	lsls	r3, r3, #21
 800a812:	f53f aefb 	bmi.w	800a60c <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a816:	f7ff fbcb 	bl	8009fb0 <HAL_GetTick>
 800a81a:	eba0 0009 	sub.w	r0, r0, r9
 800a81e:	4582      	cmp	sl, r0
 800a820:	d304      	bcc.n	800a82c <I2C_RequestMemoryRead+0x294>
 800a822:	f1ba 0f00 	cmp.w	sl, #0
 800a826:	d001      	beq.n	800a82c <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a828:	6834      	ldr	r4, [r6, #0]
 800a82a:	e76a      	b.n	800a702 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a82c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a82e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a830:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a832:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a836:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a83a:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a83c:	4313      	orrs	r3, r2
 800a83e:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a840:	e6f2      	b.n	800a628 <I2C_RequestMemoryRead+0x90>
 800a842:	bf00      	nop

0800a844 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800a844:	2800      	cmp	r0, #0
 800a846:	f000 80b9 	beq.w	800a9bc <HAL_I2C_Init+0x178>
{
 800a84a:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800a84c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a850:	4604      	mov	r4, r0
 800a852:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a856:	2b00      	cmp	r3, #0
 800a858:	f000 8098 	beq.w	800a98c <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800a85c:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800a85e:	2224      	movs	r2, #36	; 0x24
 800a860:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800a864:	681a      	ldr	r2, [r3, #0]
 800a866:	f022 0201 	bic.w	r2, r2, #1
 800a86a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800a86c:	681a      	ldr	r2, [r3, #0]
 800a86e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a872:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800a874:	681a      	ldr	r2, [r3, #0]
 800a876:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a87a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800a87c:	f001 fe70 	bl	800c560 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a880:	6865      	ldr	r5, [r4, #4]
 800a882:	4b4f      	ldr	r3, [pc, #316]	; (800a9c0 <HAL_I2C_Init+0x17c>)
 800a884:	429d      	cmp	r5, r3
 800a886:	d84f      	bhi.n	800a928 <HAL_I2C_Init+0xe4>
 800a888:	4b4e      	ldr	r3, [pc, #312]	; (800a9c4 <HAL_I2C_Init+0x180>)
 800a88a:	4298      	cmp	r0, r3
 800a88c:	d97c      	bls.n	800a988 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800a88e:	4b4e      	ldr	r3, [pc, #312]	; (800a9c8 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a890:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800a892:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a896:	1e43      	subs	r3, r0, #1
 800a898:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a89c:	6822      	ldr	r2, [r4, #0]
 800a89e:	6851      	ldr	r1, [r2, #4]
 800a8a0:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a8a4:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800a8a8:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a8aa:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800a8ac:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a8b0:	f10c 0c01 	add.w	ip, ip, #1
 800a8b4:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a8b8:	ea41 010c 	orr.w	r1, r1, ip
 800a8bc:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a8be:	69d1      	ldr	r1, [r2, #28]
 800a8c0:	f640 70fc 	movw	r0, #4092	; 0xffc
 800a8c4:	3301      	adds	r3, #1
 800a8c6:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a8ca:	4203      	tst	r3, r0
 800a8cc:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a8d0:	d161      	bne.n	800a996 <HAL_I2C_Init+0x152>
 800a8d2:	2304      	movs	r3, #4
 800a8d4:	430b      	orrs	r3, r1
 800a8d6:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800a8d8:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800a8dc:	6811      	ldr	r1, [r2, #0]
 800a8de:	4303      	orrs	r3, r0
 800a8e0:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800a8e4:	430b      	orrs	r3, r1
 800a8e6:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800a8e8:	6891      	ldr	r1, [r2, #8]
 800a8ea:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800a8ee:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800a8f2:	4303      	orrs	r3, r0
 800a8f4:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a8f8:	430b      	orrs	r3, r1
 800a8fa:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800a8fc:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800a900:	68d1      	ldr	r1, [r2, #12]
 800a902:	4303      	orrs	r3, r0
 800a904:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a908:	430b      	orrs	r3, r1
 800a90a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800a90c:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a90e:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800a910:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800a914:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800a916:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a918:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800a91a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800a91e:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800a920:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800a924:	4618      	mov	r0, r3
}
 800a926:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a928:	4b28      	ldr	r3, [pc, #160]	; (800a9cc <HAL_I2C_Init+0x188>)
 800a92a:	4298      	cmp	r0, r3
 800a92c:	d92c      	bls.n	800a988 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a92e:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800a930:	4b25      	ldr	r3, [pc, #148]	; (800a9c8 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a932:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a934:	4e26      	ldr	r6, [pc, #152]	; (800a9d0 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800a936:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a93a:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a93e:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800a942:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800a944:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a948:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800a94c:	fb01 f303 	mul.w	r3, r1, r3
 800a950:	fba6 6303 	umull	r6, r3, r6, r3
 800a954:	6a11      	ldr	r1, [r2, #32]
 800a956:	099b      	lsrs	r3, r3, #6
 800a958:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a95c:	3301      	adds	r3, #1
 800a95e:	430b      	orrs	r3, r1
 800a960:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a962:	69d1      	ldr	r1, [r2, #28]
 800a964:	68a3      	ldr	r3, [r4, #8]
 800a966:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a96a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a96e:	b9ab      	cbnz	r3, 800a99c <HAL_I2C_Init+0x158>
 800a970:	1e43      	subs	r3, r0, #1
 800a972:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800a976:	fbb3 f3f5 	udiv	r3, r3, r5
 800a97a:	3301      	adds	r3, #1
 800a97c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a980:	b1d3      	cbz	r3, 800a9b8 <HAL_I2C_Init+0x174>
 800a982:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800a986:	e7a5      	b.n	800a8d4 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a988:	2001      	movs	r0, #1
}
 800a98a:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800a98c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800a990:	f7f7 f93c 	bl	8001c0c <HAL_I2C_MspInit>
 800a994:	e762      	b.n	800a85c <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a996:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a99a:	e79b      	b.n	800a8d4 <HAL_I2C_Init+0x90>
 800a99c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a9a0:	1e43      	subs	r3, r0, #1
 800a9a2:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a9a6:	fbb3 f3f5 	udiv	r3, r3, r5
 800a9aa:	3301      	adds	r3, #1
 800a9ac:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a9b0:	b113      	cbz	r3, 800a9b8 <HAL_I2C_Init+0x174>
 800a9b2:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800a9b6:	e78d      	b.n	800a8d4 <HAL_I2C_Init+0x90>
 800a9b8:	2301      	movs	r3, #1
 800a9ba:	e78b      	b.n	800a8d4 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a9bc:	2001      	movs	r0, #1
}
 800a9be:	4770      	bx	lr
 800a9c0:	000186a0 	.word	0x000186a0
 800a9c4:	001e847f 	.word	0x001e847f
 800a9c8:	431bde83 	.word	0x431bde83
 800a9cc:	003d08ff 	.word	0x003d08ff
 800a9d0:	10624dd3 	.word	0x10624dd3

0800a9d4 <HAL_I2C_Mem_Write>:
{
 800a9d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a9d8:	4604      	mov	r4, r0
 800a9da:	b083      	sub	sp, #12
 800a9dc:	4699      	mov	r9, r3
 800a9de:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800a9e2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800a9e4:	460f      	mov	r7, r1
 800a9e6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a9e8:	f7ff fae2 	bl	8009fb0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a9ec:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a9f0:	2b20      	cmp	r3, #32
 800a9f2:	d004      	beq.n	800a9fe <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800a9f4:	2702      	movs	r7, #2
}
 800a9f6:	4638      	mov	r0, r7
 800a9f8:	b003      	add	sp, #12
 800a9fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a9fe:	4605      	mov	r5, r0
 800aa00:	e005      	b.n	800aa0e <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aa02:	f7ff fad5 	bl	8009fb0 <HAL_GetTick>
 800aa06:	1b40      	subs	r0, r0, r5
 800aa08:	2819      	cmp	r0, #25
 800aa0a:	f200 80a8 	bhi.w	800ab5e <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aa0e:	6820      	ldr	r0, [r4, #0]
 800aa10:	6983      	ldr	r3, [r0, #24]
 800aa12:	ea6f 0c03 	mvn.w	ip, r3
 800aa16:	f01c 0b02 	ands.w	fp, ip, #2
 800aa1a:	d0f2      	beq.n	800aa02 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800aa1c:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800aa20:	2b01      	cmp	r3, #1
 800aa22:	d0e7      	beq.n	800a9f4 <HAL_I2C_Mem_Write+0x20>
 800aa24:	2301      	movs	r3, #1
 800aa26:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800aa2a:	6803      	ldr	r3, [r0, #0]
 800aa2c:	07db      	lsls	r3, r3, #31
 800aa2e:	d572      	bpl.n	800ab16 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800aa30:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800aa32:	6807      	ldr	r7, [r0, #0]
 800aa34:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800aa38:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800aa3a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800aa3c:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800aa3e:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800aa40:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800aa44:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800aa48:	2040      	movs	r0, #64	; 0x40
 800aa4a:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800aa4e:	2000      	movs	r0, #0
 800aa50:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800aa52:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800aa56:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800aa58:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800aa5a:	4856      	ldr	r0, [pc, #344]	; (800abb4 <HAL_I2C_Mem_Write+0x1e0>)
 800aa5c:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800aa5e:	464b      	mov	r3, r9
 800aa60:	4642      	mov	r2, r8
 800aa62:	4620      	mov	r0, r4
 800aa64:	f7ff fca4 	bl	800a3b0 <I2C_RequestMemoryWrite>
 800aa68:	4607      	mov	r7, r0
 800aa6a:	bb00      	cbnz	r0, 800aaae <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800aa6c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800aa6e:	2b00      	cmp	r3, #0
 800aa70:	f000 809e 	beq.w	800abb0 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800aa74:	6823      	ldr	r3, [r4, #0]
 800aa76:	1c72      	adds	r2, r6, #1
 800aa78:	d159      	bne.n	800ab2e <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800aa7a:	695a      	ldr	r2, [r3, #20]
 800aa7c:	0610      	lsls	r0, r2, #24
 800aa7e:	d41b      	bmi.n	800aab8 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800aa80:	695a      	ldr	r2, [r3, #20]
 800aa82:	0551      	lsls	r1, r2, #21
 800aa84:	d5f9      	bpl.n	800aa7a <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800aa86:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800aa88:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800aa8c:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800aa8e:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800aa90:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800aa92:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800aa96:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800aa9a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800aa9c:	f043 0304 	orr.w	r3, r3, #4
 800aaa0:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800aaa2:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800aaa4:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800aaa6:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800aaa8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800aaac:	d038      	beq.n	800ab20 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800aaae:	2701      	movs	r7, #1
}
 800aab0:	4638      	mov	r0, r7
 800aab2:	b003      	add	sp, #12
 800aab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800aab8:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800aabc:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800aac0:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800aac2:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800aac6:	f811 2b01 	ldrb.w	r2, [r1], #1
 800aaca:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800aacc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800aace:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800aad0:	3a01      	subs	r2, #1
 800aad2:	b292      	uxth	r2, r2
 800aad4:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800aad6:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800aad8:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800aada:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800aadc:	0740      	lsls	r0, r0, #29
 800aade:	d517      	bpl.n	800ab10 <HAL_I2C_Mem_Write+0x13c>
 800aae0:	b942      	cbnz	r2, 800aaf4 <HAL_I2C_Mem_Write+0x120>
 800aae2:	1c72      	adds	r2, r6, #1
 800aae4:	d156      	bne.n	800ab94 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800aae6:	695a      	ldr	r2, [r3, #20]
 800aae8:	0750      	lsls	r0, r2, #29
 800aaea:	d446      	bmi.n	800ab7a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800aaec:	695a      	ldr	r2, [r3, #20]
 800aaee:	0551      	lsls	r1, r2, #21
 800aaf0:	d5f9      	bpl.n	800aae6 <HAL_I2C_Mem_Write+0x112>
 800aaf2:	e7c8      	b.n	800aa86 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800aaf4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800aaf8:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800aafa:	f10c 0102 	add.w	r1, ip, #2
 800aafe:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ab00:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800ab02:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800ab06:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800ab08:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800ab0a:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800ab0c:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800ab0e:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800ab10:	2a00      	cmp	r2, #0
 800ab12:	d1b0      	bne.n	800aa76 <HAL_I2C_Mem_Write+0xa2>
 800ab14:	e7e5      	b.n	800aae2 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800ab16:	6803      	ldr	r3, [r0, #0]
 800ab18:	f043 0301 	orr.w	r3, r3, #1
 800ab1c:	6003      	str	r3, [r0, #0]
 800ab1e:	e787      	b.n	800aa30 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab20:	6822      	ldr	r2, [r4, #0]
 800ab22:	6813      	ldr	r3, [r2, #0]
 800ab24:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800ab28:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab2a:	6013      	str	r3, [r2, #0]
 800ab2c:	e763      	b.n	800a9f6 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800ab2e:	695a      	ldr	r2, [r3, #20]
 800ab30:	0612      	lsls	r2, r2, #24
 800ab32:	d4c1      	bmi.n	800aab8 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ab34:	695a      	ldr	r2, [r3, #20]
 800ab36:	0551      	lsls	r1, r2, #21
 800ab38:	d4a5      	bmi.n	800aa86 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab3a:	f7ff fa39 	bl	8009fb0 <HAL_GetTick>
 800ab3e:	1b40      	subs	r0, r0, r5
 800ab40:	4286      	cmp	r6, r0
 800ab42:	d301      	bcc.n	800ab48 <HAL_I2C_Mem_Write+0x174>
 800ab44:	2e00      	cmp	r6, #0
 800ab46:	d195      	bne.n	800aa74 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ab48:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab4a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ab4c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab4e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ab52:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab56:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ab58:	4313      	orrs	r3, r2
 800ab5a:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800ab5c:	e7a1      	b.n	800aaa2 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab5e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ab60:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab64:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ab68:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab6c:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ab6e:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab72:	f043 0320 	orr.w	r3, r3, #32
 800ab76:	6423      	str	r3, [r4, #64]	; 0x40
 800ab78:	e73c      	b.n	800a9f4 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab7a:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab7c:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab7e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800ab82:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab84:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ab86:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800ab8a:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab8e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800ab92:	e730      	b.n	800a9f6 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800ab94:	695a      	ldr	r2, [r3, #20]
 800ab96:	0752      	lsls	r2, r2, #29
 800ab98:	d4ef      	bmi.n	800ab7a <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ab9a:	695a      	ldr	r2, [r3, #20]
 800ab9c:	0551      	lsls	r1, r2, #21
 800ab9e:	f53f af72 	bmi.w	800aa86 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aba2:	f7ff fa05 	bl	8009fb0 <HAL_GetTick>
 800aba6:	1b40      	subs	r0, r0, r5
 800aba8:	4286      	cmp	r6, r0
 800abaa:	d3cd      	bcc.n	800ab48 <HAL_I2C_Mem_Write+0x174>
 800abac:	2e00      	cmp	r6, #0
 800abae:	d0cb      	beq.n	800ab48 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800abb0:	6823      	ldr	r3, [r4, #0]
 800abb2:	e796      	b.n	800aae2 <HAL_I2C_Mem_Write+0x10e>
 800abb4:	ffff0000 	.word	0xffff0000

0800abb8 <HAL_I2C_Mem_Read>:
{
 800abb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800abbc:	4604      	mov	r4, r0
 800abbe:	b087      	sub	sp, #28
 800abc0:	4699      	mov	r9, r3
 800abc2:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800abc6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800abc8:	460f      	mov	r7, r1
 800abca:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800abcc:	f7ff f9f0 	bl	8009fb0 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800abd0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800abd4:	2b20      	cmp	r3, #32
 800abd6:	d004      	beq.n	800abe2 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800abd8:	2702      	movs	r7, #2
}
 800abda:	4638      	mov	r0, r7
 800abdc:	b007      	add	sp, #28
 800abde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800abe2:	4606      	mov	r6, r0
 800abe4:	e005      	b.n	800abf2 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800abe6:	f7ff f9e3 	bl	8009fb0 <HAL_GetTick>
 800abea:	1b80      	subs	r0, r0, r6
 800abec:	2819      	cmp	r0, #25
 800abee:	f200 80d2 	bhi.w	800ad96 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800abf2:	f8d4 c000 	ldr.w	ip, [r4]
 800abf6:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800abfa:	43c0      	mvns	r0, r0
 800abfc:	f010 0b02 	ands.w	fp, r0, #2
 800ac00:	d0f1      	beq.n	800abe6 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800ac02:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800ac06:	2b01      	cmp	r3, #1
 800ac08:	d0e6      	beq.n	800abd8 <HAL_I2C_Mem_Read+0x20>
 800ac0a:	2301      	movs	r3, #1
 800ac0c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800ac10:	f8dc 3000 	ldr.w	r3, [ip]
 800ac14:	07d9      	lsls	r1, r3, #31
 800ac16:	d537      	bpl.n	800ac88 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800ac18:	f8dc 0000 	ldr.w	r0, [ip]
 800ac1c:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800ac20:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800ac24:	9810      	ldr	r0, [sp, #64]	; 0x40
 800ac26:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800ac28:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800ac2a:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800ac2e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800ac32:	2040      	movs	r0, #64	; 0x40
 800ac34:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800ac38:	2000      	movs	r0, #0
 800ac3a:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800ac3c:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800ac40:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800ac42:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800ac44:	4893      	ldr	r0, [pc, #588]	; (800ae94 <HAL_I2C_Mem_Read+0x2dc>)
 800ac46:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800ac48:	4639      	mov	r1, r7
 800ac4a:	464b      	mov	r3, r9
 800ac4c:	4642      	mov	r2, r8
 800ac4e:	4620      	mov	r0, r4
 800ac50:	f7ff fca2 	bl	800a598 <I2C_RequestMemoryRead>
 800ac54:	4607      	mov	r7, r0
 800ac56:	2800      	cmp	r0, #0
 800ac58:	f040 80ab 	bne.w	800adb2 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800ac5c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800ac5e:	b9d2      	cbnz	r2, 800ac96 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac60:	6823      	ldr	r3, [r4, #0]
 800ac62:	9002      	str	r0, [sp, #8]
 800ac64:	695a      	ldr	r2, [r3, #20]
 800ac66:	9202      	str	r2, [sp, #8]
 800ac68:	699a      	ldr	r2, [r3, #24]
 800ac6a:	9202      	str	r2, [sp, #8]
 800ac6c:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac6e:	681a      	ldr	r2, [r3, #0]
 800ac70:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ac74:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac76:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800ac78:	2220      	movs	r2, #32
 800ac7a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800ac7e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac82:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800ac86:	e7a8      	b.n	800abda <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800ac88:	f8dc 3000 	ldr.w	r3, [ip]
 800ac8c:	f043 0301 	orr.w	r3, r3, #1
 800ac90:	f8cc 3000 	str.w	r3, [ip]
 800ac94:	e7c0      	b.n	800ac18 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800ac96:	2a01      	cmp	r2, #1
 800ac98:	f000 812c 	beq.w	800aef4 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800ac9c:	2a02      	cmp	r2, #2
 800ac9e:	f000 80bd 	beq.w	800ae1c <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aca2:	6823      	ldr	r3, [r4, #0]
 800aca4:	9005      	str	r0, [sp, #20]
 800aca6:	6959      	ldr	r1, [r3, #20]
 800aca8:	9105      	str	r1, [sp, #20]
 800acaa:	6999      	ldr	r1, [r3, #24]
 800acac:	9105      	str	r1, [sp, #20]
 800acae:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800acb0:	2a03      	cmp	r2, #3
 800acb2:	d849      	bhi.n	800ad48 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800acb4:	2a01      	cmp	r2, #1
 800acb6:	f000 80eb 	beq.w	800ae90 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800acba:	2a02      	cmp	r2, #2
 800acbc:	f000 8089 	beq.w	800add2 <HAL_I2C_Mem_Read+0x21a>
 800acc0:	1c69      	adds	r1, r5, #1
 800acc2:	f040 80bb 	bne.w	800ae3c <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800acc6:	695a      	ldr	r2, [r3, #20]
 800acc8:	0752      	lsls	r2, r2, #29
 800acca:	d5fc      	bpl.n	800acc6 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800accc:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800acce:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800acd0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800acd4:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800acd6:	691b      	ldr	r3, [r3, #16]
 800acd8:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800acda:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800acdc:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800acde:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ace0:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800ace2:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800ace4:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800ace6:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800ace8:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800acea:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800acec:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800acee:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800acf0:	6822      	ldr	r2, [r4, #0]
 800acf2:	f040 80af 	bne.w	800ae54 <HAL_I2C_Mem_Read+0x29c>
 800acf6:	6953      	ldr	r3, [r2, #20]
 800acf8:	075b      	lsls	r3, r3, #29
 800acfa:	d5fc      	bpl.n	800acf6 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800acfc:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800acfe:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad00:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800ad04:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad06:	6913      	ldr	r3, [r2, #16]
 800ad08:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800ad0a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800ad0c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800ad0e:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad10:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800ad12:	3b01      	subs	r3, #1
 800ad14:	b29b      	uxth	r3, r3
 800ad16:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad18:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800ad1a:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800ad1c:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800ad20:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800ad22:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad26:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800ad28:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ad2a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800ad2c:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ad2e:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800ad30:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800ad32:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800ad34:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800ad36:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800ad38:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ad3a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ad3c:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800ad3e:	2a00      	cmp	r2, #0
 800ad40:	d099      	beq.n	800ac76 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800ad42:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ad44:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800ad46:	d9b5      	bls.n	800acb4 <HAL_I2C_Mem_Read+0xfc>
 800ad48:	b95d      	cbnz	r5, 800ad62 <HAL_I2C_Mem_Read+0x1aa>
 800ad4a:	e0c5      	b.n	800aed8 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ad4c:	695a      	ldr	r2, [r3, #20]
 800ad4e:	06d0      	lsls	r0, r2, #27
 800ad50:	f100 80b2 	bmi.w	800aeb8 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ad54:	f7ff f92c 	bl	8009fb0 <HAL_GetTick>
 800ad58:	1b80      	subs	r0, r0, r6
 800ad5a:	4285      	cmp	r5, r0
 800ad5c:	f0c0 8086 	bcc.w	800ae6c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ad60:	6823      	ldr	r3, [r4, #0]
 800ad62:	695a      	ldr	r2, [r3, #20]
 800ad64:	0652      	lsls	r2, r2, #25
 800ad66:	d5f1      	bpl.n	800ad4c <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad68:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ad6a:	691b      	ldr	r3, [r3, #16]
 800ad6c:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800ad6e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ad70:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800ad72:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ad74:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ad76:	3b01      	subs	r3, #1
 800ad78:	b29b      	uxth	r3, r3
 800ad7a:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ad7c:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800ad7e:	3a01      	subs	r2, #1
 800ad80:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800ad82:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ad86:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800ad88:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ad8a:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ad8e:	d5d6      	bpl.n	800ad3e <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad90:	6903      	ldr	r3, [r0, #16]
 800ad92:	704b      	strb	r3, [r1, #1]
 800ad94:	e036      	b.n	800ae04 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800ad96:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ad98:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ad9c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ada0:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ada4:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ada6:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800adaa:	f043 0320 	orr.w	r3, r3, #32
 800adae:	6423      	str	r3, [r4, #64]	; 0x40
 800adb0:	e712      	b.n	800abd8 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800adb2:	2701      	movs	r7, #1
}
 800adb4:	4638      	mov	r0, r7
 800adb6:	b007      	add	sp, #28
 800adb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800adbc:	695a      	ldr	r2, [r3, #20]
 800adbe:	0750      	lsls	r0, r2, #29
 800adc0:	d40c      	bmi.n	800addc <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800adc2:	f7ff f8f5 	bl	8009fb0 <HAL_GetTick>
 800adc6:	1b80      	subs	r0, r0, r6
 800adc8:	4285      	cmp	r5, r0
 800adca:	d34f      	bcc.n	800ae6c <HAL_I2C_Mem_Read+0x2b4>
 800adcc:	2d00      	cmp	r5, #0
 800adce:	d04d      	beq.n	800ae6c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800add0:	6823      	ldr	r3, [r4, #0]
 800add2:	1c69      	adds	r1, r5, #1
 800add4:	d1f2      	bne.n	800adbc <HAL_I2C_Mem_Read+0x204>
 800add6:	695a      	ldr	r2, [r3, #20]
 800add8:	0752      	lsls	r2, r2, #29
 800adda:	d5fc      	bpl.n	800add6 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800addc:	681a      	ldr	r2, [r3, #0]
 800adde:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ade2:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ade4:	691a      	ldr	r2, [r3, #16]
 800ade6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ade8:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800adea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800adec:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800adee:	3b01      	subs	r3, #1
 800adf0:	b29b      	uxth	r3, r3
 800adf2:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800adf4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800adf6:	3b01      	subs	r3, #1
 800adf8:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800adfa:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800adfc:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800adfe:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800ae00:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae02:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800ae04:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ae06:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800ae08:	3301      	adds	r3, #1
 800ae0a:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800ae0c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800ae0e:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800ae10:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800ae12:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800ae14:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800ae16:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ae18:	8563      	strh	r3, [r4, #42]	; 0x2a
 800ae1a:	e790      	b.n	800ad3e <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae1c:	6823      	ldr	r3, [r4, #0]
 800ae1e:	6819      	ldr	r1, [r3, #0]
 800ae20:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800ae24:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800ae26:	6819      	ldr	r1, [r3, #0]
 800ae28:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800ae2c:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ae2e:	9004      	str	r0, [sp, #16]
 800ae30:	6959      	ldr	r1, [r3, #20]
 800ae32:	9104      	str	r1, [sp, #16]
 800ae34:	6999      	ldr	r1, [r3, #24]
 800ae36:	9104      	str	r1, [sp, #16]
 800ae38:	9904      	ldr	r1, [sp, #16]
 800ae3a:	e739      	b.n	800acb0 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ae3c:	695a      	ldr	r2, [r3, #20]
 800ae3e:	0750      	lsls	r0, r2, #29
 800ae40:	f53f af44 	bmi.w	800accc <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ae44:	f7ff f8b4 	bl	8009fb0 <HAL_GetTick>
 800ae48:	1b80      	subs	r0, r0, r6
 800ae4a:	4285      	cmp	r5, r0
 800ae4c:	d30e      	bcc.n	800ae6c <HAL_I2C_Mem_Read+0x2b4>
 800ae4e:	b16d      	cbz	r5, 800ae6c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ae50:	6823      	ldr	r3, [r4, #0]
 800ae52:	e735      	b.n	800acc0 <HAL_I2C_Mem_Read+0x108>
 800ae54:	6953      	ldr	r3, [r2, #20]
 800ae56:	0758      	lsls	r0, r3, #29
 800ae58:	f53f af50 	bmi.w	800acfc <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ae5c:	f7ff f8a8 	bl	8009fb0 <HAL_GetTick>
 800ae60:	1b80      	subs	r0, r0, r6
 800ae62:	4285      	cmp	r5, r0
 800ae64:	d302      	bcc.n	800ae6c <HAL_I2C_Mem_Read+0x2b4>
 800ae66:	2d00      	cmp	r5, #0
 800ae68:	f47f af41 	bne.w	800acee <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ae6c:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800ae6e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ae70:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ae72:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ae76:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ae7a:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ae7c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ae80:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ae82:	f043 0320 	orr.w	r3, r3, #32
}
 800ae86:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ae88:	6423      	str	r3, [r4, #64]	; 0x40
}
 800ae8a:	b007      	add	sp, #28
 800ae8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae90:	b95d      	cbnz	r5, 800aeaa <HAL_I2C_Mem_Read+0x2f2>
 800ae92:	e02b      	b.n	800aeec <HAL_I2C_Mem_Read+0x334>
 800ae94:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ae98:	695a      	ldr	r2, [r3, #20]
 800ae9a:	06d2      	lsls	r2, r2, #27
 800ae9c:	d40c      	bmi.n	800aeb8 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ae9e:	f7ff f887 	bl	8009fb0 <HAL_GetTick>
 800aea2:	1b80      	subs	r0, r0, r6
 800aea4:	4285      	cmp	r5, r0
 800aea6:	d3e1      	bcc.n	800ae6c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800aea8:	6823      	ldr	r3, [r4, #0]
 800aeaa:	695a      	ldr	r2, [r3, #20]
 800aeac:	0651      	lsls	r1, r2, #25
 800aeae:	d5f3      	bpl.n	800ae98 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aeb0:	691a      	ldr	r2, [r3, #16]
 800aeb2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800aeb4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800aeb6:	e7a5      	b.n	800ae04 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800aeb8:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800aeba:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800aebe:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800aec0:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800aec2:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800aec4:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800aec8:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800aecc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800aece:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800aed0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800aed4:	2701      	movs	r7, #1
 800aed6:	e680      	b.n	800abda <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800aed8:	695a      	ldr	r2, [r3, #20]
 800aeda:	0652      	lsls	r2, r2, #25
 800aedc:	f53f af44 	bmi.w	800ad68 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800aee0:	695a      	ldr	r2, [r3, #20]
 800aee2:	06d1      	lsls	r1, r2, #27
 800aee4:	d4e8      	bmi.n	800aeb8 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aee6:	f7ff f863 	bl	8009fb0 <HAL_GetTick>
 800aeea:	e7bf      	b.n	800ae6c <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800aeec:	695a      	ldr	r2, [r3, #20]
 800aeee:	0650      	lsls	r0, r2, #25
 800aef0:	d5f6      	bpl.n	800aee0 <HAL_I2C_Mem_Read+0x328>
 800aef2:	e7dd      	b.n	800aeb0 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aef4:	6823      	ldr	r3, [r4, #0]
 800aef6:	6819      	ldr	r1, [r3, #0]
 800aef8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800aefc:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aefe:	9003      	str	r0, [sp, #12]
 800af00:	6959      	ldr	r1, [r3, #20]
 800af02:	9103      	str	r1, [sp, #12]
 800af04:	6999      	ldr	r1, [r3, #24]
 800af06:	9103      	str	r1, [sp, #12]
 800af08:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af0a:	6819      	ldr	r1, [r3, #0]
 800af0c:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800af10:	6019      	str	r1, [r3, #0]
 800af12:	e6cd      	b.n	800acb0 <HAL_I2C_Mem_Read+0xf8>

0800af14 <HAL_I2C_MasterTxCpltCallback>:
 800af14:	4770      	bx	lr
 800af16:	bf00      	nop

0800af18 <HAL_I2C_MasterRxCpltCallback>:
 800af18:	4770      	bx	lr
 800af1a:	bf00      	nop

0800af1c <HAL_I2C_SlaveTxCpltCallback>:
 800af1c:	4770      	bx	lr
 800af1e:	bf00      	nop

0800af20 <HAL_I2C_SlaveRxCpltCallback>:
 800af20:	4770      	bx	lr
 800af22:	bf00      	nop

0800af24 <HAL_I2C_AddrCallback>:
}
 800af24:	4770      	bx	lr
 800af26:	bf00      	nop

0800af28 <HAL_I2C_ListenCpltCallback>:
 800af28:	4770      	bx	lr
 800af2a:	bf00      	nop

0800af2c <HAL_I2C_MemTxCpltCallback>:
 800af2c:	4770      	bx	lr
 800af2e:	bf00      	nop

0800af30 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800af30:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800af34:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800af36:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800af38:	b959      	cbnz	r1, 800af52 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800af3a:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800af3c:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800af3e:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800af40:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800af42:	d00d      	beq.n	800af60 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800af44:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800af48:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800af4a:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800af4c:	3201      	adds	r2, #1
 800af4e:	6502      	str	r2, [r0, #80]	; 0x50
 800af50:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800af52:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800af54:	2901      	cmp	r1, #1
 800af56:	d009      	beq.n	800af6c <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800af58:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800af5a:	2902      	cmp	r1, #2
 800af5c:	d00e      	beq.n	800af7c <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800af5e:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800af60:	b2d2      	uxtb	r2, r2
 800af62:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800af64:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800af66:	3202      	adds	r2, #2
 800af68:	6502      	str	r2, [r0, #80]	; 0x50
 800af6a:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800af6c:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800af6e:	6801      	ldr	r1, [r0, #0]
 800af70:	b2d2      	uxtb	r2, r2
 800af72:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800af74:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800af76:	3201      	adds	r2, #1
 800af78:	6502      	str	r2, [r0, #80]	; 0x50
 800af7a:	4770      	bx	lr
 800af7c:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800af7e:	2a22      	cmp	r2, #34	; 0x22
 800af80:	d01f      	beq.n	800afc2 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800af82:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800af84:	b289      	uxth	r1, r1
 800af86:	b9c1      	cbnz	r1, 800afba <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800af88:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800af8a:	b289      	uxth	r1, r1
 800af8c:	2900      	cmp	r1, #0
 800af8e:	d1e6      	bne.n	800af5e <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800af90:	2a21      	cmp	r2, #33	; 0x21
 800af92:	d1e4      	bne.n	800af5e <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800af94:	6802      	ldr	r2, [r0, #0]
{
 800af96:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800af98:	6854      	ldr	r4, [r2, #4]
 800af9a:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800af9e:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800afa0:	6814      	ldr	r4, [r2, #0]
 800afa2:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800afa6:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800afa8:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800afaa:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800afac:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800afb0:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800afb4:	f7ff ffba 	bl	800af2c <HAL_I2C_MemTxCpltCallback>
}
 800afb8:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800afba:	2a21      	cmp	r2, #33	; 0x21
 800afbc:	d00a      	beq.n	800afd4 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800afbe:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800afc0:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800afc2:	6801      	ldr	r1, [r0, #0]
 800afc4:	680a      	ldr	r2, [r1, #0]
 800afc6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800afca:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800afcc:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800afce:	3201      	adds	r2, #1
 800afd0:	6502      	str	r2, [r0, #80]	; 0x50
 800afd2:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800afd4:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800afd6:	6802      	ldr	r2, [r0, #0]
 800afd8:	f811 0b01 	ldrb.w	r0, [r1], #1
 800afdc:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800afde:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800afe0:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800afe2:	3a01      	subs	r2, #1
 800afe4:	b292      	uxth	r2, r2
 800afe6:	855a      	strh	r2, [r3, #42]	; 0x2a
 800afe8:	4770      	bx	lr
 800afea:	bf00      	nop

0800afec <HAL_I2C_MemRxCpltCallback>:
 800afec:	4770      	bx	lr
 800afee:	bf00      	nop

0800aff0 <HAL_I2C_ErrorCallback>:
 800aff0:	4770      	bx	lr
 800aff2:	bf00      	nop

0800aff4 <HAL_I2C_AbortCpltCallback>:
 800aff4:	4770      	bx	lr
 800aff6:	bf00      	nop

0800aff8 <I2C_DMAAbort>:
{
 800aff8:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800affa:	4b3a      	ldr	r3, [pc, #232]	; (800b0e4 <I2C_DMAAbort+0xec>)
 800affc:	4a3a      	ldr	r2, [pc, #232]	; (800b0e8 <I2C_DMAAbort+0xf0>)
 800affe:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800b000:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800b002:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b004:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800b006:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b008:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800b00c:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b00e:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b010:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b014:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b016:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800b01a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b01e:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800b020:	9301      	str	r3, [sp, #4]
 800b022:	e005      	b.n	800b030 <I2C_DMAAbort+0x38>
    count--;
 800b024:	9b01      	ldr	r3, [sp, #4]
 800b026:	3b01      	subs	r3, #1
 800b028:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b02a:	6813      	ldr	r3, [r2, #0]
 800b02c:	059b      	lsls	r3, r3, #22
 800b02e:	d506      	bpl.n	800b03e <I2C_DMAAbort+0x46>
    if (count == 0U)
 800b030:	9b01      	ldr	r3, [sp, #4]
 800b032:	2b00      	cmp	r3, #0
 800b034:	d1f6      	bne.n	800b024 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800b036:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800b038:	f043 0320 	orr.w	r3, r3, #32
 800b03c:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800b03e:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800b040:	b34c      	cbz	r4, 800b096 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800b042:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800b044:	2500      	movs	r5, #0
 800b046:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800b048:	b1f3      	cbz	r3, 800b088 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b04a:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800b04c:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b04e:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800b052:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800b054:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800b056:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800b058:	2400      	movs	r4, #0
 800b05a:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800b05c:	6813      	ldr	r3, [r2, #0]
 800b05e:	f023 0301 	bic.w	r3, r3, #1
 800b062:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800b064:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b068:	2b60      	cmp	r3, #96	; 0x60
 800b06a:	d02a      	beq.n	800b0c2 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b06c:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800b070:	2928      	cmp	r1, #40	; 0x28
 800b072:	d019      	beq.n	800b0a8 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800b074:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b076:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b078:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b07c:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800b080:	f7ff ffb6 	bl	800aff0 <HAL_I2C_ErrorCallback>
}
 800b084:	b002      	add	sp, #8
 800b086:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b088:	6815      	ldr	r5, [r2, #0]
 800b08a:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800b08e:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800b090:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800b092:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800b094:	e7e2      	b.n	800b05c <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800b096:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800b098:	b1f3      	cbz	r3, 800b0d8 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b09a:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800b09c:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b09e:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800b0a2:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800b0a4:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800b0a6:	e7d7      	b.n	800b058 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800b0a8:	6813      	ldr	r3, [r2, #0]
 800b0aa:	f043 0301 	orr.w	r3, r3, #1
 800b0ae:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b0b0:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800b0b2:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b0b4:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800b0b8:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800b0ba:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b0bc:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800b0c0:	e7de      	b.n	800b080 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b0c2:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800b0c4:	2220      	movs	r2, #32
 800b0c6:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b0ca:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800b0ce:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800b0d0:	f7ff ff90 	bl	800aff4 <HAL_I2C_AbortCpltCallback>
}
 800b0d4:	b002      	add	sp, #8
 800b0d6:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b0d8:	6814      	ldr	r4, [r2, #0]
 800b0da:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800b0de:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800b0e0:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800b0e2:	e7bb      	b.n	800b05c <I2C_DMAAbort+0x64>
 800b0e4:	20000078 	.word	0x20000078
 800b0e8:	14f8b589 	.word	0x14f8b589

0800b0ec <I2C_ITError>:
{
 800b0ec:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b0ee:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800b0f2:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b0f6:	2b10      	cmp	r3, #16
{
 800b0f8:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b0fa:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b0fc:	d039      	beq.n	800b172 <I2C_ITError+0x86>
 800b0fe:	b2d9      	uxtb	r1, r3
 800b100:	2940      	cmp	r1, #64	; 0x40
 800b102:	d036      	beq.n	800b172 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b104:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800b108:	2928      	cmp	r1, #40	; 0x28
 800b10a:	d03d      	beq.n	800b188 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b10c:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800b10e:	6859      	ldr	r1, [r3, #4]
 800b110:	0508      	lsls	r0, r1, #20
 800b112:	d407      	bmi.n	800b124 <I2C_ITError+0x38>
 800b114:	2a60      	cmp	r2, #96	; 0x60
 800b116:	d005      	beq.n	800b124 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800b118:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b11a:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b11c:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b120:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800b124:	2200      	movs	r2, #0
 800b126:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b128:	685a      	ldr	r2, [r3, #4]
 800b12a:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b12e:	d134      	bne.n	800b19a <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800b130:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b134:	2960      	cmp	r1, #96	; 0x60
 800b136:	d075      	beq.n	800b224 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b138:	695a      	ldr	r2, [r3, #20]
 800b13a:	0650      	lsls	r0, r2, #25
 800b13c:	d505      	bpl.n	800b14a <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b13e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b140:	691b      	ldr	r3, [r3, #16]
 800b142:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800b144:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b146:	3301      	adds	r3, #1
 800b148:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800b14a:	4620      	mov	r0, r4
 800b14c:	f7ff ff50 	bl	800aff0 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800b150:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800b152:	0719      	lsls	r1, r3, #28
 800b154:	d004      	beq.n	800b160 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b156:	6822      	ldr	r2, [r4, #0]
 800b158:	6853      	ldr	r3, [r2, #4]
 800b15a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b15e:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800b160:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800b164:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b166:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800b168:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800b16a:	d501      	bpl.n	800b170 <I2C_ITError+0x84>
 800b16c:	2b28      	cmp	r3, #40	; 0x28
 800b16e:	d02f      	beq.n	800b1d0 <I2C_ITError+0xe4>
}
 800b170:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b172:	2a22      	cmp	r2, #34	; 0x22
 800b174:	d1c6      	bne.n	800b104 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b176:	6823      	ldr	r3, [r4, #0]
 800b178:	681a      	ldr	r2, [r3, #0]
 800b17a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b17e:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800b180:	685a      	ldr	r2, [r3, #4]
 800b182:	0512      	lsls	r2, r2, #20
 800b184:	d5c8      	bpl.n	800b118 <I2C_ITError+0x2c>
 800b186:	e7cd      	b.n	800b124 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800b188:	2300      	movs	r3, #0
 800b18a:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b18c:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800b18e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b192:	685a      	ldr	r2, [r3, #4]
 800b194:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b198:	d0ca      	beq.n	800b130 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800b19a:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800b19c:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800b19e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b1a2:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800b1a4:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800b1a8:	2b01      	cmp	r3, #1
 800b1aa:	d01e      	beq.n	800b1ea <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b1ac:	4b28      	ldr	r3, [pc, #160]	; (800b250 <I2C_ITError+0x164>)
 800b1ae:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b1b0:	f7fe ff88 	bl	800a0c4 <HAL_DMA_Abort_IT>
 800b1b4:	2800      	cmp	r0, #0
 800b1b6:	d0cb      	beq.n	800b150 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800b1b8:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b1ba:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800b1bc:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b1be:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800b1c0:	f023 0301 	bic.w	r3, r3, #1
 800b1c4:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b1c6:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b1ca:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b1cc:	4798      	blx	r3
 800b1ce:	e7bf      	b.n	800b150 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800b1d0:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800b1d2:	4920      	ldr	r1, [pc, #128]	; (800b254 <I2C_ITError+0x168>)
 800b1d4:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800b1d6:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800b1d8:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800b1da:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800b1dc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b1e0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800b1e4:	f7ff fea0 	bl	800af28 <HAL_I2C_ListenCpltCallback>
}
 800b1e8:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b1ea:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b1ec:	4b18      	ldr	r3, [pc, #96]	; (800b250 <I2C_ITError+0x164>)
 800b1ee:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b1f0:	f7fe ff68 	bl	800a0c4 <HAL_DMA_Abort_IT>
 800b1f4:	2800      	cmp	r0, #0
 800b1f6:	d0ab      	beq.n	800b150 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b1f8:	6823      	ldr	r3, [r4, #0]
 800b1fa:	695a      	ldr	r2, [r3, #20]
 800b1fc:	0651      	lsls	r1, r2, #25
 800b1fe:	d506      	bpl.n	800b20e <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b200:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b202:	691b      	ldr	r3, [r3, #16]
 800b204:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800b206:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800b208:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800b20a:	3201      	adds	r2, #1
 800b20c:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800b20e:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b210:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800b212:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b216:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800b218:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b21a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b21e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b220:	4798      	blx	r3
 800b222:	e795      	b.n	800b150 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800b224:	2120      	movs	r1, #32
 800b226:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b22a:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b22c:	695a      	ldr	r2, [r3, #20]
 800b22e:	0652      	lsls	r2, r2, #25
 800b230:	d506      	bpl.n	800b240 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b232:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b234:	691b      	ldr	r3, [r3, #16]
 800b236:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800b238:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800b23a:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b23c:	3201      	adds	r2, #1
 800b23e:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800b240:	681a      	ldr	r2, [r3, #0]
 800b242:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800b246:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800b248:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800b24a:	f7ff fed3 	bl	800aff4 <HAL_I2C_AbortCpltCallback>
 800b24e:	e77f      	b.n	800b150 <I2C_ITError+0x64>
 800b250:	0800aff9 	.word	0x0800aff9
 800b254:	ffff0000 	.word	0xffff0000

0800b258 <HAL_I2C_EV_IRQHandler>:
{
 800b258:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b25a:	6803      	ldr	r3, [r0, #0]
{
 800b25c:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b25e:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b260:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b262:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b266:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b26a:	2910      	cmp	r1, #16
{
 800b26c:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b26e:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b270:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b274:	d022      	beq.n	800b2bc <HAL_I2C_EV_IRQHandler+0x64>
 800b276:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b27a:	d01f      	beq.n	800b2bc <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b27c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800b27e:	2900      	cmp	r1, #0
 800b280:	f000 8094 	beq.w	800b3ac <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b284:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800b286:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b288:	f011 0602 	ands.w	r6, r1, #2
 800b28c:	d059      	beq.n	800b342 <HAL_I2C_EV_IRQHandler+0xea>
 800b28e:	0586      	lsls	r6, r0, #22
 800b290:	d559      	bpl.n	800b346 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b292:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b294:	b102      	cbz	r2, 800b298 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b296:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b298:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b29c:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800b2a0:	2a28      	cmp	r2, #40	; 0x28
 800b2a2:	f000 821e 	beq.w	800b6e2 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b2a6:	2200      	movs	r2, #0
 800b2a8:	920c      	str	r2, [sp, #48]	; 0x30
 800b2aa:	6959      	ldr	r1, [r3, #20]
 800b2ac:	910c      	str	r1, [sp, #48]	; 0x30
 800b2ae:	699b      	ldr	r3, [r3, #24]
 800b2b0:	930c      	str	r3, [sp, #48]	; 0x30
 800b2b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800b2b4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800b2b8:	b00e      	add	sp, #56	; 0x38
 800b2ba:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b2bc:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b2be:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800b2c0:	f011 0f01 	tst.w	r1, #1
 800b2c4:	d11a      	bne.n	800b2fc <HAL_I2C_EV_IRQHandler+0xa4>
 800b2c6:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800b2ca:	d0f5      	beq.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
 800b2cc:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800b2d0:	d0f2      	beq.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b2d2:	070d      	lsls	r5, r1, #28
 800b2d4:	d56d      	bpl.n	800b3b2 <HAL_I2C_EV_IRQHandler+0x15a>
 800b2d6:	0585      	lsls	r5, r0, #22
 800b2d8:	f140 8083 	bpl.w	800b3e2 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b2dc:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b2de:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b2e0:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b2e2:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b2e4:	2900      	cmp	r1, #0
 800b2e6:	f000 81e3 	beq.w	800b6b0 <HAL_I2C_EV_IRQHandler+0x458>
 800b2ea:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800b2ec:	2a00      	cmp	r2, #0
 800b2ee:	f000 81df 	beq.w	800b6b0 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b2f2:	685a      	ldr	r2, [r3, #4]
 800b2f4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b2f8:	605a      	str	r2, [r3, #4]
 800b2fa:	e7dd      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b2fc:	0585      	lsls	r5, r0, #22
 800b2fe:	d56e      	bpl.n	800b3de <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800b300:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b302:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800b306:	f000 81e9 	beq.w	800b6dc <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800b30a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b30c:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800b310:	bf04      	itt	eq
 800b312:	2208      	moveq	r2, #8
 800b314:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b316:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b31a:	2a40      	cmp	r2, #64	; 0x40
 800b31c:	f000 81d7 	beq.w	800b6ce <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800b320:	6922      	ldr	r2, [r4, #16]
 800b322:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800b326:	f000 81b2 	beq.w	800b68e <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800b32a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b32c:	2a00      	cmp	r2, #0
 800b32e:	f040 81ef 	bne.w	800b710 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800b332:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b334:	11d2      	asrs	r2, r2, #7
 800b336:	f002 0206 	and.w	r2, r2, #6
 800b33a:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800b33e:	611a      	str	r2, [r3, #16]
 800b340:	e7ba      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b342:	06cd      	lsls	r5, r1, #27
 800b344:	d47c      	bmi.n	800b440 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b346:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800b34a:	2a21      	cmp	r2, #33	; 0x21
 800b34c:	f000 80f5 	beq.w	800b53a <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b350:	064e      	lsls	r6, r1, #25
 800b352:	f140 8132 	bpl.w	800b5ba <HAL_I2C_EV_IRQHandler+0x362>
 800b356:	0545      	lsls	r5, r0, #21
 800b358:	f140 812f 	bpl.w	800b5ba <HAL_I2C_EV_IRQHandler+0x362>
 800b35c:	0749      	lsls	r1, r1, #29
 800b35e:	f100 812f 	bmi.w	800b5c0 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b362:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b366:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b368:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b36a:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800b36c:	2a00      	cmp	r2, #0
 800b36e:	d0a3      	beq.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b370:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b372:	691b      	ldr	r3, [r3, #16]
 800b374:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b376:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b378:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b37a:	3b01      	subs	r3, #1
 800b37c:	b29b      	uxth	r3, r3
 800b37e:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b380:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b382:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b384:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b386:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b388:	2b00      	cmp	r3, #0
 800b38a:	d195      	bne.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
 800b38c:	292a      	cmp	r1, #42	; 0x2a
 800b38e:	d193      	bne.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b390:	6822      	ldr	r2, [r4, #0]
 800b392:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b394:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b396:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b398:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b39c:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b39e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b3a0:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b3a2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b3a6:	f7ff fdbb 	bl	800af20 <HAL_I2C_SlaveRxCpltCallback>
 800b3aa:	e785      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b3ac:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b3ae:	6959      	ldr	r1, [r3, #20]
 800b3b0:	e76a      	b.n	800b288 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b3b2:	078d      	lsls	r5, r1, #30
 800b3b4:	d515      	bpl.n	800b3e2 <HAL_I2C_EV_IRQHandler+0x18a>
 800b3b6:	0585      	lsls	r5, r0, #22
 800b3b8:	d513      	bpl.n	800b3e2 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b3ba:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800b3be:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800b3c0:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b3c2:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b3c6:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b3c8:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b3ca:	f000 81b3 	beq.w	800b734 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b3ce:	2200      	movs	r2, #0
 800b3d0:	920a      	str	r2, [sp, #40]	; 0x28
 800b3d2:	695a      	ldr	r2, [r3, #20]
 800b3d4:	920a      	str	r2, [sp, #40]	; 0x28
 800b3d6:	699b      	ldr	r3, [r3, #24]
 800b3d8:	930a      	str	r3, [sp, #40]	; 0x28
 800b3da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b3dc:	e76c      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b3de:	070d      	lsls	r5, r1, #28
 800b3e0:	d5e7      	bpl.n	800b3b2 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800b3e2:	0776      	lsls	r6, r6, #29
 800b3e4:	f140 80f5 	bpl.w	800b5d2 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b3e8:	685d      	ldr	r5, [r3, #4]
 800b3ea:	052d      	lsls	r5, r5, #20
 800b3ec:	f53f af64 	bmi.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b3f0:	060e      	lsls	r6, r1, #24
 800b3f2:	f140 8115 	bpl.w	800b620 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b3f6:	0545      	lsls	r5, r0, #21
 800b3f8:	f140 8112 	bpl.w	800b620 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b3fc:	074e      	lsls	r6, r1, #29
 800b3fe:	f100 8112 	bmi.w	800b626 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b402:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b406:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b408:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b40c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b40e:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b410:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b412:	2800      	cmp	r0, #0
 800b414:	f040 8235 	bne.w	800b882 <HAL_I2C_EV_IRQHandler+0x62a>
 800b418:	2a21      	cmp	r2, #33	; 0x21
 800b41a:	f000 8347 	beq.w	800baac <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b41e:	2940      	cmp	r1, #64	; 0x40
 800b420:	f47f af4a 	bne.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800b424:	2a22      	cmp	r2, #34	; 0x22
 800b426:	f47f af47 	bne.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800b42a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b42c:	b292      	uxth	r2, r2
 800b42e:	2a00      	cmp	r2, #0
 800b430:	f000 8268 	beq.w	800b904 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b434:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b438:	2a40      	cmp	r2, #64	; 0x40
 800b43a:	f040 80b4 	bne.w	800b5a6 <HAL_I2C_EV_IRQHandler+0x34e>
 800b43e:	e0fc      	b.n	800b63a <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b440:	0585      	lsls	r5, r0, #22
 800b442:	d580      	bpl.n	800b346 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b444:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b448:	685a      	ldr	r2, [r3, #4]
 800b44a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b44e:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800b450:	960d      	str	r6, [sp, #52]	; 0x34
 800b452:	695a      	ldr	r2, [r3, #20]
 800b454:	920d      	str	r2, [sp, #52]	; 0x34
 800b456:	681a      	ldr	r2, [r3, #0]
 800b458:	f042 0201 	orr.w	r2, r2, #1
 800b45c:	601a      	str	r2, [r3, #0]
 800b45e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b460:	681a      	ldr	r2, [r3, #0]
 800b462:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b466:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b468:	685a      	ldr	r2, [r3, #4]
 800b46a:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b46c:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b46e:	d521      	bpl.n	800b4b4 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b470:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800b474:	2a22      	cmp	r2, #34	; 0x22
 800b476:	f000 817a 	beq.w	800b76e <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800b47a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b47c:	6802      	ldr	r2, [r0, #0]
 800b47e:	6852      	ldr	r2, [r2, #4]
 800b480:	b292      	uxth	r2, r2
 800b482:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b484:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b486:	b292      	uxth	r2, r2
 800b488:	b11a      	cbz	r2, 800b492 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b48a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b48c:	f042 0204 	orr.w	r2, r2, #4
 800b490:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b492:	685a      	ldr	r2, [r3, #4]
 800b494:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b498:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800b49a:	f7fe fe25 	bl	800a0e8 <HAL_DMA_GetState>
 800b49e:	2801      	cmp	r0, #1
 800b4a0:	d008      	beq.n	800b4b4 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b4a2:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b4a4:	4b99      	ldr	r3, [pc, #612]	; (800b70c <HAL_I2C_EV_IRQHandler+0x4b4>)
 800b4a6:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b4a8:	f7fe fe0c 	bl	800a0c4 <HAL_DMA_Abort_IT>
 800b4ac:	b110      	cbz	r0, 800b4b4 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b4ae:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b4b0:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b4b2:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800b4b4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b4b6:	b29b      	uxth	r3, r3
 800b4b8:	b313      	cbz	r3, 800b500 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b4ba:	6823      	ldr	r3, [r4, #0]
 800b4bc:	695a      	ldr	r2, [r3, #20]
 800b4be:	0752      	lsls	r2, r2, #29
 800b4c0:	d50a      	bpl.n	800b4d8 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b4c2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b4c4:	691b      	ldr	r3, [r3, #16]
 800b4c6:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b4c8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b4ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b4cc:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800b4ce:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800b4d0:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b4d2:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b4d4:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b4d6:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b4d8:	695a      	ldr	r2, [r3, #20]
 800b4da:	0656      	lsls	r6, r2, #25
 800b4dc:	d509      	bpl.n	800b4f2 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b4de:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b4e0:	691b      	ldr	r3, [r3, #16]
 800b4e2:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b4e4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b4e6:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b4e8:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800b4ea:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800b4ec:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b4ee:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b4f0:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800b4f2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b4f4:	b29b      	uxth	r3, r3
 800b4f6:	b11b      	cbz	r3, 800b500 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b4f8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b4fa:	f043 0304 	orr.w	r3, r3, #4
 800b4fe:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b500:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b502:	2b00      	cmp	r3, #0
 800b504:	f040 80dd 	bne.w	800b6c2 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800b508:	2d2a      	cmp	r5, #42	; 0x2a
 800b50a:	f000 8151 	beq.w	800b7b0 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800b50e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b512:	2b28      	cmp	r3, #40	; 0x28
 800b514:	f000 8154 	beq.w	800b7c0 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b518:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b51a:	2b22      	cmp	r3, #34	; 0x22
 800b51c:	d002      	beq.n	800b524 <HAL_I2C_EV_IRQHandler+0x2cc>
 800b51e:	2d22      	cmp	r5, #34	; 0x22
 800b520:	f47f aeca 	bne.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800b524:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b526:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800b528:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b52a:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b52c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b530:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b534:	f7ff fcf4 	bl	800af20 <HAL_I2C_SlaveRxCpltCallback>
 800b538:	e6be      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b53a:	060d      	lsls	r5, r1, #24
 800b53c:	d528      	bpl.n	800b590 <HAL_I2C_EV_IRQHandler+0x338>
 800b53e:	0546      	lsls	r6, r0, #21
 800b540:	d526      	bpl.n	800b590 <HAL_I2C_EV_IRQHandler+0x338>
 800b542:	074d      	lsls	r5, r1, #29
 800b544:	d427      	bmi.n	800b596 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b546:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b54a:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b54c:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b54e:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800b550:	2900      	cmp	r1, #0
 800b552:	f43f aeb1 	beq.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b556:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b558:	f811 5b01 	ldrb.w	r5, [r1], #1
 800b55c:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800b55e:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b560:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b562:	3901      	subs	r1, #1
 800b564:	b289      	uxth	r1, r1
 800b566:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b568:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b56a:	b289      	uxth	r1, r1
 800b56c:	2900      	cmp	r1, #0
 800b56e:	f47f aea3 	bne.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
 800b572:	2829      	cmp	r0, #41	; 0x29
 800b574:	f47f aea0 	bne.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b578:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b57a:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b57c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b580:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b582:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800b584:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b586:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b58a:	f7ff fcc7 	bl	800af1c <HAL_I2C_SlaveTxCpltCallback>
 800b58e:	e693      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b590:	0749      	lsls	r1, r1, #29
 800b592:	f57f ae91 	bpl.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
 800b596:	0582      	lsls	r2, r0, #22
 800b598:	f57f ae8e 	bpl.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b59c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b59e:	b292      	uxth	r2, r2
 800b5a0:	2a00      	cmp	r2, #0
 800b5a2:	f43f ae89 	beq.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b5a6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b5a8:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b5ac:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800b5ae:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b5b0:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b5b2:	3b01      	subs	r3, #1
 800b5b4:	b29b      	uxth	r3, r3
 800b5b6:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b5b8:	e67e      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b5ba:	074a      	lsls	r2, r1, #29
 800b5bc:	f57f ae7c 	bpl.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
 800b5c0:	0586      	lsls	r6, r0, #22
 800b5c2:	f57f ae79 	bpl.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b5c6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b5c8:	b292      	uxth	r2, r2
 800b5ca:	2a00      	cmp	r2, #0
 800b5cc:	f43f ae74 	beq.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
 800b5d0:	e01b      	b.n	800b60a <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b5d2:	685a      	ldr	r2, [r3, #4]
 800b5d4:	0512      	lsls	r2, r2, #20
 800b5d6:	f53f ae6f 	bmi.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b5da:	064e      	lsls	r6, r1, #25
 800b5dc:	d433      	bmi.n	800b646 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b5de:	0749      	lsls	r1, r1, #29
 800b5e0:	f57f ae6a 	bpl.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
 800b5e4:	0582      	lsls	r2, r0, #22
 800b5e6:	f57f ae67 	bpl.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b5ea:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800b5ec:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b5ee:	b292      	uxth	r2, r2
 800b5f0:	2a04      	cmp	r2, #4
 800b5f2:	f000 8113 	beq.w	800b81c <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800b5f6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b5f8:	b292      	uxth	r2, r2
 800b5fa:	2a03      	cmp	r2, #3
 800b5fc:	f000 8153 	beq.w	800b8a6 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800b600:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b602:	b292      	uxth	r2, r2
 800b604:	2a02      	cmp	r2, #2
 800b606:	f000 8182 	beq.w	800b90e <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b60a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b60c:	691b      	ldr	r3, [r3, #16]
 800b60e:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b610:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b612:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b614:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800b616:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800b618:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b61a:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b61c:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800b61e:	e64b      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b620:	074d      	lsls	r5, r1, #29
 800b622:	f57f ae49 	bpl.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
 800b626:	0581      	lsls	r1, r0, #22
 800b628:	f57f ae46 	bpl.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800b62c:	2a21      	cmp	r2, #33	; 0x21
 800b62e:	f000 80fd 	beq.w	800b82c <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800b632:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b636:	f47f ae3f 	bne.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b63a:	4620      	mov	r0, r4
}
 800b63c:	b00e      	add	sp, #56	; 0x38
 800b63e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b642:	f7ff bc75 	b.w	800af30 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b646:	0545      	lsls	r5, r0, #21
 800b648:	d5c9      	bpl.n	800b5de <HAL_I2C_EV_IRQHandler+0x386>
 800b64a:	f011 0104 	ands.w	r1, r1, #4
 800b64e:	d1c9      	bne.n	800b5e4 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b650:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b654:	2a22      	cmp	r2, #34	; 0x22
 800b656:	f47f ae2f 	bne.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800b65a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b65c:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800b65e:	2a03      	cmp	r2, #3
 800b660:	f240 81ec 	bls.w	800ba3c <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b664:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b666:	691b      	ldr	r3, [r3, #16]
 800b668:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b66a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b66c:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b66e:	3b01      	subs	r3, #1
 800b670:	b29b      	uxth	r3, r3
 800b672:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800b674:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b676:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b678:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800b67a:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800b67c:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800b67e:	f47f ae1b 	bne.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b682:	6822      	ldr	r2, [r4, #0]
 800b684:	6853      	ldr	r3, [r2, #4]
 800b686:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b68a:	6053      	str	r3, [r2, #4]
 800b68c:	e614      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b68e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b692:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b694:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b696:	bf16      	itet	ne
 800b698:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b69c:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b6a0:	b2d2      	uxtbne	r2, r2
 800b6a2:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b6a4:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b6a6:	b11a      	cbz	r2, 800b6b0 <HAL_I2C_EV_IRQHandler+0x458>
 800b6a8:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b6aa:	2a00      	cmp	r2, #0
 800b6ac:	f47f ae21 	bne.w	800b2f2 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800b6b0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b6b2:	2a00      	cmp	r2, #0
 800b6b4:	f43f ae00 	beq.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
 800b6b8:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b6ba:	2a00      	cmp	r2, #0
 800b6bc:	f47f ae19 	bne.w	800b2f2 <HAL_I2C_EV_IRQHandler+0x9a>
 800b6c0:	e5fa      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800b6c2:	4620      	mov	r0, r4
}
 800b6c4:	b00e      	add	sp, #56	; 0x38
 800b6c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800b6ca:	f7ff bd0f 	b.w	800b0ec <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800b6ce:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b6d0:	bb52      	cbnz	r2, 800b728 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b6d2:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b6d4:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800b6d8:	611a      	str	r2, [r3, #16]
 800b6da:	e5ed      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800b6dc:	2201      	movs	r2, #1
 800b6de:	62e2      	str	r2, [r4, #44]	; 0x2c
 800b6e0:	e619      	b.n	800b316 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800b6e2:	685a      	ldr	r2, [r3, #4]
 800b6e4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b6e8:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800b6ea:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800b6ec:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800b6f0:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800b6f4:	bf54      	ite	pl
 800b6f6:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800b6f8:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800b6fa:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800b6fe:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800b702:	4620      	mov	r0, r4
 800b704:	f7ff fc0e 	bl	800af24 <HAL_I2C_AddrCallback>
 800b708:	e5d6      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
 800b70a:	bf00      	nop
 800b70c:	0800aff9 	.word	0x0800aff9
      else if (hi2c->EventCount == 1U)
 800b710:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b712:	2a01      	cmp	r2, #1
 800b714:	f47f add0 	bne.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800b718:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b71a:	11d2      	asrs	r2, r2, #7
 800b71c:	f002 0206 	and.w	r2, r2, #6
 800b720:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800b724:	611a      	str	r2, [r3, #16]
 800b726:	e5c7      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b728:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b72a:	f042 0201 	orr.w	r2, r2, #1
 800b72e:	b2d2      	uxtb	r2, r2
 800b730:	611a      	str	r2, [r3, #16]
 800b732:	e5c1      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800b734:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800b736:	b911      	cbnz	r1, 800b73e <HAL_I2C_EV_IRQHandler+0x4e6>
 800b738:	2a40      	cmp	r2, #64	; 0x40
 800b73a:	f000 809b 	beq.w	800b874 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800b73e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b740:	b922      	cbnz	r2, 800b74c <HAL_I2C_EV_IRQHandler+0x4f4>
 800b742:	6921      	ldr	r1, [r4, #16]
 800b744:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800b748:	f000 809f 	beq.w	800b88a <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800b74c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b74e:	b292      	uxth	r2, r2
 800b750:	2a00      	cmp	r2, #0
 800b752:	d142      	bne.n	800b7da <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b754:	9203      	str	r2, [sp, #12]
 800b756:	695a      	ldr	r2, [r3, #20]
 800b758:	9203      	str	r2, [sp, #12]
 800b75a:	699a      	ldr	r2, [r3, #24]
 800b75c:	9203      	str	r2, [sp, #12]
 800b75e:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b760:	681a      	ldr	r2, [r3, #0]
 800b762:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b766:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800b768:	2300      	movs	r3, #0
 800b76a:	6523      	str	r3, [r4, #80]	; 0x50
 800b76c:	e5a4      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800b76e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b770:	6802      	ldr	r2, [r0, #0]
 800b772:	6852      	ldr	r2, [r2, #4]
 800b774:	b292      	uxth	r2, r2
 800b776:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b778:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b77a:	b292      	uxth	r2, r2
 800b77c:	b11a      	cbz	r2, 800b786 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b77e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b780:	f042 0204 	orr.w	r2, r2, #4
 800b784:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b786:	685a      	ldr	r2, [r3, #4]
 800b788:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b78c:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800b78e:	f7fe fcab 	bl	800a0e8 <HAL_DMA_GetState>
 800b792:	2801      	cmp	r0, #1
 800b794:	f43f ae8e 	beq.w	800b4b4 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b798:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b79a:	4b98      	ldr	r3, [pc, #608]	; (800b9fc <HAL_I2C_EV_IRQHandler+0x7a4>)
 800b79c:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b79e:	f7fe fc91 	bl	800a0c4 <HAL_DMA_Abort_IT>
 800b7a2:	2800      	cmp	r0, #0
 800b7a4:	f43f ae86 	beq.w	800b4b4 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b7a8:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b7aa:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b7ac:	4798      	blx	r3
 800b7ae:	e681      	b.n	800b4b4 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b7b0:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800b7b2:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b7b4:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b7b6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b7ba:	f7ff fbb1 	bl	800af20 <HAL_I2C_SlaveRxCpltCallback>
 800b7be:	e6a6      	b.n	800b50e <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800b7c0:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b7c2:	498f      	ldr	r1, [pc, #572]	; (800ba00 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800b7c4:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800b7c6:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b7c8:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800b7ca:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b7cc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b7d0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800b7d4:	f7ff fba8 	bl	800af28 <HAL_I2C_ListenCpltCallback>
 800b7d8:	e56e      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800b7da:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b7dc:	b292      	uxth	r2, r2
 800b7de:	2a01      	cmp	r2, #1
 800b7e0:	d070      	beq.n	800b8c4 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800b7e2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b7e4:	b292      	uxth	r2, r2
 800b7e6:	2a02      	cmp	r2, #2
 800b7e8:	f000 80d6 	beq.w	800b998 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b7ec:	681a      	ldr	r2, [r3, #0]
 800b7ee:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b7f2:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b7f4:	685a      	ldr	r2, [r3, #4]
 800b7f6:	0511      	lsls	r1, r2, #20
 800b7f8:	d508      	bpl.n	800b80c <HAL_I2C_EV_IRQHandler+0x5b4>
 800b7fa:	2820      	cmp	r0, #32
 800b7fc:	f200 80f8 	bhi.w	800b9f0 <HAL_I2C_EV_IRQHandler+0x798>
 800b800:	2807      	cmp	r0, #7
 800b802:	f200 80ea 	bhi.w	800b9da <HAL_I2C_EV_IRQHandler+0x782>
 800b806:	2801      	cmp	r0, #1
 800b808:	f000 80ed 	beq.w	800b9e6 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b80c:	2200      	movs	r2, #0
 800b80e:	9209      	str	r2, [sp, #36]	; 0x24
 800b810:	695a      	ldr	r2, [r3, #20]
 800b812:	9209      	str	r2, [sp, #36]	; 0x24
 800b814:	699b      	ldr	r3, [r3, #24]
 800b816:	9309      	str	r3, [sp, #36]	; 0x24
 800b818:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b81a:	e7a5      	b.n	800b768 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b81c:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b81e:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b820:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b824:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b826:	691b      	ldr	r3, [r3, #16]
 800b828:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800b82a:	e6f1      	b.n	800b610 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b82c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b82e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b832:	2a21      	cmp	r2, #33	; 0x21
 800b834:	f47f ad40 	bne.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800b838:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b83a:	b292      	uxth	r2, r2
 800b83c:	2a00      	cmp	r2, #0
 800b83e:	f47f aeb2 	bne.w	800b5a6 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b842:	2908      	cmp	r1, #8
 800b844:	f000 80e2 	beq.w	800ba0c <HAL_I2C_EV_IRQHandler+0x7b4>
 800b848:	2920      	cmp	r1, #32
 800b84a:	f000 80df 	beq.w	800ba0c <HAL_I2C_EV_IRQHandler+0x7b4>
 800b84e:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800b852:	f000 80db 	beq.w	800ba0c <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b856:	6859      	ldr	r1, [r3, #4]
 800b858:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b85c:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b85e:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800b860:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b862:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b864:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b868:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b86a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b86e:	f7ff fb51 	bl	800af14 <HAL_I2C_MasterTxCpltCallback>
 800b872:	e521      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b874:	9101      	str	r1, [sp, #4]
 800b876:	695a      	ldr	r2, [r3, #20]
 800b878:	9201      	str	r2, [sp, #4]
 800b87a:	699b      	ldr	r3, [r3, #24]
 800b87c:	9301      	str	r3, [sp, #4]
 800b87e:	9b01      	ldr	r3, [sp, #4]
 800b880:	e51a      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b882:	2a21      	cmp	r2, #33	; 0x21
 800b884:	f43f add1 	beq.w	800b42a <HAL_I2C_EV_IRQHandler+0x1d2>
 800b888:	e5c9      	b.n	800b41e <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b88a:	9202      	str	r2, [sp, #8]
 800b88c:	695a      	ldr	r2, [r3, #20]
 800b88e:	9202      	str	r2, [sp, #8]
 800b890:	699a      	ldr	r2, [r3, #24]
 800b892:	9202      	str	r2, [sp, #8]
 800b894:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b896:	681a      	ldr	r2, [r3, #0]
 800b898:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b89c:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800b89e:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b8a0:	3301      	adds	r3, #1
 800b8a2:	6523      	str	r3, [r4, #80]	; 0x50
 800b8a4:	e508      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b8a6:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b8a8:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b8aa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8ae:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b8b0:	f43f aeab 	beq.w	800b60a <HAL_I2C_EV_IRQHandler+0x3b2>
 800b8b4:	2902      	cmp	r1, #2
 800b8b6:	f43f aea8 	beq.w	800b60a <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8ba:	681a      	ldr	r2, [r3, #0]
 800b8bc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8c0:	601a      	str	r2, [r3, #0]
 800b8c2:	e6a2      	b.n	800b60a <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800b8c4:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b8c8:	f000 811b 	beq.w	800bb02 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800b8cc:	2808      	cmp	r0, #8
 800b8ce:	f000 8108 	beq.w	800bae2 <HAL_I2C_EV_IRQHandler+0x88a>
 800b8d2:	2820      	cmp	r0, #32
 800b8d4:	f000 8105 	beq.w	800bae2 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b8d8:	2d12      	cmp	r5, #18
 800b8da:	f000 80ff 	beq.w	800badc <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b8de:	2810      	cmp	r0, #16
 800b8e0:	d804      	bhi.n	800b8ec <HAL_I2C_EV_IRQHandler+0x694>
 800b8e2:	4a48      	ldr	r2, [pc, #288]	; (800ba04 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b8e4:	40c2      	lsrs	r2, r0
 800b8e6:	07d1      	lsls	r1, r2, #31
 800b8e8:	f100 814c 	bmi.w	800bb84 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8ec:	681a      	ldr	r2, [r3, #0]
 800b8ee:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8f2:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8f4:	2200      	movs	r2, #0
 800b8f6:	9206      	str	r2, [sp, #24]
 800b8f8:	695a      	ldr	r2, [r3, #20]
 800b8fa:	9206      	str	r2, [sp, #24]
 800b8fc:	699b      	ldr	r3, [r3, #24]
 800b8fe:	9306      	str	r3, [sp, #24]
 800b900:	9b06      	ldr	r3, [sp, #24]
 800b902:	e731      	b.n	800b768 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b904:	685a      	ldr	r2, [r3, #4]
 800b906:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b90a:	605a      	str	r2, [r3, #4]
 800b90c:	e4d4      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800b90e:	3901      	subs	r1, #1
 800b910:	290f      	cmp	r1, #15
 800b912:	d809      	bhi.n	800b928 <HAL_I2C_EV_IRQHandler+0x6d0>
 800b914:	e8df f001 	tbb	[pc, r1]
 800b918:	3608363b 	.word	0x3608363b
 800b91c:	08080808 	.word	0x08080808
 800b920:	08080808 	.word	0x08080808
 800b924:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b928:	681a      	ldr	r2, [r3, #0]
 800b92a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b92e:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b930:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b932:	691b      	ldr	r3, [r3, #16]
 800b934:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b936:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b938:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b93a:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800b93c:	3b01      	subs	r3, #1
 800b93e:	b29b      	uxth	r3, r3
 800b940:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b942:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800b944:	1c51      	adds	r1, r2, #1
 800b946:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b948:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800b94a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b94c:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800b94e:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b950:	3b01      	subs	r3, #1
 800b952:	b29b      	uxth	r3, r3
 800b954:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b956:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800b958:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b95a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800b95e:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800b960:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b962:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800b964:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b968:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800b96c:	2b40      	cmp	r3, #64	; 0x40
 800b96e:	f000 80f5 	beq.w	800bb5c <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b972:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b974:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b976:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b97a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b97c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b97e:	f7ff facb 	bl	800af18 <HAL_I2C_MasterRxCpltCallback>
 800b982:	e499      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b984:	681a      	ldr	r2, [r3, #0]
 800b986:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b98a:	601a      	str	r2, [r3, #0]
 800b98c:	e7d0      	b.n	800b930 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b98e:	681a      	ldr	r2, [r3, #0]
 800b990:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b994:	601a      	str	r2, [r3, #0]
 800b996:	e7cb      	b.n	800b930 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b998:	2810      	cmp	r0, #16
 800b99a:	d804      	bhi.n	800b9a6 <HAL_I2C_EV_IRQHandler+0x74e>
 800b99c:	4a19      	ldr	r2, [pc, #100]	; (800ba04 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b99e:	40c2      	lsrs	r2, r0
 800b9a0:	07d2      	lsls	r2, r2, #31
 800b9a2:	f100 80c2 	bmi.w	800bb2a <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b9a6:	681a      	ldr	r2, [r3, #0]
 800b9a8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b9ac:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b9ae:	681a      	ldr	r2, [r3, #0]
 800b9b0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b9b4:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b9b6:	685a      	ldr	r2, [r3, #4]
 800b9b8:	0516      	lsls	r6, r2, #20
 800b9ba:	d506      	bpl.n	800b9ca <HAL_I2C_EV_IRQHandler+0x772>
 800b9bc:	2820      	cmp	r0, #32
 800b9be:	f240 80bc 	bls.w	800bb3a <HAL_I2C_EV_IRQHandler+0x8e2>
 800b9c2:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b9c6:	f000 80bd 	beq.w	800bb44 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b9ca:	2200      	movs	r2, #0
 800b9cc:	9208      	str	r2, [sp, #32]
 800b9ce:	695a      	ldr	r2, [r3, #20]
 800b9d0:	9208      	str	r2, [sp, #32]
 800b9d2:	699b      	ldr	r3, [r3, #24]
 800b9d4:	9308      	str	r3, [sp, #32]
 800b9d6:	9b08      	ldr	r3, [sp, #32]
 800b9d8:	e6c6      	b.n	800b768 <HAL_I2C_EV_IRQHandler+0x510>
 800b9da:	4a0b      	ldr	r2, [pc, #44]	; (800ba08 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800b9dc:	3808      	subs	r0, #8
 800b9de:	40c2      	lsrs	r2, r0
 800b9e0:	07d2      	lsls	r2, r2, #31
 800b9e2:	f57f af13 	bpl.w	800b80c <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b9e6:	685a      	ldr	r2, [r3, #4]
 800b9e8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b9ec:	605a      	str	r2, [r3, #4]
 800b9ee:	e70d      	b.n	800b80c <HAL_I2C_EV_IRQHandler+0x5b4>
 800b9f0:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b9f4:	f47f af0a 	bne.w	800b80c <HAL_I2C_EV_IRQHandler+0x5b4>
 800b9f8:	e7f5      	b.n	800b9e6 <HAL_I2C_EV_IRQHandler+0x78e>
 800b9fa:	bf00      	nop
 800b9fc:	0800aff9 	.word	0x0800aff9
 800ba00:	ffff0000 	.word	0xffff0000
 800ba04:	00010014 	.word	0x00010014
 800ba08:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ba0c:	6859      	ldr	r1, [r3, #4]
 800ba0e:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ba12:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ba14:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800ba16:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800ba18:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ba1a:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800ba1e:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800ba20:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800ba22:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ba26:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800ba2a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ba2e:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800ba30:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ba32:	f47f af1c 	bne.w	800b86e <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800ba36:	f7ff fa79 	bl	800af2c <HAL_I2C_MemTxCpltCallback>
 800ba3a:	e43d      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800ba3c:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ba3e:	2802      	cmp	r0, #2
 800ba40:	f43f af60 	beq.w	800b904 <HAL_I2C_EV_IRQHandler+0x6ac>
 800ba44:	2a01      	cmp	r2, #1
 800ba46:	f63f af5d 	bhi.w	800b904 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800ba4a:	4a62      	ldr	r2, [pc, #392]	; (800bbd4 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800ba4c:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800ba4e:	6812      	ldr	r2, [r2, #0]
 800ba50:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800ba54:	fbb2 f2f0 	udiv	r2, r2, r0
 800ba58:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800ba5c:	920b      	str	r2, [sp, #44]	; 0x2c
 800ba5e:	e004      	b.n	800ba6a <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ba60:	681a      	ldr	r2, [r3, #0]
 800ba62:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800ba66:	f000 8092 	beq.w	800bb8e <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800ba6a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ba6c:	3a01      	subs	r2, #1
 800ba6e:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800ba70:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ba72:	2900      	cmp	r1, #0
 800ba74:	d1f4      	bne.n	800ba60 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ba76:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ba78:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ba7a:	f042 0220 	orr.w	r2, r2, #32
 800ba7e:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ba80:	685a      	ldr	r2, [r3, #4]
 800ba82:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ba86:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ba88:	691b      	ldr	r3, [r3, #16]
 800ba8a:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800ba8c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800ba8e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ba90:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800ba92:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800ba94:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800ba96:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800ba98:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800ba9a:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800ba9c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800baa0:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800baa2:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800baa6:	f7ff faa3 	bl	800aff0 <HAL_I2C_ErrorCallback>
 800baaa:	e405      	b.n	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800baac:	2d08      	cmp	r5, #8
 800baae:	d0ad      	beq.n	800ba0c <HAL_I2C_EV_IRQHandler+0x7b4>
 800bab0:	2d20      	cmp	r5, #32
 800bab2:	d0ab      	beq.n	800ba0c <HAL_I2C_EV_IRQHandler+0x7b4>
 800bab4:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800bab8:	d0a8      	beq.n	800ba0c <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800baba:	685a      	ldr	r2, [r3, #4]
 800babc:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800bac0:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800bac2:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bac4:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800bac6:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800bac8:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800baca:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800bace:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800bad0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800bad4:	f7ff fa1e 	bl	800af14 <HAL_I2C_MasterTxCpltCallback>
 800bad8:	f7ff bbee 	b.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800badc:	2801      	cmp	r0, #1
 800bade:	f43f af05 	beq.w	800b8ec <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bae2:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bae4:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bae6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800baea:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800baec:	9107      	str	r1, [sp, #28]
 800baee:	695a      	ldr	r2, [r3, #20]
 800baf0:	9207      	str	r2, [sp, #28]
 800baf2:	699a      	ldr	r2, [r3, #24]
 800baf4:	9207      	str	r2, [sp, #28]
 800baf6:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800baf8:	681a      	ldr	r2, [r3, #0]
 800bafa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bafe:	601a      	str	r2, [r3, #0]
 800bb00:	e632      	b.n	800b768 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb02:	681a      	ldr	r2, [r3, #0]
 800bb04:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bb08:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800bb0a:	685a      	ldr	r2, [r3, #4]
 800bb0c:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800bb10:	d02d      	beq.n	800bb6e <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb12:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bb14:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb16:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bb1a:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bb1c:	9104      	str	r1, [sp, #16]
 800bb1e:	695a      	ldr	r2, [r3, #20]
 800bb20:	9204      	str	r2, [sp, #16]
 800bb22:	699b      	ldr	r3, [r3, #24]
 800bb24:	9304      	str	r3, [sp, #16]
 800bb26:	9b04      	ldr	r3, [sp, #16]
 800bb28:	e61e      	b.n	800b768 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb2a:	681a      	ldr	r2, [r3, #0]
 800bb2c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800bb30:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800bb32:	685a      	ldr	r2, [r3, #4]
 800bb34:	0515      	lsls	r5, r2, #20
 800bb36:	f57f af48 	bpl.w	800b9ca <HAL_I2C_EV_IRQHandler+0x772>
 800bb3a:	2807      	cmp	r0, #7
 800bb3c:	d807      	bhi.n	800bb4e <HAL_I2C_EV_IRQHandler+0x8f6>
 800bb3e:	2801      	cmp	r0, #1
 800bb40:	f47f af43 	bne.w	800b9ca <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800bb44:	685a      	ldr	r2, [r3, #4]
 800bb46:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800bb4a:	605a      	str	r2, [r3, #4]
 800bb4c:	e73d      	b.n	800b9ca <HAL_I2C_EV_IRQHandler+0x772>
 800bb4e:	4a22      	ldr	r2, [pc, #136]	; (800bbd8 <HAL_I2C_EV_IRQHandler+0x980>)
 800bb50:	3808      	subs	r0, #8
 800bb52:	40c2      	lsrs	r2, r0
 800bb54:	07d0      	lsls	r0, r2, #31
 800bb56:	f57f af38 	bpl.w	800b9ca <HAL_I2C_EV_IRQHandler+0x772>
 800bb5a:	e7f3      	b.n	800bb44 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800bb5c:	2300      	movs	r3, #0
 800bb5e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800bb62:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800bb64:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800bb66:	f7ff fa41 	bl	800afec <HAL_I2C_MemRxCpltCallback>
 800bb6a:	f7ff bba5 	b.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bb6e:	9205      	str	r2, [sp, #20]
 800bb70:	695a      	ldr	r2, [r3, #20]
 800bb72:	9205      	str	r2, [sp, #20]
 800bb74:	699a      	ldr	r2, [r3, #24]
 800bb76:	9205      	str	r2, [sp, #20]
 800bb78:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bb7a:	681a      	ldr	r2, [r3, #0]
 800bb7c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800bb80:	601a      	str	r2, [r3, #0]
 800bb82:	e5f1      	b.n	800b768 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb84:	681a      	ldr	r2, [r3, #0]
 800bb86:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800bb8a:	601a      	str	r2, [r3, #0]
 800bb8c:	e6b2      	b.n	800b8f4 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb8e:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bb90:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bb92:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800bb96:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800bb98:	6859      	ldr	r1, [r3, #4]
 800bb9a:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800bb9e:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800bba0:	691b      	ldr	r3, [r3, #16]
 800bba2:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800bba4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800bba6:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800bba8:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800bbaa:	b29b      	uxth	r3, r3
 800bbac:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800bbae:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800bbb2:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bbb4:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800bbb8:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bbba:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800bbbc:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800bbbe:	f47f aed9 	bne.w	800b974 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800bbc2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800bbc6:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800bbc8:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800bbca:	f7ff fa0f 	bl	800afec <HAL_I2C_MemRxCpltCallback>
 800bbce:	f7ff bb73 	b.w	800b2b8 <HAL_I2C_EV_IRQHandler+0x60>
 800bbd2:	bf00      	nop
 800bbd4:	20000078 	.word	0x20000078
 800bbd8:	01000101 	.word	0x01000101

0800bbdc <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800bbdc:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800bbe0:	2a20      	cmp	r2, #32
{
 800bbe2:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800bbe4:	fa5f fc82 	uxtb.w	ip, r2
 800bbe8:	d001      	beq.n	800bbee <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800bbea:	2002      	movs	r0, #2
  }
}
 800bbec:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800bbee:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800bbf0:	2024      	movs	r0, #36	; 0x24
 800bbf2:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800bbf6:	6810      	ldr	r0, [r2, #0]
 800bbf8:	f020 0001 	bic.w	r0, r0, #1
 800bbfc:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800bbfe:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800bc00:	f020 0010 	bic.w	r0, r0, #16
 800bc04:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800bc06:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800bc08:	4301      	orrs	r1, r0
 800bc0a:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800bc0c:	6811      	ldr	r1, [r2, #0]
 800bc0e:	f041 0101 	orr.w	r1, r1, #1
 800bc12:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800bc14:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800bc16:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800bc1a:	4770      	bx	lr

0800bc1c <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800bc1c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800bc20:	2a20      	cmp	r2, #32
 800bc22:	d001      	beq.n	800bc28 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800bc24:	2002      	movs	r0, #2
  }
}
 800bc26:	4770      	bx	lr
{
 800bc28:	b410      	push	{r4}
 800bc2a:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800bc2e:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800bc30:	2224      	movs	r2, #36	; 0x24
 800bc32:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800bc36:	6822      	ldr	r2, [r4, #0]
 800bc38:	f022 0201 	bic.w	r2, r2, #1
 800bc3c:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800bc3e:	4603      	mov	r3, r0
 800bc40:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800bc42:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800bc46:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800bc48:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800bc4a:	b289      	uxth	r1, r1
 800bc4c:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800bc4e:	6822      	ldr	r2, [r4, #0]
 800bc50:	f042 0201 	orr.w	r2, r2, #1
 800bc54:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800bc56:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800bc5a:	2000      	movs	r0, #0
}
 800bc5c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bc60:	4770      	bx	lr
 800bc62:	bf00      	nop

0800bc64 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800bc64:	2800      	cmp	r0, #0
 800bc66:	d069      	beq.n	800bd3c <HAL_LTDC_Init+0xd8>
{
 800bc68:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800bc6a:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800bc6e:	4604      	mov	r4, r0
 800bc70:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800bc74:	2b00      	cmp	r3, #0
 800bc76:	d05c      	beq.n	800bd32 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bc78:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bc7a:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bc7c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bc80:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bc84:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bc86:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800bc88:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bc8c:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800bc90:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bc92:	6999      	ldr	r1, [r3, #24]
 800bc94:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800bc96:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bc98:	430a      	orrs	r2, r1
 800bc9a:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800bc9c:	689a      	ldr	r2, [r3, #8]
 800bc9e:	4928      	ldr	r1, [pc, #160]	; (800bd40 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800bca0:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800bca2:	400a      	ands	r2, r1
 800bca4:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800bca6:	689a      	ldr	r2, [r3, #8]
 800bca8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bcac:	69a0      	ldr	r0, [r4, #24]
 800bcae:	4302      	orrs	r2, r0
 800bcb0:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800bcb2:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800bcb4:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800bcb6:	400a      	ands	r2, r1
 800bcb8:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800bcba:	68da      	ldr	r2, [r3, #12]
 800bcbc:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bcc0:	6a20      	ldr	r0, [r4, #32]
 800bcc2:	4302      	orrs	r2, r0
 800bcc4:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800bcc6:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800bcc8:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800bcca:	400a      	ands	r2, r1
 800bccc:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800bcce:	691a      	ldr	r2, [r3, #16]
 800bcd0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bcd4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bcd6:	4302      	orrs	r2, r0
 800bcd8:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800bcda:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800bcdc:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800bcde:	400a      	ands	r2, r1
 800bce0:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800bce2:	695a      	ldr	r2, [r3, #20]
 800bce4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bce6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bcea:	430a      	orrs	r2, r1
 800bcec:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800bcee:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800bcf0:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800bcf4:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800bcf8:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800bcfc:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800bcfe:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800bd00:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800bd04:	432a      	orrs	r2, r5
 800bd06:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800bd0a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800bd0e:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800bd10:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bd12:	f042 0206 	orr.w	r2, r2, #6
 800bd16:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800bd18:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800bd1a:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bd1e:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800bd20:	ea42 020c 	orr.w	r2, r2, ip
 800bd24:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bd26:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800bd2a:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800bd2e:	4608      	mov	r0, r1
}
 800bd30:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800bd32:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800bd36:	f7f5 ffd1 	bl	8001cdc <HAL_LTDC_MspInit>
 800bd3a:	e79d      	b.n	800bc78 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800bd3c:	2001      	movs	r0, #1
}
 800bd3e:	4770      	bx	lr
 800bd40:	f000f800 	.word	0xf000f800

0800bd44 <HAL_LTDC_ErrorCallback>:
 800bd44:	4770      	bx	lr
 800bd46:	bf00      	nop

0800bd48 <HAL_LTDC_ReloadEventCallback>:
 800bd48:	4770      	bx	lr
 800bd4a:	bf00      	nop

0800bd4c <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bd4c:	6803      	ldr	r3, [r0, #0]
{
 800bd4e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bd50:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800bd52:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bd54:	076a      	lsls	r2, r5, #29
{
 800bd56:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bd58:	d501      	bpl.n	800bd5e <HAL_LTDC_IRQHandler+0x12>
 800bd5a:	0771      	lsls	r1, r6, #29
 800bd5c:	d41d      	bmi.n	800bd9a <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800bd5e:	07aa      	lsls	r2, r5, #30
 800bd60:	d501      	bpl.n	800bd66 <HAL_LTDC_IRQHandler+0x1a>
 800bd62:	07b3      	lsls	r3, r6, #30
 800bd64:	d42d      	bmi.n	800bdc2 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800bd66:	07e8      	lsls	r0, r5, #31
 800bd68:	d501      	bpl.n	800bd6e <HAL_LTDC_IRQHandler+0x22>
 800bd6a:	07f1      	lsls	r1, r6, #31
 800bd6c:	d440      	bmi.n	800bdf0 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800bd6e:	072a      	lsls	r2, r5, #28
 800bd70:	d501      	bpl.n	800bd76 <HAL_LTDC_IRQHandler+0x2a>
 800bd72:	0733      	lsls	r3, r6, #28
 800bd74:	d400      	bmi.n	800bd78 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800bd76:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bd78:	6823      	ldr	r3, [r4, #0]
 800bd7a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bd7c:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bd7e:	f022 0208 	bic.w	r2, r2, #8
 800bd82:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800bd84:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bd86:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bd88:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bd8a:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bd8e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800bd92:	4620      	mov	r0, r4
 800bd94:	f7ff ffd8 	bl	800bd48 <HAL_LTDC_ReloadEventCallback>
}
 800bd98:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800bd9a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bd9c:	f022 0204 	bic.w	r2, r2, #4
 800bda0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800bda2:	2204      	movs	r2, #4
 800bda4:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800bda6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800bdaa:	f043 0301 	orr.w	r3, r3, #1
 800bdae:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800bdb2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bdb4:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bdb8:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bdbc:	f7ff ffc2 	bl	800bd44 <HAL_LTDC_ErrorCallback>
 800bdc0:	e7cd      	b.n	800bd5e <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800bdc2:	6823      	ldr	r3, [r4, #0]
 800bdc4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bdc6:	f022 0202 	bic.w	r2, r2, #2
 800bdca:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800bdcc:	2202      	movs	r2, #2
 800bdce:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800bdd0:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800bdd4:	f043 0302 	orr.w	r3, r3, #2
 800bdd8:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bddc:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800bdde:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bde0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bde4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bde8:	4620      	mov	r0, r4
 800bdea:	f7ff ffab 	bl	800bd44 <HAL_LTDC_ErrorCallback>
 800bdee:	e7ba      	b.n	800bd66 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bdf0:	6823      	ldr	r3, [r4, #0]
 800bdf2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bdf4:	f022 0201 	bic.w	r2, r2, #1
 800bdf8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800bdfa:	2201      	movs	r2, #1
 800bdfc:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bdfe:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800be00:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800be04:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800be08:	4620      	mov	r0, r4
 800be0a:	f7f6 ff61 	bl	8002cd0 <HAL_LTDC_LineEventCallback>
 800be0e:	e7ae      	b.n	800bd6e <HAL_LTDC_IRQHandler+0x22>

0800be10 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800be10:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800be14:	2b01      	cmp	r3, #1
 800be16:	f000 80c2 	beq.w	800bf9e <HAL_LTDC_ConfigLayer+0x18e>
{
 800be1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800be1e:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800be22:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800be26:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800be2a:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800be2c:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800be2e:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800be32:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800be36:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800be3a:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800be3e:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800be42:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800be46:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800be48:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800be4c:	460c      	mov	r4, r1
 800be4e:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800be50:	9301      	str	r3, [sp, #4]
 800be52:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800be54:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800be56:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800be5a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800be5e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800be60:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800be62:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800be66:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800be68:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800be6c:	6823      	ldr	r3, [r4, #0]
 800be6e:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800be72:	9b01      	ldr	r3, [sp, #4]
 800be74:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800be78:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800be7c:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800be7e:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800be80:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800be84:	1c51      	adds	r1, r2, #1
 800be86:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800be8a:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800be8c:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800be8e:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800be92:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800be96:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800be9a:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800be9e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800bea2:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bea6:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800beaa:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800beac:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800beae:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800beb2:	3301      	adds	r3, #1
 800beb4:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800beb8:	4403      	add	r3, r0
 800beba:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800bebe:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bec2:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bec6:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bec8:	f023 0307 	bic.w	r3, r3, #7
 800becc:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bed0:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bed4:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bed8:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800bedc:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800bee0:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bee4:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800bee8:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800beec:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800bef0:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800bef4:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800bef8:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800befc:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800bf00:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800bf04:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800bf08:	696b      	ldr	r3, [r5, #20]
 800bf0a:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800bf0e:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800bf12:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800bf16:	f023 0307 	bic.w	r3, r3, #7
 800bf1a:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800bf1e:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800bf22:	4303      	orrs	r3, r0
 800bf24:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bf28:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bf2c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bf2e:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bf32:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bf36:	bb69      	cbnz	r1, 800bf94 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800bf38:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bf3a:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bf3c:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bf3e:	fb03 f707 	mul.w	r7, r3, r7
 800bf42:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bf44:	fb02 f303 	mul.w	r3, r2, r3
 800bf48:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bf4c:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bf50:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bf52:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800bf56:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bf5a:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800bf5e:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800bf62:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800bf66:	f023 0307 	bic.w	r3, r3, #7
 800bf6a:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bf6e:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bf72:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bf76:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bf78:	4313      	orrs	r3, r2
 800bf7a:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800bf7e:	2300      	movs	r3, #0
  return HAL_OK;
 800bf80:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bf82:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800bf86:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bf8a:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800bf8e:	b003      	add	sp, #12
 800bf90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800bf94:	3901      	subs	r1, #1
 800bf96:	2906      	cmp	r1, #6
 800bf98:	d903      	bls.n	800bfa2 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bf9a:	2301      	movs	r3, #1
 800bf9c:	e7cd      	b.n	800bf3a <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800bf9e:	2002      	movs	r0, #2
}
 800bfa0:	4770      	bx	lr
 800bfa2:	4b02      	ldr	r3, [pc, #8]	; (800bfac <HAL_LTDC_ConfigLayer+0x19c>)
 800bfa4:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800bfa8:	e7c7      	b.n	800bf3a <HAL_LTDC_ConfigLayer+0x12a>
 800bfaa:	bf00      	nop
 800bfac:	0802eac0 	.word	0x0802eac0

0800bfb0 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800bfb0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bfb4:	2b01      	cmp	r3, #1
 800bfb6:	d019      	beq.n	800bfec <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bfb8:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bfba:	2302      	movs	r3, #2
{
 800bfbc:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bfbe:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bfc2:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bfc4:	4c0a      	ldr	r4, [pc, #40]	; (800bff0 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bfc6:	f023 0301 	bic.w	r3, r3, #1
 800bfca:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bfcc:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bfce:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800bfd0:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bfd2:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800bfd6:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bfda:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800bfdc:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bfe0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800bfe4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800bfe8:	4618      	mov	r0, r3
}
 800bfea:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800bfec:	2002      	movs	r0, #2
}
 800bfee:	4770      	bx	lr
 800bff0:	40016800 	.word	0x40016800

0800bff4 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800bff4:	2800      	cmp	r0, #0
 800bff6:	f000 81a2 	beq.w	800c33e <HAL_RCC_OscConfig+0x34a>
{
 800bffa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800bffe:	6803      	ldr	r3, [r0, #0]
 800c000:	07dd      	lsls	r5, r3, #31
{
 800c002:	b082      	sub	sp, #8
 800c004:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800c006:	d52f      	bpl.n	800c068 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800c008:	499e      	ldr	r1, [pc, #632]	; (800c284 <HAL_RCC_OscConfig+0x290>)
 800c00a:	688a      	ldr	r2, [r1, #8]
 800c00c:	f002 020c 	and.w	r2, r2, #12
 800c010:	2a04      	cmp	r2, #4
 800c012:	f000 80ed 	beq.w	800c1f0 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c016:	688a      	ldr	r2, [r1, #8]
 800c018:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800c01c:	2a08      	cmp	r2, #8
 800c01e:	f000 80e3 	beq.w	800c1e8 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c022:	6863      	ldr	r3, [r4, #4]
 800c024:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800c028:	f000 80ec 	beq.w	800c204 <HAL_RCC_OscConfig+0x210>
 800c02c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800c030:	f000 8175 	beq.w	800c31e <HAL_RCC_OscConfig+0x32a>
 800c034:	4d93      	ldr	r5, [pc, #588]	; (800c284 <HAL_RCC_OscConfig+0x290>)
 800c036:	682a      	ldr	r2, [r5, #0]
 800c038:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800c03c:	602a      	str	r2, [r5, #0]
 800c03e:	682a      	ldr	r2, [r5, #0]
 800c040:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800c044:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c046:	2b00      	cmp	r3, #0
 800c048:	f040 80e1 	bne.w	800c20e <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800c04c:	f7fd ffb0 	bl	8009fb0 <HAL_GetTick>
 800c050:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c052:	e005      	b.n	800c060 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c054:	f7fd ffac 	bl	8009fb0 <HAL_GetTick>
 800c058:	1b80      	subs	r0, r0, r6
 800c05a:	2864      	cmp	r0, #100	; 0x64
 800c05c:	f200 8101 	bhi.w	800c262 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c060:	682b      	ldr	r3, [r5, #0]
 800c062:	039b      	lsls	r3, r3, #14
 800c064:	d4f6      	bmi.n	800c054 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800c066:	6823      	ldr	r3, [r4, #0]
 800c068:	079f      	lsls	r7, r3, #30
 800c06a:	d528      	bpl.n	800c0be <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800c06c:	4a85      	ldr	r2, [pc, #532]	; (800c284 <HAL_RCC_OscConfig+0x290>)
 800c06e:	6891      	ldr	r1, [r2, #8]
 800c070:	f011 0f0c 	tst.w	r1, #12
 800c074:	f000 8090 	beq.w	800c198 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c078:	6891      	ldr	r1, [r2, #8]
 800c07a:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800c07e:	2908      	cmp	r1, #8
 800c080:	f000 8086 	beq.w	800c190 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800c084:	68e3      	ldr	r3, [r4, #12]
 800c086:	2b00      	cmp	r3, #0
 800c088:	f000 810e 	beq.w	800c2a8 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800c08c:	4b7e      	ldr	r3, [pc, #504]	; (800c288 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c08e:	4e7d      	ldr	r6, [pc, #500]	; (800c284 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800c090:	2201      	movs	r2, #1
 800c092:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c094:	f7fd ff8c 	bl	8009fb0 <HAL_GetTick>
 800c098:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c09a:	e005      	b.n	800c0a8 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c09c:	f7fd ff88 	bl	8009fb0 <HAL_GetTick>
 800c0a0:	1b40      	subs	r0, r0, r5
 800c0a2:	2802      	cmp	r0, #2
 800c0a4:	f200 80dd 	bhi.w	800c262 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c0a8:	6833      	ldr	r3, [r6, #0]
 800c0aa:	0798      	lsls	r0, r3, #30
 800c0ac:	d5f6      	bpl.n	800c09c <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c0ae:	6833      	ldr	r3, [r6, #0]
 800c0b0:	6922      	ldr	r2, [r4, #16]
 800c0b2:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800c0b6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800c0ba:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c0bc:	6823      	ldr	r3, [r4, #0]
 800c0be:	071a      	lsls	r2, r3, #28
 800c0c0:	d451      	bmi.n	800c166 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c0c2:	0758      	lsls	r0, r3, #29
 800c0c4:	d52f      	bpl.n	800c126 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800c0c6:	4a6f      	ldr	r2, [pc, #444]	; (800c284 <HAL_RCC_OscConfig+0x290>)
 800c0c8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c0ca:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800c0ce:	d07f      	beq.n	800c1d0 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800c0d0:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c0d2:	4e6e      	ldr	r6, [pc, #440]	; (800c28c <HAL_RCC_OscConfig+0x298>)
 800c0d4:	6833      	ldr	r3, [r6, #0]
 800c0d6:	05d9      	lsls	r1, r3, #23
 800c0d8:	f140 80b3 	bpl.w	800c242 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c0dc:	68a3      	ldr	r3, [r4, #8]
 800c0de:	2b01      	cmp	r3, #1
 800c0e0:	f000 80c3 	beq.w	800c26a <HAL_RCC_OscConfig+0x276>
 800c0e4:	2b05      	cmp	r3, #5
 800c0e6:	f000 812c 	beq.w	800c342 <HAL_RCC_OscConfig+0x34e>
 800c0ea:	4e66      	ldr	r6, [pc, #408]	; (800c284 <HAL_RCC_OscConfig+0x290>)
 800c0ec:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800c0ee:	f022 0201 	bic.w	r2, r2, #1
 800c0f2:	6732      	str	r2, [r6, #112]	; 0x70
 800c0f4:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800c0f6:	f022 0204 	bic.w	r2, r2, #4
 800c0fa:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c0fc:	2b00      	cmp	r3, #0
 800c0fe:	f040 80b9 	bne.w	800c274 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800c102:	f7fd ff55 	bl	8009fb0 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c106:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800c10a:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800c10c:	e005      	b.n	800c11a <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c10e:	f7fd ff4f 	bl	8009fb0 <HAL_GetTick>
 800c112:	1bc0      	subs	r0, r0, r7
 800c114:	4540      	cmp	r0, r8
 800c116:	f200 80a4 	bhi.w	800c262 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800c11a:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800c11c:	0798      	lsls	r0, r3, #30
 800c11e:	d4f6      	bmi.n	800c10e <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800c120:	2d00      	cmp	r5, #0
 800c122:	f040 8106 	bne.w	800c332 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800c126:	69a0      	ldr	r0, [r4, #24]
 800c128:	b1c8      	cbz	r0, 800c15e <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800c12a:	4d56      	ldr	r5, [pc, #344]	; (800c284 <HAL_RCC_OscConfig+0x290>)
 800c12c:	68ab      	ldr	r3, [r5, #8]
 800c12e:	f003 030c 	and.w	r3, r3, #12
 800c132:	2b08      	cmp	r3, #8
 800c134:	f000 80c9 	beq.w	800c2ca <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800c138:	4b53      	ldr	r3, [pc, #332]	; (800c288 <HAL_RCC_OscConfig+0x294>)
 800c13a:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c13c:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800c13e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c140:	f000 8109 	beq.w	800c356 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800c144:	f7fd ff34 	bl	8009fb0 <HAL_GetTick>
 800c148:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c14a:	e005      	b.n	800c158 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c14c:	f7fd ff30 	bl	8009fb0 <HAL_GetTick>
 800c150:	1b00      	subs	r0, r0, r4
 800c152:	2802      	cmp	r0, #2
 800c154:	f200 8085 	bhi.w	800c262 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c158:	682b      	ldr	r3, [r5, #0]
 800c15a:	019b      	lsls	r3, r3, #6
 800c15c:	d4f6      	bmi.n	800c14c <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800c15e:	2000      	movs	r0, #0
}
 800c160:	b002      	add	sp, #8
 800c162:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800c166:	6963      	ldr	r3, [r4, #20]
 800c168:	b30b      	cbz	r3, 800c1ae <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800c16a:	4b47      	ldr	r3, [pc, #284]	; (800c288 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c16c:	4e45      	ldr	r6, [pc, #276]	; (800c284 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800c16e:	2201      	movs	r2, #1
 800c170:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c174:	f7fd ff1c 	bl	8009fb0 <HAL_GetTick>
 800c178:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c17a:	e004      	b.n	800c186 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c17c:	f7fd ff18 	bl	8009fb0 <HAL_GetTick>
 800c180:	1b40      	subs	r0, r0, r5
 800c182:	2802      	cmp	r0, #2
 800c184:	d86d      	bhi.n	800c262 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c186:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c188:	079b      	lsls	r3, r3, #30
 800c18a:	d5f7      	bpl.n	800c17c <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c18c:	6823      	ldr	r3, [r4, #0]
 800c18e:	e798      	b.n	800c0c2 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c190:	6852      	ldr	r2, [r2, #4]
 800c192:	0256      	lsls	r6, r2, #9
 800c194:	f53f af76 	bmi.w	800c084 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c198:	4a3a      	ldr	r2, [pc, #232]	; (800c284 <HAL_RCC_OscConfig+0x290>)
 800c19a:	6812      	ldr	r2, [r2, #0]
 800c19c:	0795      	lsls	r5, r2, #30
 800c19e:	d544      	bpl.n	800c22a <HAL_RCC_OscConfig+0x236>
 800c1a0:	68e2      	ldr	r2, [r4, #12]
 800c1a2:	2a01      	cmp	r2, #1
 800c1a4:	d041      	beq.n	800c22a <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800c1a6:	2001      	movs	r0, #1
}
 800c1a8:	b002      	add	sp, #8
 800c1aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800c1ae:	4a36      	ldr	r2, [pc, #216]	; (800c288 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c1b0:	4e34      	ldr	r6, [pc, #208]	; (800c284 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800c1b2:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c1b6:	f7fd fefb 	bl	8009fb0 <HAL_GetTick>
 800c1ba:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c1bc:	e004      	b.n	800c1c8 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c1be:	f7fd fef7 	bl	8009fb0 <HAL_GetTick>
 800c1c2:	1b40      	subs	r0, r0, r5
 800c1c4:	2802      	cmp	r0, #2
 800c1c6:	d84c      	bhi.n	800c262 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c1c8:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c1ca:	079f      	lsls	r7, r3, #30
 800c1cc:	d4f7      	bmi.n	800c1be <HAL_RCC_OscConfig+0x1ca>
 800c1ce:	e7dd      	b.n	800c18c <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800c1d0:	9301      	str	r3, [sp, #4]
 800c1d2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c1d4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800c1d8:	6413      	str	r3, [r2, #64]	; 0x40
 800c1da:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c1dc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c1e0:	9301      	str	r3, [sp, #4]
 800c1e2:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800c1e4:	2501      	movs	r5, #1
 800c1e6:	e774      	b.n	800c0d2 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c1e8:	684a      	ldr	r2, [r1, #4]
 800c1ea:	0250      	lsls	r0, r2, #9
 800c1ec:	f57f af19 	bpl.w	800c022 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800c1f0:	4a24      	ldr	r2, [pc, #144]	; (800c284 <HAL_RCC_OscConfig+0x290>)
 800c1f2:	6812      	ldr	r2, [r2, #0]
 800c1f4:	0391      	lsls	r1, r2, #14
 800c1f6:	f57f af37 	bpl.w	800c068 <HAL_RCC_OscConfig+0x74>
 800c1fa:	6862      	ldr	r2, [r4, #4]
 800c1fc:	2a00      	cmp	r2, #0
 800c1fe:	f47f af33 	bne.w	800c068 <HAL_RCC_OscConfig+0x74>
 800c202:	e7d0      	b.n	800c1a6 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c204:	4a1f      	ldr	r2, [pc, #124]	; (800c284 <HAL_RCC_OscConfig+0x290>)
 800c206:	6813      	ldr	r3, [r2, #0]
 800c208:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800c20c:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c20e:	f7fd fecf 	bl	8009fb0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c212:	4e1c      	ldr	r6, [pc, #112]	; (800c284 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800c214:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c216:	e004      	b.n	800c222 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c218:	f7fd feca 	bl	8009fb0 <HAL_GetTick>
 800c21c:	1b40      	subs	r0, r0, r5
 800c21e:	2864      	cmp	r0, #100	; 0x64
 800c220:	d81f      	bhi.n	800c262 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c222:	6833      	ldr	r3, [r6, #0]
 800c224:	039a      	lsls	r2, r3, #14
 800c226:	d5f7      	bpl.n	800c218 <HAL_RCC_OscConfig+0x224>
 800c228:	e71d      	b.n	800c066 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c22a:	4916      	ldr	r1, [pc, #88]	; (800c284 <HAL_RCC_OscConfig+0x290>)
 800c22c:	6920      	ldr	r0, [r4, #16]
 800c22e:	680a      	ldr	r2, [r1, #0]
 800c230:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800c234:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800c238:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c23a:	071a      	lsls	r2, r3, #28
 800c23c:	f57f af41 	bpl.w	800c0c2 <HAL_RCC_OscConfig+0xce>
 800c240:	e791      	b.n	800c166 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800c242:	6833      	ldr	r3, [r6, #0]
 800c244:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c248:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800c24a:	f7fd feb1 	bl	8009fb0 <HAL_GetTick>
 800c24e:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c250:	6833      	ldr	r3, [r6, #0]
 800c252:	05da      	lsls	r2, r3, #23
 800c254:	f53f af42 	bmi.w	800c0dc <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800c258:	f7fd feaa 	bl	8009fb0 <HAL_GetTick>
 800c25c:	1bc0      	subs	r0, r0, r7
 800c25e:	2802      	cmp	r0, #2
 800c260:	d9f6      	bls.n	800c250 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800c262:	2003      	movs	r0, #3
}
 800c264:	b002      	add	sp, #8
 800c266:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c26a:	4a06      	ldr	r2, [pc, #24]	; (800c284 <HAL_RCC_OscConfig+0x290>)
 800c26c:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800c26e:	f043 0301 	orr.w	r3, r3, #1
 800c272:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800c274:	f7fd fe9c 	bl	8009fb0 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c278:	4f02      	ldr	r7, [pc, #8]	; (800c284 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800c27a:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c27c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c280:	e00b      	b.n	800c29a <HAL_RCC_OscConfig+0x2a6>
 800c282:	bf00      	nop
 800c284:	40023800 	.word	0x40023800
 800c288:	42470000 	.word	0x42470000
 800c28c:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c290:	f7fd fe8e 	bl	8009fb0 <HAL_GetTick>
 800c294:	1b80      	subs	r0, r0, r6
 800c296:	4540      	cmp	r0, r8
 800c298:	d8e3      	bhi.n	800c262 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c29a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c29c:	079b      	lsls	r3, r3, #30
 800c29e:	d5f7      	bpl.n	800c290 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800c2a0:	2d00      	cmp	r5, #0
 800c2a2:	f43f af40 	beq.w	800c126 <HAL_RCC_OscConfig+0x132>
 800c2a6:	e044      	b.n	800c332 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800c2a8:	4a42      	ldr	r2, [pc, #264]	; (800c3b4 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c2aa:	4e43      	ldr	r6, [pc, #268]	; (800c3b8 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800c2ac:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c2ae:	f7fd fe7f 	bl	8009fb0 <HAL_GetTick>
 800c2b2:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c2b4:	e004      	b.n	800c2c0 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c2b6:	f7fd fe7b 	bl	8009fb0 <HAL_GetTick>
 800c2ba:	1b40      	subs	r0, r0, r5
 800c2bc:	2802      	cmp	r0, #2
 800c2be:	d8d0      	bhi.n	800c262 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c2c0:	6833      	ldr	r3, [r6, #0]
 800c2c2:	0799      	lsls	r1, r3, #30
 800c2c4:	d4f7      	bmi.n	800c2b6 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c2c6:	6823      	ldr	r3, [r4, #0]
 800c2c8:	e6f9      	b.n	800c0be <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800c2ca:	2801      	cmp	r0, #1
 800c2cc:	f43f af48 	beq.w	800c160 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800c2d0:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c2d2:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c2d4:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c2d8:	4291      	cmp	r1, r2
 800c2da:	f47f af64 	bne.w	800c1a6 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c2de:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c2e0:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c2e4:	4291      	cmp	r1, r2
 800c2e6:	f47f af5e 	bne.w	800c1a6 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c2ea:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c2ec:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800c2f0:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c2f2:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800c2f6:	f47f af56 	bne.w	800c1a6 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c2fa:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c2fc:	0852      	lsrs	r2, r2, #1
 800c2fe:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800c302:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c304:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800c308:	f47f af4d 	bne.w	800c1a6 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800c30c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c30e:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c312:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800c316:	bf14      	ite	ne
 800c318:	2001      	movne	r0, #1
 800c31a:	2000      	moveq	r0, #0
 800c31c:	e720      	b.n	800c160 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c31e:	4b26      	ldr	r3, [pc, #152]	; (800c3b8 <HAL_RCC_OscConfig+0x3c4>)
 800c320:	681a      	ldr	r2, [r3, #0]
 800c322:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800c326:	601a      	str	r2, [r3, #0]
 800c328:	681a      	ldr	r2, [r3, #0]
 800c32a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c32e:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c330:	e76d      	b.n	800c20e <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c332:	4a21      	ldr	r2, [pc, #132]	; (800c3b8 <HAL_RCC_OscConfig+0x3c4>)
 800c334:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c336:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c33a:	6413      	str	r3, [r2, #64]	; 0x40
 800c33c:	e6f3      	b.n	800c126 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800c33e:	2001      	movs	r0, #1
}
 800c340:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c342:	4b1d      	ldr	r3, [pc, #116]	; (800c3b8 <HAL_RCC_OscConfig+0x3c4>)
 800c344:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c346:	f042 0204 	orr.w	r2, r2, #4
 800c34a:	671a      	str	r2, [r3, #112]	; 0x70
 800c34c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c34e:	f042 0201 	orr.w	r2, r2, #1
 800c352:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c354:	e78e      	b.n	800c274 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800c356:	f7fd fe2b 	bl	8009fb0 <HAL_GetTick>
 800c35a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c35c:	e005      	b.n	800c36a <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c35e:	f7fd fe27 	bl	8009fb0 <HAL_GetTick>
 800c362:	1b80      	subs	r0, r0, r6
 800c364:	2802      	cmp	r0, #2
 800c366:	f63f af7c 	bhi.w	800c262 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c36a:	682b      	ldr	r3, [r5, #0]
 800c36c:	0199      	lsls	r1, r3, #6
 800c36e:	d4f6      	bmi.n	800c35e <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c370:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800c374:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c376:	430b      	orrs	r3, r1
 800c378:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c37c:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800c380:	0852      	lsrs	r2, r2, #1
 800c382:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800c386:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800c388:	490a      	ldr	r1, [pc, #40]	; (800c3b4 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c38a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800c38e:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c390:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c392:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800c394:	f7fd fe0c 	bl	8009fb0 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c398:	4d07      	ldr	r5, [pc, #28]	; (800c3b8 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800c39a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c39c:	e005      	b.n	800c3aa <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c39e:	f7fd fe07 	bl	8009fb0 <HAL_GetTick>
 800c3a2:	1b00      	subs	r0, r0, r4
 800c3a4:	2802      	cmp	r0, #2
 800c3a6:	f63f af5c 	bhi.w	800c262 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c3aa:	682b      	ldr	r3, [r5, #0]
 800c3ac:	019a      	lsls	r2, r3, #6
 800c3ae:	d5f6      	bpl.n	800c39e <HAL_RCC_OscConfig+0x3aa>
 800c3b0:	e6d5      	b.n	800c15e <HAL_RCC_OscConfig+0x16a>
 800c3b2:	bf00      	nop
 800c3b4:	42470000 	.word	0x42470000
 800c3b8:	40023800 	.word	0x40023800

0800c3bc <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c3bc:	4916      	ldr	r1, [pc, #88]	; (800c418 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800c3be:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c3c0:	688b      	ldr	r3, [r1, #8]
 800c3c2:	f003 030c 	and.w	r3, r3, #12
 800c3c6:	2b04      	cmp	r3, #4
 800c3c8:	d01b      	beq.n	800c402 <HAL_RCC_GetSysClockFreq+0x46>
 800c3ca:	2b08      	cmp	r3, #8
 800c3cc:	d117      	bne.n	800c3fe <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c3ce:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c3d0:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c3d2:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c3d4:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c3d8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c3dc:	d113      	bne.n	800c406 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c3de:	480f      	ldr	r0, [pc, #60]	; (800c41c <HAL_RCC_GetSysClockFreq+0x60>)
 800c3e0:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c3e4:	fba1 0100 	umull	r0, r1, r1, r0
 800c3e8:	f7f4 fae8 	bl	80009bc <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800c3ec:	4b0a      	ldr	r3, [pc, #40]	; (800c418 <HAL_RCC_GetSysClockFreq+0x5c>)
 800c3ee:	685b      	ldr	r3, [r3, #4]
 800c3f0:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800c3f4:	3301      	adds	r3, #1
 800c3f6:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800c3f8:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800c3fc:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800c3fe:	4807      	ldr	r0, [pc, #28]	; (800c41c <HAL_RCC_GetSysClockFreq+0x60>)
}
 800c400:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c402:	4807      	ldr	r0, [pc, #28]	; (800c420 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800c404:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c406:	4806      	ldr	r0, [pc, #24]	; (800c420 <HAL_RCC_GetSysClockFreq+0x64>)
 800c408:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c40c:	2300      	movs	r3, #0
 800c40e:	fba1 0100 	umull	r0, r1, r1, r0
 800c412:	f7f4 fad3 	bl	80009bc <__aeabi_uldivmod>
 800c416:	e7e9      	b.n	800c3ec <HAL_RCC_GetSysClockFreq+0x30>
 800c418:	40023800 	.word	0x40023800
 800c41c:	00f42400 	.word	0x00f42400
 800c420:	007a1200 	.word	0x007a1200

0800c424 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800c424:	2800      	cmp	r0, #0
 800c426:	f000 8087 	beq.w	800c538 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c42a:	4a48      	ldr	r2, [pc, #288]	; (800c54c <HAL_RCC_ClockConfig+0x128>)
 800c42c:	6813      	ldr	r3, [r2, #0]
 800c42e:	f003 030f 	and.w	r3, r3, #15
 800c432:	428b      	cmp	r3, r1
{
 800c434:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c438:	460d      	mov	r5, r1
 800c43a:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c43c:	d209      	bcs.n	800c452 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c43e:	b2cb      	uxtb	r3, r1
 800c440:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c442:	6813      	ldr	r3, [r2, #0]
 800c444:	f003 030f 	and.w	r3, r3, #15
 800c448:	428b      	cmp	r3, r1
 800c44a:	d002      	beq.n	800c452 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800c44c:	2001      	movs	r0, #1
}
 800c44e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800c452:	6823      	ldr	r3, [r4, #0]
 800c454:	0798      	lsls	r0, r3, #30
 800c456:	d514      	bpl.n	800c482 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c458:	0759      	lsls	r1, r3, #29
 800c45a:	d504      	bpl.n	800c466 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800c45c:	493c      	ldr	r1, [pc, #240]	; (800c550 <HAL_RCC_ClockConfig+0x12c>)
 800c45e:	688a      	ldr	r2, [r1, #8]
 800c460:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800c464:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c466:	071a      	lsls	r2, r3, #28
 800c468:	d504      	bpl.n	800c474 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800c46a:	4939      	ldr	r1, [pc, #228]	; (800c550 <HAL_RCC_ClockConfig+0x12c>)
 800c46c:	688a      	ldr	r2, [r1, #8]
 800c46e:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800c472:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800c474:	4936      	ldr	r1, [pc, #216]	; (800c550 <HAL_RCC_ClockConfig+0x12c>)
 800c476:	68a0      	ldr	r0, [r4, #8]
 800c478:	688a      	ldr	r2, [r1, #8]
 800c47a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800c47e:	4302      	orrs	r2, r0
 800c480:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800c482:	07df      	lsls	r7, r3, #31
 800c484:	d521      	bpl.n	800c4ca <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800c486:	6862      	ldr	r2, [r4, #4]
 800c488:	2a01      	cmp	r2, #1
 800c48a:	d057      	beq.n	800c53c <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c48c:	1e93      	subs	r3, r2, #2
 800c48e:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c490:	4b2f      	ldr	r3, [pc, #188]	; (800c550 <HAL_RCC_ClockConfig+0x12c>)
 800c492:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c494:	d94d      	bls.n	800c532 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c496:	0799      	lsls	r1, r3, #30
 800c498:	d5d8      	bpl.n	800c44c <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800c49a:	4e2d      	ldr	r6, [pc, #180]	; (800c550 <HAL_RCC_ClockConfig+0x12c>)
 800c49c:	68b3      	ldr	r3, [r6, #8]
 800c49e:	f023 0303 	bic.w	r3, r3, #3
 800c4a2:	4313      	orrs	r3, r2
 800c4a4:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800c4a6:	f7fd fd83 	bl	8009fb0 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c4aa:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800c4ae:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c4b0:	e004      	b.n	800c4bc <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c4b2:	f7fd fd7d 	bl	8009fb0 <HAL_GetTick>
 800c4b6:	1bc0      	subs	r0, r0, r7
 800c4b8:	4540      	cmp	r0, r8
 800c4ba:	d844      	bhi.n	800c546 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c4bc:	68b3      	ldr	r3, [r6, #8]
 800c4be:	6862      	ldr	r2, [r4, #4]
 800c4c0:	f003 030c 	and.w	r3, r3, #12
 800c4c4:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800c4c8:	d1f3      	bne.n	800c4b2 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800c4ca:	4a20      	ldr	r2, [pc, #128]	; (800c54c <HAL_RCC_ClockConfig+0x128>)
 800c4cc:	6813      	ldr	r3, [r2, #0]
 800c4ce:	f003 030f 	and.w	r3, r3, #15
 800c4d2:	42ab      	cmp	r3, r5
 800c4d4:	d906      	bls.n	800c4e4 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c4d6:	b2eb      	uxtb	r3, r5
 800c4d8:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c4da:	6813      	ldr	r3, [r2, #0]
 800c4dc:	f003 030f 	and.w	r3, r3, #15
 800c4e0:	42ab      	cmp	r3, r5
 800c4e2:	d1b3      	bne.n	800c44c <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c4e4:	6823      	ldr	r3, [r4, #0]
 800c4e6:	075a      	lsls	r2, r3, #29
 800c4e8:	d506      	bpl.n	800c4f8 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800c4ea:	4919      	ldr	r1, [pc, #100]	; (800c550 <HAL_RCC_ClockConfig+0x12c>)
 800c4ec:	68e0      	ldr	r0, [r4, #12]
 800c4ee:	688a      	ldr	r2, [r1, #8]
 800c4f0:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800c4f4:	4302      	orrs	r2, r0
 800c4f6:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c4f8:	071b      	lsls	r3, r3, #28
 800c4fa:	d507      	bpl.n	800c50c <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800c4fc:	4a14      	ldr	r2, [pc, #80]	; (800c550 <HAL_RCC_ClockConfig+0x12c>)
 800c4fe:	6921      	ldr	r1, [r4, #16]
 800c500:	6893      	ldr	r3, [r2, #8]
 800c502:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800c506:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c50a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c50c:	f7ff ff56 	bl	800c3bc <HAL_RCC_GetSysClockFreq>
 800c510:	4a0f      	ldr	r2, [pc, #60]	; (800c550 <HAL_RCC_ClockConfig+0x12c>)
 800c512:	4c10      	ldr	r4, [pc, #64]	; (800c554 <HAL_RCC_ClockConfig+0x130>)
 800c514:	6892      	ldr	r2, [r2, #8]
 800c516:	4910      	ldr	r1, [pc, #64]	; (800c558 <HAL_RCC_ClockConfig+0x134>)
 800c518:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800c51c:	4603      	mov	r3, r0
 800c51e:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800c520:	480e      	ldr	r0, [pc, #56]	; (800c55c <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c522:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800c524:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c526:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800c528:	f7f5 fdb4 	bl	8002094 <HAL_InitTick>
  return HAL_OK;
 800c52c:	2000      	movs	r0, #0
}
 800c52e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c532:	0198      	lsls	r0, r3, #6
 800c534:	d4b1      	bmi.n	800c49a <HAL_RCC_ClockConfig+0x76>
 800c536:	e789      	b.n	800c44c <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800c538:	2001      	movs	r0, #1
}
 800c53a:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c53c:	4b04      	ldr	r3, [pc, #16]	; (800c550 <HAL_RCC_ClockConfig+0x12c>)
 800c53e:	681b      	ldr	r3, [r3, #0]
 800c540:	039e      	lsls	r6, r3, #14
 800c542:	d4aa      	bmi.n	800c49a <HAL_RCC_ClockConfig+0x76>
 800c544:	e782      	b.n	800c44c <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800c546:	2003      	movs	r0, #3
 800c548:	e781      	b.n	800c44e <HAL_RCC_ClockConfig+0x2a>
 800c54a:	bf00      	nop
 800c54c:	40023c00 	.word	0x40023c00
 800c550:	40023800 	.word	0x40023800
 800c554:	0802eaa8 	.word	0x0802eaa8
 800c558:	20000078 	.word	0x20000078
 800c55c:	20000080 	.word	0x20000080

0800c560 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c560:	4b04      	ldr	r3, [pc, #16]	; (800c574 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800c562:	4905      	ldr	r1, [pc, #20]	; (800c578 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c564:	689b      	ldr	r3, [r3, #8]
 800c566:	4a05      	ldr	r2, [pc, #20]	; (800c57c <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c568:	6808      	ldr	r0, [r1, #0]
 800c56a:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c56e:	5cd3      	ldrb	r3, [r2, r3]
}
 800c570:	40d8      	lsrs	r0, r3
 800c572:	4770      	bx	lr
 800c574:	40023800 	.word	0x40023800
 800c578:	20000078 	.word	0x20000078
 800c57c:	0802eab8 	.word	0x0802eab8

0800c580 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c580:	4b0e      	ldr	r3, [pc, #56]	; (800c5bc <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c582:	220f      	movs	r2, #15
 800c584:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c586:	689a      	ldr	r2, [r3, #8]
 800c588:	f002 0203 	and.w	r2, r2, #3
 800c58c:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c58e:	689a      	ldr	r2, [r3, #8]
 800c590:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c594:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c596:	689a      	ldr	r2, [r3, #8]
 800c598:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c59c:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c59e:	689b      	ldr	r3, [r3, #8]
 800c5a0:	08db      	lsrs	r3, r3, #3
{
 800c5a2:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c5a4:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c5a8:	4c05      	ldr	r4, [pc, #20]	; (800c5c0 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c5aa:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c5ac:	6823      	ldr	r3, [r4, #0]
}
 800c5ae:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c5b2:	f003 030f 	and.w	r3, r3, #15
 800c5b6:	600b      	str	r3, [r1, #0]
}
 800c5b8:	4770      	bx	lr
 800c5ba:	bf00      	nop
 800c5bc:	40023800 	.word	0x40023800
 800c5c0:	40023c00 	.word	0x40023c00

0800c5c4 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c5c4:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800c5c6:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c5c8:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800c5cc:	b083      	sub	sp, #12
 800c5ce:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c5d0:	d111      	bne.n	800c5f6 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c5d2:	f013 0f0c 	tst.w	r3, #12
 800c5d6:	d16f      	bne.n	800c6b8 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c5d8:	0698      	lsls	r0, r3, #26
 800c5da:	f100 80c2 	bmi.w	800c762 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c5de:	f013 0310 	ands.w	r3, r3, #16
 800c5e2:	f000 80bb 	beq.w	800c75c <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c5e6:	4b89      	ldr	r3, [pc, #548]	; (800c80c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800c5e8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800c5ec:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800c5f0:	2000      	movs	r0, #0
}
 800c5f2:	b003      	add	sp, #12
 800c5f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800c5f6:	4b86      	ldr	r3, [pc, #536]	; (800c810 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c5f8:	4e86      	ldr	r6, [pc, #536]	; (800c814 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c5fa:	2200      	movs	r2, #0
 800c5fc:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c5fe:	f7fd fcd7 	bl	8009fb0 <HAL_GetTick>
 800c602:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c604:	e004      	b.n	800c610 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c606:	f7fd fcd3 	bl	8009fb0 <HAL_GetTick>
 800c60a:	1b43      	subs	r3, r0, r5
 800c60c:	2b02      	cmp	r3, #2
 800c60e:	d850      	bhi.n	800c6b2 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c610:	6833      	ldr	r3, [r6, #0]
 800c612:	0118      	lsls	r0, r3, #4
 800c614:	d4f7      	bmi.n	800c606 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c616:	6823      	ldr	r3, [r4, #0]
 800c618:	07d9      	lsls	r1, r3, #31
 800c61a:	d506      	bpl.n	800c62a <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c61c:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800c620:	0712      	lsls	r2, r2, #28
 800c622:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800c626:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c62a:	079a      	lsls	r2, r3, #30
 800c62c:	d515      	bpl.n	800c65a <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c62e:	4979      	ldr	r1, [pc, #484]	; (800c814 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c630:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c632:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c636:	6865      	ldr	r5, [r4, #4]
 800c638:	0612      	lsls	r2, r2, #24
 800c63a:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c63e:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800c642:	4302      	orrs	r2, r0
 800c644:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c648:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800c64c:	69e2      	ldr	r2, [r4, #28]
 800c64e:	f020 001f 	bic.w	r0, r0, #31
 800c652:	3a01      	subs	r2, #1
 800c654:	4302      	orrs	r2, r0
 800c656:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c65a:	065b      	lsls	r3, r3, #25
 800c65c:	d509      	bpl.n	800c672 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c65e:	1d20      	adds	r0, r4, #4
 800c660:	c80b      	ldmia	r0, {r0, r1, r3}
 800c662:	061b      	lsls	r3, r3, #24
 800c664:	4a6b      	ldr	r2, [pc, #428]	; (800c814 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c666:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c66a:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800c66e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c672:	4b67      	ldr	r3, [pc, #412]	; (800c810 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c674:	4e67      	ldr	r6, [pc, #412]	; (800c814 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c676:	2201      	movs	r2, #1
 800c678:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c67a:	f7fd fc99 	bl	8009fb0 <HAL_GetTick>
 800c67e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c680:	e004      	b.n	800c68c <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c682:	f7fd fc95 	bl	8009fb0 <HAL_GetTick>
 800c686:	1b40      	subs	r0, r0, r5
 800c688:	2802      	cmp	r0, #2
 800c68a:	d812      	bhi.n	800c6b2 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c68c:	6833      	ldr	r3, [r6, #0]
 800c68e:	011f      	lsls	r7, r3, #4
 800c690:	d5f7      	bpl.n	800c682 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c692:	6823      	ldr	r3, [r4, #0]
 800c694:	e79d      	b.n	800c5d2 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800c696:	f7fd fc8b 	bl	8009fb0 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c69a:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c69e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c6a0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c6a2:	079b      	lsls	r3, r3, #30
 800c6a4:	f100 80a5 	bmi.w	800c7f2 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c6a8:	f7fd fc82 	bl	8009fb0 <HAL_GetTick>
 800c6ac:	1b80      	subs	r0, r0, r6
 800c6ae:	42b8      	cmp	r0, r7
 800c6b0:	d9f6      	bls.n	800c6a0 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800c6b2:	2003      	movs	r0, #3
}
 800c6b4:	b003      	add	sp, #12
 800c6b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800c6b8:	4b55      	ldr	r3, [pc, #340]	; (800c810 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c6ba:	4e56      	ldr	r6, [pc, #344]	; (800c814 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c6bc:	2200      	movs	r2, #0
 800c6be:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c6c0:	f7fd fc76 	bl	8009fb0 <HAL_GetTick>
 800c6c4:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c6c6:	e004      	b.n	800c6d2 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c6c8:	f7fd fc72 	bl	8009fb0 <HAL_GetTick>
 800c6cc:	1b43      	subs	r3, r0, r5
 800c6ce:	2b02      	cmp	r3, #2
 800c6d0:	d8ef      	bhi.n	800c6b2 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c6d2:	6833      	ldr	r3, [r6, #0]
 800c6d4:	0098      	lsls	r0, r3, #2
 800c6d6:	d4f7      	bmi.n	800c6c8 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c6d8:	6822      	ldr	r2, [r4, #0]
 800c6da:	0751      	lsls	r1, r2, #29
 800c6dc:	d515      	bpl.n	800c70a <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c6de:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c6e0:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c6e4:	6920      	ldr	r0, [r4, #16]
 800c6e6:	061b      	lsls	r3, r3, #24
 800c6e8:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c6ec:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c6f0:	430b      	orrs	r3, r1
 800c6f2:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c6f6:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c6fa:	6a21      	ldr	r1, [r4, #32]
 800c6fc:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c700:	3901      	subs	r1, #1
 800c702:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c706:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c70a:	0713      	lsls	r3, r2, #28
 800c70c:	d514      	bpl.n	800c738 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c70e:	4a41      	ldr	r2, [pc, #260]	; (800c814 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c710:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c712:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c716:	6920      	ldr	r0, [r4, #16]
 800c718:	071b      	lsls	r3, r3, #28
 800c71a:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800c71e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c722:	430b      	orrs	r3, r1
 800c724:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c728:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c72c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c72e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c732:	430b      	orrs	r3, r1
 800c734:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800c738:	4b35      	ldr	r3, [pc, #212]	; (800c810 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c73a:	4e36      	ldr	r6, [pc, #216]	; (800c814 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c73c:	2201      	movs	r2, #1
 800c73e:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c740:	f7fd fc36 	bl	8009fb0 <HAL_GetTick>
 800c744:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c746:	e004      	b.n	800c752 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c748:	f7fd fc32 	bl	8009fb0 <HAL_GetTick>
 800c74c:	1b40      	subs	r0, r0, r5
 800c74e:	2802      	cmp	r0, #2
 800c750:	d8af      	bhi.n	800c6b2 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c752:	6833      	ldr	r3, [r6, #0]
 800c754:	009f      	lsls	r7, r3, #2
 800c756:	d5f7      	bpl.n	800c748 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c758:	6823      	ldr	r3, [r4, #0]
 800c75a:	e73d      	b.n	800c5d8 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800c75c:	4618      	mov	r0, r3
}
 800c75e:	b003      	add	sp, #12
 800c760:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800c762:	4b2c      	ldr	r3, [pc, #176]	; (800c814 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800c764:	4d2c      	ldr	r5, [pc, #176]	; (800c818 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c766:	2200      	movs	r2, #0
 800c768:	9201      	str	r2, [sp, #4]
 800c76a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c76c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c770:	641a      	str	r2, [r3, #64]	; 0x40
 800c772:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c774:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c778:	9301      	str	r3, [sp, #4]
 800c77a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c77c:	682b      	ldr	r3, [r5, #0]
 800c77e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c782:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c784:	f7fd fc14 	bl	8009fb0 <HAL_GetTick>
 800c788:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c78a:	e004      	b.n	800c796 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c78c:	f7fd fc10 	bl	8009fb0 <HAL_GetTick>
 800c790:	1b83      	subs	r3, r0, r6
 800c792:	2b02      	cmp	r3, #2
 800c794:	d88d      	bhi.n	800c6b2 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c796:	682b      	ldr	r3, [r5, #0]
 800c798:	05d9      	lsls	r1, r3, #23
 800c79a:	d5f7      	bpl.n	800c78c <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c79c:	4d1d      	ldr	r5, [pc, #116]	; (800c814 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c79e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c7a0:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c7a2:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800c7a6:	d111      	bne.n	800c7cc <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c7a8:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c7ac:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c7b0:	d021      	beq.n	800c7f6 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800c7b2:	4918      	ldr	r1, [pc, #96]	; (800c814 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c7b4:	688a      	ldr	r2, [r1, #8]
 800c7b6:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c7ba:	608a      	str	r2, [r1, #8]
 800c7bc:	4a15      	ldr	r2, [pc, #84]	; (800c814 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c7be:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c7c0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c7c4:	430b      	orrs	r3, r1
 800c7c6:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c7c8:	6823      	ldr	r3, [r4, #0]
 800c7ca:	e708      	b.n	800c5de <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c7cc:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800c7d0:	4291      	cmp	r1, r2
 800c7d2:	d0eb      	beq.n	800c7ac <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c7d4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c7d6:	4a0e      	ldr	r2, [pc, #56]	; (800c810 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800c7d8:	2101      	movs	r1, #1
 800c7da:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c7de:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c7e2:	2100      	movs	r1, #0
 800c7e4:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c7e8:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c7ea:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c7ec:	07da      	lsls	r2, r3, #31
 800c7ee:	f53f af52 	bmi.w	800c696 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c7f2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c7f4:	e7d8      	b.n	800c7a8 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800c7f6:	4807      	ldr	r0, [pc, #28]	; (800c814 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c7f8:	6882      	ldr	r2, [r0, #8]
 800c7fa:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800c7fe:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800c802:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c806:	430a      	orrs	r2, r1
 800c808:	6082      	str	r2, [r0, #8]
 800c80a:	e7d7      	b.n	800c7bc <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800c80c:	42471000 	.word	0x42471000
 800c810:	42470000 	.word	0x42470000
 800c814:	40023800 	.word	0x40023800
 800c818:	40007000 	.word	0x40007000

0800c81c <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c81c:	b1f0      	cbz	r0, 800c85c <HAL_SDRAM_Init+0x40>
{
 800c81e:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c820:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c824:	460d      	mov	r5, r1
 800c826:	4604      	mov	r4, r0
 800c828:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c82c:	b18b      	cbz	r3, 800c852 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c82e:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c830:	2302      	movs	r3, #2
 800c832:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c836:	f851 0b04 	ldr.w	r0, [r1], #4
 800c83a:	f000 fe51 	bl	800d4e0 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c83e:	e9d4 0200 	ldrd	r0, r2, [r4]
 800c842:	4629      	mov	r1, r5
 800c844:	f000 fe8a 	bl	800d55c <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c848:	2301      	movs	r3, #1
 800c84a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c84e:	2000      	movs	r0, #0
}
 800c850:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800c852:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800c856:	f7f5 fbb5 	bl	8001fc4 <HAL_SDRAM_MspInit>
 800c85a:	e7e8      	b.n	800c82e <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800c85c:	2001      	movs	r0, #1
}
 800c85e:	4770      	bx	lr

0800c860 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c860:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c862:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c866:	2b02      	cmp	r3, #2
{
 800c868:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c86a:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c86c:	d004      	beq.n	800c878 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c86e:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800c872:	2c01      	cmp	r4, #1
 800c874:	d001      	beq.n	800c87a <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800c876:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c878:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c87a:	460e      	mov	r6, r1
 800c87c:	2302      	movs	r3, #2
 800c87e:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c882:	6828      	ldr	r0, [r5, #0]
 800c884:	f000 feb6 	bl	800d5f4 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c888:	6833      	ldr	r3, [r6, #0]
 800c88a:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c88c:	bf06      	itte	eq
 800c88e:	2305      	moveq	r3, #5
 800c890:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c894:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800c898:	2000      	movs	r0, #0
}
 800c89a:	bd70      	pop	{r4, r5, r6, pc}

0800c89c <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c89c:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c89e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c8a2:	2b02      	cmp	r3, #2
{
 800c8a4:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c8a6:	b2d8      	uxtb	r0, r3
 800c8a8:	d005      	beq.n	800c8b6 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c8aa:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c8ae:	2b01      	cmp	r3, #1
 800c8b0:	b2dd      	uxtb	r5, r3
 800c8b2:	d001      	beq.n	800c8b8 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800c8b4:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c8b6:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c8b8:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c8ba:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c8bc:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c8c0:	f000 fec2 	bl	800d648 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c8c4:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800c8c8:	2000      	movs	r0, #0
}
 800c8ca:	bd38      	pop	{r3, r4, r5, pc}

0800c8cc <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800c8cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c8d0:	b082      	sub	sp, #8
 800c8d2:	461d      	mov	r5, r3
 800c8d4:	4616      	mov	r6, r2
 800c8d6:	460c      	mov	r4, r1
 800c8d8:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800c8da:	f7fd fb69 	bl	8009fb0 <HAL_GetTick>
 800c8de:	4435      	add	r5, r6
 800c8e0:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800c8e2:	f7fd fb65 	bl	8009fb0 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c8e6:	4b27      	ldr	r3, [pc, #156]	; (800c984 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800c8e8:	681b      	ldr	r3, [r3, #0]
 800c8ea:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800c8ee:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800c8f2:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c8f4:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c8f6:	1c73      	adds	r3, r6, #1
 800c8f8:	6839      	ldr	r1, [r7, #0]
 800c8fa:	d107      	bne.n	800c90c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800c8fc:	688b      	ldr	r3, [r1, #8]
 800c8fe:	ea34 0303 	bics.w	r3, r4, r3
 800c902:	d0fb      	beq.n	800c8fc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800c904:	2000      	movs	r0, #0
}
 800c906:	b002      	add	sp, #8
 800c908:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c90c:	688b      	ldr	r3, [r1, #8]
 800c90e:	ea34 0303 	bics.w	r3, r4, r3
 800c912:	d1f7      	bne.n	800c904 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800c914:	f7fd fb4c 	bl	8009fb0 <HAL_GetTick>
 800c918:	eba0 0008 	sub.w	r0, r0, r8
 800c91c:	42a8      	cmp	r0, r5
 800c91e:	d208      	bcs.n	800c932 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800c920:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800c922:	2b00      	cmp	r3, #0
      count--;
 800c924:	9b01      	ldr	r3, [sp, #4]
 800c926:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800c92a:	bf08      	it	eq
 800c92c:	2500      	moveq	r5, #0
      count--;
 800c92e:	9301      	str	r3, [sp, #4]
 800c930:	e7e1      	b.n	800c8f6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c932:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c936:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c938:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c93c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800c940:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c942:	d013      	beq.n	800c96c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800c944:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800c946:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800c94a:	d107      	bne.n	800c95c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800c94c:	681a      	ldr	r2, [r3, #0]
 800c94e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c952:	601a      	str	r2, [r3, #0]
 800c954:	681a      	ldr	r2, [r3, #0]
 800c956:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800c95a:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800c95c:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800c95e:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800c960:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800c964:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800c968:	2003      	movs	r0, #3
 800c96a:	e7cc      	b.n	800c906 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c96c:	68ba      	ldr	r2, [r7, #8]
 800c96e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c972:	d002      	beq.n	800c97a <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c974:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c978:	d1e4      	bne.n	800c944 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800c97a:	681a      	ldr	r2, [r3, #0]
 800c97c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c980:	601a      	str	r2, [r3, #0]
 800c982:	e7df      	b.n	800c944 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800c984:	20000078 	.word	0x20000078

0800c988 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800c988:	b538      	push	{r3, r4, r5, lr}
 800c98a:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c98c:	6842      	ldr	r2, [r0, #4]
 800c98e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800c992:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c994:	d006      	beq.n	800c9a4 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c996:	460a      	mov	r2, r1
 800c998:	2101      	movs	r1, #1
 800c99a:	f7ff ff97 	bl	800c8cc <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c99e:	b978      	cbnz	r0, 800c9c0 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800c9a0:	2000      	movs	r0, #0
}
 800c9a2:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c9a4:	6882      	ldr	r2, [r0, #8]
 800c9a6:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c9aa:	d01c      	beq.n	800c9e6 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c9ac:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c9b0:	d00c      	beq.n	800c9cc <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c9b2:	460a      	mov	r2, r1
 800c9b4:	4620      	mov	r0, r4
 800c9b6:	2180      	movs	r1, #128	; 0x80
 800c9b8:	f7ff ff88 	bl	800c8cc <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c9bc:	2800      	cmp	r0, #0
 800c9be:	d0ef      	beq.n	800c9a0 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c9c0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800c9c2:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800c9c6:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c9c8:	6563      	str	r3, [r4, #84]	; 0x54
}
 800c9ca:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800c9cc:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c9ce:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800c9d0:	6829      	ldr	r1, [r5, #0]
 800c9d2:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c9d6:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c9d8:	2101      	movs	r1, #1
 800c9da:	f7ff ff77 	bl	800c8cc <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c9de:	2800      	cmp	r0, #0
 800c9e0:	d1ee      	bne.n	800c9c0 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800c9e2:	2000      	movs	r0, #0
 800c9e4:	e7dd      	b.n	800c9a2 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800c9e6:	6800      	ldr	r0, [r0, #0]
 800c9e8:	6802      	ldr	r2, [r0, #0]
 800c9ea:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c9ee:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c9f0:	460a      	mov	r2, r1
 800c9f2:	4620      	mov	r0, r4
 800c9f4:	2180      	movs	r1, #128	; 0x80
 800c9f6:	f7ff ff69 	bl	800c8cc <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c9fa:	2800      	cmp	r0, #0
 800c9fc:	d0d0      	beq.n	800c9a0 <SPI_EndRxTransaction+0x18>
 800c9fe:	e7df      	b.n	800c9c0 <SPI_EndRxTransaction+0x38>

0800ca00 <HAL_SPI_Init>:
  if (hspi == NULL)
 800ca00:	2800      	cmp	r0, #0
 800ca02:	d05c      	beq.n	800cabe <HAL_SPI_Init+0xbe>
{
 800ca04:	b570      	push	{r4, r5, r6, lr}
 800ca06:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800ca08:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800ca0a:	2800      	cmp	r0, #0
 800ca0c:	d047      	beq.n	800ca9e <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800ca0e:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800ca10:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800ca14:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800ca18:	2200      	movs	r2, #0
 800ca1a:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800ca1c:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800ca20:	2b00      	cmp	r3, #0
 800ca22:	d042      	beq.n	800caaa <HAL_SPI_Init+0xaa>
 800ca24:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800ca26:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ca28:	68a5      	ldr	r5, [r4, #8]
 800ca2a:	69a2      	ldr	r2, [r4, #24]
 800ca2c:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800ca2e:	2302      	movs	r3, #2
 800ca30:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800ca34:	680b      	ldr	r3, [r1, #0]
 800ca36:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ca3a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ca3c:	6863      	ldr	r3, [r4, #4]
 800ca3e:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800ca42:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800ca46:	432b      	orrs	r3, r5
 800ca48:	68e5      	ldr	r5, [r4, #12]
 800ca4a:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800ca4e:	432b      	orrs	r3, r5
 800ca50:	6925      	ldr	r5, [r4, #16]
 800ca52:	f005 0502 	and.w	r5, r5, #2
 800ca56:	432b      	orrs	r3, r5
 800ca58:	6965      	ldr	r5, [r4, #20]
 800ca5a:	f005 0501 	and.w	r5, r5, #1
 800ca5e:	432b      	orrs	r3, r5
 800ca60:	69e5      	ldr	r5, [r4, #28]
 800ca62:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800ca66:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800ca6a:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800ca6e:	4333      	orrs	r3, r6
 800ca70:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ca72:	0c12      	lsrs	r2, r2, #16
 800ca74:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ca78:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ca7c:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ca80:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ca84:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ca86:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800ca88:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800ca8a:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800ca8c:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800ca8e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800ca92:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800ca94:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800ca96:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800ca98:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800ca9c:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ca9e:	6863      	ldr	r3, [r4, #4]
 800caa0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800caa4:	d0b6      	beq.n	800ca14 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800caa6:	61e0      	str	r0, [r4, #28]
 800caa8:	e7b4      	b.n	800ca14 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800caaa:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800caac:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800cab0:	f7f5 fa02 	bl	8001eb8 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800cab4:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800cab8:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800cabc:	e7b3      	b.n	800ca26 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800cabe:	2001      	movs	r0, #1
}
 800cac0:	4770      	bx	lr
 800cac2:	bf00      	nop

0800cac4 <HAL_SPI_Transmit>:
{
 800cac4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cac8:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800caca:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800cace:	2801      	cmp	r0, #1
{
 800cad0:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800cad2:	f000 8085 	beq.w	800cbe0 <HAL_SPI_Transmit+0x11c>
 800cad6:	461d      	mov	r5, r3
 800cad8:	2301      	movs	r3, #1
 800cada:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cade:	4688      	mov	r8, r1
 800cae0:	4617      	mov	r7, r2
 800cae2:	f7fd fa65 	bl	8009fb0 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800cae6:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800caea:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800caec:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800caee:	b2d8      	uxtb	r0, r3
 800caf0:	d009      	beq.n	800cb06 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800caf2:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800caf4:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800caf6:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800caf8:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cafc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cb00:	b002      	add	sp, #8
 800cb02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800cb06:	f1b8 0f00 	cmp.w	r8, #0
 800cb0a:	d0f3      	beq.n	800caf4 <HAL_SPI_Transmit+0x30>
 800cb0c:	2f00      	cmp	r7, #0
 800cb0e:	d0f1      	beq.n	800caf4 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cb10:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800cb12:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800cb14:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cb18:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800cb1a:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cb1c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800cb20:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800cb24:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cb28:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800cb2a:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800cb2c:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800cb2e:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800cb30:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800cb32:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cb34:	f000 8085 	beq.w	800cc42 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb38:	6803      	ldr	r3, [r0, #0]
 800cb3a:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800cb3c:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb3e:	d403      	bmi.n	800cb48 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800cb40:	6803      	ldr	r3, [r0, #0]
 800cb42:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800cb46:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800cb48:	68e3      	ldr	r3, [r4, #12]
 800cb4a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800cb4e:	d04b      	beq.n	800cbe8 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cb50:	6863      	ldr	r3, [r4, #4]
 800cb52:	2b00      	cmp	r3, #0
 800cb54:	f000 8097 	beq.w	800cc86 <HAL_SPI_Transmit+0x1c2>
 800cb58:	2f01      	cmp	r7, #1
 800cb5a:	f000 8094 	beq.w	800cc86 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800cb5e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cb60:	b29b      	uxth	r3, r3
 800cb62:	b1ab      	cbz	r3, 800cb90 <HAL_SPI_Transmit+0xcc>
 800cb64:	1c68      	adds	r0, r5, #1
 800cb66:	f040 8083 	bne.w	800cc70 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cb6a:	6823      	ldr	r3, [r4, #0]
 800cb6c:	689a      	ldr	r2, [r3, #8]
 800cb6e:	0791      	lsls	r1, r2, #30
 800cb70:	f140 8094 	bpl.w	800cc9c <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cb74:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cb76:	7812      	ldrb	r2, [r2, #0]
 800cb78:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800cb7a:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cb7c:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cb7e:	3901      	subs	r1, #1
 800cb80:	b289      	uxth	r1, r1
 800cb82:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cb84:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cb86:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800cb88:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cb8a:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800cb8c:	2900      	cmp	r1, #0
 800cb8e:	d1ec      	bne.n	800cb6a <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cb90:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cb92:	4b5b      	ldr	r3, [pc, #364]	; (800cd00 <HAL_SPI_Transmit+0x23c>)
 800cb94:	4a5b      	ldr	r2, [pc, #364]	; (800cd04 <HAL_SPI_Transmit+0x240>)
 800cb96:	681b      	ldr	r3, [r3, #0]
 800cb98:	fba2 2303 	umull	r2, r3, r2, r3
 800cb9c:	0d5b      	lsrs	r3, r3, #21
 800cb9e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800cba2:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cba6:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cbaa:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cbac:	d107      	bne.n	800cbbe <HAL_SPI_Transmit+0xfa>
 800cbae:	e098      	b.n	800cce2 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800cbb0:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cbb2:	6822      	ldr	r2, [r4, #0]
      count--;
 800cbb4:	3b01      	subs	r3, #1
 800cbb6:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cbb8:	6893      	ldr	r3, [r2, #8]
 800cbba:	061b      	lsls	r3, r3, #24
 800cbbc:	d502      	bpl.n	800cbc4 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800cbbe:	9b01      	ldr	r3, [sp, #4]
 800cbc0:	2b00      	cmp	r3, #0
 800cbc2:	d1f5      	bne.n	800cbb0 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800cbc4:	68a3      	ldr	r3, [r4, #8]
 800cbc6:	b933      	cbnz	r3, 800cbd6 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800cbc8:	6822      	ldr	r2, [r4, #0]
 800cbca:	9300      	str	r3, [sp, #0]
 800cbcc:	68d3      	ldr	r3, [r2, #12]
 800cbce:	9300      	str	r3, [sp, #0]
 800cbd0:	6893      	ldr	r3, [r2, #8]
 800cbd2:	9300      	str	r3, [sp, #0]
 800cbd4:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800cbd6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800cbd8:	3800      	subs	r0, #0
 800cbda:	bf18      	it	ne
 800cbdc:	2001      	movne	r0, #1
error:
 800cbde:	e789      	b.n	800caf4 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800cbe0:	2002      	movs	r0, #2
}
 800cbe2:	b002      	add	sp, #8
 800cbe4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cbe8:	6861      	ldr	r1, [r4, #4]
 800cbea:	2900      	cmp	r1, #0
 800cbec:	d176      	bne.n	800ccdc <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cbee:	4643      	mov	r3, r8
 800cbf0:	f833 7b02 	ldrh.w	r7, [r3], #2
 800cbf4:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800cbf6:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cbf8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cbfa:	3b01      	subs	r3, #1
 800cbfc:	b29b      	uxth	r3, r3
 800cbfe:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cc00:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc02:	b29b      	uxth	r3, r3
 800cc04:	2b00      	cmp	r3, #0
 800cc06:	d0c4      	beq.n	800cb92 <HAL_SPI_Transmit+0xce>
 800cc08:	1c6b      	adds	r3, r5, #1
 800cc0a:	d15e      	bne.n	800ccca <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cc0c:	6883      	ldr	r3, [r0, #8]
 800cc0e:	079f      	lsls	r7, r3, #30
 800cc10:	d50f      	bpl.n	800cc32 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cc12:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cc14:	f832 3b02 	ldrh.w	r3, [r2], #2
 800cc18:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800cc1a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cc1c:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cc1e:	3b01      	subs	r3, #1
 800cc20:	b29b      	uxth	r3, r3
 800cc22:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cc24:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc26:	b29b      	uxth	r3, r3
 800cc28:	2b00      	cmp	r3, #0
 800cc2a:	d0b1      	beq.n	800cb90 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cc2c:	6883      	ldr	r3, [r0, #8]
 800cc2e:	079f      	lsls	r7, r3, #30
 800cc30:	d4ef      	bmi.n	800cc12 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cc32:	f7fd f9bd 	bl	8009fb0 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800cc36:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc38:	b29b      	uxth	r3, r3
 800cc3a:	2b00      	cmp	r3, #0
 800cc3c:	d0a8      	beq.n	800cb90 <HAL_SPI_Transmit+0xcc>
 800cc3e:	6820      	ldr	r0, [r4, #0]
 800cc40:	e7e4      	b.n	800cc0c <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800cc42:	6803      	ldr	r3, [r0, #0]
 800cc44:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800cc48:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800cc4a:	6803      	ldr	r3, [r0, #0]
 800cc4c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800cc50:	6003      	str	r3, [r0, #0]
 800cc52:	e771      	b.n	800cb38 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cc54:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cc56:	7812      	ldrb	r2, [r2, #0]
 800cc58:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800cc5a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc5c:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cc5e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc60:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cc62:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc64:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cc66:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cc68:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc6a:	b29b      	uxth	r3, r3
 800cc6c:	2b00      	cmp	r3, #0
 800cc6e:	d08f      	beq.n	800cb90 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cc70:	6823      	ldr	r3, [r4, #0]
 800cc72:	689a      	ldr	r2, [r3, #8]
 800cc74:	0792      	lsls	r2, r2, #30
 800cc76:	d4ed      	bmi.n	800cc54 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cc78:	f7fd f99a 	bl	8009fb0 <HAL_GetTick>
 800cc7c:	1b80      	subs	r0, r0, r6
 800cc7e:	42a8      	cmp	r0, r5
 800cc80:	d3f2      	bcc.n	800cc68 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800cc82:	2003      	movs	r0, #3
 800cc84:	e736      	b.n	800caf4 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cc86:	f898 3000 	ldrb.w	r3, [r8]
 800cc8a:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800cc8c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc8e:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cc90:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc92:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800cc94:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc96:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cc98:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cc9a:	e760      	b.n	800cb5e <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cc9c:	f7fd f988 	bl	8009fb0 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800cca0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cca2:	b29b      	uxth	r3, r3
 800cca4:	2b00      	cmp	r3, #0
 800cca6:	f47f af60 	bne.w	800cb6a <HAL_SPI_Transmit+0xa6>
 800ccaa:	e771      	b.n	800cb90 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ccac:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ccae:	f831 3b02 	ldrh.w	r3, [r1], #2
 800ccb2:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800ccb4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ccb6:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ccb8:	3b01      	subs	r3, #1
 800ccba:	b29b      	uxth	r3, r3
 800ccbc:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ccbe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ccc0:	b29b      	uxth	r3, r3
 800ccc2:	2b00      	cmp	r3, #0
 800ccc4:	f43f af64 	beq.w	800cb90 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ccc8:	6822      	ldr	r2, [r4, #0]
 800ccca:	6893      	ldr	r3, [r2, #8]
 800cccc:	0799      	lsls	r1, r3, #30
 800ccce:	d4ed      	bmi.n	800ccac <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ccd0:	f7fd f96e 	bl	8009fb0 <HAL_GetTick>
 800ccd4:	1b80      	subs	r0, r0, r6
 800ccd6:	42a8      	cmp	r0, r5
 800ccd8:	d3f1      	bcc.n	800ccbe <HAL_SPI_Transmit+0x1fa>
 800ccda:	e7d2      	b.n	800cc82 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ccdc:	2f01      	cmp	r7, #1
 800ccde:	d18f      	bne.n	800cc00 <HAL_SPI_Transmit+0x13c>
 800cce0:	e785      	b.n	800cbee <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cce2:	4633      	mov	r3, r6
 800cce4:	462a      	mov	r2, r5
 800cce6:	2180      	movs	r1, #128	; 0x80
 800cce8:	4620      	mov	r0, r4
 800ccea:	f7ff fdef 	bl	800c8cc <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ccee:	2800      	cmp	r0, #0
 800ccf0:	f43f af68 	beq.w	800cbc4 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ccf4:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ccf6:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ccf8:	4313      	orrs	r3, r2
 800ccfa:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ccfc:	6562      	str	r2, [r4, #84]	; 0x54
 800ccfe:	e761      	b.n	800cbc4 <HAL_SPI_Transmit+0x100>
 800cd00:	20000078 	.word	0x20000078
 800cd04:	165e9f81 	.word	0x165e9f81

0800cd08 <HAL_SPI_TransmitReceive>:
{
 800cd08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd0c:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800cd0e:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800cd12:	2801      	cmp	r0, #1
{
 800cd14:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800cd16:	f000 80ac 	beq.w	800ce72 <HAL_SPI_TransmitReceive+0x16a>
 800cd1a:	461e      	mov	r6, r3
 800cd1c:	2301      	movs	r3, #1
 800cd1e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cd22:	4690      	mov	r8, r2
 800cd24:	460f      	mov	r7, r1
 800cd26:	f7fd f943 	bl	8009fb0 <HAL_GetTick>
 800cd2a:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800cd2c:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800cd30:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800cd32:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800cd34:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800cd36:	d011      	beq.n	800cd5c <HAL_SPI_TransmitReceive+0x54>
 800cd38:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800cd3c:	d009      	beq.n	800cd52 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800cd3e:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cd40:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cd42:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cd44:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cd48:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cd4c:	b002      	add	sp, #8
 800cd4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800cd52:	68a1      	ldr	r1, [r4, #8]
 800cd54:	2900      	cmp	r1, #0
 800cd56:	d1f2      	bne.n	800cd3e <HAL_SPI_TransmitReceive+0x36>
 800cd58:	2a04      	cmp	r2, #4
 800cd5a:	d1f0      	bne.n	800cd3e <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800cd5c:	2f00      	cmp	r7, #0
 800cd5e:	f000 808c 	beq.w	800ce7a <HAL_SPI_TransmitReceive+0x172>
 800cd62:	f1b8 0f00 	cmp.w	r8, #0
 800cd66:	f000 8088 	beq.w	800ce7a <HAL_SPI_TransmitReceive+0x172>
 800cd6a:	2e00      	cmp	r6, #0
 800cd6c:	f000 8085 	beq.w	800ce7a <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cd70:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800cd74:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cd78:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800cd7a:	bf1c      	itt	ne
 800cd7c:	2205      	movne	r2, #5
 800cd7e:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cd82:	2200      	movs	r2, #0
 800cd84:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800cd86:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cd8a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800cd8c:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800cd8e:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cd90:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800cd92:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cd94:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800cd96:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800cd98:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cd9a:	d403      	bmi.n	800cda4 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800cd9c:	6811      	ldr	r1, [r2, #0]
 800cd9e:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800cda2:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800cda4:	68e1      	ldr	r1, [r4, #12]
 800cda6:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800cdaa:	f000 809e 	beq.w	800ceea <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cdae:	2b00      	cmp	r3, #0
 800cdb0:	f000 8091 	beq.w	800ced6 <HAL_SPI_TransmitReceive+0x1ce>
 800cdb4:	2e01      	cmp	r6, #1
 800cdb6:	f000 808e 	beq.w	800ced6 <HAL_SPI_TransmitReceive+0x1ce>
 800cdba:	9b08      	ldr	r3, [sp, #32]
 800cdbc:	3301      	adds	r3, #1
        txallowed = 1U;
 800cdbe:	f04f 0601 	mov.w	r6, #1
 800cdc2:	d028      	beq.n	800ce16 <HAL_SPI_TransmitReceive+0x10e>
 800cdc4:	e05b      	b.n	800ce7e <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cdc6:	6821      	ldr	r1, [r4, #0]
 800cdc8:	688b      	ldr	r3, [r1, #8]
 800cdca:	0798      	lsls	r0, r3, #30
 800cdcc:	d50f      	bpl.n	800cdee <HAL_SPI_TransmitReceive+0xe6>
 800cdce:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cdd0:	b29b      	uxth	r3, r3
 800cdd2:	b163      	cbz	r3, 800cdee <HAL_SPI_TransmitReceive+0xe6>
 800cdd4:	b15e      	cbz	r6, 800cdee <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cdd6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cdd8:	781b      	ldrb	r3, [r3, #0]
 800cdda:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800cddc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cdde:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cde0:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800cde2:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cde4:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cde6:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800cde8:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cdea:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cdec:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cdee:	688a      	ldr	r2, [r1, #8]
 800cdf0:	f012 0201 	ands.w	r2, r2, #1
 800cdf4:	d00d      	beq.n	800ce12 <HAL_SPI_TransmitReceive+0x10a>
 800cdf6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cdf8:	b29b      	uxth	r3, r3
 800cdfa:	b153      	cbz	r3, 800ce12 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cdfc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cdfe:	68c9      	ldr	r1, [r1, #12]
 800ce00:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800ce02:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800ce04:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ce06:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800ce08:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800ce0a:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800ce0c:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ce0e:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800ce10:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800ce12:	f7fd f8cd 	bl	8009fb0 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ce16:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ce18:	b292      	uxth	r2, r2
 800ce1a:	2a00      	cmp	r2, #0
 800ce1c:	d1d3      	bne.n	800cdc6 <HAL_SPI_TransmitReceive+0xbe>
 800ce1e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ce20:	b29b      	uxth	r3, r3
 800ce22:	2b00      	cmp	r3, #0
 800ce24:	d1cf      	bne.n	800cdc6 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ce26:	4b79      	ldr	r3, [pc, #484]	; (800d00c <HAL_SPI_TransmitReceive+0x304>)
 800ce28:	4a79      	ldr	r2, [pc, #484]	; (800d010 <HAL_SPI_TransmitReceive+0x308>)
 800ce2a:	681b      	ldr	r3, [r3, #0]
 800ce2c:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ce30:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ce32:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800ce36:	0d5b      	lsrs	r3, r3, #21
 800ce38:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ce3c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ce40:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ce42:	d107      	bne.n	800ce54 <HAL_SPI_TransmitReceive+0x14c>
 800ce44:	e0d2      	b.n	800cfec <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800ce46:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ce48:	6822      	ldr	r2, [r4, #0]
      count--;
 800ce4a:	3b01      	subs	r3, #1
 800ce4c:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ce4e:	6893      	ldr	r3, [r2, #8]
 800ce50:	061b      	lsls	r3, r3, #24
 800ce52:	d502      	bpl.n	800ce5a <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800ce54:	9b01      	ldr	r3, [sp, #4]
 800ce56:	2b00      	cmp	r3, #0
 800ce58:	d1f5      	bne.n	800ce46 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800ce5a:	68a0      	ldr	r0, [r4, #8]
 800ce5c:	2800      	cmp	r0, #0
 800ce5e:	f040 8082 	bne.w	800cf66 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800ce62:	6823      	ldr	r3, [r4, #0]
 800ce64:	9000      	str	r0, [sp, #0]
 800ce66:	68da      	ldr	r2, [r3, #12]
 800ce68:	9200      	str	r2, [sp, #0]
 800ce6a:	689b      	ldr	r3, [r3, #8]
 800ce6c:	9300      	str	r3, [sp, #0]
 800ce6e:	9b00      	ldr	r3, [sp, #0]
 800ce70:	e766      	b.n	800cd40 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800ce72:	2002      	movs	r0, #2
}
 800ce74:	b002      	add	sp, #8
 800ce76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800ce7a:	2001      	movs	r0, #1
 800ce7c:	e760      	b.n	800cd40 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ce7e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ce80:	b29b      	uxth	r3, r3
 800ce82:	b91b      	cbnz	r3, 800ce8c <HAL_SPI_TransmitReceive+0x184>
 800ce84:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ce86:	b29b      	uxth	r3, r3
 800ce88:	2b00      	cmp	r3, #0
 800ce8a:	d0cc      	beq.n	800ce26 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ce8c:	6822      	ldr	r2, [r4, #0]
 800ce8e:	6893      	ldr	r3, [r2, #8]
 800ce90:	0799      	lsls	r1, r3, #30
 800ce92:	d50f      	bpl.n	800ceb4 <HAL_SPI_TransmitReceive+0x1ac>
 800ce94:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ce96:	b29b      	uxth	r3, r3
 800ce98:	b163      	cbz	r3, 800ceb4 <HAL_SPI_TransmitReceive+0x1ac>
 800ce9a:	b15e      	cbz	r6, 800ceb4 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800ce9c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ce9e:	781b      	ldrb	r3, [r3, #0]
 800cea0:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800cea2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cea4:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cea6:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cea8:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800ceaa:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800ceac:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ceae:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800ceb0:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800ceb2:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ceb4:	6893      	ldr	r3, [r2, #8]
 800ceb6:	f013 0301 	ands.w	r3, r3, #1
 800ceba:	d004      	beq.n	800cec6 <HAL_SPI_TransmitReceive+0x1be>
 800cebc:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cebe:	b289      	uxth	r1, r1
 800cec0:	2900      	cmp	r1, #0
 800cec2:	f040 8087 	bne.w	800cfd4 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cec6:	f7fd f873 	bl	8009fb0 <HAL_GetTick>
 800ceca:	9b08      	ldr	r3, [sp, #32]
 800cecc:	1b40      	subs	r0, r0, r5
 800cece:	4298      	cmp	r0, r3
 800ced0:	d3d5      	bcc.n	800ce7e <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800ced2:	2003      	movs	r0, #3
 800ced4:	e734      	b.n	800cd40 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ced6:	783b      	ldrb	r3, [r7, #0]
 800ced8:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800ceda:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cedc:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cede:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cee0:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800cee2:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cee4:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cee6:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cee8:	e767      	b.n	800cdba <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ceea:	2b00      	cmp	r3, #0
 800ceec:	d13d      	bne.n	800cf6a <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ceee:	f837 3b02 	ldrh.w	r3, [r7], #2
 800cef2:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800cef4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800cef6:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cef8:	3b01      	subs	r3, #1
 800cefa:	b29b      	uxth	r3, r3
 800cefc:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cefe:	9b08      	ldr	r3, [sp, #32]
 800cf00:	3301      	adds	r3, #1
{
 800cf02:	f04f 0601 	mov.w	r6, #1
 800cf06:	d025      	beq.n	800cf54 <HAL_SPI_TransmitReceive+0x24c>
 800cf08:	e032      	b.n	800cf70 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cf0a:	6823      	ldr	r3, [r4, #0]
 800cf0c:	689a      	ldr	r2, [r3, #8]
 800cf0e:	0792      	lsls	r2, r2, #30
 800cf10:	d50d      	bpl.n	800cf2e <HAL_SPI_TransmitReceive+0x226>
 800cf12:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cf14:	b292      	uxth	r2, r2
 800cf16:	b152      	cbz	r2, 800cf2e <HAL_SPI_TransmitReceive+0x226>
 800cf18:	b14e      	cbz	r6, 800cf2e <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cf1a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cf1c:	f831 2b02 	ldrh.w	r2, [r1], #2
 800cf20:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800cf22:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cf24:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cf26:	3a01      	subs	r2, #1
 800cf28:	b292      	uxth	r2, r2
        txallowed = 0U;
 800cf2a:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cf2c:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cf2e:	689a      	ldr	r2, [r3, #8]
 800cf30:	f012 0201 	ands.w	r2, r2, #1
 800cf34:	d00c      	beq.n	800cf50 <HAL_SPI_TransmitReceive+0x248>
 800cf36:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cf38:	b289      	uxth	r1, r1
 800cf3a:	b149      	cbz	r1, 800cf50 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cf3c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800cf3e:	68db      	ldr	r3, [r3, #12]
 800cf40:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800cf44:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cf46:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf48:	3b01      	subs	r3, #1
 800cf4a:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800cf4c:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800cf4e:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800cf50:	f7fd f82e 	bl	8009fb0 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cf54:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cf56:	b29b      	uxth	r3, r3
 800cf58:	2b00      	cmp	r3, #0
 800cf5a:	d1d6      	bne.n	800cf0a <HAL_SPI_TransmitReceive+0x202>
 800cf5c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf5e:	b29b      	uxth	r3, r3
 800cf60:	2b00      	cmp	r3, #0
 800cf62:	d1d2      	bne.n	800cf0a <HAL_SPI_TransmitReceive+0x202>
 800cf64:	e75f      	b.n	800ce26 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800cf66:	2000      	movs	r0, #0
 800cf68:	e6ea      	b.n	800cd40 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cf6a:	2e01      	cmp	r6, #1
 800cf6c:	d1c7      	bne.n	800cefe <HAL_SPI_TransmitReceive+0x1f6>
 800cf6e:	e7be      	b.n	800ceee <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cf70:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cf72:	b29b      	uxth	r3, r3
 800cf74:	b923      	cbnz	r3, 800cf80 <HAL_SPI_TransmitReceive+0x278>
 800cf76:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf78:	b29b      	uxth	r3, r3
 800cf7a:	2b00      	cmp	r3, #0
 800cf7c:	f43f af53 	beq.w	800ce26 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cf80:	6822      	ldr	r2, [r4, #0]
 800cf82:	6893      	ldr	r3, [r2, #8]
 800cf84:	079f      	lsls	r7, r3, #30
 800cf86:	d50d      	bpl.n	800cfa4 <HAL_SPI_TransmitReceive+0x29c>
 800cf88:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cf8a:	b29b      	uxth	r3, r3
 800cf8c:	b153      	cbz	r3, 800cfa4 <HAL_SPI_TransmitReceive+0x29c>
 800cf8e:	b14e      	cbz	r6, 800cfa4 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cf90:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cf92:	f831 3b02 	ldrh.w	r3, [r1], #2
 800cf96:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800cf98:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cf9a:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cf9c:	3b01      	subs	r3, #1
 800cf9e:	b29b      	uxth	r3, r3
 800cfa0:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cfa2:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cfa4:	6893      	ldr	r3, [r2, #8]
 800cfa6:	f013 0301 	ands.w	r3, r3, #1
 800cfaa:	d00c      	beq.n	800cfc6 <HAL_SPI_TransmitReceive+0x2be>
 800cfac:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cfae:	b289      	uxth	r1, r1
 800cfb0:	b149      	cbz	r1, 800cfc6 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cfb2:	68d1      	ldr	r1, [r2, #12]
 800cfb4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cfb6:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800cfba:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800cfbc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cfbe:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cfc0:	3b01      	subs	r3, #1
 800cfc2:	b29b      	uxth	r3, r3
 800cfc4:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800cfc6:	f7fc fff3 	bl	8009fb0 <HAL_GetTick>
 800cfca:	9b08      	ldr	r3, [sp, #32]
 800cfcc:	1b40      	subs	r0, r0, r5
 800cfce:	4298      	cmp	r0, r3
 800cfd0:	d3ce      	bcc.n	800cf70 <HAL_SPI_TransmitReceive+0x268>
 800cfd2:	e77e      	b.n	800ced2 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cfd4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800cfd6:	68d2      	ldr	r2, [r2, #12]
 800cfd8:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800cfda:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cfdc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cfde:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800cfe0:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cfe2:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800cfe4:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cfe6:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cfe8:	461e      	mov	r6, r3
 800cfea:	e76c      	b.n	800cec6 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cfec:	9a08      	ldr	r2, [sp, #32]
 800cfee:	462b      	mov	r3, r5
 800cff0:	2180      	movs	r1, #128	; 0x80
 800cff2:	4620      	mov	r0, r4
 800cff4:	f7ff fc6a 	bl	800c8cc <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cff8:	2800      	cmp	r0, #0
 800cffa:	f43f af2e 	beq.w	800ce5a <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cffe:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d000:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800d002:	4313      	orrs	r3, r2
 800d004:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800d006:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d008:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800d00a:	e699      	b.n	800cd40 <HAL_SPI_TransmitReceive+0x38>
 800d00c:	20000078 	.word	0x20000078
 800d010:	165e9f81 	.word	0x165e9f81

0800d014 <HAL_SPI_Receive>:
{
 800d014:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d018:	6846      	ldr	r6, [r0, #4]
 800d01a:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800d01e:	b082      	sub	sp, #8
 800d020:	4604      	mov	r4, r0
 800d022:	4690      	mov	r8, r2
 800d024:	461d      	mov	r5, r3
 800d026:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d028:	d06e      	beq.n	800d108 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800d02a:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800d02e:	2b01      	cmp	r3, #1
 800d030:	d076      	beq.n	800d120 <HAL_SPI_Receive+0x10c>
 800d032:	2301      	movs	r3, #1
 800d034:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800d038:	f7fc ffba 	bl	8009fb0 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800d03c:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800d040:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800d044:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800d046:	fa5f f08c 	uxtb.w	r0, ip
 800d04a:	d009      	beq.n	800d060 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800d04c:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800d04e:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800d050:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800d052:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800d056:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800d05a:	b002      	add	sp, #8
 800d05c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800d060:	2f00      	cmp	r7, #0
 800d062:	d0f4      	beq.n	800d04e <HAL_SPI_Receive+0x3a>
 800d064:	f1b8 0f00 	cmp.w	r8, #0
 800d068:	d0f1      	beq.n	800d04e <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d06a:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800d06c:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d06e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800d072:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800d074:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d078:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800d07c:	f04f 0104 	mov.w	r1, #4
 800d080:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800d084:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800d088:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800d08a:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800d08c:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800d08e:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800d092:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800d094:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800d096:	d107      	bne.n	800d0a8 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800d098:	6811      	ldr	r1, [r2, #0]
 800d09a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800d09e:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800d0a0:	6811      	ldr	r1, [r2, #0]
 800d0a2:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800d0a6:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800d0a8:	6811      	ldr	r1, [r2, #0]
 800d0aa:	0648      	lsls	r0, r1, #25
 800d0ac:	d403      	bmi.n	800d0b6 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800d0ae:	6811      	ldr	r1, [r2, #0]
 800d0b0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800d0b4:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800d0b6:	68e1      	ldr	r1, [r4, #12]
 800d0b8:	2900      	cmp	r1, #0
 800d0ba:	d054      	beq.n	800d166 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800d0bc:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800d0be:	b289      	uxth	r1, r1
 800d0c0:	b1a9      	cbz	r1, 800d0ee <HAL_SPI_Receive+0xda>
 800d0c2:	1c69      	adds	r1, r5, #1
 800d0c4:	d13e      	bne.n	800d144 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d0c6:	6893      	ldr	r3, [r2, #8]
 800d0c8:	07db      	lsls	r3, r3, #31
 800d0ca:	d544      	bpl.n	800d156 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d0cc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d0ce:	68d1      	ldr	r1, [r2, #12]
 800d0d0:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800d0d4:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d0d8:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d0da:	f10c 3cff 	add.w	ip, ip, #4294967295
 800d0de:	fa1f fc8c 	uxth.w	ip, ip
 800d0e2:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d0e6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d0e8:	b29b      	uxth	r3, r3
 800d0ea:	2b00      	cmp	r3, #0
 800d0ec:	d1eb      	bne.n	800d0c6 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800d0ee:	4632      	mov	r2, r6
 800d0f0:	4629      	mov	r1, r5
 800d0f2:	4620      	mov	r0, r4
 800d0f4:	f7ff fc48 	bl	800c988 <SPI_EndRxTransaction>
 800d0f8:	b108      	cbz	r0, 800d0fe <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800d0fa:	2320      	movs	r3, #32
 800d0fc:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800d0fe:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800d100:	3800      	subs	r0, #0
 800d102:	bf18      	it	ne
 800d104:	2001      	movne	r0, #1
error :
 800d106:	e7a2      	b.n	800d04e <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800d108:	6883      	ldr	r3, [r0, #8]
 800d10a:	2b00      	cmp	r3, #0
 800d10c:	d18d      	bne.n	800d02a <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d10e:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800d110:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d112:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800d114:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800d118:	460a      	mov	r2, r1
 800d11a:	f7ff fdf5 	bl	800cd08 <HAL_SPI_TransmitReceive>
 800d11e:	e79c      	b.n	800d05a <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800d120:	2002      	movs	r0, #2
}
 800d122:	b002      	add	sp, #8
 800d124:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800d128:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d12a:	68db      	ldr	r3, [r3, #12]
 800d12c:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800d130:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800d132:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d134:	3b01      	subs	r3, #1
 800d136:	b29b      	uxth	r3, r3
 800d138:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d13a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d13c:	b29b      	uxth	r3, r3
 800d13e:	2b00      	cmp	r3, #0
 800d140:	d0d5      	beq.n	800d0ee <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d142:	6823      	ldr	r3, [r4, #0]
 800d144:	689a      	ldr	r2, [r3, #8]
 800d146:	07d2      	lsls	r2, r2, #31
 800d148:	d4ee      	bmi.n	800d128 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d14a:	f7fc ff31 	bl	8009fb0 <HAL_GetTick>
 800d14e:	1b80      	subs	r0, r0, r6
 800d150:	42a8      	cmp	r0, r5
 800d152:	d243      	bcs.n	800d1dc <HAL_SPI_Receive+0x1c8>
 800d154:	e7f1      	b.n	800d13a <HAL_SPI_Receive+0x126>
 800d156:	f7fc ff2b 	bl	8009fb0 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800d15a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d15c:	b29b      	uxth	r3, r3
 800d15e:	2b00      	cmp	r3, #0
 800d160:	d0c5      	beq.n	800d0ee <HAL_SPI_Receive+0xda>
 800d162:	6822      	ldr	r2, [r4, #0]
 800d164:	e7af      	b.n	800d0c6 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800d166:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800d168:	b292      	uxth	r2, r2
 800d16a:	2a00      	cmp	r2, #0
 800d16c:	d0bf      	beq.n	800d0ee <HAL_SPI_Receive+0xda>
 800d16e:	1c6f      	adds	r7, r5, #1
 800d170:	d013      	beq.n	800d19a <HAL_SPI_Receive+0x186>
 800d172:	e02b      	b.n	800d1cc <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800d174:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d176:	7b1b      	ldrb	r3, [r3, #12]
 800d178:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800d17a:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d17e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d180:	f10c 3cff 	add.w	ip, ip, #4294967295
 800d184:	fa1f fc8c 	uxth.w	ip, ip
 800d188:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d18c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d18e:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800d190:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d192:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800d194:	2b00      	cmp	r3, #0
 800d196:	d0aa      	beq.n	800d0ee <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d198:	6823      	ldr	r3, [r4, #0]
 800d19a:	689a      	ldr	r2, [r3, #8]
 800d19c:	07d0      	lsls	r0, r2, #31
 800d19e:	d4e9      	bmi.n	800d174 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d1a0:	f7fc ff06 	bl	8009fb0 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800d1a4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d1a6:	b29b      	uxth	r3, r3
 800d1a8:	2b00      	cmp	r3, #0
 800d1aa:	d1f5      	bne.n	800d198 <HAL_SPI_Receive+0x184>
 800d1ac:	e79f      	b.n	800d0ee <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800d1ae:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d1b0:	7b1b      	ldrb	r3, [r3, #12]
 800d1b2:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800d1b4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d1b6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d1b8:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d1ba:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800d1bc:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d1be:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d1c0:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d1c2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d1c4:	b29b      	uxth	r3, r3
 800d1c6:	2b00      	cmp	r3, #0
 800d1c8:	d091      	beq.n	800d0ee <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d1ca:	6823      	ldr	r3, [r4, #0]
 800d1cc:	689a      	ldr	r2, [r3, #8]
 800d1ce:	07d1      	lsls	r1, r2, #31
 800d1d0:	d4ed      	bmi.n	800d1ae <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d1d2:	f7fc feed 	bl	8009fb0 <HAL_GetTick>
 800d1d6:	1b80      	subs	r0, r0, r6
 800d1d8:	42a8      	cmp	r0, r5
 800d1da:	d3f2      	bcc.n	800d1c2 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800d1dc:	2003      	movs	r0, #3
 800d1de:	e736      	b.n	800d04e <HAL_SPI_Receive+0x3a>

0800d1e0 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800d1e0:	2800      	cmp	r0, #0
 800d1e2:	f000 8087 	beq.w	800d2f4 <HAL_TIM_Base_Init+0x114>
{
 800d1e6:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800d1e8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d1ec:	4604      	mov	r4, r0
 800d1ee:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d1f2:	2b00      	cmp	r3, #0
 800d1f4:	d079      	beq.n	800d2ea <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800d1f6:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d1f8:	493f      	ldr	r1, [pc, #252]	; (800d2f8 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d1fa:	2302      	movs	r3, #2
 800d1fc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d200:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800d202:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d204:	d05d      	beq.n	800d2c2 <HAL_TIM_Base_Init+0xe2>
 800d206:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800d20a:	d031      	beq.n	800d270 <HAL_TIM_Base_Init+0x90>
 800d20c:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800d210:	428a      	cmp	r2, r1
 800d212:	d02d      	beq.n	800d270 <HAL_TIM_Base_Init+0x90>
 800d214:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d218:	428a      	cmp	r2, r1
 800d21a:	d029      	beq.n	800d270 <HAL_TIM_Base_Init+0x90>
 800d21c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d220:	428a      	cmp	r2, r1
 800d222:	d025      	beq.n	800d270 <HAL_TIM_Base_Init+0x90>
 800d224:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800d228:	428a      	cmp	r2, r1
 800d22a:	d04a      	beq.n	800d2c2 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800d22c:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800d230:	428a      	cmp	r2, r1
 800d232:	d021      	beq.n	800d278 <HAL_TIM_Base_Init+0x98>
 800d234:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d238:	428a      	cmp	r2, r1
 800d23a:	d01d      	beq.n	800d278 <HAL_TIM_Base_Init+0x98>
 800d23c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d240:	428a      	cmp	r2, r1
 800d242:	d019      	beq.n	800d278 <HAL_TIM_Base_Init+0x98>
 800d244:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800d248:	428a      	cmp	r2, r1
 800d24a:	d015      	beq.n	800d278 <HAL_TIM_Base_Init+0x98>
 800d24c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d250:	428a      	cmp	r2, r1
 800d252:	d011      	beq.n	800d278 <HAL_TIM_Base_Init+0x98>
 800d254:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d258:	428a      	cmp	r2, r1
 800d25a:	d00d      	beq.n	800d278 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d25c:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d25e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d260:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d264:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800d266:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800d268:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d26a:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d26c:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800d26e:	e010      	b.n	800d292 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800d270:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d272:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d276:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d278:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d27a:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d27c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d280:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d282:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d286:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d288:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800d28a:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800d28c:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d28e:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d290:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800d292:	2301      	movs	r3, #1
 800d294:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d296:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d29a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d29e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d2a2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d2a6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d2aa:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d2ae:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d2b2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d2b6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800d2ba:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800d2be:	2000      	movs	r0, #0
}
 800d2c0:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800d2c2:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d2c4:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d2c6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d2ca:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800d2cc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d2d0:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d2d2:	69a1      	ldr	r1, [r4, #24]
 800d2d4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d2d8:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800d2da:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d2dc:	68e3      	ldr	r3, [r4, #12]
 800d2de:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d2e0:	6863      	ldr	r3, [r4, #4]
 800d2e2:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800d2e4:	6963      	ldr	r3, [r4, #20]
 800d2e6:	6313      	str	r3, [r2, #48]	; 0x30
 800d2e8:	e7d3      	b.n	800d292 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800d2ea:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800d2ee:	f7f4 fe1f 	bl	8001f30 <HAL_TIM_Base_MspInit>
 800d2f2:	e780      	b.n	800d1f6 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800d2f4:	2001      	movs	r0, #1
}
 800d2f6:	4770      	bx	lr
 800d2f8:	40010000 	.word	0x40010000

0800d2fc <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800d2fc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d300:	2b01      	cmp	r3, #1
 800d302:	d12f      	bne.n	800d364 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d304:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d306:	4919      	ldr	r1, [pc, #100]	; (800d36c <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d308:	2202      	movs	r2, #2
 800d30a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d30e:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d310:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d312:	f042 0201 	orr.w	r2, r2, #1
 800d316:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d318:	d019      	beq.n	800d34e <HAL_TIM_Base_Start_IT+0x52>
 800d31a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d31e:	d016      	beq.n	800d34e <HAL_TIM_Base_Start_IT+0x52>
 800d320:	4a13      	ldr	r2, [pc, #76]	; (800d370 <HAL_TIM_Base_Start_IT+0x74>)
 800d322:	4293      	cmp	r3, r2
 800d324:	d013      	beq.n	800d34e <HAL_TIM_Base_Start_IT+0x52>
 800d326:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d32a:	4293      	cmp	r3, r2
 800d32c:	d00f      	beq.n	800d34e <HAL_TIM_Base_Start_IT+0x52>
 800d32e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d332:	4293      	cmp	r3, r2
 800d334:	d00b      	beq.n	800d34e <HAL_TIM_Base_Start_IT+0x52>
 800d336:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d33a:	4293      	cmp	r3, r2
 800d33c:	d007      	beq.n	800d34e <HAL_TIM_Base_Start_IT+0x52>
 800d33e:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d342:	4293      	cmp	r3, r2
 800d344:	d003      	beq.n	800d34e <HAL_TIM_Base_Start_IT+0x52>
 800d346:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d34a:	4293      	cmp	r3, r2
 800d34c:	d104      	bne.n	800d358 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800d34e:	689a      	ldr	r2, [r3, #8]
 800d350:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800d354:	2a06      	cmp	r2, #6
 800d356:	d007      	beq.n	800d368 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800d358:	681a      	ldr	r2, [r3, #0]
 800d35a:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800d35e:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800d360:	601a      	str	r2, [r3, #0]
 800d362:	4770      	bx	lr
    return HAL_ERROR;
 800d364:	2001      	movs	r0, #1
 800d366:	4770      	bx	lr
  return HAL_OK;
 800d368:	2000      	movs	r0, #0
}
 800d36a:	4770      	bx	lr
 800d36c:	40010000 	.word	0x40010000
 800d370:	40000400 	.word	0x40000400

0800d374 <HAL_TIM_OC_DelayElapsedCallback>:
 800d374:	4770      	bx	lr
 800d376:	bf00      	nop

0800d378 <HAL_TIM_IC_CaptureCallback>:
 800d378:	4770      	bx	lr
 800d37a:	bf00      	nop

0800d37c <HAL_TIM_PWM_PulseFinishedCallback>:
 800d37c:	4770      	bx	lr
 800d37e:	bf00      	nop

0800d380 <HAL_TIM_TriggerCallback>:
 800d380:	4770      	bx	lr
 800d382:	bf00      	nop

0800d384 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d384:	6803      	ldr	r3, [r0, #0]
 800d386:	691a      	ldr	r2, [r3, #16]
 800d388:	0791      	lsls	r1, r2, #30
{
 800d38a:	b510      	push	{r4, lr}
 800d38c:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d38e:	d502      	bpl.n	800d396 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800d390:	68da      	ldr	r2, [r3, #12]
 800d392:	0792      	lsls	r2, r2, #30
 800d394:	d45f      	bmi.n	800d456 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d396:	691a      	ldr	r2, [r3, #16]
 800d398:	0750      	lsls	r0, r2, #29
 800d39a:	d502      	bpl.n	800d3a2 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800d39c:	68da      	ldr	r2, [r3, #12]
 800d39e:	0751      	lsls	r1, r2, #29
 800d3a0:	d446      	bmi.n	800d430 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d3a2:	691a      	ldr	r2, [r3, #16]
 800d3a4:	0712      	lsls	r2, r2, #28
 800d3a6:	d502      	bpl.n	800d3ae <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800d3a8:	68da      	ldr	r2, [r3, #12]
 800d3aa:	0710      	lsls	r0, r2, #28
 800d3ac:	d42e      	bmi.n	800d40c <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d3ae:	691a      	ldr	r2, [r3, #16]
 800d3b0:	06d2      	lsls	r2, r2, #27
 800d3b2:	d502      	bpl.n	800d3ba <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800d3b4:	68da      	ldr	r2, [r3, #12]
 800d3b6:	06d0      	lsls	r0, r2, #27
 800d3b8:	d418      	bmi.n	800d3ec <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d3ba:	691a      	ldr	r2, [r3, #16]
 800d3bc:	07d1      	lsls	r1, r2, #31
 800d3be:	d502      	bpl.n	800d3c6 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800d3c0:	68da      	ldr	r2, [r3, #12]
 800d3c2:	07d2      	lsls	r2, r2, #31
 800d3c4:	d45d      	bmi.n	800d482 <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d3c6:	691a      	ldr	r2, [r3, #16]
 800d3c8:	0610      	lsls	r0, r2, #24
 800d3ca:	d502      	bpl.n	800d3d2 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800d3cc:	68da      	ldr	r2, [r3, #12]
 800d3ce:	0611      	lsls	r1, r2, #24
 800d3d0:	d45f      	bmi.n	800d492 <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d3d2:	691a      	ldr	r2, [r3, #16]
 800d3d4:	0652      	lsls	r2, r2, #25
 800d3d6:	d502      	bpl.n	800d3de <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800d3d8:	68da      	ldr	r2, [r3, #12]
 800d3da:	0650      	lsls	r0, r2, #25
 800d3dc:	d461      	bmi.n	800d4a2 <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d3de:	691a      	ldr	r2, [r3, #16]
 800d3e0:	0691      	lsls	r1, r2, #26
 800d3e2:	d502      	bpl.n	800d3ea <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800d3e4:	68da      	ldr	r2, [r3, #12]
 800d3e6:	0692      	lsls	r2, r2, #26
 800d3e8:	d443      	bmi.n	800d472 <HAL_TIM_IRQHandler+0xee>
}
 800d3ea:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d3ec:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d3f0:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d3f2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d3f4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d3f6:	69db      	ldr	r3, [r3, #28]
 800d3f8:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d3fc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d3fe:	d064      	beq.n	800d4ca <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800d400:	f7ff ffba 	bl	800d378 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d404:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d406:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d408:	7722      	strb	r2, [r4, #28]
 800d40a:	e7d6      	b.n	800d3ba <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d40c:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d410:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d412:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d414:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d416:	69db      	ldr	r3, [r3, #28]
 800d418:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800d41a:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d41c:	d152      	bne.n	800d4c4 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d41e:	f7ff ffa9 	bl	800d374 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d422:	4620      	mov	r0, r4
 800d424:	f7ff ffaa 	bl	800d37c <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d428:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d42a:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d42c:	7722      	strb	r2, [r4, #28]
 800d42e:	e7be      	b.n	800d3ae <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d430:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d434:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d436:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d438:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d43a:	699b      	ldr	r3, [r3, #24]
 800d43c:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d440:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d442:	d13c      	bne.n	800d4be <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d444:	f7ff ff96 	bl	800d374 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d448:	4620      	mov	r0, r4
 800d44a:	f7ff ff97 	bl	800d37c <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d44e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d450:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d452:	7722      	strb	r2, [r4, #28]
 800d454:	e7a5      	b.n	800d3a2 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d456:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d45a:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d45c:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d45e:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800d460:	699b      	ldr	r3, [r3, #24]
 800d462:	079b      	lsls	r3, r3, #30
 800d464:	d025      	beq.n	800d4b2 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800d466:	f7ff ff87 	bl	800d378 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d46a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d46c:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d46e:	7722      	strb	r2, [r4, #28]
 800d470:	e791      	b.n	800d396 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d472:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800d476:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d478:	611a      	str	r2, [r3, #16]
}
 800d47a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800d47e:	f000 b82b 	b.w	800d4d8 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800d482:	f06f 0201 	mvn.w	r2, #1
 800d486:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800d488:	4620      	mov	r0, r4
 800d48a:	f7f4 fa33 	bl	80018f4 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d48e:	6823      	ldr	r3, [r4, #0]
 800d490:	e799      	b.n	800d3c6 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800d492:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800d496:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800d498:	4620      	mov	r0, r4
 800d49a:	f000 f81f 	bl	800d4dc <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d49e:	6823      	ldr	r3, [r4, #0]
 800d4a0:	e797      	b.n	800d3d2 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800d4a2:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800d4a6:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800d4a8:	4620      	mov	r0, r4
 800d4aa:	f7ff ff69 	bl	800d380 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d4ae:	6823      	ldr	r3, [r4, #0]
 800d4b0:	e795      	b.n	800d3de <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800d4b2:	f7ff ff5f 	bl	800d374 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d4b6:	4620      	mov	r0, r4
 800d4b8:	f7ff ff60 	bl	800d37c <HAL_TIM_PWM_PulseFinishedCallback>
 800d4bc:	e7d5      	b.n	800d46a <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800d4be:	f7ff ff5b 	bl	800d378 <HAL_TIM_IC_CaptureCallback>
 800d4c2:	e7c4      	b.n	800d44e <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800d4c4:	f7ff ff58 	bl	800d378 <HAL_TIM_IC_CaptureCallback>
 800d4c8:	e7ae      	b.n	800d428 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d4ca:	f7ff ff53 	bl	800d374 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d4ce:	4620      	mov	r0, r4
 800d4d0:	f7ff ff54 	bl	800d37c <HAL_TIM_PWM_PulseFinishedCallback>
 800d4d4:	e796      	b.n	800d404 <HAL_TIM_IRQHandler+0x80>
 800d4d6:	bf00      	nop

0800d4d8 <HAL_TIMEx_CommutCallback>:
 800d4d8:	4770      	bx	lr
 800d4da:	bf00      	nop

0800d4dc <HAL_TIMEx_BreakCallback>:
 800d4dc:	4770      	bx	lr
 800d4de:	bf00      	nop

0800d4e0 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d4e0:	680b      	ldr	r3, [r1, #0]
{
 800d4e2:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d4e4:	b9d3      	cbnz	r3, 800d51c <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d4e6:	6803      	ldr	r3, [r0, #0]
 800d4e8:	684c      	ldr	r4, [r1, #4]
 800d4ea:	688a      	ldr	r2, [r1, #8]
 800d4ec:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d4f0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d4f4:	4323      	orrs	r3, r4
 800d4f6:	4313      	orrs	r3, r2
 800d4f8:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800d4fc:	4323      	orrs	r3, r4
 800d4fe:	4313      	orrs	r3, r2
 800d500:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800d504:	4323      	orrs	r3, r4
 800d506:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800d50a:	4313      	orrs	r3, r2
 800d50c:	432b      	orrs	r3, r5
 800d50e:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800d510:	4323      	orrs	r3, r4
 800d512:	4313      	orrs	r3, r2
 800d514:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800d516:	bc30      	pop	{r4, r5}
 800d518:	2000      	movs	r0, #0
 800d51a:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d51c:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800d520:	6803      	ldr	r3, [r0, #0]
 800d522:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800d526:	4323      	orrs	r3, r4
 800d528:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800d52a:	4313      	orrs	r3, r2
 800d52c:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d52e:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d530:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d532:	6843      	ldr	r3, [r0, #4]
 800d534:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d538:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d53c:	4313      	orrs	r3, r2
 800d53e:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d542:	4323      	orrs	r3, r4
 800d544:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d548:	4313      	orrs	r3, r2
 800d54a:	432b      	orrs	r3, r5
 800d54c:	698a      	ldr	r2, [r1, #24]
 800d54e:	4323      	orrs	r3, r4
 800d550:	4313      	orrs	r3, r2
 800d552:	6043      	str	r3, [r0, #4]
}
 800d554:	bc30      	pop	{r4, r5}
 800d556:	2000      	movs	r0, #0
 800d558:	4770      	bx	lr
 800d55a:	bf00      	nop

0800d55c <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800d55c:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d55e:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800d560:	bb02      	cbnz	r2, 800d5a4 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d562:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d566:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d56a:	3c01      	subs	r4, #1
 800d56c:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d570:	3a01      	subs	r2, #1
 800d572:	4313      	orrs	r3, r2
 800d574:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d578:	3c01      	subs	r4, #1
 800d57a:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800d57e:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d582:	3a01      	subs	r2, #1
 800d584:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800d588:	698a      	ldr	r2, [r1, #24]
 800d58a:	1e69      	subs	r1, r5, #1
 800d58c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d590:	1e61      	subs	r1, r4, #1
 800d592:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800d596:	3a01      	subs	r2, #1
 800d598:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d59c:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800d59e:	bc30      	pop	{r4, r5}
 800d5a0:	2000      	movs	r0, #0
 800d5a2:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d5a4:	68cc      	ldr	r4, [r1, #12]
 800d5a6:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d5a8:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d5aa:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800d5ae:	3c01      	subs	r4, #1
 800d5b0:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800d5b4:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800d5b8:	3a01      	subs	r2, #1
 800d5ba:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800d5be:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d5c0:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d5c4:	68c3      	ldr	r3, [r0, #12]
 800d5c6:	3c01      	subs	r4, #1
 800d5c8:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d5cc:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d5d0:	3a01      	subs	r2, #1
 800d5d2:	690c      	ldr	r4, [r1, #16]
 800d5d4:	4313      	orrs	r3, r2
 800d5d6:	698a      	ldr	r2, [r1, #24]
 800d5d8:	1e69      	subs	r1, r5, #1
 800d5da:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800d5de:	1e61      	subs	r1, r4, #1
 800d5e0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d5e4:	3a01      	subs	r2, #1
 800d5e6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d5ea:	60c3      	str	r3, [r0, #12]
}
 800d5ec:	bc30      	pop	{r4, r5}
 800d5ee:	2000      	movs	r0, #0
 800d5f0:	4770      	bx	lr
 800d5f2:	bf00      	nop

0800d5f4 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800d5f4:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d5f6:	680b      	ldr	r3, [r1, #0]
{
 800d5f8:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d5fa:	684a      	ldr	r2, [r1, #4]
{
 800d5fc:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d5fe:	4313      	orrs	r3, r2
 800d600:	6900      	ldr	r0, [r0, #16]
 800d602:	68ca      	ldr	r2, [r1, #12]
 800d604:	0d80      	lsrs	r0, r0, #22
 800d606:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800d60a:	688a      	ldr	r2, [r1, #8]
 800d60c:	0580      	lsls	r0, r0, #22
 800d60e:	4303      	orrs	r3, r0
 800d610:	3a01      	subs	r2, #1
 800d612:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800d616:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800d618:	f7fc fcca 	bl	8009fb0 <HAL_GetTick>
 800d61c:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d61e:	1c6b      	adds	r3, r5, #1
 800d620:	d105      	bne.n	800d62e <FMC_SDRAM_SendCommand+0x3a>
 800d622:	69a3      	ldr	r3, [r4, #24]
 800d624:	f013 0320 	ands.w	r3, r3, #32
 800d628:	d1fb      	bne.n	800d622 <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800d62a:	4618      	mov	r0, r3
}
 800d62c:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d62e:	69a3      	ldr	r3, [r4, #24]
 800d630:	f013 0320 	ands.w	r3, r3, #32
 800d634:	d0f9      	beq.n	800d62a <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800d636:	b125      	cbz	r5, 800d642 <FMC_SDRAM_SendCommand+0x4e>
 800d638:	f7fc fcba 	bl	8009fb0 <HAL_GetTick>
 800d63c:	1b80      	subs	r0, r0, r6
 800d63e:	42a8      	cmp	r0, r5
 800d640:	d9ed      	bls.n	800d61e <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800d642:	2003      	movs	r0, #3
}
 800d644:	bd70      	pop	{r4, r5, r6, pc}
 800d646:	bf00      	nop

0800d648 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d648:	6943      	ldr	r3, [r0, #20]
 800d64a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800d64e:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d650:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800d654:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800d658:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d65a:	6151      	str	r1, [r2, #20]
}
 800d65c:	4770      	bx	lr
 800d65e:	bf00      	nop

0800d660 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800d660:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800d662:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d666:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800d668:	f002 fb04 	bl	800fc74 <xTaskGetSchedulerState>
 800d66c:	2801      	cmp	r0, #1
 800d66e:	d100      	bne.n	800d672 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800d670:	bd08      	pop	{r3, pc}
 800d672:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800d676:	f000 bc45 	b.w	800df04 <xPortSysTickHandler>
 800d67a:	bf00      	nop

0800d67c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800d67c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800d680:	b92b      	cbnz	r3, 800d68e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800d682:	4b06      	ldr	r3, [pc, #24]	; (800d69c <osKernelInitialize+0x20>)
 800d684:	6818      	ldr	r0, [r3, #0]
 800d686:	b928      	cbnz	r0, 800d694 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800d688:	2201      	movs	r2, #1
 800d68a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800d68c:	4770      	bx	lr
    stat = osErrorISR;
 800d68e:	f06f 0005 	mvn.w	r0, #5
 800d692:	4770      	bx	lr
    } else {
      stat = osError;
 800d694:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800d698:	4770      	bx	lr
 800d69a:	bf00      	nop
 800d69c:	20002264 	.word	0x20002264

0800d6a0 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800d6a0:	b510      	push	{r4, lr}
 800d6a2:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d6a6:	b974      	cbnz	r4, 800d6c6 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800d6a8:	4b08      	ldr	r3, [pc, #32]	; (800d6cc <osKernelStart+0x2c>)
 800d6aa:	681a      	ldr	r2, [r3, #0]
 800d6ac:	2a01      	cmp	r2, #1
 800d6ae:	d107      	bne.n	800d6c0 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d6b0:	4907      	ldr	r1, [pc, #28]	; (800d6d0 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800d6b2:	2202      	movs	r2, #2
 800d6b4:	77cc      	strb	r4, [r1, #31]
 800d6b6:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800d6b8:	f002 f8b6 	bl	800f828 <vTaskStartScheduler>
      stat = osOK;
 800d6bc:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800d6be:	bd10      	pop	{r4, pc}
      stat = osError;
 800d6c0:	f04f 30ff 	mov.w	r0, #4294967295
}
 800d6c4:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d6c6:	f06f 0005 	mvn.w	r0, #5
}
 800d6ca:	bd10      	pop	{r4, pc}
 800d6cc:	20002264 	.word	0x20002264
 800d6d0:	e000ed00 	.word	0xe000ed00

0800d6d4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d6d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d6d6:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800d6d8:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d6da:	4615      	mov	r5, r2
  hTask = NULL;
 800d6dc:	9405      	str	r4, [sp, #20]
 800d6de:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800d6e2:	b9ea      	cbnz	r2, 800d720 <osThreadNew+0x4c>
 800d6e4:	b350      	cbz	r0, 800d73c <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800d6e6:	b1f5      	cbz	r5, 800d726 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800d6e8:	69ab      	ldr	r3, [r5, #24]
 800d6ea:	bb5b      	cbnz	r3, 800d744 <osThreadNew+0x70>
 800d6ec:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d6ee:	686a      	ldr	r2, [r5, #4]
 800d6f0:	07d2      	lsls	r2, r2, #31
 800d6f2:	d423      	bmi.n	800d73c <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800d6f4:	696e      	ldr	r6, [r5, #20]
 800d6f6:	b34e      	cbz	r6, 800d74c <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800d6f8:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d6fc:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800d6fe:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d700:	b34c      	cbz	r4, 800d756 <osThreadNew+0x82>
 800d702:	68ea      	ldr	r2, [r5, #12]
 800d704:	2aab      	cmp	r2, #171	; 0xab
 800d706:	d919      	bls.n	800d73c <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d708:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d70a:	b1bd      	cbz	r5, 800d73c <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d70c:	b1b6      	cbz	r6, 800d73c <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800d70e:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800d712:	9300      	str	r3, [sp, #0]
 800d714:	4662      	mov	r2, ip
 800d716:	460b      	mov	r3, r1
 800d718:	4639      	mov	r1, r7
 800d71a:	f001 ffc3 	bl	800f6a4 <xTaskCreateStatic>
 800d71e:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800d720:	4620      	mov	r0, r4
 800d722:	b007      	add	sp, #28
 800d724:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d726:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800d728:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d72a:	ac05      	add	r4, sp, #20
 800d72c:	9300      	str	r3, [sp, #0]
 800d72e:	9401      	str	r4, [sp, #4]
 800d730:	460b      	mov	r3, r1
 800d732:	4629      	mov	r1, r5
 800d734:	f001 fff0 	bl	800f718 <xTaskCreate>
 800d738:	2801      	cmp	r0, #1
 800d73a:	d00a      	beq.n	800d752 <osThreadNew+0x7e>
        return (NULL);
 800d73c:	2400      	movs	r4, #0
}
 800d73e:	4620      	mov	r0, r4
 800d740:	b007      	add	sp, #28
 800d742:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d744:	1e5c      	subs	r4, r3, #1
 800d746:	2c37      	cmp	r4, #55	; 0x37
 800d748:	d9d1      	bls.n	800d6ee <osThreadNew+0x1a>
 800d74a:	e7f7      	b.n	800d73c <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800d74c:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800d750:	e7d4      	b.n	800d6fc <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800d752:	9c05      	ldr	r4, [sp, #20]
 800d754:	e7e4      	b.n	800d720 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800d756:	68ee      	ldr	r6, [r5, #12]
 800d758:	2e00      	cmp	r6, #0
 800d75a:	d1e1      	bne.n	800d720 <osThreadNew+0x4c>
 800d75c:	692d      	ldr	r5, [r5, #16]
 800d75e:	2d00      	cmp	r5, #0
 800d760:	d1de      	bne.n	800d720 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d762:	fa1f f28c 	uxth.w	r2, ip
 800d766:	463d      	mov	r5, r7
 800d768:	e7df      	b.n	800d72a <osThreadNew+0x56>
 800d76a:	bf00      	nop

0800d76c <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800d76c:	b510      	push	{r4, lr}
 800d76e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d772:	b92c      	cbnz	r4, 800d780 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800d774:	b900      	cbnz	r0, 800d778 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800d776:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800d778:	f002 f800 	bl	800f77c <vTaskDelay>
    stat = osOK;
 800d77c:	4620      	mov	r0, r4
}
 800d77e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d780:	f06f 0005 	mvn.w	r0, #5
}
 800d784:	bd10      	pop	{r4, pc}
 800d786:	bf00      	nop

0800d788 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800d788:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d78a:	b083      	sub	sp, #12
 800d78c:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d790:	b9fe      	cbnz	r6, 800d7d2 <osSemaphoreNew+0x4a>
 800d792:	b1f0      	cbz	r0, 800d7d2 <osSemaphoreNew+0x4a>
 800d794:	4288      	cmp	r0, r1
 800d796:	460f      	mov	r7, r1
 800d798:	d31b      	bcc.n	800d7d2 <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800d79a:	4615      	mov	r5, r2
 800d79c:	b192      	cbz	r2, 800d7c4 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800d79e:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800d7a2:	b1d2      	cbz	r2, 800d7da <osSemaphoreNew+0x52>
 800d7a4:	2b4f      	cmp	r3, #79	; 0x4f
 800d7a6:	d914      	bls.n	800d7d2 <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800d7a8:	2801      	cmp	r0, #1
 800d7aa:	d038      	beq.n	800d81e <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800d7ac:	f000 fd90 	bl	800e2d0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800d7b0:	4604      	mov	r4, r0
 800d7b2:	b170      	cbz	r0, 800d7d2 <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800d7b4:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800d7b6:	4620      	mov	r0, r4
 800d7b8:	4629      	mov	r1, r5
 800d7ba:	f001 fc3b 	bl	800f034 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800d7be:	4620      	mov	r0, r4
 800d7c0:	b003      	add	sp, #12
 800d7c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800d7c4:	2801      	cmp	r0, #1
 800d7c6:	d012      	beq.n	800d7ee <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d7c8:	f000 fde2 	bl	800e390 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d7cc:	4604      	mov	r4, r0
 800d7ce:	2800      	cmp	r0, #0
 800d7d0:	d1f1      	bne.n	800d7b6 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800d7d2:	2400      	movs	r4, #0
}
 800d7d4:	4620      	mov	r0, r4
 800d7d6:	b003      	add	sp, #12
 800d7d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800d7da:	2b00      	cmp	r3, #0
 800d7dc:	d1f9      	bne.n	800d7d2 <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800d7de:	2801      	cmp	r0, #1
 800d7e0:	d005      	beq.n	800d7ee <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d7e2:	f000 fdd5 	bl	800e390 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d7e6:	4604      	mov	r4, r0
 800d7e8:	2800      	cmp	r0, #0
 800d7ea:	d1e3      	bne.n	800d7b4 <osSemaphoreNew+0x2c>
 800d7ec:	e7f1      	b.n	800d7d2 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800d7ee:	2203      	movs	r2, #3
 800d7f0:	2100      	movs	r1, #0
 800d7f2:	2001      	movs	r0, #1
 800d7f4:	f000 fd2a 	bl	800e24c <xQueueGenericCreate>
 800d7f8:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800d7fa:	2c00      	cmp	r4, #0
 800d7fc:	d0e9      	beq.n	800d7d2 <osSemaphoreNew+0x4a>
 800d7fe:	b917      	cbnz	r7, 800d806 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800d800:	2d00      	cmp	r5, #0
 800d802:	d1d7      	bne.n	800d7b4 <osSemaphoreNew+0x2c>
 800d804:	e7d7      	b.n	800d7b6 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d806:	2300      	movs	r3, #0
 800d808:	461a      	mov	r2, r3
 800d80a:	4619      	mov	r1, r3
 800d80c:	4620      	mov	r0, r4
 800d80e:	f000 fe05 	bl	800e41c <xQueueGenericSend>
 800d812:	2801      	cmp	r0, #1
 800d814:	d0f4      	beq.n	800d800 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800d816:	4620      	mov	r0, r4
 800d818:	f001 fbc6 	bl	800efa8 <vQueueDelete>
 800d81c:	e7d9      	b.n	800d7d2 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800d81e:	4613      	mov	r3, r2
 800d820:	2203      	movs	r2, #3
 800d822:	9200      	str	r2, [sp, #0]
 800d824:	4631      	mov	r1, r6
 800d826:	4632      	mov	r2, r6
 800d828:	f000 fca2 	bl	800e170 <xQueueGenericCreateStatic>
 800d82c:	4604      	mov	r4, r0
 800d82e:	e7e4      	b.n	800d7fa <osSemaphoreNew+0x72>

0800d830 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d830:	b370      	cbz	r0, 800d890 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800d832:	b510      	push	{r4, lr}
 800d834:	460c      	mov	r4, r1
 800d836:	b082      	sub	sp, #8
 800d838:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d83c:	b1c3      	cbz	r3, 800d870 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800d83e:	bb21      	cbnz	r1, 800d88a <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d840:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d842:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d844:	f001 fb2e 	bl	800eea4 <xQueueReceiveFromISR>
 800d848:	2801      	cmp	r0, #1
 800d84a:	d11a      	bne.n	800d882 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d84c:	9b01      	ldr	r3, [sp, #4]
 800d84e:	b913      	cbnz	r3, 800d856 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800d850:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d852:	b002      	add	sp, #8
 800d854:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d856:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d85a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d85e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d862:	f3bf 8f4f 	dsb	sy
 800d866:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d86a:	4620      	mov	r0, r4
}
 800d86c:	b002      	add	sp, #8
 800d86e:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800d870:	f001 f98e 	bl	800eb90 <xQueueSemaphoreTake>
 800d874:	2801      	cmp	r0, #1
 800d876:	d0eb      	beq.n	800d850 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800d878:	b11c      	cbz	r4, 800d882 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800d87a:	f06f 0001 	mvn.w	r0, #1
}
 800d87e:	b002      	add	sp, #8
 800d880:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800d882:	f06f 0002 	mvn.w	r0, #2
}
 800d886:	b002      	add	sp, #8
 800d888:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800d88a:	f06f 0003 	mvn.w	r0, #3
 800d88e:	e7e0      	b.n	800d852 <osSemaphoreAcquire+0x22>
 800d890:	f06f 0003 	mvn.w	r0, #3
}
 800d894:	4770      	bx	lr
 800d896:	bf00      	nop

0800d898 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d898:	b330      	cbz	r0, 800d8e8 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800d89a:	b510      	push	{r4, lr}
 800d89c:	b082      	sub	sp, #8
 800d89e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d8a2:	b1ab      	cbz	r3, 800d8d0 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800d8a4:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d8a6:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800d8a8:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d8aa:	f000 ff9b 	bl	800e7e4 <xQueueGiveFromISR>
 800d8ae:	2801      	cmp	r0, #1
 800d8b0:	d117      	bne.n	800d8e2 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800d8b2:	9b01      	ldr	r3, [sp, #4]
 800d8b4:	b193      	cbz	r3, 800d8dc <osSemaphoreRelease+0x44>
 800d8b6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d8ba:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d8be:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d8c2:	f3bf 8f4f 	dsb	sy
 800d8c6:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d8ca:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800d8cc:	b002      	add	sp, #8
 800d8ce:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d8d0:	461a      	mov	r2, r3
 800d8d2:	4619      	mov	r1, r3
 800d8d4:	f000 fda2 	bl	800e41c <xQueueGenericSend>
 800d8d8:	2801      	cmp	r0, #1
 800d8da:	d102      	bne.n	800d8e2 <osSemaphoreRelease+0x4a>
  stat = osOK;
 800d8dc:	2000      	movs	r0, #0
}
 800d8de:	b002      	add	sp, #8
 800d8e0:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800d8e2:	f06f 0002 	mvn.w	r0, #2
 800d8e6:	e7fa      	b.n	800d8de <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800d8e8:	f06f 0003 	mvn.w	r0, #3
}
 800d8ec:	4770      	bx	lr
 800d8ee:	bf00      	nop

0800d8f0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800d8f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d8f2:	b085      	sub	sp, #20
 800d8f4:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d8f8:	b987      	cbnz	r7, 800d91c <osMessageQueueNew+0x2c>
 800d8fa:	4605      	mov	r5, r0
 800d8fc:	b170      	cbz	r0, 800d91c <osMessageQueueNew+0x2c>
 800d8fe:	b169      	cbz	r1, 800d91c <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800d900:	4614      	mov	r4, r2
 800d902:	b1ea      	cbz	r2, 800d940 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d904:	6893      	ldr	r3, [r2, #8]
 800d906:	b163      	cbz	r3, 800d922 <osMessageQueueNew+0x32>
 800d908:	68d2      	ldr	r2, [r2, #12]
 800d90a:	2a4f      	cmp	r2, #79	; 0x4f
 800d90c:	d906      	bls.n	800d91c <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d90e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d910:	b122      	cbz	r2, 800d91c <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d912:	6966      	ldr	r6, [r4, #20]
 800d914:	fb01 f505 	mul.w	r5, r1, r5
 800d918:	42ae      	cmp	r6, r5
 800d91a:	d21c      	bcs.n	800d956 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800d91c:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800d91e:	b005      	add	sp, #20
 800d920:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800d922:	68d3      	ldr	r3, [r2, #12]
 800d924:	2b00      	cmp	r3, #0
 800d926:	d1f9      	bne.n	800d91c <osMessageQueueNew+0x2c>
 800d928:	6913      	ldr	r3, [r2, #16]
 800d92a:	2b00      	cmp	r3, #0
 800d92c:	d1f6      	bne.n	800d91c <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800d92e:	6952      	ldr	r2, [r2, #20]
 800d930:	2a00      	cmp	r2, #0
 800d932:	d1f3      	bne.n	800d91c <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d934:	f000 fc8a 	bl	800e24c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d938:	2800      	cmp	r0, #0
 800d93a:	d0ef      	beq.n	800d91c <osMessageQueueNew+0x2c>
        name = attr->name;
 800d93c:	6824      	ldr	r4, [r4, #0]
 800d93e:	e003      	b.n	800d948 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d940:	f000 fc84 	bl	800e24c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d944:	2800      	cmp	r0, #0
 800d946:	d0e9      	beq.n	800d91c <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800d948:	4621      	mov	r1, r4
 800d94a:	9003      	str	r0, [sp, #12]
 800d94c:	f001 fb72 	bl	800f034 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800d950:	9803      	ldr	r0, [sp, #12]
}
 800d952:	b005      	add	sp, #20
 800d954:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800d956:	9700      	str	r7, [sp, #0]
 800d958:	f000 fc0a 	bl	800e170 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800d95c:	2800      	cmp	r0, #0
 800d95e:	d1ed      	bne.n	800d93c <osMessageQueueNew+0x4c>
 800d960:	e7dc      	b.n	800d91c <osMessageQueueNew+0x2c>
 800d962:	bf00      	nop

0800d964 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800d964:	b570      	push	{r4, r5, r6, lr}
 800d966:	461c      	mov	r4, r3
 800d968:	b082      	sub	sp, #8
 800d96a:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d96e:	b1be      	cbz	r6, 800d9a0 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d970:	b350      	cbz	r0, 800d9c8 <osMessageQueuePut+0x64>
 800d972:	b349      	cbz	r1, 800d9c8 <osMessageQueuePut+0x64>
 800d974:	bb43      	cbnz	r3, 800d9c8 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d976:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d978:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d97a:	f000 fecd 	bl	800e718 <xQueueGenericSendFromISR>
 800d97e:	2801      	cmp	r0, #1
 800d980:	d11e      	bne.n	800d9c0 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d982:	9b01      	ldr	r3, [sp, #4]
 800d984:	b1cb      	cbz	r3, 800d9ba <osMessageQueuePut+0x56>
 800d986:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d98a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d98e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d992:	f3bf 8f4f 	dsb	sy
 800d996:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d99a:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d99c:	b002      	add	sp, #8
 800d99e:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d9a0:	b190      	cbz	r0, 800d9c8 <osMessageQueuePut+0x64>
 800d9a2:	b189      	cbz	r1, 800d9c8 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d9a4:	4633      	mov	r3, r6
 800d9a6:	4622      	mov	r2, r4
 800d9a8:	f000 fd38 	bl	800e41c <xQueueGenericSend>
 800d9ac:	2801      	cmp	r0, #1
 800d9ae:	d004      	beq.n	800d9ba <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800d9b0:	b134      	cbz	r4, 800d9c0 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800d9b2:	f06f 0001 	mvn.w	r0, #1
}
 800d9b6:	b002      	add	sp, #8
 800d9b8:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800d9ba:	2000      	movs	r0, #0
}
 800d9bc:	b002      	add	sp, #8
 800d9be:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800d9c0:	f06f 0002 	mvn.w	r0, #2
}
 800d9c4:	b002      	add	sp, #8
 800d9c6:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800d9c8:	f06f 0003 	mvn.w	r0, #3
 800d9cc:	e7e6      	b.n	800d99c <osMessageQueuePut+0x38>
 800d9ce:	bf00      	nop

0800d9d0 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800d9d0:	b530      	push	{r4, r5, lr}
 800d9d2:	461c      	mov	r4, r3
 800d9d4:	b083      	sub	sp, #12
 800d9d6:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d9da:	b1bb      	cbz	r3, 800da0c <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d9dc:	b348      	cbz	r0, 800da32 <osMessageQueueGet+0x62>
 800d9de:	b341      	cbz	r1, 800da32 <osMessageQueueGet+0x62>
 800d9e0:	bb3c      	cbnz	r4, 800da32 <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d9e2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d9e4:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d9e6:	f001 fa5d 	bl	800eea4 <xQueueReceiveFromISR>
 800d9ea:	2801      	cmp	r0, #1
 800d9ec:	d11d      	bne.n	800da2a <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d9ee:	9b01      	ldr	r3, [sp, #4]
 800d9f0:	b1c3      	cbz	r3, 800da24 <osMessageQueueGet+0x54>
 800d9f2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d9f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d9fa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d9fe:	f3bf 8f4f 	dsb	sy
 800da02:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800da06:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800da08:	b003      	add	sp, #12
 800da0a:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800da0c:	b188      	cbz	r0, 800da32 <osMessageQueueGet+0x62>
 800da0e:	b181      	cbz	r1, 800da32 <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800da10:	4622      	mov	r2, r4
 800da12:	f000 ff3f 	bl	800e894 <xQueueReceive>
 800da16:	2801      	cmp	r0, #1
 800da18:	d004      	beq.n	800da24 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800da1a:	b134      	cbz	r4, 800da2a <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800da1c:	f06f 0001 	mvn.w	r0, #1
}
 800da20:	b003      	add	sp, #12
 800da22:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800da24:	2000      	movs	r0, #0
}
 800da26:	b003      	add	sp, #12
 800da28:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800da2a:	f06f 0002 	mvn.w	r0, #2
}
 800da2e:	b003      	add	sp, #12
 800da30:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800da32:	f06f 0003 	mvn.w	r0, #3
 800da36:	e7e7      	b.n	800da08 <osMessageQueueGet+0x38>

0800da38 <osMessageQueueGetCount>:
 800da38:	b130      	cbz	r0, 800da48 <osMessageQueueGetCount+0x10>
 800da3a:	f3ef 8305 	mrs	r3, IPSR
 800da3e:	b10b      	cbz	r3, 800da44 <osMessageQueueGetCount+0xc>
 800da40:	f001 baa4 	b.w	800ef8c <uxQueueMessagesWaitingFromISR>
 800da44:	f001 ba8c 	b.w	800ef60 <uxQueueMessagesWaiting>
 800da48:	4770      	bx	lr
 800da4a:	bf00      	nop

0800da4c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800da4c:	4b04      	ldr	r3, [pc, #16]	; (800da60 <vApplicationGetIdleTaskMemory+0x14>)
 800da4e:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800da50:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800da52:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800da54:	4c03      	ldr	r4, [pc, #12]	; (800da64 <vApplicationGetIdleTaskMemory+0x18>)
 800da56:	600c      	str	r4, [r1, #0]
}
 800da58:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800da5c:	6013      	str	r3, [r2, #0]
}
 800da5e:	4770      	bx	lr
 800da60:	200021b8 	.word	0x200021b8
 800da64:	20001fb8 	.word	0x20001fb8

0800da68 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800da68:	4b05      	ldr	r3, [pc, #20]	; (800da80 <vApplicationGetTimerTaskMemory+0x18>)
 800da6a:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800da6c:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800da6e:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800da72:	4c04      	ldr	r4, [pc, #16]	; (800da84 <vApplicationGetTimerTaskMemory+0x1c>)
 800da74:	600c      	str	r4, [r1, #0]
}
 800da76:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800da7a:	6013      	str	r3, [r2, #0]
}
 800da7c:	4770      	bx	lr
 800da7e:	bf00      	nop
 800da80:	20002668 	.word	0x20002668
 800da84:	20002268 	.word	0x20002268

0800da88 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800da88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da8c:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800da8e:	f001 ff47 	bl	800f920 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800da92:	4a54      	ldr	r2, [pc, #336]	; (800dbe4 <pvPortMalloc+0x15c>)
 800da94:	6816      	ldr	r6, [r2, #0]
 800da96:	2e00      	cmp	r6, #0
 800da98:	d06e      	beq.n	800db78 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800da9a:	4b53      	ldr	r3, [pc, #332]	; (800dbe8 <pvPortMalloc+0x160>)
 800da9c:	681f      	ldr	r7, [r3, #0]
 800da9e:	423d      	tst	r5, r7
 800daa0:	d12e      	bne.n	800db00 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800daa2:	b36d      	cbz	r5, 800db00 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800daa4:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800daa8:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800daaa:	bf1c      	itt	ne
 800daac:	f024 0407 	bicne.w	r4, r4, #7
 800dab0:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800dab2:	b32c      	cbz	r4, 800db00 <pvPortMalloc+0x78>
 800dab4:	f8df c144 	ldr.w	ip, [pc, #324]	; 800dbfc <pvPortMalloc+0x174>
 800dab8:	f8dc 5000 	ldr.w	r5, [ip]
 800dabc:	42a5      	cmp	r5, r4
 800dabe:	d31f      	bcc.n	800db00 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800dac0:	484a      	ldr	r0, [pc, #296]	; (800dbec <pvPortMalloc+0x164>)
 800dac2:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800dac4:	e003      	b.n	800dace <pvPortMalloc+0x46>
 800dac6:	681a      	ldr	r2, [r3, #0]
 800dac8:	b122      	cbz	r2, 800dad4 <pvPortMalloc+0x4c>
 800daca:	4618      	mov	r0, r3
 800dacc:	4613      	mov	r3, r2
 800dace:	6859      	ldr	r1, [r3, #4]
 800dad0:	42a1      	cmp	r1, r4
 800dad2:	d3f8      	bcc.n	800dac6 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800dad4:	42b3      	cmp	r3, r6
 800dad6:	d013      	beq.n	800db00 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800dad8:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800dada:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800dadc:	f858 eb08 	ldr.w	lr, [r8], #8
 800dae0:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800dae4:	2a10      	cmp	r2, #16
 800dae6:	d929      	bls.n	800db3c <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800dae8:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800daea:	0748      	lsls	r0, r1, #29
 800daec:	d00f      	beq.n	800db0e <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800daee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800daf2:	f383 8811 	msr	BASEPRI, r3
 800daf6:	f3bf 8f6f 	isb	sy
 800dafa:	f3bf 8f4f 	dsb	sy
 800dafe:	e7fe      	b.n	800dafe <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800db00:	f001 ff16 	bl	800f930 <xTaskResumeAll>
 800db04:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800db08:	4640      	mov	r0, r8
 800db0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800db0e:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800db10:	4a36      	ldr	r2, [pc, #216]	; (800dbec <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800db12:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800db14:	4614      	mov	r4, r2
 800db16:	6812      	ldr	r2, [r2, #0]
 800db18:	4291      	cmp	r1, r2
 800db1a:	d8fb      	bhi.n	800db14 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800db1c:	6860      	ldr	r0, [r4, #4]
 800db1e:	eb04 0e00 	add.w	lr, r4, r0
 800db22:	4571      	cmp	r1, lr
 800db24:	d04b      	beq.n	800dbbe <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800db26:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800db2a:	eb01 000e 	add.w	r0, r1, lr
 800db2e:	4282      	cmp	r2, r0
 800db30:	d051      	beq.n	800dbd6 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800db32:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800db34:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800db36:	bf18      	it	ne
 800db38:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800db3a:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800db3c:	4a2c      	ldr	r2, [pc, #176]	; (800dbf0 <pvPortMalloc+0x168>)
 800db3e:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800db40:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800db42:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800db44:	bf38      	it	cc
 800db46:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800db48:	4a2a      	ldr	r2, [pc, #168]	; (800dbf4 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800db4a:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800db4e:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800db50:	2000      	movs	r0, #0
 800db52:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800db56:	6813      	ldr	r3, [r2, #0]
 800db58:	3301      	adds	r3, #1
 800db5a:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800db5c:	f001 fee8 	bl	800f930 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800db60:	f018 0f07 	tst.w	r8, #7
 800db64:	d0d0      	beq.n	800db08 <pvPortMalloc+0x80>
 800db66:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db6a:	f383 8811 	msr	BASEPRI, r3
 800db6e:	f3bf 8f6f 	isb	sy
 800db72:	f3bf 8f4f 	dsb	sy
 800db76:	e7fe      	b.n	800db76 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800db78:	4b1f      	ldr	r3, [pc, #124]	; (800dbf8 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800db7a:	075e      	lsls	r6, r3, #29
 800db7c:	d118      	bne.n	800dbb0 <pvPortMalloc+0x128>
 800db7e:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800db82:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800db84:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800db86:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800db8a:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800db8c:	4a18      	ldr	r2, [pc, #96]	; (800dbf0 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800db8e:	4817      	ldr	r0, [pc, #92]	; (800dbec <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800db90:	4c15      	ldr	r4, [pc, #84]	; (800dbe8 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800db92:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800db94:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800db96:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800db98:	4a18      	ldr	r2, [pc, #96]	; (800dbfc <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800db9a:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800db9e:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800dba0:	2200      	movs	r2, #0
 800dba2:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800dba4:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800dba6:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800dbaa:	e9c1 6300 	strd	r6, r3, [r1]
}
 800dbae:	e776      	b.n	800da9e <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800dbb0:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800dbb2:	f021 0107 	bic.w	r1, r1, #7
 800dbb6:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800dbba:	460b      	mov	r3, r1
 800dbbc:	e7e2      	b.n	800db84 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dbbe:	6849      	ldr	r1, [r1, #4]
 800dbc0:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dbc4:	eb04 010e 	add.w	r1, r4, lr
 800dbc8:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dbca:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dbce:	d001      	beq.n	800dbd4 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dbd0:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800dbd2:	e7b2      	b.n	800db3a <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dbd4:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800dbd6:	42b2      	cmp	r2, r6
 800dbd8:	d0ab      	beq.n	800db32 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dbda:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dbdc:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dbde:	4470      	add	r0, lr
 800dbe0:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dbe2:	e7a6      	b.n	800db32 <pvPortMalloc+0xaa>
 800dbe4:	20002714 	.word	0x20002714
 800dbe8:	20012718 	.word	0x20012718
 800dbec:	2001272c 	.word	0x2001272c
 800dbf0:	20012720 	.word	0x20012720
 800dbf4:	20012724 	.word	0x20012724
 800dbf8:	20002718 	.word	0x20002718
 800dbfc:	2001271c 	.word	0x2001271c

0800dc00 <vPortFree>:
	if( pv != NULL )
 800dc00:	b1d0      	cbz	r0, 800dc38 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800dc02:	4a2c      	ldr	r2, [pc, #176]	; (800dcb4 <vPortFree+0xb4>)
 800dc04:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800dc08:	6812      	ldr	r2, [r2, #0]
 800dc0a:	4213      	tst	r3, r2
 800dc0c:	d00b      	beq.n	800dc26 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800dc0e:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800dc12:	b191      	cbz	r1, 800dc3a <vPortFree+0x3a>
 800dc14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc18:	f383 8811 	msr	BASEPRI, r3
 800dc1c:	f3bf 8f6f 	isb	sy
 800dc20:	f3bf 8f4f 	dsb	sy
 800dc24:	e7fe      	b.n	800dc24 <vPortFree+0x24>
 800dc26:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc2a:	f383 8811 	msr	BASEPRI, r3
 800dc2e:	f3bf 8f6f 	isb	sy
 800dc32:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800dc36:	e7fe      	b.n	800dc36 <vPortFree+0x36>
 800dc38:	4770      	bx	lr
{
 800dc3a:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dc3c:	ea23 0302 	bic.w	r3, r3, r2
{
 800dc40:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dc42:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dc46:	4c1c      	ldr	r4, [pc, #112]	; (800dcb8 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dc48:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800dc4a:	f001 fe69 	bl	800f920 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dc4e:	9801      	ldr	r0, [sp, #4]
 800dc50:	6822      	ldr	r2, [r4, #0]
 800dc52:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dc56:	4b19      	ldr	r3, [pc, #100]	; (800dcbc <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dc58:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800dc5a:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dc5c:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dc5e:	461a      	mov	r2, r3
 800dc60:	681b      	ldr	r3, [r3, #0]
 800dc62:	4298      	cmp	r0, r3
 800dc64:	d8fb      	bhi.n	800dc5e <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800dc66:	6854      	ldr	r4, [r2, #4]
 800dc68:	eb02 0e04 	add.w	lr, r2, r4
 800dc6c:	4570      	cmp	r0, lr
 800dc6e:	d010      	beq.n	800dc92 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc70:	eb00 0c01 	add.w	ip, r0, r1
 800dc74:	4563      	cmp	r3, ip
 800dc76:	d014      	beq.n	800dca2 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800dc78:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc7a:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800dc7c:	bf18      	it	ne
 800dc7e:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800dc80:	4a0f      	ldr	r2, [pc, #60]	; (800dcc0 <vPortFree+0xc0>)
 800dc82:	6813      	ldr	r3, [r2, #0]
 800dc84:	3301      	adds	r3, #1
 800dc86:	6013      	str	r3, [r2, #0]
}
 800dc88:	b002      	add	sp, #8
 800dc8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800dc8e:	f001 be4f 	b.w	800f930 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dc92:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc94:	1850      	adds	r0, r2, r1
 800dc96:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dc98:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc9a:	d001      	beq.n	800dca0 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc9c:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800dc9e:	e7ef      	b.n	800dc80 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dca0:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800dca2:	4c08      	ldr	r4, [pc, #32]	; (800dcc4 <vPortFree+0xc4>)
 800dca4:	6824      	ldr	r4, [r4, #0]
 800dca6:	42a3      	cmp	r3, r4
 800dca8:	d0e6      	beq.n	800dc78 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dcaa:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dcae:	4421      	add	r1, r4
 800dcb0:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dcb2:	e7e1      	b.n	800dc78 <vPortFree+0x78>
 800dcb4:	20012718 	.word	0x20012718
 800dcb8:	2001271c 	.word	0x2001271c
 800dcbc:	2001272c 	.word	0x2001272c
 800dcc0:	20012728 	.word	0x20012728
 800dcc4:	20002714 	.word	0x20002714

0800dcc8 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800dcc8:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800dccc:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800dcd0:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800dcd2:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800dcd6:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800dcda:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800dcdc:	4770      	bx	lr
 800dcde:	bf00      	nop

0800dce0 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800dce0:	2300      	movs	r3, #0
 800dce2:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800dce4:	4770      	bx	lr
 800dce6:	bf00      	nop

0800dce8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800dce8:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800dcea:	689a      	ldr	r2, [r3, #8]
 800dcec:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800dcee:	6802      	ldr	r2, [r0, #0]
{
 800dcf0:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800dcf2:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800dcf4:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800dcf6:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800dcf8:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800dcfa:	6099      	str	r1, [r3, #8]
}
 800dcfc:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800dd00:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800dd02:	6002      	str	r2, [r0, #0]
}
 800dd04:	4770      	bx	lr
 800dd06:	bf00      	nop

0800dd08 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800dd08:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800dd0a:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800dd0c:	1c6b      	adds	r3, r5, #1
 800dd0e:	d010      	beq.n	800dd32 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800dd10:	f100 0308 	add.w	r3, r0, #8
 800dd14:	461c      	mov	r4, r3
 800dd16:	685b      	ldr	r3, [r3, #4]
 800dd18:	681a      	ldr	r2, [r3, #0]
 800dd1a:	42aa      	cmp	r2, r5
 800dd1c:	d9fa      	bls.n	800dd14 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800dd1e:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800dd20:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800dd22:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800dd24:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800dd26:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800dd28:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800dd2a:	6108      	str	r0, [r1, #16]
}
 800dd2c:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800dd2e:	6002      	str	r2, [r0, #0]
}
 800dd30:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800dd32:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800dd34:	6863      	ldr	r3, [r4, #4]
 800dd36:	e7f2      	b.n	800dd1e <vListInsert+0x16>

0800dd38 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800dd38:	6903      	ldr	r3, [r0, #16]
{
 800dd3a:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800dd3c:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800dd40:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800dd42:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800dd44:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800dd46:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800dd48:	bf08      	it	eq
 800dd4a:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800dd4c:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800dd4e:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800dd52:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800dd54:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800dd56:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800dd58:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800dd5a:	6818      	ldr	r0, [r3, #0]
}
 800dd5c:	4770      	bx	lr
 800dd5e:	bf00      	nop

0800dd60 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800dd60:	4808      	ldr	r0, [pc, #32]	; (800dd84 <prvPortStartFirstTask+0x24>)
 800dd62:	6800      	ldr	r0, [r0, #0]
 800dd64:	6800      	ldr	r0, [r0, #0]
 800dd66:	f380 8808 	msr	MSP, r0
 800dd6a:	f04f 0000 	mov.w	r0, #0
 800dd6e:	f380 8814 	msr	CONTROL, r0
 800dd72:	b662      	cpsie	i
 800dd74:	b661      	cpsie	f
 800dd76:	f3bf 8f4f 	dsb	sy
 800dd7a:	f3bf 8f6f 	isb	sy
 800dd7e:	df00      	svc	0
 800dd80:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800dd82:	0000      	.short	0x0000
 800dd84:	e000ed08 	.word	0xe000ed08

0800dd88 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800dd88:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800dd98 <vPortEnableVFP+0x10>
 800dd8c:	6801      	ldr	r1, [r0, #0]
 800dd8e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800dd92:	6001      	str	r1, [r0, #0]
 800dd94:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800dd96:	0000      	.short	0x0000
 800dd98:	e000ed88 	.word	0xe000ed88

0800dd9c <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800dd9c:	4b0e      	ldr	r3, [pc, #56]	; (800ddd8 <prvTaskExitError+0x3c>)
 800dd9e:	681b      	ldr	r3, [r3, #0]
{
 800dda0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800dda2:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800dda4:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800dda6:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800dda8:	d008      	beq.n	800ddbc <prvTaskExitError+0x20>
 800ddaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddae:	f383 8811 	msr	BASEPRI, r3
 800ddb2:	f3bf 8f6f 	isb	sy
 800ddb6:	f3bf 8f4f 	dsb	sy
 800ddba:	e7fe      	b.n	800ddba <prvTaskExitError+0x1e>
 800ddbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddc0:	f383 8811 	msr	BASEPRI, r3
 800ddc4:	f3bf 8f6f 	isb	sy
 800ddc8:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800ddcc:	9b01      	ldr	r3, [sp, #4]
 800ddce:	2b00      	cmp	r3, #0
 800ddd0:	d0fc      	beq.n	800ddcc <prvTaskExitError+0x30>
}
 800ddd2:	b002      	add	sp, #8
 800ddd4:	4770      	bx	lr
 800ddd6:	bf00      	nop
 800ddd8:	20000084 	.word	0x20000084

0800dddc <pxPortInitialiseStack>:
{
 800dddc:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800ddde:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800dde2:	4c07      	ldr	r4, [pc, #28]	; (800de00 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800dde4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800dde8:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ddec:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ddf0:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ddf4:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800ddf8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ddfc:	3844      	subs	r0, #68	; 0x44
 800ddfe:	4770      	bx	lr
 800de00:	0800dd9d 	.word	0x0800dd9d
	...

0800de10 <SVC_Handler>:
	__asm volatile (
 800de10:	4b07      	ldr	r3, [pc, #28]	; (800de30 <pxCurrentTCBConst2>)
 800de12:	6819      	ldr	r1, [r3, #0]
 800de14:	6808      	ldr	r0, [r1, #0]
 800de16:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de1a:	f380 8809 	msr	PSP, r0
 800de1e:	f3bf 8f6f 	isb	sy
 800de22:	f04f 0000 	mov.w	r0, #0
 800de26:	f380 8811 	msr	BASEPRI, r0
 800de2a:	4770      	bx	lr
 800de2c:	f3af 8000 	nop.w

0800de30 <pxCurrentTCBConst2>:
 800de30:	20012780 	.word	0x20012780

0800de34 <vPortEnterCritical>:
 800de34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de38:	f383 8811 	msr	BASEPRI, r3
 800de3c:	f3bf 8f6f 	isb	sy
 800de40:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800de44:	4a0b      	ldr	r2, [pc, #44]	; (800de74 <vPortEnterCritical+0x40>)
 800de46:	6813      	ldr	r3, [r2, #0]
 800de48:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800de4a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800de4c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800de4e:	d000      	beq.n	800de52 <vPortEnterCritical+0x1e>
}
 800de50:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800de52:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800de56:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800de5a:	b2db      	uxtb	r3, r3
 800de5c:	2b00      	cmp	r3, #0
 800de5e:	d0f7      	beq.n	800de50 <vPortEnterCritical+0x1c>
 800de60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de64:	f383 8811 	msr	BASEPRI, r3
 800de68:	f3bf 8f6f 	isb	sy
 800de6c:	f3bf 8f4f 	dsb	sy
 800de70:	e7fe      	b.n	800de70 <vPortEnterCritical+0x3c>
 800de72:	bf00      	nop
 800de74:	20000084 	.word	0x20000084

0800de78 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800de78:	4a08      	ldr	r2, [pc, #32]	; (800de9c <vPortExitCritical+0x24>)
 800de7a:	6813      	ldr	r3, [r2, #0]
 800de7c:	b943      	cbnz	r3, 800de90 <vPortExitCritical+0x18>
 800de7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de82:	f383 8811 	msr	BASEPRI, r3
 800de86:	f3bf 8f6f 	isb	sy
 800de8a:	f3bf 8f4f 	dsb	sy
 800de8e:	e7fe      	b.n	800de8e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800de90:	3b01      	subs	r3, #1
 800de92:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800de94:	b90b      	cbnz	r3, 800de9a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800de96:	f383 8811 	msr	BASEPRI, r3
}
 800de9a:	4770      	bx	lr
 800de9c:	20000084 	.word	0x20000084

0800dea0 <PendSV_Handler>:
	__asm volatile
 800dea0:	f3ef 8009 	mrs	r0, PSP
 800dea4:	f3bf 8f6f 	isb	sy
 800dea8:	4b15      	ldr	r3, [pc, #84]	; (800df00 <pxCurrentTCBConst>)
 800deaa:	681a      	ldr	r2, [r3, #0]
 800deac:	f01e 0f10 	tst.w	lr, #16
 800deb0:	bf08      	it	eq
 800deb2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800deb6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800deba:	6010      	str	r0, [r2, #0]
 800debc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800dec0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800dec4:	f380 8811 	msr	BASEPRI, r0
 800dec8:	f3bf 8f4f 	dsb	sy
 800decc:	f3bf 8f6f 	isb	sy
 800ded0:	f001 fd54 	bl	800f97c <vTaskSwitchContext>
 800ded4:	f04f 0000 	mov.w	r0, #0
 800ded8:	f380 8811 	msr	BASEPRI, r0
 800dedc:	bc09      	pop	{r0, r3}
 800dede:	6819      	ldr	r1, [r3, #0]
 800dee0:	6808      	ldr	r0, [r1, #0]
 800dee2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dee6:	f01e 0f10 	tst.w	lr, #16
 800deea:	bf08      	it	eq
 800deec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800def0:	f380 8809 	msr	PSP, r0
 800def4:	f3bf 8f6f 	isb	sy
 800def8:	4770      	bx	lr
 800defa:	bf00      	nop
 800defc:	f3af 8000 	nop.w

0800df00 <pxCurrentTCBConst>:
 800df00:	20012780 	.word	0x20012780

0800df04 <xPortSysTickHandler>:
{
 800df04:	b508      	push	{r3, lr}
	__asm volatile
 800df06:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df0a:	f383 8811 	msr	BASEPRI, r3
 800df0e:	f3bf 8f6f 	isb	sy
 800df12:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800df16:	f001 fd21 	bl	800f95c <xTaskIncrementTick>
 800df1a:	b128      	cbz	r0, 800df28 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800df1c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800df20:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df24:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800df28:	2300      	movs	r3, #0
 800df2a:	f383 8811 	msr	BASEPRI, r3
}
 800df2e:	bd08      	pop	{r3, pc}

0800df30 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800df30:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800df34:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800df36:	4906      	ldr	r1, [pc, #24]	; (800df50 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800df38:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800df3a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800df3c:	680b      	ldr	r3, [r1, #0]
 800df3e:	4905      	ldr	r1, [pc, #20]	; (800df54 <vPortSetupTimerInterrupt+0x24>)
 800df40:	fba1 1303 	umull	r1, r3, r1, r3
 800df44:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800df46:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800df48:	3b01      	subs	r3, #1
 800df4a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800df4c:	6110      	str	r0, [r2, #16]
}
 800df4e:	4770      	bx	lr
 800df50:	20000078 	.word	0x20000078
 800df54:	10624dd3 	.word	0x10624dd3

0800df58 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800df58:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800df5c:	4a49      	ldr	r2, [pc, #292]	; (800e084 <xPortStartScheduler+0x12c>)
 800df5e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800df62:	4291      	cmp	r1, r2
 800df64:	d043      	beq.n	800dfee <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800df66:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800df6a:	4b47      	ldr	r3, [pc, #284]	; (800e088 <xPortStartScheduler+0x130>)
 800df6c:	429a      	cmp	r2, r3
 800df6e:	d035      	beq.n	800dfdc <xPortStartScheduler+0x84>
{
 800df70:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800df72:	4b46      	ldr	r3, [pc, #280]	; (800e08c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800df74:	4846      	ldr	r0, [pc, #280]	; (800e090 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800df76:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800df78:	4c46      	ldr	r4, [pc, #280]	; (800e094 <xPortStartScheduler+0x13c>)
{
 800df7a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800df7c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800df7e:	b2d2      	uxtb	r2, r2
 800df80:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800df82:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800df84:	781b      	ldrb	r3, [r3, #0]
 800df86:	b2db      	uxtb	r3, r3
 800df88:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800df8c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800df90:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800df94:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800df98:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800df9a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800df9c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800df9e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800dfa0:	bf48      	it	mi
 800dfa2:	2206      	movmi	r2, #6
 800dfa4:	d511      	bpl.n	800dfca <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800dfa6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800dfaa:	005b      	lsls	r3, r3, #1
 800dfac:	b2db      	uxtb	r3, r3
 800dfae:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800dfb2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800dfb6:	0609      	lsls	r1, r1, #24
 800dfb8:	4610      	mov	r0, r2
 800dfba:	f102 32ff 	add.w	r2, r2, #4294967295
 800dfbe:	d4f2      	bmi.n	800dfa6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800dfc0:	2803      	cmp	r0, #3
 800dfc2:	6020      	str	r0, [r4, #0]
 800dfc4:	f88d 3007 	strb.w	r3, [sp, #7]
 800dfc8:	d01a      	beq.n	800e000 <xPortStartScheduler+0xa8>
	__asm volatile
 800dfca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfce:	f383 8811 	msr	BASEPRI, r3
 800dfd2:	f3bf 8f6f 	isb	sy
 800dfd6:	f3bf 8f4f 	dsb	sy
 800dfda:	e7fe      	b.n	800dfda <xPortStartScheduler+0x82>
 800dfdc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfe0:	f383 8811 	msr	BASEPRI, r3
 800dfe4:	f3bf 8f6f 	isb	sy
 800dfe8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800dfec:	e7fe      	b.n	800dfec <xPortStartScheduler+0x94>
 800dfee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dff2:	f383 8811 	msr	BASEPRI, r3
 800dff6:	f3bf 8f6f 	isb	sy
 800dffa:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800dffe:	e7fe      	b.n	800dffe <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e000:	9b02      	ldr	r3, [sp, #8]
 800e002:	4a22      	ldr	r2, [pc, #136]	; (800e08c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e004:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e008:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e00c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e00e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e010:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e012:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e016:	4c20      	ldr	r4, [pc, #128]	; (800e098 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e018:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800e01c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800e020:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800e024:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800e028:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e02c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800e02e:	f7ff ff7f 	bl	800df30 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800e032:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800e034:	f7ff fea8 	bl	800dd88 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800e038:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800e03c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800e040:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800e044:	f7ff fe8c 	bl	800dd60 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800e048:	f001 fc98 	bl	800f97c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800e04c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800e04e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800e050:	3301      	adds	r3, #1
 800e052:	d008      	beq.n	800e066 <xPortStartScheduler+0x10e>
 800e054:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e058:	f383 8811 	msr	BASEPRI, r3
 800e05c:	f3bf 8f6f 	isb	sy
 800e060:	f3bf 8f4f 	dsb	sy
 800e064:	e7fe      	b.n	800e064 <xPortStartScheduler+0x10c>
 800e066:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e06a:	f383 8811 	msr	BASEPRI, r3
 800e06e:	f3bf 8f6f 	isb	sy
 800e072:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e076:	9b03      	ldr	r3, [sp, #12]
 800e078:	2b00      	cmp	r3, #0
 800e07a:	d0fc      	beq.n	800e076 <xPortStartScheduler+0x11e>
}
 800e07c:	2000      	movs	r0, #0
 800e07e:	b004      	add	sp, #16
 800e080:	bd70      	pop	{r4, r5, r6, pc}
 800e082:	bf00      	nop
 800e084:	410fc271 	.word	0x410fc271
 800e088:	410fc270 	.word	0x410fc270
 800e08c:	e000e400 	.word	0xe000e400
 800e090:	20012734 	.word	0x20012734
 800e094:	20012738 	.word	0x20012738
 800e098:	20000084 	.word	0x20000084

0800e09c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800e09c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800e0a0:	2b0f      	cmp	r3, #15
 800e0a2:	d90e      	bls.n	800e0c2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e0a4:	4911      	ldr	r1, [pc, #68]	; (800e0ec <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e0a6:	4a12      	ldr	r2, [pc, #72]	; (800e0f0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e0a8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e0aa:	7812      	ldrb	r2, [r2, #0]
 800e0ac:	429a      	cmp	r2, r3
 800e0ae:	d908      	bls.n	800e0c2 <vPortValidateInterruptPriority+0x26>
 800e0b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0b4:	f383 8811 	msr	BASEPRI, r3
 800e0b8:	f3bf 8f6f 	isb	sy
 800e0bc:	f3bf 8f4f 	dsb	sy
 800e0c0:	e7fe      	b.n	800e0c0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800e0c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e0c6:	4a0b      	ldr	r2, [pc, #44]	; (800e0f4 <vPortValidateInterruptPriority+0x58>)
 800e0c8:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800e0cc:	6812      	ldr	r2, [r2, #0]
 800e0ce:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800e0d2:	4293      	cmp	r3, r2
 800e0d4:	d908      	bls.n	800e0e8 <vPortValidateInterruptPriority+0x4c>
 800e0d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0da:	f383 8811 	msr	BASEPRI, r3
 800e0de:	f3bf 8f6f 	isb	sy
 800e0e2:	f3bf 8f4f 	dsb	sy
 800e0e6:	e7fe      	b.n	800e0e6 <vPortValidateInterruptPriority+0x4a>
	}
 800e0e8:	4770      	bx	lr
 800e0ea:	bf00      	nop
 800e0ec:	e000e3f0 	.word	0xe000e3f0
 800e0f0:	20012734 	.word	0x20012734
 800e0f4:	20012738 	.word	0x20012738

0800e0f8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800e0f8:	b570      	push	{r4, r5, r6, lr}
 800e0fa:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e0fc:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e0fe:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e100:	b920      	cbnz	r0, 800e10c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e102:	6825      	ldr	r5, [r4, #0]
 800e104:	b34d      	cbz	r5, 800e15a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e106:	3601      	adds	r6, #1
 800e108:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800e10a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800e10c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e10e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800e110:	b97d      	cbnz	r5, 800e132 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e112:	6860      	ldr	r0, [r4, #4]
 800e114:	f01c ffbd 	bl	802b092 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e118:	6863      	ldr	r3, [r4, #4]
 800e11a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e11c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e11e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e120:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e122:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800e124:	bf24      	itt	cs
 800e126:	6823      	ldrcs	r3, [r4, #0]
 800e128:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e12a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e12c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e12e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e130:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800e132:	68e0      	ldr	r0, [r4, #12]
 800e134:	f01c ffad 	bl	802b092 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e138:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e13a:	68e3      	ldr	r3, [r4, #12]
 800e13c:	4251      	negs	r1, r2
 800e13e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e140:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e142:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e144:	4293      	cmp	r3, r2
 800e146:	d202      	bcs.n	800e14e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800e148:	68a3      	ldr	r3, [r4, #8]
 800e14a:	440b      	add	r3, r1
 800e14c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800e14e:	2d02      	cmp	r5, #2
 800e150:	d008      	beq.n	800e164 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e152:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e154:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e156:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e158:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e15a:	68a0      	ldr	r0, [r4, #8]
 800e15c:	f001 fde0 	bl	800fd20 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800e160:	60a5      	str	r5, [r4, #8]
 800e162:	e7d0      	b.n	800e106 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e164:	2e01      	cmp	r6, #1
 800e166:	bf38      	it	cc
 800e168:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800e16a:	2000      	movs	r0, #0
 800e16c:	e7cc      	b.n	800e108 <prvCopyDataToQueue+0x10>
 800e16e:	bf00      	nop

0800e170 <xQueueGenericCreateStatic>:
	{
 800e170:	b530      	push	{r4, r5, lr}
 800e172:	b083      	sub	sp, #12
 800e174:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e178:	b940      	cbnz	r0, 800e18c <xQueueGenericCreateStatic+0x1c>
 800e17a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e17e:	f383 8811 	msr	BASEPRI, r3
 800e182:	f3bf 8f6f 	isb	sy
 800e186:	f3bf 8f4f 	dsb	sy
 800e18a:	e7fe      	b.n	800e18a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800e18c:	461d      	mov	r5, r3
 800e18e:	b17b      	cbz	r3, 800e1b0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e190:	b302      	cbz	r2, 800e1d4 <xQueueGenericCreateStatic+0x64>
 800e192:	b1b1      	cbz	r1, 800e1c2 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e194:	2350      	movs	r3, #80	; 0x50
 800e196:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e198:	9b01      	ldr	r3, [sp, #4]
 800e19a:	2b50      	cmp	r3, #80	; 0x50
 800e19c:	d023      	beq.n	800e1e6 <xQueueGenericCreateStatic+0x76>
 800e19e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1a2:	f383 8811 	msr	BASEPRI, r3
 800e1a6:	f3bf 8f6f 	isb	sy
 800e1aa:	f3bf 8f4f 	dsb	sy
 800e1ae:	e7fe      	b.n	800e1ae <xQueueGenericCreateStatic+0x3e>
 800e1b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1b4:	f383 8811 	msr	BASEPRI, r3
 800e1b8:	f3bf 8f6f 	isb	sy
 800e1bc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e1c0:	e7fe      	b.n	800e1c0 <xQueueGenericCreateStatic+0x50>
 800e1c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1c6:	f383 8811 	msr	BASEPRI, r3
 800e1ca:	f3bf 8f6f 	isb	sy
 800e1ce:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e1d2:	e7fe      	b.n	800e1d2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e1d4:	bb89      	cbnz	r1, 800e23a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e1d6:	2250      	movs	r2, #80	; 0x50
 800e1d8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e1da:	9a01      	ldr	r2, [sp, #4]
 800e1dc:	2a50      	cmp	r2, #80	; 0x50
 800e1de:	d1de      	bne.n	800e19e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e1e0:	9a01      	ldr	r2, [sp, #4]
 800e1e2:	462a      	mov	r2, r5
 800e1e4:	e000      	b.n	800e1e8 <xQueueGenericCreateStatic+0x78>
 800e1e6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e1e8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e1ea:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800e1ec:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e1f0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800e1f4:	f7ff fe1e 	bl	800de34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1f8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800e1fc:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e1fe:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e200:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e204:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e206:	4401      	add	r1, r0
 800e208:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e20a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e20c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e20e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e210:	21ff      	movs	r1, #255	; 0xff
 800e212:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e216:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e218:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e21c:	f105 0010 	add.w	r0, r5, #16
 800e220:	f7ff fd52 	bl	800dcc8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e224:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e228:	f7ff fd4e 	bl	800dcc8 <vListInitialise>
	taskEXIT_CRITICAL();
 800e22c:	f7ff fe24 	bl	800de78 <vPortExitCritical>
	}
 800e230:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e232:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800e236:	b003      	add	sp, #12
 800e238:	bd30      	pop	{r4, r5, pc}
 800e23a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e23e:	f383 8811 	msr	BASEPRI, r3
 800e242:	f3bf 8f6f 	isb	sy
 800e246:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e24a:	e7fe      	b.n	800e24a <xQueueGenericCreateStatic+0xda>

0800e24c <xQueueGenericCreate>:
	{
 800e24c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e24e:	b940      	cbnz	r0, 800e262 <xQueueGenericCreate+0x16>
 800e250:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e254:	f383 8811 	msr	BASEPRI, r3
 800e258:	f3bf 8f6f 	isb	sy
 800e25c:	f3bf 8f4f 	dsb	sy
 800e260:	e7fe      	b.n	800e260 <xQueueGenericCreate+0x14>
 800e262:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e264:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e268:	3050      	adds	r0, #80	; 0x50
 800e26a:	460e      	mov	r6, r1
 800e26c:	4617      	mov	r7, r2
 800e26e:	f7ff fc0b 	bl	800da88 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e272:	4604      	mov	r4, r0
 800e274:	b340      	cbz	r0, 800e2c8 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e276:	2300      	movs	r3, #0
 800e278:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e27c:	b336      	cbz	r6, 800e2cc <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e27e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800e282:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e284:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800e288:	f7ff fdd4 	bl	800de34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e28c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800e290:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e292:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e294:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e298:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e29a:	440a      	add	r2, r1
 800e29c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e29e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2a0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e2a2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e2a4:	22ff      	movs	r2, #255	; 0xff
 800e2a6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e2aa:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e2ac:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e2b0:	f104 0010 	add.w	r0, r4, #16
 800e2b4:	f7ff fd08 	bl	800dcc8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e2b8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e2bc:	f7ff fd04 	bl	800dcc8 <vListInitialise>
	taskEXIT_CRITICAL();
 800e2c0:	f7ff fdda 	bl	800de78 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e2c4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800e2c8:	4620      	mov	r0, r4
 800e2ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e2cc:	4603      	mov	r3, r0
 800e2ce:	e7d8      	b.n	800e282 <xQueueGenericCreate+0x36>

0800e2d0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800e2d0:	b940      	cbnz	r0, 800e2e4 <xQueueCreateCountingSemaphoreStatic+0x14>
 800e2d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2d6:	f383 8811 	msr	BASEPRI, r3
 800e2da:	f3bf 8f6f 	isb	sy
 800e2de:	f3bf 8f4f 	dsb	sy
 800e2e2:	e7fe      	b.n	800e2e2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e2e4:	4288      	cmp	r0, r1
 800e2e6:	d208      	bcs.n	800e2fa <xQueueCreateCountingSemaphoreStatic+0x2a>
 800e2e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2ec:	f383 8811 	msr	BASEPRI, r3
 800e2f0:	f3bf 8f6f 	isb	sy
 800e2f4:	f3bf 8f4f 	dsb	sy
 800e2f8:	e7fe      	b.n	800e2f8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800e2fa:	b530      	push	{r4, r5, lr}
 800e2fc:	4615      	mov	r5, r2
 800e2fe:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800e300:	2a00      	cmp	r2, #0
 800e302:	d03c      	beq.n	800e37e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e304:	2350      	movs	r3, #80	; 0x50
 800e306:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e308:	9b03      	ldr	r3, [sp, #12]
 800e30a:	2b50      	cmp	r3, #80	; 0x50
 800e30c:	d008      	beq.n	800e320 <xQueueCreateCountingSemaphoreStatic+0x50>
 800e30e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e312:	f383 8811 	msr	BASEPRI, r3
 800e316:	f3bf 8f6f 	isb	sy
 800e31a:	f3bf 8f4f 	dsb	sy
 800e31e:	e7fe      	b.n	800e31e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800e320:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e322:	2301      	movs	r3, #1
 800e324:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e328:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e32a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800e32e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e330:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800e332:	f7ff fd7f 	bl	800de34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e336:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800e33a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e33c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e33e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e342:	1ac3      	subs	r3, r0, r3
 800e344:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e346:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800e348:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800e34c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e350:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e352:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e354:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e358:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e35a:	f105 0010 	add.w	r0, r5, #16
 800e35e:	f7ff fcb3 	bl	800dcc8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e362:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e366:	f7ff fcaf 	bl	800dcc8 <vListInitialise>
	taskEXIT_CRITICAL();
 800e36a:	f7ff fd85 	bl	800de78 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e36e:	9901      	ldr	r1, [sp, #4]
 800e370:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800e372:	2302      	movs	r3, #2
	}
 800e374:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e376:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800e37a:	b005      	add	sp, #20
 800e37c:	bd30      	pop	{r4, r5, pc}
 800e37e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e382:	f383 8811 	msr	BASEPRI, r3
 800e386:	f3bf 8f6f 	isb	sy
 800e38a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e38e:	e7fe      	b.n	800e38e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800e390 <xQueueCreateCountingSemaphore>:
	{
 800e390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800e392:	b940      	cbnz	r0, 800e3a6 <xQueueCreateCountingSemaphore+0x16>
 800e394:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e398:	f383 8811 	msr	BASEPRI, r3
 800e39c:	f3bf 8f6f 	isb	sy
 800e3a0:	f3bf 8f4f 	dsb	sy
 800e3a4:	e7fe      	b.n	800e3a4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e3a6:	4288      	cmp	r0, r1
 800e3a8:	460e      	mov	r6, r1
 800e3aa:	4604      	mov	r4, r0
 800e3ac:	d208      	bcs.n	800e3c0 <xQueueCreateCountingSemaphore+0x30>
 800e3ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3b2:	f383 8811 	msr	BASEPRI, r3
 800e3b6:	f3bf 8f6f 	isb	sy
 800e3ba:	f3bf 8f4f 	dsb	sy
 800e3be:	e7fe      	b.n	800e3be <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e3c0:	2050      	movs	r0, #80	; 0x50
 800e3c2:	f7ff fb61 	bl	800da88 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e3c6:	4605      	mov	r5, r0
 800e3c8:	b330      	cbz	r0, 800e418 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e3ca:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800e3cc:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e3d0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e3d4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800e3d6:	f7ff fd2d 	bl	800de34 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3da:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800e3de:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e3e0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3e2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3e6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3e8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3ea:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3ec:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800e3ee:	22ff      	movs	r2, #255	; 0xff
 800e3f0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3f4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e3f6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e3f8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e3fc:	f105 0010 	add.w	r0, r5, #16
 800e400:	f7ff fc62 	bl	800dcc8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e404:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e408:	f7ff fc5e 	bl	800dcc8 <vListInitialise>
	taskEXIT_CRITICAL();
 800e40c:	f7ff fd34 	bl	800de78 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e410:	2302      	movs	r3, #2
 800e412:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e416:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800e418:	4628      	mov	r0, r5
 800e41a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e41c <xQueueGenericSend>:
{
 800e41c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e420:	b085      	sub	sp, #20
 800e422:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800e424:	2800      	cmp	r0, #0
 800e426:	f000 80a4 	beq.w	800e572 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e42a:	4688      	mov	r8, r1
 800e42c:	461f      	mov	r7, r3
 800e42e:	4604      	mov	r4, r0
 800e430:	2900      	cmp	r1, #0
 800e432:	f000 8091 	beq.w	800e558 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e436:	2f02      	cmp	r7, #2
 800e438:	d10b      	bne.n	800e452 <xQueueGenericSend+0x36>
 800e43a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e43c:	2b01      	cmp	r3, #1
 800e43e:	d008      	beq.n	800e452 <xQueueGenericSend+0x36>
 800e440:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e444:	f383 8811 	msr	BASEPRI, r3
 800e448:	f3bf 8f6f 	isb	sy
 800e44c:	f3bf 8f4f 	dsb	sy
 800e450:	e7fe      	b.n	800e450 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e452:	f001 fc0f 	bl	800fc74 <xTaskGetSchedulerState>
 800e456:	4605      	mov	r5, r0
 800e458:	2800      	cmp	r0, #0
 800e45a:	f000 8093 	beq.w	800e584 <xQueueGenericSend+0x168>
 800e45e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e460:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e464:	f7ff fce6 	bl	800de34 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e468:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e46a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e46c:	429a      	cmp	r2, r3
 800e46e:	f0c0 80ef 	bcc.w	800e650 <xQueueGenericSend+0x234>
 800e472:	2f02      	cmp	r7, #2
 800e474:	f000 80ec 	beq.w	800e650 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e478:	9801      	ldr	r0, [sp, #4]
 800e47a:	2800      	cmp	r0, #0
 800e47c:	f000 8101 	beq.w	800e682 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800e480:	2d00      	cmp	r5, #0
 800e482:	f000 80e1 	beq.w	800e648 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800e486:	f7ff fcf7 	bl	800de78 <vPortExitCritical>
		vTaskSuspendAll();
 800e48a:	f001 fa49 	bl	800f920 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e48e:	f7ff fcd1 	bl	800de34 <vPortEnterCritical>
 800e492:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e496:	2bff      	cmp	r3, #255	; 0xff
 800e498:	bf04      	itt	eq
 800e49a:	2300      	moveq	r3, #0
 800e49c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e4a0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e4a4:	2bff      	cmp	r3, #255	; 0xff
 800e4a6:	bf04      	itt	eq
 800e4a8:	2300      	moveq	r3, #0
 800e4aa:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e4ae:	f7ff fce3 	bl	800de78 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e4b2:	a901      	add	r1, sp, #4
 800e4b4:	a802      	add	r0, sp, #8
 800e4b6:	f001 fb8f 	bl	800fbd8 <xTaskCheckForTimeOut>
 800e4ba:	2800      	cmp	r0, #0
 800e4bc:	f040 80e6 	bne.w	800e68c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800e4c0:	f7ff fcb8 	bl	800de34 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800e4c4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e4c6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e4c8:	429a      	cmp	r2, r3
 800e4ca:	d068      	beq.n	800e59e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800e4cc:	f7ff fcd4 	bl	800de78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e4d0:	f7ff fcb0 	bl	800de34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e4d4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e4d8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e4da:	2d00      	cmp	r5, #0
 800e4dc:	dc04      	bgt.n	800e4e8 <xQueueGenericSend+0xcc>
 800e4de:	e011      	b.n	800e504 <xQueueGenericSend+0xe8>
			--cTxLock;
 800e4e0:	1e6a      	subs	r2, r5, #1
 800e4e2:	b2d3      	uxtb	r3, r2
 800e4e4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e4e6:	b16b      	cbz	r3, 800e504 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e4e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e4ea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e4ec:	b153      	cbz	r3, 800e504 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e4ee:	f001 fb1f 	bl	800fb30 <xTaskRemoveFromEventList>
 800e4f2:	2800      	cmp	r0, #0
 800e4f4:	d0f4      	beq.n	800e4e0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800e4f6:	f001 fbb7 	bl	800fc68 <vTaskMissedYield>
			--cTxLock;
 800e4fa:	1e6a      	subs	r2, r5, #1
 800e4fc:	b2d3      	uxtb	r3, r2
 800e4fe:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e500:	2b00      	cmp	r3, #0
 800e502:	d1f1      	bne.n	800e4e8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e504:	23ff      	movs	r3, #255	; 0xff
 800e506:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e50a:	f7ff fcb5 	bl	800de78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e50e:	f7ff fc91 	bl	800de34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e512:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800e516:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e518:	2d00      	cmp	r5, #0
 800e51a:	dd14      	ble.n	800e546 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e51c:	f104 0910 	add.w	r9, r4, #16
 800e520:	e003      	b.n	800e52a <xQueueGenericSend+0x10e>
				--cRxLock;
 800e522:	1e6a      	subs	r2, r5, #1
 800e524:	b2d3      	uxtb	r3, r2
 800e526:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e528:	b16b      	cbz	r3, 800e546 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e52a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e52c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e52e:	b153      	cbz	r3, 800e546 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e530:	f001 fafe 	bl	800fb30 <xTaskRemoveFromEventList>
 800e534:	2800      	cmp	r0, #0
 800e536:	d0f4      	beq.n	800e522 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800e538:	f001 fb96 	bl	800fc68 <vTaskMissedYield>
				--cRxLock;
 800e53c:	1e6a      	subs	r2, r5, #1
 800e53e:	b2d3      	uxtb	r3, r2
 800e540:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e542:	2b00      	cmp	r3, #0
 800e544:	d1f1      	bne.n	800e52a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800e546:	23ff      	movs	r3, #255	; 0xff
 800e548:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e54c:	f7ff fc94 	bl	800de78 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e550:	f001 f9ee 	bl	800f930 <xTaskResumeAll>
 800e554:	2501      	movs	r5, #1
 800e556:	e785      	b.n	800e464 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e558:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e55a:	2b00      	cmp	r3, #0
 800e55c:	f43f af6b 	beq.w	800e436 <xQueueGenericSend+0x1a>
 800e560:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e564:	f383 8811 	msr	BASEPRI, r3
 800e568:	f3bf 8f6f 	isb	sy
 800e56c:	f3bf 8f4f 	dsb	sy
 800e570:	e7fe      	b.n	800e570 <xQueueGenericSend+0x154>
 800e572:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e576:	f383 8811 	msr	BASEPRI, r3
 800e57a:	f3bf 8f6f 	isb	sy
 800e57e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e582:	e7fe      	b.n	800e582 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e584:	9b01      	ldr	r3, [sp, #4]
 800e586:	2b00      	cmp	r3, #0
 800e588:	f43f af6a 	beq.w	800e460 <xQueueGenericSend+0x44>
 800e58c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e590:	f383 8811 	msr	BASEPRI, r3
 800e594:	f3bf 8f6f 	isb	sy
 800e598:	f3bf 8f4f 	dsb	sy
 800e59c:	e7fe      	b.n	800e59c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e59e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800e5a2:	f7ff fc69 	bl	800de78 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e5a6:	9901      	ldr	r1, [sp, #4]
 800e5a8:	4648      	mov	r0, r9
 800e5aa:	f001 fa33 	bl	800fa14 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e5ae:	f7ff fc41 	bl	800de34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e5b2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e5b6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e5b8:	2d00      	cmp	r5, #0
 800e5ba:	dc04      	bgt.n	800e5c6 <xQueueGenericSend+0x1aa>
 800e5bc:	e011      	b.n	800e5e2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800e5be:	1e6b      	subs	r3, r5, #1
 800e5c0:	b2da      	uxtb	r2, r3
 800e5c2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e5c4:	b16a      	cbz	r2, 800e5e2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e5c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e5c8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e5ca:	b153      	cbz	r3, 800e5e2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e5cc:	f001 fab0 	bl	800fb30 <xTaskRemoveFromEventList>
 800e5d0:	2800      	cmp	r0, #0
 800e5d2:	d0f4      	beq.n	800e5be <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800e5d4:	f001 fb48 	bl	800fc68 <vTaskMissedYield>
			--cTxLock;
 800e5d8:	1e6b      	subs	r3, r5, #1
 800e5da:	b2da      	uxtb	r2, r3
 800e5dc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e5de:	2a00      	cmp	r2, #0
 800e5e0:	d1f1      	bne.n	800e5c6 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800e5e2:	23ff      	movs	r3, #255	; 0xff
 800e5e4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e5e8:	f7ff fc46 	bl	800de78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e5ec:	f7ff fc22 	bl	800de34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e5f0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e5f4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5f6:	2d00      	cmp	r5, #0
 800e5f8:	dc04      	bgt.n	800e604 <xQueueGenericSend+0x1e8>
 800e5fa:	e011      	b.n	800e620 <xQueueGenericSend+0x204>
				--cRxLock;
 800e5fc:	1e6b      	subs	r3, r5, #1
 800e5fe:	b2da      	uxtb	r2, r3
 800e600:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e602:	b16a      	cbz	r2, 800e620 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e604:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e606:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e608:	b153      	cbz	r3, 800e620 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e60a:	f001 fa91 	bl	800fb30 <xTaskRemoveFromEventList>
 800e60e:	2800      	cmp	r0, #0
 800e610:	d0f4      	beq.n	800e5fc <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800e612:	f001 fb29 	bl	800fc68 <vTaskMissedYield>
				--cRxLock;
 800e616:	1e6b      	subs	r3, r5, #1
 800e618:	b2da      	uxtb	r2, r3
 800e61a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e61c:	2a00      	cmp	r2, #0
 800e61e:	d1f1      	bne.n	800e604 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800e620:	23ff      	movs	r3, #255	; 0xff
 800e622:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e626:	f7ff fc27 	bl	800de78 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e62a:	f001 f981 	bl	800f930 <xTaskResumeAll>
 800e62e:	2800      	cmp	r0, #0
 800e630:	d190      	bne.n	800e554 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800e632:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e636:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e63a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e63e:	f3bf 8f4f 	dsb	sy
 800e642:	f3bf 8f6f 	isb	sy
 800e646:	e785      	b.n	800e554 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e648:	a802      	add	r0, sp, #8
 800e64a:	f001 fab9 	bl	800fbc0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e64e:	e71a      	b.n	800e486 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e650:	463a      	mov	r2, r7
 800e652:	4641      	mov	r1, r8
 800e654:	4620      	mov	r0, r4
 800e656:	f7ff fd4f 	bl	800e0f8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e65a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e65c:	2b00      	cmp	r3, #0
 800e65e:	d153      	bne.n	800e708 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800e660:	b148      	cbz	r0, 800e676 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800e662:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e666:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e66a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e66e:	f3bf 8f4f 	dsb	sy
 800e672:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800e676:	f7ff fbff 	bl	800de78 <vPortExitCritical>
				return pdPASS;
 800e67a:	2001      	movs	r0, #1
}
 800e67c:	b005      	add	sp, #20
 800e67e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e682:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800e684:	f7ff fbf8 	bl	800de78 <vPortExitCritical>
					return errQUEUE_FULL;
 800e688:	9800      	ldr	r0, [sp, #0]
 800e68a:	e7f7      	b.n	800e67c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800e68c:	f7ff fbd2 	bl	800de34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e690:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e694:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e696:	2d00      	cmp	r5, #0
 800e698:	dd10      	ble.n	800e6bc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e69a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800e69e:	e003      	b.n	800e6a8 <xQueueGenericSend+0x28c>
			--cTxLock;
 800e6a0:	1e6b      	subs	r3, r5, #1
 800e6a2:	b2da      	uxtb	r2, r3
 800e6a4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e6a6:	b14a      	cbz	r2, 800e6bc <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e6a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e6aa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e6ac:	b133      	cbz	r3, 800e6bc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e6ae:	f001 fa3f 	bl	800fb30 <xTaskRemoveFromEventList>
 800e6b2:	2800      	cmp	r0, #0
 800e6b4:	d0f4      	beq.n	800e6a0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800e6b6:	f001 fad7 	bl	800fc68 <vTaskMissedYield>
 800e6ba:	e7f1      	b.n	800e6a0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800e6bc:	23ff      	movs	r3, #255	; 0xff
 800e6be:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e6c2:	f7ff fbd9 	bl	800de78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e6c6:	f7ff fbb5 	bl	800de34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e6ca:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e6ce:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e6d0:	2d00      	cmp	r5, #0
 800e6d2:	dd10      	ble.n	800e6f6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6d4:	f104 0610 	add.w	r6, r4, #16
 800e6d8:	e003      	b.n	800e6e2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800e6da:	1e6b      	subs	r3, r5, #1
 800e6dc:	b2da      	uxtb	r2, r3
 800e6de:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e6e0:	b14a      	cbz	r2, 800e6f6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e6e2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6e4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e6e6:	b133      	cbz	r3, 800e6f6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6e8:	f001 fa22 	bl	800fb30 <xTaskRemoveFromEventList>
 800e6ec:	2800      	cmp	r0, #0
 800e6ee:	d0f4      	beq.n	800e6da <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800e6f0:	f001 faba 	bl	800fc68 <vTaskMissedYield>
 800e6f4:	e7f1      	b.n	800e6da <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800e6f6:	23ff      	movs	r3, #255	; 0xff
 800e6f8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e6fc:	f7ff fbbc 	bl	800de78 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e700:	f001 f916 	bl	800f930 <xTaskResumeAll>
			return errQUEUE_FULL;
 800e704:	2000      	movs	r0, #0
 800e706:	e7b9      	b.n	800e67c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e708:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e70c:	f001 fa10 	bl	800fb30 <xTaskRemoveFromEventList>
 800e710:	2800      	cmp	r0, #0
 800e712:	d0b0      	beq.n	800e676 <xQueueGenericSend+0x25a>
 800e714:	e7a5      	b.n	800e662 <xQueueGenericSend+0x246>
 800e716:	bf00      	nop

0800e718 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800e718:	2800      	cmp	r0, #0
 800e71a:	d04b      	beq.n	800e7b4 <xQueueGenericSendFromISR+0x9c>
{
 800e71c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e720:	460e      	mov	r6, r1
 800e722:	4617      	mov	r7, r2
 800e724:	461d      	mov	r5, r3
 800e726:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e728:	b321      	cbz	r1, 800e774 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e72a:	2d02      	cmp	r5, #2
 800e72c:	d10b      	bne.n	800e746 <xQueueGenericSendFromISR+0x2e>
 800e72e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e730:	2b01      	cmp	r3, #1
 800e732:	d008      	beq.n	800e746 <xQueueGenericSendFromISR+0x2e>
 800e734:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e738:	f383 8811 	msr	BASEPRI, r3
 800e73c:	f3bf 8f6f 	isb	sy
 800e740:	f3bf 8f4f 	dsb	sy
 800e744:	e7fe      	b.n	800e744 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e746:	f7ff fca9 	bl	800e09c <vPortValidateInterruptPriority>
	__asm volatile
 800e74a:	f3ef 8811 	mrs	r8, BASEPRI
 800e74e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e752:	f383 8811 	msr	BASEPRI, r3
 800e756:	f3bf 8f6f 	isb	sy
 800e75a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e75e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e760:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e762:	429a      	cmp	r2, r3
 800e764:	d312      	bcc.n	800e78c <xQueueGenericSendFromISR+0x74>
 800e766:	2d02      	cmp	r5, #2
 800e768:	d010      	beq.n	800e78c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800e76a:	2000      	movs	r0, #0
	__asm volatile
 800e76c:	f388 8811 	msr	BASEPRI, r8
}
 800e770:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e774:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e776:	2b00      	cmp	r3, #0
 800e778:	d0d7      	beq.n	800e72a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800e77a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e77e:	f383 8811 	msr	BASEPRI, r3
 800e782:	f3bf 8f6f 	isb	sy
 800e786:	f3bf 8f4f 	dsb	sy
 800e78a:	e7fe      	b.n	800e78a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e78c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800e78e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e792:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e794:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800e796:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e798:	4620      	mov	r0, r4
 800e79a:	f7ff fcad 	bl	800e0f8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800e79e:	1c6b      	adds	r3, r5, #1
 800e7a0:	d011      	beq.n	800e7c6 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e7a2:	1c6b      	adds	r3, r5, #1
 800e7a4:	b25b      	sxtb	r3, r3
 800e7a6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800e7aa:	2001      	movs	r0, #1
	__asm volatile
 800e7ac:	f388 8811 	msr	BASEPRI, r8
}
 800e7b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800e7b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7b8:	f383 8811 	msr	BASEPRI, r3
 800e7bc:	f3bf 8f6f 	isb	sy
 800e7c0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e7c4:	e7fe      	b.n	800e7c4 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e7c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e7c8:	2b00      	cmp	r3, #0
 800e7ca:	d0ee      	beq.n	800e7aa <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e7cc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e7d0:	f001 f9ae 	bl	800fb30 <xTaskRemoveFromEventList>
 800e7d4:	2800      	cmp	r0, #0
 800e7d6:	d0e8      	beq.n	800e7aa <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800e7d8:	2f00      	cmp	r7, #0
 800e7da:	d0e6      	beq.n	800e7aa <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e7dc:	2001      	movs	r0, #1
 800e7de:	6038      	str	r0, [r7, #0]
 800e7e0:	e7c4      	b.n	800e76c <xQueueGenericSendFromISR+0x54>
 800e7e2:	bf00      	nop

0800e7e4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800e7e4:	b370      	cbz	r0, 800e844 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e7e6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800e7e8:	b570      	push	{r4, r5, r6, lr}
 800e7ea:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800e7ec:	b143      	cbz	r3, 800e800 <xQueueGiveFromISR+0x1c>
 800e7ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7f2:	f383 8811 	msr	BASEPRI, r3
 800e7f6:	f3bf 8f6f 	isb	sy
 800e7fa:	f3bf 8f4f 	dsb	sy
 800e7fe:	e7fe      	b.n	800e7fe <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e800:	6803      	ldr	r3, [r0, #0]
 800e802:	460c      	mov	r4, r1
 800e804:	b33b      	cbz	r3, 800e856 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e806:	f7ff fc49 	bl	800e09c <vPortValidateInterruptPriority>
	__asm volatile
 800e80a:	f3ef 8511 	mrs	r5, BASEPRI
 800e80e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e812:	f383 8811 	msr	BASEPRI, r3
 800e816:	f3bf 8f6f 	isb	sy
 800e81a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e81e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800e820:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800e822:	429a      	cmp	r2, r3
 800e824:	d923      	bls.n	800e86e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800e826:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e82a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800e82c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e82e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800e830:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800e832:	d020      	beq.n	800e876 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e834:	3301      	adds	r3, #1
 800e836:	b25b      	sxtb	r3, r3
 800e838:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800e83c:	2001      	movs	r0, #1
	__asm volatile
 800e83e:	f385 8811 	msr	BASEPRI, r5
}
 800e842:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800e844:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e848:	f383 8811 	msr	BASEPRI, r3
 800e84c:	f3bf 8f6f 	isb	sy
 800e850:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e854:	e7fe      	b.n	800e854 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e856:	6883      	ldr	r3, [r0, #8]
 800e858:	2b00      	cmp	r3, #0
 800e85a:	d0d4      	beq.n	800e806 <xQueueGiveFromISR+0x22>
 800e85c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e860:	f383 8811 	msr	BASEPRI, r3
 800e864:	f3bf 8f6f 	isb	sy
 800e868:	f3bf 8f4f 	dsb	sy
 800e86c:	e7fe      	b.n	800e86c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800e86e:	2000      	movs	r0, #0
	__asm volatile
 800e870:	f385 8811 	msr	BASEPRI, r5
}
 800e874:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e876:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800e878:	2b00      	cmp	r3, #0
 800e87a:	d0df      	beq.n	800e83c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e87c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800e880:	f001 f956 	bl	800fb30 <xTaskRemoveFromEventList>
 800e884:	2800      	cmp	r0, #0
 800e886:	d0d9      	beq.n	800e83c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800e888:	2c00      	cmp	r4, #0
 800e88a:	d0d7      	beq.n	800e83c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e88c:	2001      	movs	r0, #1
 800e88e:	6020      	str	r0, [r4, #0]
 800e890:	e7ee      	b.n	800e870 <xQueueGiveFromISR+0x8c>
 800e892:	bf00      	nop

0800e894 <xQueueReceive>:
{
 800e894:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e898:	b085      	sub	sp, #20
 800e89a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e89c:	2800      	cmp	r0, #0
 800e89e:	f000 815c 	beq.w	800eb5a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e8a2:	460f      	mov	r7, r1
 800e8a4:	4604      	mov	r4, r0
 800e8a6:	2900      	cmp	r1, #0
 800e8a8:	d079      	beq.n	800e99e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e8aa:	f001 f9e3 	bl	800fc74 <xTaskGetSchedulerState>
 800e8ae:	2800      	cmp	r0, #0
 800e8b0:	f000 8081 	beq.w	800e9b6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800e8b4:	f7ff fabe 	bl	800de34 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e8b8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e8ba:	2d00      	cmp	r5, #0
 800e8bc:	f040 8138 	bne.w	800eb30 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e8c0:	9b01      	ldr	r3, [sp, #4]
 800e8c2:	2b00      	cmp	r3, #0
 800e8c4:	f000 80d5 	beq.w	800ea72 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e8c8:	a802      	add	r0, sp, #8
 800e8ca:	f001 f979 	bl	800fbc0 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800e8ce:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e8d0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800e8d4:	f7ff fad0 	bl	800de78 <vPortExitCritical>
		vTaskSuspendAll();
 800e8d8:	f001 f822 	bl	800f920 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e8dc:	f7ff faaa 	bl	800de34 <vPortEnterCritical>
 800e8e0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e8e4:	2bff      	cmp	r3, #255	; 0xff
 800e8e6:	bf08      	it	eq
 800e8e8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800e8ec:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e8f0:	2bff      	cmp	r3, #255	; 0xff
 800e8f2:	bf08      	it	eq
 800e8f4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800e8f8:	f7ff fabe 	bl	800de78 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e8fc:	a901      	add	r1, sp, #4
 800e8fe:	a802      	add	r0, sp, #8
 800e900:	f001 f96a 	bl	800fbd8 <xTaskCheckForTimeOut>
 800e904:	2800      	cmp	r0, #0
 800e906:	d163      	bne.n	800e9d0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800e908:	f7ff fa94 	bl	800de34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e90c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e90e:	2b00      	cmp	r3, #0
 800e910:	f000 80b5 	beq.w	800ea7e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800e914:	f7ff fab0 	bl	800de78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e918:	f7ff fa8c 	bl	800de34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e91c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e920:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e922:	2d00      	cmp	r5, #0
 800e924:	dc04      	bgt.n	800e930 <xQueueReceive+0x9c>
 800e926:	e011      	b.n	800e94c <xQueueReceive+0xb8>
			--cTxLock;
 800e928:	1e6b      	subs	r3, r5, #1
 800e92a:	b2da      	uxtb	r2, r3
 800e92c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e92e:	b16a      	cbz	r2, 800e94c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e930:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e932:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e934:	b153      	cbz	r3, 800e94c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e936:	f001 f8fb 	bl	800fb30 <xTaskRemoveFromEventList>
 800e93a:	2800      	cmp	r0, #0
 800e93c:	d0f4      	beq.n	800e928 <xQueueReceive+0x94>
						vTaskMissedYield();
 800e93e:	f001 f993 	bl	800fc68 <vTaskMissedYield>
			--cTxLock;
 800e942:	1e6b      	subs	r3, r5, #1
 800e944:	b2da      	uxtb	r2, r3
 800e946:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e948:	2a00      	cmp	r2, #0
 800e94a:	d1f1      	bne.n	800e930 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800e94c:	23ff      	movs	r3, #255	; 0xff
 800e94e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e952:	f7ff fa91 	bl	800de78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e956:	f7ff fa6d 	bl	800de34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e95a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e95e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e960:	2d00      	cmp	r5, #0
 800e962:	dd14      	ble.n	800e98e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e964:	f104 0910 	add.w	r9, r4, #16
 800e968:	e003      	b.n	800e972 <xQueueReceive+0xde>
				--cRxLock;
 800e96a:	1e6b      	subs	r3, r5, #1
 800e96c:	b2da      	uxtb	r2, r3
 800e96e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e970:	b16a      	cbz	r2, 800e98e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e972:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e974:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e976:	b153      	cbz	r3, 800e98e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e978:	f001 f8da 	bl	800fb30 <xTaskRemoveFromEventList>
 800e97c:	2800      	cmp	r0, #0
 800e97e:	d0f4      	beq.n	800e96a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800e980:	f001 f972 	bl	800fc68 <vTaskMissedYield>
				--cRxLock;
 800e984:	1e6b      	subs	r3, r5, #1
 800e986:	b2da      	uxtb	r2, r3
 800e988:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e98a:	2a00      	cmp	r2, #0
 800e98c:	d1f1      	bne.n	800e972 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800e98e:	23ff      	movs	r3, #255	; 0xff
 800e990:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e994:	f7ff fa70 	bl	800de78 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e998:	f000 ffca 	bl	800f930 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800e99c:	e060      	b.n	800ea60 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e99e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e9a0:	2b00      	cmp	r3, #0
 800e9a2:	d082      	beq.n	800e8aa <xQueueReceive+0x16>
	__asm volatile
 800e9a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9a8:	f383 8811 	msr	BASEPRI, r3
 800e9ac:	f3bf 8f6f 	isb	sy
 800e9b0:	f3bf 8f4f 	dsb	sy
 800e9b4:	e7fe      	b.n	800e9b4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e9b6:	9b01      	ldr	r3, [sp, #4]
 800e9b8:	2b00      	cmp	r3, #0
 800e9ba:	f43f af7b 	beq.w	800e8b4 <xQueueReceive+0x20>
 800e9be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9c2:	f383 8811 	msr	BASEPRI, r3
 800e9c6:	f3bf 8f6f 	isb	sy
 800e9ca:	f3bf 8f4f 	dsb	sy
 800e9ce:	e7fe      	b.n	800e9ce <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800e9d0:	f7ff fa30 	bl	800de34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e9d4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e9d8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9da:	2d00      	cmp	r5, #0
 800e9dc:	dc04      	bgt.n	800e9e8 <xQueueReceive+0x154>
 800e9de:	e011      	b.n	800ea04 <xQueueReceive+0x170>
			--cTxLock;
 800e9e0:	1e6b      	subs	r3, r5, #1
 800e9e2:	b2da      	uxtb	r2, r3
 800e9e4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9e6:	b16a      	cbz	r2, 800ea04 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9ea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9ec:	b153      	cbz	r3, 800ea04 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9ee:	f001 f89f 	bl	800fb30 <xTaskRemoveFromEventList>
 800e9f2:	2800      	cmp	r0, #0
 800e9f4:	d0f4      	beq.n	800e9e0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800e9f6:	f001 f937 	bl	800fc68 <vTaskMissedYield>
			--cTxLock;
 800e9fa:	1e6b      	subs	r3, r5, #1
 800e9fc:	b2da      	uxtb	r2, r3
 800e9fe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea00:	2a00      	cmp	r2, #0
 800ea02:	d1f1      	bne.n	800e9e8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800ea04:	23ff      	movs	r3, #255	; 0xff
 800ea06:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ea0a:	f7ff fa35 	bl	800de78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ea0e:	f7ff fa11 	bl	800de34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ea12:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ea16:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea18:	2d00      	cmp	r5, #0
 800ea1a:	dd14      	ble.n	800ea46 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea1c:	f104 0910 	add.w	r9, r4, #16
 800ea20:	e003      	b.n	800ea2a <xQueueReceive+0x196>
				--cRxLock;
 800ea22:	1e6b      	subs	r3, r5, #1
 800ea24:	b2da      	uxtb	r2, r3
 800ea26:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea28:	b16a      	cbz	r2, 800ea46 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea2a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea2c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ea2e:	b153      	cbz	r3, 800ea46 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea30:	f001 f87e 	bl	800fb30 <xTaskRemoveFromEventList>
 800ea34:	2800      	cmp	r0, #0
 800ea36:	d0f4      	beq.n	800ea22 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800ea38:	f001 f916 	bl	800fc68 <vTaskMissedYield>
				--cRxLock;
 800ea3c:	1e6b      	subs	r3, r5, #1
 800ea3e:	b2da      	uxtb	r2, r3
 800ea40:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea42:	2a00      	cmp	r2, #0
 800ea44:	d1f1      	bne.n	800ea2a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800ea46:	23ff      	movs	r3, #255	; 0xff
 800ea48:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ea4c:	f7ff fa14 	bl	800de78 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ea50:	f000 ff6e 	bl	800f930 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ea54:	f7ff f9ee 	bl	800de34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ea58:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ea5a:	b153      	cbz	r3, 800ea72 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800ea5c:	f7ff fa0c 	bl	800de78 <vPortExitCritical>
		taskENTER_CRITICAL();
 800ea60:	f7ff f9e8 	bl	800de34 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ea64:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ea66:	2d00      	cmp	r5, #0
 800ea68:	d162      	bne.n	800eb30 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ea6a:	9b01      	ldr	r3, [sp, #4]
 800ea6c:	2b00      	cmp	r3, #0
 800ea6e:	f47f af31 	bne.w	800e8d4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800ea72:	f7ff fa01 	bl	800de78 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ea76:	2000      	movs	r0, #0
}
 800ea78:	b005      	add	sp, #20
 800ea7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800ea7e:	f7ff f9fb 	bl	800de78 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ea82:	9901      	ldr	r1, [sp, #4]
 800ea84:	4630      	mov	r0, r6
 800ea86:	f000 ffc5 	bl	800fa14 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ea8a:	f7ff f9d3 	bl	800de34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ea8e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ea92:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea94:	2d00      	cmp	r5, #0
 800ea96:	dc04      	bgt.n	800eaa2 <xQueueReceive+0x20e>
 800ea98:	e011      	b.n	800eabe <xQueueReceive+0x22a>
			--cTxLock;
 800ea9a:	1e6b      	subs	r3, r5, #1
 800ea9c:	b2da      	uxtb	r2, r3
 800ea9e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eaa0:	b16a      	cbz	r2, 800eabe <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eaa2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eaa4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eaa6:	b153      	cbz	r3, 800eabe <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eaa8:	f001 f842 	bl	800fb30 <xTaskRemoveFromEventList>
 800eaac:	2800      	cmp	r0, #0
 800eaae:	d0f4      	beq.n	800ea9a <xQueueReceive+0x206>
						vTaskMissedYield();
 800eab0:	f001 f8da 	bl	800fc68 <vTaskMissedYield>
			--cTxLock;
 800eab4:	1e6b      	subs	r3, r5, #1
 800eab6:	b2da      	uxtb	r2, r3
 800eab8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eaba:	2a00      	cmp	r2, #0
 800eabc:	d1f1      	bne.n	800eaa2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800eabe:	23ff      	movs	r3, #255	; 0xff
 800eac0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eac4:	f7ff f9d8 	bl	800de78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eac8:	f7ff f9b4 	bl	800de34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eacc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ead0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ead2:	2d00      	cmp	r5, #0
 800ead4:	dd14      	ble.n	800eb00 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ead6:	f104 0910 	add.w	r9, r4, #16
 800eada:	e003      	b.n	800eae4 <xQueueReceive+0x250>
				--cRxLock;
 800eadc:	1e6b      	subs	r3, r5, #1
 800eade:	b2da      	uxtb	r2, r3
 800eae0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eae2:	b16a      	cbz	r2, 800eb00 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eae4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eae6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eae8:	b153      	cbz	r3, 800eb00 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eaea:	f001 f821 	bl	800fb30 <xTaskRemoveFromEventList>
 800eaee:	2800      	cmp	r0, #0
 800eaf0:	d0f4      	beq.n	800eadc <xQueueReceive+0x248>
					vTaskMissedYield();
 800eaf2:	f001 f8b9 	bl	800fc68 <vTaskMissedYield>
				--cRxLock;
 800eaf6:	1e6b      	subs	r3, r5, #1
 800eaf8:	b2da      	uxtb	r2, r3
 800eafa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eafc:	2a00      	cmp	r2, #0
 800eafe:	d1f1      	bne.n	800eae4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800eb00:	23ff      	movs	r3, #255	; 0xff
 800eb02:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eb06:	f7ff f9b7 	bl	800de78 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800eb0a:	f000 ff11 	bl	800f930 <xTaskResumeAll>
 800eb0e:	2800      	cmp	r0, #0
 800eb10:	d1a6      	bne.n	800ea60 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800eb12:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eb16:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eb1a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eb1e:	f3bf 8f4f 	dsb	sy
 800eb22:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800eb26:	f7ff f985 	bl	800de34 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800eb2a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800eb2c:	2d00      	cmp	r5, #0
 800eb2e:	d09c      	beq.n	800ea6a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800eb30:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800eb32:	b152      	cbz	r2, 800eb4a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eb34:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800eb36:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eb38:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800eb3a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eb3c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800eb3e:	bf24      	itt	cs
 800eb40:	6821      	ldrcs	r1, [r4, #0]
 800eb42:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800eb44:	4638      	mov	r0, r7
 800eb46:	f01c faa4 	bl	802b092 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800eb4a:	3d01      	subs	r5, #1
 800eb4c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb4e:	6923      	ldr	r3, [r4, #16]
 800eb50:	b963      	cbnz	r3, 800eb6c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800eb52:	f7ff f991 	bl	800de78 <vPortExitCritical>
				return pdPASS;
 800eb56:	2001      	movs	r0, #1
 800eb58:	e78e      	b.n	800ea78 <xQueueReceive+0x1e4>
 800eb5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb5e:	f383 8811 	msr	BASEPRI, r3
 800eb62:	f3bf 8f6f 	isb	sy
 800eb66:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800eb6a:	e7fe      	b.n	800eb6a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb6c:	f104 0010 	add.w	r0, r4, #16
 800eb70:	f000 ffde 	bl	800fb30 <xTaskRemoveFromEventList>
 800eb74:	2800      	cmp	r0, #0
 800eb76:	d0ec      	beq.n	800eb52 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800eb78:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eb7c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eb80:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eb84:	f3bf 8f4f 	dsb	sy
 800eb88:	f3bf 8f6f 	isb	sy
 800eb8c:	e7e1      	b.n	800eb52 <xQueueReceive+0x2be>
 800eb8e:	bf00      	nop

0800eb90 <xQueueSemaphoreTake>:
{
 800eb90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb94:	b084      	sub	sp, #16
 800eb96:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800eb98:	2800      	cmp	r0, #0
 800eb9a:	d05c      	beq.n	800ec56 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800eb9c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800eb9e:	4604      	mov	r4, r0
 800eba0:	b147      	cbz	r7, 800ebb4 <xQueueSemaphoreTake+0x24>
 800eba2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eba6:	f383 8811 	msr	BASEPRI, r3
 800ebaa:	f3bf 8f6f 	isb	sy
 800ebae:	f3bf 8f4f 	dsb	sy
 800ebb2:	e7fe      	b.n	800ebb2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ebb4:	f001 f85e 	bl	800fc74 <xTaskGetSchedulerState>
 800ebb8:	4605      	mov	r5, r0
 800ebba:	2800      	cmp	r0, #0
 800ebbc:	d054      	beq.n	800ec68 <xQueueSemaphoreTake+0xd8>
 800ebbe:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ebc0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800ebc4:	f7ff f936 	bl	800de34 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800ebc8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800ebca:	2b00      	cmp	r3, #0
 800ebcc:	f040 8148 	bne.w	800ee60 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ebd0:	9b01      	ldr	r3, [sp, #4]
 800ebd2:	2b00      	cmp	r3, #0
 800ebd4:	f000 813a 	beq.w	800ee4c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800ebd8:	2d00      	cmp	r5, #0
 800ebda:	f000 809d 	beq.w	800ed18 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800ebde:	f7ff f94b 	bl	800de78 <vPortExitCritical>
		vTaskSuspendAll();
 800ebe2:	f000 fe9d 	bl	800f920 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ebe6:	f7ff f925 	bl	800de34 <vPortEnterCritical>
 800ebea:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ebee:	2bff      	cmp	r3, #255	; 0xff
 800ebf0:	bf04      	itt	eq
 800ebf2:	2300      	moveq	r3, #0
 800ebf4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800ebf8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ebfc:	2bff      	cmp	r3, #255	; 0xff
 800ebfe:	bf04      	itt	eq
 800ec00:	2300      	moveq	r3, #0
 800ec02:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800ec06:	f7ff f937 	bl	800de78 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ec0a:	a901      	add	r1, sp, #4
 800ec0c:	a802      	add	r0, sp, #8
 800ec0e:	f000 ffe3 	bl	800fbd8 <xTaskCheckForTimeOut>
 800ec12:	2800      	cmp	r0, #0
 800ec14:	d135      	bne.n	800ec82 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800ec16:	f7ff f90d 	bl	800de34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ec1a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ec1c:	2b00      	cmp	r3, #0
 800ec1e:	f000 80a4 	beq.w	800ed6a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800ec22:	f7ff f929 	bl	800de78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ec26:	f7ff f905 	bl	800de34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ec2a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ec2e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec30:	2d00      	cmp	r5, #0
 800ec32:	dc05      	bgt.n	800ec40 <xQueueSemaphoreTake+0xb0>
 800ec34:	e074      	b.n	800ed20 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800ec36:	1e6b      	subs	r3, r5, #1
 800ec38:	b2da      	uxtb	r2, r3
 800ec3a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec3c:	2a00      	cmp	r2, #0
 800ec3e:	d06f      	beq.n	800ed20 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec40:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec42:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec44:	2b00      	cmp	r3, #0
 800ec46:	d06b      	beq.n	800ed20 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec48:	f000 ff72 	bl	800fb30 <xTaskRemoveFromEventList>
 800ec4c:	2800      	cmp	r0, #0
 800ec4e:	d0f2      	beq.n	800ec36 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800ec50:	f001 f80a 	bl	800fc68 <vTaskMissedYield>
 800ec54:	e7ef      	b.n	800ec36 <xQueueSemaphoreTake+0xa6>
 800ec56:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec5a:	f383 8811 	msr	BASEPRI, r3
 800ec5e:	f3bf 8f6f 	isb	sy
 800ec62:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800ec66:	e7fe      	b.n	800ec66 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ec68:	9b01      	ldr	r3, [sp, #4]
 800ec6a:	2b00      	cmp	r3, #0
 800ec6c:	f000 80d4 	beq.w	800ee18 <xQueueSemaphoreTake+0x288>
 800ec70:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec74:	f383 8811 	msr	BASEPRI, r3
 800ec78:	f3bf 8f6f 	isb	sy
 800ec7c:	f3bf 8f4f 	dsb	sy
 800ec80:	e7fe      	b.n	800ec80 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800ec82:	f7ff f8d7 	bl	800de34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ec86:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ec8a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec8c:	2d00      	cmp	r5, #0
 800ec8e:	dc04      	bgt.n	800ec9a <xQueueSemaphoreTake+0x10a>
 800ec90:	e011      	b.n	800ecb6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800ec92:	1e6b      	subs	r3, r5, #1
 800ec94:	b2da      	uxtb	r2, r3
 800ec96:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec98:	b16a      	cbz	r2, 800ecb6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec9c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec9e:	b153      	cbz	r3, 800ecb6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eca0:	f000 ff46 	bl	800fb30 <xTaskRemoveFromEventList>
 800eca4:	2800      	cmp	r0, #0
 800eca6:	d0f4      	beq.n	800ec92 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800eca8:	f000 ffde 	bl	800fc68 <vTaskMissedYield>
			--cTxLock;
 800ecac:	1e6b      	subs	r3, r5, #1
 800ecae:	b2da      	uxtb	r2, r3
 800ecb0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ecb2:	2a00      	cmp	r2, #0
 800ecb4:	d1f1      	bne.n	800ec9a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800ecb6:	23ff      	movs	r3, #255	; 0xff
 800ecb8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ecbc:	f7ff f8dc 	bl	800de78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ecc0:	f7ff f8b8 	bl	800de34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ecc4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ecc8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ecca:	2d00      	cmp	r5, #0
 800eccc:	dd14      	ble.n	800ecf8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ecce:	f104 0810 	add.w	r8, r4, #16
 800ecd2:	e003      	b.n	800ecdc <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800ecd4:	1e6b      	subs	r3, r5, #1
 800ecd6:	b2da      	uxtb	r2, r3
 800ecd8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ecda:	b16a      	cbz	r2, 800ecf8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ecdc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ecde:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ece0:	b153      	cbz	r3, 800ecf8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ece2:	f000 ff25 	bl	800fb30 <xTaskRemoveFromEventList>
 800ece6:	2800      	cmp	r0, #0
 800ece8:	d0f4      	beq.n	800ecd4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800ecea:	f000 ffbd 	bl	800fc68 <vTaskMissedYield>
				--cRxLock;
 800ecee:	1e6b      	subs	r3, r5, #1
 800ecf0:	b2da      	uxtb	r2, r3
 800ecf2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ecf4:	2a00      	cmp	r2, #0
 800ecf6:	d1f1      	bne.n	800ecdc <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800ecf8:	23ff      	movs	r3, #255	; 0xff
 800ecfa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ecfe:	f7ff f8bb 	bl	800de78 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ed02:	f000 fe15 	bl	800f930 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ed06:	f7ff f895 	bl	800de34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ed0a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ed0c:	2b00      	cmp	r3, #0
 800ed0e:	d07c      	beq.n	800ee0a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800ed10:	f7ff f8b2 	bl	800de78 <vPortExitCritical>
	return xReturn;
 800ed14:	2501      	movs	r5, #1
 800ed16:	e755      	b.n	800ebc4 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ed18:	a802      	add	r0, sp, #8
 800ed1a:	f000 ff51 	bl	800fbc0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800ed1e:	e75e      	b.n	800ebde <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ed20:	23ff      	movs	r3, #255	; 0xff
 800ed22:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ed26:	f7ff f8a7 	bl	800de78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ed2a:	f7ff f883 	bl	800de34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ed2e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ed32:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed34:	2d00      	cmp	r5, #0
 800ed36:	dd10      	ble.n	800ed5a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed38:	f104 0810 	add.w	r8, r4, #16
 800ed3c:	e003      	b.n	800ed46 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800ed3e:	1e6b      	subs	r3, r5, #1
 800ed40:	b2da      	uxtb	r2, r3
 800ed42:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed44:	b14a      	cbz	r2, 800ed5a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed46:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed48:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed4a:	b133      	cbz	r3, 800ed5a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed4c:	f000 fef0 	bl	800fb30 <xTaskRemoveFromEventList>
 800ed50:	2800      	cmp	r0, #0
 800ed52:	d0f4      	beq.n	800ed3e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800ed54:	f000 ff88 	bl	800fc68 <vTaskMissedYield>
 800ed58:	e7f1      	b.n	800ed3e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800ed5a:	23ff      	movs	r3, #255	; 0xff
 800ed5c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ed60:	f7ff f88a 	bl	800de78 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800ed64:	f000 fde4 	bl	800f930 <xTaskResumeAll>
 800ed68:	e7d4      	b.n	800ed14 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800ed6a:	f7ff f885 	bl	800de78 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ed6e:	6823      	ldr	r3, [r4, #0]
 800ed70:	2b00      	cmp	r3, #0
 800ed72:	d062      	beq.n	800ee3a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ed74:	9901      	ldr	r1, [sp, #4]
 800ed76:	4630      	mov	r0, r6
 800ed78:	f000 fe4c 	bl	800fa14 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ed7c:	f7ff f85a 	bl	800de34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ed80:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ed84:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed86:	2d00      	cmp	r5, #0
 800ed88:	dc04      	bgt.n	800ed94 <xQueueSemaphoreTake+0x204>
 800ed8a:	e00d      	b.n	800eda8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800ed8c:	1e6b      	subs	r3, r5, #1
 800ed8e:	b2da      	uxtb	r2, r3
 800ed90:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed92:	b14a      	cbz	r2, 800eda8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed94:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed96:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed98:	b133      	cbz	r3, 800eda8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed9a:	f000 fec9 	bl	800fb30 <xTaskRemoveFromEventList>
 800ed9e:	2800      	cmp	r0, #0
 800eda0:	d0f4      	beq.n	800ed8c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800eda2:	f000 ff61 	bl	800fc68 <vTaskMissedYield>
 800eda6:	e7f1      	b.n	800ed8c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800eda8:	23ff      	movs	r3, #255	; 0xff
 800edaa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800edae:	f7ff f863 	bl	800de78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800edb2:	f7ff f83f 	bl	800de34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800edb6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800edba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800edbc:	2d00      	cmp	r5, #0
 800edbe:	dd10      	ble.n	800ede2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800edc0:	f104 0810 	add.w	r8, r4, #16
 800edc4:	e003      	b.n	800edce <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800edc6:	1e6b      	subs	r3, r5, #1
 800edc8:	b2da      	uxtb	r2, r3
 800edca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800edcc:	b14a      	cbz	r2, 800ede2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800edce:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800edd0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800edd2:	b133      	cbz	r3, 800ede2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800edd4:	f000 feac 	bl	800fb30 <xTaskRemoveFromEventList>
 800edd8:	2800      	cmp	r0, #0
 800edda:	d0f4      	beq.n	800edc6 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800eddc:	f000 ff44 	bl	800fc68 <vTaskMissedYield>
 800ede0:	e7f1      	b.n	800edc6 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800ede2:	23ff      	movs	r3, #255	; 0xff
 800ede4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ede8:	f7ff f846 	bl	800de78 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800edec:	f000 fda0 	bl	800f930 <xTaskResumeAll>
 800edf0:	2800      	cmp	r0, #0
 800edf2:	d18f      	bne.n	800ed14 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800edf4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800edf8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800edfc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ee00:	f3bf 8f4f 	dsb	sy
 800ee04:	f3bf 8f6f 	isb	sy
 800ee08:	e784      	b.n	800ed14 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800ee0a:	f7ff f835 	bl	800de78 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800ee0e:	b92f      	cbnz	r7, 800ee1c <xQueueSemaphoreTake+0x28c>
}
 800ee10:	4638      	mov	r0, r7
 800ee12:	b004      	add	sp, #16
 800ee14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ee18:	4607      	mov	r7, r0
 800ee1a:	e6d1      	b.n	800ebc0 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800ee1c:	f7ff f80a 	bl	800de34 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800ee20:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ee22:	b119      	cbz	r1, 800ee2c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800ee24:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ee26:	6819      	ldr	r1, [r3, #0]
 800ee28:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800ee2c:	68a0      	ldr	r0, [r4, #8]
 800ee2e:	f000 ffbd 	bl	800fdac <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800ee32:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800ee34:	f7ff f820 	bl	800de78 <vPortExitCritical>
 800ee38:	e7ea      	b.n	800ee10 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800ee3a:	f7fe fffb 	bl	800de34 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800ee3e:	68a0      	ldr	r0, [r4, #8]
 800ee40:	f000 ff28 	bl	800fc94 <xTaskPriorityInherit>
 800ee44:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800ee46:	f7ff f817 	bl	800de78 <vPortExitCritical>
 800ee4a:	e793      	b.n	800ed74 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800ee4c:	b197      	cbz	r7, 800ee74 <xQueueSemaphoreTake+0x2e4>
 800ee4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee52:	f383 8811 	msr	BASEPRI, r3
 800ee56:	f3bf 8f6f 	isb	sy
 800ee5a:	f3bf 8f4f 	dsb	sy
 800ee5e:	e7fe      	b.n	800ee5e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ee60:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800ee62:	3b01      	subs	r3, #1
 800ee64:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ee66:	b1ca      	cbz	r2, 800ee9c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee68:	6923      	ldr	r3, [r4, #16]
 800ee6a:	b933      	cbnz	r3, 800ee7a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800ee6c:	f7ff f804 	bl	800de78 <vPortExitCritical>
				return pdPASS;
 800ee70:	2701      	movs	r7, #1
 800ee72:	e7cd      	b.n	800ee10 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800ee74:	f7ff f800 	bl	800de78 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ee78:	e7ca      	b.n	800ee10 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee7a:	f104 0010 	add.w	r0, r4, #16
 800ee7e:	f000 fe57 	bl	800fb30 <xTaskRemoveFromEventList>
 800ee82:	2800      	cmp	r0, #0
 800ee84:	d0f2      	beq.n	800ee6c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800ee86:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ee8a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ee8e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ee92:	f3bf 8f4f 	dsb	sy
 800ee96:	f3bf 8f6f 	isb	sy
 800ee9a:	e7e7      	b.n	800ee6c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800ee9c:	f000 ffda 	bl	800fe54 <pvTaskIncrementMutexHeldCount>
 800eea0:	60a0      	str	r0, [r4, #8]
 800eea2:	e7e1      	b.n	800ee68 <xQueueSemaphoreTake+0x2d8>

0800eea4 <xQueueReceiveFromISR>:
{
 800eea4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800eea8:	b310      	cbz	r0, 800eef0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800eeaa:	460e      	mov	r6, r1
 800eeac:	4617      	mov	r7, r2
 800eeae:	4604      	mov	r4, r0
 800eeb0:	b191      	cbz	r1, 800eed8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800eeb2:	f7ff f8f3 	bl	800e09c <vPortValidateInterruptPriority>
	__asm volatile
 800eeb6:	f3ef 8911 	mrs	r9, BASEPRI
 800eeba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eebe:	f383 8811 	msr	BASEPRI, r3
 800eec2:	f3bf 8f6f 	isb	sy
 800eec6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800eeca:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800eecc:	b9cd      	cbnz	r5, 800ef02 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800eece:	4628      	mov	r0, r5
	__asm volatile
 800eed0:	f389 8811 	msr	BASEPRI, r9
}
 800eed4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800eed8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800eeda:	2b00      	cmp	r3, #0
 800eedc:	d0e9      	beq.n	800eeb2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800eede:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eee2:	f383 8811 	msr	BASEPRI, r3
 800eee6:	f3bf 8f6f 	isb	sy
 800eeea:	f3bf 8f4f 	dsb	sy
 800eeee:	e7fe      	b.n	800eeee <xQueueReceiveFromISR+0x4a>
 800eef0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eef4:	f383 8811 	msr	BASEPRI, r3
 800eef8:	f3bf 8f6f 	isb	sy
 800eefc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ef00:	e7fe      	b.n	800ef00 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800ef02:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ef06:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800ef08:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800ef0c:	b152      	cbz	r2, 800ef24 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ef0e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ef10:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ef12:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800ef14:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800ef16:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800ef18:	bf24      	itt	cs
 800ef1a:	6821      	ldrcs	r1, [r4, #0]
 800ef1c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800ef1e:	4630      	mov	r0, r6
 800ef20:	f01c f8b7 	bl	802b092 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ef24:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800ef26:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800ef2a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800ef2c:	d009      	beq.n	800ef42 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800ef2e:	f108 0301 	add.w	r3, r8, #1
 800ef32:	b25b      	sxtb	r3, r3
 800ef34:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800ef38:	2001      	movs	r0, #1
	__asm volatile
 800ef3a:	f389 8811 	msr	BASEPRI, r9
}
 800ef3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ef42:	6923      	ldr	r3, [r4, #16]
 800ef44:	2b00      	cmp	r3, #0
 800ef46:	d0f7      	beq.n	800ef38 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef48:	f104 0010 	add.w	r0, r4, #16
 800ef4c:	f000 fdf0 	bl	800fb30 <xTaskRemoveFromEventList>
 800ef50:	2800      	cmp	r0, #0
 800ef52:	d0f1      	beq.n	800ef38 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800ef54:	2f00      	cmp	r7, #0
 800ef56:	d0ef      	beq.n	800ef38 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800ef58:	2001      	movs	r0, #1
 800ef5a:	6038      	str	r0, [r7, #0]
 800ef5c:	e7b8      	b.n	800eed0 <xQueueReceiveFromISR+0x2c>
 800ef5e:	bf00      	nop

0800ef60 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800ef60:	b158      	cbz	r0, 800ef7a <uxQueueMessagesWaiting+0x1a>
{
 800ef62:	b510      	push	{r4, lr}
 800ef64:	4604      	mov	r4, r0
 800ef66:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800ef68:	f7fe ff64 	bl	800de34 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800ef6c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ef6e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ef70:	f7fe ff82 	bl	800de78 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ef74:	9801      	ldr	r0, [sp, #4]
 800ef76:	b002      	add	sp, #8
 800ef78:	bd10      	pop	{r4, pc}
	__asm volatile
 800ef7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef7e:	f383 8811 	msr	BASEPRI, r3
 800ef82:	f3bf 8f6f 	isb	sy
 800ef86:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800ef8a:	e7fe      	b.n	800ef8a <uxQueueMessagesWaiting+0x2a>

0800ef8c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800ef8c:	b108      	cbz	r0, 800ef92 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800ef8e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ef90:	4770      	bx	lr
 800ef92:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef96:	f383 8811 	msr	BASEPRI, r3
 800ef9a:	f3bf 8f6f 	isb	sy
 800ef9e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800efa2:	e7fe      	b.n	800efa2 <uxQueueMessagesWaitingFromISR+0x16>
 800efa4:	0000      	movs	r0, r0
	...

0800efa8 <vQueueDelete>:
	configASSERT( pxQueue );
 800efa8:	b1f0      	cbz	r0, 800efe8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800efaa:	4b21      	ldr	r3, [pc, #132]	; (800f030 <vQueueDelete+0x88>)
 800efac:	685a      	ldr	r2, [r3, #4]
 800efae:	4290      	cmp	r0, r2
 800efb0:	d025      	beq.n	800effe <vQueueDelete+0x56>
 800efb2:	68da      	ldr	r2, [r3, #12]
 800efb4:	4290      	cmp	r0, r2
 800efb6:	d02c      	beq.n	800f012 <vQueueDelete+0x6a>
 800efb8:	695a      	ldr	r2, [r3, #20]
 800efba:	4290      	cmp	r0, r2
 800efbc:	d02b      	beq.n	800f016 <vQueueDelete+0x6e>
 800efbe:	69da      	ldr	r2, [r3, #28]
 800efc0:	4290      	cmp	r0, r2
 800efc2:	d02a      	beq.n	800f01a <vQueueDelete+0x72>
 800efc4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800efc6:	4290      	cmp	r0, r2
 800efc8:	d029      	beq.n	800f01e <vQueueDelete+0x76>
 800efca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800efcc:	4290      	cmp	r0, r2
 800efce:	d01e      	beq.n	800f00e <vQueueDelete+0x66>
 800efd0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800efd2:	4290      	cmp	r0, r2
 800efd4:	d025      	beq.n	800f022 <vQueueDelete+0x7a>
 800efd6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800efd8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800efda:	bf08      	it	eq
 800efdc:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800efde:	d00f      	beq.n	800f000 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800efe0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800efe4:	b14b      	cbz	r3, 800effa <vQueueDelete+0x52>
}
 800efe6:	4770      	bx	lr
 800efe8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efec:	f383 8811 	msr	BASEPRI, r3
 800eff0:	f3bf 8f6f 	isb	sy
 800eff4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800eff8:	e7fe      	b.n	800eff8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800effa:	f7fe be01 	b.w	800dc00 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800effe:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800f000:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800f028 <vQueueDelete+0x80>
 800f004:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800f008:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800f00c:	e7e8      	b.n	800efe0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f00e:	2205      	movs	r2, #5
 800f010:	e7f6      	b.n	800f000 <vQueueDelete+0x58>
 800f012:	2201      	movs	r2, #1
 800f014:	e7f4      	b.n	800f000 <vQueueDelete+0x58>
 800f016:	2202      	movs	r2, #2
 800f018:	e7f2      	b.n	800f000 <vQueueDelete+0x58>
 800f01a:	2203      	movs	r2, #3
 800f01c:	e7f0      	b.n	800f000 <vQueueDelete+0x58>
 800f01e:	2204      	movs	r2, #4
 800f020:	e7ee      	b.n	800f000 <vQueueDelete+0x58>
 800f022:	2206      	movs	r2, #6
 800f024:	e7ec      	b.n	800f000 <vQueueDelete+0x58>
 800f026:	bf00      	nop
	...
 800f030:	20012740 	.word	0x20012740

0800f034 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f034:	4b12      	ldr	r3, [pc, #72]	; (800f080 <vQueueAddToRegistry+0x4c>)
 800f036:	681a      	ldr	r2, [r3, #0]
 800f038:	b17a      	cbz	r2, 800f05a <vQueueAddToRegistry+0x26>
 800f03a:	689a      	ldr	r2, [r3, #8]
 800f03c:	b162      	cbz	r2, 800f058 <vQueueAddToRegistry+0x24>
 800f03e:	691a      	ldr	r2, [r3, #16]
 800f040:	b192      	cbz	r2, 800f068 <vQueueAddToRegistry+0x34>
 800f042:	699a      	ldr	r2, [r3, #24]
 800f044:	b192      	cbz	r2, 800f06c <vQueueAddToRegistry+0x38>
 800f046:	6a1a      	ldr	r2, [r3, #32]
 800f048:	b192      	cbz	r2, 800f070 <vQueueAddToRegistry+0x3c>
 800f04a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800f04c:	b192      	cbz	r2, 800f074 <vQueueAddToRegistry+0x40>
 800f04e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800f050:	b192      	cbz	r2, 800f078 <vQueueAddToRegistry+0x44>
 800f052:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800f054:	b192      	cbz	r2, 800f07c <vQueueAddToRegistry+0x48>
	}
 800f056:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f058:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f05a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800f05e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f062:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800f066:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f068:	2202      	movs	r2, #2
 800f06a:	e7f6      	b.n	800f05a <vQueueAddToRegistry+0x26>
 800f06c:	2203      	movs	r2, #3
 800f06e:	e7f4      	b.n	800f05a <vQueueAddToRegistry+0x26>
 800f070:	2204      	movs	r2, #4
 800f072:	e7f2      	b.n	800f05a <vQueueAddToRegistry+0x26>
 800f074:	2205      	movs	r2, #5
 800f076:	e7f0      	b.n	800f05a <vQueueAddToRegistry+0x26>
 800f078:	2206      	movs	r2, #6
 800f07a:	e7ee      	b.n	800f05a <vQueueAddToRegistry+0x26>
 800f07c:	2207      	movs	r2, #7
 800f07e:	e7ec      	b.n	800f05a <vQueueAddToRegistry+0x26>
 800f080:	20012740 	.word	0x20012740

0800f084 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800f084:	b570      	push	{r4, r5, r6, lr}
 800f086:	4605      	mov	r5, r0
 800f088:	460e      	mov	r6, r1
 800f08a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800f08c:	f7fe fed2 	bl	800de34 <vPortEnterCritical>
 800f090:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f094:	2bff      	cmp	r3, #255	; 0xff
 800f096:	bf04      	itt	eq
 800f098:	2300      	moveq	r3, #0
 800f09a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800f09e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f0a2:	2bff      	cmp	r3, #255	; 0xff
 800f0a4:	bf04      	itt	eq
 800f0a6:	2300      	moveq	r3, #0
 800f0a8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800f0ac:	f7fe fee4 	bl	800de78 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800f0b0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800f0b2:	2b00      	cmp	r3, #0
 800f0b4:	d043      	beq.n	800f13e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800f0b6:	f7fe febd 	bl	800de34 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f0ba:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f0be:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f0c0:	2c00      	cmp	r4, #0
 800f0c2:	dd14      	ble.n	800f0ee <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f0c4:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800f0c8:	e003      	b.n	800f0d2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800f0ca:	1e63      	subs	r3, r4, #1
 800f0cc:	b2da      	uxtb	r2, r3
 800f0ce:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f0d0:	b16a      	cbz	r2, 800f0ee <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f0d2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f0d4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f0d6:	b153      	cbz	r3, 800f0ee <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f0d8:	f000 fd2a 	bl	800fb30 <xTaskRemoveFromEventList>
 800f0dc:	2800      	cmp	r0, #0
 800f0de:	d0f4      	beq.n	800f0ca <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800f0e0:	f000 fdc2 	bl	800fc68 <vTaskMissedYield>
			--cTxLock;
 800f0e4:	1e63      	subs	r3, r4, #1
 800f0e6:	b2da      	uxtb	r2, r3
 800f0e8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f0ea:	2a00      	cmp	r2, #0
 800f0ec:	d1f1      	bne.n	800f0d2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f0ee:	23ff      	movs	r3, #255	; 0xff
 800f0f0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f0f4:	f7fe fec0 	bl	800de78 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f0f8:	f7fe fe9c 	bl	800de34 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f0fc:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f100:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f102:	2c00      	cmp	r4, #0
 800f104:	dd14      	ble.n	800f130 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f106:	f105 0610 	add.w	r6, r5, #16
 800f10a:	e003      	b.n	800f114 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800f10c:	1e63      	subs	r3, r4, #1
 800f10e:	b2da      	uxtb	r2, r3
 800f110:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f112:	b16a      	cbz	r2, 800f130 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f114:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f116:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f118:	b153      	cbz	r3, 800f130 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f11a:	f000 fd09 	bl	800fb30 <xTaskRemoveFromEventList>
 800f11e:	2800      	cmp	r0, #0
 800f120:	d0f4      	beq.n	800f10c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800f122:	f000 fda1 	bl	800fc68 <vTaskMissedYield>
				--cRxLock;
 800f126:	1e63      	subs	r3, r4, #1
 800f128:	b2da      	uxtb	r2, r3
 800f12a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f12c:	2a00      	cmp	r2, #0
 800f12e:	d1f1      	bne.n	800f114 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800f130:	23ff      	movs	r3, #255	; 0xff
 800f132:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800f136:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800f13a:	f7fe be9d 	b.w	800de78 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800f13e:	4622      	mov	r2, r4
 800f140:	4631      	mov	r1, r6
 800f142:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800f146:	f000 fca9 	bl	800fa9c <vTaskPlaceOnEventListRestricted>
 800f14a:	e7b4      	b.n	800f0b6 <vQueueWaitForMessageRestricted+0x32>

0800f14c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800f14c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f150:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800f152:	f7fe fe6f 	bl	800de34 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800f156:	4a34      	ldr	r2, [pc, #208]	; (800f228 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800f158:	4e34      	ldr	r6, [pc, #208]	; (800f22c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800f15a:	6813      	ldr	r3, [r2, #0]
 800f15c:	3301      	adds	r3, #1
 800f15e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800f160:	6833      	ldr	r3, [r6, #0]
 800f162:	2b00      	cmp	r3, #0
 800f164:	d032      	beq.n	800f1cc <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800f166:	4c32      	ldr	r4, [pc, #200]	; (800f230 <prvAddNewTaskToReadyList+0xe4>)
 800f168:	6823      	ldr	r3, [r4, #0]
 800f16a:	b33b      	cbz	r3, 800f1bc <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f16c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f16e:	4f31      	ldr	r7, [pc, #196]	; (800f234 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800f170:	4a31      	ldr	r2, [pc, #196]	; (800f238 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800f172:	4932      	ldr	r1, [pc, #200]	; (800f23c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800f174:	6813      	ldr	r3, [r2, #0]
 800f176:	3301      	adds	r3, #1
 800f178:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800f17a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800f17c:	680b      	ldr	r3, [r1, #0]
 800f17e:	4283      	cmp	r3, r0
 800f180:	bf38      	it	cc
 800f182:	6008      	strcc	r0, [r1, #0]
 800f184:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f188:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800f18c:	1d29      	adds	r1, r5, #4
 800f18e:	f7fe fdab 	bl	800dce8 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800f192:	f7fe fe71 	bl	800de78 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800f196:	6823      	ldr	r3, [r4, #0]
 800f198:	b173      	cbz	r3, 800f1b8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800f19a:	6832      	ldr	r2, [r6, #0]
 800f19c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f19e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f1a0:	429a      	cmp	r2, r3
 800f1a2:	d209      	bcs.n	800f1b8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800f1a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f1a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f1ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f1b0:	f3bf 8f4f 	dsb	sy
 800f1b4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800f1b8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f1bc:	6833      	ldr	r3, [r6, #0]
 800f1be:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f1c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f1c2:	4f1c      	ldr	r7, [pc, #112]	; (800f234 <prvAddNewTaskToReadyList+0xe8>)
 800f1c4:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800f1c6:	bf98      	it	ls
 800f1c8:	6035      	strls	r5, [r6, #0]
 800f1ca:	e7d1      	b.n	800f170 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800f1cc:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800f1ce:	6813      	ldr	r3, [r2, #0]
 800f1d0:	2b01      	cmp	r3, #1
 800f1d2:	d003      	beq.n	800f1dc <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f1d4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f1d6:	4f17      	ldr	r7, [pc, #92]	; (800f234 <prvAddNewTaskToReadyList+0xe8>)
 800f1d8:	4c15      	ldr	r4, [pc, #84]	; (800f230 <prvAddNewTaskToReadyList+0xe4>)
 800f1da:	e7c9      	b.n	800f170 <prvAddNewTaskToReadyList+0x24>
 800f1dc:	4f15      	ldr	r7, [pc, #84]	; (800f234 <prvAddNewTaskToReadyList+0xe8>)
 800f1de:	463c      	mov	r4, r7
 800f1e0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f1e4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f1e6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f1e8:	f7fe fd6e 	bl	800dcc8 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f1ec:	45a0      	cmp	r8, r4
 800f1ee:	d1f9      	bne.n	800f1e4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800f1f0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800f254 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800f1f4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f258 <prvAddNewTaskToReadyList+0x10c>
 800f1f8:	4c0d      	ldr	r4, [pc, #52]	; (800f230 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800f1fa:	4648      	mov	r0, r9
 800f1fc:	f7fe fd64 	bl	800dcc8 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800f200:	4640      	mov	r0, r8
 800f202:	f7fe fd61 	bl	800dcc8 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800f206:	480e      	ldr	r0, [pc, #56]	; (800f240 <prvAddNewTaskToReadyList+0xf4>)
 800f208:	f7fe fd5e 	bl	800dcc8 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800f20c:	480d      	ldr	r0, [pc, #52]	; (800f244 <prvAddNewTaskToReadyList+0xf8>)
 800f20e:	f7fe fd5b 	bl	800dcc8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800f212:	480d      	ldr	r0, [pc, #52]	; (800f248 <prvAddNewTaskToReadyList+0xfc>)
 800f214:	f7fe fd58 	bl	800dcc8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800f218:	4b0c      	ldr	r3, [pc, #48]	; (800f24c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800f21a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800f21c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800f220:	4b0b      	ldr	r3, [pc, #44]	; (800f250 <prvAddNewTaskToReadyList+0x104>)
 800f222:	f8c3 8000 	str.w	r8, [r3]
}
 800f226:	e7a3      	b.n	800f170 <prvAddNewTaskToReadyList+0x24>
 800f228:	20012bec 	.word	0x20012bec
 800f22c:	20012780 	.word	0x20012780
 800f230:	20012c48 	.word	0x20012c48
 800f234:	2001278c 	.word	0x2001278c
 800f238:	20012bf8 	.word	0x20012bf8
 800f23c:	20012bfc 	.word	0x20012bfc
 800f240:	20012c34 	.word	0x20012c34
 800f244:	20012c60 	.word	0x20012c60
 800f248:	20012c4c 	.word	0x20012c4c
 800f24c:	20012784 	.word	0x20012784
 800f250:	20012788 	.word	0x20012788
 800f254:	20012c00 	.word	0x20012c00
 800f258:	20012c14 	.word	0x20012c14

0800f25c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f25c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f260:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f262:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f266:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800f26a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f26c:	4606      	mov	r6, r0
 800f26e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f270:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f272:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f274:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f276:	f01b fde6 	bl	802ae46 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f27a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f27c:	f1a9 0904 	sub.w	r9, r9, #4
 800f280:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f282:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800f286:	2d00      	cmp	r5, #0
 800f288:	d079      	beq.n	800f37e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f28a:	782b      	ldrb	r3, [r5, #0]
 800f28c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800f290:	2b00      	cmp	r3, #0
 800f292:	d03b      	beq.n	800f30c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f294:	786b      	ldrb	r3, [r5, #1]
 800f296:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800f29a:	2b00      	cmp	r3, #0
 800f29c:	d036      	beq.n	800f30c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f29e:	78ab      	ldrb	r3, [r5, #2]
 800f2a0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800f2a4:	b393      	cbz	r3, 800f30c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2a6:	78eb      	ldrb	r3, [r5, #3]
 800f2a8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800f2ac:	b373      	cbz	r3, 800f30c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2ae:	792b      	ldrb	r3, [r5, #4]
 800f2b0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800f2b4:	b353      	cbz	r3, 800f30c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2b6:	796b      	ldrb	r3, [r5, #5]
 800f2b8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800f2bc:	b333      	cbz	r3, 800f30c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2be:	79ab      	ldrb	r3, [r5, #6]
 800f2c0:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800f2c4:	b313      	cbz	r3, 800f30c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2c6:	79eb      	ldrb	r3, [r5, #7]
 800f2c8:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800f2cc:	b1f3      	cbz	r3, 800f30c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2ce:	7a2b      	ldrb	r3, [r5, #8]
 800f2d0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800f2d4:	b1d3      	cbz	r3, 800f30c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2d6:	7a6b      	ldrb	r3, [r5, #9]
 800f2d8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800f2dc:	b1b3      	cbz	r3, 800f30c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2de:	7aab      	ldrb	r3, [r5, #10]
 800f2e0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800f2e4:	b193      	cbz	r3, 800f30c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2e6:	7aeb      	ldrb	r3, [r5, #11]
 800f2e8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800f2ec:	b173      	cbz	r3, 800f30c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2ee:	7b2b      	ldrb	r3, [r5, #12]
 800f2f0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800f2f4:	b153      	cbz	r3, 800f30c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2f6:	7b6b      	ldrb	r3, [r5, #13]
 800f2f8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800f2fc:	b133      	cbz	r3, 800f30c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2fe:	7bab      	ldrb	r3, [r5, #14]
 800f300:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800f304:	b113      	cbz	r3, 800f30c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f306:	7beb      	ldrb	r3, [r5, #15]
 800f308:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800f30c:	2300      	movs	r3, #0
 800f30e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800f312:	9d08      	ldr	r5, [sp, #32]
 800f314:	2d37      	cmp	r5, #55	; 0x37
 800f316:	bf28      	it	cs
 800f318:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800f31a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800f31e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800f320:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f322:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800f324:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f328:	f7fe fcda 	bl	800dce0 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f32c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800f330:	f104 0018 	add.w	r0, r4, #24
 800f334:	f7fe fcd4 	bl	800dce0 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f338:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800f33a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f33e:	4651      	mov	r1, sl
 800f340:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800f342:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800f344:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800f346:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800f34a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f34e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f352:	f01b fd78 	bl	802ae46 <memset>
 800f356:	4b0b      	ldr	r3, [pc, #44]	; (800f384 <prvInitialiseNewTask.constprop.0+0x128>)
 800f358:	65e3      	str	r3, [r4, #92]	; 0x5c
 800f35a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800f35e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f360:	463a      	mov	r2, r7
 800f362:	4631      	mov	r1, r6
 800f364:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f366:	6625      	str	r5, [r4, #96]	; 0x60
 800f368:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f36a:	f7fe fd37 	bl	800dddc <pxPortInitialiseStack>
 800f36e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800f370:	f1b8 0f00 	cmp.w	r8, #0
 800f374:	d001      	beq.n	800f37a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800f376:	f8c8 4000 	str.w	r4, [r8]
}
 800f37a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800f37e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800f382:	e7c6      	b.n	800f312 <prvInitialiseNewTask.constprop.0+0xb6>
 800f384:	20013710 	.word	0x20013710

0800f388 <prvIdleTask>:
{
 800f388:	b580      	push	{r7, lr}
 800f38a:	4d23      	ldr	r5, [pc, #140]	; (800f418 <prvIdleTask+0x90>)
 800f38c:	4f23      	ldr	r7, [pc, #140]	; (800f41c <prvIdleTask+0x94>)
 800f38e:	4e24      	ldr	r6, [pc, #144]	; (800f420 <prvIdleTask+0x98>)
 800f390:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800f424 <prvIdleTask+0x9c>
				taskYIELD();
 800f394:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800f398:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f39c:	682b      	ldr	r3, [r5, #0]
 800f39e:	b35b      	cbz	r3, 800f3f8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800f3a0:	f7fe fd48 	bl	800de34 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f3a4:	68fb      	ldr	r3, [r7, #12]
 800f3a6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f3a8:	1d20      	adds	r0, r4, #4
 800f3aa:	f7fe fcc5 	bl	800dd38 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f3ae:	6833      	ldr	r3, [r6, #0]
 800f3b0:	3b01      	subs	r3, #1
 800f3b2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f3b4:	682b      	ldr	r3, [r5, #0]
 800f3b6:	3b01      	subs	r3, #1
 800f3b8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800f3ba:	f7fe fd5d 	bl	800de78 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800f3be:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f3c2:	f01b fd89 	bl	802aed8 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f3c6:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800f3ca:	b163      	cbz	r3, 800f3e6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800f3cc:	2b01      	cmp	r3, #1
 800f3ce:	d01e      	beq.n	800f40e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800f3d0:	2b02      	cmp	r3, #2
 800f3d2:	d0e3      	beq.n	800f39c <prvIdleTask+0x14>
 800f3d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3d8:	f383 8811 	msr	BASEPRI, r3
 800f3dc:	f3bf 8f6f 	isb	sy
 800f3e0:	f3bf 8f4f 	dsb	sy
 800f3e4:	e7fe      	b.n	800f3e4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800f3e6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f3e8:	f7fe fc0a 	bl	800dc00 <vPortFree>
				vPortFree( pxTCB );
 800f3ec:	4620      	mov	r0, r4
 800f3ee:	f7fe fc07 	bl	800dc00 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f3f2:	682b      	ldr	r3, [r5, #0]
 800f3f4:	2b00      	cmp	r3, #0
 800f3f6:	d1d3      	bne.n	800f3a0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800f3f8:	f8d8 3000 	ldr.w	r3, [r8]
 800f3fc:	2b01      	cmp	r3, #1
 800f3fe:	d9cd      	bls.n	800f39c <prvIdleTask+0x14>
				taskYIELD();
 800f400:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800f404:	f3bf 8f4f 	dsb	sy
 800f408:	f3bf 8f6f 	isb	sy
 800f40c:	e7c6      	b.n	800f39c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800f40e:	4620      	mov	r0, r4
 800f410:	f7fe fbf6 	bl	800dc00 <vPortFree>
 800f414:	e7c2      	b.n	800f39c <prvIdleTask+0x14>
 800f416:	bf00      	nop
 800f418:	20012bf0 	.word	0x20012bf0
 800f41c:	20012c60 	.word	0x20012c60
 800f420:	20012bec 	.word	0x20012bec
 800f424:	2001278c 	.word	0x2001278c

0800f428 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800f428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800f42c:	4b47      	ldr	r3, [pc, #284]	; (800f54c <xTaskIncrementTick.part.0+0x124>)
 800f42e:	681e      	ldr	r6, [r3, #0]
 800f430:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800f432:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800f434:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800f436:	2e00      	cmp	r6, #0
 800f438:	d040      	beq.n	800f4bc <xTaskIncrementTick.part.0+0x94>
 800f43a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800f560 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f43e:	f8db 3000 	ldr.w	r3, [fp]
 800f442:	429e      	cmp	r6, r3
 800f444:	d347      	bcc.n	800f4d6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f446:	4f42      	ldr	r7, [pc, #264]	; (800f550 <xTaskIncrementTick.part.0+0x128>)
 800f448:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800f564 <xTaskIncrementTick.part.0+0x13c>
 800f44c:	683b      	ldr	r3, [r7, #0]
 800f44e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800f568 <xTaskIncrementTick.part.0+0x140>
 800f452:	681d      	ldr	r5, [r3, #0]
 800f454:	2d00      	cmp	r5, #0
 800f456:	d073      	beq.n	800f540 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800f458:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800f56c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800f45c:	2500      	movs	r5, #0
 800f45e:	e022      	b.n	800f4a6 <xTaskIncrementTick.part.0+0x7e>
 800f460:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f462:	f7fe fc69 	bl	800dd38 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f466:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f468:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f46a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f46e:	b113      	cbz	r3, 800f476 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f470:	f7fe fc62 	bl	800dd38 <uxListRemove>
 800f474:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800f476:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f478:	f8d8 2000 	ldr.w	r2, [r8]
 800f47c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f480:	4293      	cmp	r3, r2
 800f482:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f486:	bf88      	it	hi
 800f488:	f8c8 3000 	strhi.w	r3, [r8]
 800f48c:	f7fe fc2c 	bl	800dce8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f490:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f494:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f496:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f498:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f49a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800f49c:	4291      	cmp	r1, r2
 800f49e:	bf28      	it	cs
 800f4a0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f4a2:	2b00      	cmp	r3, #0
 800f4a4:	d04c      	beq.n	800f540 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f4a6:	683b      	ldr	r3, [r7, #0]
 800f4a8:	68db      	ldr	r3, [r3, #12]
 800f4aa:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800f4ac:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f4ae:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800f4b0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f4b2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800f4b4:	d2d4      	bcs.n	800f460 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800f4b6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800f4ba:	e011      	b.n	800f4e0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800f4bc:	4b24      	ldr	r3, [pc, #144]	; (800f550 <xTaskIncrementTick.part.0+0x128>)
 800f4be:	681a      	ldr	r2, [r3, #0]
 800f4c0:	6812      	ldr	r2, [r2, #0]
 800f4c2:	b30a      	cbz	r2, 800f508 <xTaskIncrementTick.part.0+0xe0>
 800f4c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4c8:	f383 8811 	msr	BASEPRI, r3
 800f4cc:	f3bf 8f6f 	isb	sy
 800f4d0:	f3bf 8f4f 	dsb	sy
 800f4d4:	e7fe      	b.n	800f4d4 <xTaskIncrementTick.part.0+0xac>
 800f4d6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800f564 <xTaskIncrementTick.part.0+0x13c>
 800f4da:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800f568 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800f4de:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f4e0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800f4e4:	491b      	ldr	r1, [pc, #108]	; (800f554 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f4e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f4e8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f4ec:	009b      	lsls	r3, r3, #2
 800f4ee:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800f4f2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800f4f4:	2a02      	cmp	r2, #2
 800f4f6:	bf28      	it	cs
 800f4f8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800f4fa:	2b00      	cmp	r3, #0
}
 800f4fc:	bf0c      	ite	eq
 800f4fe:	4628      	moveq	r0, r5
 800f500:	2001      	movne	r0, #1
 800f502:	b003      	add	sp, #12
 800f504:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800f508:	4a13      	ldr	r2, [pc, #76]	; (800f558 <xTaskIncrementTick.part.0+0x130>)
 800f50a:	6818      	ldr	r0, [r3, #0]
 800f50c:	6811      	ldr	r1, [r2, #0]
 800f50e:	6019      	str	r1, [r3, #0]
 800f510:	4912      	ldr	r1, [pc, #72]	; (800f55c <xTaskIncrementTick.part.0+0x134>)
 800f512:	6010      	str	r0, [r2, #0]
 800f514:	680a      	ldr	r2, [r1, #0]
 800f516:	3201      	adds	r2, #1
 800f518:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f51a:	681a      	ldr	r2, [r3, #0]
 800f51c:	6812      	ldr	r2, [r2, #0]
 800f51e:	b932      	cbnz	r2, 800f52e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800f520:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800f560 <xTaskIncrementTick.part.0+0x138>
 800f524:	f04f 33ff 	mov.w	r3, #4294967295
 800f528:	f8cb 3000 	str.w	r3, [fp]
 800f52c:	e787      	b.n	800f43e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f52e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f530:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800f560 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f534:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f536:	68db      	ldr	r3, [r3, #12]
 800f538:	685b      	ldr	r3, [r3, #4]
 800f53a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800f53e:	e77e      	b.n	800f43e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f540:	f04f 33ff 	mov.w	r3, #4294967295
 800f544:	f8cb 3000 	str.w	r3, [fp]
					break;
 800f548:	e7ca      	b.n	800f4e0 <xTaskIncrementTick.part.0+0xb8>
 800f54a:	bf00      	nop
 800f54c:	20012c74 	.word	0x20012c74
 800f550:	20012784 	.word	0x20012784
 800f554:	20012c78 	.word	0x20012c78
 800f558:	20012788 	.word	0x20012788
 800f55c:	20012c2c 	.word	0x20012c2c
 800f560:	20012c28 	.word	0x20012c28
 800f564:	2001278c 	.word	0x2001278c
 800f568:	20012780 	.word	0x20012780
 800f56c:	20012bfc 	.word	0x20012bfc

0800f570 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800f570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800f574:	4d41      	ldr	r5, [pc, #260]	; (800f67c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800f576:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800f578:	f7fe fc5c 	bl	800de34 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800f57c:	682b      	ldr	r3, [r5, #0]
 800f57e:	3b01      	subs	r3, #1
 800f580:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f582:	682b      	ldr	r3, [r5, #0]
 800f584:	2b00      	cmp	r3, #0
 800f586:	d161      	bne.n	800f64c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800f588:	4b3d      	ldr	r3, [pc, #244]	; (800f680 <xTaskResumeAll.part.0+0x110>)
 800f58a:	681b      	ldr	r3, [r3, #0]
 800f58c:	2b00      	cmp	r3, #0
 800f58e:	d05d      	beq.n	800f64c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f590:	4e3c      	ldr	r6, [pc, #240]	; (800f684 <xTaskResumeAll.part.0+0x114>)
 800f592:	6833      	ldr	r3, [r6, #0]
 800f594:	2b00      	cmp	r3, #0
 800f596:	d06e      	beq.n	800f676 <xTaskResumeAll.part.0+0x106>
 800f598:	4f3b      	ldr	r7, [pc, #236]	; (800f688 <xTaskResumeAll.part.0+0x118>)
 800f59a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800f698 <xTaskResumeAll.part.0+0x128>
 800f59e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800f69c <xTaskResumeAll.part.0+0x12c>
 800f5a2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800f6a0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f5a6:	68f3      	ldr	r3, [r6, #12]
 800f5a8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f5aa:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f5ae:	f104 0018 	add.w	r0, r4, #24
 800f5b2:	f7fe fbc1 	bl	800dd38 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f5b6:	4658      	mov	r0, fp
 800f5b8:	f7fe fbbe 	bl	800dd38 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800f5bc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f5be:	683a      	ldr	r2, [r7, #0]
 800f5c0:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f5c4:	4293      	cmp	r3, r2
 800f5c6:	4659      	mov	r1, fp
 800f5c8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f5cc:	bf88      	it	hi
 800f5ce:	603b      	strhi	r3, [r7, #0]
 800f5d0:	f7fe fb8a 	bl	800dce8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f5d4:	f8d8 3000 	ldr.w	r3, [r8]
 800f5d8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f5da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f5dc:	429a      	cmp	r2, r3
 800f5de:	d33d      	bcc.n	800f65c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800f5e0:	2301      	movs	r3, #1
 800f5e2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f5e6:	6833      	ldr	r3, [r6, #0]
 800f5e8:	2b00      	cmp	r3, #0
 800f5ea:	d1dc      	bne.n	800f5a6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f5ec:	4b27      	ldr	r3, [pc, #156]	; (800f68c <xTaskResumeAll.part.0+0x11c>)
 800f5ee:	681a      	ldr	r2, [r3, #0]
 800f5f0:	6812      	ldr	r2, [r2, #0]
 800f5f2:	2a00      	cmp	r2, #0
 800f5f4:	d03a      	beq.n	800f66c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f5f6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f5f8:	4b25      	ldr	r3, [pc, #148]	; (800f690 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f5fa:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f5fc:	68d2      	ldr	r2, [r2, #12]
 800f5fe:	6852      	ldr	r2, [r2, #4]
 800f600:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800f602:	4e24      	ldr	r6, [pc, #144]	; (800f694 <xTaskResumeAll.part.0+0x124>)
 800f604:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800f606:	b194      	cbz	r4, 800f62e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800f608:	2701      	movs	r7, #1
 800f60a:	e006      	b.n	800f61a <xTaskResumeAll.part.0+0xaa>
 800f60c:	f7ff ff0c 	bl	800f428 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800f610:	b108      	cbz	r0, 800f616 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800f612:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f616:	3c01      	subs	r4, #1
 800f618:	d008      	beq.n	800f62c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f61a:	682b      	ldr	r3, [r5, #0]
 800f61c:	2b00      	cmp	r3, #0
 800f61e:	d0f5      	beq.n	800f60c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800f620:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f622:	3c01      	subs	r4, #1
		++xPendedTicks;
 800f624:	f103 0301 	add.w	r3, r3, #1
 800f628:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f62a:	d1f6      	bne.n	800f61a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800f62c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800f62e:	f8da 3000 	ldr.w	r3, [sl]
 800f632:	b15b      	cbz	r3, 800f64c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800f634:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f638:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f63c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f640:	f3bf 8f4f 	dsb	sy
 800f644:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800f648:	2001      	movs	r0, #1
 800f64a:	e000      	b.n	800f64e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800f64c:	2000      	movs	r0, #0
 800f64e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f650:	f7fe fc12 	bl	800de78 <vPortExitCritical>
}
 800f654:	9801      	ldr	r0, [sp, #4]
 800f656:	b003      	add	sp, #12
 800f658:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f65c:	6833      	ldr	r3, [r6, #0]
 800f65e:	2b00      	cmp	r3, #0
 800f660:	d1a1      	bne.n	800f5a6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f662:	4b0a      	ldr	r3, [pc, #40]	; (800f68c <xTaskResumeAll.part.0+0x11c>)
 800f664:	681a      	ldr	r2, [r3, #0]
 800f666:	6812      	ldr	r2, [r2, #0]
 800f668:	2a00      	cmp	r2, #0
 800f66a:	d1c4      	bne.n	800f5f6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800f66c:	4b08      	ldr	r3, [pc, #32]	; (800f690 <xTaskResumeAll.part.0+0x120>)
 800f66e:	f04f 32ff 	mov.w	r2, #4294967295
 800f672:	601a      	str	r2, [r3, #0]
 800f674:	e7c5      	b.n	800f602 <xTaskResumeAll.part.0+0x92>
 800f676:	f8df a028 	ldr.w	sl, [pc, #40]	; 800f6a0 <xTaskResumeAll.part.0+0x130>
 800f67a:	e7c2      	b.n	800f602 <xTaskResumeAll.part.0+0x92>
 800f67c:	20012bf4 	.word	0x20012bf4
 800f680:	20012bec 	.word	0x20012bec
 800f684:	20012c34 	.word	0x20012c34
 800f688:	20012bfc 	.word	0x20012bfc
 800f68c:	20012784 	.word	0x20012784
 800f690:	20012c28 	.word	0x20012c28
 800f694:	20012c30 	.word	0x20012c30
 800f698:	2001278c 	.word	0x2001278c
 800f69c:	20012780 	.word	0x20012780
 800f6a0:	20012c78 	.word	0x20012c78

0800f6a4 <xTaskCreateStatic>:
	{
 800f6a4:	b530      	push	{r4, r5, lr}
 800f6a6:	b087      	sub	sp, #28
 800f6a8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800f6aa:	b1c4      	cbz	r4, 800f6de <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800f6ac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f6ae:	b16d      	cbz	r5, 800f6cc <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f6b0:	25ac      	movs	r5, #172	; 0xac
 800f6b2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800f6b4:	9d05      	ldr	r5, [sp, #20]
 800f6b6:	2dac      	cmp	r5, #172	; 0xac
 800f6b8:	d01a      	beq.n	800f6f0 <xTaskCreateStatic+0x4c>
 800f6ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f6be:	f383 8811 	msr	BASEPRI, r3
 800f6c2:	f3bf 8f6f 	isb	sy
 800f6c6:	f3bf 8f4f 	dsb	sy
 800f6ca:	e7fe      	b.n	800f6ca <xTaskCreateStatic+0x26>
 800f6cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f6d0:	f383 8811 	msr	BASEPRI, r3
 800f6d4:	f3bf 8f6f 	isb	sy
 800f6d8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f6dc:	e7fe      	b.n	800f6dc <xTaskCreateStatic+0x38>
 800f6de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f6e2:	f383 8811 	msr	BASEPRI, r3
 800f6e6:	f3bf 8f6f 	isb	sy
 800f6ea:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f6ee:	e7fe      	b.n	800f6ee <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f6f0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f6f2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f6f4:	2402      	movs	r4, #2
 800f6f6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f6fa:	ac04      	add	r4, sp, #16
 800f6fc:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800f700:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f702:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f704:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f706:	f7ff fda9 	bl	800f25c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f70a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800f70c:	f7ff fd1e 	bl	800f14c <prvAddNewTaskToReadyList>
	}
 800f710:	9804      	ldr	r0, [sp, #16]
 800f712:	b007      	add	sp, #28
 800f714:	bd30      	pop	{r4, r5, pc}
 800f716:	bf00      	nop

0800f718 <xTaskCreate>:
	{
 800f718:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f71c:	4607      	mov	r7, r0
 800f71e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f720:	0090      	lsls	r0, r2, #2
	{
 800f722:	4615      	mov	r5, r2
 800f724:	4688      	mov	r8, r1
 800f726:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f728:	f7fe f9ae 	bl	800da88 <pvPortMalloc>
			if( pxStack != NULL )
 800f72c:	b1d8      	cbz	r0, 800f766 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800f72e:	4604      	mov	r4, r0
 800f730:	20ac      	movs	r0, #172	; 0xac
 800f732:	f7fe f9a9 	bl	800da88 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800f736:	4606      	mov	r6, r0
 800f738:	b1d0      	cbz	r0, 800f770 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800f73a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800f73c:	2400      	movs	r4, #0
 800f73e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800f742:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800f744:	9401      	str	r4, [sp, #4]
 800f746:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f748:	9602      	str	r6, [sp, #8]
 800f74a:	464b      	mov	r3, r9
 800f74c:	462a      	mov	r2, r5
 800f74e:	4641      	mov	r1, r8
 800f750:	4638      	mov	r0, r7
 800f752:	9400      	str	r4, [sp, #0]
 800f754:	f7ff fd82 	bl	800f25c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f758:	4630      	mov	r0, r6
 800f75a:	f7ff fcf7 	bl	800f14c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800f75e:	2001      	movs	r0, #1
	}
 800f760:	b005      	add	sp, #20
 800f762:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f766:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800f76a:	b005      	add	sp, #20
 800f76c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800f770:	4620      	mov	r0, r4
 800f772:	f7fe fa45 	bl	800dc00 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f776:	f04f 30ff 	mov.w	r0, #4294967295
 800f77a:	e7f1      	b.n	800f760 <xTaskCreate+0x48>

0800f77c <vTaskDelay>:
	{
 800f77c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800f77e:	b950      	cbnz	r0, 800f796 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800f780:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f784:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f788:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f78c:	f3bf 8f4f 	dsb	sy
 800f790:	f3bf 8f6f 	isb	sy
	}
 800f794:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800f796:	4d1e      	ldr	r5, [pc, #120]	; (800f810 <vTaskDelay+0x94>)
 800f798:	682b      	ldr	r3, [r5, #0]
 800f79a:	b143      	cbz	r3, 800f7ae <vTaskDelay+0x32>
 800f79c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7a0:	f383 8811 	msr	BASEPRI, r3
 800f7a4:	f3bf 8f6f 	isb	sy
 800f7a8:	f3bf 8f4f 	dsb	sy
 800f7ac:	e7fe      	b.n	800f7ac <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800f7ae:	682b      	ldr	r3, [r5, #0]
 800f7b0:	3301      	adds	r3, #1
 800f7b2:	4604      	mov	r4, r0
 800f7b4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800f7b6:	4b17      	ldr	r3, [pc, #92]	; (800f814 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f7b8:	4e17      	ldr	r6, [pc, #92]	; (800f818 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800f7ba:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f7bc:	6830      	ldr	r0, [r6, #0]
 800f7be:	3004      	adds	r0, #4
 800f7c0:	f7fe faba 	bl	800dd38 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f7c4:	6833      	ldr	r3, [r6, #0]
 800f7c6:	19e4      	adds	r4, r4, r7
 800f7c8:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800f7ca:	d310      	bcc.n	800f7ee <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f7cc:	4b13      	ldr	r3, [pc, #76]	; (800f81c <vTaskDelay+0xa0>)
 800f7ce:	6818      	ldr	r0, [r3, #0]
 800f7d0:	6831      	ldr	r1, [r6, #0]
 800f7d2:	3104      	adds	r1, #4
 800f7d4:	f7fe fa98 	bl	800dd08 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800f7d8:	682b      	ldr	r3, [r5, #0]
 800f7da:	b9a3      	cbnz	r3, 800f806 <vTaskDelay+0x8a>
 800f7dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7e0:	f383 8811 	msr	BASEPRI, r3
 800f7e4:	f3bf 8f6f 	isb	sy
 800f7e8:	f3bf 8f4f 	dsb	sy
 800f7ec:	e7fe      	b.n	800f7ec <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f7ee:	4b0c      	ldr	r3, [pc, #48]	; (800f820 <vTaskDelay+0xa4>)
 800f7f0:	6818      	ldr	r0, [r3, #0]
 800f7f2:	6831      	ldr	r1, [r6, #0]
 800f7f4:	3104      	adds	r1, #4
 800f7f6:	f7fe fa87 	bl	800dd08 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800f7fa:	4b0a      	ldr	r3, [pc, #40]	; (800f824 <vTaskDelay+0xa8>)
 800f7fc:	681a      	ldr	r2, [r3, #0]
 800f7fe:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800f800:	bf38      	it	cc
 800f802:	601c      	strcc	r4, [r3, #0]
 800f804:	e7e8      	b.n	800f7d8 <vTaskDelay+0x5c>
 800f806:	f7ff feb3 	bl	800f570 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800f80a:	2800      	cmp	r0, #0
 800f80c:	d0b8      	beq.n	800f780 <vTaskDelay+0x4>
	}
 800f80e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f810:	20012bf4 	.word	0x20012bf4
 800f814:	20012c74 	.word	0x20012c74
 800f818:	20012780 	.word	0x20012780
 800f81c:	20012788 	.word	0x20012788
 800f820:	20012784 	.word	0x20012784
 800f824:	20012c28 	.word	0x20012c28

0800f828 <vTaskStartScheduler>:
{
 800f828:	b530      	push	{r4, r5, lr}
 800f82a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f82c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800f82e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f830:	a906      	add	r1, sp, #24
 800f832:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800f834:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f838:	f7fe f908 	bl	800da4c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800f83c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800f840:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800f842:	b1bb      	cbz	r3, 800f874 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800f844:	b16d      	cbz	r5, 800f862 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f846:	21ac      	movs	r1, #172	; 0xac
 800f848:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800f84a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f84c:	29ac      	cmp	r1, #172	; 0xac
 800f84e:	d01a      	beq.n	800f886 <vTaskStartScheduler+0x5e>
 800f850:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f854:	f383 8811 	msr	BASEPRI, r3
 800f858:	f3bf 8f6f 	isb	sy
 800f85c:	f3bf 8f4f 	dsb	sy
 800f860:	e7fe      	b.n	800f860 <vTaskStartScheduler+0x38>
 800f862:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f866:	f383 8811 	msr	BASEPRI, r3
 800f86a:	f3bf 8f6f 	isb	sy
 800f86e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f872:	e7fe      	b.n	800f872 <vTaskStartScheduler+0x4a>
 800f874:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f878:	f383 8811 	msr	BASEPRI, r3
 800f87c:	f3bf 8f6f 	isb	sy
 800f880:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f884:	e7fe      	b.n	800f884 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f886:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f888:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f88a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f88c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f890:	4623      	mov	r3, r4
 800f892:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800f896:	491b      	ldr	r1, [pc, #108]	; (800f904 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f898:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f89a:	9400      	str	r4, [sp, #0]
 800f89c:	481a      	ldr	r0, [pc, #104]	; (800f908 <vTaskStartScheduler+0xe0>)
 800f89e:	f7ff fcdd 	bl	800f25c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f8a2:	4628      	mov	r0, r5
 800f8a4:	f7ff fc52 	bl	800f14c <prvAddNewTaskToReadyList>
		return xReturn;
 800f8a8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800f8aa:	b1eb      	cbz	r3, 800f8e8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800f8ac:	f000 fc6e 	bl	801018c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800f8b0:	2801      	cmp	r0, #1
 800f8b2:	d11b      	bne.n	800f8ec <vTaskStartScheduler+0xc4>
 800f8b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8b8:	f383 8811 	msr	BASEPRI, r3
 800f8bc:	f3bf 8f6f 	isb	sy
 800f8c0:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f8c4:	4b11      	ldr	r3, [pc, #68]	; (800f90c <vTaskStartScheduler+0xe4>)
 800f8c6:	4a12      	ldr	r2, [pc, #72]	; (800f910 <vTaskStartScheduler+0xe8>)
 800f8c8:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800f8ca:	4912      	ldr	r1, [pc, #72]	; (800f914 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f8cc:	3358      	adds	r3, #88	; 0x58
 800f8ce:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800f8d0:	4a11      	ldr	r2, [pc, #68]	; (800f918 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f8d2:	4b12      	ldr	r3, [pc, #72]	; (800f91c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800f8d4:	f04f 35ff 	mov.w	r5, #4294967295
 800f8d8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800f8da:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f8dc:	601c      	str	r4, [r3, #0]
}
 800f8de:	b00b      	add	sp, #44	; 0x2c
 800f8e0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800f8e4:	f7fe bb38 	b.w	800df58 <xPortStartScheduler>
}
 800f8e8:	b00b      	add	sp, #44	; 0x2c
 800f8ea:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800f8ec:	3001      	adds	r0, #1
 800f8ee:	d1fb      	bne.n	800f8e8 <vTaskStartScheduler+0xc0>
 800f8f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8f4:	f383 8811 	msr	BASEPRI, r3
 800f8f8:	f3bf 8f6f 	isb	sy
 800f8fc:	f3bf 8f4f 	dsb	sy
 800f900:	e7fe      	b.n	800f900 <vTaskStartScheduler+0xd8>
 800f902:	bf00      	nop
 800f904:	0802eadc 	.word	0x0802eadc
 800f908:	0800f389 	.word	0x0800f389
 800f90c:	20012780 	.word	0x20012780
 800f910:	20000160 	.word	0x20000160
 800f914:	20012c28 	.word	0x20012c28
 800f918:	20012c48 	.word	0x20012c48
 800f91c:	20012c74 	.word	0x20012c74

0800f920 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800f920:	4a02      	ldr	r2, [pc, #8]	; (800f92c <vTaskSuspendAll+0xc>)
 800f922:	6813      	ldr	r3, [r2, #0]
 800f924:	3301      	adds	r3, #1
 800f926:	6013      	str	r3, [r2, #0]
}
 800f928:	4770      	bx	lr
 800f92a:	bf00      	nop
 800f92c:	20012bf4 	.word	0x20012bf4

0800f930 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800f930:	4b06      	ldr	r3, [pc, #24]	; (800f94c <xTaskResumeAll+0x1c>)
 800f932:	681b      	ldr	r3, [r3, #0]
 800f934:	b943      	cbnz	r3, 800f948 <xTaskResumeAll+0x18>
 800f936:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f93a:	f383 8811 	msr	BASEPRI, r3
 800f93e:	f3bf 8f6f 	isb	sy
 800f942:	f3bf 8f4f 	dsb	sy
 800f946:	e7fe      	b.n	800f946 <xTaskResumeAll+0x16>
 800f948:	f7ff be12 	b.w	800f570 <xTaskResumeAll.part.0>
 800f94c:	20012bf4 	.word	0x20012bf4

0800f950 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800f950:	4b01      	ldr	r3, [pc, #4]	; (800f958 <xTaskGetTickCount+0x8>)
 800f952:	6818      	ldr	r0, [r3, #0]
}
 800f954:	4770      	bx	lr
 800f956:	bf00      	nop
 800f958:	20012c74 	.word	0x20012c74

0800f95c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f95c:	4b05      	ldr	r3, [pc, #20]	; (800f974 <xTaskIncrementTick+0x18>)
 800f95e:	681b      	ldr	r3, [r3, #0]
 800f960:	b90b      	cbnz	r3, 800f966 <xTaskIncrementTick+0xa>
 800f962:	f7ff bd61 	b.w	800f428 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800f966:	4a04      	ldr	r2, [pc, #16]	; (800f978 <xTaskIncrementTick+0x1c>)
 800f968:	6813      	ldr	r3, [r2, #0]
 800f96a:	3301      	adds	r3, #1
}
 800f96c:	2000      	movs	r0, #0
		++xPendedTicks;
 800f96e:	6013      	str	r3, [r2, #0]
}
 800f970:	4770      	bx	lr
 800f972:	bf00      	nop
 800f974:	20012bf4 	.word	0x20012bf4
 800f978:	20012c30 	.word	0x20012c30

0800f97c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800f97c:	4b1f      	ldr	r3, [pc, #124]	; (800f9fc <vTaskSwitchContext+0x80>)
 800f97e:	681b      	ldr	r3, [r3, #0]
 800f980:	b11b      	cbz	r3, 800f98a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800f982:	4b1f      	ldr	r3, [pc, #124]	; (800fa00 <vTaskSwitchContext+0x84>)
 800f984:	2201      	movs	r2, #1
 800f986:	601a      	str	r2, [r3, #0]
 800f988:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800f98a:	4a1d      	ldr	r2, [pc, #116]	; (800fa00 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f98c:	491d      	ldr	r1, [pc, #116]	; (800fa04 <vTaskSwitchContext+0x88>)
{
 800f98e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f990:	4c1d      	ldr	r4, [pc, #116]	; (800fa08 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800f992:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f994:	6823      	ldr	r3, [r4, #0]
 800f996:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f99a:	0092      	lsls	r2, r2, #2
 800f99c:	0098      	lsls	r0, r3, #2
 800f99e:	588a      	ldr	r2, [r1, r2]
 800f9a0:	b942      	cbnz	r2, 800f9b4 <vTaskSwitchContext+0x38>
 800f9a2:	b313      	cbz	r3, 800f9ea <vTaskSwitchContext+0x6e>
 800f9a4:	3b01      	subs	r3, #1
 800f9a6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f9aa:	0098      	lsls	r0, r3, #2
 800f9ac:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800f9b0:	2a00      	cmp	r2, #0
 800f9b2:	d0f6      	beq.n	800f9a2 <vTaskSwitchContext+0x26>
 800f9b4:	4418      	add	r0, r3
 800f9b6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800f9ba:	4662      	mov	r2, ip
 800f9bc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800f9c0:	6849      	ldr	r1, [r1, #4]
 800f9c2:	f8cc 1004 	str.w	r1, [ip, #4]
 800f9c6:	3208      	adds	r2, #8
 800f9c8:	4291      	cmp	r1, r2
 800f9ca:	bf08      	it	eq
 800f9cc:	6849      	ldreq	r1, [r1, #4]
 800f9ce:	4a0f      	ldr	r2, [pc, #60]	; (800fa0c <vTaskSwitchContext+0x90>)
 800f9d0:	bf08      	it	eq
 800f9d2:	f8cc 1004 	streq.w	r1, [ip, #4]
 800f9d6:	68c9      	ldr	r1, [r1, #12]
 800f9d8:	6011      	str	r1, [r2, #0]
 800f9da:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f9dc:	6813      	ldr	r3, [r2, #0]
 800f9de:	4a0c      	ldr	r2, [pc, #48]	; (800fa10 <vTaskSwitchContext+0x94>)
}
 800f9e0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f9e4:	3358      	adds	r3, #88	; 0x58
 800f9e6:	6013      	str	r3, [r2, #0]
}
 800f9e8:	4770      	bx	lr
 800f9ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9ee:	f383 8811 	msr	BASEPRI, r3
 800f9f2:	f3bf 8f6f 	isb	sy
 800f9f6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f9fa:	e7fe      	b.n	800f9fa <vTaskSwitchContext+0x7e>
 800f9fc:	20012bf4 	.word	0x20012bf4
 800fa00:	20012c78 	.word	0x20012c78
 800fa04:	2001278c 	.word	0x2001278c
 800fa08:	20012bfc 	.word	0x20012bfc
 800fa0c:	20012780 	.word	0x20012780
 800fa10:	20000160 	.word	0x20000160

0800fa14 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800fa14:	b1d0      	cbz	r0, 800fa4c <vTaskPlaceOnEventList+0x38>
{
 800fa16:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fa18:	4d1a      	ldr	r5, [pc, #104]	; (800fa84 <vTaskPlaceOnEventList+0x70>)
 800fa1a:	460c      	mov	r4, r1
 800fa1c:	6829      	ldr	r1, [r5, #0]
 800fa1e:	3118      	adds	r1, #24
 800fa20:	f7fe f972 	bl	800dd08 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800fa24:	4b18      	ldr	r3, [pc, #96]	; (800fa88 <vTaskPlaceOnEventList+0x74>)
 800fa26:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fa28:	6828      	ldr	r0, [r5, #0]
 800fa2a:	3004      	adds	r0, #4
 800fa2c:	f7fe f984 	bl	800dd38 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800fa30:	1c63      	adds	r3, r4, #1
 800fa32:	d014      	beq.n	800fa5e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fa34:	682b      	ldr	r3, [r5, #0]
 800fa36:	19a4      	adds	r4, r4, r6
 800fa38:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800fa3a:	d317      	bcc.n	800fa6c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa3c:	4b13      	ldr	r3, [pc, #76]	; (800fa8c <vTaskPlaceOnEventList+0x78>)
 800fa3e:	6818      	ldr	r0, [r3, #0]
 800fa40:	6829      	ldr	r1, [r5, #0]
}
 800fa42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa46:	3104      	adds	r1, #4
 800fa48:	f7fe b95e 	b.w	800dd08 <vListInsert>
 800fa4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa50:	f383 8811 	msr	BASEPRI, r3
 800fa54:	f3bf 8f6f 	isb	sy
 800fa58:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800fa5c:	e7fe      	b.n	800fa5c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa5e:	6829      	ldr	r1, [r5, #0]
 800fa60:	480b      	ldr	r0, [pc, #44]	; (800fa90 <vTaskPlaceOnEventList+0x7c>)
}
 800fa62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa66:	3104      	adds	r1, #4
 800fa68:	f7fe b93e 	b.w	800dce8 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa6c:	4b09      	ldr	r3, [pc, #36]	; (800fa94 <vTaskPlaceOnEventList+0x80>)
 800fa6e:	6818      	ldr	r0, [r3, #0]
 800fa70:	6829      	ldr	r1, [r5, #0]
 800fa72:	3104      	adds	r1, #4
 800fa74:	f7fe f948 	bl	800dd08 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800fa78:	4b07      	ldr	r3, [pc, #28]	; (800fa98 <vTaskPlaceOnEventList+0x84>)
 800fa7a:	681a      	ldr	r2, [r3, #0]
 800fa7c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800fa7e:	bf38      	it	cc
 800fa80:	601c      	strcc	r4, [r3, #0]
}
 800fa82:	bd70      	pop	{r4, r5, r6, pc}
 800fa84:	20012780 	.word	0x20012780
 800fa88:	20012c74 	.word	0x20012c74
 800fa8c:	20012788 	.word	0x20012788
 800fa90:	20012c4c 	.word	0x20012c4c
 800fa94:	20012784 	.word	0x20012784
 800fa98:	20012c28 	.word	0x20012c28

0800fa9c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800fa9c:	b330      	cbz	r0, 800faec <vTaskPlaceOnEventListRestricted+0x50>
	{
 800fa9e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800faa0:	4e1d      	ldr	r6, [pc, #116]	; (800fb18 <vTaskPlaceOnEventListRestricted+0x7c>)
 800faa2:	460c      	mov	r4, r1
 800faa4:	6831      	ldr	r1, [r6, #0]
 800faa6:	4615      	mov	r5, r2
 800faa8:	3118      	adds	r1, #24
 800faaa:	f7fe f91d 	bl	800dce8 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800faae:	4b1b      	ldr	r3, [pc, #108]	; (800fb1c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800fab0:	b985      	cbnz	r5, 800fad4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800fab2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fab4:	6830      	ldr	r0, [r6, #0]
 800fab6:	3004      	adds	r0, #4
 800fab8:	f7fe f93e 	bl	800dd38 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fabc:	6833      	ldr	r3, [r6, #0]
 800fabe:	1964      	adds	r4, r4, r5
 800fac0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800fac2:	d31c      	bcc.n	800fafe <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fac4:	4b16      	ldr	r3, [pc, #88]	; (800fb20 <vTaskPlaceOnEventListRestricted+0x84>)
 800fac6:	6818      	ldr	r0, [r3, #0]
 800fac8:	6831      	ldr	r1, [r6, #0]
	}
 800faca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800face:	3104      	adds	r1, #4
 800fad0:	f7fe b91a 	b.w	800dd08 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800fad4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fad6:	6830      	ldr	r0, [r6, #0]
 800fad8:	3004      	adds	r0, #4
 800fada:	f7fe f92d 	bl	800dd38 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fade:	6831      	ldr	r1, [r6, #0]
 800fae0:	4810      	ldr	r0, [pc, #64]	; (800fb24 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800fae2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fae6:	3104      	adds	r1, #4
 800fae8:	f7fe b8fe 	b.w	800dce8 <vListInsertEnd>
 800faec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800faf0:	f383 8811 	msr	BASEPRI, r3
 800faf4:	f3bf 8f6f 	isb	sy
 800faf8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800fafc:	e7fe      	b.n	800fafc <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fafe:	4b0a      	ldr	r3, [pc, #40]	; (800fb28 <vTaskPlaceOnEventListRestricted+0x8c>)
 800fb00:	6818      	ldr	r0, [r3, #0]
 800fb02:	6831      	ldr	r1, [r6, #0]
 800fb04:	3104      	adds	r1, #4
 800fb06:	f7fe f8ff 	bl	800dd08 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800fb0a:	4b08      	ldr	r3, [pc, #32]	; (800fb2c <vTaskPlaceOnEventListRestricted+0x90>)
 800fb0c:	681a      	ldr	r2, [r3, #0]
 800fb0e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800fb10:	bf38      	it	cc
 800fb12:	601c      	strcc	r4, [r3, #0]
	}
 800fb14:	bd70      	pop	{r4, r5, r6, pc}
 800fb16:	bf00      	nop
 800fb18:	20012780 	.word	0x20012780
 800fb1c:	20012c74 	.word	0x20012c74
 800fb20:	20012788 	.word	0x20012788
 800fb24:	20012c4c 	.word	0x20012c4c
 800fb28:	20012784 	.word	0x20012784
 800fb2c:	20012c28 	.word	0x20012c28

0800fb30 <xTaskRemoveFromEventList>:
{
 800fb30:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fb32:	68c3      	ldr	r3, [r0, #12]
 800fb34:	68dc      	ldr	r4, [r3, #12]
{
 800fb36:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800fb38:	2c00      	cmp	r4, #0
 800fb3a:	d02b      	beq.n	800fb94 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800fb3c:	f104 0518 	add.w	r5, r4, #24
 800fb40:	4628      	mov	r0, r5
 800fb42:	f7fe f8f9 	bl	800dd38 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fb46:	4b18      	ldr	r3, [pc, #96]	; (800fba8 <xTaskRemoveFromEventList+0x78>)
 800fb48:	681b      	ldr	r3, [r3, #0]
 800fb4a:	b17b      	cbz	r3, 800fb6c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800fb4c:	4817      	ldr	r0, [pc, #92]	; (800fbac <xTaskRemoveFromEventList+0x7c>)
 800fb4e:	4629      	mov	r1, r5
 800fb50:	f7fe f8ca 	bl	800dce8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800fb54:	4b16      	ldr	r3, [pc, #88]	; (800fbb0 <xTaskRemoveFromEventList+0x80>)
 800fb56:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fb58:	681b      	ldr	r3, [r3, #0]
 800fb5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fb5c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800fb5e:	bf85      	ittet	hi
 800fb60:	4b14      	ldrhi	r3, [pc, #80]	; (800fbb4 <xTaskRemoveFromEventList+0x84>)
 800fb62:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800fb64:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800fb66:	6018      	strhi	r0, [r3, #0]
}
 800fb68:	b003      	add	sp, #12
 800fb6a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800fb6c:	1d21      	adds	r1, r4, #4
 800fb6e:	4608      	mov	r0, r1
 800fb70:	9101      	str	r1, [sp, #4]
 800fb72:	f7fe f8e1 	bl	800dd38 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800fb76:	4a10      	ldr	r2, [pc, #64]	; (800fbb8 <xTaskRemoveFromEventList+0x88>)
 800fb78:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fb7a:	6810      	ldr	r0, [r2, #0]
 800fb7c:	9901      	ldr	r1, [sp, #4]
 800fb7e:	4283      	cmp	r3, r0
 800fb80:	480e      	ldr	r0, [pc, #56]	; (800fbbc <xTaskRemoveFromEventList+0x8c>)
 800fb82:	bf88      	it	hi
 800fb84:	6013      	strhi	r3, [r2, #0]
 800fb86:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fb8a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800fb8e:	f7fe f8ab 	bl	800dce8 <vListInsertEnd>
 800fb92:	e7df      	b.n	800fb54 <xTaskRemoveFromEventList+0x24>
 800fb94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb98:	f383 8811 	msr	BASEPRI, r3
 800fb9c:	f3bf 8f6f 	isb	sy
 800fba0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800fba4:	e7fe      	b.n	800fba4 <xTaskRemoveFromEventList+0x74>
 800fba6:	bf00      	nop
 800fba8:	20012bf4 	.word	0x20012bf4
 800fbac:	20012c34 	.word	0x20012c34
 800fbb0:	20012780 	.word	0x20012780
 800fbb4:	20012c78 	.word	0x20012c78
 800fbb8:	20012bfc 	.word	0x20012bfc
 800fbbc:	2001278c 	.word	0x2001278c

0800fbc0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fbc0:	4a03      	ldr	r2, [pc, #12]	; (800fbd0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fbc2:	4b04      	ldr	r3, [pc, #16]	; (800fbd4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fbc4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fbc6:	681b      	ldr	r3, [r3, #0]
 800fbc8:	e9c0 2300 	strd	r2, r3, [r0]
}
 800fbcc:	4770      	bx	lr
 800fbce:	bf00      	nop
 800fbd0:	20012c2c 	.word	0x20012c2c
 800fbd4:	20012c74 	.word	0x20012c74

0800fbd8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800fbd8:	b328      	cbz	r0, 800fc26 <xTaskCheckForTimeOut+0x4e>
{
 800fbda:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fbdc:	460d      	mov	r5, r1
 800fbde:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800fbe0:	b1c1      	cbz	r1, 800fc14 <xTaskCheckForTimeOut+0x3c>
 800fbe2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800fbe4:	f7fe f926 	bl	800de34 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800fbe8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800fbea:	4a1d      	ldr	r2, [pc, #116]	; (800fc60 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800fbec:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800fbee:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800fbf0:	d030      	beq.n	800fc54 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800fbf2:	f8df c070 	ldr.w	ip, [pc, #112]	; 800fc64 <xTaskCheckForTimeOut+0x8c>
 800fbf6:	e9d4 6000 	ldrd	r6, r0, [r4]
 800fbfa:	f8dc 7000 	ldr.w	r7, [ip]
 800fbfe:	42be      	cmp	r6, r7
 800fc00:	d01a      	beq.n	800fc38 <xTaskCheckForTimeOut+0x60>
 800fc02:	4288      	cmp	r0, r1
 800fc04:	d818      	bhi.n	800fc38 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800fc06:	2001      	movs	r0, #1
 800fc08:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800fc0a:	f7fe f935 	bl	800de78 <vPortExitCritical>
}
 800fc0e:	9801      	ldr	r0, [sp, #4]
 800fc10:	b003      	add	sp, #12
 800fc12:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fc14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc18:	f383 8811 	msr	BASEPRI, r3
 800fc1c:	f3bf 8f6f 	isb	sy
 800fc20:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800fc24:	e7fe      	b.n	800fc24 <xTaskCheckForTimeOut+0x4c>
 800fc26:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc2a:	f383 8811 	msr	BASEPRI, r3
 800fc2e:	f3bf 8f6f 	isb	sy
 800fc32:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800fc36:	e7fe      	b.n	800fc36 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800fc38:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800fc3c:	4573      	cmp	r3, lr
 800fc3e:	d90b      	bls.n	800fc58 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800fc40:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fc42:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fc46:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800fc48:	4403      	add	r3, r0
 800fc4a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800fc4c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fc4e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800fc52:	e7d9      	b.n	800fc08 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800fc54:	2000      	movs	r0, #0
 800fc56:	e7d7      	b.n	800fc08 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800fc58:	2300      	movs	r3, #0
 800fc5a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800fc5c:	2001      	movs	r0, #1
 800fc5e:	e7d3      	b.n	800fc08 <xTaskCheckForTimeOut+0x30>
 800fc60:	20012c74 	.word	0x20012c74
 800fc64:	20012c2c 	.word	0x20012c2c

0800fc68 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800fc68:	4b01      	ldr	r3, [pc, #4]	; (800fc70 <vTaskMissedYield+0x8>)
 800fc6a:	2201      	movs	r2, #1
 800fc6c:	601a      	str	r2, [r3, #0]
}
 800fc6e:	4770      	bx	lr
 800fc70:	20012c78 	.word	0x20012c78

0800fc74 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800fc74:	4b05      	ldr	r3, [pc, #20]	; (800fc8c <xTaskGetSchedulerState+0x18>)
 800fc76:	681b      	ldr	r3, [r3, #0]
 800fc78:	b133      	cbz	r3, 800fc88 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fc7a:	4b05      	ldr	r3, [pc, #20]	; (800fc90 <xTaskGetSchedulerState+0x1c>)
 800fc7c:	6818      	ldr	r0, [r3, #0]
 800fc7e:	fab0 f080 	clz	r0, r0
 800fc82:	0940      	lsrs	r0, r0, #5
 800fc84:	0040      	lsls	r0, r0, #1
 800fc86:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800fc88:	2001      	movs	r0, #1
	}
 800fc8a:	4770      	bx	lr
 800fc8c:	20012c48 	.word	0x20012c48
 800fc90:	20012bf4 	.word	0x20012bf4

0800fc94 <xTaskPriorityInherit>:
	{
 800fc94:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800fc96:	4604      	mov	r4, r0
	{
 800fc98:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800fc9a:	b1c8      	cbz	r0, 800fcd0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800fc9c:	4d1d      	ldr	r5, [pc, #116]	; (800fd14 <xTaskPriorityInherit+0x80>)
 800fc9e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800fca0:	682a      	ldr	r2, [r5, #0]
 800fca2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fca4:	4293      	cmp	r3, r2
 800fca6:	d215      	bcs.n	800fcd4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fca8:	6982      	ldr	r2, [r0, #24]
 800fcaa:	2a00      	cmp	r2, #0
 800fcac:	db04      	blt.n	800fcb8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fcae:	682a      	ldr	r2, [r5, #0]
 800fcb0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fcb2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800fcb6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800fcb8:	4e17      	ldr	r6, [pc, #92]	; (800fd18 <xTaskPriorityInherit+0x84>)
 800fcba:	6962      	ldr	r2, [r4, #20]
 800fcbc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fcc0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800fcc4:	429a      	cmp	r2, r3
 800fcc6:	d00e      	beq.n	800fce6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fcc8:	682b      	ldr	r3, [r5, #0]
 800fcca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fccc:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800fcce:	2001      	movs	r0, #1
	}
 800fcd0:	b002      	add	sp, #8
 800fcd2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800fcd4:	682b      	ldr	r3, [r5, #0]
 800fcd6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fcd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fcda:	4298      	cmp	r0, r3
 800fcdc:	bf2c      	ite	cs
 800fcde:	2000      	movcs	r0, #0
 800fce0:	2001      	movcc	r0, #1
	}
 800fce2:	b002      	add	sp, #8
 800fce4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fce6:	1d21      	adds	r1, r4, #4
 800fce8:	4608      	mov	r0, r1
 800fcea:	9101      	str	r1, [sp, #4]
 800fcec:	f7fe f824 	bl	800dd38 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fcf0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fcf2:	4b0a      	ldr	r3, [pc, #40]	; (800fd1c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fcf4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fcf6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fcf8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fcfa:	4290      	cmp	r0, r2
 800fcfc:	bf88      	it	hi
 800fcfe:	6018      	strhi	r0, [r3, #0]
 800fd00:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fd04:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800fd08:	9901      	ldr	r1, [sp, #4]
 800fd0a:	f7fd ffed 	bl	800dce8 <vListInsertEnd>
				xReturn = pdTRUE;
 800fd0e:	2001      	movs	r0, #1
 800fd10:	e7de      	b.n	800fcd0 <xTaskPriorityInherit+0x3c>
 800fd12:	bf00      	nop
 800fd14:	20012780 	.word	0x20012780
 800fd18:	2001278c 	.word	0x2001278c
 800fd1c:	20012bfc 	.word	0x20012bfc

0800fd20 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800fd20:	b318      	cbz	r0, 800fd6a <xTaskPriorityDisinherit+0x4a>
	{
 800fd22:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800fd24:	4b1e      	ldr	r3, [pc, #120]	; (800fda0 <xTaskPriorityDisinherit+0x80>)
 800fd26:	681c      	ldr	r4, [r3, #0]
 800fd28:	4284      	cmp	r4, r0
	{
 800fd2a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800fd2c:	d008      	beq.n	800fd40 <xTaskPriorityDisinherit+0x20>
 800fd2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd32:	f383 8811 	msr	BASEPRI, r3
 800fd36:	f3bf 8f6f 	isb	sy
 800fd3a:	f3bf 8f4f 	dsb	sy
 800fd3e:	e7fe      	b.n	800fd3e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800fd40:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800fd42:	b14b      	cbz	r3, 800fd58 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fd44:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800fd46:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800fd48:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fd4a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800fd4c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fd4e:	d000      	beq.n	800fd52 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800fd50:	b16b      	cbz	r3, 800fd6e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800fd52:	2000      	movs	r0, #0
	}
 800fd54:	b002      	add	sp, #8
 800fd56:	bd10      	pop	{r4, pc}
 800fd58:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd5c:	f383 8811 	msr	BASEPRI, r3
 800fd60:	f3bf 8f6f 	isb	sy
 800fd64:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fd68:	e7fe      	b.n	800fd68 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800fd6a:	2000      	movs	r0, #0
	}
 800fd6c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fd6e:	1d21      	adds	r1, r4, #4
 800fd70:	4608      	mov	r0, r1
 800fd72:	9101      	str	r1, [sp, #4]
 800fd74:	f7fd ffe0 	bl	800dd38 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fd78:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800fd7a:	4a0a      	ldr	r2, [pc, #40]	; (800fda4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fd7c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fd7e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800fd82:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800fd84:	6810      	ldr	r0, [r2, #0]
 800fd86:	9901      	ldr	r1, [sp, #4]
 800fd88:	4283      	cmp	r3, r0
 800fd8a:	4807      	ldr	r0, [pc, #28]	; (800fda8 <xTaskPriorityDisinherit+0x88>)
 800fd8c:	bf88      	it	hi
 800fd8e:	6013      	strhi	r3, [r2, #0]
 800fd90:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fd94:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800fd98:	f7fd ffa6 	bl	800dce8 <vListInsertEnd>
					xReturn = pdTRUE;
 800fd9c:	2001      	movs	r0, #1
		return xReturn;
 800fd9e:	e7d9      	b.n	800fd54 <xTaskPriorityDisinherit+0x34>
 800fda0:	20012780 	.word	0x20012780
 800fda4:	20012bfc 	.word	0x20012bfc
 800fda8:	2001278c 	.word	0x2001278c

0800fdac <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800fdac:	2800      	cmp	r0, #0
 800fdae:	d041      	beq.n	800fe34 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800fdb0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800fdb2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800fdb4:	b083      	sub	sp, #12
 800fdb6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800fdb8:	b153      	cbz	r3, 800fdd0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800fdba:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800fdbc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fdbe:	4281      	cmp	r1, r0
 800fdc0:	bf38      	it	cc
 800fdc2:	4601      	movcc	r1, r0
 800fdc4:	428a      	cmp	r2, r1
 800fdc6:	d001      	beq.n	800fdcc <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800fdc8:	2b01      	cmp	r3, #1
 800fdca:	d00a      	beq.n	800fde2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800fdcc:	b003      	add	sp, #12
 800fdce:	bd30      	pop	{r4, r5, pc}
 800fdd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdd4:	f383 8811 	msr	BASEPRI, r3
 800fdd8:	f3bf 8f6f 	isb	sy
 800fddc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fde0:	e7fe      	b.n	800fde0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800fde2:	4b19      	ldr	r3, [pc, #100]	; (800fe48 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800fde4:	681b      	ldr	r3, [r3, #0]
 800fde6:	42a3      	cmp	r3, r4
 800fde8:	d025      	beq.n	800fe36 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fdea:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800fdec:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fdee:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fdf0:	bfa8      	it	ge
 800fdf2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fdf6:	4d15      	ldr	r5, [pc, #84]	; (800fe4c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fdf8:	bfa8      	it	ge
 800fdfa:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fdfc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800fe00:	6961      	ldr	r1, [r4, #20]
 800fe02:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800fe06:	4299      	cmp	r1, r3
 800fe08:	d1e0      	bne.n	800fdcc <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fe0a:	1d21      	adds	r1, r4, #4
 800fe0c:	4608      	mov	r0, r1
 800fe0e:	9101      	str	r1, [sp, #4]
 800fe10:	f7fd ff92 	bl	800dd38 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800fe14:	4b0e      	ldr	r3, [pc, #56]	; (800fe50 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800fe16:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800fe18:	681a      	ldr	r2, [r3, #0]
 800fe1a:	9901      	ldr	r1, [sp, #4]
 800fe1c:	4290      	cmp	r0, r2
 800fe1e:	bf88      	it	hi
 800fe20:	6018      	strhi	r0, [r3, #0]
 800fe22:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fe26:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800fe2a:	b003      	add	sp, #12
 800fe2c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800fe30:	f7fd bf5a 	b.w	800dce8 <vListInsertEnd>
 800fe34:	4770      	bx	lr
 800fe36:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe3a:	f383 8811 	msr	BASEPRI, r3
 800fe3e:	f3bf 8f6f 	isb	sy
 800fe42:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800fe46:	e7fe      	b.n	800fe46 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800fe48:	20012780 	.word	0x20012780
 800fe4c:	2001278c 	.word	0x2001278c
 800fe50:	20012bfc 	.word	0x20012bfc

0800fe54 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800fe54:	4b04      	ldr	r3, [pc, #16]	; (800fe68 <pvTaskIncrementMutexHeldCount+0x14>)
 800fe56:	681a      	ldr	r2, [r3, #0]
 800fe58:	b11a      	cbz	r2, 800fe62 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800fe5a:	6819      	ldr	r1, [r3, #0]
 800fe5c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800fe5e:	3201      	adds	r2, #1
 800fe60:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800fe62:	6818      	ldr	r0, [r3, #0]
	}
 800fe64:	4770      	bx	lr
 800fe66:	bf00      	nop
 800fe68:	20012780 	.word	0x20012780

0800fe6c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800fe6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fe70:	4e22      	ldr	r6, [pc, #136]	; (800fefc <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800fe72:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800ff04 <prvSwitchTimerLists+0x98>
{
 800fe76:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800fe78:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800fe7c:	e00d      	b.n	800fe9a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fe7e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fe80:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fe82:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800fe84:	1d25      	adds	r5, r4, #4
 800fe86:	4628      	mov	r0, r5
 800fe88:	f7fd ff56 	bl	800dd38 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800fe8c:	6a23      	ldr	r3, [r4, #32]
 800fe8e:	4620      	mov	r0, r4
 800fe90:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800fe92:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800fe96:	075b      	lsls	r3, r3, #29
 800fe98:	d40a      	bmi.n	800feb0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800fe9a:	6833      	ldr	r3, [r6, #0]
 800fe9c:	681a      	ldr	r2, [r3, #0]
 800fe9e:	2a00      	cmp	r2, #0
 800fea0:	d1ed      	bne.n	800fe7e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800fea2:	4a17      	ldr	r2, [pc, #92]	; (800ff00 <prvSwitchTimerLists+0x94>)
 800fea4:	6811      	ldr	r1, [r2, #0]
 800fea6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800fea8:	6013      	str	r3, [r2, #0]
}
 800feaa:	b005      	add	sp, #20
 800feac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800feb0:	69a3      	ldr	r3, [r4, #24]
 800feb2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800feb4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800feb6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800feb8:	d205      	bcs.n	800fec6 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800feba:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800febc:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800febe:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fec0:	f7fd ff22 	bl	800dd08 <vListInsert>
 800fec4:	e7e9      	b.n	800fe9a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800fec6:	f8d9 3000 	ldr.w	r3, [r9]
 800feca:	b16b      	cbz	r3, 800fee8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800fecc:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800fed0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fed2:	f7ff fecf 	bl	800fc74 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800fed6:	2300      	movs	r3, #0
 800fed8:	f8d9 0000 	ldr.w	r0, [r9]
 800fedc:	461a      	mov	r2, r3
 800fede:	4669      	mov	r1, sp
 800fee0:	f7fe fa9c 	bl	800e41c <xQueueGenericSend>
				configASSERT( xResult );
 800fee4:	2800      	cmp	r0, #0
 800fee6:	d1d8      	bne.n	800fe9a <prvSwitchTimerLists+0x2e>
 800fee8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800feec:	f383 8811 	msr	BASEPRI, r3
 800fef0:	f3bf 8f6f 	isb	sy
 800fef4:	f3bf 8f4f 	dsb	sy
 800fef8:	e7fe      	b.n	800fef8 <prvSwitchTimerLists+0x8c>
 800fefa:	bf00      	nop
 800fefc:	20012c7c 	.word	0x20012c7c
 800ff00:	20012c80 	.word	0x20012c80
 800ff04:	20012da0 	.word	0x20012da0

0800ff08 <prvTimerTask>:
{
 800ff08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff0c:	4e9b      	ldr	r6, [pc, #620]	; (801017c <prvTimerTask+0x274>)
 800ff0e:	4d9c      	ldr	r5, [pc, #624]	; (8010180 <prvTimerTask+0x278>)
 800ff10:	4c9c      	ldr	r4, [pc, #624]	; (8010184 <prvTimerTask+0x27c>)
 800ff12:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800ff14:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800ff18:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ff1c:	6833      	ldr	r3, [r6, #0]
 800ff1e:	681f      	ldr	r7, [r3, #0]
 800ff20:	2f00      	cmp	r7, #0
 800ff22:	f000 80a8 	beq.w	8010076 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ff26:	68db      	ldr	r3, [r3, #12]
 800ff28:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800ff2a:	f7ff fcf9 	bl	800f920 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800ff2e:	f7ff fd0f 	bl	800f950 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ff32:	682a      	ldr	r2, [r5, #0]
 800ff34:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800ff36:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800ff38:	f0c0 80ae 	bcc.w	8010098 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ff3c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800ff3e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ff40:	f240 80b4 	bls.w	80100ac <prvTimerTask+0x1a4>
 800ff44:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ff46:	6820      	ldr	r0, [r4, #0]
 800ff48:	eba7 010a 	sub.w	r1, r7, sl
 800ff4c:	f7ff f89a 	bl	800f084 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800ff50:	f7ff fcee 	bl	800f930 <xTaskResumeAll>
 800ff54:	b928      	cbnz	r0, 800ff62 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800ff56:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800ff5a:	f3bf 8f4f 	dsb	sy
 800ff5e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ff62:	6820      	ldr	r0, [r4, #0]
 800ff64:	2200      	movs	r2, #0
 800ff66:	a902      	add	r1, sp, #8
 800ff68:	f7fe fc94 	bl	800e894 <xQueueReceive>
 800ff6c:	2800      	cmp	r0, #0
 800ff6e:	d0d5      	beq.n	800ff1c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ff70:	9b02      	ldr	r3, [sp, #8]
 800ff72:	2b00      	cmp	r3, #0
 800ff74:	db76      	blt.n	8010064 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800ff76:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800ff78:	697b      	ldr	r3, [r7, #20]
 800ff7a:	b113      	cbz	r3, 800ff82 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ff7c:	1d38      	adds	r0, r7, #4
 800ff7e:	f7fd fedb 	bl	800dd38 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800ff82:	f7ff fce5 	bl	800f950 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ff86:	682b      	ldr	r3, [r5, #0]
 800ff88:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800ff8a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800ff8c:	f0c0 808b 	bcc.w	80100a6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800ff90:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800ff92:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800ff96:	2b09      	cmp	r3, #9
 800ff98:	d8e3      	bhi.n	800ff62 <prvTimerTask+0x5a>
 800ff9a:	e8df f003 	tbb	[pc, r3]
 800ff9e:	0505      	.short	0x0505
 800ffa0:	5a3d5305 	.word	0x5a3d5305
 800ffa4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ffa8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ffac:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ffae:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ffb0:	f043 0301 	orr.w	r3, r3, #1
 800ffb4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ffb8:	9b03      	ldr	r3, [sp, #12]
 800ffba:	1899      	adds	r1, r3, r2
 800ffbc:	bf2c      	ite	cs
 800ffbe:	2001      	movcs	r0, #1
 800ffc0:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800ffc2:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800ffc4:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800ffc6:	f200 808c 	bhi.w	80100e2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ffca:	ebaa 0303 	sub.w	r3, sl, r3
 800ffce:	429a      	cmp	r2, r3
 800ffd0:	d832      	bhi.n	8010038 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ffd2:	6a3b      	ldr	r3, [r7, #32]
 800ffd4:	4638      	mov	r0, r7
 800ffd6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ffd8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ffdc:	075b      	lsls	r3, r3, #29
 800ffde:	d5c0      	bpl.n	800ff62 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800ffe0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800ffe2:	9903      	ldr	r1, [sp, #12]
 800ffe4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800ffe6:	b172      	cbz	r2, 8010006 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800ffe8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800ffea:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800ffee:	2300      	movs	r3, #0
 800fff0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fff2:	f7ff fe3f 	bl	800fc74 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800fff6:	2300      	movs	r3, #0
 800fff8:	6820      	ldr	r0, [r4, #0]
 800fffa:	461a      	mov	r2, r3
 800fffc:	a906      	add	r1, sp, #24
 800fffe:	f7fe fa0d 	bl	800e41c <xQueueGenericSend>
							configASSERT( xResult );
 8010002:	2800      	cmp	r0, #0
 8010004:	d1ad      	bne.n	800ff62 <prvTimerTask+0x5a>
 8010006:	f04f 0350 	mov.w	r3, #80	; 0x50
 801000a:	f383 8811 	msr	BASEPRI, r3
 801000e:	f3bf 8f6f 	isb	sy
 8010012:	f3bf 8f4f 	dsb	sy
 8010016:	e7fe      	b.n	8010016 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010018:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801001c:	f043 0301 	orr.w	r3, r3, #1
 8010020:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8010024:	9b03      	ldr	r3, [sp, #12]
 8010026:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010028:	2b00      	cmp	r3, #0
 801002a:	f000 809d 	beq.w	8010168 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 801002e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 8010030:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010032:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8010034:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 8010036:	d85e      	bhi.n	80100f6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8010038:	4b53      	ldr	r3, [pc, #332]	; (8010188 <prvTimerTask+0x280>)
 801003a:	1d39      	adds	r1, r7, #4
 801003c:	6818      	ldr	r0, [r3, #0]
 801003e:	f7fd fe63 	bl	800dd08 <vListInsert>
	return xProcessTimerNow;
 8010042:	e78e      	b.n	800ff62 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8010044:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8010048:	f023 0301 	bic.w	r3, r3, #1
 801004c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 8010050:	e787      	b.n	800ff62 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8010052:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8010056:	079a      	lsls	r2, r3, #30
 8010058:	d552      	bpl.n	8010100 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801005a:	f023 0301 	bic.w	r3, r3, #1
 801005e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8010062:	e77e      	b.n	800ff62 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8010064:	9b03      	ldr	r3, [sp, #12]
 8010066:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801006a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 801006c:	9b02      	ldr	r3, [sp, #8]
 801006e:	2b00      	cmp	r3, #0
 8010070:	f6ff af77 	blt.w	800ff62 <prvTimerTask+0x5a>
 8010074:	e77f      	b.n	800ff76 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 8010076:	f7ff fc53 	bl	800f920 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801007a:	f7ff fc69 	bl	800f950 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801007e:	682a      	ldr	r2, [r5, #0]
 8010080:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 8010082:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8010084:	d808      	bhi.n	8010098 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8010086:	4b40      	ldr	r3, [pc, #256]	; (8010188 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 8010088:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 801008c:	681a      	ldr	r2, [r3, #0]
 801008e:	6812      	ldr	r2, [r2, #0]
 8010090:	fab2 f282 	clz	r2, r2
 8010094:	0952      	lsrs	r2, r2, #5
 8010096:	e756      	b.n	800ff46 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 8010098:	f7ff fee8 	bl	800fe6c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801009c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 80100a0:	f7ff fc46 	bl	800f930 <xTaskResumeAll>
 80100a4:	e75d      	b.n	800ff62 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 80100a6:	f7ff fee1 	bl	800fe6c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 80100aa:	e771      	b.n	800ff90 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 80100ac:	f7ff fc40 	bl	800f930 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80100b0:	6832      	ldr	r2, [r6, #0]
 80100b2:	68d2      	ldr	r2, [r2, #12]
 80100b4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80100b8:	f10b 0104 	add.w	r1, fp, #4
 80100bc:	4608      	mov	r0, r1
 80100be:	9101      	str	r1, [sp, #4]
 80100c0:	f7fd fe3a 	bl	800dd38 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80100c4:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 80100c8:	9901      	ldr	r1, [sp, #4]
 80100ca:	f010 0f04 	tst.w	r0, #4
 80100ce:	d11b      	bne.n	8010108 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80100d0:	f020 0001 	bic.w	r0, r0, #1
 80100d4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80100d8:	f8db 3020 	ldr.w	r3, [fp, #32]
 80100dc:	4658      	mov	r0, fp
 80100de:	4798      	blx	r3
}
 80100e0:	e73f      	b.n	800ff62 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80100e2:	4553      	cmp	r3, sl
 80100e4:	d902      	bls.n	80100ec <prvTimerTask+0x1e4>
 80100e6:	2800      	cmp	r0, #0
 80100e8:	f43f af73 	beq.w	800ffd2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80100ec:	6830      	ldr	r0, [r6, #0]
 80100ee:	1d39      	adds	r1, r7, #4
 80100f0:	f7fd fe0a 	bl	800dd08 <vListInsert>
	return xProcessTimerNow;
 80100f4:	e735      	b.n	800ff62 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80100f6:	6830      	ldr	r0, [r6, #0]
 80100f8:	1d39      	adds	r1, r7, #4
 80100fa:	f7fd fe05 	bl	800dd08 <vListInsert>
 80100fe:	e730      	b.n	800ff62 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 8010100:	4638      	mov	r0, r7
 8010102:	f7fd fd7d 	bl	800dc00 <vPortFree>
 8010106:	e72c      	b.n	800ff62 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8010108:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801010c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8010110:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 8010112:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010114:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 8010118:	d903      	bls.n	8010122 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801011a:	6830      	ldr	r0, [r6, #0]
 801011c:	f7fd fdf4 	bl	800dd08 <vListInsert>
	return xProcessTimerNow;
 8010120:	e7da      	b.n	80100d8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010122:	ebaa 0307 	sub.w	r3, sl, r7
 8010126:	429a      	cmp	r2, r3
 8010128:	d819      	bhi.n	801015e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 801012a:	6823      	ldr	r3, [r4, #0]
 801012c:	b173      	cbz	r3, 801014c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 801012e:	2300      	movs	r3, #0
 8010130:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8010132:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8010134:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010138:	f7ff fd9c 	bl	800fc74 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 801013c:	2300      	movs	r3, #0
 801013e:	6820      	ldr	r0, [r4, #0]
 8010140:	461a      	mov	r2, r3
 8010142:	a906      	add	r1, sp, #24
 8010144:	f7fe f96a 	bl	800e41c <xQueueGenericSend>
			configASSERT( xResult );
 8010148:	2800      	cmp	r0, #0
 801014a:	d1c5      	bne.n	80100d8 <prvTimerTask+0x1d0>
 801014c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010150:	f383 8811 	msr	BASEPRI, r3
 8010154:	f3bf 8f6f 	isb	sy
 8010158:	f3bf 8f4f 	dsb	sy
 801015c:	e7fe      	b.n	801015c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 801015e:	4b0a      	ldr	r3, [pc, #40]	; (8010188 <prvTimerTask+0x280>)
 8010160:	6818      	ldr	r0, [r3, #0]
 8010162:	f7fd fdd1 	bl	800dd08 <vListInsert>
	return xProcessTimerNow;
 8010166:	e7b7      	b.n	80100d8 <prvTimerTask+0x1d0>
 8010168:	f04f 0350 	mov.w	r3, #80	; 0x50
 801016c:	f383 8811 	msr	BASEPRI, r3
 8010170:	f3bf 8f6f 	isb	sy
 8010174:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010178:	e7fe      	b.n	8010178 <prvTimerTask+0x270>
 801017a:	bf00      	nop
 801017c:	20012c7c 	.word	0x20012c7c
 8010180:	20012d4c 	.word	0x20012d4c
 8010184:	20012da0 	.word	0x20012da0
 8010188:	20012c80 	.word	0x20012c80

0801018c <xTimerCreateTimerTask>:
{
 801018c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 801018e:	4c23      	ldr	r4, [pc, #140]	; (801021c <xTimerCreateTimerTask+0x90>)
{
 8010190:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 8010192:	f7fd fe4f 	bl	800de34 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8010196:	6825      	ldr	r5, [r4, #0]
 8010198:	b335      	cbz	r5, 80101e8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801019a:	f7fd fe6d 	bl	800de78 <vPortExitCritical>
	if( xTimerQueue != NULL )
 801019e:	6823      	ldr	r3, [r4, #0]
 80101a0:	b1cb      	cbz	r3, 80101d6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80101a2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80101a4:	aa07      	add	r2, sp, #28
 80101a6:	a906      	add	r1, sp, #24
 80101a8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80101aa:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80101ae:	f7fd fc5b 	bl	800da68 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80101b2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 80101b6:	2302      	movs	r3, #2
 80101b8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80101bc:	9300      	str	r3, [sp, #0]
 80101be:	9a07      	ldr	r2, [sp, #28]
 80101c0:	4917      	ldr	r1, [pc, #92]	; (8010220 <xTimerCreateTimerTask+0x94>)
 80101c2:	4818      	ldr	r0, [pc, #96]	; (8010224 <xTimerCreateTimerTask+0x98>)
 80101c4:	4623      	mov	r3, r4
 80101c6:	f7ff fa6d 	bl	800f6a4 <xTaskCreateStatic>
 80101ca:	4b17      	ldr	r3, [pc, #92]	; (8010228 <xTimerCreateTimerTask+0x9c>)
 80101cc:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80101ce:	b110      	cbz	r0, 80101d6 <xTimerCreateTimerTask+0x4a>
}
 80101d0:	2001      	movs	r0, #1
 80101d2:	b009      	add	sp, #36	; 0x24
 80101d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80101d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101da:	f383 8811 	msr	BASEPRI, r3
 80101de:	f3bf 8f6f 	isb	sy
 80101e2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80101e6:	e7fe      	b.n	80101e6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 80101e8:	4f10      	ldr	r7, [pc, #64]	; (801022c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 80101ea:	4e11      	ldr	r6, [pc, #68]	; (8010230 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 80101ec:	4638      	mov	r0, r7
 80101ee:	f7fd fd6b 	bl	800dcc8 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80101f2:	4630      	mov	r0, r6
 80101f4:	f7fd fd68 	bl	800dcc8 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80101f8:	4a0e      	ldr	r2, [pc, #56]	; (8010234 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80101fa:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 80101fc:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80101fe:	4a0e      	ldr	r2, [pc, #56]	; (8010238 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8010200:	4b0e      	ldr	r3, [pc, #56]	; (801023c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 8010202:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8010204:	2110      	movs	r1, #16
 8010206:	4a0e      	ldr	r2, [pc, #56]	; (8010240 <xTimerCreateTimerTask+0xb4>)
 8010208:	200a      	movs	r0, #10
 801020a:	f7fd ffb1 	bl	800e170 <xQueueGenericCreateStatic>
 801020e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 8010210:	2800      	cmp	r0, #0
 8010212:	d0c2      	beq.n	801019a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8010214:	490b      	ldr	r1, [pc, #44]	; (8010244 <xTimerCreateTimerTask+0xb8>)
 8010216:	f7fe ff0d 	bl	800f034 <vQueueAddToRegistry>
 801021a:	e7be      	b.n	801019a <xTimerCreateTimerTask+0xe>
 801021c:	20012da0 	.word	0x20012da0
 8010220:	0802eaec 	.word	0x0802eaec
 8010224:	0800ff09 	.word	0x0800ff09
 8010228:	20012da4 	.word	0x20012da4
 801022c:	20012d24 	.word	0x20012d24
 8010230:	20012d38 	.word	0x20012d38
 8010234:	20012c7c 	.word	0x20012c7c
 8010238:	20012c80 	.word	0x20012c80
 801023c:	20012d50 	.word	0x20012d50
 8010240:	20012c84 	.word	0x20012c84
 8010244:	0802eae4 	.word	0x0802eae4

08010248 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8010248:	8880      	ldrh	r0, [r0, #4]
 801024a:	4770      	bx	lr

0801024c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 801024c:	b570      	push	{r4, r5, r6, lr}
 801024e:	6803      	ldr	r3, [r0, #0]
 8010250:	4605      	mov	r5, r0
 8010252:	460c      	mov	r4, r1
 8010254:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010256:	2100      	movs	r1, #0
 8010258:	4798      	blx	r3
 801025a:	682b      	ldr	r3, [r5, #0]
 801025c:	4606      	mov	r6, r0
 801025e:	6a1b      	ldr	r3, [r3, #32]
 8010260:	4628      	mov	r0, r5
 8010262:	4798      	blx	r3
 8010264:	1ba4      	subs	r4, r4, r6
 8010266:	b2a4      	uxth	r4, r4
 8010268:	fbb4 f0f0 	udiv	r0, r4, r0
 801026c:	bd70      	pop	{r4, r5, r6, pc}

0801026e <_ZN8touchgfx17AbstractPartition5clearEv>:
 801026e:	2300      	movs	r3, #0
 8010270:	8083      	strh	r3, [r0, #4]
 8010272:	4770      	bx	lr

08010274 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010274:	b510      	push	{r4, lr}
 8010276:	6803      	ldr	r3, [r0, #0]
 8010278:	8881      	ldrh	r1, [r0, #4]
 801027a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801027c:	4604      	mov	r4, r0
 801027e:	4798      	blx	r3
 8010280:	88a3      	ldrh	r3, [r4, #4]
 8010282:	3301      	adds	r3, #1
 8010284:	80a3      	strh	r3, [r4, #4]
 8010286:	bd10      	pop	{r4, pc}

08010288 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8010288:	6803      	ldr	r3, [r0, #0]
 801028a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801028c:	4718      	bx	r3

0801028e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801028e:	4770      	bx	lr

08010290 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8010290:	4a02      	ldr	r2, [pc, #8]	; (801029c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8010292:	6002      	str	r2, [r0, #0]
 8010294:	2200      	movs	r2, #0
 8010296:	8082      	strh	r2, [r0, #4]
 8010298:	4770      	bx	lr
 801029a:	bf00      	nop
 801029c:	0802eafc 	.word	0x0802eafc

080102a0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 80102a0:	b510      	push	{r4, lr}
 80102a2:	6803      	ldr	r3, [r0, #0]
 80102a4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80102a8:	4604      	mov	r4, r0
 80102aa:	4798      	blx	r3
 80102ac:	b110      	cbz	r0, 80102b4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 80102ae:	4620      	mov	r0, r4
 80102b0:	f7f2 fc86 	bl	8002bc0 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 80102b4:	bd10      	pop	{r4, pc}

080102b6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 80102b6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 80102ba:	4770      	bx	lr

080102bc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 80102bc:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 80102c0:	4770      	bx	lr

080102c2 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 80102c2:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 80102c6:	4770      	bx	lr

080102c8 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 80102c8:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 80102cc:	4770      	bx	lr

080102ce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 80102ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80102d0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 80102d4:	461e      	mov	r6, r3
 80102d6:	6803      	ldr	r3, [r0, #0]
 80102d8:	460f      	mov	r7, r1
 80102da:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80102de:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 80102e2:	4604      	mov	r4, r0
 80102e4:	4615      	mov	r5, r2
 80102e6:	4798      	blx	r3
 80102e8:	b93e      	cbnz	r6, 80102fa <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 80102ea:	1bed      	subs	r5, r5, r7
 80102ec:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 80102f0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80102f4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80102f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80102fa:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 80102fe:	e7f7      	b.n	80102f0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

08010300 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8010300:	b510      	push	{r4, lr}
 8010302:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8010306:	600c      	str	r4, [r1, #0]
 8010308:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801030c:	6011      	str	r1, [r2, #0]
 801030e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8010312:	801a      	strh	r2, [r3, #0]
 8010314:	9b02      	ldr	r3, [sp, #8]
 8010316:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 801031a:	801a      	strh	r2, [r3, #0]
 801031c:	bd10      	pop	{r4, pc}

0801031e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 801031e:	b510      	push	{r4, lr}
 8010320:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8010324:	600c      	str	r4, [r1, #0]
 8010326:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801032a:	6011      	str	r1, [r2, #0]
 801032c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8010330:	801a      	strh	r2, [r3, #0]
 8010332:	bd10      	pop	{r4, pc}

08010334 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 8010334:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8010338:	600b      	str	r3, [r1, #0]
 801033a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 801033e:	6013      	str	r3, [r2, #0]
 8010340:	4770      	bx	lr

08010342 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8010342:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8010346:	4770      	bx	lr

08010348 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8010348:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 801034c:	4770      	bx	lr

0801034e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 801034e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8010352:	4770      	bx	lr

08010354 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8010354:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8010358:	4770      	bx	lr

0801035a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 801035a:	4770      	bx	lr

0801035c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 801035c:	b510      	push	{r4, lr}
 801035e:	21b4      	movs	r1, #180	; 0xb4
 8010360:	4604      	mov	r4, r0
 8010362:	f019 fc84 	bl	8029c6e <_ZdlPvj>
 8010366:	4620      	mov	r0, r4
 8010368:	bd10      	pop	{r4, pc}

0801036a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801036a:	b570      	push	{r4, r5, r6, lr}
 801036c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8010370:	428d      	cmp	r5, r1
 8010372:	bfb8      	it	lt
 8010374:	460d      	movlt	r5, r1
 8010376:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801037a:	428d      	cmp	r5, r1
 801037c:	4604      	mov	r4, r0
 801037e:	bfa8      	it	ge
 8010380:	460d      	movge	r5, r1
 8010382:	4616      	mov	r6, r2
 8010384:	b99a      	cbnz	r2, 80103ae <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8010386:	6803      	ldr	r3, [r0, #0]
 8010388:	4629      	mov	r1, r5
 801038a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801038e:	4798      	blx	r3
 8010390:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010394:	b368      	cbz	r0, 80103f2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8010396:	6803      	ldr	r3, [r0, #0]
 8010398:	68db      	ldr	r3, [r3, #12]
 801039a:	4798      	blx	r3
 801039c:	b348      	cbz	r0, 80103f2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801039e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80103a2:	6803      	ldr	r3, [r0, #0]
 80103a4:	4621      	mov	r1, r4
 80103a6:	689b      	ldr	r3, [r3, #8]
 80103a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80103ac:	4718      	bx	r3
 80103ae:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80103b2:	2b00      	cmp	r3, #0
 80103b4:	dd08      	ble.n	80103c8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 80103b6:	f005 fbe3 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
 80103ba:	4621      	mov	r1, r4
 80103bc:	3004      	adds	r0, #4
 80103be:	f005 fc2c 	bl	8015c1a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80103c2:	2300      	movs	r3, #0
 80103c4:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80103c8:	6823      	ldr	r3, [r4, #0]
 80103ca:	4620      	mov	r0, r4
 80103cc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80103d0:	4798      	blx	r3
 80103d2:	2300      	movs	r3, #0
 80103d4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 80103d8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 80103dc:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 80103e0:	f005 fbce 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
 80103e4:	4621      	mov	r1, r4
 80103e6:	3004      	adds	r0, #4
 80103e8:	f005 fcc0 	bl	8015d6c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80103ec:	2301      	movs	r3, #1
 80103ee:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80103f2:	bd70      	pop	{r4, r5, r6, pc}

080103f4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 80103f4:	b510      	push	{r4, lr}
 80103f6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80103fa:	4299      	cmp	r1, r3
 80103fc:	bfb8      	it	lt
 80103fe:	4619      	movlt	r1, r3
 8010400:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8010404:	4299      	cmp	r1, r3
 8010406:	bfa8      	it	ge
 8010408:	4619      	movge	r1, r3
 801040a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 801040e:	428b      	cmp	r3, r1
 8010410:	4604      	mov	r4, r0
 8010412:	d010      	beq.n	8010436 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8010414:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8010418:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 801041c:	b158      	cbz	r0, 8010436 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 801041e:	6803      	ldr	r3, [r0, #0]
 8010420:	68db      	ldr	r3, [r3, #12]
 8010422:	4798      	blx	r3
 8010424:	b138      	cbz	r0, 8010436 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8010426:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 801042a:	6803      	ldr	r3, [r0, #0]
 801042c:	4621      	mov	r1, r4
 801042e:	689b      	ldr	r3, [r3, #8]
 8010430:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010434:	4718      	bx	r3
 8010436:	bd10      	pop	{r4, pc}

08010438 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8010438:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801043a:	4604      	mov	r4, r0
 801043c:	460d      	mov	r5, r1
 801043e:	b1a9      	cbz	r1, 801046c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8010440:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8010444:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8010448:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 801044c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8010450:	ab01      	add	r3, sp, #4
 8010452:	1a12      	subs	r2, r2, r0
 8010454:	1b89      	subs	r1, r1, r6
 8010456:	1a38      	subs	r0, r7, r0
 8010458:	f006 fe48 	bl	80170ec <_ZN8touchgfx6muldivElllRl>
 801045c:	4629      	mov	r1, r5
 801045e:	ab01      	add	r3, sp, #4
 8010460:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8010464:	4430      	add	r0, r6
 8010466:	f006 fe41 	bl	80170ec <_ZN8touchgfx6muldivElllRl>
 801046a:	b285      	uxth	r5, r0
 801046c:	4628      	mov	r0, r5
 801046e:	b003      	add	sp, #12
 8010470:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010472 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8010472:	b570      	push	{r4, r5, r6, lr}
 8010474:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8010478:	4604      	mov	r4, r0
 801047a:	2b00      	cmp	r3, #0
 801047c:	d035      	beq.n	80104ea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801047e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8010482:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8010486:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801048a:	3001      	adds	r0, #1
 801048c:	1ad2      	subs	r2, r2, r3
 801048e:	b212      	sxth	r2, r2
 8010490:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8010494:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010498:	2100      	movs	r1, #0
 801049a:	b280      	uxth	r0, r0
 801049c:	47a8      	blx	r5
 801049e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 80104a2:	6823      	ldr	r3, [r4, #0]
 80104a4:	4401      	add	r1, r0
 80104a6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80104aa:	4620      	mov	r0, r4
 80104ac:	4798      	blx	r3
 80104ae:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 80104b2:	429a      	cmp	r2, r3
 80104b4:	db19      	blt.n	80104ea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80104b6:	2500      	movs	r5, #0
 80104b8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80104bc:	f005 fb60 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
 80104c0:	4621      	mov	r1, r4
 80104c2:	3004      	adds	r0, #4
 80104c4:	f005 fba9 	bl	8015c1a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80104c8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80104cc:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80104d0:	b158      	cbz	r0, 80104ea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80104d2:	6803      	ldr	r3, [r0, #0]
 80104d4:	68db      	ldr	r3, [r3, #12]
 80104d6:	4798      	blx	r3
 80104d8:	b138      	cbz	r0, 80104ea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80104da:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80104de:	6803      	ldr	r3, [r0, #0]
 80104e0:	4621      	mov	r1, r4
 80104e2:	689b      	ldr	r3, [r3, #8]
 80104e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80104e8:	4718      	bx	r3
 80104ea:	bd70      	pop	{r4, r5, r6, pc}

080104ec <_ZN8touchgfx8DrawableC1Ev>:
 80104ec:	4a0a      	ldr	r2, [pc, #40]	; (8010518 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 80104ee:	6002      	str	r2, [r0, #0]
 80104f0:	2200      	movs	r2, #0
 80104f2:	8082      	strh	r2, [r0, #4]
 80104f4:	80c2      	strh	r2, [r0, #6]
 80104f6:	8102      	strh	r2, [r0, #8]
 80104f8:	8142      	strh	r2, [r0, #10]
 80104fa:	8182      	strh	r2, [r0, #12]
 80104fc:	81c2      	strh	r2, [r0, #14]
 80104fe:	8202      	strh	r2, [r0, #16]
 8010500:	8242      	strh	r2, [r0, #18]
 8010502:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010506:	61c2      	str	r2, [r0, #28]
 8010508:	8402      	strh	r2, [r0, #32]
 801050a:	8442      	strh	r2, [r0, #34]	; 0x22
 801050c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010510:	2201      	movs	r2, #1
 8010512:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8010516:	4770      	bx	lr
 8010518:	0802f29c 	.word	0x0802f29c

0801051c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 801051c:	b570      	push	{r4, r5, r6, lr}
 801051e:	6803      	ldr	r3, [r0, #0]
 8010520:	4604      	mov	r4, r0
 8010522:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010524:	4615      	mov	r5, r2
 8010526:	4798      	blx	r3
 8010528:	6823      	ldr	r3, [r4, #0]
 801052a:	4629      	mov	r1, r5
 801052c:	4620      	mov	r0, r4
 801052e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010530:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010534:	4718      	bx	r3

08010536 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8010536:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801053a:	4604      	mov	r4, r0
 801053c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8010540:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8010544:	460e      	mov	r6, r1
 8010546:	4615      	mov	r5, r2
 8010548:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801054c:	4619      	mov	r1, r3
 801054e:	463a      	mov	r2, r7
 8010550:	3058      	adds	r0, #88	; 0x58
 8010552:	4698      	mov	r8, r3
 8010554:	f7ff ffe2 	bl	801051c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010558:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801055c:	4446      	add	r6, r8
 801055e:	42b3      	cmp	r3, r6
 8010560:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010564:	bfb8      	it	lt
 8010566:	8126      	strhlt	r6, [r4, #8]
 8010568:	443d      	add	r5, r7
 801056a:	42ab      	cmp	r3, r5
 801056c:	bfb8      	it	lt
 801056e:	8165      	strhlt	r5, [r4, #10]
 8010570:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010574 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8010574:	b510      	push	{r4, lr}
 8010576:	4604      	mov	r4, r0
 8010578:	302c      	adds	r0, #44	; 0x2c
 801057a:	f002 fdf8 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801057e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010582:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010586:	4620      	mov	r0, r4
 8010588:	f7ff ffc8 	bl	801051c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801058c:	bd10      	pop	{r4, pc}
	...

08010590 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8010590:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010592:	4604      	mov	r4, r0
 8010594:	4626      	mov	r6, r4
 8010596:	2500      	movs	r5, #0
 8010598:	f7ff ffa8 	bl	80104ec <_ZN8touchgfx8DrawableC1Ev>
 801059c:	4b23      	ldr	r3, [pc, #140]	; (801062c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801059e:	62a5      	str	r5, [r4, #40]	; 0x28
 80105a0:	f846 3b2c 	str.w	r3, [r6], #44
 80105a4:	2226      	movs	r2, #38	; 0x26
 80105a6:	4629      	mov	r1, r5
 80105a8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80105ac:	4630      	mov	r0, r6
 80105ae:	f8ad 7004 	strh.w	r7, [sp, #4]
 80105b2:	f01a fc48 	bl	802ae46 <memset>
 80105b6:	4630      	mov	r0, r6
 80105b8:	f7ff ff98 	bl	80104ec <_ZN8touchgfx8DrawableC1Ev>
 80105bc:	a902      	add	r1, sp, #8
 80105be:	4b1c      	ldr	r3, [pc, #112]	; (8010630 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 80105c0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80105c2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 80105c6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 80105ca:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 80105ce:	4630      	mov	r0, r6
 80105d0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 80105d4:	f002 fdcb 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80105d8:	4638      	mov	r0, r7
 80105da:	f7ff ff87 	bl	80104ec <_ZN8touchgfx8DrawableC1Ev>
 80105de:	4b15      	ldr	r3, [pc, #84]	; (8010634 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 80105e0:	65a3      	str	r3, [r4, #88]	; 0x58
 80105e2:	2364      	movs	r3, #100	; 0x64
 80105e4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 80105e8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 80105ec:	4b12      	ldr	r3, [pc, #72]	; (8010638 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 80105ee:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80105f2:	4629      	mov	r1, r5
 80105f4:	4630      	mov	r0, r6
 80105f6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 80105fa:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80105fe:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8010602:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8010606:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 801060a:	f7f2 fa35 	bl	8002a78 <_ZN8touchgfx8Drawable4setXEs>
 801060e:	4629      	mov	r1, r5
 8010610:	4630      	mov	r0, r6
 8010612:	f7f2 fa33 	bl	8002a7c <_ZN8touchgfx8Drawable4setYEs>
 8010616:	4631      	mov	r1, r6
 8010618:	4620      	mov	r0, r4
 801061a:	f000 f819 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801061e:	4620      	mov	r0, r4
 8010620:	4639      	mov	r1, r7
 8010622:	f000 f815 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010626:	4620      	mov	r0, r4
 8010628:	b003      	add	sp, #12
 801062a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801062c:	0802eb30 	.word	0x0802eb30
 8010630:	0802f158 	.word	0x0802f158
 8010634:	0802ec04 	.word	0x0802ec04
 8010638:	0801784b 	.word	0x0801784b

0801063c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 801063c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801063e:	2000      	movs	r0, #0
 8010640:	b12b      	cbz	r3, 801064e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010642:	b920      	cbnz	r0, 801064e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010644:	1a5a      	subs	r2, r3, r1
 8010646:	4250      	negs	r0, r2
 8010648:	4150      	adcs	r0, r2
 801064a:	699b      	ldr	r3, [r3, #24]
 801064c:	e7f8      	b.n	8010640 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 801064e:	4770      	bx	lr

08010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8010650:	2300      	movs	r3, #0
 8010652:	6148      	str	r0, [r1, #20]
 8010654:	618b      	str	r3, [r1, #24]
 8010656:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010658:	b913      	cbnz	r3, 8010660 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 801065a:	6281      	str	r1, [r0, #40]	; 0x28
 801065c:	4770      	bx	lr
 801065e:	4613      	mov	r3, r2
 8010660:	699a      	ldr	r2, [r3, #24]
 8010662:	2a00      	cmp	r2, #0
 8010664:	d1fb      	bne.n	801065e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8010666:	6199      	str	r1, [r3, #24]
 8010668:	4770      	bx	lr

0801066a <_ZN8touchgfx9Container9removeAllEv>:
 801066a:	2200      	movs	r2, #0
 801066c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801066e:	b123      	cbz	r3, 801067a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010670:	6999      	ldr	r1, [r3, #24]
 8010672:	6281      	str	r1, [r0, #40]	; 0x28
 8010674:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010678:	e7f8      	b.n	801066c <_ZN8touchgfx9Container9removeAllEv+0x2>
 801067a:	4770      	bx	lr

0801067c <_ZN8touchgfx9Container6unlinkEv>:
 801067c:	2300      	movs	r3, #0
 801067e:	6283      	str	r3, [r0, #40]	; 0x28
 8010680:	4770      	bx	lr

08010682 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8010682:	2200      	movs	r2, #0
 8010684:	8002      	strh	r2, [r0, #0]
 8010686:	8042      	strh	r2, [r0, #2]
 8010688:	8082      	strh	r2, [r0, #4]
 801068a:	80c2      	strh	r2, [r0, #6]
 801068c:	4770      	bx	lr

0801068e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801068e:	b570      	push	{r4, r5, r6, lr}
 8010690:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010692:	460d      	mov	r5, r1
 8010694:	4616      	mov	r6, r2
 8010696:	b13c      	cbz	r4, 80106a8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010698:	6823      	ldr	r3, [r4, #0]
 801069a:	4620      	mov	r0, r4
 801069c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801069e:	4632      	mov	r2, r6
 80106a0:	4629      	mov	r1, r5
 80106a2:	4798      	blx	r3
 80106a4:	69a4      	ldr	r4, [r4, #24]
 80106a6:	e7f6      	b.n	8010696 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80106a8:	bd70      	pop	{r4, r5, r6, pc}

080106aa <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80106aa:	b538      	push	{r3, r4, r5, lr}
 80106ac:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80106ae:	460d      	mov	r5, r1
 80106b0:	b134      	cbz	r4, 80106c0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80106b2:	682b      	ldr	r3, [r5, #0]
 80106b4:	4621      	mov	r1, r4
 80106b6:	689b      	ldr	r3, [r3, #8]
 80106b8:	4628      	mov	r0, r5
 80106ba:	4798      	blx	r3
 80106bc:	69a4      	ldr	r4, [r4, #24]
 80106be:	e7f7      	b.n	80106b0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80106c0:	bd38      	pop	{r3, r4, r5, pc}

080106c2 <_ZN8touchgfx9ContainerD1Ev>:
 80106c2:	4770      	bx	lr

080106c4 <_ZN8touchgfx9ContainerD0Ev>:
 80106c4:	b510      	push	{r4, lr}
 80106c6:	212c      	movs	r1, #44	; 0x2c
 80106c8:	4604      	mov	r4, r0
 80106ca:	f019 fad0 	bl	8029c6e <_ZdlPvj>
 80106ce:	4620      	mov	r0, r4
 80106d0:	bd10      	pop	{r4, pc}

080106d2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80106d2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80106d4:	b19b      	cbz	r3, 80106fe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80106d6:	428b      	cmp	r3, r1
 80106d8:	d109      	bne.n	80106ee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80106da:	699a      	ldr	r2, [r3, #24]
 80106dc:	2100      	movs	r1, #0
 80106de:	6159      	str	r1, [r3, #20]
 80106e0:	6282      	str	r2, [r0, #40]	; 0x28
 80106e2:	b902      	cbnz	r2, 80106e6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80106e4:	4770      	bx	lr
 80106e6:	6199      	str	r1, [r3, #24]
 80106e8:	4770      	bx	lr
 80106ea:	4613      	mov	r3, r2
 80106ec:	b13a      	cbz	r2, 80106fe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80106ee:	699a      	ldr	r2, [r3, #24]
 80106f0:	428a      	cmp	r2, r1
 80106f2:	d1fa      	bne.n	80106ea <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80106f4:	698a      	ldr	r2, [r1, #24]
 80106f6:	619a      	str	r2, [r3, #24]
 80106f8:	2300      	movs	r3, #0
 80106fa:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80106fe:	4770      	bx	lr

08010700 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010700:	b410      	push	{r4}
 8010702:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010704:	4604      	mov	r4, r0
 8010706:	b92b      	cbnz	r3, 8010714 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010708:	6803      	ldr	r3, [r0, #0]
 801070a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801070e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8010710:	4611      	mov	r1, r2
 8010712:	4718      	bx	r3
 8010714:	b941      	cbnz	r1, 8010728 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8010716:	6193      	str	r3, [r2, #24]
 8010718:	6282      	str	r2, [r0, #40]	; 0x28
 801071a:	6154      	str	r4, [r2, #20]
 801071c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010720:	4770      	bx	lr
 8010722:	4603      	mov	r3, r0
 8010724:	2800      	cmp	r0, #0
 8010726:	d0f9      	beq.n	801071c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8010728:	4299      	cmp	r1, r3
 801072a:	6998      	ldr	r0, [r3, #24]
 801072c:	d1f9      	bne.n	8010722 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 801072e:	6190      	str	r0, [r2, #24]
 8010730:	618a      	str	r2, [r1, #24]
 8010732:	e7f2      	b.n	801071a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010734 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010734:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010738:	461f      	mov	r7, r3
 801073a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 801073e:	460d      	mov	r5, r1
 8010740:	4616      	mov	r6, r2
 8010742:	b103      	cbz	r3, 8010746 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010744:	6038      	str	r0, [r7, #0]
 8010746:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010748:	b314      	cbz	r4, 8010790 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801074a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801074e:	b1eb      	cbz	r3, 801078c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010750:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010754:	428d      	cmp	r5, r1
 8010756:	db19      	blt.n	801078c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010758:	8923      	ldrh	r3, [r4, #8]
 801075a:	b289      	uxth	r1, r1
 801075c:	440b      	add	r3, r1
 801075e:	b21b      	sxth	r3, r3
 8010760:	429d      	cmp	r5, r3
 8010762:	da13      	bge.n	801078c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010764:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010768:	4296      	cmp	r6, r2
 801076a:	db0f      	blt.n	801078c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801076c:	8963      	ldrh	r3, [r4, #10]
 801076e:	b292      	uxth	r2, r2
 8010770:	4413      	add	r3, r2
 8010772:	b21b      	sxth	r3, r3
 8010774:	429e      	cmp	r6, r3
 8010776:	da09      	bge.n	801078c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010778:	6823      	ldr	r3, [r4, #0]
 801077a:	1ab2      	subs	r2, r6, r2
 801077c:	1a69      	subs	r1, r5, r1
 801077e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8010782:	b212      	sxth	r2, r2
 8010784:	463b      	mov	r3, r7
 8010786:	b209      	sxth	r1, r1
 8010788:	4620      	mov	r0, r4
 801078a:	47c0      	blx	r8
 801078c:	69a4      	ldr	r4, [r4, #24]
 801078e:	e7db      	b.n	8010748 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010790:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010794 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010798:	4c6e      	ldr	r4, [pc, #440]	; (8010954 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801079a:	b0a1      	sub	sp, #132	; 0x84
 801079c:	6824      	ldr	r4, [r4, #0]
 801079e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80107a0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80107a4:	9303      	str	r3, [sp, #12]
 80107a6:	2400      	movs	r4, #0
 80107a8:	802c      	strh	r4, [r5, #0]
 80107aa:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 80107ac:	802c      	strh	r4, [r5, #0]
 80107ae:	601c      	str	r4, [r3, #0]
 80107b0:	4606      	mov	r6, r0
 80107b2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80107b6:	f7ff ffbd 	bl	8010734 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80107ba:	f1b9 0f03 	cmp.w	r9, #3
 80107be:	f340 80c2 	ble.w	8010946 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 80107c2:	4631      	mov	r1, r6
 80107c4:	a80c      	add	r0, sp, #48	; 0x30
 80107c6:	f006 fb5f 	bl	8016e88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80107ca:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80107ce:	9306      	str	r3, [sp, #24]
 80107d0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80107d4:	9307      	str	r3, [sp, #28]
 80107d6:	9b03      	ldr	r3, [sp, #12]
 80107d8:	f8d3 a000 	ldr.w	sl, [r3]
 80107dc:	f1ba 0f00 	cmp.w	sl, #0
 80107e0:	f000 80b4 	beq.w	801094c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 80107e4:	4651      	mov	r1, sl
 80107e6:	a810      	add	r0, sp, #64	; 0x40
 80107e8:	f006 fb4e 	bl	8016e88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80107ec:	9b01      	ldr	r3, [sp, #4]
 80107ee:	9a06      	ldr	r2, [sp, #24]
 80107f0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 80107f4:	189d      	adds	r5, r3, r2
 80107f6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 80107fa:	9a07      	ldr	r2, [sp, #28]
 80107fc:	2002      	movs	r0, #2
 80107fe:	fb91 f1f0 	sdiv	r1, r1, r0
 8010802:	4419      	add	r1, r3
 8010804:	1a6d      	subs	r5, r5, r1
 8010806:	9b02      	ldr	r3, [sp, #8]
 8010808:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801080c:	4413      	add	r3, r2
 801080e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8010812:	fb92 f2f0 	sdiv	r2, r2, r0
 8010816:	440a      	add	r2, r1
 8010818:	1a9b      	subs	r3, r3, r2
 801081a:	435b      	muls	r3, r3
 801081c:	fb05 3505 	mla	r5, r5, r5, r3
 8010820:	4f4d      	ldr	r7, [pc, #308]	; (8010958 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010822:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010824:	ac10      	add	r4, sp, #64	; 0x40
 8010826:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010828:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801082a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801082c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801082e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010830:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010834:	f1b9 0f0c 	cmp.w	r9, #12
 8010838:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801083c:	f04f 0303 	mov.w	r3, #3
 8010840:	bfc8      	it	gt
 8010842:	4698      	movgt	r8, r3
 8010844:	f8cd 9000 	str.w	r9, [sp]
 8010848:	f04f 0400 	mov.w	r4, #0
 801084c:	bfdc      	itt	le
 801084e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010852:	fb92 f8f3 	sdivle	r8, r2, r3
 8010856:	1c63      	adds	r3, r4, #1
 8010858:	aa10      	add	r2, sp, #64	; 0x40
 801085a:	f004 0401 	and.w	r4, r4, #1
 801085e:	9308      	str	r3, [sp, #32]
 8010860:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010864:	9b00      	ldr	r3, [sp, #0]
 8010866:	fb93 f3f8 	sdiv	r3, r3, r8
 801086a:	b29b      	uxth	r3, r3
 801086c:	3404      	adds	r4, #4
 801086e:	f04f 0b00 	mov.w	fp, #0
 8010872:	9304      	str	r3, [sp, #16]
 8010874:	9a04      	ldr	r2, [sp, #16]
 8010876:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801087a:	fb13 f302 	smulbb	r3, r3, r2
 801087e:	9a01      	ldr	r2, [sp, #4]
 8010880:	b29b      	uxth	r3, r3
 8010882:	1899      	adds	r1, r3, r2
 8010884:	9305      	str	r3, [sp, #20]
 8010886:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801088a:	b209      	sxth	r1, r1
 801088c:	4299      	cmp	r1, r3
 801088e:	db4d      	blt.n	801092c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010890:	8932      	ldrh	r2, [r6, #8]
 8010892:	4413      	add	r3, r2
 8010894:	b21b      	sxth	r3, r3
 8010896:	4299      	cmp	r1, r3
 8010898:	da48      	bge.n	801092c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801089a:	9b04      	ldr	r3, [sp, #16]
 801089c:	6827      	ldr	r7, [r4, #0]
 801089e:	fb17 f703 	smulbb	r7, r7, r3
 80108a2:	9b02      	ldr	r3, [sp, #8]
 80108a4:	b2bf      	uxth	r7, r7
 80108a6:	18fa      	adds	r2, r7, r3
 80108a8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80108ac:	b212      	sxth	r2, r2
 80108ae:	429a      	cmp	r2, r3
 80108b0:	db3c      	blt.n	801092c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80108b2:	8970      	ldrh	r0, [r6, #10]
 80108b4:	4403      	add	r3, r0
 80108b6:	b21b      	sxth	r3, r3
 80108b8:	429a      	cmp	r2, r3
 80108ba:	da37      	bge.n	801092c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80108bc:	2300      	movs	r3, #0
 80108be:	930b      	str	r3, [sp, #44]	; 0x2c
 80108c0:	4630      	mov	r0, r6
 80108c2:	ab0b      	add	r3, sp, #44	; 0x2c
 80108c4:	f7ff ff36 	bl	8010734 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80108c8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80108ca:	b37a      	cbz	r2, 801092c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80108cc:	4552      	cmp	r2, sl
 80108ce:	d02d      	beq.n	801092c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80108d0:	4611      	mov	r1, r2
 80108d2:	a80e      	add	r0, sp, #56	; 0x38
 80108d4:	9209      	str	r2, [sp, #36]	; 0x24
 80108d6:	f006 fad7 	bl	8016e88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80108da:	9a06      	ldr	r2, [sp, #24]
 80108dc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 80108e0:	9b01      	ldr	r3, [sp, #4]
 80108e2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 80108e6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 80108ea:	4413      	add	r3, r2
 80108ec:	f04f 0e02 	mov.w	lr, #2
 80108f0:	fb91 f1fe 	sdiv	r1, r1, lr
 80108f4:	4401      	add	r1, r0
 80108f6:	1a58      	subs	r0, r3, r1
 80108f8:	9a07      	ldr	r2, [sp, #28]
 80108fa:	9b02      	ldr	r3, [sp, #8]
 80108fc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010900:	fb9c fcfe 	sdiv	ip, ip, lr
 8010904:	4413      	add	r3, r2
 8010906:	448c      	add	ip, r1
 8010908:	eba3 030c 	sub.w	r3, r3, ip
 801090c:	435b      	muls	r3, r3
 801090e:	fb00 3300 	mla	r3, r0, r0, r3
 8010912:	42ab      	cmp	r3, r5
 8010914:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010916:	d208      	bcs.n	801092a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010918:	9803      	ldr	r0, [sp, #12]
 801091a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801091c:	6001      	str	r1, [r0, #0]
 801091e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010920:	9805      	ldr	r0, [sp, #20]
 8010922:	8008      	strh	r0, [r1, #0]
 8010924:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010926:	461d      	mov	r5, r3
 8010928:	800f      	strh	r7, [r1, #0]
 801092a:	4692      	mov	sl, r2
 801092c:	f10b 0b01 	add.w	fp, fp, #1
 8010930:	f1bb 0f04 	cmp.w	fp, #4
 8010934:	f104 0408 	add.w	r4, r4, #8
 8010938:	d19c      	bne.n	8010874 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 801093a:	9b00      	ldr	r3, [sp, #0]
 801093c:	9c08      	ldr	r4, [sp, #32]
 801093e:	444b      	add	r3, r9
 8010940:	4544      	cmp	r4, r8
 8010942:	9300      	str	r3, [sp, #0]
 8010944:	d187      	bne.n	8010856 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010946:	b021      	add	sp, #132	; 0x84
 8010948:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801094c:	f04f 35ff 	mov.w	r5, #4294967295
 8010950:	e766      	b.n	8010820 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010952:	bf00      	nop
 8010954:	20012db4 	.word	0x20012db4
 8010958:	0802bb78 	.word	0x0802bb78

0801095c <_ZN8touchgfx4RectaNERKS0_>:
 801095c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010960:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010964:	888c      	ldrh	r4, [r1, #4]
 8010966:	f9b0 9000 	ldrsh.w	r9, [r0]
 801096a:	443c      	add	r4, r7
 801096c:	b2a4      	uxth	r4, r4
 801096e:	fa0f f884 	sxth.w	r8, r4
 8010972:	45c1      	cmp	r9, r8
 8010974:	da2f      	bge.n	80109d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010976:	8882      	ldrh	r2, [r0, #4]
 8010978:	444a      	add	r2, r9
 801097a:	b292      	uxth	r2, r2
 801097c:	fa0f fe82 	sxth.w	lr, r2
 8010980:	4577      	cmp	r7, lr
 8010982:	da28      	bge.n	80109d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010984:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010988:	88cb      	ldrh	r3, [r1, #6]
 801098a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801098e:	442b      	add	r3, r5
 8010990:	b21b      	sxth	r3, r3
 8010992:	429e      	cmp	r6, r3
 8010994:	da1f      	bge.n	80109d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010996:	88c3      	ldrh	r3, [r0, #6]
 8010998:	4433      	add	r3, r6
 801099a:	b29b      	uxth	r3, r3
 801099c:	fa0f fc83 	sxth.w	ip, r3
 80109a0:	4565      	cmp	r5, ip
 80109a2:	da18      	bge.n	80109d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80109a4:	454f      	cmp	r7, r9
 80109a6:	bfb8      	it	lt
 80109a8:	464f      	movlt	r7, r9
 80109aa:	42b5      	cmp	r5, r6
 80109ac:	bfb8      	it	lt
 80109ae:	4635      	movlt	r5, r6
 80109b0:	45f0      	cmp	r8, lr
 80109b2:	bfd8      	it	le
 80109b4:	4622      	movle	r2, r4
 80109b6:	1bd2      	subs	r2, r2, r7
 80109b8:	8082      	strh	r2, [r0, #4]
 80109ba:	884a      	ldrh	r2, [r1, #2]
 80109bc:	88c9      	ldrh	r1, [r1, #6]
 80109be:	8007      	strh	r7, [r0, #0]
 80109c0:	440a      	add	r2, r1
 80109c2:	b292      	uxth	r2, r2
 80109c4:	b211      	sxth	r1, r2
 80109c6:	458c      	cmp	ip, r1
 80109c8:	bfa8      	it	ge
 80109ca:	4613      	movge	r3, r2
 80109cc:	1b5b      	subs	r3, r3, r5
 80109ce:	80c3      	strh	r3, [r0, #6]
 80109d0:	8045      	strh	r5, [r0, #2]
 80109d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80109d6:	2300      	movs	r3, #0
 80109d8:	8003      	strh	r3, [r0, #0]
 80109da:	8043      	strh	r3, [r0, #2]
 80109dc:	8083      	strh	r3, [r0, #4]
 80109de:	80c3      	strh	r3, [r0, #6]
 80109e0:	e7f7      	b.n	80109d2 <_ZN8touchgfx4RectaNERKS0_+0x76>

080109e2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 80109e2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80109e6:	2b00      	cmp	r3, #0
 80109e8:	dd06      	ble.n	80109f8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 80109ea:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 80109ee:	2800      	cmp	r0, #0
 80109f0:	bfcc      	ite	gt
 80109f2:	2000      	movgt	r0, #0
 80109f4:	2001      	movle	r0, #1
 80109f6:	4770      	bx	lr
 80109f8:	2001      	movs	r0, #1
 80109fa:	4770      	bx	lr

080109fc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80109fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a00:	2300      	movs	r3, #0
 8010a02:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010a04:	8003      	strh	r3, [r0, #0]
 8010a06:	4604      	mov	r4, r0
 8010a08:	8043      	strh	r3, [r0, #2]
 8010a0a:	8083      	strh	r3, [r0, #4]
 8010a0c:	80c3      	strh	r3, [r0, #6]
 8010a0e:	2d00      	cmp	r5, #0
 8010a10:	d040      	beq.n	8010a94 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010a12:	1d28      	adds	r0, r5, #4
 8010a14:	f7ff ffe5 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a18:	b988      	cbnz	r0, 8010a3e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010a1a:	4620      	mov	r0, r4
 8010a1c:	f7ff ffe1 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a20:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010a24:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010a28:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010a2c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010a30:	b138      	cbz	r0, 8010a42 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010a32:	8022      	strh	r2, [r4, #0]
 8010a34:	8063      	strh	r3, [r4, #2]
 8010a36:	f8a4 e004 	strh.w	lr, [r4, #4]
 8010a3a:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010a3e:	69ad      	ldr	r5, [r5, #24]
 8010a40:	e7e5      	b.n	8010a0e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010a42:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010a46:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010a4a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010a4e:	4290      	cmp	r0, r2
 8010a50:	4607      	mov	r7, r0
 8010a52:	bfa8      	it	ge
 8010a54:	4617      	movge	r7, r2
 8010a56:	4472      	add	r2, lr
 8010a58:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010a5c:	8027      	strh	r7, [r4, #0]
 8010a5e:	4299      	cmp	r1, r3
 8010a60:	460e      	mov	r6, r1
 8010a62:	4440      	add	r0, r8
 8010a64:	bfa8      	it	ge
 8010a66:	461e      	movge	r6, r3
 8010a68:	4471      	add	r1, lr
 8010a6a:	4463      	add	r3, ip
 8010a6c:	b200      	sxth	r0, r0
 8010a6e:	b212      	sxth	r2, r2
 8010a70:	b209      	sxth	r1, r1
 8010a72:	b21b      	sxth	r3, r3
 8010a74:	4290      	cmp	r0, r2
 8010a76:	bfac      	ite	ge
 8010a78:	ebc7 0200 	rsbge	r2, r7, r0
 8010a7c:	ebc7 0202 	rsblt	r2, r7, r2
 8010a80:	4299      	cmp	r1, r3
 8010a82:	bfac      	ite	ge
 8010a84:	ebc6 0301 	rsbge	r3, r6, r1
 8010a88:	ebc6 0303 	rsblt	r3, r6, r3
 8010a8c:	8066      	strh	r6, [r4, #2]
 8010a8e:	80a2      	strh	r2, [r4, #4]
 8010a90:	80e3      	strh	r3, [r4, #6]
 8010a92:	e7d4      	b.n	8010a3e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010a94:	4620      	mov	r0, r4
 8010a96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010a9a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010a9a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010a9e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010aa2:	b383      	cbz	r3, 8010b06 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010aa4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010aa6:	b374      	cbz	r4, 8010b06 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010aa8:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010aac:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010ab0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010ab4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010ab8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010abc:	b303      	cbz	r3, 8010b00 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010abe:	4668      	mov	r0, sp
 8010ac0:	1d21      	adds	r1, r4, #4
 8010ac2:	f8ad 5000 	strh.w	r5, [sp]
 8010ac6:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010aca:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010ace:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010ad2:	f7ff ff43 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 8010ad6:	4668      	mov	r0, sp
 8010ad8:	f7ff ff83 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010adc:	b980      	cbnz	r0, 8010b00 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010ade:	f8bd 3000 	ldrh.w	r3, [sp]
 8010ae2:	88a2      	ldrh	r2, [r4, #4]
 8010ae4:	1a9b      	subs	r3, r3, r2
 8010ae6:	f8ad 3000 	strh.w	r3, [sp]
 8010aea:	88e2      	ldrh	r2, [r4, #6]
 8010aec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010af0:	1a9b      	subs	r3, r3, r2
 8010af2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010af6:	6823      	ldr	r3, [r4, #0]
 8010af8:	4669      	mov	r1, sp
 8010afa:	689b      	ldr	r3, [r3, #8]
 8010afc:	4620      	mov	r0, r4
 8010afe:	4798      	blx	r3
 8010b00:	69a4      	ldr	r4, [r4, #24]
 8010b02:	2c00      	cmp	r4, #0
 8010b04:	d1d8      	bne.n	8010ab8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010b06:	b002      	add	sp, #8
 8010b08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010b0c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010b0c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010b0e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010b12:	460d      	mov	r5, r1
 8010b14:	4616      	mov	r6, r2
 8010b16:	b323      	cbz	r3, 8010b62 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010b18:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010b1a:	b314      	cbz	r4, 8010b62 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010b1c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010b20:	b1eb      	cbz	r3, 8010b5e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010b22:	6828      	ldr	r0, [r5, #0]
 8010b24:	6869      	ldr	r1, [r5, #4]
 8010b26:	466b      	mov	r3, sp
 8010b28:	c303      	stmia	r3!, {r0, r1}
 8010b2a:	4668      	mov	r0, sp
 8010b2c:	1d21      	adds	r1, r4, #4
 8010b2e:	f7ff ff15 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 8010b32:	4668      	mov	r0, sp
 8010b34:	f7ff ff55 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010b38:	b988      	cbnz	r0, 8010b5e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010b3a:	f8bd 3000 	ldrh.w	r3, [sp]
 8010b3e:	88a2      	ldrh	r2, [r4, #4]
 8010b40:	1a9b      	subs	r3, r3, r2
 8010b42:	f8ad 3000 	strh.w	r3, [sp]
 8010b46:	88e2      	ldrh	r2, [r4, #6]
 8010b48:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010b4c:	1a9b      	subs	r3, r3, r2
 8010b4e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010b52:	6823      	ldr	r3, [r4, #0]
 8010b54:	4632      	mov	r2, r6
 8010b56:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010b58:	4669      	mov	r1, sp
 8010b5a:	4620      	mov	r0, r4
 8010b5c:	4798      	blx	r3
 8010b5e:	69a4      	ldr	r4, [r4, #24]
 8010b60:	e7db      	b.n	8010b1a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010b62:	b002      	add	sp, #8
 8010b64:	bd70      	pop	{r4, r5, r6, pc}

08010b66 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010b66:	b513      	push	{r0, r1, r4, lr}
 8010b68:	6803      	ldr	r3, [r0, #0]
 8010b6a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8010b6e:	2300      	movs	r3, #0
 8010b70:	e9cd 3300 	strd	r3, r3, [sp]
 8010b74:	466b      	mov	r3, sp
 8010b76:	47a0      	blx	r4
 8010b78:	b002      	add	sp, #8
 8010b7a:	bd10      	pop	{r4, pc}

08010b7c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8010b7c:	2301      	movs	r3, #1
 8010b7e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010b82:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010b86:	4770      	bx	lr

08010b88 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010b88:	2301      	movs	r3, #1
 8010b8a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010b8e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010b92:	4770      	bx	lr

08010b94 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010b94:	6843      	ldr	r3, [r0, #4]
 8010b96:	2201      	movs	r2, #1
 8010b98:	725a      	strb	r2, [r3, #9]
 8010b9a:	6840      	ldr	r0, [r0, #4]
 8010b9c:	6803      	ldr	r3, [r0, #0]
 8010b9e:	691b      	ldr	r3, [r3, #16]
 8010ba0:	4718      	bx	r3

08010ba2 <_ZN8touchgfx3HAL8flushDMAEv>:
 8010ba2:	6840      	ldr	r0, [r0, #4]
 8010ba4:	6803      	ldr	r3, [r0, #0]
 8010ba6:	689b      	ldr	r3, [r3, #8]
 8010ba8:	4718      	bx	r3

08010baa <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010baa:	b530      	push	{r4, r5, lr}
 8010bac:	b08b      	sub	sp, #44	; 0x2c
 8010bae:	6804      	ldr	r4, [r0, #0]
 8010bb0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8010bb4:	9509      	str	r5, [sp, #36]	; 0x24
 8010bb6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8010bba:	9508      	str	r5, [sp, #32]
 8010bbc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8010bc0:	9507      	str	r5, [sp, #28]
 8010bc2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8010bc6:	9506      	str	r5, [sp, #24]
 8010bc8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8010bcc:	9505      	str	r5, [sp, #20]
 8010bce:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8010bd2:	9504      	str	r5, [sp, #16]
 8010bd4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8010bd8:	9503      	str	r5, [sp, #12]
 8010bda:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8010bde:	9502      	str	r5, [sp, #8]
 8010be0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8010be4:	e9cd 3500 	strd	r3, r5, [sp]
 8010be8:	4613      	mov	r3, r2
 8010bea:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8010bec:	2200      	movs	r2, #0
 8010bee:	47a0      	blx	r4
 8010bf0:	b00b      	add	sp, #44	; 0x2c
 8010bf2:	bd30      	pop	{r4, r5, pc}

08010bf4 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010bf4:	4b04      	ldr	r3, [pc, #16]	; (8010c08 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010bf6:	781b      	ldrb	r3, [r3, #0]
 8010bf8:	b123      	cbz	r3, 8010c04 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010bfa:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8010bfe:	f080 0001 	eor.w	r0, r0, #1
 8010c02:	4770      	bx	lr
 8010c04:	2001      	movs	r0, #1
 8010c06:	4770      	bx	lr
 8010c08:	20012db2 	.word	0x20012db2

08010c0c <_ZN8touchgfx3HAL8endFrameEv>:
 8010c0c:	b510      	push	{r4, lr}
 8010c0e:	4604      	mov	r4, r0
 8010c10:	6840      	ldr	r0, [r0, #4]
 8010c12:	6803      	ldr	r3, [r0, #0]
 8010c14:	689b      	ldr	r3, [r3, #8]
 8010c16:	4798      	blx	r3
 8010c18:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8010c1c:	b113      	cbz	r3, 8010c24 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010c1e:	2301      	movs	r3, #1
 8010c20:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010c24:	bd10      	pop	{r4, pc}

08010c26 <_ZN8touchgfx3HAL10initializeEv>:
 8010c26:	b510      	push	{r4, lr}
 8010c28:	4604      	mov	r4, r0
 8010c2a:	f7f1 fd11 	bl	8002650 <_ZN8touchgfx10OSWrappers10initializeEv>
 8010c2e:	f7f1 fc1d 	bl	800246c <_ZN8touchgfx4GPIO4initEv>
 8010c32:	6860      	ldr	r0, [r4, #4]
 8010c34:	6803      	ldr	r3, [r0, #0]
 8010c36:	68db      	ldr	r3, [r3, #12]
 8010c38:	4798      	blx	r3
 8010c3a:	68e0      	ldr	r0, [r4, #12]
 8010c3c:	6803      	ldr	r3, [r0, #0]
 8010c3e:	689b      	ldr	r3, [r3, #8]
 8010c40:	4798      	blx	r3
 8010c42:	6823      	ldr	r3, [r4, #0]
 8010c44:	4620      	mov	r0, r4
 8010c46:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010c48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010c4c:	4718      	bx	r3
	...

08010c50 <_ZN8touchgfx3HAL4tickEv>:
 8010c50:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010c52:	6803      	ldr	r3, [r0, #0]
 8010c54:	4d5b      	ldr	r5, [pc, #364]	; (8010dc4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010c56:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8010c5a:	4604      	mov	r4, r0
 8010c5c:	4798      	blx	r3
 8010c5e:	2800      	cmp	r0, #0
 8010c60:	f000 8095 	beq.w	8010d8e <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010c64:	2001      	movs	r0, #1
 8010c66:	f7f1 fbb3 	bl	80023d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010c6a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8010c6e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010c72:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8010c76:	2600      	movs	r6, #0
 8010c78:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8010c7c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8010c80:	b133      	cbz	r3, 8010c90 <_ZN8touchgfx3HAL4tickEv+0x40>
 8010c82:	6823      	ldr	r3, [r4, #0]
 8010c84:	4620      	mov	r0, r4
 8010c86:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8010c8a:	4798      	blx	r3
 8010c8c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8010c90:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010c94:	6862      	ldr	r2, [r4, #4]
 8010c96:	f083 0301 	eor.w	r3, r3, #1
 8010c9a:	7253      	strb	r3, [r2, #9]
 8010c9c:	2601      	movs	r6, #1
 8010c9e:	702e      	strb	r6, [r5, #0]
 8010ca0:	f004 ff6e 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
 8010ca4:	6803      	ldr	r3, [r0, #0]
 8010ca6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010ca8:	4798      	blx	r3
 8010caa:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010cae:	b90b      	cbnz	r3, 8010cb4 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010cb0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8010cb4:	f004 ff64 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
 8010cb8:	6803      	ldr	r3, [r0, #0]
 8010cba:	695b      	ldr	r3, [r3, #20]
 8010cbc:	4798      	blx	r3
 8010cbe:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010cc0:	6803      	ldr	r3, [r0, #0]
 8010cc2:	691b      	ldr	r3, [r3, #16]
 8010cc4:	4798      	blx	r3
 8010cc6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8010cca:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8010cce:	3b01      	subs	r3, #1
 8010cd0:	b2db      	uxtb	r3, r3
 8010cd2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010cd6:	b10a      	cbz	r2, 8010cdc <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010cd8:	2b00      	cmp	r3, #0
 8010cda:	d1eb      	bne.n	8010cb4 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010cdc:	4a3a      	ldr	r2, [pc, #232]	; (8010dc8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8010cde:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8010ce2:	7813      	ldrb	r3, [r2, #0]
 8010ce4:	3301      	adds	r3, #1
 8010ce6:	b25b      	sxtb	r3, r3
 8010ce8:	4299      	cmp	r1, r3
 8010cea:	7013      	strb	r3, [r2, #0]
 8010cec:	dc10      	bgt.n	8010d10 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010cee:	68e0      	ldr	r0, [r4, #12]
 8010cf0:	2300      	movs	r3, #0
 8010cf2:	7013      	strb	r3, [r2, #0]
 8010cf4:	6803      	ldr	r3, [r0, #0]
 8010cf6:	aa03      	add	r2, sp, #12
 8010cf8:	68db      	ldr	r3, [r3, #12]
 8010cfa:	a902      	add	r1, sp, #8
 8010cfc:	4798      	blx	r3
 8010cfe:	6823      	ldr	r3, [r4, #0]
 8010d00:	2800      	cmp	r0, #0
 8010d02:	d050      	beq.n	8010da6 <_ZN8touchgfx3HAL4tickEv+0x156>
 8010d04:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010d08:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010d0c:	4620      	mov	r0, r4
 8010d0e:	4798      	blx	r3
 8010d10:	6960      	ldr	r0, [r4, #20]
 8010d12:	2300      	movs	r3, #0
 8010d14:	f88d 3007 	strb.w	r3, [sp, #7]
 8010d18:	b158      	cbz	r0, 8010d32 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010d1a:	6803      	ldr	r3, [r0, #0]
 8010d1c:	f10d 0107 	add.w	r1, sp, #7
 8010d20:	68db      	ldr	r3, [r3, #12]
 8010d22:	4798      	blx	r3
 8010d24:	b128      	cbz	r0, 8010d32 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010d26:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010d28:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010d2c:	6803      	ldr	r3, [r0, #0]
 8010d2e:	68db      	ldr	r3, [r3, #12]
 8010d30:	4798      	blx	r3
 8010d32:	f104 001c 	add.w	r0, r4, #28
 8010d36:	f015 feb9 	bl	8026aac <_ZN8touchgfx8Gestures4tickEv>
 8010d3a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8010d3e:	b30b      	cbz	r3, 8010d84 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010d40:	6920      	ldr	r0, [r4, #16]
 8010d42:	6803      	ldr	r3, [r0, #0]
 8010d44:	691b      	ldr	r3, [r3, #16]
 8010d46:	4798      	blx	r3
 8010d48:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010d4a:	4606      	mov	r6, r0
 8010d4c:	b903      	cbnz	r3, 8010d50 <_ZN8touchgfx3HAL4tickEv+0x100>
 8010d4e:	6760      	str	r0, [r4, #116]	; 0x74
 8010d50:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010d52:	4a1e      	ldr	r2, [pc, #120]	; (8010dcc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010d54:	1af3      	subs	r3, r6, r3
 8010d56:	4293      	cmp	r3, r2
 8010d58:	d914      	bls.n	8010d84 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010d5a:	6920      	ldr	r0, [r4, #16]
 8010d5c:	6803      	ldr	r3, [r0, #0]
 8010d5e:	699b      	ldr	r3, [r3, #24]
 8010d60:	4798      	blx	r3
 8010d62:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010d64:	2264      	movs	r2, #100	; 0x64
 8010d66:	1af3      	subs	r3, r6, r3
 8010d68:	fbb3 f3f2 	udiv	r3, r3, r2
 8010d6c:	fbb0 f0f3 	udiv	r0, r0, r3
 8010d70:	2800      	cmp	r0, #0
 8010d72:	dc1d      	bgt.n	8010db0 <_ZN8touchgfx3HAL4tickEv+0x160>
 8010d74:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8010d78:	6920      	ldr	r0, [r4, #16]
 8010d7a:	6803      	ldr	r3, [r0, #0]
 8010d7c:	2100      	movs	r1, #0
 8010d7e:	69db      	ldr	r3, [r3, #28]
 8010d80:	4798      	blx	r3
 8010d82:	6766      	str	r6, [r4, #116]	; 0x74
 8010d84:	f004 fefc 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
 8010d88:	6803      	ldr	r3, [r0, #0]
 8010d8a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010d8c:	4798      	blx	r3
 8010d8e:	6823      	ldr	r3, [r4, #0]
 8010d90:	4620      	mov	r0, r4
 8010d92:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010d96:	4798      	blx	r3
 8010d98:	2001      	movs	r0, #1
 8010d9a:	f7f1 fb31 	bl	8002400 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010d9e:	2300      	movs	r3, #0
 8010da0:	702b      	strb	r3, [r5, #0]
 8010da2:	b004      	add	sp, #16
 8010da4:	bd70      	pop	{r4, r5, r6, pc}
 8010da6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8010daa:	4620      	mov	r0, r4
 8010dac:	4798      	blx	r3
 8010dae:	e7af      	b.n	8010d10 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010db0:	2863      	cmp	r0, #99	; 0x63
 8010db2:	bfcb      	itete	gt
 8010db4:	2300      	movgt	r3, #0
 8010db6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8010dba:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8010dbe:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8010dc2:	e7d9      	b.n	8010d78 <_ZN8touchgfx3HAL4tickEv+0x128>
 8010dc4:	20012db8 	.word	0x20012db8
 8010dc8:	20012db9 	.word	0x20012db9
 8010dcc:	05f5e100 	.word	0x05f5e100

08010dd0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010dd0:	b510      	push	{r4, lr}
 8010dd2:	4604      	mov	r4, r0
 8010dd4:	f7f1 fc6c 	bl	80026b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010dd8:	6863      	ldr	r3, [r4, #4]
 8010dda:	2200      	movs	r2, #0
 8010ddc:	729a      	strb	r2, [r3, #10]
 8010dde:	bd10      	pop	{r4, pc}

08010de0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010de0:	65c1      	str	r1, [r0, #92]	; 0x5c
 8010de2:	301c      	adds	r0, #28
 8010de4:	f015 be60 	b.w	8026aa8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010de8 <_ZN8touchgfx3HAL5touchEll>:
 8010de8:	b530      	push	{r4, r5, lr}
 8010dea:	b087      	sub	sp, #28
 8010dec:	4604      	mov	r4, r0
 8010dee:	a804      	add	r0, sp, #16
 8010df0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010df4:	f004 fc90 	bl	8015718 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010df8:	9b04      	ldr	r3, [sp, #16]
 8010dfa:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010dfe:	a906      	add	r1, sp, #24
 8010e00:	9b05      	ldr	r3, [sp, #20]
 8010e02:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010e06:	a803      	add	r0, sp, #12
 8010e08:	f004 fcd8 	bl	80157bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8010e0c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8010e10:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010e14:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010e18:	f104 001c 	add.w	r0, r4, #28
 8010e1c:	b189      	cbz	r1, 8010e42 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8010e1e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8010e22:	9300      	str	r3, [sp, #0]
 8010e24:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8010e28:	4613      	mov	r3, r2
 8010e2a:	462a      	mov	r2, r5
 8010e2c:	f015 fe4c 	bl	8026ac8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010e30:	b128      	cbz	r0, 8010e3e <_ZN8touchgfx3HAL5touchEll+0x56>
 8010e32:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010e36:	6623      	str	r3, [r4, #96]	; 0x60
 8010e38:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010e3c:	6663      	str	r3, [r4, #100]	; 0x64
 8010e3e:	b007      	add	sp, #28
 8010e40:	bd30      	pop	{r4, r5, pc}
 8010e42:	f015 fe81 	bl	8026b48 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010e46:	2301      	movs	r3, #1
 8010e48:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010e4c:	e7f1      	b.n	8010e32 <_ZN8touchgfx3HAL5touchEll+0x4a>

08010e4e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8010e4e:	b510      	push	{r4, lr}
 8010e50:	2b00      	cmp	r3, #0
 8010e52:	d046      	beq.n	8010ee2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010e54:	ea81 0002 	eor.w	r0, r1, r2
 8010e58:	07c4      	lsls	r4, r0, #31
 8010e5a:	d508      	bpl.n	8010e6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8010e5c:	440b      	add	r3, r1
 8010e5e:	3a01      	subs	r2, #1
 8010e60:	428b      	cmp	r3, r1
 8010e62:	d93e      	bls.n	8010ee2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010e64:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010e68:	f801 0b01 	strb.w	r0, [r1], #1
 8010e6c:	e7f8      	b.n	8010e60 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8010e6e:	07d0      	lsls	r0, r2, #31
 8010e70:	bf42      	ittt	mi
 8010e72:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010e76:	f801 0b01 	strbmi.w	r0, [r1], #1
 8010e7a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8010e7e:	2b01      	cmp	r3, #1
 8010e80:	d911      	bls.n	8010ea6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010e82:	ea81 0402 	eor.w	r4, r1, r2
 8010e86:	07a4      	lsls	r4, r4, #30
 8010e88:	4610      	mov	r0, r2
 8010e8a:	d022      	beq.n	8010ed2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8010e8c:	f023 0401 	bic.w	r4, r3, #1
 8010e90:	440c      	add	r4, r1
 8010e92:	428c      	cmp	r4, r1
 8010e94:	4602      	mov	r2, r0
 8010e96:	d904      	bls.n	8010ea2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010e98:	8812      	ldrh	r2, [r2, #0]
 8010e9a:	f821 2b02 	strh.w	r2, [r1], #2
 8010e9e:	3002      	adds	r0, #2
 8010ea0:	e7f7      	b.n	8010e92 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8010ea2:	f003 0301 	and.w	r3, r3, #1
 8010ea6:	f023 0003 	bic.w	r0, r3, #3
 8010eaa:	4408      	add	r0, r1
 8010eac:	4288      	cmp	r0, r1
 8010eae:	4614      	mov	r4, r2
 8010eb0:	d904      	bls.n	8010ebc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8010eb2:	6824      	ldr	r4, [r4, #0]
 8010eb4:	f841 4b04 	str.w	r4, [r1], #4
 8010eb8:	3204      	adds	r2, #4
 8010eba:	e7f7      	b.n	8010eac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8010ebc:	f003 0303 	and.w	r3, r3, #3
 8010ec0:	440b      	add	r3, r1
 8010ec2:	3a01      	subs	r2, #1
 8010ec4:	428b      	cmp	r3, r1
 8010ec6:	d90c      	bls.n	8010ee2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010ec8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010ecc:	f801 0b01 	strb.w	r0, [r1], #1
 8010ed0:	e7f8      	b.n	8010ec4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8010ed2:	0790      	lsls	r0, r2, #30
 8010ed4:	d0e7      	beq.n	8010ea6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010ed6:	f832 0b02 	ldrh.w	r0, [r2], #2
 8010eda:	f821 0b02 	strh.w	r0, [r1], #2
 8010ede:	3b02      	subs	r3, #2
 8010ee0:	e7e1      	b.n	8010ea6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010ee2:	2001      	movs	r0, #1
 8010ee4:	bd10      	pop	{r4, pc}

08010ee6 <_ZN8touchgfx3HAL7noTouchEv>:
 8010ee6:	b510      	push	{r4, lr}
 8010ee8:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8010eec:	4604      	mov	r4, r0
 8010eee:	b153      	cbz	r3, 8010f06 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010ef0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8010ef4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8010ef8:	2101      	movs	r1, #1
 8010efa:	301c      	adds	r0, #28
 8010efc:	f015 fe24 	bl	8026b48 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010f00:	2300      	movs	r3, #0
 8010f02:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010f06:	bd10      	pop	{r4, pc}

08010f08 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010f08:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010f0c:	b085      	sub	sp, #20
 8010f0e:	ad04      	add	r5, sp, #16
 8010f10:	4604      	mov	r4, r0
 8010f12:	2000      	movs	r0, #0
 8010f14:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010f18:	69a0      	ldr	r0, [r4, #24]
 8010f1a:	6806      	ldr	r6, [r0, #0]
 8010f1c:	9501      	str	r5, [sp, #4]
 8010f1e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8010f22:	9500      	str	r5, [sp, #0]
 8010f24:	6835      	ldr	r5, [r6, #0]
 8010f26:	4699      	mov	r9, r3
 8010f28:	460f      	mov	r7, r1
 8010f2a:	4690      	mov	r8, r2
 8010f2c:	47a8      	blx	r5
 8010f2e:	4d10      	ldr	r5, [pc, #64]	; (8010f70 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010f30:	4606      	mov	r6, r0
 8010f32:	f8a5 9000 	strh.w	r9, [r5]
 8010f36:	f7f3 fbc1 	bl	80046bc <_ZN8touchgfx3HAL3lcdEv>
 8010f3a:	6803      	ldr	r3, [r0, #0]
 8010f3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010f3e:	4798      	blx	r3
 8010f40:	b128      	cbz	r0, 8010f4e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010f42:	2801      	cmp	r0, #1
 8010f44:	d00b      	beq.n	8010f5e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010f46:	4630      	mov	r0, r6
 8010f48:	b005      	add	sp, #20
 8010f4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010f4e:	882b      	ldrh	r3, [r5, #0]
 8010f50:	fb08 7203 	mla	r2, r8, r3, r7
 8010f54:	9b03      	ldr	r3, [sp, #12]
 8010f56:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8010f5a:	63e3      	str	r3, [r4, #60]	; 0x3c
 8010f5c:	e7f3      	b.n	8010f46 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010f5e:	882a      	ldrh	r2, [r5, #0]
 8010f60:	9b03      	ldr	r3, [sp, #12]
 8010f62:	fb08 7202 	mla	r2, r8, r2, r7
 8010f66:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010f6a:	1a9a      	subs	r2, r3, r2
 8010f6c:	63e2      	str	r2, [r4, #60]	; 0x3c
 8010f6e:	e7ea      	b.n	8010f46 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010f70:	20012dae 	.word	0x20012dae

08010f74 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010f74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010f76:	b08b      	sub	sp, #44	; 0x2c
 8010f78:	4617      	mov	r7, r2
 8010f7a:	4604      	mov	r4, r0
 8010f7c:	460e      	mov	r6, r1
 8010f7e:	461d      	mov	r5, r3
 8010f80:	f7f3 fb9c 	bl	80046bc <_ZN8touchgfx3HAL3lcdEv>
 8010f84:	6803      	ldr	r3, [r0, #0]
 8010f86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010f88:	4798      	blx	r3
 8010f8a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010f8e:	9007      	str	r0, [sp, #28]
 8010f90:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010f94:	4b0d      	ldr	r3, [pc, #52]	; (8010fcc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010f96:	6822      	ldr	r2, [r4, #0]
 8010f98:	881b      	ldrh	r3, [r3, #0]
 8010f9a:	9306      	str	r3, [sp, #24]
 8010f9c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010fa0:	9305      	str	r3, [sp, #20]
 8010fa2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8010fa6:	9304      	str	r3, [sp, #16]
 8010fa8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010fac:	9303      	str	r3, [sp, #12]
 8010fae:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010fb2:	9302      	str	r3, [sp, #8]
 8010fb4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010fb8:	e9cd 5300 	strd	r5, r3, [sp]
 8010fbc:	4631      	mov	r1, r6
 8010fbe:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8010fc0:	463b      	mov	r3, r7
 8010fc2:	2200      	movs	r2, #0
 8010fc4:	4620      	mov	r0, r4
 8010fc6:	47a8      	blx	r5
 8010fc8:	b00b      	add	sp, #44	; 0x2c
 8010fca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010fcc:	20012dae 	.word	0x20012dae

08010fd0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8010fd0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010fd4:	4698      	mov	r8, r3
 8010fd6:	6803      	ldr	r3, [r0, #0]
 8010fd8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8010fda:	4b15      	ldr	r3, [pc, #84]	; (8011030 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8010fdc:	b08b      	sub	sp, #44	; 0x2c
 8010fde:	4617      	mov	r7, r2
 8010fe0:	f8b3 9000 	ldrh.w	r9, [r3]
 8010fe4:	460e      	mov	r6, r1
 8010fe6:	4604      	mov	r4, r0
 8010fe8:	f7f3 fb68 	bl	80046bc <_ZN8touchgfx3HAL3lcdEv>
 8010fec:	6803      	ldr	r3, [r0, #0]
 8010fee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010ff0:	4798      	blx	r3
 8010ff2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010ff6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010ffa:	2302      	movs	r3, #2
 8010ffc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8011000:	2301      	movs	r3, #1
 8011002:	9305      	str	r3, [sp, #20]
 8011004:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011008:	9304      	str	r3, [sp, #16]
 801100a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801100e:	9303      	str	r3, [sp, #12]
 8011010:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011014:	9302      	str	r3, [sp, #8]
 8011016:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801101a:	2200      	movs	r2, #0
 801101c:	e9cd 8300 	strd	r8, r3, [sp]
 8011020:	4631      	mov	r1, r6
 8011022:	463b      	mov	r3, r7
 8011024:	4620      	mov	r0, r4
 8011026:	47a8      	blx	r5
 8011028:	b00b      	add	sp, #44	; 0x2c
 801102a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801102e:	bf00      	nop
 8011030:	20012dae 	.word	0x20012dae

08011034 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8011034:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011038:	4698      	mov	r8, r3
 801103a:	6803      	ldr	r3, [r0, #0]
 801103c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 801103e:	4b11      	ldr	r3, [pc, #68]	; (8011084 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8011040:	b087      	sub	sp, #28
 8011042:	f8b3 9000 	ldrh.w	r9, [r3]
 8011046:	460e      	mov	r6, r1
 8011048:	4617      	mov	r7, r2
 801104a:	4604      	mov	r4, r0
 801104c:	f7f3 fb36 	bl	80046bc <_ZN8touchgfx3HAL3lcdEv>
 8011050:	6803      	ldr	r3, [r0, #0]
 8011052:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011054:	4798      	blx	r3
 8011056:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801105a:	f8cd 900c 	str.w	r9, [sp, #12]
 801105e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8011062:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8011066:	9302      	str	r3, [sp, #8]
 8011068:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801106c:	9301      	str	r3, [sp, #4]
 801106e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011072:	9300      	str	r3, [sp, #0]
 8011074:	463a      	mov	r2, r7
 8011076:	4643      	mov	r3, r8
 8011078:	4631      	mov	r1, r6
 801107a:	4620      	mov	r0, r4
 801107c:	47a8      	blx	r5
 801107e:	b007      	add	sp, #28
 8011080:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011084:	20012dae 	.word	0x20012dae

08011088 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801108c:	4604      	mov	r4, r0
 801108e:	b08f      	sub	sp, #60	; 0x3c
 8011090:	4610      	mov	r0, r2
 8011092:	460d      	mov	r5, r1
 8011094:	4691      	mov	r9, r2
 8011096:	461e      	mov	r6, r3
 8011098:	f008 f8f0 	bl	801927c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801109c:	2800      	cmp	r0, #0
 801109e:	f000 809d 	beq.w	80111dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 80110a2:	6823      	ldr	r3, [r4, #0]
 80110a4:	f8df b198 	ldr.w	fp, [pc, #408]	; 8011240 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80110a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80110aa:	f8df a198 	ldr.w	sl, [pc, #408]	; 8011244 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80110ae:	4f61      	ldr	r7, [pc, #388]	; (8011234 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80110b0:	4620      	mov	r0, r4
 80110b2:	4798      	blx	r3
 80110b4:	6823      	ldr	r3, [r4, #0]
 80110b6:	4620      	mov	r0, r4
 80110b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80110ba:	4798      	blx	r3
 80110bc:	f8bb 3000 	ldrh.w	r3, [fp]
 80110c0:	9301      	str	r3, [sp, #4]
 80110c2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80110c6:	f8ba 3000 	ldrh.w	r3, [sl]
 80110ca:	9302      	str	r3, [sp, #8]
 80110cc:	883b      	ldrh	r3, [r7, #0]
 80110ce:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80110d2:	9303      	str	r3, [sp, #12]
 80110d4:	4b58      	ldr	r3, [pc, #352]	; (8011238 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80110d6:	9305      	str	r3, [sp, #20]
 80110d8:	881a      	ldrh	r2, [r3, #0]
 80110da:	9204      	str	r2, [sp, #16]
 80110dc:	4640      	mov	r0, r8
 80110de:	f008 f961 	bl	80193a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80110e2:	8038      	strh	r0, [r7, #0]
 80110e4:	4640      	mov	r0, r8
 80110e6:	f008 f991 	bl	801940c <_ZNK8touchgfx6Bitmap9getHeightEv>
 80110ea:	9b05      	ldr	r3, [sp, #20]
 80110ec:	b280      	uxth	r0, r0
 80110ee:	8018      	strh	r0, [r3, #0]
 80110f0:	4b52      	ldr	r3, [pc, #328]	; (801123c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80110f2:	781b      	ldrb	r3, [r3, #0]
 80110f4:	2b00      	cmp	r3, #0
 80110f6:	d174      	bne.n	80111e2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 80110f8:	883b      	ldrh	r3, [r7, #0]
 80110fa:	f8ab 3000 	strh.w	r3, [fp]
 80110fe:	f8aa 0000 	strh.w	r0, [sl]
 8011102:	4648      	mov	r0, r9
 8011104:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8011108:	f008 f8b8 	bl	801927c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801110c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8011110:	2200      	movs	r2, #0
 8011112:	4611      	mov	r1, r2
 8011114:	4628      	mov	r0, r5
 8011116:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801111a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801111e:	f7f1 ff42 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8011122:	2301      	movs	r3, #1
 8011124:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8011128:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801112c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011130:	2b00      	cmp	r3, #0
 8011132:	dd5c      	ble.n	80111ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011134:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011138:	2b00      	cmp	r3, #0
 801113a:	dd58      	ble.n	80111ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801113c:	462a      	mov	r2, r5
 801113e:	ab0a      	add	r3, sp, #40	; 0x28
 8011140:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011144:	6851      	ldr	r1, [r2, #4]
 8011146:	c303      	stmia	r3!, {r0, r1}
 8011148:	4631      	mov	r1, r6
 801114a:	a80a      	add	r0, sp, #40	; 0x28
 801114c:	f7ff fc06 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 8011150:	4b38      	ldr	r3, [pc, #224]	; (8011234 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011152:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011156:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801115a:	2100      	movs	r1, #0
 801115c:	aa0a      	add	r2, sp, #40	; 0x28
 801115e:	4b36      	ldr	r3, [pc, #216]	; (8011238 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011160:	910c      	str	r1, [sp, #48]	; 0x30
 8011162:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011166:	f9b3 3000 	ldrsh.w	r3, [r3]
 801116a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801116e:	ab08      	add	r3, sp, #32
 8011170:	e883 0003 	stmia.w	r3, {r0, r1}
 8011174:	4618      	mov	r0, r3
 8011176:	a90c      	add	r1, sp, #48	; 0x30
 8011178:	f7ff fbf0 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 801117c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801117e:	2b00      	cmp	r3, #0
 8011180:	d13c      	bne.n	80111fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8011182:	2000      	movs	r0, #0
 8011184:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8011188:	2600      	movs	r6, #0
 801118a:	682a      	ldr	r2, [r5, #0]
 801118c:	696b      	ldr	r3, [r5, #20]
 801118e:	616e      	str	r6, [r5, #20]
 8011190:	9305      	str	r3, [sp, #20]
 8011192:	6892      	ldr	r2, [r2, #8]
 8011194:	a908      	add	r1, sp, #32
 8011196:	4628      	mov	r0, r5
 8011198:	4790      	blx	r2
 801119a:	9b05      	ldr	r3, [sp, #20]
 801119c:	616b      	str	r3, [r5, #20]
 801119e:	4652      	mov	r2, sl
 80111a0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 80111a4:	4649      	mov	r1, r9
 80111a6:	4628      	mov	r0, r5
 80111a8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80111ac:	f7f1 fefb 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 80111b0:	4b23      	ldr	r3, [pc, #140]	; (8011240 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80111b2:	9a01      	ldr	r2, [sp, #4]
 80111b4:	801a      	strh	r2, [r3, #0]
 80111b6:	4b23      	ldr	r3, [pc, #140]	; (8011244 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80111b8:	9a02      	ldr	r2, [sp, #8]
 80111ba:	801a      	strh	r2, [r3, #0]
 80111bc:	4b1d      	ldr	r3, [pc, #116]	; (8011234 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80111be:	9a03      	ldr	r2, [sp, #12]
 80111c0:	801a      	strh	r2, [r3, #0]
 80111c2:	4b1d      	ldr	r3, [pc, #116]	; (8011238 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80111c4:	9a04      	ldr	r2, [sp, #16]
 80111c6:	801a      	strh	r2, [r3, #0]
 80111c8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80111cc:	6823      	ldr	r3, [r4, #0]
 80111ce:	4620      	mov	r0, r4
 80111d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80111d2:	4798      	blx	r3
 80111d4:	6823      	ldr	r3, [r4, #0]
 80111d6:	4620      	mov	r0, r4
 80111d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80111da:	4798      	blx	r3
 80111dc:	b00f      	add	sp, #60	; 0x3c
 80111de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80111e2:	883b      	ldrh	r3, [r7, #0]
 80111e4:	f8ab 0000 	strh.w	r0, [fp]
 80111e8:	f8aa 3000 	strh.w	r3, [sl]
 80111ec:	e789      	b.n	8011102 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 80111ee:	462a      	mov	r2, r5
 80111f0:	ab0a      	add	r3, sp, #40	; 0x28
 80111f2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80111f6:	6851      	ldr	r1, [r2, #4]
 80111f8:	c303      	stmia	r3!, {r0, r1}
 80111fa:	e7a9      	b.n	8011150 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 80111fc:	a807      	add	r0, sp, #28
 80111fe:	f008 fa41 	bl	8019684 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011202:	4606      	mov	r6, r0
 8011204:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8011206:	6803      	ldr	r3, [r0, #0]
 8011208:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801120a:	4798      	blx	r3
 801120c:	4286      	cmp	r6, r0
 801120e:	d1b8      	bne.n	8011182 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011210:	f7f3 fa54 	bl	80046bc <_ZN8touchgfx3HAL3lcdEv>
 8011214:	6803      	ldr	r3, [r0, #0]
 8011216:	4606      	mov	r6, r0
 8011218:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801121a:	9305      	str	r3, [sp, #20]
 801121c:	a807      	add	r0, sp, #28
 801121e:	f008 fa31 	bl	8019684 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011222:	9b05      	ldr	r3, [sp, #20]
 8011224:	4601      	mov	r1, r0
 8011226:	4630      	mov	r0, r6
 8011228:	4798      	blx	r3
 801122a:	f080 0001 	eor.w	r0, r0, #1
 801122e:	b2c0      	uxtb	r0, r0
 8011230:	e7a8      	b.n	8011184 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8011232:	bf00      	nop
 8011234:	20012da8 	.word	0x20012da8
 8011238:	20012daa 	.word	0x20012daa
 801123c:	20012dac 	.word	0x20012dac
 8011240:	20012dae 	.word	0x20012dae
 8011244:	20012db0 	.word	0x20012db0

08011248 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8011248:	b510      	push	{r4, lr}
 801124a:	4b07      	ldr	r3, [pc, #28]	; (8011268 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 801124c:	781b      	ldrb	r3, [r3, #0]
 801124e:	4604      	mov	r4, r0
 8011250:	b13b      	cbz	r3, 8011262 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011252:	6803      	ldr	r3, [r0, #0]
 8011254:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011256:	4798      	blx	r3
 8011258:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801125a:	4283      	cmp	r3, r0
 801125c:	d101      	bne.n	8011262 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801125e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8011260:	bd10      	pop	{r4, pc}
 8011262:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011264:	e7fc      	b.n	8011260 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8011266:	bf00      	nop
 8011268:	20012db2 	.word	0x20012db2

0801126c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 801126c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011270:	b08a      	sub	sp, #40	; 0x28
 8011272:	461d      	mov	r5, r3
 8011274:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011278:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801127c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011280:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011284:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011288:	f8ad 301a 	strh.w	r3, [sp, #26]
 801128c:	2400      	movs	r4, #0
 801128e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011292:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8011296:	f8ad 301c 	strh.w	r3, [sp, #28]
 801129a:	4690      	mov	r8, r2
 801129c:	4607      	mov	r7, r0
 801129e:	9404      	str	r4, [sp, #16]
 80112a0:	f88d 4020 	strb.w	r4, [sp, #32]
 80112a4:	f7ff ffd0 	bl	8011248 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80112a8:	fb06 8505 	mla	r5, r6, r5, r8
 80112ac:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80112b0:	6878      	ldr	r0, [r7, #4]
 80112b2:	9505      	str	r5, [sp, #20]
 80112b4:	f8ad 601e 	strh.w	r6, [sp, #30]
 80112b8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80112bc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 80112c0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80112c4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80112c8:	6803      	ldr	r3, [r0, #0]
 80112ca:	a901      	add	r1, sp, #4
 80112cc:	685b      	ldr	r3, [r3, #4]
 80112ce:	4798      	blx	r3
 80112d0:	b00a      	add	sp, #40	; 0x28
 80112d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080112d6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80112d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80112da:	b08b      	sub	sp, #44	; 0x2c
 80112dc:	2400      	movs	r4, #0
 80112de:	461d      	mov	r5, r3
 80112e0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80112e4:	4688      	mov	r8, r1
 80112e6:	4691      	mov	r9, r2
 80112e8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 80112ec:	9404      	str	r4, [sp, #16]
 80112ee:	4607      	mov	r7, r0
 80112f0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80112f4:	f7ff ffa8 	bl	8011248 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80112f8:	fb06 9505 	mla	r5, r6, r5, r9
 80112fc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011300:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011304:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011308:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801130c:	6878      	ldr	r0, [r7, #4]
 801130e:	9505      	str	r5, [sp, #20]
 8011310:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011314:	f8ad 401c 	strh.w	r4, [sp, #28]
 8011318:	f8ad 601e 	strh.w	r6, [sp, #30]
 801131c:	f8cd 8010 	str.w	r8, [sp, #16]
 8011320:	f8ad 4020 	strh.w	r4, [sp, #32]
 8011324:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011328:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801132c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011330:	6803      	ldr	r3, [r0, #0]
 8011332:	a901      	add	r1, sp, #4
 8011334:	685b      	ldr	r3, [r3, #4]
 8011336:	4798      	blx	r3
 8011338:	b00b      	add	sp, #44	; 0x2c
 801133a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08011340 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8011340:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011344:	b08a      	sub	sp, #40	; 0x28
 8011346:	4698      	mov	r8, r3
 8011348:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 801134c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8011350:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8011354:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8011358:	2300      	movs	r3, #0
 801135a:	2d0b      	cmp	r5, #11
 801135c:	4606      	mov	r6, r0
 801135e:	9304      	str	r3, [sp, #16]
 8011360:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8011364:	d138      	bne.n	80113d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8011366:	2380      	movs	r3, #128	; 0x80
 8011368:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801136c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011370:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011374:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011378:	f8ad 301a 	strh.w	r3, [sp, #26]
 801137c:	f88d 0020 	strb.w	r0, [sp, #32]
 8011380:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011384:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011388:	4630      	mov	r0, r6
 801138a:	9203      	str	r2, [sp, #12]
 801138c:	f7ff ff5c 	bl	8011248 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011390:	2c0b      	cmp	r4, #11
 8011392:	bf98      	it	ls
 8011394:	4b1b      	ldrls	r3, [pc, #108]	; (8011404 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8011396:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801139a:	bf98      	it	ls
 801139c:	5d19      	ldrbls	r1, [r3, r4]
 801139e:	f8ad 701e 	strh.w	r7, [sp, #30]
 80113a2:	bf88      	it	hi
 80113a4:	2100      	movhi	r1, #0
 80113a6:	fb02 8307 	mla	r3, r2, r7, r8
 80113aa:	10c9      	asrs	r1, r1, #3
 80113ac:	fb01 0003 	mla	r0, r1, r3, r0
 80113b0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80113b4:	9005      	str	r0, [sp, #20]
 80113b6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80113ba:	6870      	ldr	r0, [r6, #4]
 80113bc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 80113c0:	2300      	movs	r3, #0
 80113c2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80113c6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80113ca:	6803      	ldr	r3, [r0, #0]
 80113cc:	a901      	add	r1, sp, #4
 80113ce:	685b      	ldr	r3, [r3, #4]
 80113d0:	4798      	blx	r3
 80113d2:	b00a      	add	sp, #40	; 0x28
 80113d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80113d8:	2d02      	cmp	r5, #2
 80113da:	d109      	bne.n	80113f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 80113dc:	28ff      	cmp	r0, #255	; 0xff
 80113de:	d105      	bne.n	80113ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 80113e0:	f1bc 0f00 	cmp.w	ip, #0
 80113e4:	bf14      	ite	ne
 80113e6:	2340      	movne	r3, #64	; 0x40
 80113e8:	2320      	moveq	r3, #32
 80113ea:	e7bd      	b.n	8011368 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80113ec:	2340      	movs	r3, #64	; 0x40
 80113ee:	e7bb      	b.n	8011368 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80113f0:	28ff      	cmp	r0, #255	; 0xff
 80113f2:	d105      	bne.n	8011400 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 80113f4:	f1bc 0f00 	cmp.w	ip, #0
 80113f8:	bf14      	ite	ne
 80113fa:	2304      	movne	r3, #4
 80113fc:	2301      	moveq	r3, #1
 80113fe:	e7b3      	b.n	8011368 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011400:	2304      	movs	r3, #4
 8011402:	e7b1      	b.n	8011368 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011404:	0802ec8c 	.word	0x0802ec8c

08011408 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801140c:	b08b      	sub	sp, #44	; 0x2c
 801140e:	461d      	mov	r5, r3
 8011410:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8011414:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8011418:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 801141c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011420:	bf14      	ite	ne
 8011422:	2308      	movne	r3, #8
 8011424:	2302      	moveq	r3, #2
 8011426:	2400      	movs	r4, #0
 8011428:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801142c:	4688      	mov	r8, r1
 801142e:	4693      	mov	fp, r2
 8011430:	9404      	str	r4, [sp, #16]
 8011432:	4607      	mov	r7, r0
 8011434:	f7ff ff08 	bl	8011248 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011438:	2e0b      	cmp	r6, #11
 801143a:	bf98      	it	ls
 801143c:	4b15      	ldrls	r3, [pc, #84]	; (8011494 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 801143e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011442:	bf98      	it	ls
 8011444:	5d9c      	ldrbls	r4, [r3, r6]
 8011446:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801144a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801144e:	fb05 b50a 	mla	r5, r5, sl, fp
 8011452:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8011456:	f8ad 301a 	strh.w	r3, [sp, #26]
 801145a:	10e4      	asrs	r4, r4, #3
 801145c:	fb04 0405 	mla	r4, r4, r5, r0
 8011460:	2300      	movs	r3, #0
 8011462:	6878      	ldr	r0, [r7, #4]
 8011464:	9405      	str	r4, [sp, #20]
 8011466:	f8ad 301c 	strh.w	r3, [sp, #28]
 801146a:	f8ad a01e 	strh.w	sl, [sp, #30]
 801146e:	f8cd 8010 	str.w	r8, [sp, #16]
 8011472:	f88d 9020 	strb.w	r9, [sp, #32]
 8011476:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 801147a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801147e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8011482:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8011486:	6803      	ldr	r3, [r0, #0]
 8011488:	a901      	add	r1, sp, #4
 801148a:	685b      	ldr	r3, [r3, #4]
 801148c:	4798      	blx	r3
 801148e:	b00b      	add	sp, #44	; 0x2c
 8011490:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011494:	0802ec8c 	.word	0x0802ec8c

08011498 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8011498:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801149c:	461e      	mov	r6, r3
 801149e:	4b0a      	ldr	r3, [pc, #40]	; (80114c8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80114a0:	460f      	mov	r7, r1
 80114a2:	881d      	ldrh	r5, [r3, #0]
 80114a4:	4690      	mov	r8, r2
 80114a6:	f7f3 f909 	bl	80046bc <_ZN8touchgfx3HAL3lcdEv>
 80114aa:	6803      	ldr	r3, [r0, #0]
 80114ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80114ae:	4798      	blx	r3
 80114b0:	280b      	cmp	r0, #11
 80114b2:	bf9a      	itte	ls
 80114b4:	4b05      	ldrls	r3, [pc, #20]	; (80114cc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80114b6:	5c1c      	ldrbls	r4, [r3, r0]
 80114b8:	2400      	movhi	r4, #0
 80114ba:	fb08 7005 	mla	r0, r8, r5, r7
 80114be:	10e4      	asrs	r4, r4, #3
 80114c0:	fb04 6000 	mla	r0, r4, r0, r6
 80114c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80114c8:	20012dae 	.word	0x20012dae
 80114cc:	0802ec8c 	.word	0x0802ec8c

080114d0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80114d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80114d2:	b08b      	sub	sp, #44	; 0x2c
 80114d4:	461f      	mov	r7, r3
 80114d6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80114da:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80114de:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80114e2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80114e6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80114ea:	f8ad 301a 	strh.w	r3, [sp, #26]
 80114ee:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80114f2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80114f6:	2500      	movs	r5, #0
 80114f8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80114fc:	f88d 3020 	strb.w	r3, [sp, #32]
 8011500:	4604      	mov	r4, r0
 8011502:	4616      	mov	r6, r2
 8011504:	9504      	str	r5, [sp, #16]
 8011506:	f7ff fe9f 	bl	8011248 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801150a:	463a      	mov	r2, r7
 801150c:	4631      	mov	r1, r6
 801150e:	4603      	mov	r3, r0
 8011510:	4620      	mov	r0, r4
 8011512:	f7ff ffc1 	bl	8011498 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011516:	4b0e      	ldr	r3, [pc, #56]	; (8011550 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011518:	9005      	str	r0, [sp, #20]
 801151a:	881b      	ldrh	r3, [r3, #0]
 801151c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011520:	f7f3 f8cc 	bl	80046bc <_ZN8touchgfx3HAL3lcdEv>
 8011524:	6803      	ldr	r3, [r0, #0]
 8011526:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011528:	4798      	blx	r3
 801152a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801152c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8011530:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011534:	9304      	str	r3, [sp, #16]
 8011536:	6860      	ldr	r0, [r4, #4]
 8011538:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801153c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011540:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8011544:	6803      	ldr	r3, [r0, #0]
 8011546:	a901      	add	r1, sp, #4
 8011548:	685b      	ldr	r3, [r3, #4]
 801154a:	4798      	blx	r3
 801154c:	b00b      	add	sp, #44	; 0x2c
 801154e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011550:	20012dae 	.word	0x20012dae

08011554 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8011554:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011556:	b08d      	sub	sp, #52	; 0x34
 8011558:	466b      	mov	r3, sp
 801155a:	e883 0006 	stmia.w	r3, {r1, r2}
 801155e:	2300      	movs	r3, #0
 8011560:	9306      	str	r3, [sp, #24]
 8011562:	6803      	ldr	r3, [r0, #0]
 8011564:	f8bd 6000 	ldrh.w	r6, [sp]
 8011568:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801156a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801156e:	2501      	movs	r5, #1
 8011570:	9503      	str	r5, [sp, #12]
 8011572:	4604      	mov	r4, r0
 8011574:	4798      	blx	r3
 8011576:	463a      	mov	r2, r7
 8011578:	4631      	mov	r1, r6
 801157a:	4603      	mov	r3, r0
 801157c:	4620      	mov	r0, r4
 801157e:	f7ff ff8b 	bl	8011498 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011582:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011584:	9307      	str	r3, [sp, #28]
 8011586:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801158a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801158e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011592:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011596:	4b0f      	ldr	r3, [pc, #60]	; (80115d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8011598:	9004      	str	r0, [sp, #16]
 801159a:	881b      	ldrh	r3, [r3, #0]
 801159c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80115a0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80115a4:	f7f3 f88a 	bl	80046bc <_ZN8touchgfx3HAL3lcdEv>
 80115a8:	6803      	ldr	r3, [r0, #0]
 80115aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80115ac:	4798      	blx	r3
 80115ae:	23ff      	movs	r3, #255	; 0xff
 80115b0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80115b4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80115b8:	6860      	ldr	r0, [r4, #4]
 80115ba:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80115be:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80115c2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80115c6:	6803      	ldr	r3, [r0, #0]
 80115c8:	a903      	add	r1, sp, #12
 80115ca:	685b      	ldr	r3, [r3, #4]
 80115cc:	4798      	blx	r3
 80115ce:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80115d0:	b00d      	add	sp, #52	; 0x34
 80115d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80115d4:	20012dae 	.word	0x20012dae

080115d8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80115d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80115dc:	b08c      	sub	sp, #48	; 0x30
 80115de:	461e      	mov	r6, r3
 80115e0:	466d      	mov	r5, sp
 80115e2:	2300      	movs	r3, #0
 80115e4:	e885 0006 	stmia.w	r5, {r1, r2}
 80115e8:	9306      	str	r3, [sp, #24]
 80115ea:	6803      	ldr	r3, [r0, #0]
 80115ec:	f8bd 7000 	ldrh.w	r7, [sp]
 80115f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80115f2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 80115f6:	2501      	movs	r5, #1
 80115f8:	9503      	str	r5, [sp, #12]
 80115fa:	4604      	mov	r4, r0
 80115fc:	4798      	blx	r3
 80115fe:	4642      	mov	r2, r8
 8011600:	4639      	mov	r1, r7
 8011602:	4603      	mov	r3, r0
 8011604:	4620      	mov	r0, r4
 8011606:	f7ff ff47 	bl	8011498 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801160a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801160e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011612:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011616:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801161a:	4b11      	ldr	r3, [pc, #68]	; (8011660 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 801161c:	9004      	str	r0, [sp, #16]
 801161e:	881b      	ldrh	r3, [r3, #0]
 8011620:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011624:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011626:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801162a:	9607      	str	r6, [sp, #28]
 801162c:	f7f3 f846 	bl	80046bc <_ZN8touchgfx3HAL3lcdEv>
 8011630:	6803      	ldr	r3, [r0, #0]
 8011632:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011634:	4798      	blx	r3
 8011636:	23ff      	movs	r3, #255	; 0xff
 8011638:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801163c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011640:	6860      	ldr	r0, [r4, #4]
 8011642:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011646:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801164a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801164e:	6803      	ldr	r3, [r0, #0]
 8011650:	a903      	add	r1, sp, #12
 8011652:	685b      	ldr	r3, [r3, #4]
 8011654:	4798      	blx	r3
 8011656:	4630      	mov	r0, r6
 8011658:	b00c      	add	sp, #48	; 0x30
 801165a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801165e:	bf00      	nop
 8011660:	20012dae 	.word	0x20012dae

08011664 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8011664:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011666:	b085      	sub	sp, #20
 8011668:	ac02      	add	r4, sp, #8
 801166a:	e884 0006 	stmia.w	r4, {r1, r2}
 801166e:	4605      	mov	r5, r0
 8011670:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8011674:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8011678:	f7ff fde6 	bl	8011248 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801167c:	463a      	mov	r2, r7
 801167e:	4603      	mov	r3, r0
 8011680:	4631      	mov	r1, r6
 8011682:	4628      	mov	r0, r5
 8011684:	f7ff ff08 	bl	8011498 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011688:	4a05      	ldr	r2, [pc, #20]	; (80116a0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 801168a:	682b      	ldr	r3, [r5, #0]
 801168c:	8812      	ldrh	r2, [r2, #0]
 801168e:	9200      	str	r2, [sp, #0]
 8011690:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8011692:	e894 0006 	ldmia.w	r4, {r1, r2}
 8011696:	4603      	mov	r3, r0
 8011698:	4628      	mov	r0, r5
 801169a:	47b0      	blx	r6
 801169c:	b005      	add	sp, #20
 801169e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80116a0:	20012dae 	.word	0x20012dae

080116a4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80116a4:	b570      	push	{r4, r5, r6, lr}
 80116a6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 80116aa:	4604      	mov	r4, r0
 80116ac:	b19b      	cbz	r3, 80116d6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80116ae:	2002      	movs	r0, #2
 80116b0:	f7f0 febe 	bl	8002430 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80116b4:	2300      	movs	r3, #0
 80116b6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80116ba:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 80116be:	6823      	ldr	r3, [r4, #0]
 80116c0:	4620      	mov	r0, r4
 80116c2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80116c6:	f7ff fdbf 	bl	8011248 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80116ca:	462b      	mov	r3, r5
 80116cc:	4601      	mov	r1, r0
 80116ce:	4620      	mov	r0, r4
 80116d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80116d4:	4718      	bx	r3
 80116d6:	bd70      	pop	{r4, r5, r6, pc}

080116d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80116d8:	b538      	push	{r3, r4, r5, lr}
 80116da:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 80116de:	428b      	cmp	r3, r1
 80116e0:	4604      	mov	r4, r0
 80116e2:	460d      	mov	r5, r1
 80116e4:	d006      	beq.n	80116f4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 80116e6:	6803      	ldr	r3, [r0, #0]
 80116e8:	b929      	cbnz	r1, 80116f6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 80116ea:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80116ee:	4798      	blx	r3
 80116f0:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 80116f4:	bd38      	pop	{r3, r4, r5, pc}
 80116f6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80116fa:	e7f8      	b.n	80116ee <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

080116fc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80116fc:	b510      	push	{r4, lr}
 80116fe:	4b0d      	ldr	r3, [pc, #52]	; (8011734 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8011700:	781b      	ldrb	r3, [r3, #0]
 8011702:	4604      	mov	r4, r0
 8011704:	b95b      	cbnz	r3, 801171e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011706:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801170a:	2b02      	cmp	r3, #2
 801170c:	d007      	beq.n	801171e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801170e:	6840      	ldr	r0, [r0, #4]
 8011710:	f000 f92c 	bl	801196c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8011714:	b118      	cbz	r0, 801171e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011716:	6862      	ldr	r2, [r4, #4]
 8011718:	7a53      	ldrb	r3, [r2, #9]
 801171a:	2b00      	cmp	r3, #0
 801171c:	d0fc      	beq.n	8011718 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801171e:	f7f0 ffbf 	bl	80026a0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011722:	4620      	mov	r0, r4
 8011724:	2100      	movs	r1, #0
 8011726:	f7ff ffd7 	bl	80116d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801172a:	4620      	mov	r0, r4
 801172c:	f7ff fd8c 	bl	8011248 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011730:	bd10      	pop	{r4, pc}
 8011732:	bf00      	nop
 8011734:	20012db2 	.word	0x20012db2

08011738 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8011738:	b570      	push	{r4, r5, r6, lr}
 801173a:	4604      	mov	r4, r0
 801173c:	6803      	ldr	r3, [r0, #0]
 801173e:	b919      	cbnz	r1, 8011748 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8011740:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011742:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011746:	4718      	bx	r3
 8011748:	2200      	movs	r2, #0
 801174a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 801174e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8011752:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011754:	4798      	blx	r3
 8011756:	6863      	ldr	r3, [r4, #4]
 8011758:	2101      	movs	r1, #1
 801175a:	4605      	mov	r5, r0
 801175c:	7299      	strb	r1, [r3, #10]
 801175e:	4620      	mov	r0, r4
 8011760:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8011764:	f7ff ffb8 	bl	80116d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011768:	4628      	mov	r0, r5
 801176a:	bd70      	pop	{r4, r5, r6, pc}

0801176c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 801176c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8011770:	1a13      	subs	r3, r2, r0
 8011772:	4258      	negs	r0, r3
 8011774:	4158      	adcs	r0, r3
 8011776:	4770      	bx	lr

08011778 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8011778:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 801177c:	1a9b      	subs	r3, r3, r2
 801177e:	2b00      	cmp	r3, #0
 8011780:	bfdc      	itt	le
 8011782:	6882      	ldrle	r2, [r0, #8]
 8011784:	189b      	addle	r3, r3, r2
 8011786:	2b01      	cmp	r3, #1
 8011788:	bfcc      	ite	gt
 801178a:	2000      	movgt	r0, #0
 801178c:	2001      	movle	r0, #1
 801178e:	4770      	bx	lr

08011790 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8011790:	6902      	ldr	r2, [r0, #16]
 8011792:	6843      	ldr	r3, [r0, #4]
 8011794:	2024      	movs	r0, #36	; 0x24
 8011796:	fb00 3002 	mla	r0, r0, r2, r3
 801179a:	4770      	bx	lr

0801179c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 801179c:	6803      	ldr	r3, [r0, #0]
 801179e:	691b      	ldr	r3, [r3, #16]
 80117a0:	4718      	bx	r3

080117a2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80117a2:	b570      	push	{r4, r5, r6, lr}
 80117a4:	2301      	movs	r3, #1
 80117a6:	7203      	strb	r3, [r0, #8]
 80117a8:	4604      	mov	r4, r0
 80117aa:	6840      	ldr	r0, [r0, #4]
 80117ac:	6803      	ldr	r3, [r0, #0]
 80117ae:	699b      	ldr	r3, [r3, #24]
 80117b0:	4798      	blx	r3
 80117b2:	6803      	ldr	r3, [r0, #0]
 80117b4:	2b40      	cmp	r3, #64	; 0x40
 80117b6:	4605      	mov	r5, r0
 80117b8:	d00c      	beq.n	80117d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80117ba:	d810      	bhi.n	80117de <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80117bc:	2b04      	cmp	r3, #4
 80117be:	d01d      	beq.n	80117fc <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80117c0:	d804      	bhi.n	80117cc <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80117c2:	2b01      	cmp	r3, #1
 80117c4:	d006      	beq.n	80117d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80117c6:	2b02      	cmp	r3, #2
 80117c8:	d02c      	beq.n	8011824 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80117ca:	bd70      	pop	{r4, r5, r6, pc}
 80117cc:	2b08      	cmp	r3, #8
 80117ce:	d01d      	beq.n	801180c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80117d0:	2b20      	cmp	r3, #32
 80117d2:	d1fa      	bne.n	80117ca <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80117d4:	6823      	ldr	r3, [r4, #0]
 80117d6:	4620      	mov	r0, r4
 80117d8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80117da:	4798      	blx	r3
 80117dc:	e013      	b.n	8011806 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80117de:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80117e2:	d0f7      	beq.n	80117d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80117e4:	d804      	bhi.n	80117f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 80117e6:	2b80      	cmp	r3, #128	; 0x80
 80117e8:	d0f4      	beq.n	80117d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80117ea:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80117ee:	e7f0      	b.n	80117d2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 80117f0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80117f4:	d0ee      	beq.n	80117d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80117f6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80117fa:	e7e5      	b.n	80117c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 80117fc:	6823      	ldr	r3, [r4, #0]
 80117fe:	7f01      	ldrb	r1, [r0, #28]
 8011800:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011802:	4620      	mov	r0, r4
 8011804:	4798      	blx	r3
 8011806:	6823      	ldr	r3, [r4, #0]
 8011808:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801180a:	e006      	b.n	801181a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 801180c:	6823      	ldr	r3, [r4, #0]
 801180e:	7f01      	ldrb	r1, [r0, #28]
 8011810:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011812:	4620      	mov	r0, r4
 8011814:	4798      	blx	r3
 8011816:	6823      	ldr	r3, [r4, #0]
 8011818:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801181a:	4629      	mov	r1, r5
 801181c:	4620      	mov	r0, r4
 801181e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011822:	4718      	bx	r3
 8011824:	6823      	ldr	r3, [r4, #0]
 8011826:	4620      	mov	r0, r4
 8011828:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801182a:	4798      	blx	r3
 801182c:	e7f3      	b.n	8011816 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0801182e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 801182e:	4770      	bx	lr

08011830 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011830:	4770      	bx	lr

08011832 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8011832:	4770      	bx	lr

08011834 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8011834:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8011838:	1ad2      	subs	r2, r2, r3
 801183a:	2a00      	cmp	r2, #0
 801183c:	b510      	push	{r4, lr}
 801183e:	bfdc      	itt	le
 8011840:	6884      	ldrle	r4, [r0, #8]
 8011842:	1912      	addle	r2, r2, r4
 8011844:	2a01      	cmp	r2, #1
 8011846:	dd16      	ble.n	8011876 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8011848:	6842      	ldr	r2, [r0, #4]
 801184a:	2424      	movs	r4, #36	; 0x24
 801184c:	fb04 2303 	mla	r3, r4, r3, r2
 8011850:	f101 0220 	add.w	r2, r1, #32
 8011854:	f851 4b04 	ldr.w	r4, [r1], #4
 8011858:	f843 4b04 	str.w	r4, [r3], #4
 801185c:	4291      	cmp	r1, r2
 801185e:	d1f9      	bne.n	8011854 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8011860:	780a      	ldrb	r2, [r1, #0]
 8011862:	701a      	strb	r2, [r3, #0]
 8011864:	68c3      	ldr	r3, [r0, #12]
 8011866:	6882      	ldr	r2, [r0, #8]
 8011868:	f3bf 8f5b 	dmb	ish
 801186c:	3301      	adds	r3, #1
 801186e:	429a      	cmp	r2, r3
 8011870:	bfd8      	it	le
 8011872:	1a9b      	suble	r3, r3, r2
 8011874:	60c3      	str	r3, [r0, #12]
 8011876:	bd10      	pop	{r4, pc}

08011878 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011878:	6903      	ldr	r3, [r0, #16]
 801187a:	6882      	ldr	r2, [r0, #8]
 801187c:	f3bf 8f5b 	dmb	ish
 8011880:	3301      	adds	r3, #1
 8011882:	429a      	cmp	r2, r3
 8011884:	bfd8      	it	le
 8011886:	1a9b      	suble	r3, r3, r2
 8011888:	6103      	str	r3, [r0, #16]
 801188a:	4770      	bx	lr

0801188c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 801188c:	b570      	push	{r4, r5, r6, lr}
 801188e:	4604      	mov	r4, r0
 8011890:	460e      	mov	r6, r1
 8011892:	6860      	ldr	r0, [r4, #4]
 8011894:	6803      	ldr	r3, [r0, #0]
 8011896:	685b      	ldr	r3, [r3, #4]
 8011898:	4798      	blx	r3
 801189a:	2800      	cmp	r0, #0
 801189c:	d1f9      	bne.n	8011892 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 801189e:	4d0d      	ldr	r5, [pc, #52]	; (80118d4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80118a0:	6828      	ldr	r0, [r5, #0]
 80118a2:	6803      	ldr	r3, [r0, #0]
 80118a4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80118a6:	4798      	blx	r3
 80118a8:	f7f0 ff08 	bl	80026bc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80118ac:	6828      	ldr	r0, [r5, #0]
 80118ae:	2101      	movs	r1, #1
 80118b0:	f7ff ff12 	bl	80116d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80118b4:	6860      	ldr	r0, [r4, #4]
 80118b6:	6803      	ldr	r3, [r0, #0]
 80118b8:	4631      	mov	r1, r6
 80118ba:	689b      	ldr	r3, [r3, #8]
 80118bc:	4798      	blx	r3
 80118be:	6823      	ldr	r3, [r4, #0]
 80118c0:	4620      	mov	r0, r4
 80118c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80118c4:	4798      	blx	r3
 80118c6:	6828      	ldr	r0, [r5, #0]
 80118c8:	6803      	ldr	r3, [r0, #0]
 80118ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80118ce:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80118d0:	4718      	bx	r3
 80118d2:	bf00      	nop
 80118d4:	20012db4 	.word	0x20012db4

080118d8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80118d8:	b508      	push	{r3, lr}
 80118da:	f7f0 fee1 	bl	80026a0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80118de:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80118e2:	f7f0 bee5 	b.w	80026b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080118e6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 80118e6:	b510      	push	{r4, lr}
 80118e8:	2114      	movs	r1, #20
 80118ea:	4604      	mov	r4, r0
 80118ec:	f018 f9bf 	bl	8029c6e <_ZdlPvj>
 80118f0:	4620      	mov	r0, r4
 80118f2:	bd10      	pop	{r4, pc}

080118f4 <_ZN8touchgfx13DMA_Interface5startEv>:
 80118f4:	b510      	push	{r4, lr}
 80118f6:	4604      	mov	r4, r0
 80118f8:	6840      	ldr	r0, [r0, #4]
 80118fa:	6803      	ldr	r3, [r0, #0]
 80118fc:	681b      	ldr	r3, [r3, #0]
 80118fe:	4798      	blx	r3
 8011900:	b948      	cbnz	r0, 8011916 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011902:	7a63      	ldrb	r3, [r4, #9]
 8011904:	b13b      	cbz	r3, 8011916 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011906:	7a23      	ldrb	r3, [r4, #8]
 8011908:	b92b      	cbnz	r3, 8011916 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801190a:	6823      	ldr	r3, [r4, #0]
 801190c:	4620      	mov	r0, r4
 801190e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011910:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011914:	4718      	bx	r3
 8011916:	bd10      	pop	{r4, pc}

08011918 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011918:	b570      	push	{r4, r5, r6, lr}
 801191a:	4604      	mov	r4, r0
 801191c:	6840      	ldr	r0, [r0, #4]
 801191e:	6803      	ldr	r3, [r0, #0]
 8011920:	681b      	ldr	r3, [r3, #0]
 8011922:	4798      	blx	r3
 8011924:	4605      	mov	r5, r0
 8011926:	b930      	cbnz	r0, 8011936 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011928:	7a23      	ldrb	r3, [r4, #8]
 801192a:	b123      	cbz	r3, 8011936 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801192c:	6860      	ldr	r0, [r4, #4]
 801192e:	6803      	ldr	r3, [r0, #0]
 8011930:	695b      	ldr	r3, [r3, #20]
 8011932:	4798      	blx	r3
 8011934:	7225      	strb	r5, [r4, #8]
 8011936:	6860      	ldr	r0, [r4, #4]
 8011938:	6803      	ldr	r3, [r0, #0]
 801193a:	681b      	ldr	r3, [r3, #0]
 801193c:	4798      	blx	r3
 801193e:	b928      	cbnz	r0, 801194c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011940:	6823      	ldr	r3, [r4, #0]
 8011942:	4620      	mov	r0, r4
 8011944:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011946:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801194a:	4718      	bx	r3
 801194c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011950:	f7f0 bebc 	b.w	80026cc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08011954 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011954:	b510      	push	{r4, lr}
 8011956:	4c04      	ldr	r4, [pc, #16]	; (8011968 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011958:	6082      	str	r2, [r0, #8]
 801195a:	2200      	movs	r2, #0
 801195c:	e9c0 4100 	strd	r4, r1, [r0]
 8011960:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011964:	bd10      	pop	{r4, pc}
 8011966:	bf00      	nop
 8011968:	0802eca0 	.word	0x0802eca0

0801196c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 801196c:	6840      	ldr	r0, [r0, #4]
 801196e:	6803      	ldr	r3, [r0, #0]
 8011970:	681b      	ldr	r3, [r3, #0]
 8011972:	4718      	bx	r3

08011974 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011974:	4b06      	ldr	r3, [pc, #24]	; (8011990 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8011976:	60c1      	str	r1, [r0, #12]
 8011978:	094a      	lsrs	r2, r1, #5
 801197a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 801197e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011982:	4313      	orrs	r3, r2
 8011984:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8011988:	4319      	orrs	r1, r3
 801198a:	8201      	strh	r1, [r0, #16]
 801198c:	4770      	bx	lr
 801198e:	bf00      	nop
 8011990:	fffff800 	.word	0xfffff800

08011994 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011994:	f1a0 0008 	sub.w	r0, r0, #8
 8011998:	e7ec      	b.n	8011974 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 801199a:	bf00      	nop

0801199c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 801199c:	b508      	push	{r3, lr}
 801199e:	4b05      	ldr	r3, [pc, #20]	; (80119b4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80119a0:	6818      	ldr	r0, [r3, #0]
 80119a2:	6803      	ldr	r3, [r0, #0]
 80119a4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80119a8:	4798      	blx	r3
 80119aa:	1e43      	subs	r3, r0, #1
 80119ac:	4258      	negs	r0, r3
 80119ae:	4158      	adcs	r0, r3
 80119b0:	bd08      	pop	{r3, pc}
 80119b2:	bf00      	nop
 80119b4:	20012db4 	.word	0x20012db4

080119b8 <_ZN8touchgfx13PainterRGB565D1Ev>:
 80119b8:	4770      	bx	lr

080119ba <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 80119ba:	3808      	subs	r0, #8
 80119bc:	4770      	bx	lr

080119be <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 80119be:	b430      	push	{r4, r5}
 80119c0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 80119c4:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 80119c8:	8a02      	ldrh	r2, [r0, #16]
 80119ca:	9202      	str	r2, [sp, #8]
 80119cc:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80119d0:	68c2      	ldr	r2, [r0, #12]
 80119d2:	4629      	mov	r1, r5
 80119d4:	4620      	mov	r0, r4
 80119d6:	bc30      	pop	{r4, r5}
 80119d8:	f7f1 b93a 	b.w	8002c50 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

080119dc <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 80119dc:	f7f1 b936 	b.w	8002c4c <_ZN8touchgfx5paint8tearDownEv>

080119e0 <_ZN8touchgfx13PainterRGB565D0Ev>:
 80119e0:	b510      	push	{r4, lr}
 80119e2:	2114      	movs	r1, #20
 80119e4:	4604      	mov	r4, r0
 80119e6:	f018 f942 	bl	8029c6e <_ZdlPvj>
 80119ea:	4620      	mov	r0, r4
 80119ec:	bd10      	pop	{r4, pc}

080119ee <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 80119ee:	f1a0 0008 	sub.w	r0, r0, #8
 80119f2:	e7f5      	b.n	80119e0 <_ZN8touchgfx13PainterRGB565D0Ev>

080119f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 80119f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80119f6:	6803      	ldr	r3, [r0, #0]
 80119f8:	460d      	mov	r5, r1
 80119fa:	4604      	mov	r4, r0
 80119fc:	4601      	mov	r1, r0
 80119fe:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011a00:	a802      	add	r0, sp, #8
 8011a02:	4798      	blx	r3
 8011a04:	6828      	ldr	r0, [r5, #0]
 8011a06:	6869      	ldr	r1, [r5, #4]
 8011a08:	466b      	mov	r3, sp
 8011a0a:	c303      	stmia	r3!, {r0, r1}
 8011a0c:	4668      	mov	r0, sp
 8011a0e:	4619      	mov	r1, r3
 8011a10:	f7fe ffa4 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 8011a14:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011a16:	b188      	cbz	r0, 8011a3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011a18:	6803      	ldr	r3, [r0, #0]
 8011a1a:	1d21      	adds	r1, r4, #4
 8011a1c:	68db      	ldr	r3, [r3, #12]
 8011a1e:	4798      	blx	r3
 8011a20:	b160      	cbz	r0, 8011a3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011a22:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011a26:	2b00      	cmp	r3, #0
 8011a28:	dd08      	ble.n	8011a3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011a2a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8011a2e:	2d00      	cmp	r5, #0
 8011a30:	dd04      	ble.n	8011a3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011a32:	4a2b      	ldr	r2, [pc, #172]	; (8011ae0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8011a34:	7812      	ldrb	r2, [r2, #0]
 8011a36:	b11a      	cbz	r2, 8011a40 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8011a38:	2a01      	cmp	r2, #1
 8011a3a:	d029      	beq.n	8011a90 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8011a3c:	b004      	add	sp, #16
 8011a3e:	bd70      	pop	{r4, r5, r6, pc}
 8011a40:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011a44:	441d      	add	r5, r3
 8011a46:	b2ad      	uxth	r5, r5
 8011a48:	b22e      	sxth	r6, r5
 8011a4a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8011a4e:	42b3      	cmp	r3, r6
 8011a50:	daf4      	bge.n	8011a3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011a52:	6823      	ldr	r3, [r4, #0]
 8011a54:	4669      	mov	r1, sp
 8011a56:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011a58:	4620      	mov	r0, r4
 8011a5a:	4798      	blx	r3
 8011a5c:	b940      	cbnz	r0, 8011a70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011a5e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8011a62:	2b01      	cmp	r3, #1
 8011a64:	d004      	beq.n	8011a70 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011a66:	3301      	adds	r3, #1
 8011a68:	105b      	asrs	r3, r3, #1
 8011a6a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011a6e:	e7f0      	b.n	8011a52 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8011a70:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011a74:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011a78:	4413      	add	r3, r2
 8011a7a:	b29b      	uxth	r3, r3
 8011a7c:	441a      	add	r2, r3
 8011a7e:	b212      	sxth	r2, r2
 8011a80:	4296      	cmp	r6, r2
 8011a82:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011a86:	dae0      	bge.n	8011a4a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011a88:	1aeb      	subs	r3, r5, r3
 8011a8a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011a8e:	e7dc      	b.n	8011a4a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011a90:	f8bd 5000 	ldrh.w	r5, [sp]
 8011a94:	441d      	add	r5, r3
 8011a96:	b2ad      	uxth	r5, r5
 8011a98:	b22e      	sxth	r6, r5
 8011a9a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8011a9e:	42b3      	cmp	r3, r6
 8011aa0:	dacc      	bge.n	8011a3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011aa2:	6823      	ldr	r3, [r4, #0]
 8011aa4:	4669      	mov	r1, sp
 8011aa6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011aa8:	4620      	mov	r0, r4
 8011aaa:	4798      	blx	r3
 8011aac:	b940      	cbnz	r0, 8011ac0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011aae:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011ab2:	2b01      	cmp	r3, #1
 8011ab4:	d004      	beq.n	8011ac0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8011ab6:	3301      	adds	r3, #1
 8011ab8:	105b      	asrs	r3, r3, #1
 8011aba:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011abe:	e7f0      	b.n	8011aa2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8011ac0:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8011ac4:	f8bd 3000 	ldrh.w	r3, [sp]
 8011ac8:	4413      	add	r3, r2
 8011aca:	b29b      	uxth	r3, r3
 8011acc:	441a      	add	r2, r3
 8011ace:	b212      	sxth	r2, r2
 8011ad0:	4296      	cmp	r6, r2
 8011ad2:	f8ad 3000 	strh.w	r3, [sp]
 8011ad6:	dae0      	bge.n	8011a9a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011ad8:	1aeb      	subs	r3, r5, r3
 8011ada:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011ade:	e7dc      	b.n	8011a9a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8011ae0:	20012dac 	.word	0x20012dac

08011ae4 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8011ae4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011ae6:	6803      	ldr	r3, [r0, #0]
 8011ae8:	4604      	mov	r4, r0
 8011aea:	4601      	mov	r1, r0
 8011aec:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011aee:	4668      	mov	r0, sp
 8011af0:	4798      	blx	r3
 8011af2:	2100      	movs	r1, #0
 8011af4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8011af8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011afc:	9102      	str	r1, [sp, #8]
 8011afe:	4668      	mov	r0, sp
 8011b00:	a902      	add	r1, sp, #8
 8011b02:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011b06:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011b0a:	f7fe ff27 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 8011b0e:	6823      	ldr	r3, [r4, #0]
 8011b10:	4669      	mov	r1, sp
 8011b12:	691b      	ldr	r3, [r3, #16]
 8011b14:	4620      	mov	r0, r4
 8011b16:	4798      	blx	r3
 8011b18:	b004      	add	sp, #16
 8011b1a:	bd10      	pop	{r4, pc}

08011b1c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8011b1c:	2101      	movs	r1, #1
 8011b1e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8011b22:	490b      	ldr	r1, [pc, #44]	; (8011b50 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8011b24:	6001      	str	r1, [r0, #0]
 8011b26:	2200      	movs	r2, #0
 8011b28:	21ff      	movs	r1, #255	; 0xff
 8011b2a:	8082      	strh	r2, [r0, #4]
 8011b2c:	80c2      	strh	r2, [r0, #6]
 8011b2e:	8102      	strh	r2, [r0, #8]
 8011b30:	8142      	strh	r2, [r0, #10]
 8011b32:	8182      	strh	r2, [r0, #12]
 8011b34:	81c2      	strh	r2, [r0, #14]
 8011b36:	8202      	strh	r2, [r0, #16]
 8011b38:	8242      	strh	r2, [r0, #18]
 8011b3a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011b3e:	61c2      	str	r2, [r0, #28]
 8011b40:	8402      	strh	r2, [r0, #32]
 8011b42:	8442      	strh	r2, [r0, #34]	; 0x22
 8011b44:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011b48:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8011b4c:	6282      	str	r2, [r0, #40]	; 0x28
 8011b4e:	4770      	bx	lr
 8011b50:	0802ecfc 	.word	0x0802ecfc

08011b54 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8011b54:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8011b58:	4602      	mov	r2, r0
 8011b5a:	cb03      	ldmia	r3!, {r0, r1}
 8011b5c:	6010      	str	r0, [r2, #0]
 8011b5e:	6051      	str	r1, [r2, #4]
 8011b60:	4610      	mov	r0, r2
 8011b62:	4770      	bx	lr

08011b64 <_ZN8touchgfx4LineD1Ev>:
 8011b64:	4770      	bx	lr

08011b66 <_ZN8touchgfx4LineD0Ev>:
 8011b66:	b510      	push	{r4, lr}
 8011b68:	2170      	movs	r1, #112	; 0x70
 8011b6a:	4604      	mov	r4, r0
 8011b6c:	f018 f87f 	bl	8029c6e <_ZdlPvj>
 8011b70:	4620      	mov	r0, r4
 8011b72:	bd10      	pop	{r4, pc}

08011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8011b74:	b507      	push	{r0, r1, r2, lr}
 8011b76:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8011b7a:	ab01      	add	r3, sp, #4
 8011b7c:	6809      	ldr	r1, [r1, #0]
 8011b7e:	6800      	ldr	r0, [r0, #0]
 8011b80:	f005 fab4 	bl	80170ec <_ZN8touchgfx6muldivElllRl>
 8011b84:	b003      	add	sp, #12
 8011b86:	f85d fb04 	ldr.w	pc, [sp], #4

08011b8a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8011b8a:	6800      	ldr	r0, [r0, #0]
 8011b8c:	2800      	cmp	r0, #0
 8011b8e:	bfb9      	ittee	lt
 8011b90:	2320      	movlt	r3, #32
 8011b92:	fb90 f0f3 	sdivlt	r0, r0, r3
 8011b96:	301f      	addge	r0, #31
 8011b98:	1140      	asrge	r0, r0, #5
 8011b9a:	4770      	bx	lr

08011b9c <_ZNK8touchgfx4Line17invalidateContentEv>:
 8011b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ba0:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8011ba4:	b089      	sub	sp, #36	; 0x24
 8011ba6:	4604      	mov	r4, r0
 8011ba8:	b353      	cbz	r3, 8011c00 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8011baa:	6803      	ldr	r3, [r0, #0]
 8011bac:	4601      	mov	r1, r0
 8011bae:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011bb0:	a802      	add	r0, sp, #8
 8011bb2:	4798      	blx	r3
 8011bb4:	2220      	movs	r2, #32
 8011bb6:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8011bba:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011bbc:	fb9a f0f2 	sdiv	r0, sl, r2
 8011bc0:	fb91 f5f2 	sdiv	r5, r1, r2
 8011bc4:	1b40      	subs	r0, r0, r5
 8011bc6:	2800      	cmp	r0, #0
 8011bc8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011bca:	fb93 f6f2 	sdiv	r6, r3, r2
 8011bce:	bfb8      	it	lt
 8011bd0:	4240      	neglt	r0, r0
 8011bd2:	0076      	lsls	r6, r6, #1
 8011bd4:	4286      	cmp	r6, r0
 8011bd6:	f8d4 b000 	ldr.w	fp, [r4]
 8011bda:	dc0c      	bgt.n	8011bf6 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8011bdc:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8011bde:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8011be2:	fb95 f0f2 	sdiv	r0, r5, r2
 8011be6:	fb98 f7f2 	sdiv	r7, r8, r2
 8011bea:	1bc0      	subs	r0, r0, r7
 8011bec:	2800      	cmp	r0, #0
 8011bee:	bfb8      	it	lt
 8011bf0:	4240      	neglt	r0, r0
 8011bf2:	4286      	cmp	r6, r0
 8011bf4:	dd07      	ble.n	8011c06 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8011bf6:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011bfa:	a902      	add	r1, sp, #8
 8011bfc:	4620      	mov	r0, r4
 8011bfe:	4798      	blx	r3
 8011c00:	b009      	add	sp, #36	; 0x24
 8011c02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c06:	3301      	adds	r3, #1
 8011c08:	2002      	movs	r0, #2
 8011c0a:	f10d 0920 	add.w	r9, sp, #32
 8011c0e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011c12:	4103      	asrs	r3, r0
 8011c14:	f849 3d08 	str.w	r3, [r9, #-8]!
 8011c18:	eb01 060a 	add.w	r6, r1, sl
 8011c1c:	eb08 0705 	add.w	r7, r8, r5
 8011c20:	fb96 f6f0 	sdiv	r6, r6, r0
 8011c24:	fb97 f7f0 	sdiv	r7, r7, r0
 8011c28:	4648      	mov	r0, r9
 8011c2a:	9101      	str	r1, [sp, #4]
 8011c2c:	b236      	sxth	r6, r6
 8011c2e:	b23f      	sxth	r7, r7
 8011c30:	fb96 f6f2 	sdiv	r6, r6, r2
 8011c34:	fb97 f7f2 	sdiv	r7, r7, r2
 8011c38:	f7ff ffa7 	bl	8011b8a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8011c3c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011c40:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8011c44:	9901      	ldr	r1, [sp, #4]
 8011c46:	4293      	cmp	r3, r2
 8011c48:	fa1f fe87 	uxth.w	lr, r7
 8011c4c:	fa1f fc86 	uxth.w	ip, r6
 8011c50:	eba1 0a0a 	sub.w	sl, r1, sl
 8011c54:	b280      	uxth	r0, r0
 8011c56:	da54      	bge.n	8011d02 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8011c58:	ebac 0100 	sub.w	r1, ip, r0
 8011c5c:	b289      	uxth	r1, r1
 8011c5e:	4460      	add	r0, ip
 8011c60:	f1ba 0f00 	cmp.w	sl, #0
 8011c64:	b20e      	sxth	r6, r1
 8011c66:	b280      	uxth	r0, r0
 8011c68:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8011c6c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8011c70:	da29      	bge.n	8011cc6 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8011c72:	eba8 0505 	sub.w	r5, r8, r5
 8011c76:	2d00      	cmp	r5, #0
 8011c78:	da2a      	bge.n	8011cd0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011c7a:	fa1f f88a 	uxth.w	r8, sl
 8011c7e:	eba0 0008 	sub.w	r0, r0, r8
 8011c82:	fa1f f58c 	uxth.w	r5, ip
 8011c86:	4443      	add	r3, r8
 8011c88:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011c8c:	1a59      	subs	r1, r3, r1
 8011c8e:	ebae 0005 	sub.w	r0, lr, r5
 8011c92:	f8ad a010 	strh.w	sl, [sp, #16]
 8011c96:	f8ad c012 	strh.w	ip, [sp, #18]
 8011c9a:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011c9e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011ca2:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011ca6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011caa:	442a      	add	r2, r5
 8011cac:	eba2 0e0e 	sub.w	lr, r2, lr
 8011cb0:	f8ad e01e 	strh.w	lr, [sp, #30]
 8011cb4:	f8db 3010 	ldr.w	r3, [fp, #16]
 8011cb8:	a904      	add	r1, sp, #16
 8011cba:	4620      	mov	r0, r4
 8011cbc:	4798      	blx	r3
 8011cbe:	6823      	ldr	r3, [r4, #0]
 8011cc0:	4649      	mov	r1, r9
 8011cc2:	691b      	ldr	r3, [r3, #16]
 8011cc4:	e79a      	b.n	8011bfc <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8011cc6:	d003      	beq.n	8011cd0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8011cc8:	eba8 0505 	sub.w	r5, r8, r5
 8011ccc:	2d00      	cmp	r5, #0
 8011cce:	dcd4      	bgt.n	8011c7a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8011cd0:	fa1f f88a 	uxth.w	r8, sl
 8011cd4:	4443      	add	r3, r8
 8011cd6:	fa1f f58c 	uxth.w	r5, ip
 8011cda:	1a59      	subs	r1, r3, r1
 8011cdc:	eba0 0008 	sub.w	r0, r0, r8
 8011ce0:	ebae 0305 	sub.w	r3, lr, r5
 8011ce4:	f8ad 6010 	strh.w	r6, [sp, #16]
 8011ce8:	f8ad c012 	strh.w	ip, [sp, #18]
 8011cec:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011cf0:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011cf4:	f8ad a018 	strh.w	sl, [sp, #24]
 8011cf8:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011cfc:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011d00:	e7d3      	b.n	8011caa <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8011d02:	ebae 0100 	sub.w	r1, lr, r0
 8011d06:	b289      	uxth	r1, r1
 8011d08:	4470      	add	r0, lr
 8011d0a:	f1ba 0f00 	cmp.w	sl, #0
 8011d0e:	b20f      	sxth	r7, r1
 8011d10:	b280      	uxth	r0, r0
 8011d12:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8011d16:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8011d1a:	da20      	bge.n	8011d5e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8011d1c:	eba8 0505 	sub.w	r5, r8, r5
 8011d20:	2d00      	cmp	r5, #0
 8011d22:	da21      	bge.n	8011d68 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011d24:	fa1f f88e 	uxth.w	r8, lr
 8011d28:	fa1f f58a 	uxth.w	r5, sl
 8011d2c:	4443      	add	r3, r8
 8011d2e:	442a      	add	r2, r5
 8011d30:	f8ad e010 	strh.w	lr, [sp, #16]
 8011d34:	1b40      	subs	r0, r0, r5
 8011d36:	ebac 0e08 	sub.w	lr, ip, r8
 8011d3a:	1a51      	subs	r1, r2, r1
 8011d3c:	eba3 0c0c 	sub.w	ip, r3, ip
 8011d40:	f8ad a012 	strh.w	sl, [sp, #18]
 8011d44:	f8ad e014 	strh.w	lr, [sp, #20]
 8011d48:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011d4c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011d50:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011d54:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011d58:	f8ad 101e 	strh.w	r1, [sp, #30]
 8011d5c:	e7aa      	b.n	8011cb4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8011d5e:	d003      	beq.n	8011d68 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011d60:	eba8 0505 	sub.w	r5, r8, r5
 8011d64:	2d00      	cmp	r5, #0
 8011d66:	dcdd      	bgt.n	8011d24 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8011d68:	fa1f f58e 	uxth.w	r5, lr
 8011d6c:	fa1f f88a 	uxth.w	r8, sl
 8011d70:	4442      	add	r2, r8
 8011d72:	442b      	add	r3, r5
 8011d74:	f8ad 7012 	strh.w	r7, [sp, #18]
 8011d78:	1a51      	subs	r1, r2, r1
 8011d7a:	ebac 0705 	sub.w	r7, ip, r5
 8011d7e:	eba0 0008 	sub.w	r0, r0, r8
 8011d82:	eba3 0c0c 	sub.w	ip, r3, ip
 8011d86:	f8ad e010 	strh.w	lr, [sp, #16]
 8011d8a:	f8ad 7014 	strh.w	r7, [sp, #20]
 8011d8e:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011d92:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011d96:	f8ad a01a 	strh.w	sl, [sp, #26]
 8011d9a:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011d9e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011da2:	e787      	b.n	8011cb4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08011da4 <_ZN8touchgfx7CWRUtil4sineEi>:
 8011da4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8011da8:	fb90 f2f3 	sdiv	r2, r0, r3
 8011dac:	fb02 0013 	mls	r0, r2, r3, r0
 8011db0:	2800      	cmp	r0, #0
 8011db2:	bfb8      	it	lt
 8011db4:	18c0      	addlt	r0, r0, r3
 8011db6:	285a      	cmp	r0, #90	; 0x5a
 8011db8:	4b09      	ldr	r3, [pc, #36]	; (8011de0 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8011dba:	dc02      	bgt.n	8011dc2 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8011dbc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011dc0:	4770      	bx	lr
 8011dc2:	28b4      	cmp	r0, #180	; 0xb4
 8011dc4:	dc02      	bgt.n	8011dcc <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8011dc6:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8011dca:	e7f7      	b.n	8011dbc <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8011dcc:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8011dd0:	bfd4      	ite	le
 8011dd2:	38b4      	suble	r0, #180	; 0xb4
 8011dd4:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8011dd8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8011ddc:	4240      	negs	r0, r0
 8011dde:	4770      	bx	lr
 8011de0:	0802edc8 	.word	0x0802edc8

08011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8011de4:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8011de8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011dea:	fb90 f2f3 	sdiv	r2, r0, r3
 8011dee:	fb02 0013 	mls	r0, r2, r3, r0
 8011df2:	2800      	cmp	r0, #0
 8011df4:	bfb8      	it	lt
 8011df6:	18c0      	addlt	r0, r0, r3
 8011df8:	1144      	asrs	r4, r0, #5
 8011dfa:	f000 061f 	and.w	r6, r0, #31
 8011dfe:	4620      	mov	r0, r4
 8011e00:	f7ff ffd0 	bl	8011da4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011e04:	4605      	mov	r5, r0
 8011e06:	b90e      	cbnz	r6, 8011e0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8011e08:	b002      	add	sp, #8
 8011e0a:	bd70      	pop	{r4, r5, r6, pc}
 8011e0c:	1c60      	adds	r0, r4, #1
 8011e0e:	f7ff ffc9 	bl	8011da4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011e12:	ab01      	add	r3, sp, #4
 8011e14:	2220      	movs	r2, #32
 8011e16:	4631      	mov	r1, r6
 8011e18:	1b40      	subs	r0, r0, r5
 8011e1a:	f005 f967 	bl	80170ec <_ZN8touchgfx6muldivElllRl>
 8011e1e:	4428      	add	r0, r5
 8011e20:	e7f2      	b.n	8011e08 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08011e22 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8011e22:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8011e26:	bf2c      	ite	cs
 8011e28:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8011e2c:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8011e30:	2300      	movs	r3, #0
 8011e32:	1899      	adds	r1, r3, r2
 8011e34:	4288      	cmp	r0, r1
 8011e36:	bf24      	itt	cs
 8011e38:	1853      	addcs	r3, r2, r1
 8011e3a:	1a40      	subcs	r0, r0, r1
 8011e3c:	0892      	lsrs	r2, r2, #2
 8011e3e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8011e42:	d1f6      	bne.n	8011e32 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8011e44:	4618      	mov	r0, r3
 8011e46:	4770      	bx	lr

08011e48 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8011e48:	b510      	push	{r4, lr}
 8011e4a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8011e4e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8011e52:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8011e56:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8011e5a:	13a4      	asrs	r4, r4, #14
 8011e5c:	139b      	asrs	r3, r3, #14
 8011e5e:	429c      	cmp	r4, r3
 8011e60:	bfb8      	it	lt
 8011e62:	461c      	movlt	r4, r3
 8011e64:	2c01      	cmp	r4, #1
 8011e66:	dd07      	ble.n	8011e78 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8011e68:	fb91 f1f4 	sdiv	r1, r1, r4
 8011e6c:	fb90 f0f4 	sdiv	r0, r0, r4
 8011e70:	f7ff ffea 	bl	8011e48 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011e74:	4360      	muls	r0, r4
 8011e76:	bd10      	pop	{r4, pc}
 8011e78:	4340      	muls	r0, r0
 8011e7a:	fb01 0001 	mla	r0, r1, r1, r0
 8011e7e:	f7ff ffd0 	bl	8011e22 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011e82:	e7f8      	b.n	8011e76 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08011e84 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8011e84:	2800      	cmp	r0, #0
 8011e86:	b508      	push	{r3, lr}
 8011e88:	da05      	bge.n	8011e96 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8011e8a:	4240      	negs	r0, r0
 8011e8c:	f7ff fffa 	bl	8011e84 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011e90:	4240      	negs	r0, r0
 8011e92:	b240      	sxtb	r0, r0
 8011e94:	bd08      	pop	{r3, pc}
 8011e96:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8011e9a:	dc11      	bgt.n	8011ec0 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8011e9c:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8011ea0:	dd09      	ble.n	8011eb6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8011ea2:	4340      	muls	r0, r0
 8011ea4:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8011ea8:	f7ff ffbb 	bl	8011e22 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011eac:	f7ff ffea 	bl	8011e84 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011eb0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011eb4:	e7ed      	b.n	8011e92 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8011eb6:	3003      	adds	r0, #3
 8011eb8:	10c0      	asrs	r0, r0, #3
 8011eba:	4b02      	ldr	r3, [pc, #8]	; (8011ec4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8011ebc:	5618      	ldrsb	r0, [r3, r0]
 8011ebe:	e7e9      	b.n	8011e94 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011ec0:	2000      	movs	r0, #0
 8011ec2:	e7e7      	b.n	8011e94 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8011ec4:	0802ed6c 	.word	0x0802ed6c

08011ec8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8011ec8:	4281      	cmp	r1, r0
 8011eca:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011ecc:	460c      	mov	r4, r1
 8011ece:	4615      	mov	r5, r2
 8011ed0:	dd07      	ble.n	8011ee2 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8011ed2:	4601      	mov	r1, r0
 8011ed4:	4620      	mov	r0, r4
 8011ed6:	f7ff fff7 	bl	8011ec8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011eda:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8011ede:	b003      	add	sp, #12
 8011ee0:	bd30      	pop	{r4, r5, pc}
 8011ee2:	f7ff ffb1 	bl	8011e48 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011ee6:	6028      	str	r0, [r5, #0]
 8011ee8:	2800      	cmp	r0, #0
 8011eea:	d0f8      	beq.n	8011ede <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8011eec:	4602      	mov	r2, r0
 8011eee:	ab01      	add	r3, sp, #4
 8011ef0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011ef4:	4620      	mov	r0, r4
 8011ef6:	f005 f8f9 	bl	80170ec <_ZN8touchgfx6muldivElllRl>
 8011efa:	f7ff ffc3 	bl	8011e84 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011efe:	e7ee      	b.n	8011ede <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08011f00 <_ZN8touchgfx4LineC1Ev>:
 8011f00:	b510      	push	{r4, lr}
 8011f02:	4604      	mov	r4, r0
 8011f04:	f7ff fe0a 	bl	8011b1c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8011f08:	4b0c      	ldr	r3, [pc, #48]	; (8011f3c <_ZN8touchgfx4LineC1Ev+0x3c>)
 8011f0a:	6023      	str	r3, [r4, #0]
 8011f0c:	2220      	movs	r2, #32
 8011f0e:	2300      	movs	r3, #0
 8011f10:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011f12:	2212      	movs	r2, #18
 8011f14:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8011f18:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8011f1c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8011f20:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8011f24:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8011f28:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8011f2c:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8011f30:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8011f34:	66e2      	str	r2, [r4, #108]	; 0x6c
 8011f36:	60a3      	str	r3, [r4, #8]
 8011f38:	4620      	mov	r0, r4
 8011f3a:	bd10      	pop	{r4, pc}
 8011f3c:	0802ee88 	.word	0x0802ee88

08011f40 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8011f40:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011f44:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8011f46:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011f48:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8011f4a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8011f4c:	1aff      	subs	r7, r7, r3
 8011f4e:	4604      	mov	r4, r0
 8011f50:	eba5 0502 	sub.w	r5, r5, r2
 8011f54:	d142      	bne.n	8011fdc <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8011f56:	b955      	cbnz	r5, 8011f6e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8011f58:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8011f5c:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8011f60:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8011f64:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8011f68:	b002      	add	sp, #8
 8011f6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011f6e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8011f72:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8011f76:	4629      	mov	r1, r5
 8011f78:	4642      	mov	r2, r8
 8011f7a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011f7c:	f005 f8d5 	bl	801712a <_ZN8touchgfx6muldivElll>
 8011f80:	2502      	movs	r5, #2
 8011f82:	4642      	mov	r2, r8
 8011f84:	fb90 f6f5 	sdiv	r6, r0, r5
 8011f88:	4639      	mov	r1, r7
 8011f8a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011f8c:	f005 f8cd 	bl	801712a <_ZN8touchgfx6muldivElll>
 8011f90:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8011f94:	fb90 f5f5 	sdiv	r5, r0, r5
 8011f98:	f1b9 0f00 	cmp.w	r9, #0
 8011f9c:	d067      	beq.n	801206e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8011f9e:	f1b9 0f02 	cmp.w	r9, #2
 8011fa2:	d878      	bhi.n	8012096 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8011fa4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011fa6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011fa8:	1b93      	subs	r3, r2, r6
 8011faa:	1b5b      	subs	r3, r3, r5
 8011fac:	6463      	str	r3, [r4, #68]	; 0x44
 8011fae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011fb0:	18e9      	adds	r1, r5, r3
 8011fb2:	1b89      	subs	r1, r1, r6
 8011fb4:	6561      	str	r1, [r4, #84]	; 0x54
 8011fb6:	1b81      	subs	r1, r0, r6
 8011fb8:	4429      	add	r1, r5
 8011fba:	64a1      	str	r1, [r4, #72]	; 0x48
 8011fbc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011fbe:	4430      	add	r0, r6
 8011fc0:	186f      	adds	r7, r5, r1
 8011fc2:	4432      	add	r2, r6
 8011fc4:	1b49      	subs	r1, r1, r5
 8011fc6:	4437      	add	r7, r6
 8011fc8:	4428      	add	r0, r5
 8011fca:	4431      	add	r1, r6
 8011fcc:	1b52      	subs	r2, r2, r5
 8011fce:	1b5b      	subs	r3, r3, r5
 8011fd0:	65a7      	str	r7, [r4, #88]	; 0x58
 8011fd2:	64e0      	str	r0, [r4, #76]	; 0x4c
 8011fd4:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011fd6:	6522      	str	r2, [r4, #80]	; 0x50
 8011fd8:	1b9b      	subs	r3, r3, r6
 8011fda:	e05b      	b.n	8012094 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8011fdc:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8011fe0:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8011fe4:	2d00      	cmp	r5, #0
 8011fe6:	d0c6      	beq.n	8011f76 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011fe8:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8011fec:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8011ff0:	fb93 f2f8 	sdiv	r2, r3, r8
 8011ff4:	fb08 3312 	mls	r3, r8, r2, r3
 8011ff8:	b353      	cbz	r3, 8012050 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8011ffa:	fb98 f2f3 	sdiv	r2, r8, r3
 8011ffe:	fb03 8812 	mls	r8, r3, r2, r8
 8012002:	f1b8 0f00 	cmp.w	r8, #0
 8012006:	d1f3      	bne.n	8011ff0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8012008:	2b01      	cmp	r3, #1
 801200a:	bf1c      	itt	ne
 801200c:	fb95 f5f3 	sdivne	r5, r5, r3
 8012010:	fb97 f7f3 	sdivne	r7, r7, r3
 8012014:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8012018:	f24b 5104 	movw	r1, #46340	; 0xb504
 801201c:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8012020:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8012024:	428b      	cmp	r3, r1
 8012026:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 801202a:	4608      	mov	r0, r1
 801202c:	dd01      	ble.n	8012032 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 801202e:	428a      	cmp	r2, r1
 8012030:	dc10      	bgt.n	8012054 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8012032:	fb90 f3f3 	sdiv	r3, r0, r3
 8012036:	fb90 f2f2 	sdiv	r2, r0, r2
 801203a:	4293      	cmp	r3, r2
 801203c:	bfa8      	it	ge
 801203e:	4613      	movge	r3, r2
 8012040:	435f      	muls	r7, r3
 8012042:	435d      	muls	r5, r3
 8012044:	4629      	mov	r1, r5
 8012046:	4638      	mov	r0, r7
 8012048:	f7ff fefe 	bl	8011e48 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801204c:	4680      	mov	r8, r0
 801204e:	e792      	b.n	8011f76 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012050:	4643      	mov	r3, r8
 8012052:	e7d9      	b.n	8012008 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8012054:	fb93 f3f1 	sdiv	r3, r3, r1
 8012058:	fb92 f2f1 	sdiv	r2, r2, r1
 801205c:	4293      	cmp	r3, r2
 801205e:	bfcc      	ite	gt
 8012060:	3301      	addgt	r3, #1
 8012062:	1c53      	addle	r3, r2, #1
 8012064:	fb97 f7f3 	sdiv	r7, r7, r3
 8012068:	fb95 f5f3 	sdiv	r5, r5, r3
 801206c:	e7ea      	b.n	8012044 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 801206e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012070:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012072:	1b93      	subs	r3, r2, r6
 8012074:	6463      	str	r3, [r4, #68]	; 0x44
 8012076:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012078:	18e9      	adds	r1, r5, r3
 801207a:	6561      	str	r1, [r4, #84]	; 0x54
 801207c:	1b81      	subs	r1, r0, r6
 801207e:	64a1      	str	r1, [r4, #72]	; 0x48
 8012080:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012082:	4430      	add	r0, r6
 8012084:	186f      	adds	r7, r5, r1
 8012086:	4432      	add	r2, r6
 8012088:	1b49      	subs	r1, r1, r5
 801208a:	65a7      	str	r7, [r4, #88]	; 0x58
 801208c:	64e0      	str	r0, [r4, #76]	; 0x4c
 801208e:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012090:	6522      	str	r2, [r4, #80]	; 0x50
 8012092:	1b5b      	subs	r3, r3, r5
 8012094:	6623      	str	r3, [r4, #96]	; 0x60
 8012096:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8012098:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801209a:	9200      	str	r2, [sp, #0]
 801209c:	9301      	str	r3, [sp, #4]
 801209e:	f104 0148 	add.w	r1, r4, #72	; 0x48
 80120a2:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 80120a6:	680f      	ldr	r7, [r1, #0]
 80120a8:	9800      	ldr	r0, [sp, #0]
 80120aa:	42ba      	cmp	r2, r7
 80120ac:	bfa8      	it	ge
 80120ae:	463a      	movge	r2, r7
 80120b0:	4287      	cmp	r7, r0
 80120b2:	bfc8      	it	gt
 80120b4:	9700      	strgt	r7, [sp, #0]
 80120b6:	690f      	ldr	r7, [r1, #16]
 80120b8:	9801      	ldr	r0, [sp, #4]
 80120ba:	42bb      	cmp	r3, r7
 80120bc:	bfa8      	it	ge
 80120be:	463b      	movge	r3, r7
 80120c0:	3104      	adds	r1, #4
 80120c2:	4287      	cmp	r7, r0
 80120c4:	bfc8      	it	gt
 80120c6:	9701      	strgt	r7, [sp, #4]
 80120c8:	458c      	cmp	ip, r1
 80120ca:	d1ec      	bne.n	80120a6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 80120cc:	4668      	mov	r0, sp
 80120ce:	2720      	movs	r7, #32
 80120d0:	fb92 f8f7 	sdiv	r8, r2, r7
 80120d4:	fb93 f7f7 	sdiv	r7, r3, r7
 80120d8:	f7ff fd57 	bl	8011b8a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80120dc:	4682      	mov	sl, r0
 80120de:	a801      	add	r0, sp, #4
 80120e0:	f7ff fd53 	bl	8011b8a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80120e4:	ebaa 0208 	sub.w	r2, sl, r8
 80120e8:	1bc0      	subs	r0, r0, r7
 80120ea:	f1b9 0f01 	cmp.w	r9, #1
 80120ee:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 80120f2:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 80120f6:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 80120fa:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 80120fe:	f47f af33 	bne.w	8011f68 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8012102:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8012104:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012106:	1b83      	subs	r3, r0, r6
 8012108:	6463      	str	r3, [r4, #68]	; 0x44
 801210a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801210c:	18ea      	adds	r2, r5, r3
 801210e:	6562      	str	r2, [r4, #84]	; 0x54
 8012110:	1b8a      	subs	r2, r1, r6
 8012112:	64a2      	str	r2, [r4, #72]	; 0x48
 8012114:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012116:	4431      	add	r1, r6
 8012118:	18af      	adds	r7, r5, r2
 801211a:	4406      	add	r6, r0
 801211c:	1b52      	subs	r2, r2, r5
 801211e:	1b5d      	subs	r5, r3, r5
 8012120:	65a7      	str	r7, [r4, #88]	; 0x58
 8012122:	64e1      	str	r1, [r4, #76]	; 0x4c
 8012124:	65e2      	str	r2, [r4, #92]	; 0x5c
 8012126:	6526      	str	r6, [r4, #80]	; 0x50
 8012128:	6625      	str	r5, [r4, #96]	; 0x60
 801212a:	e71d      	b.n	8011f68 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

0801212c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 801212c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801212e:	428b      	cmp	r3, r1
 8012130:	d102      	bne.n	8012138 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8012132:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8012134:	4293      	cmp	r3, r2
 8012136:	d003      	beq.n	8012140 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8012138:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 801213c:	f7ff bf00 	b.w	8011f40 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012140:	4770      	bx	lr

08012142 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8012142:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8012144:	428b      	cmp	r3, r1
 8012146:	d102      	bne.n	801214e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8012148:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801214a:	4293      	cmp	r3, r2
 801214c:	d003      	beq.n	8012156 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 801214e:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8012152:	f7ff bef5 	b.w	8011f40 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012156:	4770      	bx	lr

08012158 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8012158:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 801215c:	f7ff bef0 	b.w	8011f40 <_ZN8touchgfx4Line17updateCachedShapeEv>

08012160 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8012160:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012164:	b0a0      	sub	sp, #128	; 0x80
 8012166:	4604      	mov	r4, r0
 8012168:	460a      	mov	r2, r1
 801216a:	4601      	mov	r1, r0
 801216c:	a804      	add	r0, sp, #16
 801216e:	f014 fe3b 	bl	8026de8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8012172:	2300      	movs	r3, #0
 8012174:	9301      	str	r3, [sp, #4]
 8012176:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801217a:	2b01      	cmp	r3, #1
 801217c:	d17c      	bne.n	8012278 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 801217e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012180:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012182:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8012184:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012186:	1ac0      	subs	r0, r0, r3
 8012188:	eba1 0102 	sub.w	r1, r1, r2
 801218c:	d437      	bmi.n	80121fe <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 801218e:	2900      	cmp	r1, #0
 8012190:	aa01      	add	r2, sp, #4
 8012192:	db2e      	blt.n	80121f2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8012194:	f7ff fe98 	bl	8011ec8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012198:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 801219c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801219e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80121a0:	a804      	add	r0, sp, #16
 80121a2:	f014 ffa1 	bl	80270e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80121a6:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80121a8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80121aa:	a804      	add	r0, sp, #16
 80121ac:	f014 ffe9 	bl	8027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80121b0:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80121b2:	2db3      	cmp	r5, #179	; 0xb3
 80121b4:	dc33      	bgt.n	801221e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80121b6:	eba6 0805 	sub.w	r8, r6, r5
 80121ba:	4640      	mov	r0, r8
 80121bc:	f7ff fdf2 	bl	8011da4 <_ZN8touchgfx7CWRUtil4sineEi>
 80121c0:	a902      	add	r1, sp, #8
 80121c2:	9002      	str	r0, [sp, #8]
 80121c4:	a801      	add	r0, sp, #4
 80121c6:	f7ff fcd5 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80121ca:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80121cc:	1847      	adds	r7, r0, r1
 80121ce:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80121d2:	f7ff fde7 	bl	8011da4 <_ZN8touchgfx7CWRUtil4sineEi>
 80121d6:	a903      	add	r1, sp, #12
 80121d8:	9003      	str	r0, [sp, #12]
 80121da:	a801      	add	r0, sp, #4
 80121dc:	f7ff fcca 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80121e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80121e2:	4639      	mov	r1, r7
 80121e4:	1a12      	subs	r2, r2, r0
 80121e6:	a804      	add	r0, sp, #16
 80121e8:	f014 ffcb 	bl	8027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80121ec:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80121ee:	441d      	add	r5, r3
 80121f0:	e7df      	b.n	80121b2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 80121f2:	4249      	negs	r1, r1
 80121f4:	f7ff fe68 	bl	8011ec8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80121f8:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 80121fc:	e7ce      	b.n	801219c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80121fe:	2900      	cmp	r1, #0
 8012200:	f1c0 0000 	rsb	r0, r0, #0
 8012204:	aa01      	add	r2, sp, #4
 8012206:	db04      	blt.n	8012212 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8012208:	f7ff fe5e 	bl	8011ec8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801220c:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8012210:	e7c4      	b.n	801219c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012212:	4249      	negs	r1, r1
 8012214:	f7ff fe58 	bl	8011ec8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012218:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 801221c:	e7be      	b.n	801219c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801221e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012220:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012222:	a804      	add	r0, sp, #16
 8012224:	f014 ffad 	bl	8027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012228:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801222a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801222c:	a804      	add	r0, sp, #16
 801222e:	f014 ffa8 	bl	8027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012232:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012234:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8012238:	2d00      	cmp	r5, #0
 801223a:	dd31      	ble.n	80122a0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 801223c:	eb05 0806 	add.w	r8, r5, r6
 8012240:	4640      	mov	r0, r8
 8012242:	f7ff fdaf 	bl	8011da4 <_ZN8touchgfx7CWRUtil4sineEi>
 8012246:	a902      	add	r1, sp, #8
 8012248:	9002      	str	r0, [sp, #8]
 801224a:	a801      	add	r0, sp, #4
 801224c:	f7ff fc92 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012250:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8012252:	1847      	adds	r7, r0, r1
 8012254:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012258:	f7ff fda4 	bl	8011da4 <_ZN8touchgfx7CWRUtil4sineEi>
 801225c:	a903      	add	r1, sp, #12
 801225e:	9003      	str	r0, [sp, #12]
 8012260:	a801      	add	r0, sp, #4
 8012262:	f7ff fc87 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012266:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012268:	4639      	mov	r1, r7
 801226a:	1a12      	subs	r2, r2, r0
 801226c:	a804      	add	r0, sp, #16
 801226e:	f014 ff88 	bl	8027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012272:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012274:	1aed      	subs	r5, r5, r3
 8012276:	e7df      	b.n	8012238 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8012278:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801227a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801227c:	a804      	add	r0, sp, #16
 801227e:	f014 ff33 	bl	80270e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012282:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012284:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8012286:	a804      	add	r0, sp, #16
 8012288:	f014 ff7b 	bl	8027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801228c:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801228e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012290:	a804      	add	r0, sp, #16
 8012292:	f014 ff76 	bl	8027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012296:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012298:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801229a:	a804      	add	r0, sp, #16
 801229c:	f014 ff71 	bl	8027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80122a0:	21ff      	movs	r1, #255	; 0xff
 80122a2:	a804      	add	r0, sp, #16
 80122a4:	f014 fe5c 	bl	8026f60 <_ZN8touchgfx6Canvas6renderEh>
 80122a8:	4b04      	ldr	r3, [pc, #16]	; (80122bc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 80122aa:	9304      	str	r3, [sp, #16]
 80122ac:	4604      	mov	r4, r0
 80122ae:	a80c      	add	r0, sp, #48	; 0x30
 80122b0:	f001 f8cc 	bl	801344c <_ZN8touchgfx7OutlineD1Ev>
 80122b4:	4620      	mov	r0, r4
 80122b6:	b020      	add	sp, #128	; 0x80
 80122b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80122bc:	0802f6b0 	.word	0x0802f6b0

080122c0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80122c0:	2000      	movs	r0, #0
 80122c2:	4770      	bx	lr

080122c4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80122c4:	4b07      	ldr	r3, [pc, #28]	; (80122e4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80122c6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80122c8:	881b      	ldrh	r3, [r3, #0]
 80122ca:	4293      	cmp	r3, r2
 80122cc:	bf81      	itttt	hi
 80122ce:	4b06      	ldrhi	r3, [pc, #24]	; (80122e8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80122d0:	681b      	ldrhi	r3, [r3, #0]
 80122d2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80122d6:	7858      	ldrbhi	r0, [r3, #1]
 80122d8:	bf8c      	ite	hi
 80122da:	f000 0003 	andhi.w	r0, r0, #3
 80122de:	2000      	movls	r0, #0
 80122e0:	4770      	bx	lr
 80122e2:	bf00      	nop
 80122e4:	20012e10 	.word	0x20012e10
 80122e8:	20012e0c 	.word	0x20012e0c

080122ec <_ZN8touchgfx8TextAreaD1Ev>:
 80122ec:	4770      	bx	lr
	...

080122f0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 80122f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80122f4:	4b10      	ldr	r3, [pc, #64]	; (8012338 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 80122f6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80122f8:	881b      	ldrh	r3, [r3, #0]
 80122fa:	428b      	cmp	r3, r1
 80122fc:	4604      	mov	r4, r0
 80122fe:	d918      	bls.n	8012332 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8012300:	6803      	ldr	r3, [r0, #0]
 8012302:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8012304:	4b0d      	ldr	r3, [pc, #52]	; (801233c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8012306:	6818      	ldr	r0, [r3, #0]
 8012308:	f7f6 fe30 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 801230c:	6823      	ldr	r3, [r4, #0]
 801230e:	4606      	mov	r6, r0
 8012310:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012312:	4620      	mov	r0, r4
 8012314:	4798      	blx	r3
 8012316:	6823      	ldr	r3, [r4, #0]
 8012318:	4607      	mov	r7, r0
 801231a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801231e:	4620      	mov	r0, r4
 8012320:	4798      	blx	r3
 8012322:	463a      	mov	r2, r7
 8012324:	4603      	mov	r3, r0
 8012326:	4631      	mov	r1, r6
 8012328:	4620      	mov	r0, r4
 801232a:	46ac      	mov	ip, r5
 801232c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012330:	4760      	bx	ip
 8012332:	2000      	movs	r0, #0
 8012334:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012338:	20012e10 	.word	0x20012e10
 801233c:	20012e18 	.word	0x20012e18

08012340 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8012340:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012344:	4b17      	ldr	r3, [pc, #92]	; (80123a4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8012346:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012348:	881b      	ldrh	r3, [r3, #0]
 801234a:	428b      	cmp	r3, r1
 801234c:	4604      	mov	r4, r0
 801234e:	d926      	bls.n	801239e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8012350:	4b15      	ldr	r3, [pc, #84]	; (80123a8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8012352:	681b      	ldr	r3, [r3, #0]
 8012354:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8012358:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 801235c:	4b13      	ldr	r3, [pc, #76]	; (80123ac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 801235e:	7855      	ldrb	r5, [r2, #1]
 8012360:	681b      	ldr	r3, [r3, #0]
 8012362:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8012366:	6833      	ldr	r3, [r6, #0]
 8012368:	69df      	ldr	r7, [r3, #28]
 801236a:	4b11      	ldr	r3, [pc, #68]	; (80123b0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 801236c:	6818      	ldr	r0, [r3, #0]
 801236e:	f7f6 fdfd 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 8012372:	6823      	ldr	r3, [r4, #0]
 8012374:	4680      	mov	r8, r0
 8012376:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012378:	4620      	mov	r0, r4
 801237a:	4798      	blx	r3
 801237c:	6823      	ldr	r3, [r4, #0]
 801237e:	4681      	mov	r9, r0
 8012380:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012384:	4620      	mov	r0, r4
 8012386:	4798      	blx	r3
 8012388:	f3c5 0581 	ubfx	r5, r5, #2, #2
 801238c:	9000      	str	r0, [sp, #0]
 801238e:	464b      	mov	r3, r9
 8012390:	4642      	mov	r2, r8
 8012392:	4629      	mov	r1, r5
 8012394:	4630      	mov	r0, r6
 8012396:	47b8      	blx	r7
 8012398:	b003      	add	sp, #12
 801239a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801239e:	2000      	movs	r0, #0
 80123a0:	e7fa      	b.n	8012398 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80123a2:	bf00      	nop
 80123a4:	20012e10 	.word	0x20012e10
 80123a8:	20012e0c 	.word	0x20012e0c
 80123ac:	20012e14 	.word	0x20012e14
 80123b0:	20012e18 	.word	0x20012e18

080123b4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80123b4:	b40e      	push	{r1, r2, r3}
 80123b6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80123ba:	4b2f      	ldr	r3, [pc, #188]	; (8012478 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 80123bc:	881a      	ldrh	r2, [r3, #0]
 80123be:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80123c0:	429a      	cmp	r2, r3
 80123c2:	b09d      	sub	sp, #116	; 0x74
 80123c4:	4604      	mov	r4, r0
 80123c6:	d954      	bls.n	8012472 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 80123c8:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 801247c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 80123cc:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8012480 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80123d0:	aa26      	add	r2, sp, #152	; 0x98
 80123d2:	9202      	str	r2, [sp, #8]
 80123d4:	f8d9 2000 	ldr.w	r2, [r9]
 80123d8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80123dc:	f8d8 3000 	ldr.w	r3, [r8]
 80123e0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80123e4:	682b      	ldr	r3, [r5, #0]
 80123e6:	4628      	mov	r0, r5
 80123e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80123ea:	4798      	blx	r3
 80123ec:	b207      	sxth	r7, r0
 80123ee:	4606      	mov	r6, r0
 80123f0:	a803      	add	r0, sp, #12
 80123f2:	f005 fa57 	bl	80178a4 <_ZN8touchgfx12TextProviderC1Ev>
 80123f6:	682b      	ldr	r3, [r5, #0]
 80123f8:	4628      	mov	r0, r5
 80123fa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80123fc:	4798      	blx	r3
 80123fe:	682b      	ldr	r3, [r5, #0]
 8012400:	4682      	mov	sl, r0
 8012402:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012404:	4628      	mov	r0, r5
 8012406:	4798      	blx	r3
 8012408:	4653      	mov	r3, sl
 801240a:	9000      	str	r0, [sp, #0]
 801240c:	9a02      	ldr	r2, [sp, #8]
 801240e:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012410:	a803      	add	r0, sp, #12
 8012412:	f005 faa2 	bl	801795a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012416:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012418:	f8d9 3000 	ldr.w	r3, [r9]
 801241c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8012420:	8925      	ldrh	r5, [r4, #8]
 8012422:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8012426:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 801242a:	eba5 050c 	sub.w	r5, r5, ip
 801242e:	784a      	ldrb	r2, [r1, #1]
 8012430:	f8d8 3000 	ldr.w	r3, [r8]
 8012434:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8012438:	b22d      	sxth	r5, r5
 801243a:	9500      	str	r5, [sp, #0]
 801243c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8012440:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012444:	a803      	add	r0, sp, #12
 8012446:	f002 feed 	bl	8015224 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 801244a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 801244e:	18b9      	adds	r1, r7, r2
 8012450:	2900      	cmp	r1, #0
 8012452:	b203      	sxth	r3, r0
 8012454:	dd0b      	ble.n	801246e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8012456:	3b01      	subs	r3, #1
 8012458:	fb13 f302 	smulbb	r3, r3, r2
 801245c:	fb16 3300 	smlabb	r3, r6, r0, r3
 8012460:	b21f      	sxth	r7, r3
 8012462:	4638      	mov	r0, r7
 8012464:	b01d      	add	sp, #116	; 0x74
 8012466:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801246a:	b003      	add	sp, #12
 801246c:	4770      	bx	lr
 801246e:	2b00      	cmp	r3, #0
 8012470:	dcf7      	bgt.n	8012462 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012472:	2700      	movs	r7, #0
 8012474:	e7f5      	b.n	8012462 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012476:	bf00      	nop
 8012478:	20012e10 	.word	0x20012e10
 801247c:	20012e0c 	.word	0x20012e0c
 8012480:	20012e14 	.word	0x20012e14

08012484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8012484:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012488:	4bbc      	ldr	r3, [pc, #752]	; (801277c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 801248a:	460c      	mov	r4, r1
 801248c:	881b      	ldrh	r3, [r3, #0]
 801248e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8012490:	428b      	cmp	r3, r1
 8012492:	b0a9      	sub	sp, #164	; 0xa4
 8012494:	4680      	mov	r8, r0
 8012496:	d809      	bhi.n	80124ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8012498:	2300      	movs	r3, #0
 801249a:	f04f 32ff 	mov.w	r2, #4294967295
 801249e:	e9c0 3200 	strd	r3, r2, [r0]
 80124a2:	6083      	str	r3, [r0, #8]
 80124a4:	4640      	mov	r0, r8
 80124a6:	b029      	add	sp, #164	; 0xa4
 80124a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80124ac:	4eb4      	ldr	r6, [pc, #720]	; (8012780 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80124ae:	6833      	ldr	r3, [r6, #0]
 80124b0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80124b4:	4bb3      	ldr	r3, [pc, #716]	; (8012784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 80124b6:	681b      	ldr	r3, [r3, #0]
 80124b8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80124bc:	4bb2      	ldr	r3, [pc, #712]	; (8012788 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80124be:	6818      	ldr	r0, [r3, #0]
 80124c0:	f7f6 fd54 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 80124c4:	682b      	ldr	r3, [r5, #0]
 80124c6:	4681      	mov	r9, r0
 80124c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80124ca:	4628      	mov	r0, r5
 80124cc:	4798      	blx	r3
 80124ce:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 80124d0:	b203      	sxth	r3, r0
 80124d2:	4407      	add	r7, r0
 80124d4:	9304      	str	r3, [sp, #16]
 80124d6:	b2bb      	uxth	r3, r7
 80124d8:	9303      	str	r3, [sp, #12]
 80124da:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80124de:	4682      	mov	sl, r0
 80124e0:	a80f      	add	r0, sp, #60	; 0x3c
 80124e2:	2b00      	cmp	r3, #0
 80124e4:	f040 80a6 	bne.w	8012634 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 80124e8:	f005 f9dc 	bl	80178a4 <_ZN8touchgfx12TextProviderC1Ev>
 80124ec:	682b      	ldr	r3, [r5, #0]
 80124ee:	4628      	mov	r0, r5
 80124f0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80124f2:	4798      	blx	r3
 80124f4:	682b      	ldr	r3, [r5, #0]
 80124f6:	4606      	mov	r6, r0
 80124f8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80124fa:	4628      	mov	r0, r5
 80124fc:	4798      	blx	r3
 80124fe:	6823      	ldr	r3, [r4, #0]
 8012500:	4607      	mov	r7, r0
 8012502:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012504:	4620      	mov	r0, r4
 8012506:	4798      	blx	r3
 8012508:	6823      	ldr	r3, [r4, #0]
 801250a:	4683      	mov	fp, r0
 801250c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012510:	4620      	mov	r0, r4
 8012512:	4798      	blx	r3
 8012514:	463b      	mov	r3, r7
 8012516:	e9cd b000 	strd	fp, r0, [sp]
 801251a:	4649      	mov	r1, r9
 801251c:	4632      	mov	r2, r6
 801251e:	a80f      	add	r0, sp, #60	; 0x3c
 8012520:	f005 fa30 	bl	8017984 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012524:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012528:	f8df b254 	ldr.w	fp, [pc, #596]	; 8012780 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 801252c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012530:	f04f 0600 	mov.w	r6, #0
 8012534:	bf0c      	ite	eq
 8012536:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 801253a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 801253e:	4637      	mov	r7, r6
 8012540:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012542:	f8db 3000 	ldr.w	r3, [fp]
 8012546:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801254a:	4629      	mov	r1, r5
 801254c:	785b      	ldrb	r3, [r3, #1]
 801254e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8012552:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012556:	a80f      	add	r0, sp, #60	; 0x3c
 8012558:	f002 fb7f 	bl	8014c5a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801255c:	9b03      	ldr	r3, [sp, #12]
 801255e:	4286      	cmp	r6, r0
 8012560:	bfb8      	it	lt
 8012562:	4606      	movlt	r6, r0
 8012564:	3701      	adds	r7, #1
 8012566:	eba9 0903 	sub.w	r9, r9, r3
 801256a:	a80f      	add	r0, sp, #60	; 0x3c
 801256c:	b236      	sxth	r6, r6
 801256e:	b2bf      	uxth	r7, r7
 8012570:	fa0f f989 	sxth.w	r9, r9
 8012574:	f005 f9bd 	bl	80178f2 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8012578:	b918      	cbnz	r0, 8012582 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801257a:	7a2b      	ldrb	r3, [r5, #8]
 801257c:	444b      	add	r3, r9
 801257e:	2b00      	cmp	r3, #0
 8012580:	dcde      	bgt.n	8012540 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8012582:	9b03      	ldr	r3, [sp, #12]
 8012584:	9a04      	ldr	r2, [sp, #16]
 8012586:	f895 9009 	ldrb.w	r9, [r5, #9]
 801258a:	fb13 f707 	smulbb	r7, r3, r7
 801258e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012590:	1aff      	subs	r7, r7, r3
 8012592:	b2bf      	uxth	r7, r7
 8012594:	b23b      	sxth	r3, r7
 8012596:	429a      	cmp	r2, r3
 8012598:	bfa8      	it	ge
 801259a:	4657      	movge	r7, sl
 801259c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80125a0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80125a4:	6823      	ldr	r3, [r4, #0]
 80125a6:	bf08      	it	eq
 80125a8:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 80125ac:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80125ae:	bf18      	it	ne
 80125b0:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 80125b4:	4620      	mov	r0, r4
 80125b6:	4798      	blx	r3
 80125b8:	444f      	add	r7, r9
 80125ba:	fa1f f987 	uxth.w	r9, r7
 80125be:	2801      	cmp	r0, #1
 80125c0:	fa0f f789 	sxth.w	r7, r9
 80125c4:	b2b3      	uxth	r3, r6
 80125c6:	f000 80e1 	beq.w	801278c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 80125ca:	2802      	cmp	r0, #2
 80125cc:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 80125d0:	f000 80e2 	beq.w	8012798 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 80125d4:	7aea      	ldrb	r2, [r5, #11]
 80125d6:	7b2d      	ldrb	r5, [r5, #12]
 80125d8:	b236      	sxth	r6, r6
 80125da:	1ab6      	subs	r6, r6, r2
 80125dc:	442a      	add	r2, r5
 80125de:	4413      	add	r3, r2
 80125e0:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 80125e4:	fa1f fa86 	uxth.w	sl, r6
 80125e8:	b29b      	uxth	r3, r3
 80125ea:	2a02      	cmp	r2, #2
 80125ec:	fa0f fb8a 	sxth.w	fp, sl
 80125f0:	b21e      	sxth	r6, r3
 80125f2:	f000 80d5 	beq.w	80127a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 80125f6:	2a03      	cmp	r2, #3
 80125f8:	f000 80dd 	beq.w	80127b6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 80125fc:	2a01      	cmp	r2, #1
 80125fe:	f040 80e5 	bne.w	80127cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8012602:	8925      	ldrh	r5, [r4, #8]
 8012604:	4633      	mov	r3, r6
 8012606:	eba5 0909 	sub.w	r9, r5, r9
 801260a:	463e      	mov	r6, r7
 801260c:	465d      	mov	r5, fp
 801260e:	461f      	mov	r7, r3
 8012610:	fa0f fb89 	sxth.w	fp, r9
 8012614:	4b5c      	ldr	r3, [pc, #368]	; (8012788 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8012616:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012618:	6818      	ldr	r0, [r3, #0]
 801261a:	f7f6 fca7 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 801261e:	f8a8 b000 	strh.w	fp, [r8]
 8012622:	f8a8 5002 	strh.w	r5, [r8, #2]
 8012626:	f8a8 6004 	strh.w	r6, [r8, #4]
 801262a:	f8a8 7006 	strh.w	r7, [r8, #6]
 801262e:	f8c8 0008 	str.w	r0, [r8, #8]
 8012632:	e737      	b.n	80124a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8012634:	f005 f936 	bl	80178a4 <_ZN8touchgfx12TextProviderC1Ev>
 8012638:	682b      	ldr	r3, [r5, #0]
 801263a:	4628      	mov	r0, r5
 801263c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801263e:	4798      	blx	r3
 8012640:	682b      	ldr	r3, [r5, #0]
 8012642:	4607      	mov	r7, r0
 8012644:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012646:	4628      	mov	r0, r5
 8012648:	4798      	blx	r3
 801264a:	6823      	ldr	r3, [r4, #0]
 801264c:	4683      	mov	fp, r0
 801264e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012650:	4620      	mov	r0, r4
 8012652:	4798      	blx	r3
 8012654:	6822      	ldr	r2, [r4, #0]
 8012656:	9005      	str	r0, [sp, #20]
 8012658:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 801265c:	4620      	mov	r0, r4
 801265e:	4790      	blx	r2
 8012660:	9b05      	ldr	r3, [sp, #20]
 8012662:	9001      	str	r0, [sp, #4]
 8012664:	463a      	mov	r2, r7
 8012666:	4649      	mov	r1, r9
 8012668:	9300      	str	r3, [sp, #0]
 801266a:	a80f      	add	r0, sp, #60	; 0x3c
 801266c:	465b      	mov	r3, fp
 801266e:	f005 f989 	bl	8017984 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012672:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012676:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 801267a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801267c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8012680:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012684:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012688:	bf0a      	itet	eq
 801268a:	464a      	moveq	r2, r9
 801268c:	461a      	movne	r2, r3
 801268e:	4699      	moveq	r9, r3
 8012690:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8012694:	1ad2      	subs	r2, r2, r3
 8012696:	6833      	ldr	r3, [r6, #0]
 8012698:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 801269c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80126a0:	af0f      	add	r7, sp, #60	; 0x3c
 80126a2:	7859      	ldrb	r1, [r3, #1]
 80126a4:	9707      	str	r7, [sp, #28]
 80126a6:	2300      	movs	r3, #0
 80126a8:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80126ac:	f8ad 3018 	strh.w	r3, [sp, #24]
 80126b0:	f88d 1020 	strb.w	r1, [sp, #32]
 80126b4:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80126b8:	9509      	str	r5, [sp, #36]	; 0x24
 80126ba:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80126be:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 80126c2:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 80126c6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80126ca:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80126ce:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80126d2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80126d6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80126da:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80126de:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 80126e2:	b350      	cbz	r0, 801273a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80126e4:	682b      	ldr	r3, [r5, #0]
 80126e6:	4628      	mov	r0, r5
 80126e8:	695b      	ldr	r3, [r3, #20]
 80126ea:	4798      	blx	r3
 80126ec:	4607      	mov	r7, r0
 80126ee:	b320      	cbz	r0, 801273a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80126f0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80126f2:	6803      	ldr	r3, [r0, #0]
 80126f4:	4639      	mov	r1, r7
 80126f6:	68db      	ldr	r3, [r3, #12]
 80126f8:	4798      	blx	r3
 80126fa:	4606      	mov	r6, r0
 80126fc:	b1e8      	cbz	r0, 801273a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80126fe:	7b43      	ldrb	r3, [r0, #13]
 8012700:	7a82      	ldrb	r2, [r0, #10]
 8012702:	005b      	lsls	r3, r3, #1
 8012704:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012708:	4313      	orrs	r3, r2
 801270a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801270e:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8012712:	2b06      	cmp	r3, #6
 8012714:	d111      	bne.n	801273a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012716:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012718:	6803      	ldr	r3, [r0, #0]
 801271a:	4632      	mov	r2, r6
 801271c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801271e:	4639      	mov	r1, r7
 8012720:	4798      	blx	r3
 8012722:	7b73      	ldrb	r3, [r6, #13]
 8012724:	005b      	lsls	r3, r3, #1
 8012726:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801272a:	7ab3      	ldrb	r3, [r6, #10]
 801272c:	4313      	orrs	r3, r2
 801272e:	4418      	add	r0, r3
 8012730:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012734:	4418      	add	r0, r3
 8012736:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 801273a:	2600      	movs	r6, #0
 801273c:	4637      	mov	r7, r6
 801273e:	a806      	add	r0, sp, #24
 8012740:	f002 fc6c 	bl	801501c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8012744:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8012748:	9b03      	ldr	r3, [sp, #12]
 801274a:	4286      	cmp	r6, r0
 801274c:	eba9 0903 	sub.w	r9, r9, r3
 8012750:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8012754:	bfb8      	it	lt
 8012756:	4606      	movlt	r6, r0
 8012758:	3701      	adds	r7, #1
 801275a:	b236      	sxth	r6, r6
 801275c:	b2bf      	uxth	r7, r7
 801275e:	fa0f f989 	sxth.w	r9, r9
 8012762:	2b00      	cmp	r3, #0
 8012764:	f43f af0d 	beq.w	8012582 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012768:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 801276c:	2b00      	cmp	r3, #0
 801276e:	f47f af08 	bne.w	8012582 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012772:	7a2b      	ldrb	r3, [r5, #8]
 8012774:	444b      	add	r3, r9
 8012776:	2b00      	cmp	r3, #0
 8012778:	dce1      	bgt.n	801273e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 801277a:	e702      	b.n	8012582 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801277c:	20012e10 	.word	0x20012e10
 8012780:	20012e0c 	.word	0x20012e0c
 8012784:	20012e14 	.word	0x20012e14
 8012788:	20012e18 	.word	0x20012e18
 801278c:	ebaa 0606 	sub.w	r6, sl, r6
 8012790:	2002      	movs	r0, #2
 8012792:	fb96 f6f0 	sdiv	r6, r6, r0
 8012796:	e71d      	b.n	80125d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012798:	441e      	add	r6, r3
 801279a:	ebaa 0606 	sub.w	r6, sl, r6
 801279e:	e719      	b.n	80125d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80127a0:	8925      	ldrh	r5, [r4, #8]
 80127a2:	1aed      	subs	r5, r5, r3
 80127a4:	eba5 050a 	sub.w	r5, r5, sl
 80127a8:	fa0f fb85 	sxth.w	fp, r5
 80127ac:	8965      	ldrh	r5, [r4, #10]
 80127ae:	eba5 0509 	sub.w	r5, r5, r9
 80127b2:	b22d      	sxth	r5, r5
 80127b4:	e72e      	b.n	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80127b6:	8965      	ldrh	r5, [r4, #10]
 80127b8:	1aed      	subs	r5, r5, r3
 80127ba:	eba5 050a 	sub.w	r5, r5, sl
 80127be:	4633      	mov	r3, r6
 80127c0:	b22d      	sxth	r5, r5
 80127c2:	463e      	mov	r6, r7
 80127c4:	f04f 0b00 	mov.w	fp, #0
 80127c8:	461f      	mov	r7, r3
 80127ca:	e723      	b.n	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80127cc:	2500      	movs	r5, #0
 80127ce:	e721      	b.n	8012614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

080127d0 <_ZN8touchgfx8TextAreaD0Ev>:
 80127d0:	b510      	push	{r4, lr}
 80127d2:	2148      	movs	r1, #72	; 0x48
 80127d4:	4604      	mov	r4, r0
 80127d6:	f017 fa4a 	bl	8029c6e <_ZdlPvj>
 80127da:	4620      	mov	r0, r4
 80127dc:	bd10      	pop	{r4, pc}
	...

080127e0 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 80127e0:	b513      	push	{r0, r1, r4, lr}
 80127e2:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 80127e6:	4604      	mov	r4, r0
 80127e8:	b1fb      	cbz	r3, 801282a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80127ea:	4b16      	ldr	r3, [pc, #88]	; (8012844 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 80127ec:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80127ee:	881b      	ldrh	r3, [r3, #0]
 80127f0:	428b      	cmp	r3, r1
 80127f2:	d91a      	bls.n	801282a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80127f4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80127f8:	2b00      	cmp	r3, #0
 80127fa:	dd16      	ble.n	801282a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80127fc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012800:	2b00      	cmp	r3, #0
 8012802:	dd12      	ble.n	801282a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012804:	4b10      	ldr	r3, [pc, #64]	; (8012848 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8012806:	6818      	ldr	r0, [r3, #0]
 8012808:	f7f6 fbb0 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 801280c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012810:	6822      	ldr	r2, [r4, #0]
 8012812:	2b00      	cmp	r3, #0
 8012814:	db06      	blt.n	8012824 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012816:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801281a:	2b00      	cmp	r3, #0
 801281c:	db02      	blt.n	8012824 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801281e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012820:	4298      	cmp	r0, r3
 8012822:	d004      	beq.n	801282e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8012824:	6953      	ldr	r3, [r2, #20]
 8012826:	4620      	mov	r0, r4
 8012828:	4798      	blx	r3
 801282a:	b002      	add	sp, #8
 801282c:	bd10      	pop	{r4, pc}
 801282e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8012832:	c903      	ldmia	r1, {r0, r1}
 8012834:	466b      	mov	r3, sp
 8012836:	e883 0003 	stmia.w	r3, {r0, r1}
 801283a:	6912      	ldr	r2, [r2, #16]
 801283c:	4619      	mov	r1, r3
 801283e:	4620      	mov	r0, r4
 8012840:	4790      	blx	r2
 8012842:	e7f2      	b.n	801282a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012844:	20012e10 	.word	0x20012e10
 8012848:	20012e18 	.word	0x20012e18

0801284c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 801284c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012850:	4b44      	ldr	r3, [pc, #272]	; (8012964 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8012852:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012854:	881b      	ldrh	r3, [r3, #0]
 8012856:	4293      	cmp	r3, r2
 8012858:	b08e      	sub	sp, #56	; 0x38
 801285a:	4604      	mov	r4, r0
 801285c:	d97e      	bls.n	801295c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801285e:	6808      	ldr	r0, [r1, #0]
 8012860:	4d41      	ldr	r5, [pc, #260]	; (8012968 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8012862:	6849      	ldr	r1, [r1, #4]
 8012864:	ab05      	add	r3, sp, #20
 8012866:	c303      	stmia	r3!, {r0, r1}
 8012868:	4611      	mov	r1, r2
 801286a:	6828      	ldr	r0, [r5, #0]
 801286c:	f7f6 fb7e 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 8012870:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8012874:	2b00      	cmp	r3, #0
 8012876:	db11      	blt.n	801289c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012878:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801287c:	2b00      	cmp	r3, #0
 801287e:	db0d      	blt.n	801289c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012880:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8012882:	4298      	cmp	r0, r3
 8012884:	d10a      	bne.n	801289c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8012886:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 801288a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801288e:	ab09      	add	r3, sp, #36	; 0x24
 8012890:	e883 0003 	stmia.w	r3, {r0, r1}
 8012894:	4619      	mov	r1, r3
 8012896:	a805      	add	r0, sp, #20
 8012898:	f7fe f860 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 801289c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80128a0:	2b00      	cmp	r3, #0
 80128a2:	dd5b      	ble.n	801295c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80128a4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80128a8:	2b00      	cmp	r3, #0
 80128aa:	dd57      	ble.n	801295c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80128ac:	4f2f      	ldr	r7, [pc, #188]	; (801296c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80128ae:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80128b0:	683b      	ldr	r3, [r7, #0]
 80128b2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80128b6:	4b2e      	ldr	r3, [pc, #184]	; (8012970 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80128b8:	681b      	ldr	r3, [r3, #0]
 80128ba:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80128be:	2e00      	cmp	r6, #0
 80128c0:	d04c      	beq.n	801295c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80128c2:	6823      	ldr	r3, [r4, #0]
 80128c4:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 80128c8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80128ca:	4620      	mov	r0, r4
 80128cc:	4798      	blx	r3
 80128ce:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80128d0:	683b      	ldr	r3, [r7, #0]
 80128d2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 80128d6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 80128da:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 80128de:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80128e0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80128e4:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 80128e8:	785b      	ldrb	r3, [r3, #1]
 80128ea:	9609      	str	r6, [sp, #36]	; 0x24
 80128ec:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80128f0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80128f4:	4b1f      	ldr	r3, [pc, #124]	; (8012974 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 80128f6:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 80128fa:	681b      	ldr	r3, [r3, #0]
 80128fc:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8012900:	910b      	str	r1, [sp, #44]	; 0x2c
 8012902:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8012906:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 801290a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 801290e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8012912:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012916:	b10a      	cbz	r2, 801291c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8012918:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 801291a:	b906      	cbnz	r6, 801291e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 801291c:	689e      	ldr	r6, [r3, #8]
 801291e:	af07      	add	r7, sp, #28
 8012920:	4621      	mov	r1, r4
 8012922:	4638      	mov	r0, r7
 8012924:	f004 fab0 	bl	8016e88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012928:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801292a:	6828      	ldr	r0, [r5, #0]
 801292c:	f7f6 fb1e 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 8012930:	6823      	ldr	r3, [r4, #0]
 8012932:	4605      	mov	r5, r0
 8012934:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012936:	4620      	mov	r0, r4
 8012938:	4798      	blx	r3
 801293a:	6823      	ldr	r3, [r4, #0]
 801293c:	4680      	mov	r8, r0
 801293e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012942:	4620      	mov	r0, r4
 8012944:	4798      	blx	r3
 8012946:	e9cd 8002 	strd	r8, r0, [sp, #8]
 801294a:	ab09      	add	r3, sp, #36	; 0x24
 801294c:	9300      	str	r3, [sp, #0]
 801294e:	9501      	str	r5, [sp, #4]
 8012950:	ab05      	add	r3, sp, #20
 8012952:	e897 0006 	ldmia.w	r7, {r1, r2}
 8012956:	4630      	mov	r0, r6
 8012958:	f7f6 faba 	bl	8008ed0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801295c:	b00e      	add	sp, #56	; 0x38
 801295e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012962:	bf00      	nop
 8012964:	20012e10 	.word	0x20012e10
 8012968:	20012e18 	.word	0x20012e18
 801296c:	20012e0c 	.word	0x20012e0c
 8012970:	20012e14 	.word	0x20012e14
 8012974:	20012db4 	.word	0x20012db4

08012978 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012978:	b538      	push	{r3, r4, r5, lr}
 801297a:	4b0e      	ldr	r3, [pc, #56]	; (80129b4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 801297c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801297e:	881b      	ldrh	r3, [r3, #0]
 8012980:	429a      	cmp	r2, r3
 8012982:	4604      	mov	r4, r0
 8012984:	d214      	bcs.n	80129b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8012986:	6803      	ldr	r3, [r0, #0]
 8012988:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801298a:	4798      	blx	r3
 801298c:	6823      	ldr	r3, [r4, #0]
 801298e:	4605      	mov	r5, r0
 8012990:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8012992:	4620      	mov	r0, r4
 8012994:	4798      	blx	r3
 8012996:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801299a:	b22d      	sxth	r5, r5
 801299c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80129a0:	4601      	mov	r1, r0
 80129a2:	bf06      	itte	eq
 80129a4:	4602      	moveq	r2, r0
 80129a6:	4629      	moveq	r1, r5
 80129a8:	462a      	movne	r2, r5
 80129aa:	4620      	mov	r0, r4
 80129ac:	f7fd fdb6 	bl	801051c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80129b0:	bd38      	pop	{r3, r4, r5, pc}
 80129b2:	bf00      	nop
 80129b4:	20012e10 	.word	0x20012e10

080129b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80129b8:	b530      	push	{r4, r5, lr}
 80129ba:	888b      	ldrh	r3, [r1, #4]
 80129bc:	8583      	strh	r3, [r0, #44]	; 0x2c
 80129be:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80129c2:	b085      	sub	sp, #20
 80129c4:	4604      	mov	r4, r0
 80129c6:	b923      	cbnz	r3, 80129d2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80129c8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80129cc:	b90b      	cbnz	r3, 80129d2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80129ce:	f7ff ffd3 	bl	8012978 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80129d2:	6823      	ldr	r3, [r4, #0]
 80129d4:	466d      	mov	r5, sp
 80129d6:	4621      	mov	r1, r4
 80129d8:	4628      	mov	r0, r5
 80129da:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80129de:	4798      	blx	r3
 80129e0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80129e4:	343c      	adds	r4, #60	; 0x3c
 80129e6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80129ea:	b005      	add	sp, #20
 80129ec:	bd30      	pop	{r4, r5, pc}

080129ee <_ZNK8touchgfx3Box12getSolidRectEv>:
 80129ee:	2300      	movs	r3, #0
 80129f0:	8083      	strh	r3, [r0, #4]
 80129f2:	80c3      	strh	r3, [r0, #6]
 80129f4:	8003      	strh	r3, [r0, #0]
 80129f6:	8043      	strh	r3, [r0, #2]
 80129f8:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 80129fc:	2bff      	cmp	r3, #255	; 0xff
 80129fe:	bf01      	itttt	eq
 8012a00:	890b      	ldrheq	r3, [r1, #8]
 8012a02:	8083      	strheq	r3, [r0, #4]
 8012a04:	894b      	ldrheq	r3, [r1, #10]
 8012a06:	80c3      	strheq	r3, [r0, #6]
 8012a08:	4770      	bx	lr
	...

08012a0c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8012a0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012a0e:	4604      	mov	r4, r0
 8012a10:	6808      	ldr	r0, [r1, #0]
 8012a12:	6849      	ldr	r1, [r1, #4]
 8012a14:	466b      	mov	r3, sp
 8012a16:	c303      	stmia	r3!, {r0, r1}
 8012a18:	6823      	ldr	r3, [r4, #0]
 8012a1a:	4669      	mov	r1, sp
 8012a1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012a1e:	4620      	mov	r0, r4
 8012a20:	4798      	blx	r3
 8012a22:	4b08      	ldr	r3, [pc, #32]	; (8012a44 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8012a24:	681b      	ldr	r3, [r3, #0]
 8012a26:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012a2a:	b10a      	cbz	r2, 8012a30 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8012a2c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012a2e:	b900      	cbnz	r0, 8012a32 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8012a30:	6898      	ldr	r0, [r3, #8]
 8012a32:	6803      	ldr	r3, [r0, #0]
 8012a34:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8012a36:	6a1d      	ldr	r5, [r3, #32]
 8012a38:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8012a3c:	4669      	mov	r1, sp
 8012a3e:	47a8      	blx	r5
 8012a40:	b003      	add	sp, #12
 8012a42:	bd30      	pop	{r4, r5, pc}
 8012a44:	20012db4 	.word	0x20012db4

08012a48 <_ZN8touchgfx3BoxD1Ev>:
 8012a48:	4770      	bx	lr

08012a4a <_ZN8touchgfx3BoxD0Ev>:
 8012a4a:	b510      	push	{r4, lr}
 8012a4c:	212c      	movs	r1, #44	; 0x2c
 8012a4e:	4604      	mov	r4, r0
 8012a50:	f017 f90d 	bl	8029c6e <_ZdlPvj>
 8012a54:	4620      	mov	r0, r4
 8012a56:	bd10      	pop	{r4, pc}

08012a58 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8012a58:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8012a5c:	b12a      	cbz	r2, 8012a6a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012a5e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012a62:	b112      	cbz	r2, 8012a6a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012a64:	6803      	ldr	r3, [r0, #0]
 8012a66:	695b      	ldr	r3, [r3, #20]
 8012a68:	4718      	bx	r3
 8012a6a:	4770      	bx	lr

08012a6c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8012a6c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8012a70:	600b      	str	r3, [r1, #0]
 8012a72:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8012a76:	6013      	str	r3, [r2, #0]
 8012a78:	4770      	bx	lr

08012a7a <_ZN8touchgfx5Gauge8setWidthEs>:
 8012a7a:	8101      	strh	r1, [r0, #8]
 8012a7c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8012a80:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8012a84:	4770      	bx	lr

08012a86 <_ZN8touchgfx5Gauge9setHeightEs>:
 8012a86:	8141      	strh	r1, [r0, #10]
 8012a88:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8012a8c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8012a90:	4770      	bx	lr

08012a92 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8012a92:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8012a96:	4770      	bx	lr

08012a98 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8012a98:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8012a9c:	4770      	bx	lr

08012a9e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8012a9e:	4770      	bx	lr

08012aa0 <_ZN8touchgfx5GaugeD1Ev>:
 8012aa0:	4770      	bx	lr

08012aa2 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8012aa2:	b538      	push	{r3, r4, r5, lr}
 8012aa4:	4604      	mov	r4, r0
 8012aa6:	460d      	mov	r5, r1
 8012aa8:	f7fd fc51 	bl	801034e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8012aac:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8012ab0:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8012ab4:	bd38      	pop	{r3, r4, r5, pc}

08012ab6 <_ZN8touchgfx5GaugeD0Ev>:
 8012ab6:	b510      	push	{r4, lr}
 8012ab8:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8012abc:	4604      	mov	r4, r0
 8012abe:	f017 f8d6 	bl	8029c6e <_ZdlPvj>
 8012ac2:	4620      	mov	r0, r4
 8012ac4:	bd10      	pop	{r4, pc}

08012ac6 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8012ac6:	b510      	push	{r4, lr}
 8012ac8:	6803      	ldr	r3, [r0, #0]
 8012aca:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012ace:	4604      	mov	r4, r0
 8012ad0:	4798      	blx	r3
 8012ad2:	b170      	cbz	r0, 8012af2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012ad4:	6823      	ldr	r3, [r4, #0]
 8012ad6:	4620      	mov	r0, r4
 8012ad8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012adc:	4798      	blx	r3
 8012ade:	b140      	cbz	r0, 8012af2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012ae0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012ae4:	b12b      	cbz	r3, 8012af2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8012ae6:	6823      	ldr	r3, [r4, #0]
 8012ae8:	4620      	mov	r0, r4
 8012aea:	695b      	ldr	r3, [r3, #20]
 8012aec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012af0:	4718      	bx	r3
 8012af2:	bd10      	pop	{r4, pc}

08012af4 <_ZN8touchgfx5GaugeC1Ev>:
 8012af4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012af6:	4604      	mov	r4, r0
 8012af8:	4626      	mov	r6, r4
 8012afa:	f7fd fd49 	bl	8010590 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8012afe:	4b18      	ldr	r3, [pc, #96]	; (8012b60 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8012b00:	f846 3bb4 	str.w	r3, [r6], #180
 8012b04:	a902      	add	r1, sp, #8
 8012b06:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012b0a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8012b0e:	4630      	mov	r0, r6
 8012b10:	f015 f970 	bl	8027df4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8012b14:	2500      	movs	r5, #0
 8012b16:	2301      	movs	r3, #1
 8012b18:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8012b1c:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8012b20:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8012b24:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8012b28:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8012b2c:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8012b30:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8012b34:	4638      	mov	r0, r7
 8012b36:	f014 fba1 	bl	802727c <_ZN8touchgfx6CircleC1Ev>
 8012b3a:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8012b3e:	4620      	mov	r0, r4
 8012b40:	f7fd fdc7 	bl	80106d2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8012b44:	4639      	mov	r1, r7
 8012b46:	4620      	mov	r0, r4
 8012b48:	f7fd fd82 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012b4c:	4620      	mov	r0, r4
 8012b4e:	4631      	mov	r1, r6
 8012b50:	f7fd fd7e 	bl	8010650 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012b54:	4620      	mov	r0, r4
 8012b56:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8012b5a:	b003      	add	sp, #12
 8012b5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012b5e:	bf00      	nop
 8012b60:	0802eff8 	.word	0x0802eff8

08012b64 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012b64:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8012b68:	4770      	bx	lr

08012b6a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012b6a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8012b6e:	4770      	bx	lr

08012b70 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8012b70:	b538      	push	{r3, r4, r5, lr}
 8012b72:	8902      	ldrh	r2, [r0, #8]
 8012b74:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012b78:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8012b7c:	4604      	mov	r4, r0
 8012b7e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8012b82:	2200      	movs	r2, #0
 8012b84:	4611      	mov	r1, r2
 8012b86:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8012b8a:	4628      	mov	r0, r5
 8012b8c:	f7f0 fa0b 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8012b90:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8012b94:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012b98:	1a9b      	subs	r3, r3, r2
 8012b9a:	ee07 3a90 	vmov	s15, r3
 8012b9e:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8012ba2:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8012ba6:	1a9b      	subs	r3, r3, r2
 8012ba8:	ee07 3a10 	vmov	s14, r3
 8012bac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012bb0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012bb4:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8012bb8:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8012bbc:	4628      	mov	r0, r5
 8012bbe:	f015 f965 	bl	8027e8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012bc2:	4b16      	ldr	r3, [pc, #88]	; (8012c1c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8012bc4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8012bc8:	4628      	mov	r0, r5
 8012bca:	f015 f95f 	bl	8027e8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012bce:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012bd2:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8012bd6:	ee07 3a90 	vmov	s15, r3
 8012bda:	ee07 2a10 	vmov	s14, r2
 8012bde:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012be2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012be6:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8012bea:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8012bee:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8012bf2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8012bf6:	4628      	mov	r0, r5
 8012bf8:	f015 f948 	bl	8027e8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012bfc:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8012c00:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8012c04:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8012c08:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8012c0c:	4628      	mov	r0, r5
 8012c0e:	f015 f93d 	bl	8027e8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012c12:	2301      	movs	r3, #1
 8012c14:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012c18:	bd38      	pop	{r3, r4, r5, pc}
 8012c1a:	bf00      	nop
 8012c1c:	43960000 	.word	0x43960000

08012c20 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8012c20:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012c22:	4604      	mov	r4, r0
 8012c24:	a802      	add	r0, sp, #8
 8012c26:	4616      	mov	r6, r2
 8012c28:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8012c2c:	461d      	mov	r5, r3
 8012c2e:	4601      	mov	r1, r0
 8012c30:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012c34:	f015 fa80 	bl	8028138 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8012c38:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8012c3c:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8012c40:	4620      	mov	r0, r4
 8012c42:	f7ff ff95 	bl	8012b70 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012c46:	b002      	add	sp, #8
 8012c48:	bd70      	pop	{r4, r5, r6, pc}

08012c4a <_ZN8touchgfx5Gauge9setCenterEii>:
 8012c4a:	b570      	push	{r4, r5, r6, lr}
 8012c4c:	4606      	mov	r6, r0
 8012c4e:	460d      	mov	r5, r1
 8012c50:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8012c54:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8012c58:	4614      	mov	r4, r2
 8012c5a:	f7ff ff89 	bl	8012b70 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012c5e:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8012c62:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8012c66:	1aa4      	subs	r4, r4, r2
 8012c68:	1a6d      	subs	r5, r5, r1
 8012c6a:	0164      	lsls	r4, r4, #5
 8012c6c:	016d      	lsls	r5, r5, #5
 8012c6e:	3410      	adds	r4, #16
 8012c70:	3510      	adds	r5, #16
 8012c72:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8012c76:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8012c7a:	bd70      	pop	{r4, r5, r6, pc}

08012c7c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8012c7c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012c7e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012c80:	0149      	lsls	r1, r1, #5
 8012c82:	4299      	cmp	r1, r3
 8012c84:	4604      	mov	r4, r0
 8012c86:	9101      	str	r1, [sp, #4]
 8012c88:	d00b      	beq.n	8012ca2 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8012c8a:	4601      	mov	r1, r0
 8012c8c:	aa01      	add	r2, sp, #4
 8012c8e:	a802      	add	r0, sp, #8
 8012c90:	f014 fcf2 	bl	8027678 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8012c94:	9b01      	ldr	r3, [sp, #4]
 8012c96:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012c98:	6823      	ldr	r3, [r4, #0]
 8012c9a:	a902      	add	r1, sp, #8
 8012c9c:	691b      	ldr	r3, [r3, #16]
 8012c9e:	4620      	mov	r0, r4
 8012ca0:	4798      	blx	r3
 8012ca2:	b004      	add	sp, #16
 8012ca4:	bd10      	pop	{r4, pc}
	...

08012ca8 <_ZN8touchgfx5Gauge8setValueEi>:
 8012ca8:	b570      	push	{r4, r5, r6, lr}
 8012caa:	4604      	mov	r4, r0
 8012cac:	f7fd fba2 	bl	80103f4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8012cb0:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012cb4:	429a      	cmp	r2, r3
 8012cb6:	bfac      	ite	ge
 8012cb8:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8012cbc:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8012cc0:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012cc4:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8012cc8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012ccc:	1ac9      	subs	r1, r1, r3
 8012cce:	2900      	cmp	r1, #0
 8012cd0:	bfb8      	it	lt
 8012cd2:	4249      	neglt	r1, r1
 8012cd4:	b289      	uxth	r1, r1
 8012cd6:	4620      	mov	r0, r4
 8012cd8:	f7fd fbae 	bl	8010438 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8012cdc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8012ce0:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8012ce4:	eddf 6a19 	vldr	s13, [pc, #100]	; 8012d4c <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8012ce8:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8012d50 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8012cec:	429a      	cmp	r2, r3
 8012cee:	4605      	mov	r5, r0
 8012cf0:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8012cf4:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012cf8:	da15      	bge.n	8012d26 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8012cfa:	1b5b      	subs	r3, r3, r5
 8012cfc:	ee07 3a90 	vmov	s15, r3
 8012d00:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012d04:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012d08:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012d0c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012d10:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012d14:	f015 f829 	bl	8027d6a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012d18:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012d1c:	1b49      	subs	r1, r1, r5
 8012d1e:	4630      	mov	r0, r6
 8012d20:	f7ff ffac 	bl	8012c7c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8012d24:	bd70      	pop	{r4, r5, r6, pc}
 8012d26:	442b      	add	r3, r5
 8012d28:	ee07 3a90 	vmov	s15, r3
 8012d2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012d30:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012d34:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012d38:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012d3c:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012d40:	f015 f813 	bl	8027d6a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012d44:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012d48:	4429      	add	r1, r5
 8012d4a:	e7e8      	b.n	8012d1e <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8012d4c:	43340000 	.word	0x43340000
 8012d50:	40490fdb 	.word	0x40490fdb

08012d54 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8012d54:	b510      	push	{r4, lr}
 8012d56:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8012d5a:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8012d5e:	0149      	lsls	r1, r1, #5
 8012d60:	0152      	lsls	r2, r2, #5
 8012d62:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8012d66:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8012d6a:	4604      	mov	r4, r0
 8012d6c:	f7fd faec 	bl	8010348 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8012d70:	4601      	mov	r1, r0
 8012d72:	4620      	mov	r0, r4
 8012d74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012d78:	f7ff bf96 	b.w	8012ca8 <_ZN8touchgfx5Gauge8setValueEi>

08012d7c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8012d7c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012d80:	4770      	bx	lr

08012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012d82:	b570      	push	{r4, r5, r6, lr}
 8012d84:	880b      	ldrh	r3, [r1, #0]
 8012d86:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012d88:	4605      	mov	r5, r0
 8012d8a:	8813      	ldrh	r3, [r2, #0]
 8012d8c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012d90:	4604      	mov	r4, r0
 8012d92:	4628      	mov	r0, r5
 8012d94:	f006 fb06 	bl	80193a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012d98:	4606      	mov	r6, r0
 8012d9a:	4628      	mov	r0, r5
 8012d9c:	f006 fb36 	bl	801940c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012da0:	6823      	ldr	r3, [r4, #0]
 8012da2:	4605      	mov	r5, r0
 8012da4:	4631      	mov	r1, r6
 8012da6:	4620      	mov	r0, r4
 8012da8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012daa:	4798      	blx	r3
 8012dac:	6823      	ldr	r3, [r4, #0]
 8012dae:	4629      	mov	r1, r5
 8012db0:	4620      	mov	r0, r4
 8012db2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012db4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012db8:	4718      	bx	r3

08012dba <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8012dba:	b510      	push	{r4, lr}
 8012dbc:	4604      	mov	r4, r0
 8012dbe:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012dc0:	b150      	cbz	r0, 8012dd8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012dc2:	6803      	ldr	r3, [r0, #0]
 8012dc4:	68db      	ldr	r3, [r3, #12]
 8012dc6:	4798      	blx	r3
 8012dc8:	b130      	cbz	r0, 8012dd8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012dca:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8012dcc:	6803      	ldr	r3, [r0, #0]
 8012dce:	4621      	mov	r1, r4
 8012dd0:	689b      	ldr	r3, [r3, #8]
 8012dd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012dd6:	4718      	bx	r3
 8012dd8:	bd10      	pop	{r4, pc}

08012dda <_ZNK8touchgfx6Button12getSolidRectEv>:
 8012dda:	b510      	push	{r4, lr}
 8012ddc:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8012de0:	2bff      	cmp	r3, #255	; 0xff
 8012de2:	4604      	mov	r4, r0
 8012de4:	d006      	beq.n	8012df4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8012de6:	2300      	movs	r3, #0
 8012de8:	8003      	strh	r3, [r0, #0]
 8012dea:	8043      	strh	r3, [r0, #2]
 8012dec:	8083      	strh	r3, [r0, #4]
 8012dee:	80c3      	strh	r3, [r0, #6]
 8012df0:	4620      	mov	r0, r4
 8012df2:	bd10      	pop	{r4, pc}
 8012df4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8012df8:	b11b      	cbz	r3, 8012e02 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8012dfa:	3130      	adds	r1, #48	; 0x30
 8012dfc:	f006 fb3a 	bl	8019474 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012e00:	e7f6      	b.n	8012df0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8012e02:	312e      	adds	r1, #46	; 0x2e
 8012e04:	e7fa      	b.n	8012dfc <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08012e08 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8012e08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012e0c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012e10:	b08a      	sub	sp, #40	; 0x28
 8012e12:	4604      	mov	r4, r0
 8012e14:	4688      	mov	r8, r1
 8012e16:	2b00      	cmp	r3, #0
 8012e18:	d066      	beq.n	8012ee8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8012e1a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012e1c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012e20:	a805      	add	r0, sp, #20
 8012e22:	f006 fabf 	bl	80193a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012e26:	4607      	mov	r7, r0
 8012e28:	a805      	add	r0, sp, #20
 8012e2a:	f006 faef 	bl	801940c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012e2e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8012e32:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8012e36:	4432      	add	r2, r6
 8012e38:	b292      	uxth	r2, r2
 8012e3a:	2300      	movs	r3, #0
 8012e3c:	fa0f fc82 	sxth.w	ip, r2
 8012e40:	459c      	cmp	ip, r3
 8012e42:	9306      	str	r3, [sp, #24]
 8012e44:	dd52      	ble.n	8012eec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012e46:	42b7      	cmp	r7, r6
 8012e48:	dd50      	ble.n	8012eec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012e4a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8012e4e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012e52:	442b      	add	r3, r5
 8012e54:	b29b      	uxth	r3, r3
 8012e56:	b219      	sxth	r1, r3
 8012e58:	2900      	cmp	r1, #0
 8012e5a:	dd47      	ble.n	8012eec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012e5c:	42a8      	cmp	r0, r5
 8012e5e:	dd45      	ble.n	8012eec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012e60:	4567      	cmp	r7, ip
 8012e62:	bfb8      	it	lt
 8012e64:	b2ba      	uxthlt	r2, r7
 8012e66:	4288      	cmp	r0, r1
 8012e68:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8012e6c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012e70:	bfb8      	it	lt
 8012e72:	b283      	uxthlt	r3, r0
 8012e74:	1b92      	subs	r2, r2, r6
 8012e76:	1b5b      	subs	r3, r3, r5
 8012e78:	f8ad 201c 	strh.w	r2, [sp, #28]
 8012e7c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012e80:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012e84:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012e88:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012e8c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012e90:	429a      	cmp	r2, r3
 8012e92:	d026      	beq.n	8012ee2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012e94:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012e98:	2b00      	cmp	r3, #0
 8012e9a:	dd22      	ble.n	8012ee2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012e9c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012ea0:	2b00      	cmp	r3, #0
 8012ea2:	dd1e      	ble.n	8012ee2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012ea4:	2300      	movs	r3, #0
 8012ea6:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8012eaa:	6823      	ldr	r3, [r4, #0]
 8012eac:	a908      	add	r1, sp, #32
 8012eae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012eb0:	4620      	mov	r0, r4
 8012eb2:	4798      	blx	r3
 8012eb4:	4b0f      	ldr	r3, [pc, #60]	; (8012ef4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8012eb6:	681b      	ldr	r3, [r3, #0]
 8012eb8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012ebc:	b10a      	cbz	r2, 8012ec2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8012ebe:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012ec0:	b900      	cbnz	r0, 8012ec4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8012ec2:	6898      	ldr	r0, [r3, #8]
 8012ec4:	6801      	ldr	r1, [r0, #0]
 8012ec6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012eca:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012ece:	2501      	movs	r5, #1
 8012ed0:	9502      	str	r5, [sp, #8]
 8012ed2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8012ed6:	9401      	str	r4, [sp, #4]
 8012ed8:	ac06      	add	r4, sp, #24
 8012eda:	9400      	str	r4, [sp, #0]
 8012edc:	688c      	ldr	r4, [r1, #8]
 8012ede:	a905      	add	r1, sp, #20
 8012ee0:	47a0      	blx	r4
 8012ee2:	b00a      	add	sp, #40	; 0x28
 8012ee4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012ee8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8012eea:	e797      	b.n	8012e1c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8012eec:	2300      	movs	r3, #0
 8012eee:	9307      	str	r3, [sp, #28]
 8012ef0:	e7ca      	b.n	8012e88 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8012ef2:	bf00      	nop
 8012ef4:	20012db4 	.word	0x20012db4

08012ef8 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8012ef8:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8012efc:	b12a      	cbz	r2, 8012f0a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8012efe:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012f02:	b112      	cbz	r2, 8012f0a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8012f04:	6803      	ldr	r3, [r0, #0]
 8012f06:	695b      	ldr	r3, [r3, #20]
 8012f08:	4718      	bx	r3
 8012f0a:	4770      	bx	lr

08012f0c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8012f0c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012f10:	4b2f      	ldr	r3, [pc, #188]	; (8012fd0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8012f12:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012f14:	881b      	ldrh	r3, [r3, #0]
 8012f16:	4293      	cmp	r3, r2
 8012f18:	b08d      	sub	sp, #52	; 0x34
 8012f1a:	4604      	mov	r4, r0
 8012f1c:	460f      	mov	r7, r1
 8012f1e:	d954      	bls.n	8012fca <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012f20:	4b2c      	ldr	r3, [pc, #176]	; (8012fd4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8012f22:	6819      	ldr	r1, [r3, #0]
 8012f24:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8012f28:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8012f2c:	4a2a      	ldr	r2, [pc, #168]	; (8012fd8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8012f2e:	6812      	ldr	r2, [r2, #0]
 8012f30:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8012f34:	2900      	cmp	r1, #0
 8012f36:	d048      	beq.n	8012fca <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012f38:	785a      	ldrb	r2, [r3, #1]
 8012f3a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8012f3e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012f42:	4b26      	ldr	r3, [pc, #152]	; (8012fdc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8012f44:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8012f48:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8012f4c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8012f50:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8012f52:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8012f56:	9107      	str	r1, [sp, #28]
 8012f58:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8012f5c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012f60:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8012f64:	681a      	ldr	r2, [r3, #0]
 8012f66:	f88d 8020 	strb.w	r8, [sp, #32]
 8012f6a:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8012f6e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8012f72:	9609      	str	r6, [sp, #36]	; 0x24
 8012f74:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8012f78:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8012f7c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8012f80:	b10b      	cbz	r3, 8012f86 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8012f82:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8012f84:	b905      	cbnz	r5, 8012f88 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8012f86:	6895      	ldr	r5, [r2, #8]
 8012f88:	ae05      	add	r6, sp, #20
 8012f8a:	4621      	mov	r1, r4
 8012f8c:	4630      	mov	r0, r6
 8012f8e:	f003 ff7b 	bl	8016e88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012f92:	4b13      	ldr	r3, [pc, #76]	; (8012fe0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8012f94:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012f96:	6818      	ldr	r0, [r3, #0]
 8012f98:	f7f5 ffe8 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 8012f9c:	6823      	ldr	r3, [r4, #0]
 8012f9e:	4680      	mov	r8, r0
 8012fa0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012fa2:	4620      	mov	r0, r4
 8012fa4:	4798      	blx	r3
 8012fa6:	6823      	ldr	r3, [r4, #0]
 8012fa8:	4681      	mov	r9, r0
 8012faa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012fae:	4620      	mov	r0, r4
 8012fb0:	4798      	blx	r3
 8012fb2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8012fb6:	ab07      	add	r3, sp, #28
 8012fb8:	9300      	str	r3, [sp, #0]
 8012fba:	f8cd 8004 	str.w	r8, [sp, #4]
 8012fbe:	463b      	mov	r3, r7
 8012fc0:	e896 0006 	ldmia.w	r6, {r1, r2}
 8012fc4:	4628      	mov	r0, r5
 8012fc6:	f7f5 ff83 	bl	8008ed0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012fca:	b00d      	add	sp, #52	; 0x34
 8012fcc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012fd0:	20012e10 	.word	0x20012e10
 8012fd4:	20012e0c 	.word	0x20012e0c
 8012fd8:	20012e14 	.word	0x20012e14
 8012fdc:	20012db4 	.word	0x20012db4
 8012fe0:	20012e18 	.word	0x20012e18

08012fe4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8012fe4:	4770      	bx	lr

08012fe6 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8012fe6:	4770      	bx	lr

08012fe8 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8012fe8:	b510      	push	{r4, lr}
 8012fea:	213c      	movs	r1, #60	; 0x3c
 8012fec:	4604      	mov	r4, r0
 8012fee:	f016 fe3e 	bl	8029c6e <_ZdlPvj>
 8012ff2:	4620      	mov	r0, r4
 8012ff4:	bd10      	pop	{r4, pc}

08012ff6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8012ff6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012ffa:	461c      	mov	r4, r3
 8012ffc:	4606      	mov	r6, r0
 8012ffe:	9f06      	ldr	r7, [sp, #24]
 8013000:	f7ff febf 	bl	8012d82 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8013004:	8823      	ldrh	r3, [r4, #0]
 8013006:	86b3      	strh	r3, [r6, #52]	; 0x34
 8013008:	883b      	ldrh	r3, [r7, #0]
 801300a:	86f3      	strh	r3, [r6, #54]	; 0x36
 801300c:	4638      	mov	r0, r7
 801300e:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8013012:	f006 f9c7 	bl	80193a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013016:	f04f 0802 	mov.w	r8, #2
 801301a:	fb95 f5f8 	sdiv	r5, r5, r8
 801301e:	b2ad      	uxth	r5, r5
 8013020:	fb90 f0f8 	sdiv	r0, r0, r8
 8013024:	1a2d      	subs	r5, r5, r0
 8013026:	8735      	strh	r5, [r6, #56]	; 0x38
 8013028:	4638      	mov	r0, r7
 801302a:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 801302e:	fb94 f4f8 	sdiv	r4, r4, r8
 8013032:	f006 f9eb 	bl	801940c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013036:	b2a4      	uxth	r4, r4
 8013038:	fb90 f0f8 	sdiv	r0, r0, r8
 801303c:	1a24      	subs	r4, r4, r0
 801303e:	8774      	strh	r4, [r6, #58]	; 0x3a
 8013040:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013044 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8013044:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013048:	4604      	mov	r4, r0
 801304a:	b08c      	sub	sp, #48	; 0x30
 801304c:	460d      	mov	r5, r1
 801304e:	f7ff fedb 	bl	8012e08 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013052:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8013056:	2b00      	cmp	r3, #0
 8013058:	d05d      	beq.n	8013116 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801305a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801305c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013060:	a805      	add	r0, sp, #20
 8013062:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8013066:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801306a:	f006 f99b 	bl	80193a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801306e:	4606      	mov	r6, r0
 8013070:	a805      	add	r0, sp, #20
 8013072:	f006 f9cb 	bl	801940c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013076:	6869      	ldr	r1, [r5, #4]
 8013078:	f8ad 001e 	strh.w	r0, [sp, #30]
 801307c:	6828      	ldr	r0, [r5, #0]
 801307e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8013082:	ab08      	add	r3, sp, #32
 8013084:	ad08      	add	r5, sp, #32
 8013086:	c303      	stmia	r3!, {r0, r1}
 8013088:	a906      	add	r1, sp, #24
 801308a:	4628      	mov	r0, r5
 801308c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013090:	f8ad 601c 	strh.w	r6, [sp, #28]
 8013094:	f7fd fc62 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 8013098:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801309c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80130a0:	429a      	cmp	r2, r3
 80130a2:	d035      	beq.n	8013110 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80130a4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80130a8:	2b00      	cmp	r3, #0
 80130aa:	dd31      	ble.n	8013110 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80130ac:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 80130b0:	2b00      	cmp	r3, #0
 80130b2:	dd2d      	ble.n	8013110 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80130b4:	2300      	movs	r3, #0
 80130b6:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 80130ba:	6823      	ldr	r3, [r4, #0]
 80130bc:	a90a      	add	r1, sp, #40	; 0x28
 80130be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80130c0:	4620      	mov	r0, r4
 80130c2:	4798      	blx	r3
 80130c4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80130c8:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80130ca:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80130ce:	1a9b      	subs	r3, r3, r2
 80130d0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80130d4:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 80130d6:	1ac9      	subs	r1, r1, r3
 80130d8:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 80130dc:	490f      	ldr	r1, [pc, #60]	; (801311c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80130de:	6809      	ldr	r1, [r1, #0]
 80130e0:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 80130e4:	b108      	cbz	r0, 80130ea <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 80130e6:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 80130e8:	b900      	cbnz	r0, 80130ec <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 80130ea:	6888      	ldr	r0, [r1, #8]
 80130ec:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 80130f0:	440b      	add	r3, r1
 80130f2:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80130f6:	2601      	movs	r6, #1
 80130f8:	440a      	add	r2, r1
 80130fa:	6801      	ldr	r1, [r0, #0]
 80130fc:	9602      	str	r6, [sp, #8]
 80130fe:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8013102:	e9cd 5400 	strd	r5, r4, [sp]
 8013106:	b21b      	sxth	r3, r3
 8013108:	688c      	ldr	r4, [r1, #8]
 801310a:	b212      	sxth	r2, r2
 801310c:	a905      	add	r1, sp, #20
 801310e:	47a0      	blx	r4
 8013110:	b00c      	add	sp, #48	; 0x30
 8013112:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013116:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8013118:	e7a0      	b.n	801305c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801311a:	bf00      	nop
 801311c:	20012db4 	.word	0x20012db4

08013120 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8013120:	b510      	push	{r4, lr}
 8013122:	2101      	movs	r1, #1
 8013124:	2200      	movs	r2, #0
 8013126:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801312a:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 801312e:	4c0e      	ldr	r4, [pc, #56]	; (8013168 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8013130:	8082      	strh	r2, [r0, #4]
 8013132:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013136:	80c2      	strh	r2, [r0, #6]
 8013138:	8102      	strh	r2, [r0, #8]
 801313a:	8142      	strh	r2, [r0, #10]
 801313c:	8182      	strh	r2, [r0, #12]
 801313e:	81c2      	strh	r2, [r0, #14]
 8013140:	8202      	strh	r2, [r0, #16]
 8013142:	8242      	strh	r2, [r0, #18]
 8013144:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013148:	61c2      	str	r2, [r0, #28]
 801314a:	8402      	strh	r2, [r0, #32]
 801314c:	8442      	strh	r2, [r0, #34]	; 0x22
 801314e:	6282      	str	r2, [r0, #40]	; 0x28
 8013150:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013154:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8013156:	8601      	strh	r1, [r0, #48]	; 0x30
 8013158:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 801315c:	6004      	str	r4, [r0, #0]
 801315e:	8681      	strh	r1, [r0, #52]	; 0x34
 8013160:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013162:	8702      	strh	r2, [r0, #56]	; 0x38
 8013164:	8742      	strh	r2, [r0, #58]	; 0x3a
 8013166:	bd10      	pop	{r4, pc}
 8013168:	0802f0e0 	.word	0x0802f0e0

0801316c <_ZN8touchgfx5ImageD1Ev>:
 801316c:	4770      	bx	lr

0801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801316e:	b570      	push	{r4, r5, r6, lr}
 8013170:	880b      	ldrh	r3, [r1, #0]
 8013172:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013174:	4604      	mov	r4, r0
 8013176:	4608      	mov	r0, r1
 8013178:	460d      	mov	r5, r1
 801317a:	f006 f913 	bl	80193a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801317e:	4606      	mov	r6, r0
 8013180:	4628      	mov	r0, r5
 8013182:	f006 f943 	bl	801940c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013186:	6823      	ldr	r3, [r4, #0]
 8013188:	4605      	mov	r5, r0
 801318a:	4631      	mov	r1, r6
 801318c:	4620      	mov	r0, r4
 801318e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013190:	4798      	blx	r3
 8013192:	6823      	ldr	r3, [r4, #0]
 8013194:	4629      	mov	r1, r5
 8013196:	4620      	mov	r0, r4
 8013198:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801319a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801319e:	4718      	bx	r3

080131a0 <_ZN8touchgfx5ImageD0Ev>:
 80131a0:	b510      	push	{r4, lr}
 80131a2:	212c      	movs	r1, #44	; 0x2c
 80131a4:	4604      	mov	r4, r0
 80131a6:	f016 fd62 	bl	8029c6e <_ZdlPvj>
 80131aa:	4620      	mov	r0, r4
 80131ac:	bd10      	pop	{r4, pc}

080131ae <_ZNK8touchgfx5Image12getSolidRectEv>:
 80131ae:	b510      	push	{r4, lr}
 80131b0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80131b4:	2bff      	cmp	r3, #255	; 0xff
 80131b6:	4604      	mov	r4, r0
 80131b8:	d006      	beq.n	80131c8 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80131ba:	2300      	movs	r3, #0
 80131bc:	8003      	strh	r3, [r0, #0]
 80131be:	8043      	strh	r3, [r0, #2]
 80131c0:	8083      	strh	r3, [r0, #4]
 80131c2:	80c3      	strh	r3, [r0, #6]
 80131c4:	4620      	mov	r0, r4
 80131c6:	bd10      	pop	{r4, pc}
 80131c8:	3126      	adds	r1, #38	; 0x26
 80131ca:	f006 f953 	bl	8019474 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80131ce:	e7f9      	b.n	80131c4 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080131d0 <_ZNK8touchgfx5Image17invalidateContentEv>:
 80131d0:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80131d4:	b12a      	cbz	r2, 80131e2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80131d6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80131da:	b112      	cbz	r2, 80131e2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80131dc:	6803      	ldr	r3, [r0, #0]
 80131de:	695b      	ldr	r3, [r3, #20]
 80131e0:	4718      	bx	r3
 80131e2:	4770      	bx	lr

080131e4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80131e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80131e8:	4604      	mov	r4, r0
 80131ea:	b088      	sub	sp, #32
 80131ec:	f854 3b26 	ldr.w	r3, [r4], #38
 80131f0:	2500      	movs	r5, #0
 80131f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80131f4:	460f      	mov	r7, r1
 80131f6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80131fa:	a904      	add	r1, sp, #16
 80131fc:	4606      	mov	r6, r0
 80131fe:	4798      	blx	r3
 8013200:	4620      	mov	r0, r4
 8013202:	f006 f8cf 	bl	80193a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013206:	4680      	mov	r8, r0
 8013208:	4620      	mov	r0, r4
 801320a:	f006 f8ff 	bl	801940c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801320e:	9506      	str	r5, [sp, #24]
 8013210:	ad06      	add	r5, sp, #24
 8013212:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013216:	4639      	mov	r1, r7
 8013218:	4628      	mov	r0, r5
 801321a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801321e:	f7fd fb9d 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 8013222:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013226:	2b00      	cmp	r3, #0
 8013228:	dd19      	ble.n	801325e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801322a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801322e:	2b00      	cmp	r3, #0
 8013230:	dd15      	ble.n	801325e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013232:	4b0c      	ldr	r3, [pc, #48]	; (8013264 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8013234:	681b      	ldr	r3, [r3, #0]
 8013236:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801323a:	b10a      	cbz	r2, 8013240 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801323c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801323e:	b900      	cbnz	r0, 8013242 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8013240:	6898      	ldr	r0, [r3, #8]
 8013242:	6801      	ldr	r1, [r0, #0]
 8013244:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013248:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801324c:	2701      	movs	r7, #1
 801324e:	9702      	str	r7, [sp, #8]
 8013250:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8013254:	e9cd 5600 	strd	r5, r6, [sp]
 8013258:	688d      	ldr	r5, [r1, #8]
 801325a:	4621      	mov	r1, r4
 801325c:	47a8      	blx	r5
 801325e:	b008      	add	sp, #32
 8013260:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013264:	20012db4 	.word	0x20012db4

08013268 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8013268:	4770      	bx	lr

0801326a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801326a:	b510      	push	{r4, lr}
 801326c:	2148      	movs	r1, #72	; 0x48
 801326e:	4604      	mov	r4, r0
 8013270:	f016 fcfd 	bl	8029c6e <_ZdlPvj>
 8013274:	4620      	mov	r0, r4
 8013276:	bd10      	pop	{r4, pc}

08013278 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013278:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801327c:	b08d      	sub	sp, #52	; 0x34
 801327e:	4604      	mov	r4, r0
 8013280:	460f      	mov	r7, r1
 8013282:	f7ff fdc1 	bl	8012e08 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013286:	4a55      	ldr	r2, [pc, #340]	; (80133dc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8013288:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801328a:	8812      	ldrh	r2, [r2, #0]
 801328c:	429a      	cmp	r2, r3
 801328e:	f240 8082 	bls.w	8013396 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013292:	4d53      	ldr	r5, [pc, #332]	; (80133e0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8013294:	682a      	ldr	r2, [r5, #0]
 8013296:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801329a:	4b52      	ldr	r3, [pc, #328]	; (80133e4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801329c:	681b      	ldr	r3, [r3, #0]
 801329e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80132a2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80132a6:	2200      	movs	r2, #0
 80132a8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80132ac:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80132b0:	2a03      	cmp	r2, #3
 80132b2:	d811      	bhi.n	80132d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80132b4:	e8df f002 	tbb	[pc, r2]
 80132b8:	89727902 	.word	0x89727902
 80132bc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80132c0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80132c4:	1ad2      	subs	r2, r2, r3
 80132c6:	2002      	movs	r0, #2
 80132c8:	f8ad 1010 	strh.w	r1, [sp, #16]
 80132cc:	fb92 f2f0 	sdiv	r2, r2, r0
 80132d0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80132d4:	f8ad 200e 	strh.w	r2, [sp, #14]
 80132d8:	f10d 080c 	add.w	r8, sp, #12
 80132dc:	e898 0003 	ldmia.w	r8, {r0, r1}
 80132e0:	f10d 0914 	add.w	r9, sp, #20
 80132e4:	e889 0003 	stmia.w	r9, {r0, r1}
 80132e8:	4639      	mov	r1, r7
 80132ea:	4648      	mov	r0, r9
 80132ec:	f7fd fb36 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 80132f0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80132f4:	2b00      	cmp	r3, #0
 80132f6:	dd4e      	ble.n	8013396 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80132f8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80132fc:	2b00      	cmp	r3, #0
 80132fe:	dd4a      	ble.n	8013396 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013300:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013304:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013308:	1a9b      	subs	r3, r3, r2
 801330a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801330e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8013312:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8013316:	1a9b      	subs	r3, r3, r2
 8013318:	f8ad 3016 	strh.w	r3, [sp, #22]
 801331c:	6823      	ldr	r3, [r4, #0]
 801331e:	4641      	mov	r1, r8
 8013320:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013322:	4620      	mov	r0, r4
 8013324:	4798      	blx	r3
 8013326:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801332a:	2b00      	cmp	r3, #0
 801332c:	d053      	beq.n	80133d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801332e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8013330:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8013332:	682b      	ldr	r3, [r5, #0]
 8013334:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8013338:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801333c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013340:	785b      	ldrb	r3, [r3, #1]
 8013342:	9209      	str	r2, [sp, #36]	; 0x24
 8013344:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8013348:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801334c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8013350:	2300      	movs	r3, #0
 8013352:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8013356:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801335a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801335e:	4b22      	ldr	r3, [pc, #136]	; (80133e8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8013360:	9607      	str	r6, [sp, #28]
 8013362:	681b      	ldr	r3, [r3, #0]
 8013364:	f88d 5020 	strb.w	r5, [sp, #32]
 8013368:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801336c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013370:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013374:	b10a      	cbz	r2, 801337a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8013376:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013378:	b904      	cbnz	r4, 801337c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801337a:	689c      	ldr	r4, [r3, #8]
 801337c:	4b1b      	ldr	r3, [pc, #108]	; (80133ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801337e:	6818      	ldr	r0, [r3, #0]
 8013380:	f7f5 fdf4 	bl	8008f6c <_ZNK8touchgfx5Texts7getTextEt>
 8013384:	ab07      	add	r3, sp, #28
 8013386:	9001      	str	r0, [sp, #4]
 8013388:	9300      	str	r3, [sp, #0]
 801338a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801338e:	464b      	mov	r3, r9
 8013390:	4620      	mov	r0, r4
 8013392:	f7f5 fd9d 	bl	8008ed0 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013396:	b00d      	add	sp, #52	; 0x34
 8013398:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801339c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80133a0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80133a4:	1ad2      	subs	r2, r2, r3
 80133a6:	3201      	adds	r2, #1
 80133a8:	e78d      	b.n	80132c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80133aa:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80133ae:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80133b2:	1ad2      	subs	r2, r2, r3
 80133b4:	3201      	adds	r2, #1
 80133b6:	2002      	movs	r0, #2
 80133b8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80133bc:	fb92 f2f0 	sdiv	r2, r2, r0
 80133c0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80133c4:	f8ad 200c 	strh.w	r2, [sp, #12]
 80133c8:	e786      	b.n	80132d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80133ca:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80133ce:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80133d2:	1ad2      	subs	r2, r2, r3
 80133d4:	e7ef      	b.n	80133b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80133d6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80133d8:	e7aa      	b.n	8013330 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80133da:	bf00      	nop
 80133dc:	20012e10 	.word	0x20012e10
 80133e0:	20012e0c 	.word	0x20012e0c
 80133e4:	20012e14 	.word	0x20012e14
 80133e8:	20012db4 	.word	0x20012db4
 80133ec:	20012e18 	.word	0x20012e18

080133f0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 80133f0:	b510      	push	{r4, lr}
 80133f2:	2101      	movs	r1, #1
 80133f4:	4c13      	ldr	r4, [pc, #76]	; (8013444 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 80133f6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80133fa:	2200      	movs	r2, #0
 80133fc:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013400:	6004      	str	r4, [r0, #0]
 8013402:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013406:	4c10      	ldr	r4, [pc, #64]	; (8013448 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8013408:	8082      	strh	r2, [r0, #4]
 801340a:	80c2      	strh	r2, [r0, #6]
 801340c:	8102      	strh	r2, [r0, #8]
 801340e:	8142      	strh	r2, [r0, #10]
 8013410:	8182      	strh	r2, [r0, #12]
 8013412:	81c2      	strh	r2, [r0, #14]
 8013414:	8202      	strh	r2, [r0, #16]
 8013416:	8242      	strh	r2, [r0, #18]
 8013418:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801341c:	61c2      	str	r2, [r0, #28]
 801341e:	8402      	strh	r2, [r0, #32]
 8013420:	8442      	strh	r2, [r0, #34]	; 0x22
 8013422:	6282      	str	r2, [r0, #40]	; 0x28
 8013424:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013428:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801342a:	8601      	strh	r1, [r0, #48]	; 0x30
 801342c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013430:	6344      	str	r4, [r0, #52]	; 0x34
 8013432:	8701      	strh	r1, [r0, #56]	; 0x38
 8013434:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8013438:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801343c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8013440:	bd10      	pop	{r4, pc}
 8013442:	bf00      	nop
 8013444:	0802f1c4 	.word	0x0802f1c4
 8013448:	0802c630 	.word	0x0802c630

0801344c <_ZN8touchgfx7OutlineD1Ev>:
 801344c:	4770      	bx	lr

0801344e <_ZN8touchgfx7OutlineD0Ev>:
 801344e:	b510      	push	{r4, lr}
 8013450:	2130      	movs	r1, #48	; 0x30
 8013452:	4604      	mov	r4, r0
 8013454:	f016 fc0b 	bl	8029c6e <_ZdlPvj>
 8013458:	4620      	mov	r0, r4
 801345a:	bd10      	pop	{r4, pc}

0801345c <_ZN8touchgfx7Outline5resetEv>:
 801345c:	b510      	push	{r4, lr}
 801345e:	4604      	mov	r4, r0
 8013460:	f000 fe96 	bl	8014190 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8013464:	60e0      	str	r0, [r4, #12]
 8013466:	f000 fe99 	bl	801419c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801346a:	68e3      	ldr	r3, [r4, #12]
 801346c:	6123      	str	r3, [r4, #16]
 801346e:	08c0      	lsrs	r0, r0, #3
 8013470:	2200      	movs	r2, #0
 8013472:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8013476:	3801      	subs	r0, #1
 8013478:	6060      	str	r0, [r4, #4]
 801347a:	60a2      	str	r2, [r4, #8]
 801347c:	8019      	strh	r1, [r3, #0]
 801347e:	8059      	strh	r1, [r3, #2]
 8013480:	809a      	strh	r2, [r3, #4]
 8013482:	80da      	strh	r2, [r3, #6]
 8013484:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013486:	f023 0301 	bic.w	r3, r3, #1
 801348a:	f043 0302 	orr.w	r3, r3, #2
 801348e:	6263      	str	r3, [r4, #36]	; 0x24
 8013490:	bd10      	pop	{r4, pc}
	...

08013494 <_ZN8touchgfx7OutlineC1Ev>:
 8013494:	b510      	push	{r4, lr}
 8013496:	4b0a      	ldr	r3, [pc, #40]	; (80134c0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8013498:	6003      	str	r3, [r0, #0]
 801349a:	2300      	movs	r3, #0
 801349c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80134a0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80134a4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80134a8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80134ac:	6243      	str	r3, [r0, #36]	; 0x24
 80134ae:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80134b2:	4604      	mov	r4, r0
 80134b4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80134b8:	f7ff ffd0 	bl	801345c <_ZN8touchgfx7Outline5resetEv>
 80134bc:	4620      	mov	r0, r4
 80134be:	bd10      	pop	{r4, pc}
 80134c0:	0802f238 	.word	0x0802f238

080134c4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80134c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134c8:	b093      	sub	sp, #76	; 0x4c
 80134ca:	1156      	asrs	r6, r2, #5
 80134cc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80134ce:	9305      	str	r3, [sp, #20]
 80134d0:	f004 051f 	and.w	r5, r4, #31
 80134d4:	1153      	asrs	r3, r2, #5
 80134d6:	9504      	str	r5, [sp, #16]
 80134d8:	1165      	asrs	r5, r4, #5
 80134da:	9303      	str	r3, [sp, #12]
 80134dc:	42ae      	cmp	r6, r5
 80134de:	ea4f 1364 	mov.w	r3, r4, asr #5
 80134e2:	9306      	str	r3, [sp, #24]
 80134e4:	f002 031f 	and.w	r3, r2, #31
 80134e8:	f040 80f8 	bne.w	80136dc <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 80134ec:	9c04      	ldr	r4, [sp, #16]
 80134ee:	9a05      	ldr	r2, [sp, #20]
 80134f0:	42a3      	cmp	r3, r4
 80134f2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 80134f6:	6902      	ldr	r2, [r0, #16]
 80134f8:	d125      	bne.n	8013546 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 80134fa:	f9b2 3000 	ldrsh.w	r3, [r2]
 80134fe:	459e      	cmp	lr, r3
 8013500:	d103      	bne.n	801350a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8013502:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013506:	429e      	cmp	r6, r3
 8013508:	d035      	beq.n	8013576 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801350a:	88d1      	ldrh	r1, [r2, #6]
 801350c:	8893      	ldrh	r3, [r2, #4]
 801350e:	430b      	orrs	r3, r1
 8013510:	d010      	beq.n	8013534 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013512:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8013516:	2b00      	cmp	r3, #0
 8013518:	db0c      	blt.n	8013534 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801351a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801351c:	428b      	cmp	r3, r1
 801351e:	da09      	bge.n	8013534 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8013520:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013524:	428b      	cmp	r3, r1
 8013526:	bf38      	it	cc
 8013528:	3208      	addcc	r2, #8
 801352a:	f103 0301 	add.w	r3, r3, #1
 801352e:	bf38      	it	cc
 8013530:	6102      	strcc	r2, [r0, #16]
 8013532:	6083      	str	r3, [r0, #8]
 8013534:	6903      	ldr	r3, [r0, #16]
 8013536:	9a03      	ldr	r2, [sp, #12]
 8013538:	f8a3 e000 	strh.w	lr, [r3]
 801353c:	805a      	strh	r2, [r3, #2]
 801353e:	2200      	movs	r2, #0
 8013540:	809a      	strh	r2, [r3, #4]
 8013542:	80da      	strh	r2, [r3, #6]
 8013544:	e017      	b.n	8013576 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013546:	9c05      	ldr	r4, [sp, #20]
 8013548:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801354c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8013550:	f004 041f 	and.w	r4, r4, #31
 8013554:	114e      	asrs	r6, r1, #5
 8013556:	9402      	str	r4, [sp, #8]
 8013558:	9c04      	ldr	r4, [sp, #16]
 801355a:	4576      	cmp	r6, lr
 801355c:	f001 0c1f 	and.w	ip, r1, #31
 8013560:	eba4 0403 	sub.w	r4, r4, r3
 8013564:	d10a      	bne.n	801357c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8013566:	9b02      	ldr	r3, [sp, #8]
 8013568:	449c      	add	ip, r3
 801356a:	44a0      	add	r8, r4
 801356c:	fb04 a40c 	mla	r4, r4, ip, sl
 8013570:	f8a2 8004 	strh.w	r8, [r2, #4]
 8013574:	80d4      	strh	r4, [r2, #6]
 8013576:	b013      	add	sp, #76	; 0x4c
 8013578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801357c:	9d05      	ldr	r5, [sp, #20]
 801357e:	1a69      	subs	r1, r5, r1
 8013580:	bf5b      	ittet	pl
 8013582:	f1cc 0520 	rsbpl	r5, ip, #32
 8013586:	436c      	mulpl	r4, r5
 8013588:	2500      	movmi	r5, #0
 801358a:	2520      	movpl	r5, #32
 801358c:	bf44      	itt	mi
 801358e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013592:	4249      	negmi	r1, r1
 8013594:	9501      	str	r5, [sp, #4]
 8013596:	9f01      	ldr	r7, [sp, #4]
 8013598:	fb94 f5f1 	sdiv	r5, r4, r1
 801359c:	fb01 4415 	mls	r4, r1, r5, r4
 80135a0:	bf54      	ite	pl
 80135a2:	f04f 0901 	movpl.w	r9, #1
 80135a6:	f04f 39ff 	movmi.w	r9, #4294967295
 80135aa:	2c00      	cmp	r4, #0
 80135ac:	bfb8      	it	lt
 80135ae:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80135b2:	44bc      	add	ip, r7
 80135b4:	44a8      	add	r8, r5
 80135b6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80135ba:	f8a2 8004 	strh.w	r8, [r2, #4]
 80135be:	f8a2 c006 	strh.w	ip, [r2, #6]
 80135c2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80135c6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80135ca:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80135ce:	bfb8      	it	lt
 80135d0:	1864      	addlt	r4, r4, r1
 80135d2:	ea58 0202 	orrs.w	r2, r8, r2
 80135d6:	444e      	add	r6, r9
 80135d8:	d011      	beq.n	80135fe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80135da:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80135de:	f1b8 0f00 	cmp.w	r8, #0
 80135e2:	db0c      	blt.n	80135fe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80135e4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80135e6:	4590      	cmp	r8, r2
 80135e8:	da09      	bge.n	80135fe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80135ea:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 80135ee:	4590      	cmp	r8, r2
 80135f0:	bf3c      	itt	cc
 80135f2:	f10c 0208 	addcc.w	r2, ip, #8
 80135f6:	6102      	strcc	r2, [r0, #16]
 80135f8:	f108 0201 	add.w	r2, r8, #1
 80135fc:	6082      	str	r2, [r0, #8]
 80135fe:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013602:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8013606:	f8ac 6000 	strh.w	r6, [ip]
 801360a:	2700      	movs	r7, #0
 801360c:	45b6      	cmp	lr, r6
 801360e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8013612:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013616:	f8ac 7006 	strh.w	r7, [ip, #6]
 801361a:	442b      	add	r3, r5
 801361c:	d04d      	beq.n	80136ba <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801361e:	9f04      	ldr	r7, [sp, #16]
 8013620:	1aff      	subs	r7, r7, r3
 8013622:	443d      	add	r5, r7
 8013624:	016d      	lsls	r5, r5, #5
 8013626:	fb95 f8f1 	sdiv	r8, r5, r1
 801362a:	fb01 5518 	mls	r5, r1, r8, r5
 801362e:	2d00      	cmp	r5, #0
 8013630:	bfb8      	it	lt
 8013632:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013636:	f108 0701 	add.w	r7, r8, #1
 801363a:	bfb8      	it	lt
 801363c:	186d      	addlt	r5, r5, r1
 801363e:	1a64      	subs	r4, r4, r1
 8013640:	9703      	str	r7, [sp, #12]
 8013642:	f04f 0a00 	mov.w	sl, #0
 8013646:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801364a:	1964      	adds	r4, r4, r5
 801364c:	bf58      	it	pl
 801364e:	9f03      	ldrpl	r7, [sp, #12]
 8013650:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8013654:	bf48      	it	mi
 8013656:	4647      	movmi	r7, r8
 8013658:	44bb      	add	fp, r7
 801365a:	f8ac b004 	strh.w	fp, [ip, #4]
 801365e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013662:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013666:	f8ac b006 	strh.w	fp, [ip, #6]
 801366a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801366e:	443b      	add	r3, r7
 8013670:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013674:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013678:	bf58      	it	pl
 801367a:	1a64      	subpl	r4, r4, r1
 801367c:	ea5b 0707 	orrs.w	r7, fp, r7
 8013680:	444e      	add	r6, r9
 8013682:	d011      	beq.n	80136a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013684:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013688:	f1bb 0f00 	cmp.w	fp, #0
 801368c:	db0c      	blt.n	80136a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801368e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013690:	45bb      	cmp	fp, r7
 8013692:	da09      	bge.n	80136a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8013694:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013698:	45bb      	cmp	fp, r7
 801369a:	bf3c      	itt	cc
 801369c:	f10c 0708 	addcc.w	r7, ip, #8
 80136a0:	6107      	strcc	r7, [r0, #16]
 80136a2:	f10b 0701 	add.w	r7, fp, #1
 80136a6:	6087      	str	r7, [r0, #8]
 80136a8:	6907      	ldr	r7, [r0, #16]
 80136aa:	45b6      	cmp	lr, r6
 80136ac:	803e      	strh	r6, [r7, #0]
 80136ae:	807a      	strh	r2, [r7, #2]
 80136b0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80136b4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80136b8:	d1c5      	bne.n	8013646 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80136ba:	9a04      	ldr	r2, [sp, #16]
 80136bc:	1ad3      	subs	r3, r2, r3
 80136be:	6902      	ldr	r2, [r0, #16]
 80136c0:	8891      	ldrh	r1, [r2, #4]
 80136c2:	88d6      	ldrh	r6, [r2, #6]
 80136c4:	4419      	add	r1, r3
 80136c6:	8091      	strh	r1, [r2, #4]
 80136c8:	9902      	ldr	r1, [sp, #8]
 80136ca:	f101 0c20 	add.w	ip, r1, #32
 80136ce:	9901      	ldr	r1, [sp, #4]
 80136d0:	ebac 0c01 	sub.w	ip, ip, r1
 80136d4:	fb03 630c 	mla	r3, r3, ip, r6
 80136d8:	80d3      	strh	r3, [r2, #6]
 80136da:	e74c      	b.n	8013576 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80136dc:	9d05      	ldr	r5, [sp, #20]
 80136de:	1aa2      	subs	r2, r4, r2
 80136e0:	eba5 0501 	sub.w	r5, r5, r1
 80136e4:	9508      	str	r5, [sp, #32]
 80136e6:	9202      	str	r2, [sp, #8]
 80136e8:	f140 8128 	bpl.w	801393c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 80136ec:	9a03      	ldr	r2, [sp, #12]
 80136ee:	2a00      	cmp	r2, #0
 80136f0:	f6ff af41 	blt.w	8013576 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80136f4:	9a02      	ldr	r2, [sp, #8]
 80136f6:	4252      	negs	r2, r2
 80136f8:	9202      	str	r2, [sp, #8]
 80136fa:	9a06      	ldr	r2, [sp, #24]
 80136fc:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8013700:	f04f 34ff 	mov.w	r4, #4294967295
 8013704:	9206      	str	r2, [sp, #24]
 8013706:	462a      	mov	r2, r5
 8013708:	940b      	str	r4, [sp, #44]	; 0x2c
 801370a:	435a      	muls	r2, r3
 801370c:	2400      	movs	r4, #0
 801370e:	9d02      	ldr	r5, [sp, #8]
 8013710:	9401      	str	r4, [sp, #4]
 8013712:	9c02      	ldr	r4, [sp, #8]
 8013714:	fb92 f4f4 	sdiv	r4, r2, r4
 8013718:	fb05 2214 	mls	r2, r5, r4, r2
 801371c:	2a00      	cmp	r2, #0
 801371e:	9207      	str	r2, [sp, #28]
 8013720:	bfbc      	itt	lt
 8013722:	1952      	addlt	r2, r2, r5
 8013724:	9207      	strlt	r2, [sp, #28]
 8013726:	9a01      	ldr	r2, [sp, #4]
 8013728:	6905      	ldr	r5, [r0, #16]
 801372a:	bfb8      	it	lt
 801372c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013730:	eb04 0901 	add.w	r9, r4, r1
 8013734:	429a      	cmp	r2, r3
 8013736:	ea4f 1669 	mov.w	r6, r9, asr #5
 801373a:	f040 8112 	bne.w	8013962 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801373e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8013742:	429e      	cmp	r6, r3
 8013744:	d104      	bne.n	8013750 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8013746:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801374a:	9a03      	ldr	r2, [sp, #12]
 801374c:	429a      	cmp	r2, r3
 801374e:	d01b      	beq.n	8013788 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013750:	88ea      	ldrh	r2, [r5, #6]
 8013752:	88ab      	ldrh	r3, [r5, #4]
 8013754:	4313      	orrs	r3, r2
 8013756:	d010      	beq.n	801377a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013758:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801375c:	2a00      	cmp	r2, #0
 801375e:	db0c      	blt.n	801377a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013760:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013762:	429a      	cmp	r2, r3
 8013764:	da09      	bge.n	801377a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8013766:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801376a:	429a      	cmp	r2, r3
 801376c:	bf38      	it	cc
 801376e:	3508      	addcc	r5, #8
 8013770:	f102 0201 	add.w	r2, r2, #1
 8013774:	bf38      	it	cc
 8013776:	6105      	strcc	r5, [r0, #16]
 8013778:	6082      	str	r2, [r0, #8]
 801377a:	6903      	ldr	r3, [r0, #16]
 801377c:	9a03      	ldr	r2, [sp, #12]
 801377e:	805a      	strh	r2, [r3, #2]
 8013780:	2200      	movs	r2, #0
 8013782:	801e      	strh	r6, [r3, #0]
 8013784:	809a      	strh	r2, [r3, #4]
 8013786:	80da      	strh	r2, [r3, #6]
 8013788:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801378a:	9a03      	ldr	r2, [sp, #12]
 801378c:	6901      	ldr	r1, [r0, #16]
 801378e:	441a      	add	r2, r3
 8013790:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013794:	42b3      	cmp	r3, r6
 8013796:	d103      	bne.n	80137a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8013798:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801379c:	429a      	cmp	r2, r3
 801379e:	d01a      	beq.n	80137d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80137a0:	88cc      	ldrh	r4, [r1, #6]
 80137a2:	888b      	ldrh	r3, [r1, #4]
 80137a4:	4323      	orrs	r3, r4
 80137a6:	d010      	beq.n	80137ca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80137a8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80137ac:	2c00      	cmp	r4, #0
 80137ae:	db0c      	blt.n	80137ca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80137b0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80137b2:	429c      	cmp	r4, r3
 80137b4:	da09      	bge.n	80137ca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80137b6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80137ba:	429c      	cmp	r4, r3
 80137bc:	bf38      	it	cc
 80137be:	3108      	addcc	r1, #8
 80137c0:	f104 0401 	add.w	r4, r4, #1
 80137c4:	bf38      	it	cc
 80137c6:	6101      	strcc	r1, [r0, #16]
 80137c8:	6084      	str	r4, [r0, #8]
 80137ca:	6903      	ldr	r3, [r0, #16]
 80137cc:	2100      	movs	r1, #0
 80137ce:	801e      	strh	r6, [r3, #0]
 80137d0:	805a      	strh	r2, [r3, #2]
 80137d2:	8099      	strh	r1, [r3, #4]
 80137d4:	80d9      	strh	r1, [r3, #6]
 80137d6:	9b06      	ldr	r3, [sp, #24]
 80137d8:	4293      	cmp	r3, r2
 80137da:	f000 8082 	beq.w	80138e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80137de:	9b08      	ldr	r3, [sp, #32]
 80137e0:	9c02      	ldr	r4, [sp, #8]
 80137e2:	9902      	ldr	r1, [sp, #8]
 80137e4:	015b      	lsls	r3, r3, #5
 80137e6:	fb93 f1f1 	sdiv	r1, r3, r1
 80137ea:	fb04 3311 	mls	r3, r4, r1, r3
 80137ee:	2b00      	cmp	r3, #0
 80137f0:	9103      	str	r1, [sp, #12]
 80137f2:	9308      	str	r3, [sp, #32]
 80137f4:	da04      	bge.n	8013800 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 80137f6:	1e4b      	subs	r3, r1, #1
 80137f8:	9303      	str	r3, [sp, #12]
 80137fa:	9b08      	ldr	r3, [sp, #32]
 80137fc:	4423      	add	r3, r4
 80137fe:	9308      	str	r3, [sp, #32]
 8013800:	9b07      	ldr	r3, [sp, #28]
 8013802:	9902      	ldr	r1, [sp, #8]
 8013804:	1a5b      	subs	r3, r3, r1
 8013806:	9307      	str	r3, [sp, #28]
 8013808:	9b01      	ldr	r3, [sp, #4]
 801380a:	f1c3 0320 	rsb	r3, r3, #32
 801380e:	930e      	str	r3, [sp, #56]	; 0x38
 8013810:	990e      	ldr	r1, [sp, #56]	; 0x38
 8013812:	9b01      	ldr	r3, [sp, #4]
 8013814:	1a5b      	subs	r3, r3, r1
 8013816:	464f      	mov	r7, r9
 8013818:	930a      	str	r3, [sp, #40]	; 0x28
 801381a:	2600      	movs	r6, #0
 801381c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8013820:	185b      	adds	r3, r3, r1
 8013822:	bf58      	it	pl
 8013824:	9902      	ldrpl	r1, [sp, #8]
 8013826:	9307      	str	r3, [sp, #28]
 8013828:	bf5d      	ittte	pl
 801382a:	1a5b      	subpl	r3, r3, r1
 801382c:	9307      	strpl	r3, [sp, #28]
 801382e:	9b03      	ldrpl	r3, [sp, #12]
 8013830:	9903      	ldrmi	r1, [sp, #12]
 8013832:	bf58      	it	pl
 8013834:	1c59      	addpl	r1, r3, #1
 8013836:	4489      	add	r9, r1
 8013838:	2a00      	cmp	r2, #0
 801383a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801383e:	db2e      	blt.n	801389e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013840:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013842:	4293      	cmp	r3, r2
 8013844:	dd2b      	ble.n	801389e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013846:	9c01      	ldr	r4, [sp, #4]
 8013848:	6905      	ldr	r5, [r0, #16]
 801384a:	46a0      	mov	r8, r4
 801384c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801384e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8013852:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8013856:	45a0      	cmp	r8, r4
 8013858:	f040 814f 	bne.w	8013afa <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801385c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8013860:	4551      	cmp	r1, sl
 8013862:	d103      	bne.n	801386c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8013864:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013868:	4291      	cmp	r1, r2
 801386a:	d018      	beq.n	801389e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801386c:	ea5c 010e 	orrs.w	r1, ip, lr
 8013870:	d00f      	beq.n	8013892 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8013872:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8013876:	2900      	cmp	r1, #0
 8013878:	db0b      	blt.n	8013892 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801387a:	428b      	cmp	r3, r1
 801387c:	dd09      	ble.n	8013892 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801387e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8013882:	4299      	cmp	r1, r3
 8013884:	bf38      	it	cc
 8013886:	3508      	addcc	r5, #8
 8013888:	f101 0101 	add.w	r1, r1, #1
 801388c:	bf38      	it	cc
 801388e:	6105      	strcc	r5, [r0, #16]
 8013890:	6081      	str	r1, [r0, #8]
 8013892:	6903      	ldr	r3, [r0, #16]
 8013894:	f8a3 a000 	strh.w	sl, [r3]
 8013898:	805a      	strh	r2, [r3, #2]
 801389a:	809e      	strh	r6, [r3, #4]
 801389c:	80de      	strh	r6, [r3, #6]
 801389e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80138a0:	6901      	ldr	r1, [r0, #16]
 80138a2:	441a      	add	r2, r3
 80138a4:	88cc      	ldrh	r4, [r1, #6]
 80138a6:	888b      	ldrh	r3, [r1, #4]
 80138a8:	4323      	orrs	r3, r4
 80138aa:	d010      	beq.n	80138ce <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80138ac:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80138b0:	2c00      	cmp	r4, #0
 80138b2:	db0c      	blt.n	80138ce <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80138b4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80138b6:	429c      	cmp	r4, r3
 80138b8:	da09      	bge.n	80138ce <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80138ba:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80138be:	429c      	cmp	r4, r3
 80138c0:	bf38      	it	cc
 80138c2:	3108      	addcc	r1, #8
 80138c4:	f104 0401 	add.w	r4, r4, #1
 80138c8:	bf38      	it	cc
 80138ca:	6101      	strcc	r1, [r0, #16]
 80138cc:	6084      	str	r4, [r0, #8]
 80138ce:	6903      	ldr	r3, [r0, #16]
 80138d0:	f8a3 a000 	strh.w	sl, [r3]
 80138d4:	805a      	strh	r2, [r3, #2]
 80138d6:	809e      	strh	r6, [r3, #4]
 80138d8:	80de      	strh	r6, [r3, #6]
 80138da:	9b06      	ldr	r3, [sp, #24]
 80138dc:	4293      	cmp	r3, r2
 80138de:	464f      	mov	r7, r9
 80138e0:	d19c      	bne.n	801381c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 80138e2:	9b01      	ldr	r3, [sp, #4]
 80138e4:	6907      	ldr	r7, [r0, #16]
 80138e6:	f1c3 0620 	rsb	r6, r3, #32
 80138ea:	9b05      	ldr	r3, [sp, #20]
 80138ec:	ea4f 1e63 	mov.w	lr, r3, asr #5
 80138f0:	9b04      	ldr	r3, [sp, #16]
 80138f2:	429e      	cmp	r6, r3
 80138f4:	f040 81cc 	bne.w	8013c90 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 80138f8:	f9b7 3000 	ldrsh.w	r3, [r7]
 80138fc:	459e      	cmp	lr, r3
 80138fe:	d104      	bne.n	801390a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8013900:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013904:	429a      	cmp	r2, r3
 8013906:	f43f ae36 	beq.w	8013576 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801390a:	88f9      	ldrh	r1, [r7, #6]
 801390c:	88bb      	ldrh	r3, [r7, #4]
 801390e:	430b      	orrs	r3, r1
 8013910:	d010      	beq.n	8013934 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013912:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013916:	2b00      	cmp	r3, #0
 8013918:	db0c      	blt.n	8013934 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801391a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801391c:	428b      	cmp	r3, r1
 801391e:	da09      	bge.n	8013934 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013920:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013924:	428b      	cmp	r3, r1
 8013926:	bf38      	it	cc
 8013928:	3708      	addcc	r7, #8
 801392a:	f103 0301 	add.w	r3, r3, #1
 801392e:	bf38      	it	cc
 8013930:	6107      	strcc	r7, [r0, #16]
 8013932:	6083      	str	r3, [r0, #8]
 8013934:	6903      	ldr	r3, [r0, #16]
 8013936:	f8a3 e000 	strh.w	lr, [r3]
 801393a:	e5ff      	b.n	801353c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801393c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801393e:	9c03      	ldr	r4, [sp, #12]
 8013940:	42a2      	cmp	r2, r4
 8013942:	f6ff ae18 	blt.w	8013576 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013946:	9c06      	ldr	r4, [sp, #24]
 8013948:	42a2      	cmp	r2, r4
 801394a:	bfb8      	it	lt
 801394c:	3201      	addlt	r2, #1
 801394e:	9c08      	ldr	r4, [sp, #32]
 8013950:	bfb8      	it	lt
 8013952:	9206      	strlt	r2, [sp, #24]
 8013954:	f1c3 0220 	rsb	r2, r3, #32
 8013958:	4362      	muls	r2, r4
 801395a:	2401      	movs	r4, #1
 801395c:	940b      	str	r4, [sp, #44]	; 0x2c
 801395e:	2420      	movs	r4, #32
 8013960:	e6d5      	b.n	801370e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8013962:	f009 021f 	and.w	r2, r9, #31
 8013966:	ea4f 1861 	mov.w	r8, r1, asr #5
 801396a:	920c      	str	r2, [sp, #48]	; 0x30
 801396c:	9a01      	ldr	r2, [sp, #4]
 801396e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8013972:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8013976:	45b0      	cmp	r8, r6
 8013978:	f001 011f 	and.w	r1, r1, #31
 801397c:	eba2 0203 	sub.w	r2, r2, r3
 8013980:	d108      	bne.n	8013994 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8013982:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013984:	4419      	add	r1, r3
 8013986:	4496      	add	lr, r2
 8013988:	fb02 a101 	mla	r1, r2, r1, sl
 801398c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013990:	80e9      	strh	r1, [r5, #6]
 8013992:	e6f9      	b.n	8013788 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013994:	2c00      	cmp	r4, #0
 8013996:	f2c0 80a9 	blt.w	8013aec <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801399a:	2701      	movs	r7, #1
 801399c:	f1c1 0c20 	rsb	ip, r1, #32
 80139a0:	970a      	str	r7, [sp, #40]	; 0x28
 80139a2:	fb02 f20c 	mul.w	r2, r2, ip
 80139a6:	2720      	movs	r7, #32
 80139a8:	9709      	str	r7, [sp, #36]	; 0x24
 80139aa:	fb92 fcf4 	sdiv	ip, r2, r4
 80139ae:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80139b0:	fb04 221c 	mls	r2, r4, ip, r2
 80139b4:	2a00      	cmp	r2, #0
 80139b6:	bfb8      	it	lt
 80139b8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80139bc:	4439      	add	r1, r7
 80139be:	fb0c a101 	mla	r1, ip, r1, sl
 80139c2:	80e9      	strh	r1, [r5, #6]
 80139c4:	44e6      	add	lr, ip
 80139c6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80139c8:	f8a5 e004 	strh.w	lr, [r5, #4]
 80139cc:	eb08 0501 	add.w	r5, r8, r1
 80139d0:	6901      	ldr	r1, [r0, #16]
 80139d2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 80139d6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 80139da:	bfb8      	it	lt
 80139dc:	1912      	addlt	r2, r2, r4
 80139de:	ea58 070e 	orrs.w	r7, r8, lr
 80139e2:	d010      	beq.n	8013a06 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80139e4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 80139e8:	f1be 0f00 	cmp.w	lr, #0
 80139ec:	db0b      	blt.n	8013a06 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80139ee:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80139f0:	45be      	cmp	lr, r7
 80139f2:	da08      	bge.n	8013a06 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80139f4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80139f8:	45be      	cmp	lr, r7
 80139fa:	bf3c      	itt	cc
 80139fc:	3108      	addcc	r1, #8
 80139fe:	6101      	strcc	r1, [r0, #16]
 8013a00:	f10e 0101 	add.w	r1, lr, #1
 8013a04:	6081      	str	r1, [r0, #8]
 8013a06:	6901      	ldr	r1, [r0, #16]
 8013a08:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8013a0c:	800d      	strh	r5, [r1, #0]
 8013a0e:	f04f 0e00 	mov.w	lr, #0
 8013a12:	42ae      	cmp	r6, r5
 8013a14:	f8a1 8002 	strh.w	r8, [r1, #2]
 8013a18:	f8a1 e004 	strh.w	lr, [r1, #4]
 8013a1c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8013a20:	4463      	add	r3, ip
 8013a22:	d054      	beq.n	8013ace <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8013a24:	9901      	ldr	r1, [sp, #4]
 8013a26:	1ac9      	subs	r1, r1, r3
 8013a28:	4461      	add	r1, ip
 8013a2a:	0149      	lsls	r1, r1, #5
 8013a2c:	fb91 fef4 	sdiv	lr, r1, r4
 8013a30:	fb04 111e 	mls	r1, r4, lr, r1
 8013a34:	2900      	cmp	r1, #0
 8013a36:	bfb8      	it	lt
 8013a38:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8013a3c:	f10e 0701 	add.w	r7, lr, #1
 8013a40:	bfb8      	it	lt
 8013a42:	1909      	addlt	r1, r1, r4
 8013a44:	1b12      	subs	r2, r2, r4
 8013a46:	970d      	str	r7, [sp, #52]	; 0x34
 8013a48:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8013a4c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8013a4e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8013a52:	1852      	adds	r2, r2, r1
 8013a54:	bf54      	ite	pl
 8013a56:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8013a5a:	46f4      	movmi	ip, lr
 8013a5c:	44e3      	add	fp, ip
 8013a5e:	f8aa b004 	strh.w	fp, [sl, #4]
 8013a62:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8013a66:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8013a6a:	f8aa b006 	strh.w	fp, [sl, #6]
 8013a6e:	4463      	add	r3, ip
 8013a70:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013a74:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013a78:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8013a7c:	bf58      	it	pl
 8013a7e:	1b12      	subpl	r2, r2, r4
 8013a80:	443d      	add	r5, r7
 8013a82:	ea5b 070a 	orrs.w	r7, fp, sl
 8013a86:	d014      	beq.n	8013ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013a88:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8013a8c:	f1ba 0f00 	cmp.w	sl, #0
 8013a90:	db0f      	blt.n	8013ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013a92:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013a94:	45ba      	cmp	sl, r7
 8013a96:	da0c      	bge.n	8013ab2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013a98:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8013a9c:	45ba      	cmp	sl, r7
 8013a9e:	bf38      	it	cc
 8013aa0:	f10c 0c08 	addcc.w	ip, ip, #8
 8013aa4:	f10a 0a01 	add.w	sl, sl, #1
 8013aa8:	bf38      	it	cc
 8013aaa:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8013aae:	f8c0 a008 	str.w	sl, [r0, #8]
 8013ab2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013ab6:	f04f 0700 	mov.w	r7, #0
 8013aba:	42ae      	cmp	r6, r5
 8013abc:	f8ac 5000 	strh.w	r5, [ip]
 8013ac0:	f8ac 8002 	strh.w	r8, [ip, #2]
 8013ac4:	f8ac 7004 	strh.w	r7, [ip, #4]
 8013ac8:	f8ac 7006 	strh.w	r7, [ip, #6]
 8013acc:	d1bc      	bne.n	8013a48 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8013ace:	6904      	ldr	r4, [r0, #16]
 8013ad0:	9a01      	ldr	r2, [sp, #4]
 8013ad2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013ad4:	1ad3      	subs	r3, r2, r3
 8013ad6:	88a2      	ldrh	r2, [r4, #4]
 8013ad8:	441a      	add	r2, r3
 8013ada:	80a2      	strh	r2, [r4, #4]
 8013adc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013ade:	3120      	adds	r1, #32
 8013ae0:	1a89      	subs	r1, r1, r2
 8013ae2:	88e2      	ldrh	r2, [r4, #6]
 8013ae4:	fb03 2301 	mla	r3, r3, r1, r2
 8013ae8:	80e3      	strh	r3, [r4, #6]
 8013aea:	e64d      	b.n	8013788 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013aec:	f04f 37ff 	mov.w	r7, #4294967295
 8013af0:	970a      	str	r7, [sp, #40]	; 0x28
 8013af2:	434a      	muls	r2, r1
 8013af4:	4264      	negs	r4, r4
 8013af6:	2700      	movs	r7, #0
 8013af8:	e756      	b.n	80139a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8013afa:	ea4f 1867 	mov.w	r8, r7, asr #5
 8013afe:	f009 031f 	and.w	r3, r9, #31
 8013b02:	45d0      	cmp	r8, sl
 8013b04:	f007 071f 	and.w	r7, r7, #31
 8013b08:	930f      	str	r3, [sp, #60]	; 0x3c
 8013b0a:	fa1f fc8c 	uxth.w	ip, ip
 8013b0e:	fa1f fe8e 	uxth.w	lr, lr
 8013b12:	d10a      	bne.n	8013b2a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8013b14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013b16:	449c      	add	ip, r3
 8013b18:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013b1a:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013b1e:	441f      	add	r7, r3
 8013b20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013b22:	fb03 e707 	mla	r7, r3, r7, lr
 8013b26:	80ef      	strh	r7, [r5, #6]
 8013b28:	e6b9      	b.n	801389e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013b2a:	2900      	cmp	r1, #0
 8013b2c:	f2c0 80a8 	blt.w	8013c80 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8013b30:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013b32:	f1c7 0320 	rsb	r3, r7, #32
 8013b36:	4363      	muls	r3, r4
 8013b38:	2401      	movs	r4, #1
 8013b3a:	940d      	str	r4, [sp, #52]	; 0x34
 8013b3c:	2420      	movs	r4, #32
 8013b3e:	940c      	str	r4, [sp, #48]	; 0x30
 8013b40:	fb93 f4f1 	sdiv	r4, r3, r1
 8013b44:	fb01 3b14 	mls	fp, r1, r4, r3
 8013b48:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013b4a:	f1bb 0f00 	cmp.w	fp, #0
 8013b4e:	bfb8      	it	lt
 8013b50:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013b54:	441f      	add	r7, r3
 8013b56:	fb04 e707 	mla	r7, r4, r7, lr
 8013b5a:	44a4      	add	ip, r4
 8013b5c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013b60:	80ef      	strh	r7, [r5, #6]
 8013b62:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013b66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013b68:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8013b6c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013b70:	bfb8      	it	lt
 8013b72:	448b      	addlt	fp, r1
 8013b74:	eb08 0503 	add.w	r5, r8, r3
 8013b78:	ea5e 0307 	orrs.w	r3, lr, r7
 8013b7c:	d011      	beq.n	8013ba2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013b7e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8013b82:	f1be 0f00 	cmp.w	lr, #0
 8013b86:	db0c      	blt.n	8013ba2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013b88:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013b8a:	45be      	cmp	lr, r7
 8013b8c:	da09      	bge.n	8013ba2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013b8e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013b92:	45be      	cmp	lr, r7
 8013b94:	bf3c      	itt	cc
 8013b96:	f10c 0708 	addcc.w	r7, ip, #8
 8013b9a:	6107      	strcc	r7, [r0, #16]
 8013b9c:	f10e 0701 	add.w	r7, lr, #1
 8013ba0:	6087      	str	r7, [r0, #8]
 8013ba2:	6907      	ldr	r7, [r0, #16]
 8013ba4:	b213      	sxth	r3, r2
 8013ba6:	9310      	str	r3, [sp, #64]	; 0x40
 8013ba8:	807b      	strh	r3, [r7, #2]
 8013baa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013bac:	803d      	strh	r5, [r7, #0]
 8013bae:	4555      	cmp	r5, sl
 8013bb0:	80be      	strh	r6, [r7, #4]
 8013bb2:	80fe      	strh	r6, [r7, #6]
 8013bb4:	eb04 0c03 	add.w	ip, r4, r3
 8013bb8:	d051      	beq.n	8013c5e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8013bba:	9b01      	ldr	r3, [sp, #4]
 8013bbc:	eba3 070c 	sub.w	r7, r3, ip
 8013bc0:	443c      	add	r4, r7
 8013bc2:	0164      	lsls	r4, r4, #5
 8013bc4:	fb94 f8f1 	sdiv	r8, r4, r1
 8013bc8:	fb01 4418 	mls	r4, r1, r8, r4
 8013bcc:	2c00      	cmp	r4, #0
 8013bce:	bfb8      	it	lt
 8013bd0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013bd4:	ebab 0301 	sub.w	r3, fp, r1
 8013bd8:	f108 0701 	add.w	r7, r8, #1
 8013bdc:	bfb8      	it	lt
 8013bde:	1864      	addlt	r4, r4, r1
 8013be0:	9309      	str	r3, [sp, #36]	; 0x24
 8013be2:	9711      	str	r7, [sp, #68]	; 0x44
 8013be4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013be6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013bea:	191b      	adds	r3, r3, r4
 8013bec:	bf58      	it	pl
 8013bee:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8013bf0:	f8be b004 	ldrh.w	fp, [lr, #4]
 8013bf4:	9309      	str	r3, [sp, #36]	; 0x24
 8013bf6:	bf48      	it	mi
 8013bf8:	4647      	movmi	r7, r8
 8013bfa:	44bb      	add	fp, r7
 8013bfc:	f8ae b004 	strh.w	fp, [lr, #4]
 8013c00:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013c04:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013c08:	f8ae b006 	strh.w	fp, [lr, #6]
 8013c0c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013c10:	44bc      	add	ip, r7
 8013c12:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8013c14:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013c18:	443d      	add	r5, r7
 8013c1a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8013c1e:	bf5c      	itt	pl
 8013c20:	1a5b      	subpl	r3, r3, r1
 8013c22:	9309      	strpl	r3, [sp, #36]	; 0x24
 8013c24:	ea5b 0307 	orrs.w	r3, fp, r7
 8013c28:	d011      	beq.n	8013c4e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013c2a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8013c2e:	f1bb 0f00 	cmp.w	fp, #0
 8013c32:	db0c      	blt.n	8013c4e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013c34:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013c36:	45bb      	cmp	fp, r7
 8013c38:	da09      	bge.n	8013c4e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013c3a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013c3e:	45bb      	cmp	fp, r7
 8013c40:	bf3c      	itt	cc
 8013c42:	f10e 0708 	addcc.w	r7, lr, #8
 8013c46:	6107      	strcc	r7, [r0, #16]
 8013c48:	f10b 0701 	add.w	r7, fp, #1
 8013c4c:	6087      	str	r7, [r0, #8]
 8013c4e:	6907      	ldr	r7, [r0, #16]
 8013c50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013c52:	803d      	strh	r5, [r7, #0]
 8013c54:	4555      	cmp	r5, sl
 8013c56:	807b      	strh	r3, [r7, #2]
 8013c58:	80be      	strh	r6, [r7, #4]
 8013c5a:	80fe      	strh	r6, [r7, #6]
 8013c5c:	d1c2      	bne.n	8013be4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8013c5e:	9b01      	ldr	r3, [sp, #4]
 8013c60:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013c62:	eba3 0c0c 	sub.w	ip, r3, ip
 8013c66:	6903      	ldr	r3, [r0, #16]
 8013c68:	8899      	ldrh	r1, [r3, #4]
 8013c6a:	4461      	add	r1, ip
 8013c6c:	8099      	strh	r1, [r3, #4]
 8013c6e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013c70:	3720      	adds	r7, #32
 8013c72:	1a7f      	subs	r7, r7, r1
 8013c74:	88d9      	ldrh	r1, [r3, #6]
 8013c76:	fb0c 1c07 	mla	ip, ip, r7, r1
 8013c7a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8013c7e:	e60e      	b.n	801389e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013c80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013c82:	f04f 34ff 	mov.w	r4, #4294967295
 8013c86:	940d      	str	r4, [sp, #52]	; 0x34
 8013c88:	437b      	muls	r3, r7
 8013c8a:	4249      	negs	r1, r1
 8013c8c:	2400      	movs	r4, #0
 8013c8e:	e756      	b.n	8013b3e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8013c90:	9905      	ldr	r1, [sp, #20]
 8013c92:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8013c96:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8013c9a:	f001 011f 	and.w	r1, r1, #31
 8013c9e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8013ca2:	9102      	str	r1, [sp, #8]
 8013ca4:	9904      	ldr	r1, [sp, #16]
 8013ca6:	45f3      	cmp	fp, lr
 8013ca8:	f009 0c1f 	and.w	ip, r9, #31
 8013cac:	eba1 0406 	sub.w	r4, r1, r6
 8013cb0:	d108      	bne.n	8013cc4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8013cb2:	9b02      	ldr	r3, [sp, #8]
 8013cb4:	449c      	add	ip, r3
 8013cb6:	44a0      	add	r8, r4
 8013cb8:	fb04 a40c 	mla	r4, r4, ip, sl
 8013cbc:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013cc0:	80fc      	strh	r4, [r7, #6]
 8013cc2:	e458      	b.n	8013576 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013cc4:	9905      	ldr	r1, [sp, #20]
 8013cc6:	ebb1 0109 	subs.w	r1, r1, r9
 8013cca:	bf5b      	ittet	pl
 8013ccc:	f1cc 0520 	rsbpl	r5, ip, #32
 8013cd0:	436c      	mulpl	r4, r5
 8013cd2:	2500      	movmi	r5, #0
 8013cd4:	2520      	movpl	r5, #32
 8013cd6:	bf44      	itt	mi
 8013cd8:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013cdc:	4249      	negmi	r1, r1
 8013cde:	9501      	str	r5, [sp, #4]
 8013ce0:	9b01      	ldr	r3, [sp, #4]
 8013ce2:	fb94 f5f1 	sdiv	r5, r4, r1
 8013ce6:	fb01 4415 	mls	r4, r1, r5, r4
 8013cea:	bf54      	ite	pl
 8013cec:	f04f 0901 	movpl.w	r9, #1
 8013cf0:	f04f 39ff 	movmi.w	r9, #4294967295
 8013cf4:	2c00      	cmp	r4, #0
 8013cf6:	bfb8      	it	lt
 8013cf8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013cfc:	449c      	add	ip, r3
 8013cfe:	44a8      	add	r8, r5
 8013d00:	fb05 ac0c 	mla	ip, r5, ip, sl
 8013d04:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013d08:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013d0c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013d10:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013d14:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013d18:	bfb8      	it	lt
 8013d1a:	1864      	addlt	r4, r4, r1
 8013d1c:	ea58 0707 	orrs.w	r7, r8, r7
 8013d20:	eb0b 0309 	add.w	r3, fp, r9
 8013d24:	d011      	beq.n	8013d4a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013d26:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8013d2a:	f1b8 0f00 	cmp.w	r8, #0
 8013d2e:	db0c      	blt.n	8013d4a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013d30:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013d32:	45b8      	cmp	r8, r7
 8013d34:	da09      	bge.n	8013d4a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013d36:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8013d3a:	45b8      	cmp	r8, r7
 8013d3c:	bf3c      	itt	cc
 8013d3e:	f10c 0708 	addcc.w	r7, ip, #8
 8013d42:	6107      	strcc	r7, [r0, #16]
 8013d44:	f108 0701 	add.w	r7, r8, #1
 8013d48:	6087      	str	r7, [r0, #8]
 8013d4a:	6907      	ldr	r7, [r0, #16]
 8013d4c:	f04f 0c00 	mov.w	ip, #0
 8013d50:	b212      	sxth	r2, r2
 8013d52:	459e      	cmp	lr, r3
 8013d54:	803b      	strh	r3, [r7, #0]
 8013d56:	807a      	strh	r2, [r7, #2]
 8013d58:	f8a7 c004 	strh.w	ip, [r7, #4]
 8013d5c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013d60:	442e      	add	r6, r5
 8013d62:	d04d      	beq.n	8013e00 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8013d64:	9f04      	ldr	r7, [sp, #16]
 8013d66:	1bbf      	subs	r7, r7, r6
 8013d68:	443d      	add	r5, r7
 8013d6a:	016d      	lsls	r5, r5, #5
 8013d6c:	fb95 f8f1 	sdiv	r8, r5, r1
 8013d70:	fb01 5518 	mls	r5, r1, r8, r5
 8013d74:	4565      	cmp	r5, ip
 8013d76:	bfb8      	it	lt
 8013d78:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8013d7c:	f108 0701 	add.w	r7, r8, #1
 8013d80:	bfb8      	it	lt
 8013d82:	186d      	addlt	r5, r5, r1
 8013d84:	1a64      	subs	r4, r4, r1
 8013d86:	9703      	str	r7, [sp, #12]
 8013d88:	f04f 0a00 	mov.w	sl, #0
 8013d8c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013d90:	1964      	adds	r4, r4, r5
 8013d92:	bf58      	it	pl
 8013d94:	9f03      	ldrpl	r7, [sp, #12]
 8013d96:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8013d9a:	bf48      	it	mi
 8013d9c:	4647      	movmi	r7, r8
 8013d9e:	44bb      	add	fp, r7
 8013da0:	f8ac b004 	strh.w	fp, [ip, #4]
 8013da4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013da8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013dac:	f8ac b006 	strh.w	fp, [ip, #6]
 8013db0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013db4:	443e      	add	r6, r7
 8013db6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013dba:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013dbe:	bf58      	it	pl
 8013dc0:	1a64      	subpl	r4, r4, r1
 8013dc2:	ea5b 0707 	orrs.w	r7, fp, r7
 8013dc6:	444b      	add	r3, r9
 8013dc8:	d011      	beq.n	8013dee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013dca:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8013dce:	f1bb 0f00 	cmp.w	fp, #0
 8013dd2:	db0c      	blt.n	8013dee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013dd4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013dd6:	45bb      	cmp	fp, r7
 8013dd8:	da09      	bge.n	8013dee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013dda:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013dde:	45bb      	cmp	fp, r7
 8013de0:	bf3c      	itt	cc
 8013de2:	f10c 0708 	addcc.w	r7, ip, #8
 8013de6:	6107      	strcc	r7, [r0, #16]
 8013de8:	f10b 0701 	add.w	r7, fp, #1
 8013dec:	6087      	str	r7, [r0, #8]
 8013dee:	6907      	ldr	r7, [r0, #16]
 8013df0:	459e      	cmp	lr, r3
 8013df2:	803b      	strh	r3, [r7, #0]
 8013df4:	807a      	strh	r2, [r7, #2]
 8013df6:	f8a7 a004 	strh.w	sl, [r7, #4]
 8013dfa:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013dfe:	d1c5      	bne.n	8013d8c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8013e00:	9b04      	ldr	r3, [sp, #16]
 8013e02:	1b9e      	subs	r6, r3, r6
 8013e04:	6903      	ldr	r3, [r0, #16]
 8013e06:	889a      	ldrh	r2, [r3, #4]
 8013e08:	4432      	add	r2, r6
 8013e0a:	809a      	strh	r2, [r3, #4]
 8013e0c:	9a02      	ldr	r2, [sp, #8]
 8013e0e:	f102 0c20 	add.w	ip, r2, #32
 8013e12:	9a01      	ldr	r2, [sp, #4]
 8013e14:	ebac 0c02 	sub.w	ip, ip, r2
 8013e18:	88da      	ldrh	r2, [r3, #6]
 8013e1a:	fb06 260c 	mla	r6, r6, ip, r2
 8013e1e:	80de      	strh	r6, [r3, #6]
 8013e20:	f7ff bba9 	b.w	8013576 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08013e24 <_ZN8touchgfx7Outline6lineToEii>:
 8013e24:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013e26:	079b      	lsls	r3, r3, #30
 8013e28:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013e2a:	460e      	mov	r6, r1
 8013e2c:	4615      	mov	r5, r2
 8013e2e:	d511      	bpl.n	8013e54 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013e30:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8013e34:	ea86 0701 	eor.w	r7, r6, r1
 8013e38:	ea85 0302 	eor.w	r3, r5, r2
 8013e3c:	433b      	orrs	r3, r7
 8013e3e:	d009      	beq.n	8013e54 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013e40:	4633      	mov	r3, r6
 8013e42:	9500      	str	r5, [sp, #0]
 8013e44:	f7ff fb3e 	bl	80134c4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8013e48:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013e4a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8013e4e:	f043 0301 	orr.w	r3, r3, #1
 8013e52:	6243      	str	r3, [r0, #36]	; 0x24
 8013e54:	b003      	add	sp, #12
 8013e56:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013e58 <_ZN8touchgfx7Outline6moveToEii>:
 8013e58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013e5a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013e5c:	4615      	mov	r5, r2
 8013e5e:	079a      	lsls	r2, r3, #30
 8013e60:	4604      	mov	r4, r0
 8013e62:	460e      	mov	r6, r1
 8013e64:	d401      	bmi.n	8013e6a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8013e66:	f7ff faf9 	bl	801345c <_ZN8touchgfx7Outline5resetEv>
 8013e6a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013e6c:	07db      	lsls	r3, r3, #31
 8013e6e:	d504      	bpl.n	8013e7a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8013e70:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8013e74:	4620      	mov	r0, r4
 8013e76:	f7ff ffd5 	bl	8013e24 <_ZN8touchgfx7Outline6lineToEii>
 8013e7a:	6923      	ldr	r3, [r4, #16]
 8013e7c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013e80:	1170      	asrs	r0, r6, #5
 8013e82:	4290      	cmp	r0, r2
 8013e84:	ea4f 1165 	mov.w	r1, r5, asr #5
 8013e88:	d103      	bne.n	8013e92 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8013e8a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8013e8e:	4291      	cmp	r1, r2
 8013e90:	d01a      	beq.n	8013ec8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8013e92:	88df      	ldrh	r7, [r3, #6]
 8013e94:	889a      	ldrh	r2, [r3, #4]
 8013e96:	433a      	orrs	r2, r7
 8013e98:	d010      	beq.n	8013ebc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013e9a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8013e9e:	2a00      	cmp	r2, #0
 8013ea0:	db0c      	blt.n	8013ebc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013ea2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8013ea4:	42ba      	cmp	r2, r7
 8013ea6:	da09      	bge.n	8013ebc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8013ea8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8013eac:	42ba      	cmp	r2, r7
 8013eae:	bf38      	it	cc
 8013eb0:	3308      	addcc	r3, #8
 8013eb2:	f102 0201 	add.w	r2, r2, #1
 8013eb6:	bf38      	it	cc
 8013eb8:	6123      	strcc	r3, [r4, #16]
 8013eba:	60a2      	str	r2, [r4, #8]
 8013ebc:	6923      	ldr	r3, [r4, #16]
 8013ebe:	2200      	movs	r2, #0
 8013ec0:	8018      	strh	r0, [r3, #0]
 8013ec2:	8059      	strh	r1, [r3, #2]
 8013ec4:	809a      	strh	r2, [r3, #4]
 8013ec6:	80da      	strh	r2, [r3, #6]
 8013ec8:	6166      	str	r6, [r4, #20]
 8013eca:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8013ece:	6225      	str	r5, [r4, #32]
 8013ed0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013ed2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8013ed2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013ed6:	b0d0      	sub	sp, #320	; 0x140
 8013ed8:	466c      	mov	r4, sp
 8013eda:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8013ede:	4627      	mov	r7, r4
 8013ee0:	1a0d      	subs	r5, r1, r0
 8013ee2:	2d48      	cmp	r5, #72	; 0x48
 8013ee4:	f100 0308 	add.w	r3, r0, #8
 8013ee8:	f340 80d5 	ble.w	8014096 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8013eec:	112d      	asrs	r5, r5, #4
 8013eee:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8013ef2:	f9b0 9000 	ldrsh.w	r9, [r0]
 8013ef6:	6816      	ldr	r6, [r2, #0]
 8013ef8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8013efc:	6006      	str	r6, [r0, #0]
 8013efe:	6856      	ldr	r6, [r2, #4]
 8013f00:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8013f04:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013f08:	6046      	str	r6, [r0, #4]
 8013f0a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8013f0e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8013f12:	f8a2 e004 	strh.w	lr, [r2, #4]
 8013f16:	f8a2 c006 	strh.w	ip, [r2, #6]
 8013f1a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8013f1e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8013f22:	4565      	cmp	r5, ip
 8013f24:	f1a1 0208 	sub.w	r2, r1, #8
 8013f28:	db06      	blt.n	8013f38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8013f2a:	d119      	bne.n	8013f60 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8013f2c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8013f30:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8013f34:	42ae      	cmp	r6, r5
 8013f36:	dd13      	ble.n	8013f60 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8013f38:	460e      	mov	r6, r1
 8013f3a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8013f3e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013f42:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8013f46:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8013f4a:	601d      	str	r5, [r3, #0]
 8013f4c:	6875      	ldr	r5, [r6, #4]
 8013f4e:	605d      	str	r5, [r3, #4]
 8013f50:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013f54:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013f58:	f821 8c04 	strh.w	r8, [r1, #-4]
 8013f5c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013f60:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8013f64:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8013f68:	42ae      	cmp	r6, r5
 8013f6a:	db06      	blt.n	8013f7a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8013f6c:	d116      	bne.n	8013f9c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8013f6e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8013f72:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8013f76:	45ac      	cmp	ip, r5
 8013f78:	da10      	bge.n	8013f9c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8013f7a:	681d      	ldr	r5, [r3, #0]
 8013f7c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8013f80:	6005      	str	r5, [r0, #0]
 8013f82:	685d      	ldr	r5, [r3, #4]
 8013f84:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013f88:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8013f8c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8013f90:	6045      	str	r5, [r0, #4]
 8013f92:	8146      	strh	r6, [r0, #10]
 8013f94:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8013f98:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8013f9c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8013fa0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8013fa4:	4565      	cmp	r5, ip
 8013fa6:	db06      	blt.n	8013fb6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8013fa8:	d119      	bne.n	8013fde <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013faa:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8013fae:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013fb2:	42ae      	cmp	r6, r5
 8013fb4:	da13      	bge.n	8013fde <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013fb6:	460e      	mov	r6, r1
 8013fb8:	f9b0 9000 	ldrsh.w	r9, [r0]
 8013fbc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013fc0:	6005      	str	r5, [r0, #0]
 8013fc2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8013fc6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8013fca:	6875      	ldr	r5, [r6, #4]
 8013fcc:	6045      	str	r5, [r0, #4]
 8013fce:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013fd2:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013fd6:	f821 8c04 	strh.w	r8, [r1, #-4]
 8013fda:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013fde:	3308      	adds	r3, #8
 8013fe0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8013fe4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8013fe8:	45e6      	cmp	lr, ip
 8013fea:	dbf8      	blt.n	8013fde <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013fec:	d105      	bne.n	8013ffa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013fee:	f9b3 6000 	ldrsh.w	r6, [r3]
 8013ff2:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013ff6:	42ae      	cmp	r6, r5
 8013ff8:	dbf1      	blt.n	8013fde <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013ffa:	4615      	mov	r5, r2
 8013ffc:	3a08      	subs	r2, #8
 8013ffe:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8014002:	45b4      	cmp	ip, r6
 8014004:	dbf9      	blt.n	8013ffa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014006:	d105      	bne.n	8014014 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8014008:	f9b0 8000 	ldrsh.w	r8, [r0]
 801400c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8014010:	45b0      	cmp	r8, r6
 8014012:	dbf2      	blt.n	8013ffa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014014:	4293      	cmp	r3, r2
 8014016:	f1a5 0608 	sub.w	r6, r5, #8
 801401a:	d816      	bhi.n	801404a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801401c:	f8d6 c000 	ldr.w	ip, [r6]
 8014020:	f9b3 a000 	ldrsh.w	sl, [r3]
 8014024:	f8c3 c000 	str.w	ip, [r3]
 8014028:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801402c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8014030:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8014034:	f8c3 c004 	str.w	ip, [r3, #4]
 8014038:	f825 ac08 	strh.w	sl, [r5, #-8]
 801403c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8014040:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014044:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014048:	e7c9      	b.n	8013fde <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801404a:	f8d6 e000 	ldr.w	lr, [r6]
 801404e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8014052:	f8c0 e000 	str.w	lr, [r0]
 8014056:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801405a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801405e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8014062:	f8c0 e004 	str.w	lr, [r0, #4]
 8014066:	f825 ac08 	strh.w	sl, [r5, #-8]
 801406a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801406e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014072:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014076:	1acd      	subs	r5, r1, r3
 8014078:	1a16      	subs	r6, r2, r0
 801407a:	10ed      	asrs	r5, r5, #3
 801407c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8014080:	bfb5      	itete	lt
 8014082:	e9c4 0200 	strdlt	r0, r2, [r4]
 8014086:	e9c4 3100 	strdge	r3, r1, [r4]
 801408a:	460a      	movlt	r2, r1
 801408c:	4603      	movge	r3, r0
 801408e:	3408      	adds	r4, #8
 8014090:	4618      	mov	r0, r3
 8014092:	4611      	mov	r1, r2
 8014094:	e724      	b.n	8013ee0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014096:	4299      	cmp	r1, r3
 8014098:	d928      	bls.n	80140ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801409a:	f1a3 0210 	sub.w	r2, r3, #16
 801409e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80140a2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80140a6:	45ac      	cmp	ip, r5
 80140a8:	db06      	blt.n	80140b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80140aa:	d11d      	bne.n	80140e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80140ac:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80140b0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80140b4:	42ae      	cmp	r6, r5
 80140b6:	da17      	bge.n	80140e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80140b8:	4615      	mov	r5, r2
 80140ba:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80140be:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80140c2:	6116      	str	r6, [r2, #16]
 80140c4:	686e      	ldr	r6, [r5, #4]
 80140c6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80140ca:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80140ce:	f8a2 9008 	strh.w	r9, [r2, #8]
 80140d2:	42a8      	cmp	r0, r5
 80140d4:	6156      	str	r6, [r2, #20]
 80140d6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80140da:	f8a2 800c 	strh.w	r8, [r2, #12]
 80140de:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80140e2:	f1a2 0208 	sub.w	r2, r2, #8
 80140e6:	d1da      	bne.n	801409e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80140e8:	3308      	adds	r3, #8
 80140ea:	e7d4      	b.n	8014096 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80140ec:	42bc      	cmp	r4, r7
 80140ee:	d903      	bls.n	80140f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 80140f0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 80140f4:	3c08      	subs	r4, #8
 80140f6:	e6f3      	b.n	8013ee0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80140f8:	b050      	add	sp, #320	; 0x140
 80140fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080140fe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 80140fe:	b510      	push	{r4, lr}
 8014100:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014102:	07da      	lsls	r2, r3, #31
 8014104:	4604      	mov	r4, r0
 8014106:	d507      	bpl.n	8014118 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8014108:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801410c:	f7ff fe8a 	bl	8013e24 <_ZN8touchgfx7Outline6lineToEii>
 8014110:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014112:	f023 0301 	bic.w	r3, r3, #1
 8014116:	6243      	str	r3, [r0, #36]	; 0x24
 8014118:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801411a:	079b      	lsls	r3, r3, #30
 801411c:	d521      	bpl.n	8014162 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801411e:	6923      	ldr	r3, [r4, #16]
 8014120:	88d9      	ldrh	r1, [r3, #6]
 8014122:	889a      	ldrh	r2, [r3, #4]
 8014124:	430a      	orrs	r2, r1
 8014126:	d010      	beq.n	801414a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014128:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801412c:	2a00      	cmp	r2, #0
 801412e:	db0c      	blt.n	801414a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014130:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014132:	428a      	cmp	r2, r1
 8014134:	da09      	bge.n	801414a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014136:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801413a:	4291      	cmp	r1, r2
 801413c:	bf88      	it	hi
 801413e:	3308      	addhi	r3, #8
 8014140:	f102 0201 	add.w	r2, r2, #1
 8014144:	bf88      	it	hi
 8014146:	6123      	strhi	r3, [r4, #16]
 8014148:	60a2      	str	r2, [r4, #8]
 801414a:	68a1      	ldr	r1, [r4, #8]
 801414c:	b129      	cbz	r1, 801415a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801414e:	6863      	ldr	r3, [r4, #4]
 8014150:	4299      	cmp	r1, r3
 8014152:	d802      	bhi.n	801415a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014154:	68e0      	ldr	r0, [r4, #12]
 8014156:	f7ff febc 	bl	8013ed2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801415a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801415c:	f023 0302 	bic.w	r3, r3, #2
 8014160:	6263      	str	r3, [r4, #36]	; 0x24
 8014162:	68e0      	ldr	r0, [r4, #12]
 8014164:	bd10      	pop	{r4, pc}
	...

08014168 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8014168:	4b02      	ldr	r3, [pc, #8]	; (8014174 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801416a:	6018      	str	r0, [r3, #0]
 801416c:	4b02      	ldr	r3, [pc, #8]	; (8014178 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801416e:	6019      	str	r1, [r3, #0]
 8014170:	4770      	bx	lr
 8014172:	bf00      	nop
 8014174:	20012dbc 	.word	0x20012dbc
 8014178:	20012dc0 	.word	0x20012dc0

0801417c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801417c:	4a02      	ldr	r2, [pc, #8]	; (8014188 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801417e:	2300      	movs	r3, #0
 8014180:	6013      	str	r3, [r2, #0]
 8014182:	4a02      	ldr	r2, [pc, #8]	; (801418c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8014184:	6013      	str	r3, [r2, #0]
 8014186:	4770      	bx	lr
 8014188:	20012dbc 	.word	0x20012dbc
 801418c:	20012dc0 	.word	0x20012dc0

08014190 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014190:	4b01      	ldr	r3, [pc, #4]	; (8014198 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8014192:	6818      	ldr	r0, [r3, #0]
 8014194:	4770      	bx	lr
 8014196:	bf00      	nop
 8014198:	20012dbc 	.word	0x20012dbc

0801419c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801419c:	4b01      	ldr	r3, [pc, #4]	; (80141a4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801419e:	6818      	ldr	r0, [r3, #0]
 80141a0:	4770      	bx	lr
 80141a2:	bf00      	nop
 80141a4:	20012dc0 	.word	0x20012dc0

080141a8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80141a8:	b510      	push	{r4, lr}
 80141aa:	6803      	ldr	r3, [r0, #0]
 80141ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80141ae:	460c      	mov	r4, r1
 80141b0:	4798      	blx	r3
 80141b2:	1b03      	subs	r3, r0, r4
 80141b4:	4258      	negs	r0, r3
 80141b6:	4158      	adcs	r0, r3
 80141b8:	bd10      	pop	{r4, pc}
	...

080141bc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80141bc:	4b01      	ldr	r3, [pc, #4]	; (80141c4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80141be:	6019      	str	r1, [r3, #0]
 80141c0:	4770      	bx	lr
 80141c2:	bf00      	nop
 80141c4:	20012dc4 	.word	0x20012dc4

080141c8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80141c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80141cc:	4696      	mov	lr, r2
 80141ce:	4605      	mov	r5, r0
 80141d0:	4614      	mov	r4, r2
 80141d2:	460e      	mov	r6, r1
 80141d4:	461f      	mov	r7, r3
 80141d6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80141da:	b097      	sub	sp, #92	; 0x5c
 80141dc:	f10d 0c1c 	add.w	ip, sp, #28
 80141e0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80141e4:	f8de 3000 	ldr.w	r3, [lr]
 80141e8:	f8cc 3000 	str.w	r3, [ip]
 80141ec:	f104 0e14 	add.w	lr, r4, #20
 80141f0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80141f4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80141f8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80141fc:	f8de 3000 	ldr.w	r3, [lr]
 8014200:	f8cc 3000 	str.w	r3, [ip]
 8014204:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014208:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801420c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014210:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014214:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8014218:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801421c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8014220:	f8de 3000 	ldr.w	r3, [lr]
 8014224:	f8cc 3000 	str.w	r3, [ip]
 8014228:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801422a:	682b      	ldr	r3, [r5, #0]
 801422c:	9201      	str	r2, [sp, #4]
 801422e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014232:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014234:	9200      	str	r2, [sp, #0]
 8014236:	f8cd 8008 	str.w	r8, [sp, #8]
 801423a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801423e:	aa07      	add	r2, sp, #28
 8014240:	463b      	mov	r3, r7
 8014242:	4631      	mov	r1, r6
 8014244:	4628      	mov	r0, r5
 8014246:	47d8      	blx	fp
 8014248:	46a6      	mov	lr, r4
 801424a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801424e:	f10d 0c1c 	add.w	ip, sp, #28
 8014252:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014256:	f8de 3000 	ldr.w	r3, [lr]
 801425a:	f8cc 3000 	str.w	r3, [ip]
 801425e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014262:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014266:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801426a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801426e:	343c      	adds	r4, #60	; 0x3c
 8014270:	f8de 3000 	ldr.w	r3, [lr]
 8014274:	f8cc 3000 	str.w	r3, [ip]
 8014278:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801427a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801427e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014282:	6823      	ldr	r3, [r4, #0]
 8014284:	f8cc 3000 	str.w	r3, [ip]
 8014288:	682b      	ldr	r3, [r5, #0]
 801428a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801428e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014290:	9201      	str	r2, [sp, #4]
 8014292:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014294:	9200      	str	r2, [sp, #0]
 8014296:	f8cd 8008 	str.w	r8, [sp, #8]
 801429a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801429c:	aa07      	add	r2, sp, #28
 801429e:	463b      	mov	r3, r7
 80142a0:	4631      	mov	r1, r6
 80142a2:	4628      	mov	r0, r5
 80142a4:	47a0      	blx	r4
 80142a6:	b017      	add	sp, #92	; 0x5c
 80142a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080142ac <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80142ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80142b0:	b08d      	sub	sp, #52	; 0x34
 80142b2:	4688      	mov	r8, r1
 80142b4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80142b6:	f8d3 c000 	ldr.w	ip, [r3]
 80142ba:	680f      	ldr	r7, [r1, #0]
 80142bc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80142c0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80142c4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80142c8:	edd3 6a07 	vldr	s13, [r3, #28]
 80142cc:	9918      	ldr	r1, [sp, #96]	; 0x60
 80142ce:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80142d2:	f9b1 9000 	ldrsh.w	r9, [r1]
 80142d6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80142da:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80142de:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80142e2:	eba7 070c 	sub.w	r7, r7, ip
 80142e6:	42bc      	cmp	r4, r7
 80142e8:	bfa8      	it	ge
 80142ea:	463c      	movge	r4, r7
 80142ec:	ee07 4a90 	vmov	s15, r4
 80142f0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80142f4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 80142f8:	ee25 4a04 	vmul.f32	s8, s10, s8
 80142fc:	ee65 4a24 	vmul.f32	s9, s10, s9
 8014300:	ee25 5a27 	vmul.f32	s10, s10, s15
 8014304:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014308:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801430c:	eb09 0e0c 	add.w	lr, r9, ip
 8014310:	4571      	cmp	r1, lr
 8014312:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8014316:	ee32 1a05 	vadd.f32	s2, s4, s10
 801431a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801431e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014322:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014326:	f340 808d 	ble.w	8014444 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801432a:	eba1 060e 	sub.w	r6, r1, lr
 801432e:	fb96 f5f4 	sdiv	r5, r6, r4
 8014332:	ee07 5a10 	vmov	s14, r5
 8014336:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801433a:	2d00      	cmp	r5, #0
 801433c:	fb04 6615 	mls	r6, r4, r5, r6
 8014340:	eea7 0a04 	vfma.f32	s0, s14, s8
 8014344:	eee7 0a24 	vfma.f32	s1, s14, s9
 8014348:	eea7 1a05 	vfma.f32	s2, s14, s10
 801434c:	dd13      	ble.n	8014376 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801434e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8014352:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8014356:	eef5 6a40 	vcmp.f32	s13, #0.0
 801435a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801435e:	bf18      	it	ne
 8014360:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8014364:	ee31 2a45 	vsub.f32	s4, s2, s10
 8014368:	bf08      	it	eq
 801436a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801436e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014372:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014376:	fb05 f204 	mul.w	r2, r5, r4
 801437a:	1abf      	subs	r7, r7, r2
 801437c:	4494      	add	ip, r2
 801437e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8014382:	4411      	add	r1, r2
 8014384:	eb09 020c 	add.w	r2, r9, ip
 8014388:	443a      	add	r2, r7
 801438a:	b209      	sxth	r1, r1
 801438c:	428a      	cmp	r2, r1
 801438e:	bfc4      	itt	gt
 8014390:	eba1 0209 	subgt.w	r2, r1, r9
 8014394:	eba2 070c 	subgt.w	r7, r2, ip
 8014398:	2f00      	cmp	r7, #0
 801439a:	dd50      	ble.n	801443e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801439c:	fb97 f1f4 	sdiv	r1, r7, r4
 80143a0:	fb04 7211 	mls	r2, r4, r1, r7
 80143a4:	b90a      	cbnz	r2, 80143aa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80143a6:	3901      	subs	r1, #1
 80143a8:	4622      	mov	r2, r4
 80143aa:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80143ae:	6840      	ldr	r0, [r0, #4]
 80143b0:	900b      	str	r0, [sp, #44]	; 0x2c
 80143b2:	f8d0 a000 	ldr.w	sl, [r0]
 80143b6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80143b8:	9008      	str	r0, [sp, #32]
 80143ba:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80143be:	9818      	ldr	r0, [sp, #96]	; 0x60
 80143c0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80143c4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80143c8:	695b      	ldr	r3, [r3, #20]
 80143ca:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80143cc:	445b      	add	r3, fp
 80143ce:	eef0 6a42 	vmov.f32	s13, s4
 80143d2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80143d6:	ee21 3a23 	vmul.f32	s6, s2, s7
 80143da:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80143de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80143e2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80143e6:	9307      	str	r3, [sp, #28]
 80143e8:	ee17 7a90 	vmov	r7, s15
 80143ec:	ee73 7a42 	vsub.f32	s15, s6, s4
 80143f0:	eeb0 7a61 	vmov.f32	s14, s3
 80143f4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80143f8:	ee16 3a90 	vmov	r3, s13
 80143fc:	fb97 f7f4 	sdiv	r7, r7, r4
 8014400:	ee17 ca90 	vmov	ip, s15
 8014404:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8014408:	fb9c fcf4 	sdiv	ip, ip, r4
 801440c:	fb0c 3306 	mla	r3, ip, r6, r3
 8014410:	9302      	str	r3, [sp, #8]
 8014412:	ee17 3a10 	vmov	r3, s14
 8014416:	44b6      	add	lr, r6
 8014418:	fb04 e505 	mla	r5, r4, r5, lr
 801441c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8014420:	fb07 3706 	mla	r7, r7, r6, r3
 8014424:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8014428:	e9cd 4700 	strd	r4, r7, [sp]
 801442c:	2900      	cmp	r1, #0
 801442e:	bfcc      	ite	gt
 8014430:	46a1      	movgt	r9, r4
 8014432:	4691      	movle	r9, r2
 8014434:	eba9 0306 	sub.w	r3, r9, r6
 8014438:	f8da 4008 	ldr.w	r4, [sl, #8]
 801443c:	47a0      	blx	r4
 801443e:	b00d      	add	sp, #52	; 0x34
 8014440:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014444:	2500      	movs	r5, #0
 8014446:	462e      	mov	r6, r5
 8014448:	e799      	b.n	801437e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801444c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801444c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014450:	b0db      	sub	sp, #364	; 0x16c
 8014452:	461d      	mov	r5, r3
 8014454:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8014458:	930a      	str	r3, [sp, #40]	; 0x28
 801445a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801445e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014460:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8014464:	9310      	str	r3, [sp, #64]	; 0x40
 8014466:	6803      	ldr	r3, [r0, #0]
 8014468:	910f      	str	r1, [sp, #60]	; 0x3c
 801446a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801446c:	9009      	str	r0, [sp, #36]	; 0x24
 801446e:	4614      	mov	r4, r2
 8014470:	4629      	mov	r1, r5
 8014472:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8014476:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801447a:	47b8      	blx	r7
 801447c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801447e:	6058      	str	r0, [r3, #4]
 8014480:	2800      	cmp	r0, #0
 8014482:	f000 83a1 	beq.w	8014bc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014486:	682b      	ldr	r3, [r5, #0]
 8014488:	9314      	str	r3, [sp, #80]	; 0x50
 801448a:	686b      	ldr	r3, [r5, #4]
 801448c:	9315      	str	r3, [sp, #84]	; 0x54
 801448e:	4bc4      	ldr	r3, [pc, #784]	; (80147a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8014490:	ed94 7a02 	vldr	s14, [r4, #8]
 8014494:	7819      	ldrb	r1, [r3, #0]
 8014496:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801449a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801449e:	2900      	cmp	r1, #0
 80144a0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80144a4:	bf16      	itet	ne
 80144a6:	4619      	movne	r1, r3
 80144a8:	4611      	moveq	r1, r2
 80144aa:	4613      	movne	r3, r2
 80144ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80144b0:	9116      	str	r1, [sp, #88]	; 0x58
 80144b2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80144b6:	f240 8387 	bls.w	8014bc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80144ba:	ed94 7a07 	vldr	s14, [r4, #28]
 80144be:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80144c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80144c6:	f240 837f 	bls.w	8014bc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80144ca:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80144ce:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80144d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80144d6:	f240 8377 	bls.w	8014bc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80144da:	6822      	ldr	r2, [r4, #0]
 80144dc:	4bb1      	ldr	r3, [pc, #708]	; (80147a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80144de:	429a      	cmp	r2, r3
 80144e0:	f2c0 8372 	blt.w	8014bc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80144e4:	49b0      	ldr	r1, [pc, #704]	; (80147a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80144e6:	6963      	ldr	r3, [r4, #20]
 80144e8:	428a      	cmp	r2, r1
 80144ea:	f300 836d 	bgt.w	8014bc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80144ee:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80144f2:	48ae      	ldr	r0, [pc, #696]	; (80147ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80144f4:	33ff      	adds	r3, #255	; 0xff
 80144f6:	4283      	cmp	r3, r0
 80144f8:	f200 8366 	bhi.w	8014bc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80144fc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80144fe:	4dac      	ldr	r5, [pc, #688]	; (80147b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8014500:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8014504:	33ff      	adds	r3, #255	; 0xff
 8014506:	42ab      	cmp	r3, r5
 8014508:	f200 835e 	bhi.w	8014bc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801450c:	6862      	ldr	r2, [r4, #4]
 801450e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8014512:	33ff      	adds	r3, #255	; 0xff
 8014514:	4283      	cmp	r3, r0
 8014516:	f200 8357 	bhi.w	8014bc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801451a:	69a1      	ldr	r1, [r4, #24]
 801451c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8014520:	33ff      	adds	r3, #255	; 0xff
 8014522:	4283      	cmp	r3, r0
 8014524:	f200 8350 	bhi.w	8014bc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014528:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801452a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801452e:	30ff      	adds	r0, #255	; 0xff
 8014530:	42a8      	cmp	r0, r5
 8014532:	f200 8349 	bhi.w	8014bc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014536:	428a      	cmp	r2, r1
 8014538:	f280 8110 	bge.w	801475c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801453c:	429a      	cmp	r2, r3
 801453e:	f300 8119 	bgt.w	8014774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8014542:	4299      	cmp	r1, r3
 8014544:	f280 811d 	bge.w	8014782 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8014548:	2502      	movs	r5, #2
 801454a:	2701      	movs	r7, #1
 801454c:	46a9      	mov	r9, r5
 801454e:	46b8      	mov	r8, r7
 8014550:	f04f 0a00 	mov.w	sl, #0
 8014554:	4621      	mov	r1, r4
 8014556:	a849      	add	r0, sp, #292	; 0x124
 8014558:	f003 feec 	bl	8018334 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801455c:	4622      	mov	r2, r4
 801455e:	4653      	mov	r3, sl
 8014560:	a949      	add	r1, sp, #292	; 0x124
 8014562:	f8cd 9000 	str.w	r9, [sp]
 8014566:	a819      	add	r0, sp, #100	; 0x64
 8014568:	f004 f814 	bl	8018594 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801456c:	4622      	mov	r2, r4
 801456e:	4653      	mov	r3, sl
 8014570:	a949      	add	r1, sp, #292	; 0x124
 8014572:	f8cd 8000 	str.w	r8, [sp]
 8014576:	a829      	add	r0, sp, #164	; 0xa4
 8014578:	f004 f80c 	bl	8018594 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801457c:	4643      	mov	r3, r8
 801457e:	4622      	mov	r2, r4
 8014580:	a949      	add	r1, sp, #292	; 0x124
 8014582:	f8cd 9000 	str.w	r9, [sp]
 8014586:	a839      	add	r0, sp, #228	; 0xe4
 8014588:	f004 f804 	bl	8018594 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801458c:	42af      	cmp	r7, r5
 801458e:	bfb5      	itete	lt
 8014590:	2300      	movlt	r3, #0
 8014592:	2301      	movge	r3, #1
 8014594:	930e      	strlt	r3, [sp, #56]	; 0x38
 8014596:	930e      	strge	r3, [sp, #56]	; 0x38
 8014598:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801459a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801459e:	af12      	add	r7, sp, #72	; 0x48
 80145a0:	bfb9      	ittee	lt
 80145a2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80145a4:	ac19      	addlt	r4, sp, #100	; 0x64
 80145a6:	ad19      	addge	r5, sp, #100	; 0x64
 80145a8:	ac29      	addge	r4, sp, #164	; 0xa4
 80145aa:	e887 0003 	stmia.w	r7, {r0, r1}
 80145ae:	b928      	cbnz	r0, 80145bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80145b0:	4b80      	ldr	r3, [pc, #512]	; (80147b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80145b2:	6818      	ldr	r0, [r3, #0]
 80145b4:	6803      	ldr	r3, [r0, #0]
 80145b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80145b8:	4798      	blx	r3
 80145ba:	6038      	str	r0, [r7, #0]
 80145bc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80145be:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80145c2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80145c6:	930c      	str	r3, [sp, #48]	; 0x30
 80145c8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80145ca:	6963      	ldr	r3, [r4, #20]
 80145cc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80145ce:	440b      	add	r3, r1
 80145d0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80145d4:	4408      	add	r0, r1
 80145d6:	b200      	sxth	r0, r0
 80145d8:	4283      	cmp	r3, r0
 80145da:	900d      	str	r0, [sp, #52]	; 0x34
 80145dc:	f280 80dd 	bge.w	801479a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80145e0:	428b      	cmp	r3, r1
 80145e2:	da08      	bge.n	80145f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80145e4:	2a00      	cmp	r2, #0
 80145e6:	dd06      	ble.n	80145f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80145e8:	1acb      	subs	r3, r1, r3
 80145ea:	429a      	cmp	r2, r3
 80145ec:	f2c0 80e4 	blt.w	80147b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80145f0:	2b00      	cmp	r3, #0
 80145f2:	f300 80e2 	bgt.w	80147ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80145f6:	6967      	ldr	r7, [r4, #20]
 80145f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80145fa:	443b      	add	r3, r7
 80145fc:	461f      	mov	r7, r3
 80145fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014600:	1bdf      	subs	r7, r3, r7
 8014602:	4297      	cmp	r7, r2
 8014604:	bfa8      	it	ge
 8014606:	4617      	movge	r7, r2
 8014608:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801460c:	2f00      	cmp	r7, #0
 801460e:	f340 8166 	ble.w	80148de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8014612:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014614:	6829      	ldr	r1, [r5, #0]
 8014616:	f9b3 2000 	ldrsh.w	r2, [r3]
 801461a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801461e:	6820      	ldr	r0, [r4, #0]
 8014620:	4411      	add	r1, r2
 8014622:	4299      	cmp	r1, r3
 8014624:	dd1a      	ble.n	801465c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014626:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801462a:	440b      	add	r3, r1
 801462c:	4402      	add	r2, r0
 801462e:	b21b      	sxth	r3, r3
 8014630:	429a      	cmp	r2, r3
 8014632:	dc13      	bgt.n	801465c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8014634:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014636:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014638:	681b      	ldr	r3, [r3, #0]
 801463a:	9206      	str	r2, [sp, #24]
 801463c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801463e:	9205      	str	r2, [sp, #20]
 8014640:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014642:	9500      	str	r5, [sp, #0]
 8014644:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014648:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801464a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801464c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8014650:	a912      	add	r1, sp, #72	; 0x48
 8014652:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014656:	aa49      	add	r2, sp, #292	; 0x124
 8014658:	4623      	mov	r3, r4
 801465a:	47c8      	blx	r9
 801465c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8014660:	441a      	add	r2, r3
 8014662:	6963      	ldr	r3, [r4, #20]
 8014664:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014668:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801466c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8014670:	68a1      	ldr	r1, [r4, #8]
 8014672:	ed94 6a08 	vldr	s12, [r4, #32]
 8014676:	6022      	str	r2, [r4, #0]
 8014678:	3301      	adds	r3, #1
 801467a:	6163      	str	r3, [r4, #20]
 801467c:	69a3      	ldr	r3, [r4, #24]
 801467e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014682:	3b01      	subs	r3, #1
 8014684:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8014688:	61a3      	str	r3, [r4, #24]
 801468a:	6923      	ldr	r3, [r4, #16]
 801468c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8014690:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014694:	edd4 6a07 	vldr	s13, [r4, #28]
 8014698:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801469c:	440b      	add	r3, r1
 801469e:	68e1      	ldr	r1, [r4, #12]
 80146a0:	6123      	str	r3, [r4, #16]
 80146a2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80146a6:	428b      	cmp	r3, r1
 80146a8:	edc4 6a07 	vstr	s13, [r4, #28]
 80146ac:	db15      	blt.n	80146da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80146ae:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80146b2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80146b6:	3201      	adds	r2, #1
 80146b8:	edc4 6a07 	vstr	s13, [r4, #28]
 80146bc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80146c0:	6022      	str	r2, [r4, #0]
 80146c2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80146c6:	1a5b      	subs	r3, r3, r1
 80146c8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80146cc:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80146d0:	6123      	str	r3, [r4, #16]
 80146d2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80146d6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80146da:	e9d5 2300 	ldrd	r2, r3, [r5]
 80146de:	441a      	add	r2, r3
 80146e0:	696b      	ldr	r3, [r5, #20]
 80146e2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80146e6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80146ea:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80146ee:	68a9      	ldr	r1, [r5, #8]
 80146f0:	ed95 6a08 	vldr	s12, [r5, #32]
 80146f4:	602a      	str	r2, [r5, #0]
 80146f6:	3301      	adds	r3, #1
 80146f8:	616b      	str	r3, [r5, #20]
 80146fa:	69ab      	ldr	r3, [r5, #24]
 80146fc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014700:	3b01      	subs	r3, #1
 8014702:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014706:	61ab      	str	r3, [r5, #24]
 8014708:	692b      	ldr	r3, [r5, #16]
 801470a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801470e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014712:	edd5 6a07 	vldr	s13, [r5, #28]
 8014716:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801471a:	440b      	add	r3, r1
 801471c:	68e9      	ldr	r1, [r5, #12]
 801471e:	612b      	str	r3, [r5, #16]
 8014720:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014724:	428b      	cmp	r3, r1
 8014726:	edc5 6a07 	vstr	s13, [r5, #28]
 801472a:	db15      	blt.n	8014758 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801472c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8014730:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014734:	3201      	adds	r2, #1
 8014736:	edc5 6a07 	vstr	s13, [r5, #28]
 801473a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801473e:	602a      	str	r2, [r5, #0]
 8014740:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014744:	1a5b      	subs	r3, r3, r1
 8014746:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801474a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801474e:	612b      	str	r3, [r5, #16]
 8014750:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014754:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014758:	3f01      	subs	r7, #1
 801475a:	e757      	b.n	801460c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801475c:	4299      	cmp	r1, r3
 801475e:	dc13      	bgt.n	8014788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8014760:	429a      	cmp	r2, r3
 8014762:	da14      	bge.n	801478e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8014764:	2502      	movs	r5, #2
 8014766:	2703      	movs	r7, #3
 8014768:	46a9      	mov	r9, r5
 801476a:	f04f 0800 	mov.w	r8, #0
 801476e:	f04f 0a01 	mov.w	sl, #1
 8014772:	e6ef      	b.n	8014554 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014774:	2501      	movs	r5, #1
 8014776:	2700      	movs	r7, #0
 8014778:	46a9      	mov	r9, r5
 801477a:	46b8      	mov	r8, r7
 801477c:	f04f 0a02 	mov.w	sl, #2
 8014780:	e6e8      	b.n	8014554 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8014782:	2501      	movs	r5, #1
 8014784:	2702      	movs	r7, #2
 8014786:	e6e1      	b.n	801454c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8014788:	2500      	movs	r5, #0
 801478a:	2701      	movs	r7, #1
 801478c:	e7f4      	b.n	8014778 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801478e:	2702      	movs	r7, #2
 8014790:	2503      	movs	r5, #3
 8014792:	f04f 0900 	mov.w	r9, #0
 8014796:	46b8      	mov	r8, r7
 8014798:	e7e9      	b.n	801476e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801479a:	4613      	mov	r3, r2
 801479c:	e728      	b.n	80145f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801479e:	bf00      	nop
 80147a0:	20012dac 	.word	0x20012dac
 80147a4:	fffd8f01 	.word	0xfffd8f01
 80147a8:	00027100 	.word	0x00027100
 80147ac:	0004e1ff 	.word	0x0004e1ff
 80147b0:	0004e1fe 	.word	0x0004e1fe
 80147b4:	20012db4 	.word	0x20012db4
 80147b8:	4613      	mov	r3, r2
 80147ba:	992b      	ldr	r1, [sp, #172]	; 0xac
 80147bc:	9111      	str	r1, [sp, #68]	; 0x44
 80147be:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80147c2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80147c6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80147c8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80147cc:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80147d0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80147d4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80147d8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80147dc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80147e0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80147e4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80147e8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80147ec:	469e      	mov	lr, r3
 80147ee:	469c      	mov	ip, r3
 80147f0:	f04f 0900 	mov.w	r9, #0
 80147f4:	f1bc 0f00 	cmp.w	ip, #0
 80147f8:	d147      	bne.n	801488a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80147fa:	eb03 0c07 	add.w	ip, r3, r7
 80147fe:	1ad7      	subs	r7, r2, r3
 8014800:	f1b9 0f00 	cmp.w	r9, #0
 8014804:	d009      	beq.n	801481a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8014806:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801480a:	9029      	str	r0, [sp, #164]	; 0xa4
 801480c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8014810:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8014814:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8014818:	912d      	str	r1, [sp, #180]	; 0xb4
 801481a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801481c:	9111      	str	r1, [sp, #68]	; 0x44
 801481e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014822:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014826:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801482a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801482e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014832:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014836:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801483a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801483e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014842:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014846:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801484a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801484e:	f04f 0800 	mov.w	r8, #0
 8014852:	f1be 0f00 	cmp.w	lr, #0
 8014856:	d031      	beq.n	80148bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8014858:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801485a:	4431      	add	r1, r6
 801485c:	4549      	cmp	r1, r9
 801485e:	4450      	add	r0, sl
 8014860:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014864:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014868:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801486c:	db08      	blt.n	8014880 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801486e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014872:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014876:	ee37 7a06 	vadd.f32	s14, s14, s12
 801487a:	3001      	adds	r0, #1
 801487c:	eba1 0109 	sub.w	r1, r1, r9
 8014880:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014884:	f04f 0801 	mov.w	r8, #1
 8014888:	e7e3      	b.n	8014852 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801488a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801488c:	4431      	add	r1, r6
 801488e:	4541      	cmp	r1, r8
 8014890:	4450      	add	r0, sl
 8014892:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014896:	ee77 7a84 	vadd.f32	s15, s15, s8
 801489a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801489e:	db08      	blt.n	80148b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80148a0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80148a4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80148a8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80148ac:	3001      	adds	r0, #1
 80148ae:	eba1 0108 	sub.w	r1, r1, r8
 80148b2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80148b6:	f04f 0901 	mov.w	r9, #1
 80148ba:	e79b      	b.n	80147f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80148bc:	449c      	add	ip, r3
 80148be:	1aff      	subs	r7, r7, r3
 80148c0:	f1b8 0f00 	cmp.w	r8, #0
 80148c4:	d009      	beq.n	80148da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80148c6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80148ca:	9019      	str	r0, [sp, #100]	; 0x64
 80148cc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80148d0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80148d4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80148d8:	911d      	str	r1, [sp, #116]	; 0x74
 80148da:	1ad2      	subs	r2, r2, r3
 80148dc:	e68b      	b.n	80145f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80148de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80148e0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80148e2:	2b00      	cmp	r3, #0
 80148e4:	f000 80d1 	beq.w	8014a8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80148e8:	ad19      	add	r5, sp, #100	; 0x64
 80148ea:	ac39      	add	r4, sp, #228	; 0xe4
 80148ec:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80148ee:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80148f2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80148f6:	930c      	str	r3, [sp, #48]	; 0x30
 80148f8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80148fa:	6963      	ldr	r3, [r4, #20]
 80148fc:	440b      	add	r3, r1
 80148fe:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014902:	4408      	add	r0, r1
 8014904:	b200      	sxth	r0, r0
 8014906:	4283      	cmp	r3, r0
 8014908:	900d      	str	r0, [sp, #52]	; 0x34
 801490a:	f280 80c1 	bge.w	8014a90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801490e:	428b      	cmp	r3, r1
 8014910:	da08      	bge.n	8014924 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014912:	2a00      	cmp	r2, #0
 8014914:	dd06      	ble.n	8014924 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014916:	1acb      	subs	r3, r1, r3
 8014918:	429a      	cmp	r2, r3
 801491a:	f2c0 80bb 	blt.w	8014a94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801491e:	2b00      	cmp	r3, #0
 8014920:	f300 80b9 	bgt.w	8014a96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8014924:	6967      	ldr	r7, [r4, #20]
 8014926:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014928:	443b      	add	r3, r7
 801492a:	461f      	mov	r7, r3
 801492c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801492e:	1bdf      	subs	r7, r3, r7
 8014930:	4297      	cmp	r7, r2
 8014932:	bfa8      	it	ge
 8014934:	4617      	movge	r7, r2
 8014936:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801493a:	2f00      	cmp	r7, #0
 801493c:	f340 813c 	ble.w	8014bb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8014940:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014942:	6829      	ldr	r1, [r5, #0]
 8014944:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014948:	f9bb 3000 	ldrsh.w	r3, [fp]
 801494c:	6820      	ldr	r0, [r4, #0]
 801494e:	4411      	add	r1, r2
 8014950:	4299      	cmp	r1, r3
 8014952:	dd1a      	ble.n	801498a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014954:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014958:	440b      	add	r3, r1
 801495a:	4402      	add	r2, r0
 801495c:	b21b      	sxth	r3, r3
 801495e:	429a      	cmp	r2, r3
 8014960:	dc13      	bgt.n	801498a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014962:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014964:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014966:	681b      	ldr	r3, [r3, #0]
 8014968:	9206      	str	r2, [sp, #24]
 801496a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801496c:	9205      	str	r2, [sp, #20]
 801496e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014970:	9500      	str	r5, [sp, #0]
 8014972:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014976:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8014978:	9809      	ldr	r0, [sp, #36]	; 0x24
 801497a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801497e:	a912      	add	r1, sp, #72	; 0x48
 8014980:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014984:	aa49      	add	r2, sp, #292	; 0x124
 8014986:	4623      	mov	r3, r4
 8014988:	47c8      	blx	r9
 801498a:	e9d4 2300 	ldrd	r2, r3, [r4]
 801498e:	441a      	add	r2, r3
 8014990:	6963      	ldr	r3, [r4, #20]
 8014992:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014996:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801499a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801499e:	68a1      	ldr	r1, [r4, #8]
 80149a0:	ed94 6a08 	vldr	s12, [r4, #32]
 80149a4:	6022      	str	r2, [r4, #0]
 80149a6:	3301      	adds	r3, #1
 80149a8:	6163      	str	r3, [r4, #20]
 80149aa:	69a3      	ldr	r3, [r4, #24]
 80149ac:	ee37 7a27 	vadd.f32	s14, s14, s15
 80149b0:	3b01      	subs	r3, #1
 80149b2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80149b6:	61a3      	str	r3, [r4, #24]
 80149b8:	6923      	ldr	r3, [r4, #16]
 80149ba:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80149be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80149c2:	edd4 6a07 	vldr	s13, [r4, #28]
 80149c6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80149ca:	440b      	add	r3, r1
 80149cc:	68e1      	ldr	r1, [r4, #12]
 80149ce:	6123      	str	r3, [r4, #16]
 80149d0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80149d4:	428b      	cmp	r3, r1
 80149d6:	edc4 6a07 	vstr	s13, [r4, #28]
 80149da:	db15      	blt.n	8014a08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80149dc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80149e0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80149e4:	3201      	adds	r2, #1
 80149e6:	edc4 6a07 	vstr	s13, [r4, #28]
 80149ea:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80149ee:	6022      	str	r2, [r4, #0]
 80149f0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80149f4:	1a5b      	subs	r3, r3, r1
 80149f6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80149fa:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80149fe:	6123      	str	r3, [r4, #16]
 8014a00:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014a04:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014a08:	e9d5 2300 	ldrd	r2, r3, [r5]
 8014a0c:	441a      	add	r2, r3
 8014a0e:	696b      	ldr	r3, [r5, #20]
 8014a10:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014a14:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014a18:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8014a1c:	68a9      	ldr	r1, [r5, #8]
 8014a1e:	ed95 6a08 	vldr	s12, [r5, #32]
 8014a22:	602a      	str	r2, [r5, #0]
 8014a24:	3301      	adds	r3, #1
 8014a26:	616b      	str	r3, [r5, #20]
 8014a28:	69ab      	ldr	r3, [r5, #24]
 8014a2a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014a2e:	3b01      	subs	r3, #1
 8014a30:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014a34:	61ab      	str	r3, [r5, #24]
 8014a36:	692b      	ldr	r3, [r5, #16]
 8014a38:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014a3c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014a40:	edd5 6a07 	vldr	s13, [r5, #28]
 8014a44:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014a48:	440b      	add	r3, r1
 8014a4a:	68e9      	ldr	r1, [r5, #12]
 8014a4c:	612b      	str	r3, [r5, #16]
 8014a4e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014a52:	428b      	cmp	r3, r1
 8014a54:	edc5 6a07 	vstr	s13, [r5, #28]
 8014a58:	db15      	blt.n	8014a86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8014a5a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8014a5e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014a62:	3201      	adds	r2, #1
 8014a64:	edc5 6a07 	vstr	s13, [r5, #28]
 8014a68:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8014a6c:	602a      	str	r2, [r5, #0]
 8014a6e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014a72:	1a5b      	subs	r3, r3, r1
 8014a74:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014a78:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8014a7c:	612b      	str	r3, [r5, #16]
 8014a7e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014a82:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014a86:	3f01      	subs	r7, #1
 8014a88:	e757      	b.n	801493a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8014a8a:	ad39      	add	r5, sp, #228	; 0xe4
 8014a8c:	ac19      	add	r4, sp, #100	; 0x64
 8014a8e:	e72d      	b.n	80148ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8014a90:	4613      	mov	r3, r2
 8014a92:	e744      	b.n	801491e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8014a94:	4613      	mov	r3, r2
 8014a96:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8014a9a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8014a9c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8014aa0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8014aa4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8014aa8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8014aac:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8014ab0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8014ab4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8014ab8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8014aba:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8014abe:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8014ac2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8014ac6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8014aca:	960e      	str	r6, [sp, #56]	; 0x38
 8014acc:	469e      	mov	lr, r3
 8014ace:	461f      	mov	r7, r3
 8014ad0:	f04f 0900 	mov.w	r9, #0
 8014ad4:	2f00      	cmp	r7, #0
 8014ad6:	d146      	bne.n	8014b66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8014ad8:	449c      	add	ip, r3
 8014ada:	1ad7      	subs	r7, r2, r3
 8014adc:	f1b9 0f00 	cmp.w	r9, #0
 8014ae0:	d009      	beq.n	8014af6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8014ae2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8014ae6:	9039      	str	r0, [sp, #228]	; 0xe4
 8014ae8:	913d      	str	r1, [sp, #244]	; 0xf4
 8014aea:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8014aee:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8014af2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8014af6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8014af8:	910e      	str	r1, [sp, #56]	; 0x38
 8014afa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8014afe:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014b02:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014b06:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8014b0a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8014b0e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014b12:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014b16:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8014b1a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8014b1e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014b22:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014b26:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8014b2a:	f04f 0800 	mov.w	r8, #0
 8014b2e:	f1be 0f00 	cmp.w	lr, #0
 8014b32:	d030      	beq.n	8014b96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014b34:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014b36:	4431      	add	r1, r6
 8014b38:	4549      	cmp	r1, r9
 8014b3a:	4450      	add	r0, sl
 8014b3c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014b40:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014b44:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014b48:	db08      	blt.n	8014b5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8014b4a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8014b4e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014b52:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014b56:	3001      	adds	r0, #1
 8014b58:	eba1 0109 	sub.w	r1, r1, r9
 8014b5c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014b60:	f04f 0801 	mov.w	r8, #1
 8014b64:	e7e3      	b.n	8014b2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8014b66:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014b68:	4431      	add	r1, r6
 8014b6a:	4541      	cmp	r1, r8
 8014b6c:	4450      	add	r0, sl
 8014b6e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014b72:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014b76:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8014b7a:	db08      	blt.n	8014b8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8014b7c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014b80:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014b84:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014b88:	3001      	adds	r0, #1
 8014b8a:	eba1 0108 	sub.w	r1, r1, r8
 8014b8e:	3f01      	subs	r7, #1
 8014b90:	f04f 0901 	mov.w	r9, #1
 8014b94:	e79e      	b.n	8014ad4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8014b96:	449c      	add	ip, r3
 8014b98:	1aff      	subs	r7, r7, r3
 8014b9a:	f1b8 0f00 	cmp.w	r8, #0
 8014b9e:	d009      	beq.n	8014bb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8014ba0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8014ba4:	9019      	str	r0, [sp, #100]	; 0x64
 8014ba6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8014baa:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8014bae:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8014bb2:	911d      	str	r1, [sp, #116]	; 0x74
 8014bb4:	1ad2      	subs	r2, r2, r3
 8014bb6:	e6b5      	b.n	8014924 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014bb8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014bba:	681b      	ldr	r3, [r3, #0]
 8014bbc:	b923      	cbnz	r3, 8014bc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8014bbe:	4b04      	ldr	r3, [pc, #16]	; (8014bd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8014bc0:	6818      	ldr	r0, [r3, #0]
 8014bc2:	6803      	ldr	r3, [r0, #0]
 8014bc4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014bc6:	4798      	blx	r3
 8014bc8:	b05b      	add	sp, #364	; 0x16c
 8014bca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014bce:	bf00      	nop
 8014bd0:	20012db4 	.word	0x20012db4

08014bd4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8014bd4:	b570      	push	{r4, r5, r6, lr}
 8014bd6:	4604      	mov	r4, r0
 8014bd8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8014bdc:	9805      	ldr	r0, [sp, #20]
 8014bde:	6061      	str	r1, [r4, #4]
 8014be0:	2500      	movs	r5, #0
 8014be2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8014be6:	8263      	strh	r3, [r4, #18]
 8014be8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014bec:	8025      	strh	r5, [r4, #0]
 8014bee:	7221      	strb	r1, [r4, #8]
 8014bf0:	7266      	strb	r6, [r4, #9]
 8014bf2:	60e0      	str	r0, [r4, #12]
 8014bf4:	8222      	strh	r2, [r4, #16]
 8014bf6:	82a3      	strh	r3, [r4, #20]
 8014bf8:	82e5      	strh	r5, [r4, #22]
 8014bfa:	8325      	strh	r5, [r4, #24]
 8014bfc:	8365      	strh	r5, [r4, #26]
 8014bfe:	83a5      	strh	r5, [r4, #28]
 8014c00:	83e5      	strh	r5, [r4, #30]
 8014c02:	8425      	strh	r5, [r4, #32]
 8014c04:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8014c08:	b32e      	cbz	r6, 8014c56 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014c0a:	6803      	ldr	r3, [r0, #0]
 8014c0c:	695b      	ldr	r3, [r3, #20]
 8014c0e:	4798      	blx	r3
 8014c10:	4606      	mov	r6, r0
 8014c12:	b300      	cbz	r0, 8014c56 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014c14:	68e0      	ldr	r0, [r4, #12]
 8014c16:	6803      	ldr	r3, [r0, #0]
 8014c18:	4631      	mov	r1, r6
 8014c1a:	68db      	ldr	r3, [r3, #12]
 8014c1c:	4798      	blx	r3
 8014c1e:	4605      	mov	r5, r0
 8014c20:	b1c8      	cbz	r0, 8014c56 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014c22:	7b43      	ldrb	r3, [r0, #13]
 8014c24:	7a82      	ldrb	r2, [r0, #10]
 8014c26:	005b      	lsls	r3, r3, #1
 8014c28:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014c2c:	4313      	orrs	r3, r2
 8014c2e:	8423      	strh	r3, [r4, #32]
 8014c30:	7a63      	ldrb	r3, [r4, #9]
 8014c32:	2b06      	cmp	r3, #6
 8014c34:	d10f      	bne.n	8014c56 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014c36:	68e0      	ldr	r0, [r4, #12]
 8014c38:	6803      	ldr	r3, [r0, #0]
 8014c3a:	462a      	mov	r2, r5
 8014c3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014c3e:	4631      	mov	r1, r6
 8014c40:	4798      	blx	r3
 8014c42:	7b6b      	ldrb	r3, [r5, #13]
 8014c44:	005b      	lsls	r3, r3, #1
 8014c46:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014c4a:	7aab      	ldrb	r3, [r5, #10]
 8014c4c:	4313      	orrs	r3, r2
 8014c4e:	4418      	add	r0, r3
 8014c50:	8c23      	ldrh	r3, [r4, #32]
 8014c52:	4418      	add	r0, r3
 8014c54:	8420      	strh	r0, [r4, #32]
 8014c56:	4620      	mov	r0, r4
 8014c58:	bd70      	pop	{r4, r5, r6, pc}

08014c5a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8014c5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c5e:	2400      	movs	r4, #0
 8014c60:	b085      	sub	sp, #20
 8014c62:	4681      	mov	r9, r0
 8014c64:	4688      	mov	r8, r1
 8014c66:	4692      	mov	sl, r2
 8014c68:	469b      	mov	fp, r3
 8014c6a:	4627      	mov	r7, r4
 8014c6c:	4625      	mov	r5, r4
 8014c6e:	4626      	mov	r6, r4
 8014c70:	4554      	cmp	r4, sl
 8014c72:	da2a      	bge.n	8014cca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014c74:	2300      	movs	r3, #0
 8014c76:	9303      	str	r3, [sp, #12]
 8014c78:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014c7c:	429d      	cmp	r5, r3
 8014c7e:	d004      	beq.n	8014c8a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8014c80:	f242 030b 	movw	r3, #8203	; 0x200b
 8014c84:	429d      	cmp	r5, r3
 8014c86:	bf18      	it	ne
 8014c88:	462f      	movne	r7, r5
 8014c8a:	ab03      	add	r3, sp, #12
 8014c8c:	4642      	mov	r2, r8
 8014c8e:	4659      	mov	r1, fp
 8014c90:	4648      	mov	r0, r9
 8014c92:	f003 f965 	bl	8017f60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014c96:	4605      	mov	r5, r0
 8014c98:	b1b8      	cbz	r0, 8014cca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014c9a:	280a      	cmp	r0, #10
 8014c9c:	d015      	beq.n	8014cca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014c9e:	9a03      	ldr	r2, [sp, #12]
 8014ca0:	b18a      	cbz	r2, 8014cc6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8014ca2:	7b50      	ldrb	r0, [r2, #13]
 8014ca4:	7a93      	ldrb	r3, [r2, #10]
 8014ca6:	8895      	ldrh	r5, [r2, #4]
 8014ca8:	0040      	lsls	r0, r0, #1
 8014caa:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8014cae:	4303      	orrs	r3, r0
 8014cb0:	9301      	str	r3, [sp, #4]
 8014cb2:	f8d8 3000 	ldr.w	r3, [r8]
 8014cb6:	4639      	mov	r1, r7
 8014cb8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014cba:	4640      	mov	r0, r8
 8014cbc:	4798      	blx	r3
 8014cbe:	9b01      	ldr	r3, [sp, #4]
 8014cc0:	4418      	add	r0, r3
 8014cc2:	4406      	add	r6, r0
 8014cc4:	b2b6      	uxth	r6, r6
 8014cc6:	3401      	adds	r4, #1
 8014cc8:	e7d2      	b.n	8014c70 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8014cca:	4630      	mov	r0, r6
 8014ccc:	b005      	add	sp, #20
 8014cce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014cd2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8014cd2:	2a02      	cmp	r2, #2
 8014cd4:	b530      	push	{r4, r5, lr}
 8014cd6:	d011      	beq.n	8014cfc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8014cd8:	2a03      	cmp	r2, #3
 8014cda:	d01c      	beq.n	8014d16 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8014cdc:	2a01      	cmp	r2, #1
 8014cde:	d10c      	bne.n	8014cfa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014ce0:	888b      	ldrh	r3, [r1, #4]
 8014ce2:	8801      	ldrh	r1, [r0, #0]
 8014ce4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014ce8:	8844      	ldrh	r4, [r0, #2]
 8014cea:	8004      	strh	r4, [r0, #0]
 8014cec:	1a5b      	subs	r3, r3, r1
 8014cee:	1a9b      	subs	r3, r3, r2
 8014cf0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014cf4:	8043      	strh	r3, [r0, #2]
 8014cf6:	8081      	strh	r1, [r0, #4]
 8014cf8:	80c2      	strh	r2, [r0, #6]
 8014cfa:	bd30      	pop	{r4, r5, pc}
 8014cfc:	88cb      	ldrh	r3, [r1, #6]
 8014cfe:	8842      	ldrh	r2, [r0, #2]
 8014d00:	1a9b      	subs	r3, r3, r2
 8014d02:	88c2      	ldrh	r2, [r0, #6]
 8014d04:	1a9b      	subs	r3, r3, r2
 8014d06:	888a      	ldrh	r2, [r1, #4]
 8014d08:	8801      	ldrh	r1, [r0, #0]
 8014d0a:	8043      	strh	r3, [r0, #2]
 8014d0c:	1a52      	subs	r2, r2, r1
 8014d0e:	8881      	ldrh	r1, [r0, #4]
 8014d10:	1a52      	subs	r2, r2, r1
 8014d12:	8002      	strh	r2, [r0, #0]
 8014d14:	e7f1      	b.n	8014cfa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014d16:	88cb      	ldrh	r3, [r1, #6]
 8014d18:	8841      	ldrh	r1, [r0, #2]
 8014d1a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8014d1e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014d22:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014d26:	8045      	strh	r5, [r0, #2]
 8014d28:	1a5b      	subs	r3, r3, r1
 8014d2a:	1a9b      	subs	r3, r3, r2
 8014d2c:	8003      	strh	r3, [r0, #0]
 8014d2e:	8082      	strh	r2, [r0, #4]
 8014d30:	80c4      	strh	r4, [r0, #6]
 8014d32:	e7e2      	b.n	8014cfa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014d34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014d34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d38:	b09f      	sub	sp, #124	; 0x7c
 8014d3a:	9116      	str	r1, [sp, #88]	; 0x58
 8014d3c:	9317      	str	r3, [sp, #92]	; 0x5c
 8014d3e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014d40:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014d42:	8809      	ldrh	r1, [r1, #0]
 8014d44:	889b      	ldrh	r3, [r3, #4]
 8014d46:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8014d4a:	9212      	str	r2, [sp, #72]	; 0x48
 8014d4c:	440b      	add	r3, r1
 8014d4e:	b21b      	sxth	r3, r3
 8014d50:	9310      	str	r3, [sp, #64]	; 0x40
 8014d52:	f8d8 3000 	ldr.w	r3, [r8]
 8014d56:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8014d5a:	7b19      	ldrb	r1, [r3, #12]
 8014d5c:	7adb      	ldrb	r3, [r3, #11]
 8014d5e:	9011      	str	r0, [sp, #68]	; 0x44
 8014d60:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014d64:	9114      	str	r1, [sp, #80]	; 0x50
 8014d66:	9315      	str	r3, [sp, #84]	; 0x54
 8014d68:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8014d6c:	2a00      	cmp	r2, #0
 8014d6e:	d06a      	beq.n	8014e46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014d70:	f898 3010 	ldrb.w	r3, [r8, #16]
 8014d74:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014d76:	2b06      	cmp	r3, #6
 8014d78:	bf14      	ite	ne
 8014d7a:	2301      	movne	r3, #1
 8014d7c:	2302      	moveq	r3, #2
 8014d7e:	4413      	add	r3, r2
 8014d80:	f04f 0900 	mov.w	r9, #0
 8014d84:	930f      	str	r3, [sp, #60]	; 0x3c
 8014d86:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8014d8a:	464c      	mov	r4, r9
 8014d8c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8014d90:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8014d94:	4293      	cmp	r3, r2
 8014d96:	f280 808f 	bge.w	8014eb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014d9a:	2300      	movs	r3, #0
 8014d9c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8014da0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8014da4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014da8:	429c      	cmp	r4, r3
 8014daa:	d006      	beq.n	8014dba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8014dac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014dae:	f242 020b 	movw	r2, #8203	; 0x200b
 8014db2:	4294      	cmp	r4, r2
 8014db4:	bf18      	it	ne
 8014db6:	4623      	movne	r3, r4
 8014db8:	930d      	str	r3, [sp, #52]	; 0x34
 8014dba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014dbc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8014dbe:	f8d8 2000 	ldr.w	r2, [r8]
 8014dc2:	428b      	cmp	r3, r1
 8014dc4:	db41      	blt.n	8014e4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8014dc6:	6813      	ldr	r3, [r2, #0]
 8014dc8:	4610      	mov	r0, r2
 8014dca:	695b      	ldr	r3, [r3, #20]
 8014dcc:	4798      	blx	r3
 8014dce:	4604      	mov	r4, r0
 8014dd0:	f8d8 0000 	ldr.w	r0, [r8]
 8014dd4:	6803      	ldr	r3, [r0, #0]
 8014dd6:	aa1d      	add	r2, sp, #116	; 0x74
 8014dd8:	689d      	ldr	r5, [r3, #8]
 8014dda:	4621      	mov	r1, r4
 8014ddc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014de0:	47a8      	blx	r5
 8014de2:	901c      	str	r0, [sp, #112]	; 0x70
 8014de4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014de8:	429c      	cmp	r4, r3
 8014dea:	f000 80eb 	beq.w	8014fc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014dee:	f242 030b 	movw	r3, #8203	; 0x200b
 8014df2:	429c      	cmp	r4, r3
 8014df4:	f000 80e6 	beq.w	8014fc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014df8:	2c00      	cmp	r4, #0
 8014dfa:	f000 80f8 	beq.w	8014fee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014dfe:	2c0a      	cmp	r4, #10
 8014e00:	d060      	beq.n	8014ec4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014e02:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014e04:	b36a      	cbz	r2, 8014e62 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8014e06:	8894      	ldrh	r4, [r2, #4]
 8014e08:	f1bb 0f00 	cmp.w	fp, #0
 8014e0c:	d03b      	beq.n	8014e86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8014e0e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8014e12:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014e16:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8014e1a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8014e1e:	f1bb 0f01 	cmp.w	fp, #1
 8014e22:	ea49 0903 	orr.w	r9, r9, r3
 8014e26:	d134      	bne.n	8014e92 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8014e28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014e2a:	eba6 0609 	sub.w	r6, r6, r9
 8014e2e:	2b00      	cmp	r3, #0
 8014e30:	d14f      	bne.n	8014ed2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014e32:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014e34:	eb09 0306 	add.w	r3, r9, r6
 8014e38:	4413      	add	r3, r2
 8014e3a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014e3c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014e40:	4293      	cmp	r3, r2
 8014e42:	da51      	bge.n	8014ee8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014e44:	e038      	b.n	8014eb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014e46:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014e48:	e79a      	b.n	8014d80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8014e4a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014e4e:	9301      	str	r3, [sp, #4]
 8014e50:	ab1d      	add	r3, sp, #116	; 0x74
 8014e52:	9300      	str	r3, [sp, #0]
 8014e54:	4659      	mov	r1, fp
 8014e56:	ab1c      	add	r3, sp, #112	; 0x70
 8014e58:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014e5a:	f003 f8ca 	bl	8017ff2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8014e5e:	4604      	mov	r4, r0
 8014e60:	e7c0      	b.n	8014de4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8014e62:	f8d8 0000 	ldr.w	r0, [r8]
 8014e66:	6803      	ldr	r3, [r0, #0]
 8014e68:	691b      	ldr	r3, [r3, #16]
 8014e6a:	4798      	blx	r3
 8014e6c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014e70:	4298      	cmp	r0, r3
 8014e72:	f000 80a7 	beq.w	8014fc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014e76:	f242 030b 	movw	r3, #8203	; 0x200b
 8014e7a:	4298      	cmp	r0, r3
 8014e7c:	f000 80a2 	beq.w	8014fc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014e80:	f1bb 0f00 	cmp.w	fp, #0
 8014e84:	d100      	bne.n	8014e88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8014e86:	444e      	add	r6, r9
 8014e88:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014e8a:	2a00      	cmp	r2, #0
 8014e8c:	d1bf      	bne.n	8014e0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8014e8e:	4691      	mov	r9, r2
 8014e90:	e098      	b.n	8014fc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014e92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014e94:	2b00      	cmp	r3, #0
 8014e96:	f000 80ac 	beq.w	8014ff2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8014e9a:	f1bb 0f00 	cmp.w	fp, #0
 8014e9e:	d118      	bne.n	8014ed2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014ea0:	f8d8 0000 	ldr.w	r0, [r8]
 8014ea4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014ea6:	6803      	ldr	r3, [r0, #0]
 8014ea8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014eaa:	4798      	blx	r3
 8014eac:	4406      	add	r6, r0
 8014eae:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014eb0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014eb2:	1af3      	subs	r3, r6, r3
 8014eb4:	4293      	cmp	r3, r2
 8014eb6:	dd17      	ble.n	8014ee8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014eb8:	2c00      	cmp	r4, #0
 8014eba:	f000 8098 	beq.w	8014fee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014ebe:	2c0a      	cmp	r4, #10
 8014ec0:	f040 8086 	bne.w	8014fd0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8014ec4:	240a      	movs	r4, #10
 8014ec6:	fab4 f084 	clz	r0, r4
 8014eca:	0940      	lsrs	r0, r0, #5
 8014ecc:	b01f      	add	sp, #124	; 0x7c
 8014ece:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ed2:	f8d8 0000 	ldr.w	r0, [r8]
 8014ed6:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014ed8:	6803      	ldr	r3, [r0, #0]
 8014eda:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014edc:	4798      	blx	r3
 8014ede:	f1bb 0f01 	cmp.w	fp, #1
 8014ee2:	eba6 0600 	sub.w	r6, r6, r0
 8014ee6:	d0a4      	beq.n	8014e32 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8014ee8:	981c      	ldr	r0, [sp, #112]	; 0x70
 8014eea:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014eec:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8014ef0:	f9b3 7000 	ldrsh.w	r7, [r3]
 8014ef4:	7b43      	ldrb	r3, [r0, #13]
 8014ef6:	015b      	lsls	r3, r3, #5
 8014ef8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014efc:	7983      	ldrb	r3, [r0, #6]
 8014efe:	4431      	add	r1, r6
 8014f00:	4313      	orrs	r3, r2
 8014f02:	440b      	add	r3, r1
 8014f04:	42bb      	cmp	r3, r7
 8014f06:	db5d      	blt.n	8014fc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014f08:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f0a:	4299      	cmp	r1, r3
 8014f0c:	da5a      	bge.n	8014fc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014f0e:	f8d8 0000 	ldr.w	r0, [r8]
 8014f12:	6803      	ldr	r3, [r0, #0]
 8014f14:	42b7      	cmp	r7, r6
 8014f16:	bfc8      	it	gt
 8014f18:	1bbf      	subgt	r7, r7, r6
 8014f1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014f1c:	bfcc      	ite	gt
 8014f1e:	b2bf      	uxthgt	r7, r7
 8014f20:	2700      	movle	r7, #0
 8014f22:	4798      	blx	r3
 8014f24:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014f26:	7b5a      	ldrb	r2, [r3, #13]
 8014f28:	00d1      	lsls	r1, r2, #3
 8014f2a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8014f2e:	7a19      	ldrb	r1, [r3, #8]
 8014f30:	4329      	orrs	r1, r5
 8014f32:	0655      	lsls	r5, r2, #25
 8014f34:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8014f36:	bf44      	itt	mi
 8014f38:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8014f3c:	b209      	sxthmi	r1, r1
 8014f3e:	1945      	adds	r5, r0, r5
 8014f40:	1a6d      	subs	r5, r5, r1
 8014f42:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014f44:	b2ad      	uxth	r5, r5
 8014f46:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8014f4a:	fa0f fa85 	sxth.w	sl, r5
 8014f4e:	4551      	cmp	r1, sl
 8014f50:	dd3c      	ble.n	8014fcc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8014f52:	0112      	lsls	r2, r2, #4
 8014f54:	79d8      	ldrb	r0, [r3, #7]
 8014f56:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8014f5a:	4302      	orrs	r2, r0
 8014f5c:	4492      	add	sl, r2
 8014f5e:	4551      	cmp	r1, sl
 8014f60:	dc30      	bgt.n	8014fc4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014f62:	1b4d      	subs	r5, r1, r5
 8014f64:	b22d      	sxth	r5, r5
 8014f66:	468a      	mov	sl, r1
 8014f68:	9319      	str	r3, [sp, #100]	; 0x64
 8014f6a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014f6c:	f8d8 0000 	ldr.w	r0, [r8]
 8014f70:	681a      	ldr	r2, [r3, #0]
 8014f72:	6801      	ldr	r1, [r0, #0]
 8014f74:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8014f76:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8014f78:	9313      	str	r3, [sp, #76]	; 0x4c
 8014f7a:	9218      	str	r2, [sp, #96]	; 0x60
 8014f7c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8014f7e:	4788      	blx	r1
 8014f80:	f898 1006 	ldrb.w	r1, [r8, #6]
 8014f84:	910b      	str	r1, [sp, #44]	; 0x2c
 8014f86:	f898 100e 	ldrb.w	r1, [r8, #14]
 8014f8a:	910a      	str	r1, [sp, #40]	; 0x28
 8014f8c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8014f90:	9109      	str	r1, [sp, #36]	; 0x24
 8014f92:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8014f96:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014f98:	9305      	str	r3, [sp, #20]
 8014f9a:	b2ad      	uxth	r5, r5
 8014f9c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8014fa0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8014fa4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014fa6:	9304      	str	r3, [sp, #16]
 8014fa8:	4437      	add	r7, r6
 8014faa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8014fac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014fae:	9206      	str	r2, [sp, #24]
 8014fb0:	b23f      	sxth	r7, r7
 8014fb2:	f8cd a004 	str.w	sl, [sp, #4]
 8014fb6:	9700      	str	r7, [sp, #0]
 8014fb8:	681a      	ldr	r2, [r3, #0]
 8014fba:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014fbc:	685b      	ldr	r3, [r3, #4]
 8014fbe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014fc0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014fc2:	47a8      	blx	r5
 8014fc4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014fc6:	3301      	adds	r3, #1
 8014fc8:	930e      	str	r3, [sp, #56]	; 0x38
 8014fca:	e6e1      	b.n	8014d90 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8014fcc:	2500      	movs	r5, #0
 8014fce:	e7cb      	b.n	8014f68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8014fd0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014fd2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014fd4:	3501      	adds	r5, #1
 8014fd6:	429d      	cmp	r5, r3
 8014fd8:	f6bf af75 	bge.w	8014ec6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8014fdc:	4659      	mov	r1, fp
 8014fde:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014fe0:	f7f3 ff32 	bl	8008e48 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014fe4:	4604      	mov	r4, r0
 8014fe6:	b110      	cbz	r0, 8014fee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014fe8:	280a      	cmp	r0, #10
 8014fea:	d1f2      	bne.n	8014fd2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8014fec:	e76a      	b.n	8014ec4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014fee:	2400      	movs	r4, #0
 8014ff0:	e769      	b.n	8014ec6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8014ff2:	f1bb 0f00 	cmp.w	fp, #0
 8014ff6:	f43f af5a 	beq.w	8014eae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8014ffa:	e775      	b.n	8014ee8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08014ffc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8014ffc:	b530      	push	{r4, r5, lr}
 8014ffe:	8ac4      	ldrh	r4, [r0, #22]
 8015000:	8b45      	ldrh	r5, [r0, #26]
 8015002:	8343      	strh	r3, [r0, #26]
 8015004:	442c      	add	r4, r5
 8015006:	1ae4      	subs	r4, r4, r3
 8015008:	82c4      	strh	r4, [r0, #22]
 801500a:	8b83      	ldrh	r3, [r0, #28]
 801500c:	8b04      	ldrh	r4, [r0, #24]
 801500e:	4422      	add	r2, r4
 8015010:	440c      	add	r4, r1
 8015012:	1a59      	subs	r1, r3, r1
 8015014:	83c2      	strh	r2, [r0, #30]
 8015016:	8304      	strh	r4, [r0, #24]
 8015018:	8381      	strh	r1, [r0, #28]
 801501a:	bd30      	pop	{r4, r5, pc}

0801501c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801501c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015020:	4604      	mov	r4, r0
 8015022:	8a47      	ldrh	r7, [r0, #18]
 8015024:	68c0      	ldr	r0, [r0, #12]
 8015026:	6803      	ldr	r3, [r0, #0]
 8015028:	b085      	sub	sp, #20
 801502a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801502c:	4798      	blx	r3
 801502e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8015032:	7a63      	ldrb	r3, [r4, #9]
 8015034:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8015038:	42b7      	cmp	r7, r6
 801503a:	f103 33ff 	add.w	r3, r3, #4294967295
 801503e:	bfac      	ite	ge
 8015040:	f04f 0900 	movge.w	r9, #0
 8015044:	f04f 0901 	movlt.w	r9, #1
 8015048:	2b05      	cmp	r3, #5
 801504a:	d804      	bhi.n	8015056 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801504c:	e8df f003 	tbb	[pc, r3]
 8015050:	470e0854 	.word	0x470e0854
 8015054:	4c4c      	.short	0x4c4c
 8015056:	2500      	movs	r5, #0
 8015058:	46a9      	mov	r9, r5
 801505a:	462e      	mov	r6, r5
 801505c:	462f      	mov	r7, r5
 801505e:	e00d      	b.n	801507c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015060:	42b7      	cmp	r7, r6
 8015062:	bfb4      	ite	lt
 8015064:	2600      	movlt	r6, #0
 8015066:	2601      	movge	r6, #1
 8015068:	2500      	movs	r5, #0
 801506a:	e7f7      	b.n	801505c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801506c:	42b7      	cmp	r7, r6
 801506e:	464d      	mov	r5, r9
 8015070:	f04f 0900 	mov.w	r9, #0
 8015074:	bfb4      	ite	lt
 8015076:	2600      	movlt	r6, #0
 8015078:	2601      	movge	r6, #1
 801507a:	464f      	mov	r7, r9
 801507c:	f04f 0800 	mov.w	r8, #0
 8015080:	f8a4 8016 	strh.w	r8, [r4, #22]
 8015084:	f8a4 8018 	strh.w	r8, [r4, #24]
 8015088:	f8cd 8004 	str.w	r8, [sp, #4]
 801508c:	2300      	movs	r3, #0
 801508e:	9303      	str	r3, [sp, #12]
 8015090:	8823      	ldrh	r3, [r4, #0]
 8015092:	2b20      	cmp	r3, #32
 8015094:	d034      	beq.n	8015100 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8015096:	f242 010b 	movw	r1, #8203	; 0x200b
 801509a:	1a5a      	subs	r2, r3, r1
 801509c:	f1d2 0a00 	rsbs	sl, r2, #0
 80150a0:	eb4a 0a02 	adc.w	sl, sl, r2
 80150a4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80150a8:	4293      	cmp	r3, r2
 80150aa:	d009      	beq.n	80150c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80150ac:	428b      	cmp	r3, r1
 80150ae:	9a01      	ldr	r2, [sp, #4]
 80150b0:	bf18      	it	ne
 80150b2:	461a      	movne	r2, r3
 80150b4:	9201      	str	r2, [sp, #4]
 80150b6:	bf0c      	ite	eq
 80150b8:	f04f 0a01 	moveq.w	sl, #1
 80150bc:	f04f 0a00 	movne.w	sl, #0
 80150c0:	ab03      	add	r3, sp, #12
 80150c2:	68e2      	ldr	r2, [r4, #12]
 80150c4:	7a21      	ldrb	r1, [r4, #8]
 80150c6:	6860      	ldr	r0, [r4, #4]
 80150c8:	f002 ff4a 	bl	8017f60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80150cc:	8020      	strh	r0, [r4, #0]
 80150ce:	b9d8      	cbnz	r0, 8015108 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80150d0:	8ba2      	ldrh	r2, [r4, #28]
 80150d2:	2300      	movs	r3, #0
 80150d4:	4611      	mov	r1, r2
 80150d6:	4620      	mov	r0, r4
 80150d8:	f7ff ff90 	bl	8014ffc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80150dc:	e06e      	b.n	80151bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80150de:	2500      	movs	r5, #0
 80150e0:	46a9      	mov	r9, r5
 80150e2:	462e      	mov	r6, r5
 80150e4:	2701      	movs	r7, #1
 80150e6:	e7c9      	b.n	801507c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80150e8:	42b7      	cmp	r7, r6
 80150ea:	f04f 0500 	mov.w	r5, #0
 80150ee:	bfb4      	ite	lt
 80150f0:	2700      	movlt	r7, #0
 80150f2:	2701      	movge	r7, #1
 80150f4:	462e      	mov	r6, r5
 80150f6:	e7c1      	b.n	801507c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80150f8:	2500      	movs	r5, #0
 80150fa:	46a9      	mov	r9, r5
 80150fc:	2601      	movs	r6, #1
 80150fe:	e7ad      	b.n	801505c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015100:	9301      	str	r3, [sp, #4]
 8015102:	f04f 0a01 	mov.w	sl, #1
 8015106:	e7db      	b.n	80150c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015108:	8b63      	ldrh	r3, [r4, #26]
 801510a:	280a      	cmp	r0, #10
 801510c:	f103 0301 	add.w	r3, r3, #1
 8015110:	8363      	strh	r3, [r4, #26]
 8015112:	d0dd      	beq.n	80150d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8015114:	9a03      	ldr	r2, [sp, #12]
 8015116:	bb62      	cbnz	r2, 8015172 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8015118:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801511c:	4298      	cmp	r0, r3
 801511e:	d003      	beq.n	8015128 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015120:	f242 030b 	movw	r3, #8203	; 0x200b
 8015124:	4298      	cmp	r0, r3
 8015126:	d1b1      	bne.n	801508c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015128:	8823      	ldrh	r3, [r4, #0]
 801512a:	8ba1      	ldrh	r1, [r4, #28]
 801512c:	2b20      	cmp	r3, #32
 801512e:	d003      	beq.n	8015138 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8015130:	f242 000b 	movw	r0, #8203	; 0x200b
 8015134:	4283      	cmp	r3, r0
 8015136:	d131      	bne.n	801519c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8015138:	f1ba 0f00 	cmp.w	sl, #0
 801513c:	bf0a      	itet	eq
 801513e:	4688      	moveq	r8, r1
 8015140:	4650      	movne	r0, sl
 8015142:	2001      	moveq	r0, #1
 8015144:	440a      	add	r2, r1
 8015146:	8b23      	ldrh	r3, [r4, #24]
 8015148:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801514c:	b292      	uxth	r2, r2
 801514e:	83a2      	strh	r2, [r4, #28]
 8015150:	4413      	add	r3, r2
 8015152:	f1b9 0f00 	cmp.w	r9, #0
 8015156:	d102      	bne.n	801515e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8015158:	2d00      	cmp	r5, #0
 801515a:	d042      	beq.n	80151e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801515c:	b300      	cbz	r0, 80151a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801515e:	8c21      	ldrh	r1, [r4, #32]
 8015160:	4419      	add	r1, r3
 8015162:	458c      	cmp	ip, r1
 8015164:	da37      	bge.n	80151d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015166:	8ae1      	ldrh	r1, [r4, #22]
 8015168:	2900      	cmp	r1, #0
 801516a:	d034      	beq.n	80151d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801516c:	4563      	cmp	r3, ip
 801516e:	dd8d      	ble.n	801508c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015170:	e01d      	b.n	80151ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8015172:	8893      	ldrh	r3, [r2, #4]
 8015174:	8023      	strh	r3, [r4, #0]
 8015176:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801517a:	9901      	ldr	r1, [sp, #4]
 801517c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8015180:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8015184:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8015188:	ea4b 0b00 	orr.w	fp, fp, r0
 801518c:	68e0      	ldr	r0, [r4, #12]
 801518e:	6803      	ldr	r3, [r0, #0]
 8015190:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015192:	4798      	blx	r3
 8015194:	eb0b 0200 	add.w	r2, fp, r0
 8015198:	b292      	uxth	r2, r2
 801519a:	e7c5      	b.n	8015128 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801519c:	2000      	movs	r0, #0
 801519e:	e7d1      	b.n	8015144 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80151a0:	4563      	cmp	r3, ip
 80151a2:	f77f af73 	ble.w	801508c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80151a6:	8ae3      	ldrh	r3, [r4, #22]
 80151a8:	2b00      	cmp	r3, #0
 80151aa:	f43f af6f 	beq.w	801508c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80151ae:	2301      	movs	r3, #1
 80151b0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80151b4:	8c22      	ldrh	r2, [r4, #32]
 80151b6:	8be3      	ldrh	r3, [r4, #30]
 80151b8:	4413      	add	r3, r2
 80151ba:	83e3      	strh	r3, [r4, #30]
 80151bc:	68e0      	ldr	r0, [r4, #12]
 80151be:	6803      	ldr	r3, [r0, #0]
 80151c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80151c2:	4798      	blx	r3
 80151c4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80151c8:	4418      	add	r0, r3
 80151ca:	8a63      	ldrh	r3, [r4, #18]
 80151cc:	1a18      	subs	r0, r3, r0
 80151ce:	8260      	strh	r0, [r4, #18]
 80151d0:	b005      	add	sp, #20
 80151d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80151d6:	2300      	movs	r3, #0
 80151d8:	4611      	mov	r1, r2
 80151da:	4620      	mov	r0, r4
 80151dc:	f7ff ff0e 	bl	8014ffc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80151e0:	e754      	b.n	801508c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80151e2:	4563      	cmp	r3, ip
 80151e4:	dd14      	ble.n	8015210 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80151e6:	b117      	cbz	r7, 80151ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80151e8:	2301      	movs	r3, #1
 80151ea:	460a      	mov	r2, r1
 80151ec:	e772      	b.n	80150d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80151ee:	2e00      	cmp	r6, #0
 80151f0:	f43f af4c 	beq.w	801508c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80151f4:	2800      	cmp	r0, #0
 80151f6:	f47f af49 	bne.w	801508c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80151fa:	f1ba 0f00 	cmp.w	sl, #0
 80151fe:	d002      	beq.n	8015206 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8015200:	2301      	movs	r3, #1
 8015202:	4642      	mov	r2, r8
 8015204:	e767      	b.n	80150d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8015206:	8ae3      	ldrh	r3, [r4, #22]
 8015208:	2b00      	cmp	r3, #0
 801520a:	f43f af3f 	beq.w	801508c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801520e:	e7d5      	b.n	80151bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015210:	2800      	cmp	r0, #0
 8015212:	f47f af3b 	bne.w	801508c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015216:	f1ba 0f00 	cmp.w	sl, #0
 801521a:	f43f af37 	beq.w	801508c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801521e:	2301      	movs	r3, #1
 8015220:	4642      	mov	r2, r8
 8015222:	e7da      	b.n	80151da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08015224 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8015224:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015226:	4605      	mov	r5, r0
 8015228:	b08f      	sub	sp, #60	; 0x3c
 801522a:	4617      	mov	r7, r2
 801522c:	461c      	mov	r4, r3
 801522e:	460e      	mov	r6, r1
 8015230:	b1d1      	cbz	r1, 8015268 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8015232:	681b      	ldr	r3, [r3, #0]
 8015234:	4620      	mov	r0, r4
 8015236:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015238:	4798      	blx	r3
 801523a:	4240      	negs	r0, r0
 801523c:	b200      	sxth	r0, r0
 801523e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8015242:	9603      	str	r6, [sp, #12]
 8015244:	9700      	str	r7, [sp, #0]
 8015246:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801524a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801524e:	4629      	mov	r1, r5
 8015250:	a805      	add	r0, sp, #20
 8015252:	f7ff fcbf 	bl	8014bd4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015256:	2401      	movs	r4, #1
 8015258:	a805      	add	r0, sp, #20
 801525a:	f7ff fedf 	bl	801501c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801525e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8015262:	b163      	cbz	r3, 801527e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8015264:	3401      	adds	r4, #1
 8015266:	e7f7      	b.n	8015258 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015268:	f002 ff48 	bl	80180fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801526c:	2401      	movs	r4, #1
 801526e:	280a      	cmp	r0, #10
 8015270:	4628      	mov	r0, r5
 8015272:	bf08      	it	eq
 8015274:	3401      	addeq	r4, #1
 8015276:	f002 ff41 	bl	80180fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801527a:	2800      	cmp	r0, #0
 801527c:	d1f7      	bne.n	801526e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801527e:	b2a0      	uxth	r0, r4
 8015280:	b00f      	add	sp, #60	; 0x3c
 8015282:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015284 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8015284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015288:	b0e3      	sub	sp, #396	; 0x18c
 801528a:	461c      	mov	r4, r3
 801528c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801528e:	4683      	mov	fp, r0
 8015290:	4688      	mov	r8, r1
 8015292:	2b00      	cmp	r3, #0
 8015294:	f000 8112 	beq.w	80154bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015298:	6823      	ldr	r3, [r4, #0]
 801529a:	2b00      	cmp	r3, #0
 801529c:	f000 810e 	beq.w	80154bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80152a0:	7ba3      	ldrb	r3, [r4, #14]
 80152a2:	2b00      	cmp	r3, #0
 80152a4:	f000 810a 	beq.w	80154bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80152a8:	6810      	ldr	r0, [r2, #0]
 80152aa:	6851      	ldr	r1, [r2, #4]
 80152ac:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80152b0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80152b4:	ad0a      	add	r5, sp, #40	; 0x28
 80152b6:	462b      	mov	r3, r5
 80152b8:	c303      	stmia	r3!, {r0, r1}
 80152ba:	2100      	movs	r1, #0
 80152bc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80152c0:	910c      	str	r1, [sp, #48]	; 0x30
 80152c2:	79a2      	ldrb	r2, [r4, #6]
 80152c4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80152c8:	a90c      	add	r1, sp, #48	; 0x30
 80152ca:	4628      	mov	r0, r5
 80152cc:	f7ff fd01 	bl	8014cd2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80152d0:	a90c      	add	r1, sp, #48	; 0x30
 80152d2:	4608      	mov	r0, r1
 80152d4:	79a2      	ldrb	r2, [r4, #6]
 80152d6:	f7ff fcfc 	bl	8014cd2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80152da:	a817      	add	r0, sp, #92	; 0x5c
 80152dc:	f002 fae2 	bl	80178a4 <_ZN8touchgfx12TextProviderC1Ev>
 80152e0:	6820      	ldr	r0, [r4, #0]
 80152e2:	6803      	ldr	r3, [r0, #0]
 80152e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80152e6:	4798      	blx	r3
 80152e8:	4606      	mov	r6, r0
 80152ea:	6820      	ldr	r0, [r4, #0]
 80152ec:	6803      	ldr	r3, [r0, #0]
 80152ee:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80152f0:	4798      	blx	r3
 80152f2:	4633      	mov	r3, r6
 80152f4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80152f6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80152f8:	9000      	str	r0, [sp, #0]
 80152fa:	a817      	add	r0, sp, #92	; 0x5c
 80152fc:	f002 fb2d 	bl	801795a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015300:	6820      	ldr	r0, [r4, #0]
 8015302:	f894 a004 	ldrb.w	sl, [r4, #4]
 8015306:	6803      	ldr	r3, [r0, #0]
 8015308:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801530a:	4798      	blx	r3
 801530c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8015310:	6823      	ldr	r3, [r4, #0]
 8015312:	4607      	mov	r7, r0
 8015314:	4406      	add	r6, r0
 8015316:	a830      	add	r0, sp, #192	; 0xc0
 8015318:	f893 9009 	ldrb.w	r9, [r3, #9]
 801531c:	f002 fac2 	bl	80178a4 <_ZN8touchgfx12TextProviderC1Ev>
 8015320:	7c23      	ldrb	r3, [r4, #16]
 8015322:	b17b      	cbz	r3, 8015344 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8015324:	6820      	ldr	r0, [r4, #0]
 8015326:	6803      	ldr	r3, [r0, #0]
 8015328:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801532a:	4798      	blx	r3
 801532c:	9009      	str	r0, [sp, #36]	; 0x24
 801532e:	6820      	ldr	r0, [r4, #0]
 8015330:	6802      	ldr	r2, [r0, #0]
 8015332:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8015334:	4790      	blx	r2
 8015336:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015338:	9000      	str	r0, [sp, #0]
 801533a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801533c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801533e:	a830      	add	r0, sp, #192	; 0xc0
 8015340:	f002 fb0b 	bl	801795a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015344:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8015348:	7be2      	ldrb	r2, [r4, #15]
 801534a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801534e:	1a8a      	subs	r2, r1, r2
 8015350:	7c21      	ldrb	r1, [r4, #16]
 8015352:	9103      	str	r1, [sp, #12]
 8015354:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8015358:	9102      	str	r1, [sp, #8]
 801535a:	6821      	ldr	r1, [r4, #0]
 801535c:	9101      	str	r1, [sp, #4]
 801535e:	7961      	ldrb	r1, [r4, #5]
 8015360:	9100      	str	r1, [sp, #0]
 8015362:	b292      	uxth	r2, r2
 8015364:	a930      	add	r1, sp, #192	; 0xc0
 8015366:	a80e      	add	r0, sp, #56	; 0x38
 8015368:	f7ff fc34 	bl	8014bd4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801536c:	2e00      	cmp	r6, #0
 801536e:	dc5b      	bgt.n	8015428 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8015370:	af17      	add	r7, sp, #92	; 0x5c
 8015372:	f04f 0900 	mov.w	r9, #0
 8015376:	7c23      	ldrb	r3, [r4, #16]
 8015378:	2b00      	cmp	r3, #0
 801537a:	f000 80b1 	beq.w	80154e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801537e:	a80e      	add	r0, sp, #56	; 0x38
 8015380:	f7ff fe4c 	bl	801501c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015384:	f1ba 0f00 	cmp.w	sl, #0
 8015388:	f000 80a5 	beq.w	80154d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801538c:	7c23      	ldrb	r3, [r4, #16]
 801538e:	9309      	str	r3, [sp, #36]	; 0x24
 8015390:	2264      	movs	r2, #100	; 0x64
 8015392:	4639      	mov	r1, r7
 8015394:	a849      	add	r0, sp, #292	; 0x124
 8015396:	f015 fe7c 	bl	802b092 <memcpy>
 801539a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801539c:	2b00      	cmp	r3, #0
 801539e:	f000 80a7 	beq.w	80154f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80153a2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80153a6:	7922      	ldrb	r2, [r4, #4]
 80153a8:	2a01      	cmp	r2, #1
 80153aa:	f040 808a 	bne.w	80154c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80153ae:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80153b2:	1ac0      	subs	r0, r0, r3
 80153b4:	2302      	movs	r3, #2
 80153b6:	fb90 f0f3 	sdiv	r0, r0, r3
 80153ba:	b200      	sxth	r0, r0
 80153bc:	7c23      	ldrb	r3, [r4, #16]
 80153be:	2b00      	cmp	r3, #0
 80153c0:	f000 808b 	beq.w	80154da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80153c4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80153c8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80153cc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80153d0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80153d4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80153d8:	4410      	add	r0, r2
 80153da:	b200      	sxth	r0, r0
 80153dc:	9000      	str	r0, [sp, #0]
 80153de:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80153e2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80153e6:	4642      	mov	r2, r8
 80153e8:	2100      	movs	r1, #0
 80153ea:	4658      	mov	r0, fp
 80153ec:	f7ff fca2 	bl	8014d34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80153f0:	2800      	cmp	r0, #0
 80153f2:	d163      	bne.n	80154bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80153f4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80153f8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80153fc:	b2b2      	uxth	r2, r6
 80153fe:	4413      	add	r3, r2
 8015400:	1a8a      	subs	r2, r1, r2
 8015402:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8015406:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801540a:	b21b      	sxth	r3, r3
 801540c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8015410:	2a00      	cmp	r2, #0
 8015412:	d153      	bne.n	80154bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015414:	6822      	ldr	r2, [r4, #0]
 8015416:	8869      	ldrh	r1, [r5, #2]
 8015418:	7a12      	ldrb	r2, [r2, #8]
 801541a:	1a9b      	subs	r3, r3, r2
 801541c:	88ea      	ldrh	r2, [r5, #6]
 801541e:	440a      	add	r2, r1
 8015420:	b212      	sxth	r2, r2
 8015422:	4293      	cmp	r3, r2
 8015424:	dda7      	ble.n	8015376 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8015426:	e049      	b.n	80154bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015428:	7c23      	ldrb	r3, [r4, #16]
 801542a:	444f      	add	r7, r9
 801542c:	b1c3      	cbz	r3, 8015460 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801542e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8015432:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015436:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801543a:	443b      	add	r3, r7
 801543c:	4293      	cmp	r3, r2
 801543e:	da97      	bge.n	8015370 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015440:	a80e      	add	r0, sp, #56	; 0x38
 8015442:	f7ff fdeb 	bl	801501c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015446:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801544a:	3b01      	subs	r3, #1
 801544c:	b29b      	uxth	r3, r3
 801544e:	454b      	cmp	r3, r9
 8015450:	9309      	str	r3, [sp, #36]	; 0x24
 8015452:	d021      	beq.n	8015498 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8015454:	7961      	ldrb	r1, [r4, #5]
 8015456:	a817      	add	r0, sp, #92	; 0x5c
 8015458:	f7f3 fcf6 	bl	8008e48 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801545c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801545e:	e7f4      	b.n	801544a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8015460:	fa1f f986 	uxth.w	r9, r6
 8015464:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8015468:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801546c:	443b      	add	r3, r7
 801546e:	4293      	cmp	r3, r2
 8015470:	f6bf af7e 	bge.w	8015370 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8015474:	a817      	add	r0, sp, #92	; 0x5c
 8015476:	f002 fe41 	bl	80180fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801547a:	b1f8      	cbz	r0, 80154bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801547c:	280a      	cmp	r0, #10
 801547e:	d1f1      	bne.n	8015464 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015480:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8015484:	444b      	add	r3, r9
 8015486:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801548a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801548e:	eba3 0309 	sub.w	r3, r3, r9
 8015492:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015496:	e7e5      	b.n	8015464 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8015498:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801549c:	b2b3      	uxth	r3, r6
 801549e:	441a      	add	r2, r3
 80154a0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80154a4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80154a8:	1ad3      	subs	r3, r2, r3
 80154aa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80154ae:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80154b2:	b11b      	cbz	r3, 80154bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80154b4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80154b8:	2b00      	cmp	r3, #0
 80154ba:	d0ba      	beq.n	8015432 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80154bc:	b063      	add	sp, #396	; 0x18c
 80154be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80154c2:	2a02      	cmp	r2, #2
 80154c4:	d105      	bne.n	80154d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80154c6:	7be2      	ldrb	r2, [r4, #15]
 80154c8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80154cc:	1a80      	subs	r0, r0, r2
 80154ce:	1ac0      	subs	r0, r0, r3
 80154d0:	e773      	b.n	80153ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80154d2:	2000      	movs	r0, #0
 80154d4:	e772      	b.n	80153bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80154d6:	7be0      	ldrb	r0, [r4, #15]
 80154d8:	e770      	b.n	80153bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80154da:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80154de:	e773      	b.n	80153c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80154e0:	f1ba 0f00 	cmp.w	sl, #0
 80154e4:	d0f7      	beq.n	80154d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80154e6:	2264      	movs	r2, #100	; 0x64
 80154e8:	4639      	mov	r1, r7
 80154ea:	a849      	add	r0, sp, #292	; 0x124
 80154ec:	f015 fdd1 	bl	802b092 <memcpy>
 80154f0:	2300      	movs	r3, #0
 80154f2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80154f6:	6821      	ldr	r1, [r4, #0]
 80154f8:	a849      	add	r0, sp, #292	; 0x124
 80154fa:	f7ff fbae 	bl	8014c5a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80154fe:	b203      	sxth	r3, r0
 8015500:	e751      	b.n	80153a6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08015502 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8015502:	2b03      	cmp	r3, #3
 8015504:	d818      	bhi.n	8015538 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8015506:	e8df f003 	tbb	[pc, r3]
 801550a:	0602      	.short	0x0602
 801550c:	130d      	.short	0x130d
 801550e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015512:	1850      	adds	r0, r2, r1
 8015514:	4770      	bx	lr
 8015516:	8803      	ldrh	r3, [r0, #0]
 8015518:	8880      	ldrh	r0, [r0, #4]
 801551a:	4418      	add	r0, r3
 801551c:	b200      	sxth	r0, r0
 801551e:	1a80      	subs	r0, r0, r2
 8015520:	3801      	subs	r0, #1
 8015522:	4770      	bx	lr
 8015524:	8803      	ldrh	r3, [r0, #0]
 8015526:	8880      	ldrh	r0, [r0, #4]
 8015528:	4418      	add	r0, r3
 801552a:	b200      	sxth	r0, r0
 801552c:	1a40      	subs	r0, r0, r1
 801552e:	e7f7      	b.n	8015520 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8015530:	f9b0 0000 	ldrsh.w	r0, [r0]
 8015534:	4410      	add	r0, r2
 8015536:	4770      	bx	lr
 8015538:	2000      	movs	r0, #0
 801553a:	4770      	bx	lr

0801553c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801553c:	2b03      	cmp	r3, #3
 801553e:	d817      	bhi.n	8015570 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8015540:	e8df f003 	tbb	[pc, r3]
 8015544:	10090602 	.word	0x10090602
 8015548:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801554c:	1850      	adds	r0, r2, r1
 801554e:	4770      	bx	lr
 8015550:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015554:	e7fa      	b.n	801554c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8015556:	8843      	ldrh	r3, [r0, #2]
 8015558:	88c0      	ldrh	r0, [r0, #6]
 801555a:	4418      	add	r0, r3
 801555c:	b200      	sxth	r0, r0
 801555e:	1a80      	subs	r0, r0, r2
 8015560:	3801      	subs	r0, #1
 8015562:	4770      	bx	lr
 8015564:	8843      	ldrh	r3, [r0, #2]
 8015566:	88c0      	ldrh	r0, [r0, #6]
 8015568:	4418      	add	r0, r3
 801556a:	b200      	sxth	r0, r0
 801556c:	1a40      	subs	r0, r0, r1
 801556e:	e7f7      	b.n	8015560 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8015570:	2000      	movs	r0, #0
 8015572:	4770      	bx	lr

08015574 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8015574:	4b01      	ldr	r3, [pc, #4]	; (801557c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8015576:	2200      	movs	r2, #0
 8015578:	601a      	str	r2, [r3, #0]
 801557a:	4770      	bx	lr
 801557c:	20012dc4 	.word	0x20012dc4

08015580 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8015580:	4603      	mov	r3, r0
 8015582:	b1c8      	cbz	r0, 80155b8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8015584:	0c02      	lsrs	r2, r0, #16
 8015586:	0412      	lsls	r2, r2, #16
 8015588:	b9a2      	cbnz	r2, 80155b4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801558a:	0403      	lsls	r3, r0, #16
 801558c:	2010      	movs	r0, #16
 801558e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8015592:	bf04      	itt	eq
 8015594:	021b      	lsleq	r3, r3, #8
 8015596:	3008      	addeq	r0, #8
 8015598:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801559c:	bf04      	itt	eq
 801559e:	011b      	lsleq	r3, r3, #4
 80155a0:	3004      	addeq	r0, #4
 80155a2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80155a6:	bf04      	itt	eq
 80155a8:	009b      	lsleq	r3, r3, #2
 80155aa:	3002      	addeq	r0, #2
 80155ac:	2b00      	cmp	r3, #0
 80155ae:	db04      	blt.n	80155ba <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80155b0:	3001      	adds	r0, #1
 80155b2:	4770      	bx	lr
 80155b4:	2000      	movs	r0, #0
 80155b6:	e7ea      	b.n	801558e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80155b8:	2020      	movs	r0, #32
 80155ba:	4770      	bx	lr

080155bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80155bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155c0:	b087      	sub	sp, #28
 80155c2:	460d      	mov	r5, r1
 80155c4:	4616      	mov	r6, r2
 80155c6:	4698      	mov	r8, r3
 80155c8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80155cc:	4601      	mov	r1, r0
 80155ce:	b120      	cbz	r0, 80155da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80155d0:	b11a      	cbz	r2, 80155da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80155d2:	2d1f      	cmp	r5, #31
 80155d4:	d801      	bhi.n	80155da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80155d6:	2b1f      	cmp	r3, #31
 80155d8:	d904      	bls.n	80155e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80155da:	2000      	movs	r0, #0
 80155dc:	6038      	str	r0, [r7, #0]
 80155de:	b007      	add	sp, #28
 80155e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80155e4:	b97d      	cbnz	r5, 8015606 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80155e6:	b143      	cbz	r3, 80155fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80155e8:	4602      	mov	r2, r0
 80155ea:	e9cd 4700 	strd	r4, r7, [sp]
 80155ee:	462b      	mov	r3, r5
 80155f0:	4641      	mov	r1, r8
 80155f2:	4630      	mov	r0, r6
 80155f4:	f7ff ffe2 	bl	80155bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80155f8:	e7f1      	b.n	80155de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80155fa:	f04f 33ff 	mov.w	r3, #4294967295
 80155fe:	603b      	str	r3, [r7, #0]
 8015600:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8015604:	e7eb      	b.n	80155de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015606:	fa32 fa05 	lsrs.w	sl, r2, r5
 801560a:	d106      	bne.n	801561a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801560c:	4346      	muls	r6, r0
 801560e:	fbb6 f0f4 	udiv	r0, r6, r4
 8015612:	fb04 6610 	mls	r6, r4, r0, r6
 8015616:	603e      	str	r6, [r7, #0]
 8015618:	e7e1      	b.n	80155de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801561a:	2201      	movs	r2, #1
 801561c:	40aa      	lsls	r2, r5
 801561e:	3a01      	subs	r2, #1
 8015620:	4016      	ands	r6, r2
 8015622:	fa00 fb05 	lsl.w	fp, r0, r5
 8015626:	4630      	mov	r0, r6
 8015628:	fbbb f9f4 	udiv	r9, fp, r4
 801562c:	fb0a f309 	mul.w	r3, sl, r9
 8015630:	9303      	str	r3, [sp, #12]
 8015632:	f7ff ffa5 	bl	8015580 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015636:	462b      	mov	r3, r5
 8015638:	460a      	mov	r2, r1
 801563a:	e9cd 4700 	strd	r4, r7, [sp]
 801563e:	4601      	mov	r1, r0
 8015640:	4630      	mov	r0, r6
 8015642:	f7ff ffbb 	bl	80155bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015646:	fb04 b919 	mls	r9, r4, r9, fp
 801564a:	4606      	mov	r6, r0
 801564c:	4648      	mov	r0, r9
 801564e:	eb05 0108 	add.w	r1, r5, r8
 8015652:	f7ff ff95 	bl	8015580 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015656:	ab05      	add	r3, sp, #20
 8015658:	e9cd 4300 	strd	r4, r3, [sp]
 801565c:	464a      	mov	r2, r9
 801565e:	4603      	mov	r3, r0
 8015660:	4650      	mov	r0, sl
 8015662:	f7ff ffab 	bl	80155bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015666:	6839      	ldr	r1, [r7, #0]
 8015668:	9a05      	ldr	r2, [sp, #20]
 801566a:	9b03      	ldr	r3, [sp, #12]
 801566c:	4411      	add	r1, r2
 801566e:	fbb1 f2f4 	udiv	r2, r1, r4
 8015672:	18d3      	adds	r3, r2, r3
 8015674:	441e      	add	r6, r3
 8015676:	fb04 1412 	mls	r4, r4, r2, r1
 801567a:	4430      	add	r0, r6
 801567c:	603c      	str	r4, [r7, #0]
 801567e:	e7ae      	b.n	80155de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08015680 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8015680:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015684:	b085      	sub	sp, #20
 8015686:	f1b0 0900 	subs.w	r9, r0, #0
 801568a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801568c:	461d      	mov	r5, r3
 801568e:	bfbf      	itttt	lt
 8015690:	6823      	ldrlt	r3, [r4, #0]
 8015692:	425b      	neglt	r3, r3
 8015694:	f1c9 0900 	rsblt	r9, r9, #0
 8015698:	6023      	strlt	r3, [r4, #0]
 801569a:	bfb4      	ite	lt
 801569c:	f04f 36ff 	movlt.w	r6, #4294967295
 80156a0:	2601      	movge	r6, #1
 80156a2:	2a00      	cmp	r2, #0
 80156a4:	4617      	mov	r7, r2
 80156a6:	da04      	bge.n	80156b2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80156a8:	6823      	ldr	r3, [r4, #0]
 80156aa:	425b      	negs	r3, r3
 80156ac:	4257      	negs	r7, r2
 80156ae:	4276      	negs	r6, r6
 80156b0:	6023      	str	r3, [r4, #0]
 80156b2:	2d00      	cmp	r5, #0
 80156b4:	4638      	mov	r0, r7
 80156b6:	bfba      	itte	lt
 80156b8:	426d      	neglt	r5, r5
 80156ba:	f04f 38ff 	movlt.w	r8, #4294967295
 80156be:	f04f 0801 	movge.w	r8, #1
 80156c2:	f7ff ff5d 	bl	8015580 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80156c6:	ab03      	add	r3, sp, #12
 80156c8:	e9cd 5300 	strd	r5, r3, [sp]
 80156cc:	463a      	mov	r2, r7
 80156ce:	4603      	mov	r3, r0
 80156d0:	4648      	mov	r0, r9
 80156d2:	f7ff ff73 	bl	80155bc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80156d6:	6823      	ldr	r3, [r4, #0]
 80156d8:	9a03      	ldr	r2, [sp, #12]
 80156da:	4546      	cmp	r6, r8
 80156dc:	441a      	add	r2, r3
 80156de:	fb92 f3f5 	sdiv	r3, r2, r5
 80156e2:	4418      	add	r0, r3
 80156e4:	bf18      	it	ne
 80156e6:	4240      	negne	r0, r0
 80156e8:	fb05 2313 	mls	r3, r5, r3, r2
 80156ec:	1c72      	adds	r2, r6, #1
 80156ee:	6023      	str	r3, [r4, #0]
 80156f0:	d105      	bne.n	80156fe <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80156f2:	2b00      	cmp	r3, #0
 80156f4:	f1c3 0200 	rsb	r2, r3, #0
 80156f8:	db0b      	blt.n	8015712 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80156fa:	6022      	str	r2, [r4, #0]
 80156fc:	e006      	b.n	801570c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80156fe:	2e01      	cmp	r6, #1
 8015700:	d104      	bne.n	801570c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015702:	2b00      	cmp	r3, #0
 8015704:	da02      	bge.n	801570c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015706:	442b      	add	r3, r5
 8015708:	3801      	subs	r0, #1
 801570a:	6023      	str	r3, [r4, #0]
 801570c:	b005      	add	sp, #20
 801570e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015712:	3801      	subs	r0, #1
 8015714:	1b52      	subs	r2, r2, r5
 8015716:	e7f0      	b.n	80156fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08015718 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8015718:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801571c:	4c1c      	ldr	r4, [pc, #112]	; (8015790 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801571e:	6807      	ldr	r7, [r0, #0]
 8015720:	69a3      	ldr	r3, [r4, #24]
 8015722:	4605      	mov	r5, r0
 8015724:	b92b      	cbnz	r3, 8015732 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8015726:	6840      	ldr	r0, [r0, #4]
 8015728:	e9c5 7000 	strd	r7, r0, [r5]
 801572c:	b004      	add	sp, #16
 801572e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015732:	68a2      	ldr	r2, [r4, #8]
 8015734:	6820      	ldr	r0, [r4, #0]
 8015736:	ae04      	add	r6, sp, #16
 8015738:	f04f 0802 	mov.w	r8, #2
 801573c:	fb93 f1f8 	sdiv	r1, r3, r8
 8015740:	440a      	add	r2, r1
 8015742:	f846 2d04 	str.w	r2, [r6, #-4]!
 8015746:	69e1      	ldr	r1, [r4, #28]
 8015748:	9600      	str	r6, [sp, #0]
 801574a:	463a      	mov	r2, r7
 801574c:	f7ff ff98 	bl	8015680 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015750:	69a3      	ldr	r3, [r4, #24]
 8015752:	686a      	ldr	r2, [r5, #4]
 8015754:	6a21      	ldr	r1, [r4, #32]
 8015756:	9600      	str	r6, [sp, #0]
 8015758:	4607      	mov	r7, r0
 801575a:	6860      	ldr	r0, [r4, #4]
 801575c:	f7ff ff90 	bl	8015680 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015760:	6962      	ldr	r2, [r4, #20]
 8015762:	69a3      	ldr	r3, [r4, #24]
 8015764:	fb93 f8f8 	sdiv	r8, r3, r8
 8015768:	4442      	add	r2, r8
 801576a:	9203      	str	r2, [sp, #12]
 801576c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801576e:	682a      	ldr	r2, [r5, #0]
 8015770:	9600      	str	r6, [sp, #0]
 8015772:	4407      	add	r7, r0
 8015774:	68e0      	ldr	r0, [r4, #12]
 8015776:	f7ff ff83 	bl	8015680 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801577a:	9600      	str	r6, [sp, #0]
 801577c:	4680      	mov	r8, r0
 801577e:	69a3      	ldr	r3, [r4, #24]
 8015780:	686a      	ldr	r2, [r5, #4]
 8015782:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8015784:	6920      	ldr	r0, [r4, #16]
 8015786:	f7ff ff7b 	bl	8015680 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801578a:	4440      	add	r0, r8
 801578c:	e7cc      	b.n	8015728 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801578e:	bf00      	nop
 8015790:	20012dc8 	.word	0x20012dc8

08015794 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8015794:	4b07      	ldr	r3, [pc, #28]	; (80157b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8015796:	781b      	ldrb	r3, [r3, #0]
 8015798:	2b01      	cmp	r3, #1
 801579a:	d109      	bne.n	80157b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801579c:	f9b1 3000 	ldrsh.w	r3, [r1]
 80157a0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80157a4:	8003      	strh	r3, [r0, #0]
 80157a6:	4b04      	ldr	r3, [pc, #16]	; (80157b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80157a8:	881b      	ldrh	r3, [r3, #0]
 80157aa:	3b01      	subs	r3, #1
 80157ac:	1a9b      	subs	r3, r3, r2
 80157ae:	800b      	strh	r3, [r1, #0]
 80157b0:	4770      	bx	lr
 80157b2:	bf00      	nop
 80157b4:	20012dac 	.word	0x20012dac
 80157b8:	20012da8 	.word	0x20012da8

080157bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80157bc:	b510      	push	{r4, lr}
 80157be:	4b07      	ldr	r3, [pc, #28]	; (80157dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80157c0:	781b      	ldrb	r3, [r3, #0]
 80157c2:	2b01      	cmp	r3, #1
 80157c4:	d108      	bne.n	80157d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80157c6:	4b06      	ldr	r3, [pc, #24]	; (80157e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80157c8:	880c      	ldrh	r4, [r1, #0]
 80157ca:	881b      	ldrh	r3, [r3, #0]
 80157cc:	f9b0 2000 	ldrsh.w	r2, [r0]
 80157d0:	3b01      	subs	r3, #1
 80157d2:	1b1b      	subs	r3, r3, r4
 80157d4:	8003      	strh	r3, [r0, #0]
 80157d6:	800a      	strh	r2, [r1, #0]
 80157d8:	bd10      	pop	{r4, pc}
 80157da:	bf00      	nop
 80157dc:	20012dac 	.word	0x20012dac
 80157e0:	20012da8 	.word	0x20012da8

080157e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80157e4:	b510      	push	{r4, lr}
 80157e6:	4b0a      	ldr	r3, [pc, #40]	; (8015810 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80157e8:	781b      	ldrb	r3, [r3, #0]
 80157ea:	2b01      	cmp	r3, #1
 80157ec:	d10e      	bne.n	801580c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80157ee:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80157f2:	8843      	ldrh	r3, [r0, #2]
 80157f4:	f9b0 4000 	ldrsh.w	r4, [r0]
 80157f8:	8044      	strh	r4, [r0, #2]
 80157fa:	18ca      	adds	r2, r1, r3
 80157fc:	4b05      	ldr	r3, [pc, #20]	; (8015814 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80157fe:	881b      	ldrh	r3, [r3, #0]
 8015800:	1a9b      	subs	r3, r3, r2
 8015802:	8003      	strh	r3, [r0, #0]
 8015804:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015808:	80c3      	strh	r3, [r0, #6]
 801580a:	8081      	strh	r1, [r0, #4]
 801580c:	bd10      	pop	{r4, pc}
 801580e:	bf00      	nop
 8015810:	20012dac 	.word	0x20012dac
 8015814:	20012da8 	.word	0x20012da8

08015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8015818:	4b08      	ldr	r3, [pc, #32]	; (801583c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801581a:	781b      	ldrb	r3, [r3, #0]
 801581c:	2b01      	cmp	r3, #1
 801581e:	d10c      	bne.n	801583a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8015820:	8803      	ldrh	r3, [r0, #0]
 8015822:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8015826:	8842      	ldrh	r2, [r0, #2]
 8015828:	8002      	strh	r2, [r0, #0]
 801582a:	185a      	adds	r2, r3, r1
 801582c:	4b04      	ldr	r3, [pc, #16]	; (8015840 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801582e:	881b      	ldrh	r3, [r3, #0]
 8015830:	1a9b      	subs	r3, r3, r2
 8015832:	8043      	strh	r3, [r0, #2]
 8015834:	88c3      	ldrh	r3, [r0, #6]
 8015836:	8083      	strh	r3, [r0, #4]
 8015838:	80c1      	strh	r1, [r0, #6]
 801583a:	4770      	bx	lr
 801583c:	20012dac 	.word	0x20012dac
 8015840:	20012da8 	.word	0x20012da8

08015844 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8015844:	b510      	push	{r4, lr}
 8015846:	4b07      	ldr	r3, [pc, #28]	; (8015864 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8015848:	781b      	ldrb	r3, [r3, #0]
 801584a:	2b01      	cmp	r3, #1
 801584c:	d108      	bne.n	8015860 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801584e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015852:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015856:	8003      	strh	r3, [r0, #0]
 8015858:	8893      	ldrh	r3, [r2, #4]
 801585a:	3b01      	subs	r3, #1
 801585c:	1b1b      	subs	r3, r3, r4
 801585e:	800b      	strh	r3, [r1, #0]
 8015860:	bd10      	pop	{r4, pc}
 8015862:	bf00      	nop
 8015864:	20012dac 	.word	0x20012dac

08015868 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8015868:	4b0b      	ldr	r3, [pc, #44]	; (8015898 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801586a:	781b      	ldrb	r3, [r3, #0]
 801586c:	2b01      	cmp	r3, #1
 801586e:	d111      	bne.n	8015894 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8015870:	680b      	ldr	r3, [r1, #0]
 8015872:	ed90 7a00 	vldr	s14, [r0]
 8015876:	6003      	str	r3, [r0, #0]
 8015878:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801587c:	eddf 6a07 	vldr	s13, [pc, #28]	; 801589c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8015880:	ee07 3a90 	vmov	s15, r3
 8015884:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015888:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801588c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015890:	edc1 7a00 	vstr	s15, [r1]
 8015894:	4770      	bx	lr
 8015896:	bf00      	nop
 8015898:	20012dac 	.word	0x20012dac
 801589c:	38d1b717 	.word	0x38d1b717

080158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80158a0:	b510      	push	{r4, lr}
 80158a2:	4b0a      	ldr	r3, [pc, #40]	; (80158cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80158a4:	781b      	ldrb	r3, [r3, #0]
 80158a6:	2b01      	cmp	r3, #1
 80158a8:	460a      	mov	r2, r1
 80158aa:	d10d      	bne.n	80158c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80158ac:	8881      	ldrh	r1, [r0, #4]
 80158ae:	8803      	ldrh	r3, [r0, #0]
 80158b0:	440b      	add	r3, r1
 80158b2:	4601      	mov	r1, r0
 80158b4:	3b01      	subs	r3, #1
 80158b6:	f821 3b02 	strh.w	r3, [r1], #2
 80158ba:	f7ff ffc3 	bl	8015844 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80158be:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80158c2:	88c2      	ldrh	r2, [r0, #6]
 80158c4:	8082      	strh	r2, [r0, #4]
 80158c6:	80c3      	strh	r3, [r0, #6]
 80158c8:	bd10      	pop	{r4, pc}
 80158ca:	bf00      	nop
 80158cc:	20012dac 	.word	0x20012dac

080158d0 <_ZN8touchgfx11Application13requestRedrawEv>:
 80158d0:	4b06      	ldr	r3, [pc, #24]	; (80158ec <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80158d2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80158d6:	4b06      	ldr	r3, [pc, #24]	; (80158f0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80158d8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80158dc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80158e0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 80158e4:	2100      	movs	r1, #0
 80158e6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80158ea:	4770      	bx	lr
 80158ec:	20012da8 	.word	0x20012da8
 80158f0:	20012daa 	.word	0x20012daa

080158f4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80158f4:	4b03      	ldr	r3, [pc, #12]	; (8015904 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80158f6:	6818      	ldr	r0, [r3, #0]
 80158f8:	b110      	cbz	r0, 8015900 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80158fa:	6803      	ldr	r3, [r0, #0]
 80158fc:	699b      	ldr	r3, [r3, #24]
 80158fe:	4718      	bx	r3
 8015900:	4770      	bx	lr
 8015902:	bf00      	nop
 8015904:	20012df8 	.word	0x20012df8

08015908 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8015908:	4770      	bx	lr
	...

0801590c <_ZN8touchgfx11Application4drawEv>:
 801590c:	b507      	push	{r0, r1, r2, lr}
 801590e:	4b09      	ldr	r3, [pc, #36]	; (8015934 <_ZN8touchgfx11Application4drawEv+0x28>)
 8015910:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015914:	4b08      	ldr	r3, [pc, #32]	; (8015938 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8015916:	f8ad 2004 	strh.w	r2, [sp, #4]
 801591a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801591e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015922:	6803      	ldr	r3, [r0, #0]
 8015924:	2100      	movs	r1, #0
 8015926:	9100      	str	r1, [sp, #0]
 8015928:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801592a:	4669      	mov	r1, sp
 801592c:	4798      	blx	r3
 801592e:	b003      	add	sp, #12
 8015930:	f85d fb04 	ldr.w	pc, [sp], #4
 8015934:	20012da8 	.word	0x20012da8
 8015938:	20012daa 	.word	0x20012daa

0801593c <_ZN8touchgfx11Application10invalidateEv>:
 801593c:	4b09      	ldr	r3, [pc, #36]	; (8015964 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801593e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015942:	4b09      	ldr	r3, [pc, #36]	; (8015968 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8015944:	b082      	sub	sp, #8
 8015946:	f9b3 3000 	ldrsh.w	r3, [r3]
 801594a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801594e:	2100      	movs	r1, #0
 8015950:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015954:	9100      	str	r1, [sp, #0]
 8015956:	6803      	ldr	r3, [r0, #0]
 8015958:	aa02      	add	r2, sp, #8
 801595a:	e912 0006 	ldmdb	r2, {r1, r2}
 801595e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015960:	b002      	add	sp, #8
 8015962:	4718      	bx	r3
 8015964:	20012da8 	.word	0x20012da8
 8015968:	20012daa 	.word	0x20012daa

0801596c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801596c:	4b03      	ldr	r3, [pc, #12]	; (801597c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801596e:	6818      	ldr	r0, [r3, #0]
 8015970:	b110      	cbz	r0, 8015978 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8015972:	6803      	ldr	r3, [r0, #0]
 8015974:	69db      	ldr	r3, [r3, #28]
 8015976:	4718      	bx	r3
 8015978:	4770      	bx	lr
 801597a:	bf00      	nop
 801597c:	20012df8 	.word	0x20012df8

08015980 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8015980:	4b03      	ldr	r3, [pc, #12]	; (8015990 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8015982:	6818      	ldr	r0, [r3, #0]
 8015984:	b110      	cbz	r0, 801598c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8015986:	6803      	ldr	r3, [r0, #0]
 8015988:	6a1b      	ldr	r3, [r3, #32]
 801598a:	4718      	bx	r3
 801598c:	4770      	bx	lr
 801598e:	bf00      	nop
 8015990:	20012df8 	.word	0x20012df8

08015994 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8015994:	2300      	movs	r3, #0
 8015996:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 801599a:	4770      	bx	lr

0801599c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801599c:	4b03      	ldr	r3, [pc, #12]	; (80159ac <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801599e:	6818      	ldr	r0, [r3, #0]
 80159a0:	b110      	cbz	r0, 80159a8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80159a2:	6803      	ldr	r3, [r0, #0]
 80159a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80159a6:	4718      	bx	r3
 80159a8:	4770      	bx	lr
 80159aa:	bf00      	nop
 80159ac:	20012df8 	.word	0x20012df8

080159b0 <_ZN8touchgfx11ApplicationD1Ev>:
 80159b0:	4770      	bx	lr

080159b2 <_ZN8touchgfx11ApplicationD0Ev>:
 80159b2:	b510      	push	{r4, lr}
 80159b4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80159b8:	4604      	mov	r4, r0
 80159ba:	f014 f958 	bl	8029c6e <_ZdlPvj>
 80159be:	4620      	mov	r0, r4
 80159c0:	bd10      	pop	{r4, pc}

080159c2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80159c2:	b510      	push	{r4, lr}
 80159c4:	f9b1 4000 	ldrsh.w	r4, [r1]
 80159c8:	888a      	ldrh	r2, [r1, #4]
 80159ca:	f9b0 3000 	ldrsh.w	r3, [r0]
 80159ce:	4422      	add	r2, r4
 80159d0:	b212      	sxth	r2, r2
 80159d2:	4293      	cmp	r3, r2
 80159d4:	da15      	bge.n	8015a02 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80159d6:	8882      	ldrh	r2, [r0, #4]
 80159d8:	4413      	add	r3, r2
 80159da:	b21b      	sxth	r3, r3
 80159dc:	429c      	cmp	r4, r3
 80159de:	da10      	bge.n	8015a02 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80159e0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80159e4:	88c9      	ldrh	r1, [r1, #6]
 80159e6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80159ea:	4419      	add	r1, r3
 80159ec:	b209      	sxth	r1, r1
 80159ee:	428a      	cmp	r2, r1
 80159f0:	da07      	bge.n	8015a02 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80159f2:	88c0      	ldrh	r0, [r0, #6]
 80159f4:	4410      	add	r0, r2
 80159f6:	b200      	sxth	r0, r0
 80159f8:	4283      	cmp	r3, r0
 80159fa:	bfac      	ite	ge
 80159fc:	2000      	movge	r0, #0
 80159fe:	2001      	movlt	r0, #1
 8015a00:	bd10      	pop	{r4, pc}
 8015a02:	2000      	movs	r0, #0
 8015a04:	e7fc      	b.n	8015a00 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08015a06 <_ZN8touchgfx4Rect10restrictToEss>:
 8015a06:	f9b0 3000 	ldrsh.w	r3, [r0]
 8015a0a:	2b00      	cmp	r3, #0
 8015a0c:	b510      	push	{r4, lr}
 8015a0e:	da04      	bge.n	8015a1a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8015a10:	8884      	ldrh	r4, [r0, #4]
 8015a12:	4423      	add	r3, r4
 8015a14:	8083      	strh	r3, [r0, #4]
 8015a16:	2300      	movs	r3, #0
 8015a18:	8003      	strh	r3, [r0, #0]
 8015a1a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015a1e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015a22:	1b09      	subs	r1, r1, r4
 8015a24:	428b      	cmp	r3, r1
 8015a26:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8015a2a:	bfc8      	it	gt
 8015a2c:	8081      	strhgt	r1, [r0, #4]
 8015a2e:	2b00      	cmp	r3, #0
 8015a30:	da04      	bge.n	8015a3c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8015a32:	88c1      	ldrh	r1, [r0, #6]
 8015a34:	440b      	add	r3, r1
 8015a36:	80c3      	strh	r3, [r0, #6]
 8015a38:	2300      	movs	r3, #0
 8015a3a:	8043      	strh	r3, [r0, #2]
 8015a3c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015a40:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015a44:	1a52      	subs	r2, r2, r1
 8015a46:	4293      	cmp	r3, r2
 8015a48:	bfc8      	it	gt
 8015a4a:	80c2      	strhgt	r2, [r0, #6]
 8015a4c:	bd10      	pop	{r4, pc}
	...

08015a50 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8015a50:	b510      	push	{r4, lr}
 8015a52:	4b10      	ldr	r3, [pc, #64]	; (8015a94 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8015a54:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015a58:	4b0f      	ldr	r3, [pc, #60]	; (8015a98 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8015a5a:	460c      	mov	r4, r1
 8015a5c:	4620      	mov	r0, r4
 8015a5e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015a62:	f7ff ffd0 	bl	8015a06 <_ZN8touchgfx4Rect10restrictToEss>
 8015a66:	4b0d      	ldr	r3, [pc, #52]	; (8015a9c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8015a68:	6818      	ldr	r0, [r3, #0]
 8015a6a:	b190      	cbz	r0, 8015a92 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8015a6c:	6803      	ldr	r3, [r0, #0]
 8015a6e:	4621      	mov	r1, r4
 8015a70:	689b      	ldr	r3, [r3, #8]
 8015a72:	4798      	blx	r3
 8015a74:	4b0a      	ldr	r3, [pc, #40]	; (8015aa0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8015a76:	6818      	ldr	r0, [r3, #0]
 8015a78:	b118      	cbz	r0, 8015a82 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8015a7a:	6803      	ldr	r3, [r0, #0]
 8015a7c:	4621      	mov	r1, r4
 8015a7e:	689b      	ldr	r3, [r3, #8]
 8015a80:	4798      	blx	r3
 8015a82:	4b08      	ldr	r3, [pc, #32]	; (8015aa4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8015a84:	6818      	ldr	r0, [r3, #0]
 8015a86:	6803      	ldr	r3, [r0, #0]
 8015a88:	4621      	mov	r1, r4
 8015a8a:	69db      	ldr	r3, [r3, #28]
 8015a8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015a90:	4718      	bx	r3
 8015a92:	bd10      	pop	{r4, pc}
 8015a94:	20012daa 	.word	0x20012daa
 8015a98:	20012da8 	.word	0x20012da8
 8015a9c:	20012df8 	.word	0x20012df8
 8015aa0:	20012df4 	.word	0x20012df4
 8015aa4:	20012db4 	.word	0x20012db4

08015aa8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8015aa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015aaa:	4606      	mov	r6, r0
 8015aac:	4608      	mov	r0, r1
 8015aae:	460f      	mov	r7, r1
 8015ab0:	f7fa ff97 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015ab4:	b9e8      	cbnz	r0, 8015af2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015ab6:	f9b7 5000 	ldrsh.w	r5, [r7]
 8015aba:	f9b6 4000 	ldrsh.w	r4, [r6]
 8015abe:	42a5      	cmp	r5, r4
 8015ac0:	db17      	blt.n	8015af2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015ac2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8015ac6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8015aca:	429a      	cmp	r2, r3
 8015acc:	db11      	blt.n	8015af2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015ace:	88b9      	ldrh	r1, [r7, #4]
 8015ad0:	440d      	add	r5, r1
 8015ad2:	88b1      	ldrh	r1, [r6, #4]
 8015ad4:	440c      	add	r4, r1
 8015ad6:	b22d      	sxth	r5, r5
 8015ad8:	b224      	sxth	r4, r4
 8015ada:	42a5      	cmp	r5, r4
 8015adc:	dc09      	bgt.n	8015af2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8015ade:	88f8      	ldrh	r0, [r7, #6]
 8015ae0:	4410      	add	r0, r2
 8015ae2:	88f2      	ldrh	r2, [r6, #6]
 8015ae4:	4413      	add	r3, r2
 8015ae6:	b200      	sxth	r0, r0
 8015ae8:	b21b      	sxth	r3, r3
 8015aea:	4298      	cmp	r0, r3
 8015aec:	bfcc      	ite	gt
 8015aee:	2000      	movgt	r0, #0
 8015af0:	2001      	movle	r0, #1
 8015af2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015af4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8015af4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015af6:	4604      	mov	r4, r0
 8015af8:	4608      	mov	r0, r1
 8015afa:	460d      	mov	r5, r1
 8015afc:	f7fa ff71 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015b00:	b978      	cbnz	r0, 8015b22 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015b02:	4620      	mov	r0, r4
 8015b04:	f7fa ff6d 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015b08:	f9b5 6000 	ldrsh.w	r6, [r5]
 8015b0c:	b150      	cbz	r0, 8015b24 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8015b0e:	8026      	strh	r6, [r4, #0]
 8015b10:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015b14:	8063      	strh	r3, [r4, #2]
 8015b16:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8015b1a:	80a3      	strh	r3, [r4, #4]
 8015b1c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015b20:	80e3      	strh	r3, [r4, #6]
 8015b22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015b24:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015b28:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8015b2c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015b30:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015b34:	88ed      	ldrh	r5, [r5, #6]
 8015b36:	42b1      	cmp	r1, r6
 8015b38:	460f      	mov	r7, r1
 8015b3a:	bfa8      	it	ge
 8015b3c:	4637      	movge	r7, r6
 8015b3e:	4293      	cmp	r3, r2
 8015b40:	4618      	mov	r0, r3
 8015b42:	4466      	add	r6, ip
 8015b44:	bfa8      	it	ge
 8015b46:	4610      	movge	r0, r2
 8015b48:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015b4c:	8027      	strh	r7, [r4, #0]
 8015b4e:	442a      	add	r2, r5
 8015b50:	88e5      	ldrh	r5, [r4, #6]
 8015b52:	8060      	strh	r0, [r4, #2]
 8015b54:	4461      	add	r1, ip
 8015b56:	442b      	add	r3, r5
 8015b58:	b236      	sxth	r6, r6
 8015b5a:	b209      	sxth	r1, r1
 8015b5c:	b212      	sxth	r2, r2
 8015b5e:	b21b      	sxth	r3, r3
 8015b60:	428e      	cmp	r6, r1
 8015b62:	bfac      	ite	ge
 8015b64:	ebc7 0106 	rsbge	r1, r7, r6
 8015b68:	ebc7 0101 	rsblt	r1, r7, r1
 8015b6c:	429a      	cmp	r2, r3
 8015b6e:	bfac      	ite	ge
 8015b70:	ebc0 0202 	rsbge	r2, r0, r2
 8015b74:	ebc0 0203 	rsblt	r2, r0, r3
 8015b78:	80a1      	strh	r1, [r4, #4]
 8015b7a:	80e2      	strh	r2, [r4, #6]
 8015b7c:	e7d1      	b.n	8015b22 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015b80 <_ZN8touchgfx11Application11getInstanceEv>:
 8015b80:	4b01      	ldr	r3, [pc, #4]	; (8015b88 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015b82:	6818      	ldr	r0, [r3, #0]
 8015b84:	4770      	bx	lr
 8015b86:	bf00      	nop
 8015b88:	20012e08 	.word	0x20012e08

08015b8c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8015b8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015b8e:	4b10      	ldr	r3, [pc, #64]	; (8015bd0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8015b90:	781b      	ldrb	r3, [r3, #0]
 8015b92:	4605      	mov	r5, r0
 8015b94:	b1d3      	cbz	r3, 8015bcc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8015b96:	4b0f      	ldr	r3, [pc, #60]	; (8015bd4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8015b98:	4f0f      	ldr	r7, [pc, #60]	; (8015bd8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8015b9a:	881c      	ldrh	r4, [r3, #0]
 8015b9c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8015ba0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8015ba4:	42a3      	cmp	r3, r4
 8015ba6:	d90e      	bls.n	8015bc6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8015ba8:	683b      	ldr	r3, [r7, #0]
 8015baa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015bae:	b10a      	cbz	r2, 8015bb4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8015bb0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015bb2:	b900      	cbnz	r0, 8015bb6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8015bb4:	6898      	ldr	r0, [r3, #8]
 8015bb6:	6803      	ldr	r3, [r0, #0]
 8015bb8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8015bbc:	69db      	ldr	r3, [r3, #28]
 8015bbe:	3401      	adds	r4, #1
 8015bc0:	4798      	blx	r3
 8015bc2:	b2a4      	uxth	r4, r4
 8015bc4:	e7ec      	b.n	8015ba0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8015bc6:	2300      	movs	r3, #0
 8015bc8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8015bcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015bce:	bf00      	nop
 8015bd0:	20012db2 	.word	0x20012db2
 8015bd4:	20000088 	.word	0x20000088
 8015bd8:	20012db4 	.word	0x20012db4

08015bdc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8015bdc:	b510      	push	{r4, lr}
 8015bde:	2300      	movs	r3, #0
 8015be0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8015be4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015be8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015bec:	4604      	mov	r4, r0
 8015bee:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015bf2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8015bf6:	429a      	cmp	r2, r3
 8015bf8:	d90e      	bls.n	8015c18 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8015bfa:	18e2      	adds	r2, r4, r3
 8015bfc:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8015c00:	b122      	cbz	r2, 8015c0c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8015c02:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8015c06:	6803      	ldr	r3, [r0, #0]
 8015c08:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015c0a:	4798      	blx	r3
 8015c0c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015c10:	3301      	adds	r3, #1
 8015c12:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015c16:	e7ea      	b.n	8015bee <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8015c18:	bd10      	pop	{r4, pc}

08015c1a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8015c1a:	b530      	push	{r4, r5, lr}
 8015c1c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8015c20:	2200      	movs	r2, #0
 8015c22:	b293      	uxth	r3, r2
 8015c24:	429d      	cmp	r5, r3
 8015c26:	d90e      	bls.n	8015c46 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015c28:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8015c2c:	428b      	cmp	r3, r1
 8015c2e:	d10b      	bne.n	8015c48 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015c30:	1884      	adds	r4, r0, r2
 8015c32:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8015c36:	b13b      	cbz	r3, 8015c48 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015c38:	3b01      	subs	r3, #1
 8015c3a:	b2db      	uxtb	r3, r3
 8015c3c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8015c40:	b90b      	cbnz	r3, 8015c46 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015c42:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8015c46:	bd30      	pop	{r4, r5, pc}
 8015c48:	3201      	adds	r2, #1
 8015c4a:	e7ea      	b.n	8015c22 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8015c4c:	2300      	movs	r3, #0
 8015c4e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015c52:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8015c56:	30a4      	adds	r0, #164	; 0xa4
 8015c58:	f802 3b01 	strb.w	r3, [r2], #1
 8015c5c:	4282      	cmp	r2, r0
 8015c5e:	d1fb      	bne.n	8015c58 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8015c60:	4770      	bx	lr
	...

08015c64 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8015c64:	b570      	push	{r4, r5, r6, lr}
 8015c66:	4c0b      	ldr	r4, [pc, #44]	; (8015c94 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8015c68:	4605      	mov	r5, r0
 8015c6a:	6820      	ldr	r0, [r4, #0]
 8015c6c:	460e      	mov	r6, r1
 8015c6e:	b110      	cbz	r0, 8015c76 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8015c70:	6803      	ldr	r3, [r0, #0]
 8015c72:	695b      	ldr	r3, [r3, #20]
 8015c74:	4798      	blx	r3
 8015c76:	1d28      	adds	r0, r5, #4
 8015c78:	f7ff ffe8 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015c7c:	6026      	str	r6, [r4, #0]
 8015c7e:	6833      	ldr	r3, [r6, #0]
 8015c80:	4630      	mov	r0, r6
 8015c82:	68db      	ldr	r3, [r3, #12]
 8015c84:	4798      	blx	r3
 8015c86:	682b      	ldr	r3, [r5, #0]
 8015c88:	4628      	mov	r0, r5
 8015c8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015c8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015c90:	4718      	bx	r3
 8015c92:	bf00      	nop
 8015c94:	20012df8 	.word	0x20012df8

08015c98 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8015c98:	2300      	movs	r3, #0
 8015c9a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8015c9e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8015ca2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015ca4:	461a      	mov	r2, r3
 8015ca6:	461c      	mov	r4, r3
 8015ca8:	461d      	mov	r5, r3
 8015caa:	459c      	cmp	ip, r3
 8015cac:	dd1a      	ble.n	8015ce4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8015cae:	18c6      	adds	r6, r0, r3
 8015cb0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8015cb4:	b16e      	cbz	r6, 8015cd2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8015cb6:	429a      	cmp	r2, r3
 8015cb8:	d008      	beq.n	8015ccc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8015cba:	fa1f fe82 	uxth.w	lr, r2
 8015cbe:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8015cc2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8015cc6:	1887      	adds	r7, r0, r2
 8015cc8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8015ccc:	3201      	adds	r2, #1
 8015cce:	3301      	adds	r3, #1
 8015cd0:	e7eb      	b.n	8015caa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8015cd2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8015cd6:	4299      	cmp	r1, r3
 8015cd8:	bfa8      	it	ge
 8015cda:	3501      	addge	r5, #1
 8015cdc:	429e      	cmp	r6, r3
 8015cde:	bfc8      	it	gt
 8015ce0:	3401      	addgt	r4, #1
 8015ce2:	e7f4      	b.n	8015cce <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8015ce4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8015ce8:	1b49      	subs	r1, r1, r5
 8015cea:	1b1b      	subs	r3, r3, r4
 8015cec:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8015cf0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8015cf4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015cf8:	4293      	cmp	r3, r2
 8015cfa:	dd03      	ble.n	8015d04 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8015cfc:	3b01      	subs	r3, #1
 8015cfe:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015d02:	e7f7      	b.n	8015cf4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8015d04:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015d08 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015d08:	b570      	push	{r4, r5, r6, lr}
 8015d0a:	4d16      	ldr	r5, [pc, #88]	; (8015d64 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8015d0c:	4604      	mov	r4, r0
 8015d0e:	6828      	ldr	r0, [r5, #0]
 8015d10:	b140      	cbz	r0, 8015d24 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015d12:	7a03      	ldrb	r3, [r0, #8]
 8015d14:	b933      	cbnz	r3, 8015d24 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015d16:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015d1a:	6803      	ldr	r3, [r0, #0]
 8015d1c:	689b      	ldr	r3, [r3, #8]
 8015d1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015d22:	4718      	bx	r3
 8015d24:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8015d28:	4e0f      	ldr	r6, [pc, #60]	; (8015d68 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8015d2a:	b973      	cbnz	r3, 8015d4a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015d2c:	b168      	cbz	r0, 8015d4a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015d2e:	7a03      	ldrb	r3, [r0, #8]
 8015d30:	b15b      	cbz	r3, 8015d4a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015d32:	6830      	ldr	r0, [r6, #0]
 8015d34:	b110      	cbz	r0, 8015d3c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8015d36:	6803      	ldr	r3, [r0, #0]
 8015d38:	691b      	ldr	r3, [r3, #16]
 8015d3a:	4798      	blx	r3
 8015d3c:	6828      	ldr	r0, [r5, #0]
 8015d3e:	6803      	ldr	r3, [r0, #0]
 8015d40:	68db      	ldr	r3, [r3, #12]
 8015d42:	4798      	blx	r3
 8015d44:	2301      	movs	r3, #1
 8015d46:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015d4a:	3404      	adds	r4, #4
 8015d4c:	4620      	mov	r0, r4
 8015d4e:	f7ff ff45 	bl	8015bdc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8015d52:	4620      	mov	r0, r4
 8015d54:	f7ff ffa0 	bl	8015c98 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015d58:	6830      	ldr	r0, [r6, #0]
 8015d5a:	b110      	cbz	r0, 8015d62 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8015d5c:	6803      	ldr	r3, [r0, #0]
 8015d5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015d60:	e7dd      	b.n	8015d1e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015d62:	bd70      	pop	{r4, r5, r6, pc}
 8015d64:	20012dfc 	.word	0x20012dfc
 8015d68:	20012df8 	.word	0x20012df8

08015d6c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8015d6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015d6e:	2300      	movs	r3, #0
 8015d70:	4604      	mov	r4, r0
 8015d72:	460d      	mov	r5, r1
 8015d74:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8015d78:	4618      	mov	r0, r3
 8015d7a:	b29a      	uxth	r2, r3
 8015d7c:	4291      	cmp	r1, r2
 8015d7e:	d911      	bls.n	8015da4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8015d80:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8015d84:	18e6      	adds	r6, r4, r3
 8015d86:	42af      	cmp	r7, r5
 8015d88:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8015d8c:	d105      	bne.n	8015d9a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8015d8e:	2aff      	cmp	r2, #255	; 0xff
 8015d90:	d002      	beq.n	8015d98 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015d92:	3201      	adds	r2, #1
 8015d94:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8015d98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015d9a:	2a00      	cmp	r2, #0
 8015d9c:	bf08      	it	eq
 8015d9e:	2001      	moveq	r0, #1
 8015da0:	3301      	adds	r3, #1
 8015da2:	e7ea      	b.n	8015d7a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8015da4:	b120      	cbz	r0, 8015db0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015da6:	2920      	cmp	r1, #32
 8015da8:	d102      	bne.n	8015db0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8015daa:	4620      	mov	r0, r4
 8015dac:	f7ff ff74 	bl	8015c98 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015db0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8015db4:	2b1f      	cmp	r3, #31
 8015db6:	d8ef      	bhi.n	8015d98 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015db8:	18e2      	adds	r2, r4, r3
 8015dba:	2101      	movs	r1, #1
 8015dbc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8015dc0:	185a      	adds	r2, r3, r1
 8015dc2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8015dc6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8015dca:	e7e5      	b.n	8015d98 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08015dcc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8015dcc:	4603      	mov	r3, r0
 8015dce:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8015dd2:	2200      	movs	r2, #0
 8015dd4:	801a      	strh	r2, [r3, #0]
 8015dd6:	805a      	strh	r2, [r3, #2]
 8015dd8:	809a      	strh	r2, [r3, #4]
 8015dda:	80da      	strh	r2, [r3, #6]
 8015ddc:	3308      	adds	r3, #8
 8015dde:	428b      	cmp	r3, r1
 8015de0:	d1f8      	bne.n	8015dd4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8015de2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8015de6:	4770      	bx	lr

08015de8 <_ZN8touchgfx11ApplicationC1Ev>:
 8015de8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015dea:	4606      	mov	r6, r0
 8015dec:	4b1c      	ldr	r3, [pc, #112]	; (8015e60 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8015dee:	f846 3b04 	str.w	r3, [r6], #4
 8015df2:	4604      	mov	r4, r0
 8015df4:	2500      	movs	r5, #0
 8015df6:	22a8      	movs	r2, #168	; 0xa8
 8015df8:	2100      	movs	r1, #0
 8015dfa:	4630      	mov	r0, r6
 8015dfc:	f015 f823 	bl	802ae46 <memset>
 8015e00:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8015e04:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015e08:	f7ff ffe0 	bl	8015dcc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015e0c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015e10:	f7ff ffdc 	bl	8015dcc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015e14:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8015e18:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8015e1c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8015e20:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8015e24:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8015e28:	490e      	ldr	r1, [pc, #56]	; (8015e64 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8015e2a:	480f      	ldr	r0, [pc, #60]	; (8015e68 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8015e2c:	4f0f      	ldr	r7, [pc, #60]	; (8015e6c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8015e2e:	f010 fde9 	bl	8026a04 <CRC_Lock>
 8015e32:	4b0f      	ldr	r3, [pc, #60]	; (8015e70 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8015e34:	b158      	cbz	r0, 8015e4e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8015e36:	801d      	strh	r5, [r3, #0]
 8015e38:	4a0e      	ldr	r2, [pc, #56]	; (8015e74 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8015e3a:	2300      	movs	r3, #0
 8015e3c:	6013      	str	r3, [r2, #0]
 8015e3e:	4a0e      	ldr	r2, [pc, #56]	; (8015e78 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8015e40:	603b      	str	r3, [r7, #0]
 8015e42:	4630      	mov	r0, r6
 8015e44:	6013      	str	r3, [r2, #0]
 8015e46:	f7ff ff01 	bl	8015c4c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015e4a:	4620      	mov	r0, r4
 8015e4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015e4e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015e52:	2002      	movs	r0, #2
 8015e54:	801a      	strh	r2, [r3, #0]
 8015e56:	6038      	str	r0, [r7, #0]
 8015e58:	f001 fb4a 	bl	80174f0 <_ZN8touchgfx6Screen4drawEv>
 8015e5c:	e7ec      	b.n	8015e38 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8015e5e:	bf00      	nop
 8015e60:	0802f248 	.word	0x0802f248
 8015e64:	b5e8b5cd 	.word	0xb5e8b5cd
 8015e68:	f407a5c2 	.word	0xf407a5c2
 8015e6c:	20012df8 	.word	0x20012df8
 8015e70:	20000088 	.word	0x20000088
 8015e74:	20012e08 	.word	0x20012e08
 8015e78:	20012dfc 	.word	0x20012dfc

08015e7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8015e7c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8015e80:	3b01      	subs	r3, #1
 8015e82:	b29b      	uxth	r3, r3
 8015e84:	428b      	cmp	r3, r1
 8015e86:	b510      	push	{r4, lr}
 8015e88:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8015e8c:	d908      	bls.n	8015ea0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8015e8e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015e92:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8015e96:	681a      	ldr	r2, [r3, #0]
 8015e98:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8015e9c:	685a      	ldr	r2, [r3, #4]
 8015e9e:	6062      	str	r2, [r4, #4]
 8015ea0:	bd10      	pop	{r4, pc}
	...

08015ea4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8015ea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ea8:	4b8f      	ldr	r3, [pc, #572]	; (80160e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8015eaa:	b08f      	sub	sp, #60	; 0x3c
 8015eac:	ac0a      	add	r4, sp, #40	; 0x28
 8015eae:	e884 0006 	stmia.w	r4, {r1, r2}
 8015eb2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015eb6:	4b8d      	ldr	r3, [pc, #564]	; (80160ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8015eb8:	4683      	mov	fp, r0
 8015eba:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015ebe:	4620      	mov	r0, r4
 8015ec0:	f7ff fda1 	bl	8015a06 <_ZN8touchgfx4Rect10restrictToEss>
 8015ec4:	4620      	mov	r0, r4
 8015ec6:	f7fa fd8c 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015eca:	2800      	cmp	r0, #0
 8015ecc:	d16a      	bne.n	8015fa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015ece:	9403      	str	r4, [sp, #12]
 8015ed0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015ed4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015ed8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8015edc:	35a4      	adds	r5, #164	; 0xa4
 8015ede:	9301      	str	r3, [sp, #4]
 8015ee0:	b15c      	cbz	r4, 8015efa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8015ee2:	4629      	mov	r1, r5
 8015ee4:	9803      	ldr	r0, [sp, #12]
 8015ee6:	f7ff fddf 	bl	8015aa8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015eea:	3c01      	subs	r4, #1
 8015eec:	b118      	cbz	r0, 8015ef6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8015eee:	b2a1      	uxth	r1, r4
 8015ef0:	9801      	ldr	r0, [sp, #4]
 8015ef2:	f7ff ffc3 	bl	8015e7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015ef6:	3d08      	subs	r5, #8
 8015ef8:	e7f2      	b.n	8015ee0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8015efa:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8015efe:	f8cd a010 	str.w	sl, [sp, #16]
 8015f02:	f10a 33ff 	add.w	r3, sl, #4294967295
 8015f06:	9302      	str	r3, [sp, #8]
 8015f08:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8015f0c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8015f10:	9306      	str	r3, [sp, #24]
 8015f12:	445c      	add	r4, fp
 8015f14:	2500      	movs	r5, #0
 8015f16:	4626      	mov	r6, r4
 8015f18:	f8cd a014 	str.w	sl, [sp, #20]
 8015f1c:	462f      	mov	r7, r5
 8015f1e:	9b05      	ldr	r3, [sp, #20]
 8015f20:	2b00      	cmp	r3, #0
 8015f22:	d073      	beq.n	801600c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8015f24:	9903      	ldr	r1, [sp, #12]
 8015f26:	4630      	mov	r0, r6
 8015f28:	f7ff fd4b 	bl	80159c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015f2c:	b350      	cbz	r0, 8015f84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8015f2e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8015f32:	f9b6 c000 	ldrsh.w	ip, [r6]
 8015f36:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8015f3a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8015f3e:	45e6      	cmp	lr, ip
 8015f40:	db33      	blt.n	8015faa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015f42:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015f46:	88b3      	ldrh	r3, [r6, #4]
 8015f48:	4472      	add	r2, lr
 8015f4a:	4463      	add	r3, ip
 8015f4c:	b212      	sxth	r2, r2
 8015f4e:	b21b      	sxth	r3, r3
 8015f50:	429a      	cmp	r2, r3
 8015f52:	dc2a      	bgt.n	8015faa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015f54:	88f3      	ldrh	r3, [r6, #6]
 8015f56:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015f5a:	fa1f f289 	uxth.w	r2, r9
 8015f5e:	4413      	add	r3, r2
 8015f60:	b29b      	uxth	r3, r3
 8015f62:	45c8      	cmp	r8, r9
 8015f64:	fa1f fc88 	uxth.w	ip, r8
 8015f68:	fa0f fe83 	sxth.w	lr, r3
 8015f6c:	db0f      	blt.n	8015f8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8015f6e:	eba3 030c 	sub.w	r3, r3, ip
 8015f72:	1ac9      	subs	r1, r1, r3
 8015f74:	b209      	sxth	r1, r1
 8015f76:	2900      	cmp	r1, #0
 8015f78:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015f7c:	dd12      	ble.n	8015fa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015f7e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8015f82:	4605      	mov	r5, r0
 8015f84:	9b05      	ldr	r3, [sp, #20]
 8015f86:	3b01      	subs	r3, #1
 8015f88:	9305      	str	r3, [sp, #20]
 8015f8a:	3e08      	subs	r6, #8
 8015f8c:	e7c7      	b.n	8015f1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8015f8e:	4461      	add	r1, ip
 8015f90:	b209      	sxth	r1, r1
 8015f92:	4571      	cmp	r1, lr
 8015f94:	dc38      	bgt.n	8016008 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015f96:	eba2 020c 	sub.w	r2, r2, ip
 8015f9a:	b212      	sxth	r2, r2
 8015f9c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8015fa0:	2a00      	cmp	r2, #0
 8015fa2:	dcee      	bgt.n	8015f82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8015fa4:	b00f      	add	sp, #60	; 0x3c
 8015fa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015faa:	45c8      	cmp	r8, r9
 8015fac:	db2c      	blt.n	8016008 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015fae:	88f3      	ldrh	r3, [r6, #6]
 8015fb0:	4499      	add	r9, r3
 8015fb2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8015fb6:	4498      	add	r8, r3
 8015fb8:	fa0f f989 	sxth.w	r9, r9
 8015fbc:	fa0f f888 	sxth.w	r8, r8
 8015fc0:	45c1      	cmp	r9, r8
 8015fc2:	db21      	blt.n	8016008 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015fc4:	88b3      	ldrh	r3, [r6, #4]
 8015fc6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8015fca:	fa1f f28c 	uxth.w	r2, ip
 8015fce:	4413      	add	r3, r2
 8015fd0:	b29b      	uxth	r3, r3
 8015fd2:	45e6      	cmp	lr, ip
 8015fd4:	fa1f f88e 	uxth.w	r8, lr
 8015fd8:	fa0f f983 	sxth.w	r9, r3
 8015fdc:	db0a      	blt.n	8015ff4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8015fde:	eba3 0308 	sub.w	r3, r3, r8
 8015fe2:	1ac9      	subs	r1, r1, r3
 8015fe4:	b209      	sxth	r1, r1
 8015fe6:	2900      	cmp	r1, #0
 8015fe8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8015fec:	ddda      	ble.n	8015fa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015fee:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015ff2:	e7c6      	b.n	8015f82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8015ff4:	4441      	add	r1, r8
 8015ff6:	b209      	sxth	r1, r1
 8015ff8:	4549      	cmp	r1, r9
 8015ffa:	dc05      	bgt.n	8016008 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015ffc:	eba2 0208 	sub.w	r2, r2, r8
 8016000:	b212      	sxth	r2, r2
 8016002:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8016006:	e7cb      	b.n	8015fa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8016008:	4607      	mov	r7, r0
 801600a:	e7bb      	b.n	8015f84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801600c:	2d00      	cmp	r5, #0
 801600e:	d181      	bne.n	8015f14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8016010:	2f00      	cmp	r7, #0
 8016012:	f000 81dd 	beq.w	80163d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016016:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801601a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801601e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8016022:	b2b3      	uxth	r3, r6
 8016024:	9305      	str	r3, [sp, #20]
 8016026:	9a05      	ldr	r2, [sp, #20]
 8016028:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801602c:	4413      	add	r3, r2
 801602e:	b2ba      	uxth	r2, r7
 8016030:	4492      	add	sl, r2
 8016032:	b29b      	uxth	r3, r3
 8016034:	fa1f fa8a 	uxth.w	sl, sl
 8016038:	fa0f f883 	sxth.w	r8, r3
 801603c:	fa0f f98a 	sxth.w	r9, sl
 8016040:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8016044:	9b04      	ldr	r3, [sp, #16]
 8016046:	2b00      	cmp	r3, #0
 8016048:	d052      	beq.n	80160f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801604a:	9903      	ldr	r1, [sp, #12]
 801604c:	4620      	mov	r0, r4
 801604e:	f7ff fcb8 	bl	80159c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016052:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8016056:	b1c0      	cbz	r0, 801608a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016058:	f9b4 e000 	ldrsh.w	lr, [r4]
 801605c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016060:	4576      	cmp	r6, lr
 8016062:	dc22      	bgt.n	80160aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016064:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016068:	44f4      	add	ip, lr
 801606a:	fa0f fc8c 	sxth.w	ip, ip
 801606e:	45e0      	cmp	r8, ip
 8016070:	db1b      	blt.n	80160aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016072:	428f      	cmp	r7, r1
 8016074:	fa1f fc81 	uxth.w	ip, r1
 8016078:	88e1      	ldrh	r1, [r4, #6]
 801607a:	dc0d      	bgt.n	8016098 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801607c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016080:	eba1 010c 	sub.w	r1, r1, ip
 8016084:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016088:	80e1      	strh	r1, [r4, #6]
 801608a:	4628      	mov	r0, r5
 801608c:	9904      	ldr	r1, [sp, #16]
 801608e:	3901      	subs	r1, #1
 8016090:	9104      	str	r1, [sp, #16]
 8016092:	3c08      	subs	r4, #8
 8016094:	4605      	mov	r5, r0
 8016096:	e7d3      	b.n	8016040 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8016098:	4461      	add	r1, ip
 801609a:	b209      	sxth	r1, r1
 801609c:	4549      	cmp	r1, r9
 801609e:	dcf5      	bgt.n	801608c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80160a0:	eba2 0c0c 	sub.w	ip, r2, ip
 80160a4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80160a8:	e7ef      	b.n	801608a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80160aa:	428f      	cmp	r7, r1
 80160ac:	dcee      	bgt.n	801608c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80160ae:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80160b2:	4461      	add	r1, ip
 80160b4:	b209      	sxth	r1, r1
 80160b6:	4589      	cmp	r9, r1
 80160b8:	dbe8      	blt.n	801608c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80160ba:	4576      	cmp	r6, lr
 80160bc:	fa1f fc8e 	uxth.w	ip, lr
 80160c0:	88a1      	ldrh	r1, [r4, #4]
 80160c2:	dc07      	bgt.n	80160d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80160c4:	eba3 0c0c 	sub.w	ip, r3, ip
 80160c8:	eba1 010c 	sub.w	r1, r1, ip
 80160cc:	f8a4 8000 	strh.w	r8, [r4]
 80160d0:	80a1      	strh	r1, [r4, #4]
 80160d2:	e7da      	b.n	801608a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80160d4:	4461      	add	r1, ip
 80160d6:	b209      	sxth	r1, r1
 80160d8:	4588      	cmp	r8, r1
 80160da:	dbd7      	blt.n	801608c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80160dc:	9905      	ldr	r1, [sp, #20]
 80160de:	eba1 0c0c 	sub.w	ip, r1, ip
 80160e2:	f8a4 c004 	strh.w	ip, [r4, #4]
 80160e6:	e7d0      	b.n	801608a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80160e8:	20012daa 	.word	0x20012daa
 80160ec:	20012da8 	.word	0x20012da8
 80160f0:	2d00      	cmp	r5, #0
 80160f2:	f000 816d 	beq.w	80163d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80160f6:	9b06      	ldr	r3, [sp, #24]
 80160f8:	445b      	add	r3, fp
 80160fa:	461c      	mov	r4, r3
 80160fc:	9b02      	ldr	r3, [sp, #8]
 80160fe:	3301      	adds	r3, #1
 8016100:	f000 8166 	beq.w	80163d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016104:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8016108:	4629      	mov	r1, r5
 801610a:	9803      	ldr	r0, [sp, #12]
 801610c:	f7ff fccc 	bl	8015aa8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8016110:	b120      	cbz	r0, 801611c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8016112:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016116:	9801      	ldr	r0, [sp, #4]
 8016118:	f7ff feb0 	bl	8015e7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801611c:	9903      	ldr	r1, [sp, #12]
 801611e:	4628      	mov	r0, r5
 8016120:	f7ff fc4f 	bl	80159c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016124:	2800      	cmp	r0, #0
 8016126:	f000 809c 	beq.w	8016262 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801612a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801612e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016132:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016136:	9309      	str	r3, [sp, #36]	; 0x24
 8016138:	fa1f f189 	uxth.w	r1, r9
 801613c:	eb01 0c03 	add.w	ip, r1, r3
 8016140:	fa1f fa8c 	uxth.w	sl, ip
 8016144:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8016148:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801614c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8016150:	b283      	uxth	r3, r0
 8016152:	eb03 050c 	add.w	r5, r3, ip
 8016156:	b2ad      	uxth	r5, r5
 8016158:	9505      	str	r5, [sp, #20]
 801615a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801615e:	9504      	str	r5, [sp, #16]
 8016160:	4548      	cmp	r0, r9
 8016162:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8016166:	f340 8099 	ble.w	801629c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801616a:	1a5b      	subs	r3, r3, r1
 801616c:	b29b      	uxth	r3, r3
 801616e:	4596      	cmp	lr, r2
 8016170:	fa0f f08a 	sxth.w	r0, sl
 8016174:	b21e      	sxth	r6, r3
 8016176:	dd2e      	ble.n	80161d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8016178:	9f02      	ldr	r7, [sp, #8]
 801617a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801617e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8016182:	9f04      	ldr	r7, [sp, #16]
 8016184:	1a3f      	subs	r7, r7, r0
 8016186:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801618a:	fa1f fe8e 	uxth.w	lr, lr
 801618e:	b292      	uxth	r2, r2
 8016190:	ebae 0102 	sub.w	r1, lr, r2
 8016194:	44a6      	add	lr, r4
 8016196:	4402      	add	r2, r0
 8016198:	b289      	uxth	r1, r1
 801619a:	fa0f fe8e 	sxth.w	lr, lr
 801619e:	b212      	sxth	r2, r2
 80161a0:	b20d      	sxth	r5, r1
 80161a2:	ebae 0202 	sub.w	r2, lr, r2
 80161a6:	436f      	muls	r7, r5
 80161a8:	4372      	muls	r2, r6
 80161aa:	4297      	cmp	r7, r2
 80161ac:	db09      	blt.n	80161c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80161ae:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80161b2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80161b6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80161ba:	449c      	add	ip, r3
 80161bc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80161c0:	e686      	b.n	8015ed0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80161c2:	4421      	add	r1, r4
 80161c4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80161c8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80161cc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80161d0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80161d4:	e67c      	b.n	8015ed0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80161d6:	9f04      	ldr	r7, [sp, #16]
 80161d8:	42b8      	cmp	r0, r7
 80161da:	da27      	bge.n	801622c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80161dc:	9902      	ldr	r1, [sp, #8]
 80161de:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 80161e2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80161e6:	eb05 010e 	add.w	r1, r5, lr
 80161ea:	fa1f f881 	uxth.w	r8, r1
 80161ee:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 80161f2:	4411      	add	r1, r2
 80161f4:	eba1 0108 	sub.w	r1, r1, r8
 80161f8:	b289      	uxth	r1, r1
 80161fa:	fa0f f988 	sxth.w	r9, r8
 80161fe:	eba2 020e 	sub.w	r2, r2, lr
 8016202:	fa0f f881 	sxth.w	r8, r1
 8016206:	1a3f      	subs	r7, r7, r0
 8016208:	4372      	muls	r2, r6
 801620a:	fb08 f707 	mul.w	r7, r8, r7
 801620e:	42ba      	cmp	r2, r7
 8016210:	dc06      	bgt.n	8016220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8016212:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8016216:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801621a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801621e:	e7ca      	b.n	80161b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8016220:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8016224:	4429      	add	r1, r5
 8016226:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801622a:	e651      	b.n	8015ed0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801622c:	9805      	ldr	r0, [sp, #20]
 801622e:	ebaa 0000 	sub.w	r0, sl, r0
 8016232:	b280      	uxth	r0, r0
 8016234:	2d06      	cmp	r5, #6
 8016236:	fa0f fe80 	sxth.w	lr, r0
 801623a:	d817      	bhi.n	801626c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801623c:	9b04      	ldr	r3, [sp, #16]
 801623e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016242:	1c6b      	adds	r3, r5, #1
 8016244:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8016248:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801624c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016250:	9b01      	ldr	r3, [sp, #4]
 8016252:	9801      	ldr	r0, [sp, #4]
 8016254:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016258:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801625c:	805a      	strh	r2, [r3, #2]
 801625e:	809e      	strh	r6, [r3, #4]
 8016260:	80d9      	strh	r1, [r3, #6]
 8016262:	9b02      	ldr	r3, [sp, #8]
 8016264:	3b01      	subs	r3, #1
 8016266:	9302      	str	r3, [sp, #8]
 8016268:	3c08      	subs	r4, #8
 801626a:	e747      	b.n	80160fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801626c:	9a02      	ldr	r2, [sp, #8]
 801626e:	45b6      	cmp	lr, r6
 8016270:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016274:	db0d      	blt.n	8016292 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8016276:	449c      	add	ip, r3
 8016278:	fa1f fc8c 	uxth.w	ip, ip
 801627c:	445a      	add	r2, fp
 801627e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016282:	448c      	add	ip, r1
 8016284:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016288:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801628c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8016290:	e61e      	b.n	8015ed0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016292:	445a      	add	r2, fp
 8016294:	4484      	add	ip, r0
 8016296:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801629a:	e78f      	b.n	80161bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801629c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80162a0:	fa1f f18e 	uxth.w	r1, lr
 80162a4:	eb01 0806 	add.w	r8, r1, r6
 80162a8:	b293      	uxth	r3, r2
 80162aa:	fa1f f888 	uxth.w	r8, r8
 80162ae:	9306      	str	r3, [sp, #24]
 80162b0:	fa0f f388 	sxth.w	r3, r8
 80162b4:	9307      	str	r3, [sp, #28]
 80162b6:	9f06      	ldr	r7, [sp, #24]
 80162b8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80162bc:	443b      	add	r3, r7
 80162be:	b29b      	uxth	r3, r3
 80162c0:	4596      	cmp	lr, r2
 80162c2:	9308      	str	r3, [sp, #32]
 80162c4:	da24      	bge.n	8016310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80162c6:	9905      	ldr	r1, [sp, #20]
 80162c8:	eba3 0308 	sub.w	r3, r3, r8
 80162cc:	ebaa 0401 	sub.w	r4, sl, r1
 80162d0:	b2a4      	uxth	r4, r4
 80162d2:	b29b      	uxth	r3, r3
 80162d4:	b225      	sxth	r5, r4
 80162d6:	b219      	sxth	r1, r3
 80162d8:	eba2 020e 	sub.w	r2, r2, lr
 80162dc:	eba9 0000 	sub.w	r0, r9, r0
 80162e0:	436a      	muls	r2, r5
 80162e2:	4348      	muls	r0, r1
 80162e4:	4282      	cmp	r2, r0
 80162e6:	9a02      	ldr	r2, [sp, #8]
 80162e8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80162ec:	445a      	add	r2, fp
 80162ee:	dc06      	bgt.n	80162fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80162f0:	9b07      	ldr	r3, [sp, #28]
 80162f2:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80162f6:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80162fa:	44a4      	add	ip, r4
 80162fc:	e75e      	b.n	80161bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80162fe:	9904      	ldr	r1, [sp, #16]
 8016300:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8016304:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8016308:	4433      	add	r3, r6
 801630a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801630e:	e5df      	b.n	8015ed0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016310:	9f06      	ldr	r7, [sp, #24]
 8016312:	9b04      	ldr	r3, [sp, #16]
 8016314:	1bc9      	subs	r1, r1, r7
 8016316:	fa0f f78a 	sxth.w	r7, sl
 801631a:	b289      	uxth	r1, r1
 801631c:	429f      	cmp	r7, r3
 801631e:	fa0f fe81 	sxth.w	lr, r1
 8016322:	dd23      	ble.n	801636c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8016324:	9a05      	ldr	r2, [sp, #20]
 8016326:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801632a:	9d07      	ldr	r5, [sp, #28]
 801632c:	ebaa 0202 	sub.w	r2, sl, r2
 8016330:	b292      	uxth	r2, r2
 8016332:	eba5 0a03 	sub.w	sl, r5, r3
 8016336:	b214      	sxth	r4, r2
 8016338:	eba9 0000 	sub.w	r0, r9, r0
 801633c:	9b02      	ldr	r3, [sp, #8]
 801633e:	fb0e f000 	mul.w	r0, lr, r0
 8016342:	fb04 fa0a 	mul.w	sl, r4, sl
 8016346:	00db      	lsls	r3, r3, #3
 8016348:	4550      	cmp	r0, sl
 801634a:	445b      	add	r3, fp
 801634c:	db03      	blt.n	8016356 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801634e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8016352:	4494      	add	ip, r2
 8016354:	e732      	b.n	80161bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016356:	9a04      	ldr	r2, [sp, #16]
 8016358:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801635c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8016360:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8016364:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016368:	4431      	add	r1, r6
 801636a:	e75c      	b.n	8016226 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801636c:	9b08      	ldr	r3, [sp, #32]
 801636e:	eba3 0308 	sub.w	r3, r3, r8
 8016372:	b29b      	uxth	r3, r3
 8016374:	2d06      	cmp	r5, #6
 8016376:	b218      	sxth	r0, r3
 8016378:	d813      	bhi.n	80163a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801637a:	9b07      	ldr	r3, [sp, #28]
 801637c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8016380:	1c6b      	adds	r3, r5, #1
 8016382:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8016386:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801638a:	9b01      	ldr	r3, [sp, #4]
 801638c:	9901      	ldr	r1, [sp, #4]
 801638e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016392:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8016396:	805a      	strh	r2, [r3, #2]
 8016398:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801639a:	809a      	strh	r2, [r3, #4]
 801639c:	f8a3 e006 	strh.w	lr, [r3, #6]
 80163a0:	e75f      	b.n	8016262 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80163a2:	9c02      	ldr	r4, [sp, #8]
 80163a4:	4570      	cmp	r0, lr
 80163a6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80163aa:	db0d      	blt.n	80163c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80163ac:	4431      	add	r1, r6
 80163ae:	9b06      	ldr	r3, [sp, #24]
 80163b0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80163b4:	b289      	uxth	r1, r1
 80163b6:	445c      	add	r4, fp
 80163b8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80163bc:	4419      	add	r1, r3
 80163be:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80163c2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80163c6:	e583      	b.n	8015ed0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80163c8:	445c      	add	r4, fp
 80163ca:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80163ce:	e79b      	b.n	8016308 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80163d0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80163d4:	1e65      	subs	r5, r4, #1
 80163d6:	b2ad      	uxth	r5, r5
 80163d8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80163dc:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80163e0:	42b5      	cmp	r5, r6
 80163e2:	d044      	beq.n	801646e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80163e4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80163e8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 80163ec:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80163f0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 80163f4:	4282      	cmp	r2, r0
 80163f6:	d11f      	bne.n	8016438 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80163f8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80163fc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8016400:	459c      	cmp	ip, r3
 8016402:	d119      	bne.n	8016438 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016404:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8016408:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801640c:	19d8      	adds	r0, r3, r7
 801640e:	b200      	sxth	r0, r0
 8016410:	4288      	cmp	r0, r1
 8016412:	d109      	bne.n	8016428 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8016414:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8016418:	4413      	add	r3, r2
 801641a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801641e:	4629      	mov	r1, r5
 8016420:	9801      	ldr	r0, [sp, #4]
 8016422:	f7ff fd2b 	bl	8015e7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016426:	e003      	b.n	8016430 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016428:	4411      	add	r1, r2
 801642a:	b209      	sxth	r1, r1
 801642c:	42b9      	cmp	r1, r7
 801642e:	d0f3      	beq.n	8016418 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8016430:	3d01      	subs	r5, #1
 8016432:	b2ad      	uxth	r5, r5
 8016434:	3c08      	subs	r4, #8
 8016436:	e7d3      	b.n	80163e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8016438:	42b9      	cmp	r1, r7
 801643a:	d1f9      	bne.n	8016430 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801643c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8016440:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016444:	4299      	cmp	r1, r3
 8016446:	d1f3      	bne.n	8016430 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016448:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801644c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8016450:	181f      	adds	r7, r3, r0
 8016452:	b23f      	sxth	r7, r7
 8016454:	42ba      	cmp	r2, r7
 8016456:	d105      	bne.n	8016464 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8016458:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801645c:	440b      	add	r3, r1
 801645e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016462:	e7dc      	b.n	801641e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8016464:	440a      	add	r2, r1
 8016466:	b212      	sxth	r2, r2
 8016468:	4290      	cmp	r0, r2
 801646a:	d1e1      	bne.n	8016430 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801646c:	e7f6      	b.n	801645c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801646e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8016472:	2e07      	cmp	r6, #7
 8016474:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8016478:	d812      	bhi.n	80164a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801647a:	1c75      	adds	r5, r6, #1
 801647c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8016480:	9d01      	ldr	r5, [sp, #4]
 8016482:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016486:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801648a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801648e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8016492:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8016496:	442c      	add	r4, r5
 8016498:	8061      	strh	r1, [r4, #2]
 801649a:	80a2      	strh	r2, [r4, #4]
 801649c:	80e3      	strh	r3, [r4, #6]
 801649e:	e581      	b.n	8015fa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80164a0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80164a4:	3e01      	subs	r6, #1
 80164a6:	445c      	add	r4, fp
 80164a8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80164ac:	f04f 37ff 	mov.w	r7, #4294967295
 80164b0:	2500      	movs	r5, #0
 80164b2:	9305      	str	r3, [sp, #20]
 80164b4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80164b8:	9302      	str	r3, [sp, #8]
 80164ba:	1e72      	subs	r2, r6, #1
 80164bc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80164c0:	9304      	str	r3, [sp, #16]
 80164c2:	4691      	mov	r9, r2
 80164c4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80164c8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80164cc:	bf14      	ite	ne
 80164ce:	9905      	ldrne	r1, [sp, #20]
 80164d0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80164d4:	6818      	ldr	r0, [r3, #0]
 80164d6:	9207      	str	r2, [sp, #28]
 80164d8:	bf18      	it	ne
 80164da:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80164de:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80164e2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80164e6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80164ea:	9306      	str	r3, [sp, #24]
 80164ec:	fb18 f801 	smulbb	r8, r8, r1
 80164f0:	6859      	ldr	r1, [r3, #4]
 80164f2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80164f6:	4671      	mov	r1, lr
 80164f8:	a80c      	add	r0, sp, #48	; 0x30
 80164fa:	f7ff fafb 	bl	8015af4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80164fe:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8016502:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8016506:	9b04      	ldr	r3, [sp, #16]
 8016508:	9a02      	ldr	r2, [sp, #8]
 801650a:	fb10 f001 	smulbb	r0, r0, r1
 801650e:	fb02 8803 	mla	r8, r2, r3, r8
 8016512:	eba0 0108 	sub.w	r1, r0, r8
 8016516:	f04f 0c08 	mov.w	ip, #8
 801651a:	fb90 f0fc 	sdiv	r0, r0, ip
 801651e:	4288      	cmp	r0, r1
 8016520:	dc20      	bgt.n	8016564 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8016522:	4551      	cmp	r1, sl
 8016524:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8016528:	da03      	bge.n	8016532 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801652a:	b1d9      	cbz	r1, 8016564 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801652c:	468a      	mov	sl, r1
 801652e:	464f      	mov	r7, r9
 8016530:	4635      	mov	r5, r6
 8016532:	f109 39ff 	add.w	r9, r9, #4294967295
 8016536:	f119 0f02 	cmn.w	r9, #2
 801653a:	d1c5      	bne.n	80164c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801653c:	4616      	mov	r6, r2
 801653e:	3201      	adds	r2, #1
 8016540:	f1a4 0408 	sub.w	r4, r4, #8
 8016544:	d1b6      	bne.n	80164b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8016546:	9b01      	ldr	r3, [sp, #4]
 8016548:	b2ac      	uxth	r4, r5
 801654a:	00ed      	lsls	r5, r5, #3
 801654c:	1958      	adds	r0, r3, r5
 801654e:	1c7b      	adds	r3, r7, #1
 8016550:	d10b      	bne.n	801656a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8016552:	4601      	mov	r1, r0
 8016554:	9803      	ldr	r0, [sp, #12]
 8016556:	f7ff facd 	bl	8015af4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801655a:	4621      	mov	r1, r4
 801655c:	9801      	ldr	r0, [sp, #4]
 801655e:	f7ff fc8d 	bl	8015e7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016562:	e4b5      	b.n	8015ed0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016564:	464f      	mov	r7, r9
 8016566:	4635      	mov	r5, r6
 8016568:	e7ed      	b.n	8016546 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801656a:	9b01      	ldr	r3, [sp, #4]
 801656c:	00ff      	lsls	r7, r7, #3
 801656e:	19d9      	adds	r1, r3, r7
 8016570:	f7ff fac0 	bl	8015af4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016574:	9b03      	ldr	r3, [sp, #12]
 8016576:	cb03      	ldmia	r3!, {r0, r1}
 8016578:	445f      	add	r7, fp
 801657a:	445d      	add	r5, fp
 801657c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8016580:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8016584:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8016588:	9b03      	ldr	r3, [sp, #12]
 801658a:	6869      	ldr	r1, [r5, #4]
 801658c:	c303      	stmia	r3!, {r0, r1}
 801658e:	e7e4      	b.n	801655a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08016590 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8016590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016594:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8016598:	b09b      	sub	sp, #108	; 0x6c
 801659a:	4604      	mov	r4, r0
 801659c:	4630      	mov	r0, r6
 801659e:	f7fa fa20 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80165a2:	4605      	mov	r5, r0
 80165a4:	b948      	cbnz	r0, 80165ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80165a6:	6823      	ldr	r3, [r4, #0]
 80165a8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80165ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80165ae:	4620      	mov	r0, r4
 80165b0:	4798      	blx	r3
 80165b2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80165b6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80165ba:	4bc6      	ldr	r3, [pc, #792]	; (80168d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80165bc:	681b      	ldr	r3, [r3, #0]
 80165be:	2b00      	cmp	r3, #0
 80165c0:	d03f      	beq.n	8016642 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80165c2:	4dc5      	ldr	r5, [pc, #788]	; (80168d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80165c4:	4628      	mov	r0, r5
 80165c6:	f7fa fa0c 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80165ca:	4606      	mov	r6, r0
 80165cc:	2800      	cmp	r0, #0
 80165ce:	d138      	bne.n	8016642 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80165d0:	4628      	mov	r0, r5
 80165d2:	f7ff f907 	bl	80157e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80165d6:	6823      	ldr	r3, [r4, #0]
 80165d8:	6829      	ldr	r1, [r5, #0]
 80165da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80165dc:	686a      	ldr	r2, [r5, #4]
 80165de:	4620      	mov	r0, r4
 80165e0:	4798      	blx	r3
 80165e2:	802e      	strh	r6, [r5, #0]
 80165e4:	806e      	strh	r6, [r5, #2]
 80165e6:	80ae      	strh	r6, [r5, #4]
 80165e8:	80ee      	strh	r6, [r5, #6]
 80165ea:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 80165ee:	4dbb      	ldr	r5, [pc, #748]	; (80168dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80165f0:	4640      	mov	r0, r8
 80165f2:	f7ff fbeb 	bl	8015dcc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80165f6:	882e      	ldrh	r6, [r5, #0]
 80165f8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80165fc:	4633      	mov	r3, r6
 80165fe:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016602:	42bb      	cmp	r3, r7
 8016604:	d224      	bcs.n	8016650 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016606:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801660a:	2907      	cmp	r1, #7
 801660c:	d816      	bhi.n	801663c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801660e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8016612:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8016616:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801661a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801661e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8016622:	1c4a      	adds	r2, r1, #1
 8016624:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8016628:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801662c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8016630:	f8a2 a002 	strh.w	sl, [r2, #2]
 8016634:	f8a2 e004 	strh.w	lr, [r2, #4]
 8016638:	f8a2 c006 	strh.w	ip, [r2, #6]
 801663c:	3301      	adds	r3, #1
 801663e:	b29b      	uxth	r3, r3
 8016640:	e7df      	b.n	8016602 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8016642:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016646:	2b00      	cmp	r3, #0
 8016648:	d1cf      	bne.n	80165ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801664a:	b01b      	add	sp, #108	; 0x6c
 801664c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016650:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8016654:	42b3      	cmp	r3, r6
 8016656:	d90c      	bls.n	8016672 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8016658:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801665c:	6822      	ldr	r2, [r4, #0]
 801665e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8016662:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8016664:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8016668:	4620      	mov	r0, r4
 801666a:	3601      	adds	r6, #1
 801666c:	47b8      	blx	r7
 801666e:	b2b6      	uxth	r6, r6
 8016670:	e7ee      	b.n	8016650 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016672:	4a9b      	ldr	r2, [pc, #620]	; (80168e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016674:	6813      	ldr	r3, [r2, #0]
 8016676:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801667a:	2b01      	cmp	r3, #1
 801667c:	4691      	mov	r9, r2
 801667e:	f040 80e2 	bne.w	8016846 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8016682:	8829      	ldrh	r1, [r5, #0]
 8016684:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8016688:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801668c:	33ae      	adds	r3, #174	; 0xae
 801668e:	2600      	movs	r6, #0
 8016690:	428f      	cmp	r7, r1
 8016692:	f103 0308 	add.w	r3, r3, #8
 8016696:	dd0a      	ble.n	80166ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8016698:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801669c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80166a0:	4402      	add	r2, r0
 80166a2:	b212      	sxth	r2, r2
 80166a4:	4296      	cmp	r6, r2
 80166a6:	bfb8      	it	lt
 80166a8:	4616      	movlt	r6, r2
 80166aa:	3101      	adds	r1, #1
 80166ac:	e7f0      	b.n	8016690 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80166ae:	4b8d      	ldr	r3, [pc, #564]	; (80168e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80166b0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 80168e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80166b4:	881b      	ldrh	r3, [r3, #0]
 80166b6:	2b0f      	cmp	r3, #15
 80166b8:	bf88      	it	hi
 80166ba:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80166be:	f04f 0300 	mov.w	r3, #0
 80166c2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80166c6:	bf98      	it	ls
 80166c8:	f04f 0b01 	movls.w	fp, #1
 80166cc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80166d0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80166d4:	4b82      	ldr	r3, [pc, #520]	; (80168e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80166d6:	4438      	add	r0, r7
 80166d8:	b207      	sxth	r7, r0
 80166da:	6818      	ldr	r0, [r3, #0]
 80166dc:	42b7      	cmp	r7, r6
 80166de:	6803      	ldr	r3, [r0, #0]
 80166e0:	f280 8083 	bge.w	80167ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80166e4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80166e8:	4798      	blx	r3
 80166ea:	eb07 030b 	add.w	r3, r7, fp
 80166ee:	4298      	cmp	r0, r3
 80166f0:	da07      	bge.n	8016702 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80166f2:	42b0      	cmp	r0, r6
 80166f4:	da05      	bge.n	8016702 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80166f6:	4287      	cmp	r7, r0
 80166f8:	dd6c      	ble.n	80167d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80166fa:	2f00      	cmp	r7, #0
 80166fc:	dd6a      	ble.n	80167d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80166fe:	4630      	mov	r0, r6
 8016700:	e004      	b.n	801670c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8016702:	4287      	cmp	r7, r0
 8016704:	dcfb      	bgt.n	80166fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8016706:	42b0      	cmp	r0, r6
 8016708:	bfa8      	it	ge
 801670a:	4630      	movge	r0, r6
 801670c:	4b76      	ldr	r3, [pc, #472]	; (80168e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801670e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8016712:	1bc0      	subs	r0, r0, r7
 8016714:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016718:	882f      	ldrh	r7, [r5, #0]
 801671a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801671e:	2200      	movs	r2, #0
 8016720:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016724:	f8ad 001a 	strh.w	r0, [sp, #26]
 8016728:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801672c:	42bb      	cmp	r3, r7
 801672e:	d9cd      	bls.n	80166cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8016730:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8016734:	ab07      	add	r3, sp, #28
 8016736:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801673a:	6851      	ldr	r1, [r2, #4]
 801673c:	c303      	stmia	r3!, {r0, r1}
 801673e:	a905      	add	r1, sp, #20
 8016740:	a807      	add	r0, sp, #28
 8016742:	f7ff f93e 	bl	80159c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016746:	2800      	cmp	r0, #0
 8016748:	d04c      	beq.n	80167e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801674a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801674e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8016752:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8016756:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801675a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801675e:	9302      	str	r3, [sp, #8]
 8016760:	4686      	mov	lr, r0
 8016762:	4290      	cmp	r0, r2
 8016764:	4450      	add	r0, sl
 8016766:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801676a:	bfb8      	it	lt
 801676c:	4696      	movlt	lr, r2
 801676e:	4452      	add	r2, sl
 8016770:	4299      	cmp	r1, r3
 8016772:	b280      	uxth	r0, r0
 8016774:	b292      	uxth	r2, r2
 8016776:	468c      	mov	ip, r1
 8016778:	fa0f fa82 	sxth.w	sl, r2
 801677c:	bfb8      	it	lt
 801677e:	469c      	movlt	ip, r3
 8016780:	b203      	sxth	r3, r0
 8016782:	4553      	cmp	r3, sl
 8016784:	bfb8      	it	lt
 8016786:	4602      	movlt	r2, r0
 8016788:	eba2 020e 	sub.w	r2, r2, lr
 801678c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016790:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8016794:	9b02      	ldr	r3, [sp, #8]
 8016796:	f8ad e01c 	strh.w	lr, [sp, #28]
 801679a:	4411      	add	r1, r2
 801679c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80167a0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80167a4:	4413      	add	r3, r2
 80167a6:	b289      	uxth	r1, r1
 80167a8:	b29b      	uxth	r3, r3
 80167aa:	b208      	sxth	r0, r1
 80167ac:	b21a      	sxth	r2, r3
 80167ae:	4290      	cmp	r0, r2
 80167b0:	bfb8      	it	lt
 80167b2:	460b      	movlt	r3, r1
 80167b4:	eba3 030c 	sub.w	r3, r3, ip
 80167b8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80167bc:	a807      	add	r0, sp, #28
 80167be:	f7fa f910 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80167c2:	b920      	cbnz	r0, 80167ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80167c4:	6823      	ldr	r3, [r4, #0]
 80167c6:	a907      	add	r1, sp, #28
 80167c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80167ca:	4620      	mov	r0, r4
 80167cc:	4798      	blx	r3
 80167ce:	3701      	adds	r7, #1
 80167d0:	b2bf      	uxth	r7, r7
 80167d2:	e7a9      	b.n	8016728 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80167d4:	f8d9 0000 	ldr.w	r0, [r9]
 80167d8:	6803      	ldr	r3, [r0, #0]
 80167da:	2101      	movs	r1, #1
 80167dc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80167e0:	4798      	blx	r3
 80167e2:	e773      	b.n	80166cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80167e4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80167e8:	e7e8      	b.n	80167bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80167ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80167ec:	4798      	blx	r3
 80167ee:	4b3f      	ldr	r3, [pc, #252]	; (80168ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80167f0:	781b      	ldrb	r3, [r3, #0]
 80167f2:	2b00      	cmp	r3, #0
 80167f4:	f43f af29 	beq.w	801664a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80167f8:	2300      	movs	r3, #0
 80167fa:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80167fe:	882b      	ldrh	r3, [r5, #0]
 8016800:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8016804:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016808:	42ab      	cmp	r3, r5
 801680a:	f4bf af1e 	bcs.w	801664a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801680e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8016812:	2907      	cmp	r1, #7
 8016814:	d814      	bhi.n	8016840 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8016816:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801681a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801681e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8016822:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8016826:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801682a:	1c4a      	adds	r2, r1, #1
 801682c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8016830:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8016834:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8016838:	f8a2 c002 	strh.w	ip, [r2, #2]
 801683c:	8097      	strh	r7, [r2, #4]
 801683e:	80d6      	strh	r6, [r2, #6]
 8016840:	3301      	adds	r3, #1
 8016842:	b29b      	uxth	r3, r3
 8016844:	e7e0      	b.n	8016808 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8016846:	2b02      	cmp	r3, #2
 8016848:	f040 8133 	bne.w	8016ab2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801684c:	4b28      	ldr	r3, [pc, #160]	; (80168f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801684e:	781b      	ldrb	r3, [r3, #0]
 8016850:	2b01      	cmp	r3, #1
 8016852:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8016856:	f000 8098 	beq.w	801698a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801685a:	882a      	ldrh	r2, [r5, #0]
 801685c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8016860:	3201      	adds	r2, #1
 8016862:	b292      	uxth	r2, r2
 8016864:	2900      	cmp	r1, #0
 8016866:	d0c2      	beq.n	80167ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016868:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801686c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8016870:	441e      	add	r6, r3
 8016872:	b236      	sxth	r6, r6
 8016874:	4694      	mov	ip, r2
 8016876:	f04f 0900 	mov.w	r9, #0
 801687a:	fa1f f38c 	uxth.w	r3, ip
 801687e:	4299      	cmp	r1, r3
 8016880:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8016884:	f240 80bf 	bls.w	8016a06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8016888:	4427      	add	r7, r4
 801688a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801688e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8016892:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8016896:	4283      	cmp	r3, r0
 8016898:	f340 80a1 	ble.w	80169de <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 801689c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80168a0:	4406      	add	r6, r0
 80168a2:	b236      	sxth	r6, r6
 80168a4:	429e      	cmp	r6, r3
 80168a6:	bfa8      	it	ge
 80168a8:	461e      	movge	r6, r3
 80168aa:	46e1      	mov	r9, ip
 80168ac:	f10c 0c01 	add.w	ip, ip, #1
 80168b0:	e7e3      	b.n	801687a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80168b2:	d10a      	bne.n	80168ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80168b4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80168b8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80168bc:	4562      	cmp	r2, ip
 80168be:	bfb8      	it	lt
 80168c0:	4662      	movlt	r2, ip
 80168c2:	4288      	cmp	r0, r1
 80168c4:	bfb8      	it	lt
 80168c6:	461f      	movlt	r7, r3
 80168c8:	e087      	b.n	80169da <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80168ca:	428a      	cmp	r2, r1
 80168cc:	bfb8      	it	lt
 80168ce:	460a      	movlt	r2, r1
 80168d0:	e083      	b.n	80169da <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80168d2:	bf00      	nop
 80168d4:	20012df4 	.word	0x20012df4
 80168d8:	20012e00 	.word	0x20012e00
 80168dc:	20000088 	.word	0x20000088
 80168e0:	20012db4 	.word	0x20012db4
 80168e4:	20012daa 	.word	0x20012daa
 80168e8:	20012da8 	.word	0x20012da8
 80168ec:	20012db2 	.word	0x20012db2
 80168f0:	20012dac 	.word	0x20012dac
 80168f4:	19a1      	adds	r1, r4, r6
 80168f6:	ab07      	add	r3, sp, #28
 80168f8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80168fc:	6849      	ldr	r1, [r1, #4]
 80168fe:	c303      	stmia	r3!, {r0, r1}
 8016900:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016904:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016908:	2b13      	cmp	r3, #19
 801690a:	bfd8      	it	le
 801690c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8016910:	f8ad 201c 	strh.w	r2, [sp, #28]
 8016914:	440b      	add	r3, r1
 8016916:	1a9b      	subs	r3, r3, r2
 8016918:	a807      	add	r0, sp, #28
 801691a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801691e:	f7fe ff7b 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016922:	a807      	add	r0, sp, #28
 8016924:	f7fa f85d 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016928:	bb78      	cbnz	r0, 801698a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801692a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801692e:	f8d9 0000 	ldr.w	r0, [r9]
 8016932:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016936:	f8d0 e000 	ldr.w	lr, [r0]
 801693a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801693e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016942:	f1bc 0f14 	cmp.w	ip, #20
 8016946:	bfa8      	it	ge
 8016948:	f04f 0c14 	movge.w	ip, #20
 801694c:	fa1f fc8c 	uxth.w	ip, ip
 8016950:	f8cd c000 	str.w	ip, [sp]
 8016954:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8016958:	47d8      	blx	fp
 801695a:	4683      	mov	fp, r0
 801695c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016960:	a807      	add	r0, sp, #28
 8016962:	f7fe ff3f 	bl	80157e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016966:	6823      	ldr	r3, [r4, #0]
 8016968:	4426      	add	r6, r4
 801696a:	4620      	mov	r0, r4
 801696c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801696e:	a907      	add	r1, sp, #28
 8016970:	4798      	blx	r3
 8016972:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016976:	eba0 000b 	sub.w	r0, r0, fp
 801697a:	b200      	sxth	r0, r0
 801697c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8016980:	b918      	cbnz	r0, 801698a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016982:	b2b9      	uxth	r1, r7
 8016984:	4650      	mov	r0, sl
 8016986:	f7ff fa79 	bl	8015e7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801698a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 801698e:	f1bb 0f00 	cmp.w	fp, #0
 8016992:	f43f af2c 	beq.w	80167ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016996:	882b      	ldrh	r3, [r5, #0]
 8016998:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 801699c:	3301      	adds	r3, #1
 801699e:	b29b      	uxth	r3, r3
 80169a0:	2700      	movs	r7, #0
 80169a2:	b299      	uxth	r1, r3
 80169a4:	458b      	cmp	fp, r1
 80169a6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80169aa:	d9a3      	bls.n	80168f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80169ac:	4426      	add	r6, r4
 80169ae:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80169b2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80169b6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80169ba:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80169be:	4408      	add	r0, r1
 80169c0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 80169c4:	4461      	add	r1, ip
 80169c6:	b200      	sxth	r0, r0
 80169c8:	b209      	sxth	r1, r1
 80169ca:	4288      	cmp	r0, r1
 80169cc:	f6bf af71 	bge.w	80168b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 80169d0:	4584      	cmp	ip, r0
 80169d2:	4662      	mov	r2, ip
 80169d4:	461f      	mov	r7, r3
 80169d6:	bfb8      	it	lt
 80169d8:	4602      	movlt	r2, r0
 80169da:	3301      	adds	r3, #1
 80169dc:	e7e1      	b.n	80169a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 80169de:	d10e      	bne.n	80169fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 80169e0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 80169e4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 80169e8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 80169ec:	4473      	add	r3, lr
 80169ee:	b21b      	sxth	r3, r3
 80169f0:	429e      	cmp	r6, r3
 80169f2:	bfa8      	it	ge
 80169f4:	461e      	movge	r6, r3
 80169f6:	4287      	cmp	r7, r0
 80169f8:	bfb8      	it	lt
 80169fa:	46e1      	movlt	r9, ip
 80169fc:	e756      	b.n	80168ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80169fe:	4286      	cmp	r6, r0
 8016a00:	bfa8      	it	ge
 8016a02:	4606      	movge	r6, r0
 8016a04:	e752      	b.n	80168ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016a06:	eb0a 0007 	add.w	r0, sl, r7
 8016a0a:	4427      	add	r7, r4
 8016a0c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8016a10:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8016a14:	f1bb 0f13 	cmp.w	fp, #19
 8016a18:	bfde      	ittt	le
 8016a1a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8016a1e:	445e      	addle	r6, fp
 8016a20:	b236      	sxthle	r6, r6
 8016a22:	f7f9 ffde 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016a26:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8016a2a:	2800      	cmp	r0, #0
 8016a2c:	f47f af1a 	bne.w	8016864 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8016a30:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8016a34:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016a38:	482a      	ldr	r0, [pc, #168]	; (8016ae4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8016a3a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8016a3e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8016a42:	6800      	ldr	r0, [r0, #0]
 8016a44:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016a48:	1ab6      	subs	r6, r6, r2
 8016a4a:	2e14      	cmp	r6, #20
 8016a4c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016a50:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016a54:	bfa8      	it	ge
 8016a56:	2614      	movge	r6, #20
 8016a58:	f8d0 c000 	ldr.w	ip, [r0]
 8016a5c:	b2b6      	uxth	r6, r6
 8016a5e:	fa1f fb8b 	uxth.w	fp, fp
 8016a62:	455e      	cmp	r6, fp
 8016a64:	bf94      	ite	ls
 8016a66:	9600      	strls	r6, [sp, #0]
 8016a68:	f8cd b000 	strhi.w	fp, [sp]
 8016a6c:	b292      	uxth	r2, r2
 8016a6e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8016a72:	b29b      	uxth	r3, r3
 8016a74:	b289      	uxth	r1, r1
 8016a76:	47b0      	blx	r6
 8016a78:	6823      	ldr	r3, [r4, #0]
 8016a7a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016a7e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016a80:	a907      	add	r1, sp, #28
 8016a82:	4620      	mov	r0, r4
 8016a84:	4798      	blx	r3
 8016a86:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8016a8a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8016a8e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8016a92:	1a5b      	subs	r3, r3, r1
 8016a94:	440a      	add	r2, r1
 8016a96:	b21b      	sxth	r3, r3
 8016a98:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8016a9c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8016aa0:	2b00      	cmp	r3, #0
 8016aa2:	f47f aeda 	bne.w	801685a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016aa6:	fa1f f189 	uxth.w	r1, r9
 8016aaa:	4650      	mov	r0, sl
 8016aac:	f7ff f9e6 	bl	8015e7c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016ab0:	e6d3      	b.n	801685a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8016ab2:	882e      	ldrh	r6, [r5, #0]
 8016ab4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8016ab8:	42b3      	cmp	r3, r6
 8016aba:	f67f ae98 	bls.w	80167ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016abe:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8016ac2:	ab07      	add	r3, sp, #28
 8016ac4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8016ac8:	6851      	ldr	r1, [r2, #4]
 8016aca:	c303      	stmia	r3!, {r0, r1}
 8016acc:	a807      	add	r0, sp, #28
 8016ace:	f7f9 ff88 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016ad2:	b920      	cbnz	r0, 8016ade <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8016ad4:	6823      	ldr	r3, [r4, #0]
 8016ad6:	a907      	add	r1, sp, #28
 8016ad8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016ada:	4620      	mov	r0, r4
 8016adc:	4798      	blx	r3
 8016ade:	3601      	adds	r6, #1
 8016ae0:	b2b6      	uxth	r6, r6
 8016ae2:	e7e7      	b.n	8016ab4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8016ae4:	20012db4 	.word	0x20012db4

08016ae8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8016ae8:	4b03      	ldr	r3, [pc, #12]	; (8016af8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8016aea:	2200      	movs	r2, #0
 8016aec:	801a      	strh	r2, [r3, #0]
 8016aee:	805a      	strh	r2, [r3, #2]
 8016af0:	809a      	strh	r2, [r3, #4]
 8016af2:	80da      	strh	r2, [r3, #6]
 8016af4:	4770      	bx	lr
 8016af6:	bf00      	nop
 8016af8:	20012e00 	.word	0x20012e00

08016afc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8016afc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b00:	4606      	mov	r6, r0
 8016b02:	b09d      	sub	sp, #116	; 0x74
 8016b04:	a803      	add	r0, sp, #12
 8016b06:	4614      	mov	r4, r2
 8016b08:	468a      	mov	sl, r1
 8016b0a:	461d      	mov	r5, r3
 8016b0c:	f000 feca 	bl	80178a4 <_ZN8touchgfx12TextProviderC1Ev>
 8016b10:	6833      	ldr	r3, [r6, #0]
 8016b12:	4630      	mov	r0, r6
 8016b14:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016b16:	4798      	blx	r3
 8016b18:	6833      	ldr	r3, [r6, #0]
 8016b1a:	4607      	mov	r7, r0
 8016b1c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016b1e:	4630      	mov	r0, r6
 8016b20:	4798      	blx	r3
 8016b22:	462a      	mov	r2, r5
 8016b24:	9000      	str	r0, [sp, #0]
 8016b26:	4621      	mov	r1, r4
 8016b28:	463b      	mov	r3, r7
 8016b2a:	a803      	add	r0, sp, #12
 8016b2c:	f000 ff15 	bl	801795a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016b30:	2500      	movs	r5, #0
 8016b32:	462c      	mov	r4, r5
 8016b34:	46a9      	mov	r9, r5
 8016b36:	46a8      	mov	r8, r5
 8016b38:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8016b3c:	2300      	movs	r3, #0
 8016b3e:	9302      	str	r3, [sp, #8]
 8016b40:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016b44:	429c      	cmp	r4, r3
 8016b46:	d002      	beq.n	8016b4e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8016b48:	455c      	cmp	r4, fp
 8016b4a:	bf18      	it	ne
 8016b4c:	4625      	movne	r5, r4
 8016b4e:	ab02      	add	r3, sp, #8
 8016b50:	4632      	mov	r2, r6
 8016b52:	4651      	mov	r1, sl
 8016b54:	a803      	add	r0, sp, #12
 8016b56:	f001 fa03 	bl	8017f60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016b5a:	4604      	mov	r4, r0
 8016b5c:	b108      	cbz	r0, 8016b62 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8016b5e:	280a      	cmp	r0, #10
 8016b60:	d10a      	bne.n	8016b78 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8016b62:	45c1      	cmp	r9, r8
 8016b64:	bf38      	it	cc
 8016b66:	46c1      	movcc	r9, r8
 8016b68:	f04f 0800 	mov.w	r8, #0
 8016b6c:	2c00      	cmp	r4, #0
 8016b6e:	d1e5      	bne.n	8016b3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016b70:	4648      	mov	r0, r9
 8016b72:	b01d      	add	sp, #116	; 0x74
 8016b74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b78:	9a02      	ldr	r2, [sp, #8]
 8016b7a:	2a00      	cmp	r2, #0
 8016b7c:	d0de      	beq.n	8016b3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016b7e:	7b57      	ldrb	r7, [r2, #13]
 8016b80:	6833      	ldr	r3, [r6, #0]
 8016b82:	8894      	ldrh	r4, [r2, #4]
 8016b84:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016b86:	007f      	lsls	r7, r7, #1
 8016b88:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8016b8c:	7a97      	ldrb	r7, [r2, #10]
 8016b8e:	4629      	mov	r1, r5
 8016b90:	4307      	orrs	r7, r0
 8016b92:	4630      	mov	r0, r6
 8016b94:	4798      	blx	r3
 8016b96:	4438      	add	r0, r7
 8016b98:	4480      	add	r8, r0
 8016b9a:	fa1f f888 	uxth.w	r8, r8
 8016b9e:	e7e5      	b.n	8016b6c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08016ba0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8016ba0:	b508      	push	{r3, lr}
 8016ba2:	6803      	ldr	r3, [r0, #0]
 8016ba4:	68db      	ldr	r3, [r3, #12]
 8016ba6:	4798      	blx	r3
 8016ba8:	b128      	cbz	r0, 8016bb6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8016baa:	7b43      	ldrb	r3, [r0, #13]
 8016bac:	7a80      	ldrb	r0, [r0, #10]
 8016bae:	005b      	lsls	r3, r3, #1
 8016bb0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016bb4:	4318      	orrs	r0, r3
 8016bb6:	bd08      	pop	{r3, pc}

08016bb8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8016bb8:	b40e      	push	{r1, r2, r3}
 8016bba:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016bbc:	b09e      	sub	sp, #120	; 0x78
 8016bbe:	ab23      	add	r3, sp, #140	; 0x8c
 8016bc0:	4605      	mov	r5, r0
 8016bc2:	f853 4b04 	ldr.w	r4, [r3], #4
 8016bc6:	9303      	str	r3, [sp, #12]
 8016bc8:	a805      	add	r0, sp, #20
 8016bca:	f000 fe6b 	bl	80178a4 <_ZN8touchgfx12TextProviderC1Ev>
 8016bce:	682b      	ldr	r3, [r5, #0]
 8016bd0:	4628      	mov	r0, r5
 8016bd2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016bd4:	4798      	blx	r3
 8016bd6:	682b      	ldr	r3, [r5, #0]
 8016bd8:	4606      	mov	r6, r0
 8016bda:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016bdc:	4628      	mov	r0, r5
 8016bde:	4798      	blx	r3
 8016be0:	4633      	mov	r3, r6
 8016be2:	ae1e      	add	r6, sp, #120	; 0x78
 8016be4:	4621      	mov	r1, r4
 8016be6:	9000      	str	r0, [sp, #0]
 8016be8:	9a03      	ldr	r2, [sp, #12]
 8016bea:	2400      	movs	r4, #0
 8016bec:	a805      	add	r0, sp, #20
 8016bee:	f000 feb4 	bl	801795a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016bf2:	f846 4d68 	str.w	r4, [r6, #-104]!
 8016bf6:	462a      	mov	r2, r5
 8016bf8:	4633      	mov	r3, r6
 8016bfa:	4621      	mov	r1, r4
 8016bfc:	a805      	add	r0, sp, #20
 8016bfe:	f001 f9af 	bl	8017f60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016c02:	b1f0      	cbz	r0, 8016c42 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8016c04:	280a      	cmp	r0, #10
 8016c06:	d018      	beq.n	8016c3a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016c08:	9f04      	ldr	r7, [sp, #16]
 8016c0a:	b1b7      	cbz	r7, 8016c3a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016c0c:	7b78      	ldrb	r0, [r7, #13]
 8016c0e:	7a3b      	ldrb	r3, [r7, #8]
 8016c10:	88ea      	ldrh	r2, [r5, #6]
 8016c12:	00c1      	lsls	r1, r0, #3
 8016c14:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016c18:	4319      	orrs	r1, r3
 8016c1a:	0643      	lsls	r3, r0, #25
 8016c1c:	bf44      	itt	mi
 8016c1e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8016c22:	b219      	sxthmi	r1, r3
 8016c24:	0100      	lsls	r0, r0, #4
 8016c26:	79fb      	ldrb	r3, [r7, #7]
 8016c28:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8016c2c:	4303      	orrs	r3, r0
 8016c2e:	4413      	add	r3, r2
 8016c30:	1a5b      	subs	r3, r3, r1
 8016c32:	b21b      	sxth	r3, r3
 8016c34:	429c      	cmp	r4, r3
 8016c36:	bfb8      	it	lt
 8016c38:	461c      	movlt	r4, r3
 8016c3a:	4633      	mov	r3, r6
 8016c3c:	462a      	mov	r2, r5
 8016c3e:	2100      	movs	r1, #0
 8016c40:	e7dc      	b.n	8016bfc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8016c42:	b2a0      	uxth	r0, r4
 8016c44:	b01e      	add	sp, #120	; 0x78
 8016c46:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016c4a:	b003      	add	sp, #12
 8016c4c:	4770      	bx	lr

08016c4e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8016c4e:	7a43      	ldrb	r3, [r0, #9]
 8016c50:	8880      	ldrh	r0, [r0, #4]
 8016c52:	4418      	add	r0, r3
 8016c54:	b280      	uxth	r0, r0
 8016c56:	4770      	bx	lr

08016c58 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8016c58:	6803      	ldr	r3, [r0, #0]
 8016c5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016c5c:	4718      	bx	r3

08016c5e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8016c5e:	b40e      	push	{r1, r2, r3}
 8016c60:	b570      	push	{r4, r5, r6, lr}
 8016c62:	b09d      	sub	sp, #116	; 0x74
 8016c64:	ab21      	add	r3, sp, #132	; 0x84
 8016c66:	4604      	mov	r4, r0
 8016c68:	f853 5b04 	ldr.w	r5, [r3], #4
 8016c6c:	9302      	str	r3, [sp, #8]
 8016c6e:	a803      	add	r0, sp, #12
 8016c70:	f000 fe18 	bl	80178a4 <_ZN8touchgfx12TextProviderC1Ev>
 8016c74:	6823      	ldr	r3, [r4, #0]
 8016c76:	4620      	mov	r0, r4
 8016c78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016c7a:	4798      	blx	r3
 8016c7c:	6823      	ldr	r3, [r4, #0]
 8016c7e:	4606      	mov	r6, r0
 8016c80:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016c82:	4620      	mov	r0, r4
 8016c84:	4798      	blx	r3
 8016c86:	4633      	mov	r3, r6
 8016c88:	9000      	str	r0, [sp, #0]
 8016c8a:	9a02      	ldr	r2, [sp, #8]
 8016c8c:	4629      	mov	r1, r5
 8016c8e:	a803      	add	r0, sp, #12
 8016c90:	f000 fe63 	bl	801795a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016c94:	a803      	add	r0, sp, #12
 8016c96:	f001 fa31 	bl	80180fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016c9a:	2401      	movs	r4, #1
 8016c9c:	b2a3      	uxth	r3, r4
 8016c9e:	b140      	cbz	r0, 8016cb2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8016ca0:	280a      	cmp	r0, #10
 8016ca2:	bf08      	it	eq
 8016ca4:	3301      	addeq	r3, #1
 8016ca6:	a803      	add	r0, sp, #12
 8016ca8:	bf08      	it	eq
 8016caa:	b21c      	sxtheq	r4, r3
 8016cac:	f001 fa26 	bl	80180fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8016cb0:	e7f4      	b.n	8016c9c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8016cb2:	4618      	mov	r0, r3
 8016cb4:	b01d      	add	sp, #116	; 0x74
 8016cb6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016cba:	b003      	add	sp, #12
 8016cbc:	4770      	bx	lr

08016cbe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8016cbe:	b40e      	push	{r1, r2, r3}
 8016cc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016cc2:	b09e      	sub	sp, #120	; 0x78
 8016cc4:	ab23      	add	r3, sp, #140	; 0x8c
 8016cc6:	4604      	mov	r4, r0
 8016cc8:	f853 5b04 	ldr.w	r5, [r3], #4
 8016ccc:	9303      	str	r3, [sp, #12]
 8016cce:	a805      	add	r0, sp, #20
 8016cd0:	f000 fde8 	bl	80178a4 <_ZN8touchgfx12TextProviderC1Ev>
 8016cd4:	6823      	ldr	r3, [r4, #0]
 8016cd6:	4620      	mov	r0, r4
 8016cd8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016cda:	4798      	blx	r3
 8016cdc:	6823      	ldr	r3, [r4, #0]
 8016cde:	4606      	mov	r6, r0
 8016ce0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016ce2:	4620      	mov	r0, r4
 8016ce4:	4798      	blx	r3
 8016ce6:	4633      	mov	r3, r6
 8016ce8:	4629      	mov	r1, r5
 8016cea:	9000      	str	r0, [sp, #0]
 8016cec:	9a03      	ldr	r2, [sp, #12]
 8016cee:	a805      	add	r0, sp, #20
 8016cf0:	ad1e      	add	r5, sp, #120	; 0x78
 8016cf2:	f000 fe32 	bl	801795a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016cf6:	2100      	movs	r1, #0
 8016cf8:	f845 1d68 	str.w	r1, [r5, #-104]!
 8016cfc:	4622      	mov	r2, r4
 8016cfe:	462b      	mov	r3, r5
 8016d00:	a805      	add	r0, sp, #20
 8016d02:	f001 f92d 	bl	8017f60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016d06:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8016d0a:	b1d8      	cbz	r0, 8016d44 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8016d0c:	280a      	cmp	r0, #10
 8016d0e:	d012      	beq.n	8016d36 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016d10:	9804      	ldr	r0, [sp, #16]
 8016d12:	b180      	cbz	r0, 8016d36 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016d14:	7b47      	ldrb	r7, [r0, #13]
 8016d16:	88e2      	ldrh	r2, [r4, #6]
 8016d18:	00fb      	lsls	r3, r7, #3
 8016d1a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016d1e:	7a03      	ldrb	r3, [r0, #8]
 8016d20:	430b      	orrs	r3, r1
 8016d22:	0679      	lsls	r1, r7, #25
 8016d24:	bf44      	itt	mi
 8016d26:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016d2a:	b21b      	sxthmi	r3, r3
 8016d2c:	1ad3      	subs	r3, r2, r3
 8016d2e:	b21b      	sxth	r3, r3
 8016d30:	429e      	cmp	r6, r3
 8016d32:	bfa8      	it	ge
 8016d34:	461e      	movge	r6, r3
 8016d36:	462b      	mov	r3, r5
 8016d38:	4622      	mov	r2, r4
 8016d3a:	2100      	movs	r1, #0
 8016d3c:	a805      	add	r0, sp, #20
 8016d3e:	f001 f90f 	bl	8017f60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016d42:	e7e2      	b.n	8016d0a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8016d44:	4630      	mov	r0, r6
 8016d46:	b01e      	add	sp, #120	; 0x78
 8016d48:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016d4c:	b003      	add	sp, #12
 8016d4e:	4770      	bx	lr

08016d50 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016d50:	b513      	push	{r0, r1, r4, lr}
 8016d52:	6803      	ldr	r3, [r0, #0]
 8016d54:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016d58:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016d5c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016d60:	2400      	movs	r4, #0
 8016d62:	9400      	str	r4, [sp, #0]
 8016d64:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016d68:	691b      	ldr	r3, [r3, #16]
 8016d6a:	4669      	mov	r1, sp
 8016d6c:	4798      	blx	r3
 8016d6e:	b002      	add	sp, #8
 8016d70:	bd10      	pop	{r4, pc}

08016d72 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8016d72:	b538      	push	{r3, r4, r5, lr}
 8016d74:	680b      	ldr	r3, [r1, #0]
 8016d76:	460c      	mov	r4, r1
 8016d78:	68db      	ldr	r3, [r3, #12]
 8016d7a:	4605      	mov	r5, r0
 8016d7c:	4798      	blx	r3
 8016d7e:	6823      	ldr	r3, [r4, #0]
 8016d80:	4620      	mov	r0, r4
 8016d82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016d84:	4629      	mov	r1, r5
 8016d86:	4798      	blx	r3
 8016d88:	4628      	mov	r0, r5
 8016d8a:	bd38      	pop	{r3, r4, r5, pc}

08016d8c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8016d8c:	b410      	push	{r4}
 8016d8e:	880a      	ldrh	r2, [r1, #0]
 8016d90:	8884      	ldrh	r4, [r0, #4]
 8016d92:	4422      	add	r2, r4
 8016d94:	800a      	strh	r2, [r1, #0]
 8016d96:	88c4      	ldrh	r4, [r0, #6]
 8016d98:	884a      	ldrh	r2, [r1, #2]
 8016d9a:	4422      	add	r2, r4
 8016d9c:	804a      	strh	r2, [r1, #2]
 8016d9e:	6940      	ldr	r0, [r0, #20]
 8016da0:	b120      	cbz	r0, 8016dac <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8016da2:	6803      	ldr	r3, [r0, #0]
 8016da4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016da8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016daa:	4718      	bx	r3
 8016dac:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016db0:	4770      	bx	lr

08016db2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8016db2:	b570      	push	{r4, r5, r6, lr}
 8016db4:	8882      	ldrh	r2, [r0, #4]
 8016db6:	880b      	ldrh	r3, [r1, #0]
 8016db8:	4413      	add	r3, r2
 8016dba:	800b      	strh	r3, [r1, #0]
 8016dbc:	88c2      	ldrh	r2, [r0, #6]
 8016dbe:	884b      	ldrh	r3, [r1, #2]
 8016dc0:	460c      	mov	r4, r1
 8016dc2:	4413      	add	r3, r2
 8016dc4:	804b      	strh	r3, [r1, #2]
 8016dc6:	4605      	mov	r5, r0
 8016dc8:	1d01      	adds	r1, r0, #4
 8016dca:	4620      	mov	r0, r4
 8016dcc:	f7f9 fdc6 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 8016dd0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016dd4:	2b00      	cmp	r3, #0
 8016dd6:	dd0b      	ble.n	8016df0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016dd8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016ddc:	2b00      	cmp	r3, #0
 8016dde:	dd07      	ble.n	8016df0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016de0:	6968      	ldr	r0, [r5, #20]
 8016de2:	b128      	cbz	r0, 8016df0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016de4:	6803      	ldr	r3, [r0, #0]
 8016de6:	4621      	mov	r1, r4
 8016de8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016dea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016dee:	4718      	bx	r3
 8016df0:	bd70      	pop	{r4, r5, r6, pc}
	...

08016df4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8016df4:	b570      	push	{r4, r5, r6, lr}
 8016df6:	8882      	ldrh	r2, [r0, #4]
 8016df8:	880b      	ldrh	r3, [r1, #0]
 8016dfa:	4413      	add	r3, r2
 8016dfc:	800b      	strh	r3, [r1, #0]
 8016dfe:	88c2      	ldrh	r2, [r0, #6]
 8016e00:	884b      	ldrh	r3, [r1, #2]
 8016e02:	460c      	mov	r4, r1
 8016e04:	4413      	add	r3, r2
 8016e06:	804b      	strh	r3, [r1, #2]
 8016e08:	4605      	mov	r5, r0
 8016e0a:	1d01      	adds	r1, r0, #4
 8016e0c:	4620      	mov	r0, r4
 8016e0e:	f7f9 fda5 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 8016e12:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016e16:	2b00      	cmp	r3, #0
 8016e18:	dd19      	ble.n	8016e4e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016e1a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016e1e:	2b00      	cmp	r3, #0
 8016e20:	dd15      	ble.n	8016e4e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016e22:	6968      	ldr	r0, [r5, #20]
 8016e24:	b128      	cbz	r0, 8016e32 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8016e26:	6803      	ldr	r3, [r0, #0]
 8016e28:	4621      	mov	r1, r4
 8016e2a:	691b      	ldr	r3, [r3, #16]
 8016e2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016e30:	4718      	bx	r3
 8016e32:	4b07      	ldr	r3, [pc, #28]	; (8016e50 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8016e34:	681b      	ldr	r3, [r3, #0]
 8016e36:	3304      	adds	r3, #4
 8016e38:	429d      	cmp	r5, r3
 8016e3a:	d108      	bne.n	8016e4e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016e3c:	f7fe fea0 	bl	8015b80 <_ZN8touchgfx11Application11getInstanceEv>
 8016e40:	6803      	ldr	r3, [r0, #0]
 8016e42:	6821      	ldr	r1, [r4, #0]
 8016e44:	6862      	ldr	r2, [r4, #4]
 8016e46:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016e48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016e4c:	4718      	bx	r3
 8016e4e:	bd70      	pop	{r4, r5, r6, pc}
 8016e50:	20012df8 	.word	0x20012df8

08016e54 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8016e54:	b570      	push	{r4, r5, r6, lr}
 8016e56:	4604      	mov	r4, r0
 8016e58:	4616      	mov	r6, r2
 8016e5a:	460d      	mov	r5, r1
 8016e5c:	b901      	cbnz	r1, 8016e60 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8016e5e:	b192      	cbz	r2, 8016e86 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016e60:	6823      	ldr	r3, [r4, #0]
 8016e62:	4620      	mov	r0, r4
 8016e64:	699b      	ldr	r3, [r3, #24]
 8016e66:	4798      	blx	r3
 8016e68:	88e2      	ldrh	r2, [r4, #6]
 8016e6a:	88a1      	ldrh	r1, [r4, #4]
 8016e6c:	4432      	add	r2, r6
 8016e6e:	4429      	add	r1, r5
 8016e70:	4620      	mov	r0, r4
 8016e72:	b212      	sxth	r2, r2
 8016e74:	b209      	sxth	r1, r1
 8016e76:	f7ec f896 	bl	8002fa6 <_ZN8touchgfx8Drawable5setXYEss>
 8016e7a:	6823      	ldr	r3, [r4, #0]
 8016e7c:	4620      	mov	r0, r4
 8016e7e:	699b      	ldr	r3, [r3, #24]
 8016e80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016e84:	4718      	bx	r3
 8016e86:	bd70      	pop	{r4, r5, r6, pc}

08016e88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8016e88:	b510      	push	{r4, lr}
 8016e8a:	4604      	mov	r4, r0
 8016e8c:	4608      	mov	r0, r1
 8016e8e:	2300      	movs	r3, #0
 8016e90:	8023      	strh	r3, [r4, #0]
 8016e92:	8063      	strh	r3, [r4, #2]
 8016e94:	6803      	ldr	r3, [r0, #0]
 8016e96:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016e9a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8016e9e:	80a1      	strh	r1, [r4, #4]
 8016ea0:	80e2      	strh	r2, [r4, #6]
 8016ea2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016ea4:	4621      	mov	r1, r4
 8016ea6:	4798      	blx	r3
 8016ea8:	4620      	mov	r0, r4
 8016eaa:	bd10      	pop	{r4, pc}

08016eac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8016eac:	b530      	push	{r4, r5, lr}
 8016eae:	8083      	strh	r3, [r0, #4]
 8016eb0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8016eb4:	80c3      	strh	r3, [r0, #6]
 8016eb6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8016eba:	7203      	strb	r3, [r0, #8]
 8016ebc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8016ec0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8016ec4:	7243      	strb	r3, [r0, #9]
 8016ec6:	7a83      	ldrb	r3, [r0, #10]
 8016ec8:	6141      	str	r1, [r0, #20]
 8016eca:	f365 0306 	bfi	r3, r5, #0, #7
 8016ece:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8016ed2:	8302      	strh	r2, [r0, #24]
 8016ed4:	f365 13c7 	bfi	r3, r5, #7, #1
 8016ed8:	7283      	strb	r3, [r0, #10]
 8016eda:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8016ede:	72c3      	strb	r3, [r0, #11]
 8016ee0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8016ee4:	7303      	strb	r3, [r0, #12]
 8016ee6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8016eea:	81c3      	strh	r3, [r0, #14]
 8016eec:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016ef0:	8203      	strh	r3, [r0, #16]
 8016ef2:	4b01      	ldr	r3, [pc, #4]	; (8016ef8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8016ef4:	6003      	str	r3, [r0, #0]
 8016ef6:	bd30      	pop	{r4, r5, pc}
 8016ef8:	0802f304 	.word	0x0802f304

08016efc <_ZNK8touchgfx9ConstFont4findEt>:
 8016efc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016efe:	6944      	ldr	r4, [r0, #20]
 8016f00:	b3bc      	cbz	r4, 8016f72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016f02:	88a3      	ldrh	r3, [r4, #4]
 8016f04:	8b02      	ldrh	r2, [r0, #24]
 8016f06:	1acb      	subs	r3, r1, r3
 8016f08:	f102 32ff 	add.w	r2, r2, #4294967295
 8016f0c:	d431      	bmi.n	8016f72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016f0e:	4293      	cmp	r3, r2
 8016f10:	dd0c      	ble.n	8016f2c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8016f12:	230e      	movs	r3, #14
 8016f14:	fb03 4302 	mla	r3, r3, r2, r4
 8016f18:	889b      	ldrh	r3, [r3, #4]
 8016f1a:	1a5b      	subs	r3, r3, r1
 8016f1c:	1ad3      	subs	r3, r2, r3
 8016f1e:	429a      	cmp	r2, r3
 8016f20:	db27      	blt.n	8016f72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016f22:	2b00      	cmp	r3, #0
 8016f24:	bfbc      	itt	lt
 8016f26:	2302      	movlt	r3, #2
 8016f28:	fb92 f3f3 	sdivlt	r3, r2, r3
 8016f2c:	2500      	movs	r5, #0
 8016f2e:	260e      	movs	r6, #14
 8016f30:	4295      	cmp	r5, r2
 8016f32:	dc1e      	bgt.n	8016f72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016f34:	fb06 4003 	mla	r0, r6, r3, r4
 8016f38:	8887      	ldrh	r7, [r0, #4]
 8016f3a:	42b9      	cmp	r1, r7
 8016f3c:	d01a      	beq.n	8016f74 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8016f3e:	d20d      	bcs.n	8016f5c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8016f40:	1e5a      	subs	r2, r3, #1
 8016f42:	4295      	cmp	r5, r2
 8016f44:	dc15      	bgt.n	8016f72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016f46:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8016f4a:	1a5b      	subs	r3, r3, r1
 8016f4c:	1ad3      	subs	r3, r2, r3
 8016f4e:	429a      	cmp	r2, r3
 8016f50:	db0f      	blt.n	8016f72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016f52:	429d      	cmp	r5, r3
 8016f54:	ddec      	ble.n	8016f30 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016f56:	1953      	adds	r3, r2, r5
 8016f58:	105b      	asrs	r3, r3, #1
 8016f5a:	e7e9      	b.n	8016f30 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016f5c:	1c5d      	adds	r5, r3, #1
 8016f5e:	42aa      	cmp	r2, r5
 8016f60:	db07      	blt.n	8016f72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016f62:	8a43      	ldrh	r3, [r0, #18]
 8016f64:	1acb      	subs	r3, r1, r3
 8016f66:	442b      	add	r3, r5
 8016f68:	429d      	cmp	r5, r3
 8016f6a:	dc02      	bgt.n	8016f72 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016f6c:	429a      	cmp	r2, r3
 8016f6e:	dadf      	bge.n	8016f30 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016f70:	e7f1      	b.n	8016f56 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8016f72:	2000      	movs	r0, #0
 8016f74:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016f76 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8016f76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016f78:	4604      	mov	r4, r0
 8016f7a:	4617      	mov	r7, r2
 8016f7c:	461e      	mov	r6, r3
 8016f7e:	b911      	cbnz	r1, 8016f86 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8016f80:	2500      	movs	r5, #0
 8016f82:	4628      	mov	r0, r5
 8016f84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016f86:	290a      	cmp	r1, #10
 8016f88:	d0fa      	beq.n	8016f80 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016f8a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8016f8e:	4291      	cmp	r1, r2
 8016f90:	d0f6      	beq.n	8016f80 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016f92:	f242 020b 	movw	r2, #8203	; 0x200b
 8016f96:	4291      	cmp	r1, r2
 8016f98:	d0f2      	beq.n	8016f80 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016f9a:	f7ff ffaf 	bl	8016efc <_ZNK8touchgfx9ConstFont4findEt>
 8016f9e:	4605      	mov	r5, r0
 8016fa0:	b950      	cbnz	r0, 8016fb8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8016fa2:	6823      	ldr	r3, [r4, #0]
 8016fa4:	4620      	mov	r0, r4
 8016fa6:	691b      	ldr	r3, [r3, #16]
 8016fa8:	4798      	blx	r3
 8016faa:	4601      	mov	r1, r0
 8016fac:	4620      	mov	r0, r4
 8016fae:	f7ff ffa5 	bl	8016efc <_ZNK8touchgfx9ConstFont4findEt>
 8016fb2:	4605      	mov	r5, r0
 8016fb4:	2800      	cmp	r0, #0
 8016fb6:	d0e3      	beq.n	8016f80 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016fb8:	6823      	ldr	r3, [r4, #0]
 8016fba:	4629      	mov	r1, r5
 8016fbc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8016fbe:	4620      	mov	r0, r4
 8016fc0:	4798      	blx	r3
 8016fc2:	6038      	str	r0, [r7, #0]
 8016fc4:	6823      	ldr	r3, [r4, #0]
 8016fc6:	4620      	mov	r0, r4
 8016fc8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016fca:	4798      	blx	r3
 8016fcc:	7030      	strb	r0, [r6, #0]
 8016fce:	e7d8      	b.n	8016f82 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08016fd0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8016fd0:	b538      	push	{r3, r4, r5, lr}
 8016fd2:	4605      	mov	r5, r0
 8016fd4:	f002 fb56 	bl	8019684 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016fd8:	4604      	mov	r4, r0
 8016fda:	4628      	mov	r0, r5
 8016fdc:	f002 fa96 	bl	801950c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016fe0:	2800      	cmp	r0, #0
 8016fe2:	bf14      	ite	ne
 8016fe4:	2002      	movne	r0, #2
 8016fe6:	2000      	moveq	r0, #0
 8016fe8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8016fec:	b280      	uxth	r0, r0
 8016fee:	bd38      	pop	{r3, r4, r5, pc}

08016ff0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8016ff0:	b538      	push	{r3, r4, r5, lr}
 8016ff2:	4605      	mov	r5, r0
 8016ff4:	f002 fb46 	bl	8019684 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016ff8:	4604      	mov	r4, r0
 8016ffa:	4628      	mov	r0, r5
 8016ffc:	f002 fa86 	bl	801950c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017000:	2800      	cmp	r0, #0
 8017002:	bf14      	ite	ne
 8017004:	2002      	movne	r0, #2
 8017006:	2000      	moveq	r0, #0
 8017008:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801700c:	f040 0001 	orr.w	r0, r0, #1
 8017010:	b280      	uxth	r0, r0
 8017012:	bd38      	pop	{r3, r4, r5, pc}

08017014 <_ZN8touchgfx4clzuEm>:
 8017014:	4603      	mov	r3, r0
 8017016:	b1c8      	cbz	r0, 801704c <_ZN8touchgfx4clzuEm+0x38>
 8017018:	0c02      	lsrs	r2, r0, #16
 801701a:	0412      	lsls	r2, r2, #16
 801701c:	b9a2      	cbnz	r2, 8017048 <_ZN8touchgfx4clzuEm+0x34>
 801701e:	0403      	lsls	r3, r0, #16
 8017020:	2010      	movs	r0, #16
 8017022:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8017026:	bf04      	itt	eq
 8017028:	021b      	lsleq	r3, r3, #8
 801702a:	3008      	addeq	r0, #8
 801702c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8017030:	bf04      	itt	eq
 8017032:	011b      	lsleq	r3, r3, #4
 8017034:	3004      	addeq	r0, #4
 8017036:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801703a:	bf04      	itt	eq
 801703c:	009b      	lsleq	r3, r3, #2
 801703e:	3002      	addeq	r0, #2
 8017040:	2b00      	cmp	r3, #0
 8017042:	db04      	blt.n	801704e <_ZN8touchgfx4clzuEm+0x3a>
 8017044:	3001      	adds	r0, #1
 8017046:	4770      	bx	lr
 8017048:	2000      	movs	r0, #0
 801704a:	e7ea      	b.n	8017022 <_ZN8touchgfx4clzuEm+0xe>
 801704c:	2020      	movs	r0, #32
 801704e:	4770      	bx	lr

08017050 <_ZN8touchgfx7muldivuEmmmRm>:
 8017050:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8017054:	460f      	mov	r7, r1
 8017056:	4615      	mov	r5, r2
 8017058:	461e      	mov	r6, r3
 801705a:	4601      	mov	r1, r0
 801705c:	b100      	cbz	r0, 8017060 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801705e:	b927      	cbnz	r7, 801706a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8017060:	2000      	movs	r0, #0
 8017062:	6030      	str	r0, [r6, #0]
 8017064:	b002      	add	sp, #8
 8017066:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801706a:	f7ff ffd3 	bl	8017014 <_ZN8touchgfx4clzuEm>
 801706e:	b980      	cbnz	r0, 8017092 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8017070:	4638      	mov	r0, r7
 8017072:	f7ff ffcf 	bl	8017014 <_ZN8touchgfx4clzuEm>
 8017076:	2800      	cmp	r0, #0
 8017078:	dd05      	ble.n	8017086 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801707a:	4633      	mov	r3, r6
 801707c:	462a      	mov	r2, r5
 801707e:	4638      	mov	r0, r7
 8017080:	f7ff ffe6 	bl	8017050 <_ZN8touchgfx7muldivuEmmmRm>
 8017084:	e7ee      	b.n	8017064 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017086:	f04f 33ff 	mov.w	r3, #4294967295
 801708a:	6033      	str	r3, [r6, #0]
 801708c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8017090:	e7e8      	b.n	8017064 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017092:	fa37 f800 	lsrs.w	r8, r7, r0
 8017096:	fb07 f301 	mul.w	r3, r7, r1
 801709a:	d105      	bne.n	80170a8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801709c:	fbb3 f0f5 	udiv	r0, r3, r5
 80170a0:	fb05 3510 	mls	r5, r5, r0, r3
 80170a4:	6035      	str	r5, [r6, #0]
 80170a6:	e7dd      	b.n	8017064 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80170a8:	2301      	movs	r3, #1
 80170aa:	fa01 fa00 	lsl.w	sl, r1, r0
 80170ae:	fa03 f000 	lsl.w	r0, r3, r0
 80170b2:	3801      	subs	r0, #1
 80170b4:	462a      	mov	r2, r5
 80170b6:	4633      	mov	r3, r6
 80170b8:	4038      	ands	r0, r7
 80170ba:	f7ff ffc9 	bl	8017050 <_ZN8touchgfx7muldivuEmmmRm>
 80170be:	fbba f9f5 	udiv	r9, sl, r5
 80170c2:	462a      	mov	r2, r5
 80170c4:	4607      	mov	r7, r0
 80170c6:	ab01      	add	r3, sp, #4
 80170c8:	fb05 a119 	mls	r1, r5, r9, sl
 80170cc:	4640      	mov	r0, r8
 80170ce:	f7ff ffbf 	bl	8017050 <_ZN8touchgfx7muldivuEmmmRm>
 80170d2:	9b01      	ldr	r3, [sp, #4]
 80170d4:	6832      	ldr	r2, [r6, #0]
 80170d6:	fb08 f409 	mul.w	r4, r8, r9
 80170da:	441a      	add	r2, r3
 80170dc:	fbb2 f3f5 	udiv	r3, r2, r5
 80170e0:	441c      	add	r4, r3
 80170e2:	443c      	add	r4, r7
 80170e4:	4420      	add	r0, r4
 80170e6:	fb05 2513 	mls	r5, r5, r3, r2
 80170ea:	e7db      	b.n	80170a4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

080170ec <_ZN8touchgfx6muldivElllRl>:
 80170ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80170ee:	2800      	cmp	r0, #0
 80170f0:	bfba      	itte	lt
 80170f2:	4240      	neglt	r0, r0
 80170f4:	f04f 34ff 	movlt.w	r4, #4294967295
 80170f8:	2401      	movge	r4, #1
 80170fa:	2900      	cmp	r1, #0
 80170fc:	bfbc      	itt	lt
 80170fe:	4249      	neglt	r1, r1
 8017100:	4264      	neglt	r4, r4
 8017102:	2a00      	cmp	r2, #0
 8017104:	bfb6      	itet	lt
 8017106:	4265      	neglt	r5, r4
 8017108:	4625      	movge	r5, r4
 801710a:	4252      	neglt	r2, r2
 801710c:	4288      	cmp	r0, r1
 801710e:	461e      	mov	r6, r3
 8017110:	bfc2      	ittt	gt
 8017112:	4603      	movgt	r3, r0
 8017114:	4608      	movgt	r0, r1
 8017116:	4619      	movgt	r1, r3
 8017118:	ab01      	add	r3, sp, #4
 801711a:	f7ff ff99 	bl	8017050 <_ZN8touchgfx7muldivuEmmmRm>
 801711e:	9b01      	ldr	r3, [sp, #4]
 8017120:	4368      	muls	r0, r5
 8017122:	435c      	muls	r4, r3
 8017124:	6034      	str	r4, [r6, #0]
 8017126:	b002      	add	sp, #8
 8017128:	bd70      	pop	{r4, r5, r6, pc}

0801712a <_ZN8touchgfx6muldivElll>:
 801712a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801712c:	4606      	mov	r6, r0
 801712e:	ab01      	add	r3, sp, #4
 8017130:	460d      	mov	r5, r1
 8017132:	4614      	mov	r4, r2
 8017134:	f7ff ffda 	bl	80170ec <_ZN8touchgfx6muldivElllRl>
 8017138:	2e00      	cmp	r6, #0
 801713a:	db20      	blt.n	801717e <_ZN8touchgfx6muldivElll+0x54>
 801713c:	bf14      	ite	ne
 801713e:	2301      	movne	r3, #1
 8017140:	2300      	moveq	r3, #0
 8017142:	2d00      	cmp	r5, #0
 8017144:	db1e      	blt.n	8017184 <_ZN8touchgfx6muldivElll+0x5a>
 8017146:	bf14      	ite	ne
 8017148:	2201      	movne	r2, #1
 801714a:	2200      	moveq	r2, #0
 801714c:	2c00      	cmp	r4, #0
 801714e:	fb03 f202 	mul.w	r2, r3, r2
 8017152:	db1a      	blt.n	801718a <_ZN8touchgfx6muldivElll+0x60>
 8017154:	bf14      	ite	ne
 8017156:	2301      	movne	r3, #1
 8017158:	2300      	moveq	r3, #0
 801715a:	4353      	muls	r3, r2
 801715c:	2b01      	cmp	r3, #1
 801715e:	d117      	bne.n	8017190 <_ZN8touchgfx6muldivElll+0x66>
 8017160:	9b01      	ldr	r3, [sp, #4]
 8017162:	2c00      	cmp	r4, #0
 8017164:	bfb8      	it	lt
 8017166:	4264      	neglt	r4, r4
 8017168:	2b00      	cmp	r3, #0
 801716a:	f104 0401 	add.w	r4, r4, #1
 801716e:	bfb8      	it	lt
 8017170:	425b      	neglt	r3, r3
 8017172:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017176:	db00      	blt.n	801717a <_ZN8touchgfx6muldivElll+0x50>
 8017178:	3001      	adds	r0, #1
 801717a:	b002      	add	sp, #8
 801717c:	bd70      	pop	{r4, r5, r6, pc}
 801717e:	f04f 33ff 	mov.w	r3, #4294967295
 8017182:	e7de      	b.n	8017142 <_ZN8touchgfx6muldivElll+0x18>
 8017184:	f04f 32ff 	mov.w	r2, #4294967295
 8017188:	e7e0      	b.n	801714c <_ZN8touchgfx6muldivElll+0x22>
 801718a:	f04f 33ff 	mov.w	r3, #4294967295
 801718e:	e7e4      	b.n	801715a <_ZN8touchgfx6muldivElll+0x30>
 8017190:	3301      	adds	r3, #1
 8017192:	d1f2      	bne.n	801717a <_ZN8touchgfx6muldivElll+0x50>
 8017194:	9b01      	ldr	r3, [sp, #4]
 8017196:	2c00      	cmp	r4, #0
 8017198:	bfb8      	it	lt
 801719a:	4264      	neglt	r4, r4
 801719c:	2b00      	cmp	r3, #0
 801719e:	bfb8      	it	lt
 80171a0:	425b      	neglt	r3, r3
 80171a2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80171a6:	bfc8      	it	gt
 80171a8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80171ac:	e7e5      	b.n	801717a <_ZN8touchgfx6muldivElll+0x50>

080171ae <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80171ae:	2000      	movs	r0, #0
 80171b0:	4770      	bx	lr

080171b2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80171b2:	2001      	movs	r0, #1
 80171b4:	4770      	bx	lr

080171b6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80171b6:	2002      	movs	r0, #2
 80171b8:	4770      	bx	lr

080171ba <_ZN8touchgfx6ScreenD1Ev>:
 80171ba:	4770      	bx	lr

080171bc <_ZN8touchgfx12GestureEventD1Ev>:
 80171bc:	4770      	bx	lr

080171be <_ZN8touchgfx9DragEventD1Ev>:
 80171be:	4770      	bx	lr

080171c0 <_ZN8touchgfx10ClickEventD1Ev>:
 80171c0:	4770      	bx	lr

080171c2 <_ZN8touchgfx10ClickEventD0Ev>:
 80171c2:	b510      	push	{r4, lr}
 80171c4:	210c      	movs	r1, #12
 80171c6:	4604      	mov	r4, r0
 80171c8:	f012 fd51 	bl	8029c6e <_ZdlPvj>
 80171cc:	4620      	mov	r0, r4
 80171ce:	bd10      	pop	{r4, pc}

080171d0 <_ZN8touchgfx9DragEventD0Ev>:
 80171d0:	b510      	push	{r4, lr}
 80171d2:	2110      	movs	r1, #16
 80171d4:	4604      	mov	r4, r0
 80171d6:	f012 fd4a 	bl	8029c6e <_ZdlPvj>
 80171da:	4620      	mov	r0, r4
 80171dc:	bd10      	pop	{r4, pc}

080171de <_ZN8touchgfx12GestureEventD0Ev>:
 80171de:	b510      	push	{r4, lr}
 80171e0:	210c      	movs	r1, #12
 80171e2:	4604      	mov	r4, r0
 80171e4:	f012 fd43 	bl	8029c6e <_ZdlPvj>
 80171e8:	4620      	mov	r0, r4
 80171ea:	bd10      	pop	{r4, pc}

080171ec <_ZN8touchgfx6ScreenD0Ev>:
 80171ec:	b510      	push	{r4, lr}
 80171ee:	213c      	movs	r1, #60	; 0x3c
 80171f0:	4604      	mov	r4, r0
 80171f2:	f012 fd3c 	bl	8029c6e <_ZdlPvj>
 80171f6:	4620      	mov	r0, r4
 80171f8:	bd10      	pop	{r4, pc}
	...

080171fc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80171fc:	b530      	push	{r4, r5, lr}
 80171fe:	460d      	mov	r5, r1
 8017200:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017202:	b087      	sub	sp, #28
 8017204:	4604      	mov	r4, r0
 8017206:	b301      	cbz	r1, 801724a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8017208:	a801      	add	r0, sp, #4
 801720a:	f7ff fe3d 	bl	8016e88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801720e:	892a      	ldrh	r2, [r5, #8]
 8017210:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8017214:	7928      	ldrb	r0, [r5, #4]
 8017216:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801721a:	f88d 0010 	strb.w	r0, [sp, #16]
 801721e:	1ad2      	subs	r2, r2, r3
 8017220:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8017222:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017224:	f8ad 1012 	strh.w	r1, [sp, #18]
 8017228:	441a      	add	r2, r3
 801722a:	896b      	ldrh	r3, [r5, #10]
 801722c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8017230:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017234:	1b5b      	subs	r3, r3, r5
 8017236:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8017238:	442b      	add	r3, r5
 801723a:	4d05      	ldr	r5, [pc, #20]	; (8017250 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801723c:	9503      	str	r5, [sp, #12]
 801723e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017242:	6803      	ldr	r3, [r0, #0]
 8017244:	a903      	add	r1, sp, #12
 8017246:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017248:	4798      	blx	r3
 801724a:	b007      	add	sp, #28
 801724c:	bd30      	pop	{r4, r5, pc}
 801724e:	bf00      	nop
 8017250:	0802f38c 	.word	0x0802f38c

08017254 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8017254:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017258:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801725a:	b08a      	sub	sp, #40	; 0x28
 801725c:	4604      	mov	r4, r0
 801725e:	460d      	mov	r5, r1
 8017260:	b113      	cbz	r3, 8017268 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8017262:	790b      	ldrb	r3, [r1, #4]
 8017264:	2b00      	cmp	r3, #0
 8017266:	d044      	beq.n	80172f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017268:	f104 0804 	add.w	r8, r4, #4
 801726c:	4641      	mov	r1, r8
 801726e:	a803      	add	r0, sp, #12
 8017270:	f7ff fe0a 	bl	8016e88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017274:	792b      	ldrb	r3, [r5, #4]
 8017276:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801727a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801727e:	b983      	cbnz	r3, 80172a2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017280:	892a      	ldrh	r2, [r5, #8]
 8017282:	88e9      	ldrh	r1, [r5, #6]
 8017284:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8017288:	1b92      	subs	r2, r2, r6
 801728a:	1bc9      	subs	r1, r1, r7
 801728c:	9301      	str	r3, [sp, #4]
 801728e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8017292:	9300      	str	r3, [sp, #0]
 8017294:	b212      	sxth	r2, r2
 8017296:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801729a:	b209      	sxth	r1, r1
 801729c:	4640      	mov	r0, r8
 801729e:	f7f9 fa79 	bl	8010794 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80172a2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80172a4:	b329      	cbz	r1, 80172f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80172a6:	a805      	add	r0, sp, #20
 80172a8:	f7ff fdee 	bl	8016e88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80172ac:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80172b0:	792b      	ldrb	r3, [r5, #4]
 80172b2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80172b4:	f88d 3020 	strb.w	r3, [sp, #32]
 80172b8:	1abf      	subs	r7, r7, r2
 80172ba:	88ea      	ldrh	r2, [r5, #6]
 80172bc:	4417      	add	r7, r2
 80172be:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80172c0:	4417      	add	r7, r2
 80172c2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80172c6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80172ca:	1ab6      	subs	r6, r6, r2
 80172cc:	892a      	ldrh	r2, [r5, #8]
 80172ce:	4416      	add	r6, r2
 80172d0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80172d2:	4416      	add	r6, r2
 80172d4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80172d8:	4a07      	ldr	r2, [pc, #28]	; (80172f8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80172da:	9207      	str	r2, [sp, #28]
 80172dc:	2600      	movs	r6, #0
 80172de:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80172e2:	6803      	ldr	r3, [r0, #0]
 80172e4:	a907      	add	r1, sp, #28
 80172e6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80172e8:	4798      	blx	r3
 80172ea:	792b      	ldrb	r3, [r5, #4]
 80172ec:	b10b      	cbz	r3, 80172f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80172ee:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80172f2:	b00a      	add	sp, #40	; 0x28
 80172f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80172f8:	0802f364 	.word	0x0802f364

080172fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80172fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017300:	460c      	mov	r4, r1
 8017302:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017304:	b088      	sub	sp, #32
 8017306:	4605      	mov	r5, r0
 8017308:	2900      	cmp	r1, #0
 801730a:	d06d      	beq.n	80173e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801730c:	4668      	mov	r0, sp
 801730e:	f7ff fdbb 	bl	8016e88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017312:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8017314:	88e3      	ldrh	r3, [r4, #6]
 8017316:	f9bd 8000 	ldrsh.w	r8, [sp]
 801731a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801731e:	440b      	add	r3, r1
 8017320:	b21b      	sxth	r3, r3
 8017322:	4543      	cmp	r3, r8
 8017324:	db31      	blt.n	801738a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017326:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801732a:	44c4      	add	ip, r8
 801732c:	fa0f fc8c 	sxth.w	ip, ip
 8017330:	4563      	cmp	r3, ip
 8017332:	da2a      	bge.n	801738a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017334:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8017336:	8926      	ldrh	r6, [r4, #8]
 8017338:	4416      	add	r6, r2
 801733a:	b236      	sxth	r6, r6
 801733c:	42be      	cmp	r6, r7
 801733e:	db24      	blt.n	801738a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017340:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8017344:	4438      	add	r0, r7
 8017346:	b200      	sxth	r0, r0
 8017348:	4286      	cmp	r6, r0
 801734a:	da1e      	bge.n	801738a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801734c:	8963      	ldrh	r3, [r4, #10]
 801734e:	4419      	add	r1, r3
 8017350:	b209      	sxth	r1, r1
 8017352:	4541      	cmp	r1, r8
 8017354:	db08      	blt.n	8017368 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017356:	4561      	cmp	r1, ip
 8017358:	da06      	bge.n	8017368 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801735a:	89a3      	ldrh	r3, [r4, #12]
 801735c:	441a      	add	r2, r3
 801735e:	b212      	sxth	r2, r2
 8017360:	42ba      	cmp	r2, r7
 8017362:	db01      	blt.n	8017368 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017364:	4282      	cmp	r2, r0
 8017366:	db10      	blt.n	801738a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017368:	4b21      	ldr	r3, [pc, #132]	; (80173f0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801736a:	9304      	str	r3, [sp, #16]
 801736c:	2302      	movs	r3, #2
 801736e:	f88d 3014 	strb.w	r3, [sp, #20]
 8017372:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017374:	2300      	movs	r3, #0
 8017376:	f8ad 3016 	strh.w	r3, [sp, #22]
 801737a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801737e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017382:	6803      	ldr	r3, [r0, #0]
 8017384:	a904      	add	r1, sp, #16
 8017386:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017388:	4798      	blx	r3
 801738a:	1d29      	adds	r1, r5, #4
 801738c:	a802      	add	r0, sp, #8
 801738e:	f7ff fd7b 	bl	8016e88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017392:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017396:	88e0      	ldrh	r0, [r4, #6]
 8017398:	7921      	ldrb	r1, [r4, #4]
 801739a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801739e:	8922      	ldrh	r2, [r4, #8]
 80173a0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80173a2:	f88d 1014 	strb.w	r1, [sp, #20]
 80173a6:	eba3 0808 	sub.w	r8, r3, r8
 80173aa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80173ae:	1bdf      	subs	r7, r3, r7
 80173b0:	b2bb      	uxth	r3, r7
 80173b2:	fa1f f888 	uxth.w	r8, r8
 80173b6:	8967      	ldrh	r7, [r4, #10]
 80173b8:	89a4      	ldrh	r4, [r4, #12]
 80173ba:	4440      	add	r0, r8
 80173bc:	4460      	add	r0, ip
 80173be:	441a      	add	r2, r3
 80173c0:	44b8      	add	r8, r7
 80173c2:	4423      	add	r3, r4
 80173c4:	f8ad 0016 	strh.w	r0, [sp, #22]
 80173c8:	4433      	add	r3, r6
 80173ca:	4432      	add	r2, r6
 80173cc:	44e0      	add	r8, ip
 80173ce:	4c09      	ldr	r4, [pc, #36]	; (80173f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80173d0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80173d2:	9404      	str	r4, [sp, #16]
 80173d4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80173d8:	f8ad 801a 	strh.w	r8, [sp, #26]
 80173dc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80173e0:	6803      	ldr	r3, [r0, #0]
 80173e2:	a904      	add	r1, sp, #16
 80173e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80173e6:	4798      	blx	r3
 80173e8:	b008      	add	sp, #32
 80173ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80173ee:	bf00      	nop
 80173f0:	0802f364 	.word	0x0802f364
 80173f4:	0802f378 	.word	0x0802f378

080173f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80173f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80173fa:	4604      	mov	r4, r0
 80173fc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8017400:	3201      	adds	r2, #1
 8017402:	d112      	bne.n	801742a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8017404:	6803      	ldr	r3, [r0, #0]
 8017406:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801740a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801740e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017412:	2500      	movs	r5, #0
 8017414:	9500      	str	r5, [sp, #0]
 8017416:	466d      	mov	r5, sp
 8017418:	4629      	mov	r1, r5
 801741a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801741e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017420:	4798      	blx	r3
 8017422:	e895 0003 	ldmia.w	r5, {r0, r1}
 8017426:	e884 0003 	stmia.w	r4, {r0, r1}
 801742a:	4620      	mov	r0, r4
 801742c:	b003      	add	sp, #12
 801742e:	bd30      	pop	{r4, r5, pc}

08017430 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8017430:	b513      	push	{r0, r1, r4, lr}
 8017432:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8017436:	3301      	adds	r3, #1
 8017438:	4604      	mov	r4, r0
 801743a:	d109      	bne.n	8017450 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801743c:	4601      	mov	r1, r0
 801743e:	4668      	mov	r0, sp
 8017440:	f7ff fd22 	bl	8016e88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017444:	f8bd 3000 	ldrh.w	r3, [sp]
 8017448:	8423      	strh	r3, [r4, #32]
 801744a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801744e:	8463      	strh	r3, [r4, #34]	; 0x22
 8017450:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8017454:	b002      	add	sp, #8
 8017456:	bd10      	pop	{r4, pc}

08017458 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8017458:	b513      	push	{r0, r1, r4, lr}
 801745a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801745e:	3301      	adds	r3, #1
 8017460:	4604      	mov	r4, r0
 8017462:	d109      	bne.n	8017478 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8017464:	4601      	mov	r1, r0
 8017466:	4668      	mov	r0, sp
 8017468:	f7ff fd0e 	bl	8016e88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801746c:	f8bd 3000 	ldrh.w	r3, [sp]
 8017470:	8423      	strh	r3, [r4, #32]
 8017472:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017476:	8463      	strh	r3, [r4, #34]	; 0x22
 8017478:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801747c:	b002      	add	sp, #8
 801747e:	bd10      	pop	{r4, pc}

08017480 <_ZN8touchgfx6ScreenC1Ev>:
 8017480:	b570      	push	{r4, r5, r6, lr}
 8017482:	4605      	mov	r5, r0
 8017484:	4b16      	ldr	r3, [pc, #88]	; (80174e0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8017486:	f845 3b04 	str.w	r3, [r5], #4
 801748a:	2300      	movs	r3, #0
 801748c:	8103      	strh	r3, [r0, #8]
 801748e:	8143      	strh	r3, [r0, #10]
 8017490:	8183      	strh	r3, [r0, #12]
 8017492:	81c3      	strh	r3, [r0, #14]
 8017494:	8203      	strh	r3, [r0, #16]
 8017496:	8243      	strh	r3, [r0, #18]
 8017498:	8283      	strh	r3, [r0, #20]
 801749a:	82c3      	strh	r3, [r0, #22]
 801749c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80174a0:	6203      	str	r3, [r0, #32]
 80174a2:	8483      	strh	r3, [r0, #36]	; 0x24
 80174a4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80174a6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80174aa:	4a0e      	ldr	r2, [pc, #56]	; (80174e4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80174ac:	6343      	str	r3, [r0, #52]	; 0x34
 80174ae:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80174b2:	4b0d      	ldr	r3, [pc, #52]	; (80174e8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80174b4:	6042      	str	r2, [r0, #4]
 80174b6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80174ba:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80174bc:	4a0b      	ldr	r2, [pc, #44]	; (80174ec <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80174be:	4604      	mov	r4, r0
 80174c0:	2101      	movs	r1, #1
 80174c2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80174c6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80174ca:	f9b2 1000 	ldrsh.w	r1, [r2]
 80174ce:	4628      	mov	r0, r5
 80174d0:	4798      	blx	r3
 80174d2:	6863      	ldr	r3, [r4, #4]
 80174d4:	4628      	mov	r0, r5
 80174d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80174d8:	4631      	mov	r1, r6
 80174da:	4798      	blx	r3
 80174dc:	4620      	mov	r0, r4
 80174de:	bd70      	pop	{r4, r5, r6, pc}
 80174e0:	0802f3a0 	.word	0x0802f3a0
 80174e4:	0802ec04 	.word	0x0802ec04
 80174e8:	20012daa 	.word	0x20012daa
 80174ec:	20012da8 	.word	0x20012da8

080174f0 <_ZN8touchgfx6Screen4drawEv>:
 80174f0:	b507      	push	{r0, r1, r2, lr}
 80174f2:	4b09      	ldr	r3, [pc, #36]	; (8017518 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80174f4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80174f8:	4b08      	ldr	r3, [pc, #32]	; (801751c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80174fa:	f8ad 2004 	strh.w	r2, [sp, #4]
 80174fe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017502:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017506:	6803      	ldr	r3, [r0, #0]
 8017508:	2100      	movs	r1, #0
 801750a:	9100      	str	r1, [sp, #0]
 801750c:	689b      	ldr	r3, [r3, #8]
 801750e:	4669      	mov	r1, sp
 8017510:	4798      	blx	r3
 8017512:	b003      	add	sp, #12
 8017514:	f85d fb04 	ldr.w	pc, [sp], #4
 8017518:	20012da8 	.word	0x20012da8
 801751c:	20012daa 	.word	0x20012daa

08017520 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8017520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017524:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8017528:	2b00      	cmp	r3, #0
 801752a:	b089      	sub	sp, #36	; 0x24
 801752c:	4680      	mov	r8, r0
 801752e:	460c      	mov	r4, r1
 8017530:	4615      	mov	r5, r2
 8017532:	dd0e      	ble.n	8017552 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017534:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8017538:	2b00      	cmp	r3, #0
 801753a:	dd0a      	ble.n	8017552 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801753c:	4628      	mov	r0, r5
 801753e:	f7ff ff5b 	bl	80173f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017542:	4621      	mov	r1, r4
 8017544:	f7fe fa3d 	bl	80159c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017548:	69eb      	ldr	r3, [r5, #28]
 801754a:	b928      	cbnz	r0, 8017558 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801754c:	461d      	mov	r5, r3
 801754e:	2b00      	cmp	r3, #0
 8017550:	d1f4      	bne.n	801753c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8017552:	b009      	add	sp, #36	; 0x24
 8017554:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017558:	ae04      	add	r6, sp, #16
 801755a:	2b00      	cmp	r3, #0
 801755c:	f000 80b5 	beq.w	80176ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017560:	682b      	ldr	r3, [r5, #0]
 8017562:	4629      	mov	r1, r5
 8017564:	68db      	ldr	r3, [r3, #12]
 8017566:	a802      	add	r0, sp, #8
 8017568:	4798      	blx	r3
 801756a:	4628      	mov	r0, r5
 801756c:	f7ff ff60 	bl	8017430 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017570:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8017574:	4407      	add	r7, r0
 8017576:	4628      	mov	r0, r5
 8017578:	f7ff ff6e 	bl	8017458 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801757c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017580:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8017584:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017588:	4418      	add	r0, r3
 801758a:	4621      	mov	r1, r4
 801758c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017590:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017594:	b23f      	sxth	r7, r7
 8017596:	4630      	mov	r0, r6
 8017598:	f8ad 3016 	strh.w	r3, [sp, #22]
 801759c:	f8ad 7010 	strh.w	r7, [sp, #16]
 80175a0:	f7f9 f9dc 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 80175a4:	4628      	mov	r0, r5
 80175a6:	f7ff ff27 	bl	80173f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80175aa:	4602      	mov	r2, r0
 80175ac:	e896 0003 	ldmia.w	r6, {r0, r1}
 80175b0:	ab06      	add	r3, sp, #24
 80175b2:	e883 0003 	stmia.w	r3, {r0, r1}
 80175b6:	4611      	mov	r1, r2
 80175b8:	4618      	mov	r0, r3
 80175ba:	f7f9 f9cf 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 80175be:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80175c2:	f9b4 1000 	ldrsh.w	r1, [r4]
 80175c6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80175ca:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80175ce:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80175d2:	4299      	cmp	r1, r3
 80175d4:	d10b      	bne.n	80175ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80175d6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80175da:	4552      	cmp	r2, sl
 80175dc:	d107      	bne.n	80175ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80175de:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80175e2:	455a      	cmp	r2, fp
 80175e4:	d103      	bne.n	80175ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80175e6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80175ea:	454a      	cmp	r2, r9
 80175ec:	d06d      	beq.n	80176ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80175ee:	f1bb 0f00 	cmp.w	fp, #0
 80175f2:	dd65      	ble.n	80176c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80175f4:	f1b9 0f00 	cmp.w	r9, #0
 80175f8:	dd62      	ble.n	80176c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80175fa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80175fe:	fa1f f08a 	uxth.w	r0, sl
 8017602:	4552      	cmp	r2, sl
 8017604:	9000      	str	r0, [sp, #0]
 8017606:	da12      	bge.n	801762e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8017608:	9301      	str	r3, [sp, #4]
 801760a:	9b00      	ldr	r3, [sp, #0]
 801760c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017610:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017614:	1a9a      	subs	r2, r3, r2
 8017616:	f8ad 1010 	strh.w	r1, [sp, #16]
 801761a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801761e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8017622:	69ea      	ldr	r2, [r5, #28]
 8017624:	4631      	mov	r1, r6
 8017626:	4640      	mov	r0, r8
 8017628:	f7ff ff7a 	bl	8017520 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801762c:	9b01      	ldr	r3, [sp, #4]
 801762e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017632:	429a      	cmp	r2, r3
 8017634:	b29f      	uxth	r7, r3
 8017636:	da0d      	bge.n	8017654 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8017638:	f8ad 2010 	strh.w	r2, [sp, #16]
 801763c:	1aba      	subs	r2, r7, r2
 801763e:	f8ad a012 	strh.w	sl, [sp, #18]
 8017642:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017646:	f8ad 9016 	strh.w	r9, [sp, #22]
 801764a:	69ea      	ldr	r2, [r5, #28]
 801764c:	4631      	mov	r1, r6
 801764e:	4640      	mov	r0, r8
 8017650:	f7ff ff66 	bl	8017520 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017654:	8822      	ldrh	r2, [r4, #0]
 8017656:	88a3      	ldrh	r3, [r4, #4]
 8017658:	445f      	add	r7, fp
 801765a:	4413      	add	r3, r2
 801765c:	b29b      	uxth	r3, r3
 801765e:	b2bf      	uxth	r7, r7
 8017660:	b23a      	sxth	r2, r7
 8017662:	b219      	sxth	r1, r3
 8017664:	4291      	cmp	r1, r2
 8017666:	dd0d      	ble.n	8017684 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8017668:	1bdb      	subs	r3, r3, r7
 801766a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801766e:	f8ad a012 	strh.w	sl, [sp, #18]
 8017672:	f8ad 3014 	strh.w	r3, [sp, #20]
 8017676:	f8ad 9016 	strh.w	r9, [sp, #22]
 801767a:	69ea      	ldr	r2, [r5, #28]
 801767c:	4631      	mov	r1, r6
 801767e:	4640      	mov	r0, r8
 8017680:	f7ff ff4e 	bl	8017520 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017684:	88e2      	ldrh	r2, [r4, #6]
 8017686:	8863      	ldrh	r3, [r4, #2]
 8017688:	4413      	add	r3, r2
 801768a:	9a00      	ldr	r2, [sp, #0]
 801768c:	444a      	add	r2, r9
 801768e:	b29b      	uxth	r3, r3
 8017690:	fa1f f982 	uxth.w	r9, r2
 8017694:	fa0f f289 	sxth.w	r2, r9
 8017698:	b219      	sxth	r1, r3
 801769a:	428a      	cmp	r2, r1
 801769c:	da15      	bge.n	80176ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801769e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80176a2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80176a6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80176aa:	eba3 0309 	sub.w	r3, r3, r9
 80176ae:	f8ad 0010 	strh.w	r0, [sp, #16]
 80176b2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80176b6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80176ba:	69ea      	ldr	r2, [r5, #28]
 80176bc:	4631      	mov	r1, r6
 80176be:	e001      	b.n	80176c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80176c0:	69ea      	ldr	r2, [r5, #28]
 80176c2:	4621      	mov	r1, r4
 80176c4:	4640      	mov	r0, r8
 80176c6:	f7ff ff2b 	bl	8017520 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80176ca:	4628      	mov	r0, r5
 80176cc:	f7ff fe94 	bl	80173f8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80176d0:	6861      	ldr	r1, [r4, #4]
 80176d2:	4602      	mov	r2, r0
 80176d4:	6820      	ldr	r0, [r4, #0]
 80176d6:	4633      	mov	r3, r6
 80176d8:	c303      	stmia	r3!, {r0, r1}
 80176da:	4611      	mov	r1, r2
 80176dc:	4630      	mov	r0, r6
 80176de:	f7f9 f93d 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 80176e2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80176e6:	2b00      	cmp	r3, #0
 80176e8:	f77f af33 	ble.w	8017552 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80176ec:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80176f0:	2b00      	cmp	r3, #0
 80176f2:	f77f af2e 	ble.w	8017552 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80176f6:	4628      	mov	r0, r5
 80176f8:	f7ff fe9a 	bl	8017430 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80176fc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8017700:	1a18      	subs	r0, r3, r0
 8017702:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017706:	4628      	mov	r0, r5
 8017708:	f7ff fea6 	bl	8017458 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801770c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017710:	1a18      	subs	r0, r3, r0
 8017712:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017716:	682b      	ldr	r3, [r5, #0]
 8017718:	4631      	mov	r1, r6
 801771a:	689b      	ldr	r3, [r3, #8]
 801771c:	4628      	mov	r0, r5
 801771e:	4798      	blx	r3
 8017720:	e717      	b.n	8017552 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08017722 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8017722:	b570      	push	{r4, r5, r6, lr}
 8017724:	460c      	mov	r4, r1
 8017726:	b086      	sub	sp, #24
 8017728:	1d06      	adds	r6, r0, #4
 801772a:	2300      	movs	r3, #0
 801772c:	4631      	mov	r1, r6
 801772e:	4605      	mov	r5, r0
 8017730:	a802      	add	r0, sp, #8
 8017732:	9301      	str	r3, [sp, #4]
 8017734:	f7ff fba8 	bl	8016e88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017738:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801773c:	8822      	ldrh	r2, [r4, #0]
 801773e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8017742:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017746:	f8ad 0014 	strh.w	r0, [sp, #20]
 801774a:	1ad2      	subs	r2, r2, r3
 801774c:	8863      	ldrh	r3, [r4, #2]
 801774e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017752:	1a5b      	subs	r3, r3, r1
 8017754:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8017758:	f8ad 1016 	strh.w	r1, [sp, #22]
 801775c:	aa01      	add	r2, sp, #4
 801775e:	a904      	add	r1, sp, #16
 8017760:	4630      	mov	r0, r6
 8017762:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017766:	f7f9 f9d1 	bl	8010b0c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801776a:	9a01      	ldr	r2, [sp, #4]
 801776c:	b11a      	cbz	r2, 8017776 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801776e:	4621      	mov	r1, r4
 8017770:	4628      	mov	r0, r5
 8017772:	f7ff fed5 	bl	8017520 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017776:	b006      	add	sp, #24
 8017778:	bd70      	pop	{r4, r5, r6, pc}

0801777a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801777a:	b530      	push	{r4, r5, lr}
 801777c:	4602      	mov	r2, r0
 801777e:	4604      	mov	r4, r0
 8017780:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8017784:	b085      	sub	sp, #20
 8017786:	460d      	mov	r5, r1
 8017788:	6851      	ldr	r1, [r2, #4]
 801778a:	466b      	mov	r3, sp
 801778c:	c303      	stmia	r3!, {r0, r1}
 801778e:	4629      	mov	r1, r5
 8017790:	4668      	mov	r0, sp
 8017792:	f7f9 f8e3 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 8017796:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801779a:	b12b      	cbz	r3, 80177a8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801779c:	4669      	mov	r1, sp
 801779e:	4620      	mov	r0, r4
 80177a0:	f7ff ffbf 	bl	8017722 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80177a4:	b005      	add	sp, #20
 80177a6:	bd30      	pop	{r4, r5, pc}
 80177a8:	3404      	adds	r4, #4
 80177aa:	4621      	mov	r1, r4
 80177ac:	a802      	add	r0, sp, #8
 80177ae:	f7ff fb6b 	bl	8016e88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80177b2:	f8bd 3000 	ldrh.w	r3, [sp]
 80177b6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80177ba:	1a9b      	subs	r3, r3, r2
 80177bc:	f8ad 3000 	strh.w	r3, [sp]
 80177c0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80177c4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80177c8:	4669      	mov	r1, sp
 80177ca:	1a9b      	subs	r3, r3, r2
 80177cc:	4620      	mov	r0, r4
 80177ce:	f8ad 3002 	strh.w	r3, [sp, #2]
 80177d2:	f7f9 f962 	bl	8010a9a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80177d6:	e7e5      	b.n	80177a4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080177d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80177d8:	680a      	ldr	r2, [r1, #0]
 80177da:	460b      	mov	r3, r1
 80177dc:	6992      	ldr	r2, [r2, #24]
 80177de:	1d01      	adds	r1, r0, #4
 80177e0:	4618      	mov	r0, r3
 80177e2:	4710      	bx	r2

080177e4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80177e4:	4298      	cmp	r0, r3
 80177e6:	d200      	bcs.n	80177ea <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80177e8:	b913      	cbnz	r3, 80177f0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80177ea:	440a      	add	r2, r1
 80177ec:	b210      	sxth	r0, r2
 80177ee:	4770      	bx	lr
 80177f0:	ee07 0a90 	vmov	s15, r0
 80177f4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80177f8:	ee07 3a90 	vmov	s15, r3
 80177fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017800:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8017804:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017808:	ee37 7a66 	vsub.f32	s14, s14, s13
 801780c:	ee07 2a90 	vmov	s15, r2
 8017810:	ee67 5a07 	vmul.f32	s11, s14, s14
 8017814:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8017818:	eee5 6a87 	vfma.f32	s13, s11, s14
 801781c:	ee07 1a90 	vmov	s15, r1
 8017820:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017824:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017828:	eee6 7a26 	vfma.f32	s15, s12, s13
 801782c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017830:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017834:	bfcc      	ite	gt
 8017836:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801783a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801783e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017842:	ee17 3a90 	vmov	r3, s15
 8017846:	b218      	sxth	r0, r3
 8017848:	4770      	bx	lr

0801784a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801784a:	4298      	cmp	r0, r3
 801784c:	d200      	bcs.n	8017850 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801784e:	b913      	cbnz	r3, 8017856 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8017850:	440a      	add	r2, r1
 8017852:	b210      	sxth	r0, r2
 8017854:	4770      	bx	lr
 8017856:	ee07 2a90 	vmov	s15, r2
 801785a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801785e:	ee07 0a90 	vmov	s15, r0
 8017862:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8017866:	ee67 7a27 	vmul.f32	s15, s14, s15
 801786a:	ee07 3a10 	vmov	s14, r3
 801786e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8017872:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017876:	ee07 1a90 	vmov	s15, r1
 801787a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801787e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017882:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8017886:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801788a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801788e:	bfcc      	ite	gt
 8017890:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017894:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017898:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801789c:	ee17 3a90 	vmov	r3, s15
 80178a0:	b218      	sxth	r0, r3
 80178a2:	4770      	bx	lr

080178a4 <_ZN8touchgfx12TextProviderC1Ev>:
 80178a4:	b538      	push	{r3, r4, r5, lr}
 80178a6:	2500      	movs	r5, #0
 80178a8:	2302      	movs	r3, #2
 80178aa:	4604      	mov	r4, r0
 80178ac:	e9c0 5500 	strd	r5, r5, [r0]
 80178b0:	7403      	strb	r3, [r0, #16]
 80178b2:	6145      	str	r5, [r0, #20]
 80178b4:	7605      	strb	r5, [r0, #24]
 80178b6:	83c5      	strh	r5, [r0, #30]
 80178b8:	8405      	strh	r5, [r0, #32]
 80178ba:	86c5      	strh	r5, [r0, #54]	; 0x36
 80178bc:	8705      	strh	r5, [r0, #56]	; 0x38
 80178be:	87c5      	strh	r5, [r0, #62]	; 0x3e
 80178c0:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 80178c4:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 80178c8:	220e      	movs	r2, #14
 80178ca:	4629      	mov	r1, r5
 80178cc:	304c      	adds	r0, #76	; 0x4c
 80178ce:	f013 faba 	bl	802ae46 <memset>
 80178d2:	2301      	movs	r3, #1
 80178d4:	4620      	mov	r0, r4
 80178d6:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80178da:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80178de:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80178e2:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80178e6:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80178ea:	f7f1 faef 	bl	8008ecc <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80178ee:	4620      	mov	r0, r4
 80178f0:	bd38      	pop	{r3, r4, r5, pc}

080178f2 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80178f2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80178f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80178f8:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80178fa:	fab0 f080 	clz	r0, r0
 80178fe:	0940      	lsrs	r0, r0, #5
 8017900:	4770      	bx	lr

08017902 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8017902:	b530      	push	{r4, r5, lr}
 8017904:	2500      	movs	r5, #0
 8017906:	2401      	movs	r4, #1
 8017908:	6843      	ldr	r3, [r0, #4]
 801790a:	b913      	cbnz	r3, 8017912 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801790c:	6803      	ldr	r3, [r0, #0]
 801790e:	b313      	cbz	r3, 8017956 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017910:	6043      	str	r3, [r0, #4]
 8017912:	7e03      	ldrb	r3, [r0, #24]
 8017914:	b143      	cbz	r3, 8017928 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8017916:	6943      	ldr	r3, [r0, #20]
 8017918:	b12b      	cbz	r3, 8017926 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801791a:	881a      	ldrh	r2, [r3, #0]
 801791c:	b11a      	cbz	r2, 8017926 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801791e:	1c9a      	adds	r2, r3, #2
 8017920:	6142      	str	r2, [r0, #20]
 8017922:	8818      	ldrh	r0, [r3, #0]
 8017924:	bd30      	pop	{r4, r5, pc}
 8017926:	7605      	strb	r5, [r0, #24]
 8017928:	6843      	ldr	r3, [r0, #4]
 801792a:	8819      	ldrh	r1, [r3, #0]
 801792c:	b199      	cbz	r1, 8017956 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801792e:	1c9a      	adds	r2, r3, #2
 8017930:	2902      	cmp	r1, #2
 8017932:	6042      	str	r2, [r0, #4]
 8017934:	d1f5      	bne.n	8017922 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8017936:	7c03      	ldrb	r3, [r0, #16]
 8017938:	2b01      	cmp	r3, #1
 801793a:	d8e5      	bhi.n	8017908 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801793c:	1c5a      	adds	r2, r3, #1
 801793e:	3302      	adds	r3, #2
 8017940:	7402      	strb	r2, [r0, #16]
 8017942:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8017946:	6143      	str	r3, [r0, #20]
 8017948:	2b00      	cmp	r3, #0
 801794a:	d0dd      	beq.n	8017908 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801794c:	881b      	ldrh	r3, [r3, #0]
 801794e:	2b00      	cmp	r3, #0
 8017950:	d0da      	beq.n	8017908 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017952:	7604      	strb	r4, [r0, #24]
 8017954:	e7d8      	b.n	8017908 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017956:	2000      	movs	r0, #0
 8017958:	e7e4      	b.n	8017924 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801795a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801795a:	b430      	push	{r4, r5}
 801795c:	6001      	str	r1, [r0, #0]
 801795e:	2100      	movs	r1, #0
 8017960:	6041      	str	r1, [r0, #4]
 8017962:	6815      	ldr	r5, [r2, #0]
 8017964:	6085      	str	r5, [r0, #8]
 8017966:	6852      	ldr	r2, [r2, #4]
 8017968:	6443      	str	r3, [r0, #68]	; 0x44
 801796a:	9b02      	ldr	r3, [sp, #8]
 801796c:	60c2      	str	r2, [r0, #12]
 801796e:	7401      	strb	r1, [r0, #16]
 8017970:	6141      	str	r1, [r0, #20]
 8017972:	7601      	strb	r1, [r0, #24]
 8017974:	8701      	strh	r1, [r0, #56]	; 0x38
 8017976:	8401      	strh	r1, [r0, #32]
 8017978:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801797c:	6483      	str	r3, [r0, #72]	; 0x48
 801797e:	bc30      	pop	{r4, r5}
 8017980:	f7f1 baa4 	b.w	8008ecc <_ZN8touchgfx12TextProvider18initializeInternalEv>

08017984 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8017984:	b408      	push	{r3}
 8017986:	b510      	push	{r4, lr}
 8017988:	b085      	sub	sp, #20
 801798a:	ac07      	add	r4, sp, #28
 801798c:	f854 3b04 	ldr.w	r3, [r4], #4
 8017990:	9300      	str	r3, [sp, #0]
 8017992:	4613      	mov	r3, r2
 8017994:	4622      	mov	r2, r4
 8017996:	9403      	str	r4, [sp, #12]
 8017998:	f7ff ffdf 	bl	801795a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801799c:	b005      	add	sp, #20
 801799e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80179a2:	b001      	add	sp, #4
 80179a4:	4770      	bx	lr

080179a6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80179a6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80179a8:	4605      	mov	r5, r0
 80179aa:	4608      	mov	r0, r1
 80179ac:	b1e9      	cbz	r1, 80179ea <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80179ae:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80179b2:	460b      	mov	r3, r1
 80179b4:	f101 0708 	add.w	r7, r1, #8
 80179b8:	4622      	mov	r2, r4
 80179ba:	6818      	ldr	r0, [r3, #0]
 80179bc:	6859      	ldr	r1, [r3, #4]
 80179be:	4626      	mov	r6, r4
 80179c0:	c603      	stmia	r6!, {r0, r1}
 80179c2:	3308      	adds	r3, #8
 80179c4:	42bb      	cmp	r3, r7
 80179c6:	4634      	mov	r4, r6
 80179c8:	d1f7      	bne.n	80179ba <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80179ca:	6818      	ldr	r0, [r3, #0]
 80179cc:	6030      	str	r0, [r6, #0]
 80179ce:	889b      	ldrh	r3, [r3, #4]
 80179d0:	80b3      	strh	r3, [r6, #4]
 80179d2:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80179d6:	015b      	lsls	r3, r3, #5
 80179d8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80179dc:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80179e0:	430b      	orrs	r3, r1
 80179e2:	425b      	negs	r3, r3
 80179e4:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80179e8:	4610      	mov	r0, r2
 80179ea:	bdf0      	pop	{r4, r5, r6, r7, pc}

080179ec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80179ec:	b538      	push	{r3, r4, r5, lr}
 80179ee:	460c      	mov	r4, r1
 80179f0:	6811      	ldr	r1, [r2, #0]
 80179f2:	4610      	mov	r0, r2
 80179f4:	68cd      	ldr	r5, [r1, #12]
 80179f6:	4619      	mov	r1, r3
 80179f8:	47a8      	blx	r5
 80179fa:	2800      	cmp	r0, #0
 80179fc:	bf08      	it	eq
 80179fe:	4620      	moveq	r0, r4
 8017a00:	bd38      	pop	{r3, r4, r5, pc}
	...

08017a04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8017a04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017a06:	4604      	mov	r4, r0
 8017a08:	4615      	mov	r5, r2
 8017a0a:	4608      	mov	r0, r1
 8017a0c:	b93a      	cbnz	r2, 8017a1e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8017a0e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017a12:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8017a16:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8017a1a:	4628      	mov	r0, r5
 8017a1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017a1e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8017a22:	8893      	ldrh	r3, [r2, #4]
 8017a24:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8017a28:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017a2c:	79ee      	ldrb	r6, [r5, #7]
 8017a2e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8017a32:	4316      	orrs	r6, r2
 8017a34:	19da      	adds	r2, r3, r7
 8017a36:	b291      	uxth	r1, r2
 8017a38:	291d      	cmp	r1, #29
 8017a3a:	b2b7      	uxth	r7, r6
 8017a3c:	d87a      	bhi.n	8017b34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017a3e:	2201      	movs	r2, #1
 8017a40:	408a      	lsls	r2, r1
 8017a42:	4975      	ldr	r1, [pc, #468]	; (8017c18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8017a44:	420a      	tst	r2, r1
 8017a46:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8017a4a:	d12d      	bne.n	8017aa8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8017a4c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8017a50:	d070      	beq.n	8017b34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017a52:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8017a56:	462b      	mov	r3, r5
 8017a58:	f105 0e08 	add.w	lr, r5, #8
 8017a5c:	4615      	mov	r5, r2
 8017a5e:	6818      	ldr	r0, [r3, #0]
 8017a60:	6859      	ldr	r1, [r3, #4]
 8017a62:	4694      	mov	ip, r2
 8017a64:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017a68:	3308      	adds	r3, #8
 8017a6a:	4573      	cmp	r3, lr
 8017a6c:	4662      	mov	r2, ip
 8017a6e:	d1f6      	bne.n	8017a5e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8017a70:	6818      	ldr	r0, [r3, #0]
 8017a72:	f8cc 0000 	str.w	r0, [ip]
 8017a76:	889b      	ldrh	r3, [r3, #4]
 8017a78:	f8ac 3004 	strh.w	r3, [ip, #4]
 8017a7c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8017a80:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8017a84:	b2b3      	uxth	r3, r6
 8017a86:	1aca      	subs	r2, r1, r3
 8017a88:	b292      	uxth	r2, r2
 8017a8a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8017a8e:	10d2      	asrs	r2, r2, #3
 8017a90:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8017a94:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8017a98:	4302      	orrs	r2, r0
 8017a9a:	1bcf      	subs	r7, r1, r7
 8017a9c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8017aa0:	1afb      	subs	r3, r7, r3
 8017aa2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017aa6:	e7b8      	b.n	8017a1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017aa8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017aaa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017aae:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8017ab0:	f640 6333 	movw	r3, #3635	; 0xe33
 8017ab4:	4299      	cmp	r1, r3
 8017ab6:	d110      	bne.n	8017ada <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8017ab8:	6803      	ldr	r3, [r0, #0]
 8017aba:	68db      	ldr	r3, [r3, #12]
 8017abc:	4798      	blx	r3
 8017abe:	7b41      	ldrb	r1, [r0, #13]
 8017ac0:	00cb      	lsls	r3, r1, #3
 8017ac2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017ac6:	7a03      	ldrb	r3, [r0, #8]
 8017ac8:	0648      	lsls	r0, r1, #25
 8017aca:	ea43 0302 	orr.w	r3, r3, r2
 8017ace:	bf44      	itt	mi
 8017ad0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017ad4:	b21b      	sxthmi	r3, r3
 8017ad6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017ada:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8017ade:	443b      	add	r3, r7
 8017ae0:	4433      	add	r3, r6
 8017ae2:	b29b      	uxth	r3, r3
 8017ae4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8017ae8:	462a      	mov	r2, r5
 8017aea:	f105 0c08 	add.w	ip, r5, #8
 8017aee:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017af2:	4635      	mov	r5, r6
 8017af4:	6810      	ldr	r0, [r2, #0]
 8017af6:	6851      	ldr	r1, [r2, #4]
 8017af8:	4637      	mov	r7, r6
 8017afa:	c703      	stmia	r7!, {r0, r1}
 8017afc:	3208      	adds	r2, #8
 8017afe:	4562      	cmp	r2, ip
 8017b00:	463e      	mov	r6, r7
 8017b02:	d1f7      	bne.n	8017af4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8017b04:	6810      	ldr	r0, [r2, #0]
 8017b06:	6038      	str	r0, [r7, #0]
 8017b08:	8892      	ldrh	r2, [r2, #4]
 8017b0a:	80ba      	strh	r2, [r7, #4]
 8017b0c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017b10:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017b14:	10db      	asrs	r3, r3, #3
 8017b16:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017b1a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017b1e:	4313      	orrs	r3, r2
 8017b20:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017b24:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8017b28:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8017b2c:	1a9b      	subs	r3, r3, r2
 8017b2e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8017b32:	e772      	b.n	8017a1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017b34:	f023 0204 	bic.w	r2, r3, #4
 8017b38:	f640 611b 	movw	r1, #3611	; 0xe1b
 8017b3c:	428a      	cmp	r2, r1
 8017b3e:	d003      	beq.n	8017b48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8017b40:	f640 621d 	movw	r2, #3613	; 0xe1d
 8017b44:	4293      	cmp	r3, r2
 8017b46:	d120      	bne.n	8017b8a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8017b48:	3b01      	subs	r3, #1
 8017b4a:	4602      	mov	r2, r0
 8017b4c:	b29b      	uxth	r3, r3
 8017b4e:	4629      	mov	r1, r5
 8017b50:	4620      	mov	r0, r4
 8017b52:	f7ff ff4b 	bl	80179ec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017b56:	7b41      	ldrb	r1, [r0, #13]
 8017b58:	00cb      	lsls	r3, r1, #3
 8017b5a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017b5e:	7a03      	ldrb	r3, [r0, #8]
 8017b60:	0649      	lsls	r1, r1, #25
 8017b62:	ea43 0302 	orr.w	r3, r3, r2
 8017b66:	bf44      	itt	mi
 8017b68:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017b6c:	b21b      	sxthmi	r3, r3
 8017b6e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017b72:	7b6b      	ldrb	r3, [r5, #13]
 8017b74:	7aaa      	ldrb	r2, [r5, #10]
 8017b76:	005b      	lsls	r3, r3, #1
 8017b78:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017b7c:	4313      	orrs	r3, r2
 8017b7e:	115a      	asrs	r2, r3, #5
 8017b80:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8017b84:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017b88:	e036      	b.n	8017bf8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8017b8a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8017b8e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8017b92:	7a2a      	ldrb	r2, [r5, #8]
 8017b94:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8017b98:	ea42 0201 	orr.w	r2, r2, r1
 8017b9c:	bf1c      	itt	ne
 8017b9e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8017ba2:	b212      	sxthne	r2, r2
 8017ba4:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017ba8:	f640 6109 	movw	r1, #3593	; 0xe09
 8017bac:	f023 0210 	bic.w	r2, r3, #16
 8017bb0:	428a      	cmp	r2, r1
 8017bb2:	d003      	beq.n	8017bbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8017bb4:	f640 6213 	movw	r2, #3603	; 0xe13
 8017bb8:	4293      	cmp	r3, r2
 8017bba:	d12a      	bne.n	8017c12 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8017bbc:	7b6e      	ldrb	r6, [r5, #13]
 8017bbe:	0076      	lsls	r6, r6, #1
 8017bc0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8017bc4:	7aae      	ldrb	r6, [r5, #10]
 8017bc6:	4316      	orrs	r6, r2
 8017bc8:	f640 6213 	movw	r2, #3603	; 0xe13
 8017bcc:	4293      	cmp	r3, r2
 8017bce:	bf18      	it	ne
 8017bd0:	f103 33ff 	addne.w	r3, r3, #4294967295
 8017bd4:	4602      	mov	r2, r0
 8017bd6:	bf14      	ite	ne
 8017bd8:	b29b      	uxthne	r3, r3
 8017bda:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8017bde:	4629      	mov	r1, r5
 8017be0:	4620      	mov	r0, r4
 8017be2:	f7ff ff03 	bl	80179ec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017be6:	7b43      	ldrb	r3, [r0, #13]
 8017be8:	7a82      	ldrb	r2, [r0, #10]
 8017bea:	005b      	lsls	r3, r3, #1
 8017bec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017bf0:	4313      	orrs	r3, r2
 8017bf2:	1af6      	subs	r6, r6, r3
 8017bf4:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8017bf8:	7b69      	ldrb	r1, [r5, #13]
 8017bfa:	00cb      	lsls	r3, r1, #3
 8017bfc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017c00:	7a2b      	ldrb	r3, [r5, #8]
 8017c02:	4313      	orrs	r3, r2
 8017c04:	064a      	lsls	r2, r1, #25
 8017c06:	bf44      	itt	mi
 8017c08:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017c0c:	b21b      	sxthmi	r3, r3
 8017c0e:	1bdb      	subs	r3, r3, r7
 8017c10:	e747      	b.n	8017aa2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8017c12:	2300      	movs	r3, #0
 8017c14:	e7b6      	b.n	8017b84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8017c16:	bf00      	nop
 8017c18:	3fc00079 	.word	0x3fc00079

08017c1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8017c1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017c20:	4604      	mov	r4, r0
 8017c22:	b942      	cbnz	r2, 8017c36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8017c24:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017c28:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8017c2c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8017c30:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017c34:	e047      	b.n	8017cc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017c36:	7b51      	ldrb	r1, [r2, #13]
 8017c38:	8893      	ldrh	r3, [r2, #4]
 8017c3a:	010d      	lsls	r5, r1, #4
 8017c3c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8017c40:	79d5      	ldrb	r5, [r2, #7]
 8017c42:	4305      	orrs	r5, r0
 8017c44:	2d04      	cmp	r5, #4
 8017c46:	bfcc      	ite	gt
 8017c48:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8017c4c:	f04f 0e01 	movle.w	lr, #1
 8017c50:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8017c54:	f200 80ab 	bhi.w	8017dae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017c58:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8017c5c:	4283      	cmp	r3, r0
 8017c5e:	d216      	bcs.n	8017c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017c60:	f240 605b 	movw	r0, #1627	; 0x65b
 8017c64:	4283      	cmp	r3, r0
 8017c66:	d859      	bhi.n	8017d1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017c68:	f240 6057 	movw	r0, #1623	; 0x657
 8017c6c:	4283      	cmp	r3, r0
 8017c6e:	d20e      	bcs.n	8017c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017c70:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017c74:	d24a      	bcs.n	8017d0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8017c76:	f240 604e 	movw	r0, #1614	; 0x64e
 8017c7a:	4283      	cmp	r3, r0
 8017c7c:	d207      	bcs.n	8017c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017c7e:	f240 601a 	movw	r0, #1562	; 0x61a
 8017c82:	4283      	cmp	r3, r0
 8017c84:	d02a      	beq.n	8017cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017c86:	d821      	bhi.n	8017ccc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017c88:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8017c8c:	d35b      	bcc.n	8017d46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017c8e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8017c92:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017c96:	f040 80d0 	bne.w	8017e3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017c9a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8017c9e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017ca2:	f040 80ca 	bne.w	8017e3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8017ca6:	00cb      	lsls	r3, r1, #3
 8017ca8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017cac:	7a13      	ldrb	r3, [r2, #8]
 8017cae:	0649      	lsls	r1, r1, #25
 8017cb0:	ea43 0300 	orr.w	r3, r3, r0
 8017cb4:	bf44      	itt	mi
 8017cb6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017cba:	b21b      	sxthmi	r3, r3
 8017cbc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017cc0:	1b5d      	subs	r5, r3, r5
 8017cc2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017cc6:	4610      	mov	r0, r2
 8017cc8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017ccc:	f240 604b 	movw	r0, #1611	; 0x64b
 8017cd0:	4283      	cmp	r3, r0
 8017cd2:	d338      	bcc.n	8017d46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017cd4:	f240 604c 	movw	r0, #1612	; 0x64c
 8017cd8:	4283      	cmp	r3, r0
 8017cda:	d9d8      	bls.n	8017c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017cdc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8017ce0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8017ce4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017ce8:	f040 80f2 	bne.w	8017ed0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017cec:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017cf0:	f040 80ee 	bne.w	8017ed0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017cf4:	00cb      	lsls	r3, r1, #3
 8017cf6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017cfa:	7a13      	ldrb	r3, [r2, #8]
 8017cfc:	064e      	lsls	r6, r1, #25
 8017cfe:	ea43 0300 	orr.w	r3, r3, r0
 8017d02:	bf44      	itt	mi
 8017d04:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017d08:	b21b      	sxthmi	r3, r3
 8017d0a:	e7d9      	b.n	8017cc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8017d0c:	f240 6054 	movw	r0, #1620	; 0x654
 8017d10:	4283      	cmp	r3, r0
 8017d12:	d8e3      	bhi.n	8017cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017d14:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017d18:	d9e0      	bls.n	8017cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017d1a:	e7b8      	b.n	8017c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017d1c:	f240 6074 	movw	r0, #1652	; 0x674
 8017d20:	4283      	cmp	r3, r0
 8017d22:	d0b4      	beq.n	8017c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017d24:	d82d      	bhi.n	8017d82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8017d26:	f240 605e 	movw	r0, #1630	; 0x65e
 8017d2a:	4283      	cmp	r3, r0
 8017d2c:	d804      	bhi.n	8017d38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8017d2e:	f240 605d 	movw	r0, #1629	; 0x65d
 8017d32:	4283      	cmp	r3, r0
 8017d34:	d3d2      	bcc.n	8017cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017d36:	e7aa      	b.n	8017c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017d38:	f240 605f 	movw	r0, #1631	; 0x65f
 8017d3c:	4283      	cmp	r3, r0
 8017d3e:	d0cd      	beq.n	8017cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017d40:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8017d44:	d0a3      	beq.n	8017c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017d46:	00cb      	lsls	r3, r1, #3
 8017d48:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017d4c:	7a13      	ldrb	r3, [r2, #8]
 8017d4e:	0649      	lsls	r1, r1, #25
 8017d50:	ea43 0300 	orr.w	r3, r3, r0
 8017d54:	bf44      	itt	mi
 8017d56:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017d5a:	b21b      	sxthmi	r3, r3
 8017d5c:	1b5d      	subs	r5, r3, r5
 8017d5e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017d62:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017d66:	7b53      	ldrb	r3, [r2, #13]
 8017d68:	015b      	lsls	r3, r3, #5
 8017d6a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017d6e:	7993      	ldrb	r3, [r2, #6]
 8017d70:	430b      	orrs	r3, r1
 8017d72:	005b      	lsls	r3, r3, #1
 8017d74:	2105      	movs	r1, #5
 8017d76:	fb93 f3f1 	sdiv	r3, r3, r1
 8017d7a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8017d7e:	440b      	add	r3, r1
 8017d80:	e756      	b.n	8017c30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8017d82:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017d86:	4283      	cmp	r3, r0
 8017d88:	d809      	bhi.n	8017d9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8017d8a:	f240 60df 	movw	r0, #1759	; 0x6df
 8017d8e:	4283      	cmp	r3, r0
 8017d90:	f4bf af7d 	bcs.w	8017c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017d94:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017d98:	2b05      	cmp	r3, #5
 8017d9a:	d8d4      	bhi.n	8017d46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017d9c:	e777      	b.n	8017c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017d9e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8017da2:	4283      	cmp	r3, r0
 8017da4:	d09a      	beq.n	8017cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017da6:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8017daa:	4283      	cmp	r3, r0
 8017dac:	e7ca      	b.n	8017d44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8017dae:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8017db2:	d22b      	bcs.n	8017e0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8017db4:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8017db8:	4283      	cmp	r3, r0
 8017dba:	d28f      	bcs.n	8017cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017dbc:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8017dc0:	4283      	cmp	r3, r0
 8017dc2:	d816      	bhi.n	8017df2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8017dc4:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8017dc8:	4283      	cmp	r3, r0
 8017dca:	f4bf af60 	bcs.w	8017c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017dce:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8017dd2:	4283      	cmp	r3, r0
 8017dd4:	d80a      	bhi.n	8017dec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8017dd6:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8017dda:	4283      	cmp	r3, r0
 8017ddc:	f4bf af57 	bcs.w	8017c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017de0:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8017de4:	4283      	cmp	r3, r0
 8017de6:	f43f af79 	beq.w	8017cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017dea:	e7ac      	b.n	8017d46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017dec:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8017df0:	e7f8      	b.n	8017de4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8017df2:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8017df6:	4283      	cmp	r3, r0
 8017df8:	d802      	bhi.n	8017e00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8017dfa:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8017dfe:	e798      	b.n	8017d32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8017e00:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8017e04:	4283      	cmp	r3, r0
 8017e06:	f47f af42 	bne.w	8017c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e0a:	e767      	b.n	8017cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017e0c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8017e10:	4283      	cmp	r3, r0
 8017e12:	f43f af63 	beq.w	8017cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017e16:	d802      	bhi.n	8017e1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8017e18:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8017e1c:	e7f2      	b.n	8017e04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8017e1e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8017e22:	4283      	cmp	r3, r0
 8017e24:	d805      	bhi.n	8017e32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8017e26:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8017e2a:	4283      	cmp	r3, r0
 8017e2c:	f4ff af2f 	bcc.w	8017c8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017e30:	e754      	b.n	8017cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017e32:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8017e36:	4283      	cmp	r3, r0
 8017e38:	e7af      	b.n	8017d9a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8017e3a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017e3e:	4617      	mov	r7, r2
 8017e40:	f102 0808 	add.w	r8, r2, #8
 8017e44:	4666      	mov	r6, ip
 8017e46:	6838      	ldr	r0, [r7, #0]
 8017e48:	6879      	ldr	r1, [r7, #4]
 8017e4a:	46e6      	mov	lr, ip
 8017e4c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017e50:	3708      	adds	r7, #8
 8017e52:	4547      	cmp	r7, r8
 8017e54:	46f4      	mov	ip, lr
 8017e56:	d1f6      	bne.n	8017e46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017e58:	6838      	ldr	r0, [r7, #0]
 8017e5a:	f8ce 0000 	str.w	r0, [lr]
 8017e5e:	88b9      	ldrh	r1, [r7, #4]
 8017e60:	f8ae 1004 	strh.w	r1, [lr, #4]
 8017e64:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017e68:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017e6c:	d009      	beq.n	8017e82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8017e6e:	7b51      	ldrb	r1, [r2, #13]
 8017e70:	7992      	ldrb	r2, [r2, #6]
 8017e72:	0149      	lsls	r1, r1, #5
 8017e74:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017e78:	4311      	orrs	r1, r2
 8017e7a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017e7e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017e82:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017e86:	b2ad      	uxth	r5, r5
 8017e88:	d00d      	beq.n	8017ea6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8017e8a:	442b      	add	r3, r5
 8017e8c:	b29b      	uxth	r3, r3
 8017e8e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017e92:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017e96:	10db      	asrs	r3, r3, #3
 8017e98:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017e9c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017ea0:	4313      	orrs	r3, r2
 8017ea2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017ea6:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017eaa:	00cb      	lsls	r3, r1, #3
 8017eac:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017eb0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8017eb4:	064f      	lsls	r7, r1, #25
 8017eb6:	ea43 0302 	orr.w	r3, r3, r2
 8017eba:	bf44      	itt	mi
 8017ebc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017ec0:	b21b      	sxthmi	r3, r3
 8017ec2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017ec6:	1b5b      	subs	r3, r3, r5
 8017ec8:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8017ecc:	4632      	mov	r2, r6
 8017ece:	e6fa      	b.n	8017cc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017ed0:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017ed4:	4617      	mov	r7, r2
 8017ed6:	f102 0908 	add.w	r9, r2, #8
 8017eda:	4666      	mov	r6, ip
 8017edc:	6838      	ldr	r0, [r7, #0]
 8017ede:	6879      	ldr	r1, [r7, #4]
 8017ee0:	46e0      	mov	r8, ip
 8017ee2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8017ee6:	3708      	adds	r7, #8
 8017ee8:	454f      	cmp	r7, r9
 8017eea:	46c4      	mov	ip, r8
 8017eec:	d1f6      	bne.n	8017edc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8017eee:	6838      	ldr	r0, [r7, #0]
 8017ef0:	f8c8 0000 	str.w	r0, [r8]
 8017ef4:	88b9      	ldrh	r1, [r7, #4]
 8017ef6:	f8a8 1004 	strh.w	r1, [r8, #4]
 8017efa:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017efe:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017f02:	d009      	beq.n	8017f18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8017f04:	7b51      	ldrb	r1, [r2, #13]
 8017f06:	7992      	ldrb	r2, [r2, #6]
 8017f08:	0149      	lsls	r1, r1, #5
 8017f0a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017f0e:	4311      	orrs	r1, r2
 8017f10:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017f14:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017f18:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017f1c:	d00e      	beq.n	8017f3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8017f1e:	eba3 030e 	sub.w	r3, r3, lr
 8017f22:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017f26:	b29b      	uxth	r3, r3
 8017f28:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017f2c:	10db      	asrs	r3, r3, #3
 8017f2e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017f32:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017f36:	4313      	orrs	r3, r2
 8017f38:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017f3c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017f40:	00cb      	lsls	r3, r1, #3
 8017f42:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017f46:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8017f4a:	0648      	lsls	r0, r1, #25
 8017f4c:	ea43 0302 	orr.w	r3, r3, r2
 8017f50:	bf44      	itt	mi
 8017f52:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017f56:	b21b      	sxthmi	r3, r3
 8017f58:	1b5d      	subs	r5, r3, r5
 8017f5a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017f5e:	e7b5      	b.n	8017ecc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08017f60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8017f60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017f64:	461e      	mov	r6, r3
 8017f66:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017f68:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017f6c:	4604      	mov	r4, r0
 8017f6e:	4617      	mov	r7, r2
 8017f70:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017f74:	f7f0 ff68 	bl	8008e48 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017f78:	4605      	mov	r5, r0
 8017f7a:	b918      	cbnz	r0, 8017f84 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8017f7c:	6030      	str	r0, [r6, #0]
 8017f7e:	4628      	mov	r0, r5
 8017f80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017f84:	683b      	ldr	r3, [r7, #0]
 8017f86:	4601      	mov	r1, r0
 8017f88:	68db      	ldr	r3, [r3, #12]
 8017f8a:	4638      	mov	r0, r7
 8017f8c:	4798      	blx	r3
 8017f8e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8017f92:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8017f96:	4602      	mov	r2, r0
 8017f98:	6030      	str	r0, [r6, #0]
 8017f9a:	d213      	bcs.n	8017fc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8017f9c:	4643      	mov	r3, r8
 8017f9e:	4639      	mov	r1, r7
 8017fa0:	4620      	mov	r0, r4
 8017fa2:	f7ff fe3b 	bl	8017c1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8017fa6:	6030      	str	r0, [r6, #0]
 8017fa8:	6833      	ldr	r3, [r6, #0]
 8017faa:	b143      	cbz	r3, 8017fbe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8017fac:	7b5a      	ldrb	r2, [r3, #13]
 8017fae:	7a9b      	ldrb	r3, [r3, #10]
 8017fb0:	0052      	lsls	r2, r2, #1
 8017fb2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017fb6:	4313      	orrs	r3, r2
 8017fb8:	bf0c      	ite	eq
 8017fba:	2301      	moveq	r3, #1
 8017fbc:	2300      	movne	r3, #0
 8017fbe:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8017fc2:	e7dc      	b.n	8017f7e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8017fc4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017fc8:	b29b      	uxth	r3, r3
 8017fca:	2b7f      	cmp	r3, #127	; 0x7f
 8017fcc:	d804      	bhi.n	8017fd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8017fce:	4639      	mov	r1, r7
 8017fd0:	4620      	mov	r0, r4
 8017fd2:	f7ff fd17 	bl	8017a04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8017fd6:	e7e6      	b.n	8017fa6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8017fd8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8017fdc:	2b00      	cmp	r3, #0
 8017fde:	d0e3      	beq.n	8017fa8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017fe0:	f640 1302 	movw	r3, #2306	; 0x902
 8017fe4:	429d      	cmp	r5, r3
 8017fe6:	d1df      	bne.n	8017fa8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017fe8:	4601      	mov	r1, r0
 8017fea:	4620      	mov	r0, r4
 8017fec:	f7ff fcdb 	bl	80179a6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017ff0:	e7d9      	b.n	8017fa6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08017ff2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8017ff2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017ff6:	461e      	mov	r6, r3
 8017ff8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017ffa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017ffe:	4604      	mov	r4, r0
 8018000:	4617      	mov	r7, r2
 8018002:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018006:	f7f0 ff1f 	bl	8008e48 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801800a:	4605      	mov	r5, r0
 801800c:	b918      	cbnz	r0, 8018016 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801800e:	6030      	str	r0, [r6, #0]
 8018010:	4628      	mov	r0, r5
 8018012:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018016:	683b      	ldr	r3, [r7, #0]
 8018018:	4601      	mov	r1, r0
 801801a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801801e:	4638      	mov	r0, r7
 8018020:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8018024:	47c8      	blx	r9
 8018026:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801802a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801802e:	4602      	mov	r2, r0
 8018030:	6030      	str	r0, [r6, #0]
 8018032:	d213      	bcs.n	801805c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8018034:	4643      	mov	r3, r8
 8018036:	4639      	mov	r1, r7
 8018038:	4620      	mov	r0, r4
 801803a:	f7ff fdef 	bl	8017c1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801803e:	6030      	str	r0, [r6, #0]
 8018040:	6833      	ldr	r3, [r6, #0]
 8018042:	b143      	cbz	r3, 8018056 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8018044:	7b5a      	ldrb	r2, [r3, #13]
 8018046:	7a9b      	ldrb	r3, [r3, #10]
 8018048:	0052      	lsls	r2, r2, #1
 801804a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801804e:	4313      	orrs	r3, r2
 8018050:	bf0c      	ite	eq
 8018052:	2301      	moveq	r3, #1
 8018054:	2300      	movne	r3, #0
 8018056:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801805a:	e7d9      	b.n	8018010 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801805c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018060:	b29b      	uxth	r3, r3
 8018062:	2b7f      	cmp	r3, #127	; 0x7f
 8018064:	d804      	bhi.n	8018070 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8018066:	4639      	mov	r1, r7
 8018068:	4620      	mov	r0, r4
 801806a:	f7ff fccb 	bl	8017a04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801806e:	e7e6      	b.n	801803e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8018070:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018074:	2b00      	cmp	r3, #0
 8018076:	d0e3      	beq.n	8018040 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018078:	f640 1302 	movw	r3, #2306	; 0x902
 801807c:	429d      	cmp	r5, r3
 801807e:	d1df      	bne.n	8018040 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018080:	4601      	mov	r1, r0
 8018082:	4620      	mov	r0, r4
 8018084:	f7ff fc8f 	bl	80179a6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018088:	e7d9      	b.n	801803e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801808a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801808a:	b510      	push	{r4, lr}
 801808c:	4604      	mov	r4, r0
 801808e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8018092:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018094:	b1f1      	cbz	r1, 80180d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018096:	2b0a      	cmp	r3, #10
 8018098:	d02f      	beq.n	80180fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801809a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801809c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80180a0:	3901      	subs	r1, #1
 80180a2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80180a4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80180a8:	1c51      	adds	r1, r2, #1
 80180aa:	b289      	uxth	r1, r1
 80180ac:	2901      	cmp	r1, #1
 80180ae:	bf84      	itt	hi
 80180b0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80180b4:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80180b6:	f103 0201 	add.w	r2, r3, #1
 80180ba:	8722      	strh	r2, [r4, #56]	; 0x38
 80180bc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80180be:	bf98      	it	ls
 80180c0:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80180c2:	4413      	add	r3, r2
 80180c4:	b29b      	uxth	r3, r3
 80180c6:	2b09      	cmp	r3, #9
 80180c8:	bf88      	it	hi
 80180ca:	3b0a      	subhi	r3, #10
 80180cc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80180d0:	8458      	strh	r0, [r3, #34]	; 0x22
 80180d2:	e7dc      	b.n	801808e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80180d4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80180d6:	2b0a      	cmp	r3, #10
 80180d8:	d00f      	beq.n	80180fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80180da:	4620      	mov	r0, r4
 80180dc:	f7ff fc11 	bl	8017902 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80180e0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80180e2:	1c5a      	adds	r2, r3, #1
 80180e4:	8722      	strh	r2, [r4, #56]	; 0x38
 80180e6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80180e8:	4413      	add	r3, r2
 80180ea:	b29b      	uxth	r3, r3
 80180ec:	2b09      	cmp	r3, #9
 80180ee:	bf88      	it	hi
 80180f0:	3b0a      	subhi	r3, #10
 80180f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80180f6:	8458      	strh	r0, [r3, #34]	; 0x22
 80180f8:	e7ec      	b.n	80180d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80180fa:	bd10      	pop	{r4, pc}

080180fc <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80180fc:	b538      	push	{r3, r4, r5, lr}
 80180fe:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018100:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018104:	4604      	mov	r4, r0
 8018106:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8018108:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801810a:	3a01      	subs	r2, #1
 801810c:	8702      	strh	r2, [r0, #56]	; 0x38
 801810e:	1c5a      	adds	r2, r3, #1
 8018110:	b292      	uxth	r2, r2
 8018112:	2a09      	cmp	r2, #9
 8018114:	bf86      	itte	hi
 8018116:	3b09      	subhi	r3, #9
 8018118:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801811a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801811c:	f7ff ffb5 	bl	801808a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018120:	8c23      	ldrh	r3, [r4, #32]
 8018122:	2b01      	cmp	r3, #1
 8018124:	bf9c      	itt	ls
 8018126:	3301      	addls	r3, #1
 8018128:	8423      	strhls	r3, [r4, #32]
 801812a:	8be3      	ldrh	r3, [r4, #30]
 801812c:	b90b      	cbnz	r3, 8018132 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801812e:	2302      	movs	r3, #2
 8018130:	83e3      	strh	r3, [r4, #30]
 8018132:	8be3      	ldrh	r3, [r4, #30]
 8018134:	3b01      	subs	r3, #1
 8018136:	b29b      	uxth	r3, r3
 8018138:	83e3      	strh	r3, [r4, #30]
 801813a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801813e:	4628      	mov	r0, r5
 8018140:	8365      	strh	r5, [r4, #26]
 8018142:	bd38      	pop	{r3, r4, r5, pc}

08018144 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8018144:	428a      	cmp	r2, r1
 8018146:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801814a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801814c:	d931      	bls.n	80181b2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801814e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8018150:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8018154:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8018158:	19ee      	adds	r6, r5, r7
 801815a:	1a54      	subs	r4, r2, r1
 801815c:	3e01      	subs	r6, #1
 801815e:	fa1f fe84 	uxth.w	lr, r4
 8018162:	b2b4      	uxth	r4, r6
 8018164:	eba4 090e 	sub.w	r9, r4, lr
 8018168:	fa1f f989 	uxth.w	r9, r9
 801816c:	2c09      	cmp	r4, #9
 801816e:	4626      	mov	r6, r4
 8018170:	bf88      	it	hi
 8018172:	f1a4 060a 	subhi.w	r6, r4, #10
 8018176:	f1bc 0f00 	cmp.w	ip, #0
 801817a:	bf08      	it	eq
 801817c:	f04f 0c02 	moveq.w	ip, #2
 8018180:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018184:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018188:	fa1f fc8c 	uxth.w	ip, ip
 801818c:	3c01      	subs	r4, #1
 801818e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8018192:	b2a4      	uxth	r4, r4
 8018194:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8018198:	454c      	cmp	r4, r9
 801819a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801819e:	d1e5      	bne.n	801816c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80181a0:	eba5 050e 	sub.w	r5, r5, lr
 80181a4:	eb0e 0408 	add.w	r4, lr, r8
 80181a8:	8705      	strh	r5, [r0, #56]	; 0x38
 80181aa:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80181ae:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80181b2:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80181b4:	1a64      	subs	r4, r4, r1
 80181b6:	4439      	add	r1, r7
 80181b8:	b289      	uxth	r1, r1
 80181ba:	2909      	cmp	r1, #9
 80181bc:	bf88      	it	hi
 80181be:	390a      	subhi	r1, #10
 80181c0:	8704      	strh	r4, [r0, #56]	; 0x38
 80181c2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80181c4:	250a      	movs	r5, #10
 80181c6:	b18a      	cbz	r2, 80181ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80181c8:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80181ca:	3a01      	subs	r2, #1
 80181cc:	b292      	uxth	r2, r2
 80181ce:	3101      	adds	r1, #1
 80181d0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80181d4:	8701      	strh	r1, [r0, #56]	; 0x38
 80181d6:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80181d8:	b901      	cbnz	r1, 80181dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80181da:	86c5      	strh	r5, [r0, #54]	; 0x36
 80181dc:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80181de:	3901      	subs	r1, #1
 80181e0:	b289      	uxth	r1, r1
 80181e2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80181e4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80181e8:	844c      	strh	r4, [r1, #34]	; 0x22
 80181ea:	e7ec      	b.n	80181c6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80181ec:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80181f0:	f7ff bf4b 	b.w	801808a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080181f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80181f4:	b570      	push	{r4, r5, r6, lr}
 80181f6:	2500      	movs	r5, #0
 80181f8:	4295      	cmp	r5, r2
 80181fa:	d011      	beq.n	8018220 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80181fc:	8bc4      	ldrh	r4, [r0, #30]
 80181fe:	f831 6b02 	ldrh.w	r6, [r1], #2
 8018202:	4414      	add	r4, r2
 8018204:	3c01      	subs	r4, #1
 8018206:	1b64      	subs	r4, r4, r5
 8018208:	b2a4      	uxth	r4, r4
 801820a:	2c01      	cmp	r4, #1
 801820c:	bf88      	it	hi
 801820e:	3c02      	subhi	r4, #2
 8018210:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018214:	8b64      	ldrh	r4, [r4, #26]
 8018216:	42b4      	cmp	r4, r6
 8018218:	d117      	bne.n	801824a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801821a:	3501      	adds	r5, #1
 801821c:	b2ad      	uxth	r5, r5
 801821e:	e7eb      	b.n	80181f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8018220:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018224:	2400      	movs	r4, #0
 8018226:	4413      	add	r3, r2
 8018228:	b2a2      	uxth	r2, r4
 801822a:	429a      	cmp	r2, r3
 801822c:	da0f      	bge.n	801824e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801822e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8018230:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8018234:	4432      	add	r2, r6
 8018236:	b292      	uxth	r2, r2
 8018238:	2a09      	cmp	r2, #9
 801823a:	bf88      	it	hi
 801823c:	3a0a      	subhi	r2, #10
 801823e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018242:	3401      	adds	r4, #1
 8018244:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8018246:	42aa      	cmp	r2, r5
 8018248:	d0ee      	beq.n	8018228 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801824a:	2000      	movs	r0, #0
 801824c:	bd70      	pop	{r4, r5, r6, pc}
 801824e:	2001      	movs	r0, #1
 8018250:	e7fc      	b.n	801824c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08018252 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8018252:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018256:	4605      	mov	r5, r0
 8018258:	4616      	mov	r6, r2
 801825a:	1c8c      	adds	r4, r1, #2
 801825c:	8809      	ldrh	r1, [r1, #0]
 801825e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8018262:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8018266:	42b3      	cmp	r3, r6
 8018268:	d124      	bne.n	80182b4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801826a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801826e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8018272:	f001 070f 	and.w	r7, r1, #15
 8018276:	f8cd 8000 	str.w	r8, [sp]
 801827a:	464b      	mov	r3, r9
 801827c:	4652      	mov	r2, sl
 801827e:	4621      	mov	r1, r4
 8018280:	4628      	mov	r0, r5
 8018282:	f7ff ffb7 	bl	80181f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8018286:	4683      	mov	fp, r0
 8018288:	b168      	cbz	r0, 80182a6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801828a:	eb0a 0109 	add.w	r1, sl, r9
 801828e:	4441      	add	r1, r8
 8018290:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8018294:	463a      	mov	r2, r7
 8018296:	4649      	mov	r1, r9
 8018298:	4628      	mov	r0, r5
 801829a:	f7ff ff53 	bl	8018144 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801829e:	4658      	mov	r0, fp
 80182a0:	b003      	add	sp, #12
 80182a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80182a6:	eb07 010a 	add.w	r1, r7, sl
 80182aa:	4449      	add	r1, r9
 80182ac:	4441      	add	r1, r8
 80182ae:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80182b2:	e7d2      	b.n	801825a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80182b4:	f04f 0b00 	mov.w	fp, #0
 80182b8:	e7f1      	b.n	801829e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080182ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80182ba:	b570      	push	{r4, r5, r6, lr}
 80182bc:	8810      	ldrh	r0, [r2, #0]
 80182be:	4298      	cmp	r0, r3
 80182c0:	d817      	bhi.n	80182f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80182c2:	1e48      	subs	r0, r1, #1
 80182c4:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80182c8:	4298      	cmp	r0, r3
 80182ca:	d312      	bcc.n	80182f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80182cc:	2400      	movs	r4, #0
 80182ce:	428c      	cmp	r4, r1
 80182d0:	d20f      	bcs.n	80182f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80182d2:	1860      	adds	r0, r4, r1
 80182d4:	1040      	asrs	r0, r0, #1
 80182d6:	0085      	lsls	r5, r0, #2
 80182d8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80182dc:	42b3      	cmp	r3, r6
 80182de:	d902      	bls.n	80182e6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80182e0:	3001      	adds	r0, #1
 80182e2:	b284      	uxth	r4, r0
 80182e4:	e7f3      	b.n	80182ce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80182e6:	d201      	bcs.n	80182ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80182e8:	b281      	uxth	r1, r0
 80182ea:	e7f0      	b.n	80182ce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80182ec:	442a      	add	r2, r5
 80182ee:	8850      	ldrh	r0, [r2, #2]
 80182f0:	bd70      	pop	{r4, r5, r6, pc}
 80182f2:	2000      	movs	r0, #0
 80182f4:	e7fc      	b.n	80182f0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080182f6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80182f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80182fa:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80182fc:	886f      	ldrh	r7, [r5, #2]
 80182fe:	4604      	mov	r4, r0
 8018300:	087f      	lsrs	r7, r7, #1
 8018302:	260b      	movs	r6, #11
 8018304:	3e01      	subs	r6, #1
 8018306:	d013      	beq.n	8018330 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018308:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801830a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801830e:	462a      	mov	r2, r5
 8018310:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018314:	4639      	mov	r1, r7
 8018316:	4643      	mov	r3, r8
 8018318:	4620      	mov	r0, r4
 801831a:	f7ff ffce 	bl	80182ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801831e:	b138      	cbz	r0, 8018330 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018320:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8018324:	4642      	mov	r2, r8
 8018326:	4620      	mov	r0, r4
 8018328:	f7ff ff93 	bl	8018252 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801832c:	2800      	cmp	r0, #0
 801832e:	d1e9      	bne.n	8018304 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8018330:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018334 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8018334:	b570      	push	{r4, r5, r6, lr}
 8018336:	694a      	ldr	r2, [r1, #20]
 8018338:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801833a:	684b      	ldr	r3, [r1, #4]
 801833c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801833e:	1b54      	subs	r4, r2, r5
 8018340:	f000 8106 	beq.w	8018550 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8018344:	1b9b      	subs	r3, r3, r6
 8018346:	d003      	beq.n	8018350 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018348:	4363      	muls	r3, r4
 801834a:	2210      	movs	r2, #16
 801834c:	fb93 f3f2 	sdiv	r3, r3, r2
 8018350:	680c      	ldr	r4, [r1, #0]
 8018352:	698a      	ldr	r2, [r1, #24]
 8018354:	1b65      	subs	r5, r4, r5
 8018356:	f000 80fd 	beq.w	8018554 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801835a:	1b92      	subs	r2, r2, r6
 801835c:	d003      	beq.n	8018366 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801835e:	436a      	muls	r2, r5
 8018360:	2410      	movs	r4, #16
 8018362:	fb92 f2f4 	sdiv	r2, r2, r4
 8018366:	1a9b      	subs	r3, r3, r2
 8018368:	ee07 3a90 	vmov	s15, r3
 801836c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8018590 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8018370:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018374:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018378:	ee67 7a84 	vmul.f32	s15, s15, s8
 801837c:	460a      	mov	r2, r1
 801837e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8018382:	4603      	mov	r3, r0
 8018384:	f100 040c 	add.w	r4, r0, #12
 8018388:	eeb1 6a43 	vneg.f32	s12, s6
 801838c:	edd2 7a02 	vldr	s15, [r2, #8]
 8018390:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018394:	3214      	adds	r2, #20
 8018396:	ece3 6a01 	vstmia	r3!, {s13}
 801839a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801839e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80183a2:	429c      	cmp	r4, r3
 80183a4:	edc3 7a02 	vstr	s15, [r3, #8]
 80183a8:	ed52 7a01 	vldr	s15, [r2, #-4]
 80183ac:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80183b0:	edc3 7a05 	vstr	s15, [r3, #20]
 80183b4:	d1ea      	bne.n	801838c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80183b6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80183b8:	698b      	ldr	r3, [r1, #24]
 80183ba:	edd0 4a02 	vldr	s9, [r0, #8]
 80183be:	edd0 3a00 	vldr	s7, [r0]
 80183c2:	edd0 6a01 	vldr	s13, [r0, #4]
 80183c6:	ed90 5a05 	vldr	s10, [r0, #20]
 80183ca:	ed90 2a03 	vldr	s4, [r0, #12]
 80183ce:	edd0 5a04 	vldr	s11, [r0, #16]
 80183d2:	ed90 1a07 	vldr	s2, [r0, #28]
 80183d6:	edd0 2a06 	vldr	s5, [r0, #24]
 80183da:	1a9b      	subs	r3, r3, r2
 80183dc:	ee07 3a90 	vmov	s15, r3
 80183e0:	684b      	ldr	r3, [r1, #4]
 80183e2:	1a9b      	subs	r3, r3, r2
 80183e4:	ee07 3a10 	vmov	s14, r3
 80183e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80183ec:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80183f0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80183f4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80183f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80183fc:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8018400:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018404:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8018408:	eee6 7a87 	vfma.f32	s15, s13, s14
 801840c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8018410:	ee67 7a83 	vmul.f32	s15, s15, s6
 8018414:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8018418:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801841a:	694a      	ldr	r2, [r1, #20]
 801841c:	1b13      	subs	r3, r2, r4
 801841e:	ee07 3a10 	vmov	s14, r3
 8018422:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018426:	680b      	ldr	r3, [r1, #0]
 8018428:	ee27 7a04 	vmul.f32	s14, s14, s8
 801842c:	1b1b      	subs	r3, r3, r4
 801842e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8018432:	ee07 3a10 	vmov	s14, r3
 8018436:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801843a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801843e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8018442:	ee64 4a86 	vmul.f32	s9, s9, s12
 8018446:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801844a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801844c:	698b      	ldr	r3, [r1, #24]
 801844e:	1a9b      	subs	r3, r3, r2
 8018450:	ee06 3a90 	vmov	s13, r3
 8018454:	684b      	ldr	r3, [r1, #4]
 8018456:	1a9b      	subs	r3, r3, r2
 8018458:	ee07 3a10 	vmov	s14, r3
 801845c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018460:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018464:	ee66 6a84 	vmul.f32	s13, s13, s8
 8018468:	ee27 7a04 	vmul.f32	s14, s14, s8
 801846c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8018470:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018474:	ee66 6a83 	vmul.f32	s13, s13, s6
 8018478:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801847c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801847e:	694a      	ldr	r2, [r1, #20]
 8018480:	1b13      	subs	r3, r2, r4
 8018482:	ee07 3a10 	vmov	s14, r3
 8018486:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801848a:	680b      	ldr	r3, [r1, #0]
 801848c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018490:	1b1b      	subs	r3, r3, r4
 8018492:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8018496:	ee07 3a10 	vmov	s14, r3
 801849a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801849e:	ee27 7a04 	vmul.f32	s14, s14, s8
 80184a2:	eea5 5a87 	vfma.f32	s10, s11, s14
 80184a6:	edd0 5a08 	vldr	s11, [r0, #32]
 80184aa:	ee25 5a06 	vmul.f32	s10, s10, s12
 80184ae:	ee31 1a65 	vsub.f32	s2, s2, s11
 80184b2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80184b6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80184b8:	698b      	ldr	r3, [r1, #24]
 80184ba:	1a9b      	subs	r3, r3, r2
 80184bc:	ee07 3a10 	vmov	s14, r3
 80184c0:	684b      	ldr	r3, [r1, #4]
 80184c2:	1a9b      	subs	r3, r3, r2
 80184c4:	ee01 3a90 	vmov	s3, r3
 80184c8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80184cc:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80184d0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80184d4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80184d8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80184dc:	ee61 1a84 	vmul.f32	s3, s3, s8
 80184e0:	eea1 7a21 	vfma.f32	s14, s2, s3
 80184e4:	ee27 7a03 	vmul.f32	s14, s14, s6
 80184e8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80184ec:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80184ee:	694a      	ldr	r2, [r1, #20]
 80184f0:	1b13      	subs	r3, r2, r4
 80184f2:	ee03 3a10 	vmov	s6, r3
 80184f6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80184fa:	680b      	ldr	r3, [r1, #0]
 80184fc:	ee23 3a04 	vmul.f32	s6, s6, s8
 8018500:	1b1b      	subs	r3, r3, r4
 8018502:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8018506:	ee03 3a10 	vmov	s6, r3
 801850a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801850e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8018512:	eee1 5a04 	vfma.f32	s11, s2, s8
 8018516:	ee25 6a86 	vmul.f32	s12, s11, s12
 801851a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801851e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8018522:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8018526:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801852a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801852e:	dd13      	ble.n	8018558 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8018530:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018534:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8018538:	63c3      	str	r3, [r0, #60]	; 0x3c
 801853a:	eee3 7a87 	vfma.f32	s15, s7, s14
 801853e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018542:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018546:	dd15      	ble.n	8018574 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8018548:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801854c:	6403      	str	r3, [r0, #64]	; 0x40
 801854e:	bd70      	pop	{r4, r5, r6, pc}
 8018550:	4623      	mov	r3, r4
 8018552:	e6fd      	b.n	8018350 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018554:	462a      	mov	r2, r5
 8018556:	e706      	b.n	8018366 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018558:	d502      	bpl.n	8018560 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801855a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801855e:	e7e9      	b.n	8018534 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8018560:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8018564:	eea3 2a85 	vfma.f32	s4, s7, s10
 8018568:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801856c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018570:	dade      	bge.n	8018530 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8018572:	e7f2      	b.n	801855a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8018574:	d502      	bpl.n	801857c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8018576:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801857a:	e7e7      	b.n	801854c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801857c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8018580:	eee3 4a86 	vfma.f32	s9, s7, s12
 8018584:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8018588:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801858c:	dadc      	bge.n	8018548 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801858e:	e7f2      	b.n	8018576 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8018590:	3d800000 	.word	0x3d800000

08018594 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8018594:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018598:	2714      	movs	r7, #20
 801859a:	435f      	muls	r7, r3
 801859c:	eb02 0c07 	add.w	ip, r2, r7
 80185a0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80185a4:	f115 0e0f 	adds.w	lr, r5, #15
 80185a8:	f100 80a2 	bmi.w	80186f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80185ac:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80185b0:	9c08      	ldr	r4, [sp, #32]
 80185b2:	f8c0 e014 	str.w	lr, [r0, #20]
 80185b6:	2614      	movs	r6, #20
 80185b8:	4366      	muls	r6, r4
 80185ba:	eb02 0806 	add.w	r8, r2, r6
 80185be:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80185c2:	f115 040f 	adds.w	r4, r5, #15
 80185c6:	f100 809f 	bmi.w	8018708 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80185ca:	1124      	asrs	r4, r4, #4
 80185cc:	eba4 040e 	sub.w	r4, r4, lr
 80185d0:	6184      	str	r4, [r0, #24]
 80185d2:	2c00      	cmp	r4, #0
 80185d4:	f000 808a 	beq.w	80186ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80185d8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80185dc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80185e0:	5995      	ldr	r5, [r2, r6]
 80185e2:	eba4 0809 	sub.w	r8, r4, r9
 80185e6:	59d4      	ldr	r4, [r2, r7]
 80185e8:	eba5 0a04 	sub.w	sl, r5, r4
 80185ec:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80185f0:	fb0e fe05 	mul.w	lr, lr, r5
 80185f4:	fb0a ee19 	mls	lr, sl, r9, lr
 80185f8:	fb08 e404 	mla	r4, r8, r4, lr
 80185fc:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8018600:	3c01      	subs	r4, #1
 8018602:	19a4      	adds	r4, r4, r6
 8018604:	f100 808c 	bmi.w	8018720 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8018608:	fb94 fef6 	sdiv	lr, r4, r6
 801860c:	f8c0 e000 	str.w	lr, [r0]
 8018610:	fb06 441e 	mls	r4, r6, lr, r4
 8018614:	6104      	str	r4, [r0, #16]
 8018616:	2d00      	cmp	r5, #0
 8018618:	f2c0 8095 	blt.w	8018746 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801861c:	fb95 f4f6 	sdiv	r4, r5, r6
 8018620:	6044      	str	r4, [r0, #4]
 8018622:	fb06 5514 	mls	r5, r6, r4, r5
 8018626:	6085      	str	r5, [r0, #8]
 8018628:	60c6      	str	r6, [r0, #12]
 801862a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801862e:	6945      	ldr	r5, [r0, #20]
 8018630:	59d2      	ldr	r2, [r2, r7]
 8018632:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8018768 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8018636:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801863a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801863e:	ee07 4a10 	vmov	s14, r4
 8018642:	6804      	ldr	r4, [r0, #0]
 8018644:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8018648:	ee07 2a90 	vmov	s15, r2
 801864c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018650:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018654:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018658:	ee27 7a26 	vmul.f32	s14, s14, s13
 801865c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018660:	edd3 6a00 	vldr	s13, [r3]
 8018664:	eee6 6a07 	vfma.f32	s13, s12, s14
 8018668:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801866c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8018670:	edc0 6a07 	vstr	s13, [r0, #28]
 8018674:	edd0 6a01 	vldr	s13, [r0, #4]
 8018678:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801867c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8018680:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018684:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018688:	ed80 6a08 	vstr	s12, [r0, #32]
 801868c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801868e:	6242      	str	r2, [r0, #36]	; 0x24
 8018690:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8018694:	ed93 6a03 	vldr	s12, [r3, #12]
 8018698:	eea5 6a87 	vfma.f32	s12, s11, s14
 801869c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80186a0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80186a4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80186a8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80186ac:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80186b0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80186b4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80186b8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80186ba:	6302      	str	r2, [r0, #48]	; 0x30
 80186bc:	ed93 6a06 	vldr	s12, [r3, #24]
 80186c0:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80186c4:	eea5 6a87 	vfma.f32	s12, s11, s14
 80186c8:	eeb0 7a46 	vmov.f32	s14, s12
 80186cc:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80186d0:	eea6 7a27 	vfma.f32	s14, s12, s15
 80186d4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80186d8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80186dc:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80186e0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80186e4:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80186e8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80186ea:	63c3      	str	r3, [r0, #60]	; 0x3c
 80186ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80186f0:	f1c5 0501 	rsb	r5, r5, #1
 80186f4:	f015 050f 	ands.w	r5, r5, #15
 80186f8:	bf18      	it	ne
 80186fa:	2501      	movne	r5, #1
 80186fc:	2410      	movs	r4, #16
 80186fe:	fb9e fef4 	sdiv	lr, lr, r4
 8018702:	ebae 0e05 	sub.w	lr, lr, r5
 8018706:	e753      	b.n	80185b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8018708:	f1c5 0501 	rsb	r5, r5, #1
 801870c:	f015 050f 	ands.w	r5, r5, #15
 8018710:	bf18      	it	ne
 8018712:	2501      	movne	r5, #1
 8018714:	f04f 0910 	mov.w	r9, #16
 8018718:	fb94 f4f9 	sdiv	r4, r4, r9
 801871c:	1b64      	subs	r4, r4, r5
 801871e:	e755      	b.n	80185cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8018720:	4264      	negs	r4, r4
 8018722:	fb94 fef6 	sdiv	lr, r4, r6
 8018726:	f1ce 0800 	rsb	r8, lr, #0
 801872a:	fb06 441e 	mls	r4, r6, lr, r4
 801872e:	f8c0 8000 	str.w	r8, [r0]
 8018732:	6104      	str	r4, [r0, #16]
 8018734:	2c00      	cmp	r4, #0
 8018736:	f43f af6e 	beq.w	8018616 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801873a:	ea6f 0e0e 	mvn.w	lr, lr
 801873e:	f8c0 e000 	str.w	lr, [r0]
 8018742:	1b34      	subs	r4, r6, r4
 8018744:	e766      	b.n	8018614 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8018746:	426d      	negs	r5, r5
 8018748:	fb95 f4f6 	sdiv	r4, r5, r6
 801874c:	f1c4 0e00 	rsb	lr, r4, #0
 8018750:	fb06 5514 	mls	r5, r6, r4, r5
 8018754:	f8c0 e004 	str.w	lr, [r0, #4]
 8018758:	6085      	str	r5, [r0, #8]
 801875a:	2d00      	cmp	r5, #0
 801875c:	f43f af64 	beq.w	8018628 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8018760:	43e4      	mvns	r4, r4
 8018762:	6044      	str	r4, [r0, #4]
 8018764:	1b75      	subs	r5, r6, r5
 8018766:	e75e      	b.n	8018626 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8018768:	3d800000 	.word	0x3d800000

0801876c <_ZN8touchgfx7Unicode6strlenEPKt>:
 801876c:	4602      	mov	r2, r0
 801876e:	b148      	cbz	r0, 8018784 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8018770:	2300      	movs	r3, #0
 8018772:	b298      	uxth	r0, r3
 8018774:	3301      	adds	r3, #1
 8018776:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801877a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801877e:	2900      	cmp	r1, #0
 8018780:	d1f7      	bne.n	8018772 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8018782:	4770      	bx	lr
 8018784:	4770      	bx	lr

08018786 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8018786:	b530      	push	{r4, r5, lr}
 8018788:	4604      	mov	r4, r0
 801878a:	b159      	cbz	r1, 80187a4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801878c:	b148      	cbz	r0, 80187a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801878e:	2300      	movs	r3, #0
 8018790:	b298      	uxth	r0, r3
 8018792:	4282      	cmp	r2, r0
 8018794:	d905      	bls.n	80187a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8018796:	5ccd      	ldrb	r5, [r1, r3]
 8018798:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801879c:	3301      	adds	r3, #1
 801879e:	2d00      	cmp	r5, #0
 80187a0:	d1f6      	bne.n	8018790 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 80187a2:	bd30      	pop	{r4, r5, pc}
 80187a4:	4608      	mov	r0, r1
 80187a6:	e7fc      	b.n	80187a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080187a8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 80187a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80187aa:	b08b      	sub	sp, #44	; 0x2c
 80187ac:	468c      	mov	ip, r1
 80187ae:	2100      	movs	r1, #0
 80187b0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80187b4:	4604      	mov	r4, r0
 80187b6:	261f      	movs	r6, #31
 80187b8:	af01      	add	r7, sp, #4
 80187ba:	fb94 fef3 	sdiv	lr, r4, r3
 80187be:	fb03 441e 	mls	r4, r3, lr, r4
 80187c2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80187c6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80187ca:	b2ec      	uxtb	r4, r5
 80187cc:	2d09      	cmp	r5, #9
 80187ce:	bfd4      	ite	le
 80187d0:	3430      	addle	r4, #48	; 0x30
 80187d2:	3457      	addgt	r4, #87	; 0x57
 80187d4:	b2e4      	uxtb	r4, r4
 80187d6:	55bc      	strb	r4, [r7, r6]
 80187d8:	4674      	mov	r4, lr
 80187da:	1e71      	subs	r1, r6, #1
 80187dc:	b974      	cbnz	r4, 80187fc <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80187de:	2800      	cmp	r0, #0
 80187e0:	da05      	bge.n	80187ee <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 80187e2:	ab0a      	add	r3, sp, #40	; 0x28
 80187e4:	4419      	add	r1, r3
 80187e6:	232d      	movs	r3, #45	; 0x2d
 80187e8:	f801 3c24 	strb.w	r3, [r1, #-36]
 80187ec:	1eb1      	subs	r1, r6, #2
 80187ee:	3101      	adds	r1, #1
 80187f0:	4439      	add	r1, r7
 80187f2:	4660      	mov	r0, ip
 80187f4:	f7ff ffc7 	bl	8018786 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80187f8:	b00b      	add	sp, #44	; 0x2c
 80187fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80187fc:	460e      	mov	r6, r1
 80187fe:	e7dc      	b.n	80187ba <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08018800 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8018800:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018802:	b08b      	sub	sp, #44	; 0x2c
 8018804:	468c      	mov	ip, r1
 8018806:	2100      	movs	r1, #0
 8018808:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801880c:	ae01      	add	r6, sp, #4
 801880e:	211f      	movs	r1, #31
 8018810:	fbb0 f7f3 	udiv	r7, r0, r3
 8018814:	fb03 0517 	mls	r5, r3, r7, r0
 8018818:	b2ec      	uxtb	r4, r5
 801881a:	2d09      	cmp	r5, #9
 801881c:	bfd4      	ite	le
 801881e:	3430      	addle	r4, #48	; 0x30
 8018820:	3457      	addgt	r4, #87	; 0x57
 8018822:	b2e4      	uxtb	r4, r4
 8018824:	558c      	strb	r4, [r1, r6]
 8018826:	4638      	mov	r0, r7
 8018828:	1e4c      	subs	r4, r1, #1
 801882a:	b92f      	cbnz	r7, 8018838 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801882c:	4431      	add	r1, r6
 801882e:	4660      	mov	r0, ip
 8018830:	f7ff ffa9 	bl	8018786 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8018834:	b00b      	add	sp, #44	; 0x2c
 8018836:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018838:	4621      	mov	r1, r4
 801883a:	e7e9      	b.n	8018810 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801883c <_ZN8touchgfx7Unicode4itoaElPtti>:
 801883c:	b410      	push	{r4}
 801883e:	b131      	cbz	r1, 801884e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8018840:	1e9c      	subs	r4, r3, #2
 8018842:	2c22      	cmp	r4, #34	; 0x22
 8018844:	d803      	bhi.n	801884e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8018846:	f85d 4b04 	ldr.w	r4, [sp], #4
 801884a:	f7ff bfad 	b.w	80187a8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801884e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018852:	4770      	bx	lr

08018854 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8018854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018858:	4691      	mov	r9, r2
 801885a:	b085      	sub	sp, #20
 801885c:	6802      	ldr	r2, [r0, #0]
 801885e:	9201      	str	r2, [sp, #4]
 8018860:	4688      	mov	r8, r1
 8018862:	4683      	mov	fp, r0
 8018864:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8018868:	9103      	str	r1, [sp, #12]
 801886a:	4610      	mov	r0, r2
 801886c:	461c      	mov	r4, r3
 801886e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8018872:	9302      	str	r3, [sp, #8]
 8018874:	f7ff ff7a 	bl	801876c <_ZN8touchgfx7Unicode6strlenEPKt>
 8018878:	f1b8 0f00 	cmp.w	r8, #0
 801887c:	bf0c      	ite	eq
 801887e:	4684      	moveq	ip, r0
 8018880:	f100 0c01 	addne.w	ip, r0, #1
 8018884:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8018888:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801888c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801888e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018890:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8018894:	9903      	ldr	r1, [sp, #12]
 8018896:	fa1f fc8c 	uxth.w	ip, ip
 801889a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801889e:	d041      	beq.n	8018924 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80188a0:	d834      	bhi.n	801890c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80188a2:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 80188a6:	d059      	beq.n	801895c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 80188a8:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 80188ac:	d03a      	beq.n	8018924 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80188ae:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 80188b2:	d034      	beq.n	801891e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80188b4:	2400      	movs	r4, #0
 80188b6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80188ba:	3a01      	subs	r2, #1
 80188bc:	b169      	cbz	r1, 80188da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80188be:	9911      	ldr	r1, [sp, #68]	; 0x44
 80188c0:	458c      	cmp	ip, r1
 80188c2:	da09      	bge.n	80188d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80188c4:	eba1 010c 	sub.w	r1, r1, ip
 80188c8:	b289      	uxth	r1, r1
 80188ca:	b933      	cbnz	r3, 80188da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80188cc:	2e00      	cmp	r6, #0
 80188ce:	d051      	beq.n	8018974 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80188d0:	2800      	cmp	r0, #0
 80188d2:	d04f      	beq.n	8018974 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80188d4:	440c      	add	r4, r1
 80188d6:	b2a4      	uxth	r4, r4
 80188d8:	2100      	movs	r1, #0
 80188da:	682b      	ldr	r3, [r5, #0]
 80188dc:	4293      	cmp	r3, r2
 80188de:	da07      	bge.n	80188f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80188e0:	f1b8 0f00 	cmp.w	r8, #0
 80188e4:	d004      	beq.n	80188f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80188e6:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80188ea:	682b      	ldr	r3, [r5, #0]
 80188ec:	3301      	adds	r3, #1
 80188ee:	602b      	str	r3, [r5, #0]
 80188f0:	2730      	movs	r7, #48	; 0x30
 80188f2:	2c00      	cmp	r4, #0
 80188f4:	d04e      	beq.n	8018994 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80188f6:	682e      	ldr	r6, [r5, #0]
 80188f8:	3c01      	subs	r4, #1
 80188fa:	42b2      	cmp	r2, r6
 80188fc:	b2a4      	uxth	r4, r4
 80188fe:	dd49      	ble.n	8018994 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8018900:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018904:	682b      	ldr	r3, [r5, #0]
 8018906:	3301      	adds	r3, #1
 8018908:	602b      	str	r3, [r5, #0]
 801890a:	e7f2      	b.n	80188f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801890c:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8018910:	d01d      	beq.n	801894e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8018912:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8018916:	d002      	beq.n	801891e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018918:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801891c:	e7c9      	b.n	80188b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801891e:	4684      	mov	ip, r0
 8018920:	f04f 0800 	mov.w	r8, #0
 8018924:	2c00      	cmp	r4, #0
 8018926:	d0c6      	beq.n	80188b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018928:	b947      	cbnz	r7, 801893c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801892a:	2801      	cmp	r0, #1
 801892c:	d106      	bne.n	801893c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801892e:	8814      	ldrh	r4, [r2, #0]
 8018930:	2c30      	cmp	r4, #48	; 0x30
 8018932:	bf02      	ittt	eq
 8018934:	3202      	addeq	r2, #2
 8018936:	f8cb 2000 	streq.w	r2, [fp]
 801893a:	4638      	moveq	r0, r7
 801893c:	45bc      	cmp	ip, r7
 801893e:	da14      	bge.n	801896a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8018940:	b2bf      	uxth	r7, r7
 8018942:	eba7 040c 	sub.w	r4, r7, ip
 8018946:	b2a4      	uxth	r4, r4
 8018948:	46bc      	mov	ip, r7
 801894a:	2600      	movs	r6, #0
 801894c:	e7b3      	b.n	80188b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801894e:	4684      	mov	ip, r0
 8018950:	b16c      	cbz	r4, 801896e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8018952:	42b8      	cmp	r0, r7
 8018954:	dd00      	ble.n	8018958 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8018956:	b2b8      	uxth	r0, r7
 8018958:	2400      	movs	r4, #0
 801895a:	e003      	b.n	8018964 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801895c:	f04f 0c01 	mov.w	ip, #1
 8018960:	2400      	movs	r4, #0
 8018962:	4660      	mov	r0, ip
 8018964:	4626      	mov	r6, r4
 8018966:	46a0      	mov	r8, r4
 8018968:	e7a5      	b.n	80188b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801896a:	2400      	movs	r4, #0
 801896c:	e7ed      	b.n	801894a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801896e:	4626      	mov	r6, r4
 8018970:	46a0      	mov	r8, r4
 8018972:	e7a0      	b.n	80188b6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018974:	2900      	cmp	r1, #0
 8018976:	d0b0      	beq.n	80188da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018978:	2720      	movs	r7, #32
 801897a:	682e      	ldr	r6, [r5, #0]
 801897c:	2900      	cmp	r1, #0
 801897e:	d0ac      	beq.n	80188da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018980:	3901      	subs	r1, #1
 8018982:	4296      	cmp	r6, r2
 8018984:	b289      	uxth	r1, r1
 8018986:	daa7      	bge.n	80188d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018988:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801898c:	682b      	ldr	r3, [r5, #0]
 801898e:	3301      	adds	r3, #1
 8018990:	602b      	str	r3, [r5, #0]
 8018992:	e7f2      	b.n	801897a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8018994:	b188      	cbz	r0, 80189ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018996:	682b      	ldr	r3, [r5, #0]
 8018998:	3801      	subs	r0, #1
 801899a:	429a      	cmp	r2, r3
 801899c:	b280      	uxth	r0, r0
 801899e:	dd0c      	ble.n	80189ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80189a0:	f8db 3000 	ldr.w	r3, [fp]
 80189a4:	1c9c      	adds	r4, r3, #2
 80189a6:	f8cb 4000 	str.w	r4, [fp]
 80189aa:	881c      	ldrh	r4, [r3, #0]
 80189ac:	682b      	ldr	r3, [r5, #0]
 80189ae:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 80189b2:	682b      	ldr	r3, [r5, #0]
 80189b4:	3301      	adds	r3, #1
 80189b6:	602b      	str	r3, [r5, #0]
 80189b8:	e7ec      	b.n	8018994 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80189ba:	2620      	movs	r6, #32
 80189bc:	b151      	cbz	r1, 80189d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80189be:	6828      	ldr	r0, [r5, #0]
 80189c0:	3901      	subs	r1, #1
 80189c2:	4282      	cmp	r2, r0
 80189c4:	b289      	uxth	r1, r1
 80189c6:	dd05      	ble.n	80189d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80189c8:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 80189cc:	682b      	ldr	r3, [r5, #0]
 80189ce:	3301      	adds	r3, #1
 80189d0:	602b      	str	r3, [r5, #0]
 80189d2:	e7f3      	b.n	80189bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 80189d4:	b005      	add	sp, #20
 80189d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080189da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 80189da:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80189de:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 80189e2:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 80189e6:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 80189ea:	2400      	movs	r4, #0
 80189ec:	8014      	strh	r4, [r2, #0]
 80189ee:	701c      	strb	r4, [r3, #0]
 80189f0:	f888 4000 	strb.w	r4, [r8]
 80189f4:	f88c 4000 	strb.w	r4, [ip]
 80189f8:	f88e 4000 	strb.w	r4, [lr]
 80189fc:	703c      	strb	r4, [r7, #0]
 80189fe:	6804      	ldr	r4, [r0, #0]
 8018a00:	b1a4      	cbz	r4, 8018a2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8018a02:	8824      	ldrh	r4, [r4, #0]
 8018a04:	f04f 0901 	mov.w	r9, #1
 8018a08:	b314      	cbz	r4, 8018a50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018a0a:	2c2b      	cmp	r4, #43	; 0x2b
 8018a0c:	d001      	beq.n	8018a12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8018a0e:	2c20      	cmp	r4, #32
 8018a10:	d110      	bne.n	8018a34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8018a12:	8014      	strh	r4, [r2, #0]
 8018a14:	6804      	ldr	r4, [r0, #0]
 8018a16:	b10c      	cbz	r4, 8018a1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8018a18:	3402      	adds	r4, #2
 8018a1a:	6004      	str	r4, [r0, #0]
 8018a1c:	680c      	ldr	r4, [r1, #0]
 8018a1e:	b10c      	cbz	r4, 8018a24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8018a20:	3401      	adds	r4, #1
 8018a22:	600c      	str	r4, [r1, #0]
 8018a24:	6804      	ldr	r4, [r0, #0]
 8018a26:	b17c      	cbz	r4, 8018a48 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8018a28:	8824      	ldrh	r4, [r4, #0]
 8018a2a:	e7ed      	b.n	8018a08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018a2c:	680c      	ldr	r4, [r1, #0]
 8018a2e:	b17c      	cbz	r4, 8018a50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018a30:	7824      	ldrb	r4, [r4, #0]
 8018a32:	e7e7      	b.n	8018a04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8018a34:	2c2d      	cmp	r4, #45	; 0x2d
 8018a36:	d102      	bne.n	8018a3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8018a38:	f883 9000 	strb.w	r9, [r3]
 8018a3c:	e7ea      	b.n	8018a14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018a3e:	2c23      	cmp	r4, #35	; 0x23
 8018a40:	d107      	bne.n	8018a52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8018a42:	f888 9000 	strb.w	r9, [r8]
 8018a46:	e7e5      	b.n	8018a14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018a48:	680c      	ldr	r4, [r1, #0]
 8018a4a:	b10c      	cbz	r4, 8018a50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018a4c:	7824      	ldrb	r4, [r4, #0]
 8018a4e:	e7db      	b.n	8018a08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018a50:	2400      	movs	r4, #0
 8018a52:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8018a56:	2b09      	cmp	r3, #9
 8018a58:	d901      	bls.n	8018a5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8018a5a:	2c2a      	cmp	r4, #42	; 0x2a
 8018a5c:	d122      	bne.n	8018aa4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018a5e:	2301      	movs	r3, #1
 8018a60:	2c30      	cmp	r4, #48	; 0x30
 8018a62:	f88e 3000 	strb.w	r3, [lr]
 8018a66:	d10d      	bne.n	8018a84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018a68:	f88c 3000 	strb.w	r3, [ip]
 8018a6c:	6803      	ldr	r3, [r0, #0]
 8018a6e:	b10b      	cbz	r3, 8018a74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8018a70:	3302      	adds	r3, #2
 8018a72:	6003      	str	r3, [r0, #0]
 8018a74:	680b      	ldr	r3, [r1, #0]
 8018a76:	b10b      	cbz	r3, 8018a7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8018a78:	3301      	adds	r3, #1
 8018a7a:	600b      	str	r3, [r1, #0]
 8018a7c:	6803      	ldr	r3, [r0, #0]
 8018a7e:	2b00      	cmp	r3, #0
 8018a80:	d02f      	beq.n	8018ae2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8018a82:	881c      	ldrh	r4, [r3, #0]
 8018a84:	2c2a      	cmp	r4, #42	; 0x2a
 8018a86:	d135      	bne.n	8018af4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018a88:	f04f 33ff 	mov.w	r3, #4294967295
 8018a8c:	6033      	str	r3, [r6, #0]
 8018a8e:	6803      	ldr	r3, [r0, #0]
 8018a90:	b10b      	cbz	r3, 8018a96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8018a92:	3302      	adds	r3, #2
 8018a94:	6003      	str	r3, [r0, #0]
 8018a96:	680b      	ldr	r3, [r1, #0]
 8018a98:	b10b      	cbz	r3, 8018a9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8018a9a:	3301      	adds	r3, #1
 8018a9c:	600b      	str	r3, [r1, #0]
 8018a9e:	6803      	ldr	r3, [r0, #0]
 8018aa0:	b31b      	cbz	r3, 8018aea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8018aa2:	881c      	ldrh	r4, [r3, #0]
 8018aa4:	2c2e      	cmp	r4, #46	; 0x2e
 8018aa6:	d11a      	bne.n	8018ade <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018aa8:	2301      	movs	r3, #1
 8018aaa:	703b      	strb	r3, [r7, #0]
 8018aac:	6803      	ldr	r3, [r0, #0]
 8018aae:	b10b      	cbz	r3, 8018ab4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8018ab0:	3302      	adds	r3, #2
 8018ab2:	6003      	str	r3, [r0, #0]
 8018ab4:	680b      	ldr	r3, [r1, #0]
 8018ab6:	b10b      	cbz	r3, 8018abc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8018ab8:	3301      	adds	r3, #1
 8018aba:	600b      	str	r3, [r1, #0]
 8018abc:	6803      	ldr	r3, [r0, #0]
 8018abe:	2b00      	cmp	r3, #0
 8018ac0:	d036      	beq.n	8018b30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8018ac2:	881b      	ldrh	r3, [r3, #0]
 8018ac4:	2b2a      	cmp	r3, #42	; 0x2a
 8018ac6:	d137      	bne.n	8018b38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018ac8:	f04f 33ff 	mov.w	r3, #4294967295
 8018acc:	602b      	str	r3, [r5, #0]
 8018ace:	6803      	ldr	r3, [r0, #0]
 8018ad0:	b10b      	cbz	r3, 8018ad6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8018ad2:	3302      	adds	r3, #2
 8018ad4:	6003      	str	r3, [r0, #0]
 8018ad6:	680b      	ldr	r3, [r1, #0]
 8018ad8:	b10b      	cbz	r3, 8018ade <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018ada:	3301      	adds	r3, #1
 8018adc:	600b      	str	r3, [r1, #0]
 8018ade:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018ae2:	680c      	ldr	r4, [r1, #0]
 8018ae4:	b134      	cbz	r4, 8018af4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018ae6:	7824      	ldrb	r4, [r4, #0]
 8018ae8:	e7cc      	b.n	8018a84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018aea:	680b      	ldr	r3, [r1, #0]
 8018aec:	2b00      	cmp	r3, #0
 8018aee:	d0f6      	beq.n	8018ade <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018af0:	781c      	ldrb	r4, [r3, #0]
 8018af2:	e7d7      	b.n	8018aa4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018af4:	2300      	movs	r3, #0
 8018af6:	6033      	str	r3, [r6, #0]
 8018af8:	220a      	movs	r2, #10
 8018afa:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8018afe:	fa1f f38c 	uxth.w	r3, ip
 8018b02:	2b09      	cmp	r3, #9
 8018b04:	d8ce      	bhi.n	8018aa4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018b06:	6833      	ldr	r3, [r6, #0]
 8018b08:	fb02 c303 	mla	r3, r2, r3, ip
 8018b0c:	6033      	str	r3, [r6, #0]
 8018b0e:	6803      	ldr	r3, [r0, #0]
 8018b10:	b10b      	cbz	r3, 8018b16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8018b12:	3302      	adds	r3, #2
 8018b14:	6003      	str	r3, [r0, #0]
 8018b16:	680b      	ldr	r3, [r1, #0]
 8018b18:	b10b      	cbz	r3, 8018b1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8018b1a:	3301      	adds	r3, #1
 8018b1c:	600b      	str	r3, [r1, #0]
 8018b1e:	6803      	ldr	r3, [r0, #0]
 8018b20:	b10b      	cbz	r3, 8018b26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8018b22:	881c      	ldrh	r4, [r3, #0]
 8018b24:	e7e9      	b.n	8018afa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018b26:	680c      	ldr	r4, [r1, #0]
 8018b28:	2c00      	cmp	r4, #0
 8018b2a:	d0e6      	beq.n	8018afa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018b2c:	7824      	ldrb	r4, [r4, #0]
 8018b2e:	e7e4      	b.n	8018afa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018b30:	680b      	ldr	r3, [r1, #0]
 8018b32:	b10b      	cbz	r3, 8018b38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8018b34:	781b      	ldrb	r3, [r3, #0]
 8018b36:	e7c5      	b.n	8018ac4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8018b38:	2200      	movs	r2, #0
 8018b3a:	602a      	str	r2, [r5, #0]
 8018b3c:	240a      	movs	r4, #10
 8018b3e:	3b30      	subs	r3, #48	; 0x30
 8018b40:	b29e      	uxth	r6, r3
 8018b42:	2e09      	cmp	r6, #9
 8018b44:	682a      	ldr	r2, [r5, #0]
 8018b46:	d813      	bhi.n	8018b70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8018b48:	fb04 3302 	mla	r3, r4, r2, r3
 8018b4c:	602b      	str	r3, [r5, #0]
 8018b4e:	6803      	ldr	r3, [r0, #0]
 8018b50:	b10b      	cbz	r3, 8018b56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8018b52:	3302      	adds	r3, #2
 8018b54:	6003      	str	r3, [r0, #0]
 8018b56:	680b      	ldr	r3, [r1, #0]
 8018b58:	b10b      	cbz	r3, 8018b5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8018b5a:	3301      	adds	r3, #1
 8018b5c:	600b      	str	r3, [r1, #0]
 8018b5e:	6803      	ldr	r3, [r0, #0]
 8018b60:	b10b      	cbz	r3, 8018b66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8018b62:	881b      	ldrh	r3, [r3, #0]
 8018b64:	e7eb      	b.n	8018b3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018b66:	680b      	ldr	r3, [r1, #0]
 8018b68:	2b00      	cmp	r3, #0
 8018b6a:	d0e8      	beq.n	8018b3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018b6c:	781b      	ldrb	r3, [r3, #0]
 8018b6e:	e7e6      	b.n	8018b3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018b70:	2a06      	cmp	r2, #6
 8018b72:	bfa8      	it	ge
 8018b74:	2206      	movge	r2, #6
 8018b76:	602a      	str	r2, [r5, #0]
 8018b78:	e7b1      	b.n	8018ade <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08018b7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8018b7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b7e:	b0a3      	sub	sp, #140	; 0x8c
 8018b80:	2600      	movs	r6, #0
 8018b82:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8018b86:	4607      	mov	r7, r0
 8018b88:	4688      	mov	r8, r1
 8018b8a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8018b8e:	4631      	mov	r1, r6
 8018b90:	2242      	movs	r2, #66	; 0x42
 8018b92:	4648      	mov	r0, r9
 8018b94:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8018b96:	960d      	str	r6, [sp, #52]	; 0x34
 8018b98:	f012 f955 	bl	802ae46 <memset>
 8018b9c:	b15f      	cbz	r7, 8018bb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8018b9e:	f108 3aff 	add.w	sl, r8, #4294967295
 8018ba2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018ba4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018ba6:	b152      	cbz	r2, 8018bbe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8018ba8:	8812      	ldrh	r2, [r2, #0]
 8018baa:	b10a      	cbz	r2, 8018bb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018bac:	459a      	cmp	sl, r3
 8018bae:	dc2e      	bgt.n	8018c0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8018bb0:	2200      	movs	r2, #0
 8018bb2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018bb6:	4638      	mov	r0, r7
 8018bb8:	b023      	add	sp, #140	; 0x8c
 8018bba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018bbe:	9a08      	ldr	r2, [sp, #32]
 8018bc0:	2a00      	cmp	r2, #0
 8018bc2:	d0f5      	beq.n	8018bb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018bc4:	7812      	ldrb	r2, [r2, #0]
 8018bc6:	e7f0      	b.n	8018baa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8018bc8:	2d00      	cmp	r5, #0
 8018bca:	d0ea      	beq.n	8018ba2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018bcc:	782a      	ldrb	r2, [r5, #0]
 8018bce:	b142      	cbz	r2, 8018be2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8018bd0:	2a25      	cmp	r2, #37	; 0x25
 8018bd2:	d001      	beq.n	8018bd8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8018bd4:	459a      	cmp	sl, r3
 8018bd6:	dc08      	bgt.n	8018bea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8018bd8:	f1bb 0f00 	cmp.w	fp, #0
 8018bdc:	d121      	bne.n	8018c22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8018bde:	2d00      	cmp	r5, #0
 8018be0:	d0df      	beq.n	8018ba2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018be2:	782a      	ldrb	r2, [r5, #0]
 8018be4:	f04f 0b00 	mov.w	fp, #0
 8018be8:	e01d      	b.n	8018c26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8018bea:	f1bb 0f00 	cmp.w	fp, #0
 8018bee:	d078      	beq.n	8018ce2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8018bf0:	f8bb 2000 	ldrh.w	r2, [fp]
 8018bf4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8018bf8:	f1bb 0f00 	cmp.w	fp, #0
 8018bfc:	d002      	beq.n	8018c04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8018bfe:	f10b 0202 	add.w	r2, fp, #2
 8018c02:	9209      	str	r2, [sp, #36]	; 0x24
 8018c04:	b10d      	cbz	r5, 8018c0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8018c06:	3501      	adds	r5, #1
 8018c08:	9508      	str	r5, [sp, #32]
 8018c0a:	3301      	adds	r3, #1
 8018c0c:	930d      	str	r3, [sp, #52]	; 0x34
 8018c0e:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8018c12:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018c14:	f1bb 0f00 	cmp.w	fp, #0
 8018c18:	d0d6      	beq.n	8018bc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8018c1a:	f8bb 2000 	ldrh.w	r2, [fp]
 8018c1e:	2a00      	cmp	r2, #0
 8018c20:	d1d6      	bne.n	8018bd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8018c22:	f8bb 2000 	ldrh.w	r2, [fp]
 8018c26:	2a00      	cmp	r2, #0
 8018c28:	d0bb      	beq.n	8018ba2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018c2a:	459a      	cmp	sl, r3
 8018c2c:	ddb9      	ble.n	8018ba2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018c2e:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8018c32:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8018c36:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8018c3a:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8018c3e:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8018c42:	960e      	str	r6, [sp, #56]	; 0x38
 8018c44:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8018c48:	960f      	str	r6, [sp, #60]	; 0x3c
 8018c4a:	f1bb 0f00 	cmp.w	fp, #0
 8018c4e:	d002      	beq.n	8018c56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8018c50:	f10b 0302 	add.w	r3, fp, #2
 8018c54:	9309      	str	r3, [sp, #36]	; 0x24
 8018c56:	b10d      	cbz	r5, 8018c5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8018c58:	1c6b      	adds	r3, r5, #1
 8018c5a:	9308      	str	r3, [sp, #32]
 8018c5c:	ab0f      	add	r3, sp, #60	; 0x3c
 8018c5e:	9305      	str	r3, [sp, #20]
 8018c60:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018c64:	9304      	str	r3, [sp, #16]
 8018c66:	ab0e      	add	r3, sp, #56	; 0x38
 8018c68:	9303      	str	r3, [sp, #12]
 8018c6a:	ab0c      	add	r3, sp, #48	; 0x30
 8018c6c:	9302      	str	r3, [sp, #8]
 8018c6e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018c72:	9301      	str	r3, [sp, #4]
 8018c74:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018c78:	9300      	str	r3, [sp, #0]
 8018c7a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018c7e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018c82:	a908      	add	r1, sp, #32
 8018c84:	a809      	add	r0, sp, #36	; 0x24
 8018c86:	f7ff fea8 	bl	80189da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018c8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018c8c:	2b00      	cmp	r3, #0
 8018c8e:	bfbe      	ittt	lt
 8018c90:	6823      	ldrlt	r3, [r4, #0]
 8018c92:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018c96:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018c98:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018c9a:	bfb8      	it	lt
 8018c9c:	3404      	addlt	r4, #4
 8018c9e:	2b00      	cmp	r3, #0
 8018ca0:	bfb8      	it	lt
 8018ca2:	6823      	ldrlt	r3, [r4, #0]
 8018ca4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018ca8:	bfbe      	ittt	lt
 8018caa:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018cae:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8018cb0:	3404      	addlt	r4, #4
 8018cb2:	b1d9      	cbz	r1, 8018cec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8018cb4:	880b      	ldrh	r3, [r1, #0]
 8018cb6:	2b69      	cmp	r3, #105	; 0x69
 8018cb8:	d01f      	beq.n	8018cfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018cba:	d82f      	bhi.n	8018d1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8018cbc:	2b58      	cmp	r3, #88	; 0x58
 8018cbe:	d01c      	beq.n	8018cfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018cc0:	d818      	bhi.n	8018cf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8018cc2:	2b25      	cmp	r3, #37	; 0x25
 8018cc4:	d034      	beq.n	8018d30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8018cc6:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8018cca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018ccc:	f1bb 0f00 	cmp.w	fp, #0
 8018cd0:	f000 80b8 	beq.w	8018e44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8018cd4:	f8bb 5000 	ldrh.w	r5, [fp]
 8018cd8:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8018cdc:	3301      	adds	r3, #1
 8018cde:	930d      	str	r3, [sp, #52]	; 0x34
 8018ce0:	e029      	b.n	8018d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018ce2:	b10d      	cbz	r5, 8018ce8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8018ce4:	782a      	ldrb	r2, [r5, #0]
 8018ce6:	e785      	b.n	8018bf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018ce8:	462a      	mov	r2, r5
 8018cea:	e783      	b.n	8018bf4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018cec:	2a00      	cmp	r2, #0
 8018cee:	d0ea      	beq.n	8018cc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018cf0:	7813      	ldrb	r3, [r2, #0]
 8018cf2:	e7e0      	b.n	8018cb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8018cf4:	3b63      	subs	r3, #99	; 0x63
 8018cf6:	2b01      	cmp	r3, #1
 8018cf8:	d8e5      	bhi.n	8018cc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018cfa:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8018cfe:	b329      	cbz	r1, 8018d4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8018d00:	880b      	ldrh	r3, [r1, #0]
 8018d02:	2b69      	cmp	r3, #105	; 0x69
 8018d04:	d063      	beq.n	8018dce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018d06:	d825      	bhi.n	8018d54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8018d08:	2b63      	cmp	r3, #99	; 0x63
 8018d0a:	d038      	beq.n	8018d7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8018d0c:	2b64      	cmp	r3, #100	; 0x64
 8018d0e:	d05e      	beq.n	8018dce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018d10:	2b58      	cmp	r3, #88	; 0x58
 8018d12:	d07b      	beq.n	8018e0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8018d14:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8018d18:	4625      	mov	r5, r4
 8018d1a:	e036      	b.n	8018d8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018d1c:	2b73      	cmp	r3, #115	; 0x73
 8018d1e:	d0ec      	beq.n	8018cfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018d20:	d802      	bhi.n	8018d28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8018d22:	2b6f      	cmp	r3, #111	; 0x6f
 8018d24:	d1cf      	bne.n	8018cc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018d26:	e7e8      	b.n	8018cfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018d28:	2b75      	cmp	r3, #117	; 0x75
 8018d2a:	d0e6      	beq.n	8018cfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018d2c:	2b78      	cmp	r3, #120	; 0x78
 8018d2e:	e7f9      	b.n	8018d24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018d30:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018d32:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8018d36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018d38:	b10b      	cbz	r3, 8018d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8018d3a:	3302      	adds	r3, #2
 8018d3c:	9309      	str	r3, [sp, #36]	; 0x24
 8018d3e:	9b08      	ldr	r3, [sp, #32]
 8018d40:	2b00      	cmp	r3, #0
 8018d42:	f43f af2e 	beq.w	8018ba2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018d46:	3301      	adds	r3, #1
 8018d48:	9308      	str	r3, [sp, #32]
 8018d4a:	e72a      	b.n	8018ba2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018d4c:	2a00      	cmp	r2, #0
 8018d4e:	d0e1      	beq.n	8018d14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018d50:	7813      	ldrb	r3, [r2, #0]
 8018d52:	e7d6      	b.n	8018d02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8018d54:	2b73      	cmp	r3, #115	; 0x73
 8018d56:	d036      	beq.n	8018dc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018d58:	d807      	bhi.n	8018d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8018d5a:	2b6f      	cmp	r3, #111	; 0x6f
 8018d5c:	d1da      	bne.n	8018d14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018d5e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018d60:	1d25      	adds	r5, r4, #4
 8018d62:	eba8 0202 	sub.w	r2, r8, r2
 8018d66:	2308      	movs	r3, #8
 8018d68:	e04a      	b.n	8018e00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018d6a:	2b75      	cmp	r3, #117	; 0x75
 8018d6c:	d043      	beq.n	8018df6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8018d6e:	2b78      	cmp	r3, #120	; 0x78
 8018d70:	d1d0      	bne.n	8018d14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018d72:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018d74:	1d25      	adds	r5, r4, #4
 8018d76:	eba8 0202 	sub.w	r2, r8, r2
 8018d7a:	2310      	movs	r3, #16
 8018d7c:	e040      	b.n	8018e00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018d7e:	6823      	ldr	r3, [r4, #0]
 8018d80:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018d84:	1d25      	adds	r5, r4, #4
 8018d86:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8018d8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018d8c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018d90:	2b00      	cmp	r3, #0
 8018d92:	d052      	beq.n	8018e3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8018d94:	881a      	ldrh	r2, [r3, #0]
 8018d96:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018d9a:	a80d      	add	r0, sp, #52	; 0x34
 8018d9c:	9005      	str	r0, [sp, #20]
 8018d9e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8018da2:	9004      	str	r0, [sp, #16]
 8018da4:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018da6:	9003      	str	r0, [sp, #12]
 8018da8:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018dac:	9002      	str	r0, [sp, #8]
 8018dae:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018db0:	9001      	str	r0, [sp, #4]
 8018db2:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8018db6:	9000      	str	r0, [sp, #0]
 8018db8:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8018dbc:	a810      	add	r0, sp, #64	; 0x40
 8018dbe:	f7ff fd49 	bl	8018854 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8018dc2:	462c      	mov	r4, r5
 8018dc4:	e7b7      	b.n	8018d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8018dc6:	6823      	ldr	r3, [r4, #0]
 8018dc8:	1d25      	adds	r5, r4, #4
 8018dca:	9310      	str	r3, [sp, #64]	; 0x40
 8018dcc:	e7dd      	b.n	8018d8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018dce:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018dd0:	6820      	ldr	r0, [r4, #0]
 8018dd2:	eba8 0202 	sub.w	r2, r8, r2
 8018dd6:	230a      	movs	r3, #10
 8018dd8:	b292      	uxth	r2, r2
 8018dda:	4649      	mov	r1, r9
 8018ddc:	f7ff fce4 	bl	80187a8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8018de0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8018de4:	2b2d      	cmp	r3, #45	; 0x2d
 8018de6:	f104 0504 	add.w	r5, r4, #4
 8018dea:	d1ce      	bne.n	8018d8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018dec:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018df0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018df2:	3302      	adds	r3, #2
 8018df4:	e7e9      	b.n	8018dca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8018df6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018df8:	1d25      	adds	r5, r4, #4
 8018dfa:	eba8 0202 	sub.w	r2, r8, r2
 8018dfe:	230a      	movs	r3, #10
 8018e00:	b292      	uxth	r2, r2
 8018e02:	4649      	mov	r1, r9
 8018e04:	6820      	ldr	r0, [r4, #0]
 8018e06:	f7ff fcfb 	bl	8018800 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018e0a:	e7be      	b.n	8018d8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018e0c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018e0e:	6820      	ldr	r0, [r4, #0]
 8018e10:	eba8 0202 	sub.w	r2, r8, r2
 8018e14:	b292      	uxth	r2, r2
 8018e16:	2310      	movs	r3, #16
 8018e18:	4649      	mov	r1, r9
 8018e1a:	f7ff fcf1 	bl	8018800 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018e1e:	1d25      	adds	r5, r4, #4
 8018e20:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8018e24:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8018e28:	2b00      	cmp	r3, #0
 8018e2a:	d0ae      	beq.n	8018d8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018e2c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8018e30:	2919      	cmp	r1, #25
 8018e32:	d8f7      	bhi.n	8018e24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018e34:	3b20      	subs	r3, #32
 8018e36:	8013      	strh	r3, [r2, #0]
 8018e38:	e7f4      	b.n	8018e24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018e3a:	9a08      	ldr	r2, [sp, #32]
 8018e3c:	2a00      	cmp	r2, #0
 8018e3e:	d0aa      	beq.n	8018d96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018e40:	7812      	ldrb	r2, [r2, #0]
 8018e42:	e7a8      	b.n	8018d96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018e44:	2d00      	cmp	r5, #0
 8018e46:	f43f af47 	beq.w	8018cd8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8018e4a:	782d      	ldrb	r5, [r5, #0]
 8018e4c:	e744      	b.n	8018cd8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08018e4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8018e4e:	b507      	push	{r0, r1, r2, lr}
 8018e50:	9300      	str	r3, [sp, #0]
 8018e52:	4613      	mov	r3, r2
 8018e54:	2200      	movs	r2, #0
 8018e56:	f7ff fe90 	bl	8018b7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8018e5a:	b003      	add	sp, #12
 8018e5c:	f85d fb04 	ldr.w	pc, [sp], #4

08018e60 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8018e60:	b40c      	push	{r2, r3}
 8018e62:	b507      	push	{r0, r1, r2, lr}
 8018e64:	ab04      	add	r3, sp, #16
 8018e66:	f853 2b04 	ldr.w	r2, [r3], #4
 8018e6a:	9301      	str	r3, [sp, #4]
 8018e6c:	f7ff ffef 	bl	8018e4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8018e70:	b003      	add	sp, #12
 8018e72:	f85d eb04 	ldr.w	lr, [sp], #4
 8018e76:	b002      	add	sp, #8
 8018e78:	4770      	bx	lr
	...

08018e7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8018e7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e80:	b0c5      	sub	sp, #276	; 0x114
 8018e82:	2400      	movs	r4, #0
 8018e84:	af11      	add	r7, sp, #68	; 0x44
 8018e86:	4606      	mov	r6, r0
 8018e88:	468a      	mov	sl, r1
 8018e8a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8018e8e:	4621      	mov	r1, r4
 8018e90:	22c8      	movs	r2, #200	; 0xc8
 8018e92:	4638      	mov	r0, r7
 8018e94:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8018e98:	940d      	str	r4, [sp, #52]	; 0x34
 8018e9a:	f011 ffd4 	bl	802ae46 <memset>
 8018e9e:	b16e      	cbz	r6, 8018ebc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8018ea0:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 8019144 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8018ea4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018ea6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018ea8:	b162      	cbz	r2, 8018ec4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 8018eaa:	8812      	ldrh	r2, [r2, #0]
 8018eac:	b11a      	cbz	r2, 8018eb6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8018eae:	f10a 31ff 	add.w	r1, sl, #4294967295
 8018eb2:	4299      	cmp	r1, r3
 8018eb4:	dc2e      	bgt.n	8018f14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8018eb6:	2200      	movs	r2, #0
 8018eb8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018ebc:	4630      	mov	r0, r6
 8018ebe:	b045      	add	sp, #276	; 0x114
 8018ec0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018ec4:	9a08      	ldr	r2, [sp, #32]
 8018ec6:	2a00      	cmp	r2, #0
 8018ec8:	d0f5      	beq.n	8018eb6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8018eca:	7812      	ldrb	r2, [r2, #0]
 8018ecc:	e7ee      	b.n	8018eac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 8018ece:	2d00      	cmp	r5, #0
 8018ed0:	d0e8      	beq.n	8018ea4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018ed2:	782a      	ldrb	r2, [r5, #0]
 8018ed4:	b142      	cbz	r2, 8018ee8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8018ed6:	2a25      	cmp	r2, #37	; 0x25
 8018ed8:	d001      	beq.n	8018ede <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8018eda:	4299      	cmp	r1, r3
 8018edc:	dc08      	bgt.n	8018ef0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8018ede:	f1b8 0f00 	cmp.w	r8, #0
 8018ee2:	d121      	bne.n	8018f28 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8018ee4:	2d00      	cmp	r5, #0
 8018ee6:	d0dd      	beq.n	8018ea4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018ee8:	782a      	ldrb	r2, [r5, #0]
 8018eea:	f04f 0800 	mov.w	r8, #0
 8018eee:	e01d      	b.n	8018f2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8018ef0:	f1b8 0f00 	cmp.w	r8, #0
 8018ef4:	d07f      	beq.n	8018ff6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8018ef6:	f8b8 2000 	ldrh.w	r2, [r8]
 8018efa:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018efe:	f1b8 0f00 	cmp.w	r8, #0
 8018f02:	d002      	beq.n	8018f0a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8018f04:	f108 0202 	add.w	r2, r8, #2
 8018f08:	9209      	str	r2, [sp, #36]	; 0x24
 8018f0a:	b10d      	cbz	r5, 8018f10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8018f0c:	3501      	adds	r5, #1
 8018f0e:	9508      	str	r5, [sp, #32]
 8018f10:	3301      	adds	r3, #1
 8018f12:	930d      	str	r3, [sp, #52]	; 0x34
 8018f14:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8018f18:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018f1a:	f1b8 0f00 	cmp.w	r8, #0
 8018f1e:	d0d6      	beq.n	8018ece <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8018f20:	f8b8 2000 	ldrh.w	r2, [r8]
 8018f24:	2a00      	cmp	r2, #0
 8018f26:	d1d6      	bne.n	8018ed6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8018f28:	f8b8 2000 	ldrh.w	r2, [r8]
 8018f2c:	2a00      	cmp	r2, #0
 8018f2e:	d0b9      	beq.n	8018ea4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018f30:	4299      	cmp	r1, r3
 8018f32:	ddb7      	ble.n	8018ea4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018f34:	2300      	movs	r3, #0
 8018f36:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018f3a:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8018f3e:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8018f42:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8018f46:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 8018f4a:	930e      	str	r3, [sp, #56]	; 0x38
 8018f4c:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8018f50:	930f      	str	r3, [sp, #60]	; 0x3c
 8018f52:	f1b8 0f00 	cmp.w	r8, #0
 8018f56:	d002      	beq.n	8018f5e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8018f58:	f108 0302 	add.w	r3, r8, #2
 8018f5c:	9309      	str	r3, [sp, #36]	; 0x24
 8018f5e:	b10d      	cbz	r5, 8018f64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8018f60:	1c6b      	adds	r3, r5, #1
 8018f62:	9308      	str	r3, [sp, #32]
 8018f64:	ab0f      	add	r3, sp, #60	; 0x3c
 8018f66:	9305      	str	r3, [sp, #20]
 8018f68:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018f6c:	9304      	str	r3, [sp, #16]
 8018f6e:	ab0e      	add	r3, sp, #56	; 0x38
 8018f70:	9303      	str	r3, [sp, #12]
 8018f72:	ab0c      	add	r3, sp, #48	; 0x30
 8018f74:	9302      	str	r3, [sp, #8]
 8018f76:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8018f7a:	9301      	str	r3, [sp, #4]
 8018f7c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018f80:	9300      	str	r3, [sp, #0]
 8018f82:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018f86:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018f8a:	a908      	add	r1, sp, #32
 8018f8c:	a809      	add	r0, sp, #36	; 0x24
 8018f8e:	f7ff fd24 	bl	80189da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018f92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018f94:	2b00      	cmp	r3, #0
 8018f96:	da0b      	bge.n	8018fb0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8018f98:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8018f9c:	edd3 7a00 	vldr	s15, [r3]
 8018fa0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018fa4:	3401      	adds	r4, #1
 8018fa6:	ee17 3a90 	vmov	r3, s15
 8018faa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018fae:	930e      	str	r3, [sp, #56]	; 0x38
 8018fb0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018fb2:	2b00      	cmp	r3, #0
 8018fb4:	da0b      	bge.n	8018fce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8018fb6:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8018fba:	edd3 7a00 	vldr	s15, [r3]
 8018fbe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018fc2:	3401      	adds	r4, #1
 8018fc4:	ee17 3a90 	vmov	r3, s15
 8018fc8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018fcc:	930f      	str	r3, [sp, #60]	; 0x3c
 8018fce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018fd0:	b1b3      	cbz	r3, 8019000 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8018fd2:	881a      	ldrh	r2, [r3, #0]
 8018fd4:	2a25      	cmp	r2, #37	; 0x25
 8018fd6:	d018      	beq.n	801900a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8018fd8:	2a66      	cmp	r2, #102	; 0x66
 8018fda:	d01c      	beq.n	8019016 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 8018fdc:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8018fe0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018fe2:	f1b8 0f00 	cmp.w	r8, #0
 8018fe6:	f000 8121 	beq.w	801922c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 8018fea:	f8b8 5000 	ldrh.w	r5, [r8]
 8018fee:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8018ff2:	3301      	adds	r3, #1
 8018ff4:	e00d      	b.n	8019012 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8018ff6:	b10d      	cbz	r5, 8018ffc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8018ff8:	782a      	ldrb	r2, [r5, #0]
 8018ffa:	e77e      	b.n	8018efa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8018ffc:	462a      	mov	r2, r5
 8018ffe:	e77c      	b.n	8018efa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019000:	9b08      	ldr	r3, [sp, #32]
 8019002:	2b00      	cmp	r3, #0
 8019004:	d0ea      	beq.n	8018fdc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8019006:	781a      	ldrb	r2, [r3, #0]
 8019008:	e7e4      	b.n	8018fd4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801900a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801900c:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019010:	3302      	adds	r3, #2
 8019012:	930d      	str	r3, [sp, #52]	; 0x34
 8019014:	e041      	b.n	801909a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8019016:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801901a:	edd3 7a00 	vldr	s15, [r3]
 801901e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019022:	9710      	str	r7, [sp, #64]	; 0x40
 8019024:	3401      	adds	r4, #1
 8019026:	b923      	cbnz	r3, 8019032 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8019028:	2301      	movs	r3, #1
 801902a:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801902e:	2306      	movs	r3, #6
 8019030:	930f      	str	r3, [sp, #60]	; 0x3c
 8019032:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019036:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801903a:	bf48      	it	mi
 801903c:	eef1 7a67 	vnegmi.f32	s15, s15
 8019040:	eeb0 7ae7 	vabs.f32	s14, s15
 8019044:	bf48      	it	mi
 8019046:	232d      	movmi	r3, #45	; 0x2d
 8019048:	eeb4 7a45 	vcmp.f32	s14, s10
 801904c:	bf48      	it	mi
 801904e:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 8019052:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019056:	dd2b      	ble.n	80190b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8019058:	4b3b      	ldr	r3, [pc, #236]	; (8019148 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801905a:	9311      	str	r3, [sp, #68]	; 0x44
 801905c:	2366      	movs	r3, #102	; 0x66
 801905e:	9312      	str	r3, [sp, #72]	; 0x48
 8019060:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019062:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019066:	2b00      	cmp	r3, #0
 8019068:	f000 80da 	beq.w	8019220 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801906c:	881a      	ldrh	r2, [r3, #0]
 801906e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019072:	a80d      	add	r0, sp, #52	; 0x34
 8019074:	9005      	str	r0, [sp, #20]
 8019076:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801907a:	9004      	str	r0, [sp, #16]
 801907c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801907e:	9003      	str	r0, [sp, #12]
 8019080:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019084:	9002      	str	r0, [sp, #8]
 8019086:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019088:	9001      	str	r0, [sp, #4]
 801908a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801908e:	9000      	str	r0, [sp, #0]
 8019090:	e9cd a606 	strd	sl, r6, [sp, #24]
 8019094:	a810      	add	r0, sp, #64	; 0x40
 8019096:	f7ff fbdd 	bl	8018854 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801909a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801909c:	b10b      	cbz	r3, 80190a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801909e:	3302      	adds	r3, #2
 80190a0:	9309      	str	r3, [sp, #36]	; 0x24
 80190a2:	9b08      	ldr	r3, [sp, #32]
 80190a4:	2b00      	cmp	r3, #0
 80190a6:	f43f aefd 	beq.w	8018ea4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80190aa:	3301      	adds	r3, #1
 80190ac:	9308      	str	r3, [sp, #32]
 80190ae:	e6f9      	b.n	8018ea4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80190b0:	eef4 7a67 	vcmp.f32	s15, s15
 80190b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190b8:	d63a      	bvs.n	8019130 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 80190ba:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 80190be:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80190c2:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 80190c6:	eeb0 6a67 	vmov.f32	s12, s15
 80190ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80190ce:	eef0 5a47 	vmov.f32	s11, s14
 80190d2:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80190d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190da:	da2d      	bge.n	8019138 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 80190dc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80190de:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 80190e2:	2100      	movs	r1, #0
 80190e4:	eef0 4a46 	vmov.f32	s9, s12
 80190e8:	ebaa 0202 	sub.w	r2, sl, r2
 80190ec:	eef4 6ac6 	vcmpe.f32	s13, s12
 80190f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80190f4:	b28d      	uxth	r5, r1
 80190f6:	db2c      	blt.n	8019152 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 80190f8:	1a53      	subs	r3, r2, r1
 80190fa:	2b00      	cmp	r3, #0
 80190fc:	dd29      	ble.n	8019152 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 80190fe:	3101      	adds	r1, #1
 8019100:	2964      	cmp	r1, #100	; 0x64
 8019102:	d025      	beq.n	8019150 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8019104:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019108:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801910c:	ee17 3a10 	vmov	r3, s14
 8019110:	2b09      	cmp	r3, #9
 8019112:	bfa8      	it	ge
 8019114:	2309      	movge	r3, #9
 8019116:	ee07 3a10 	vmov	s14, r3
 801911a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801911e:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8019122:	eee7 7a66 	vfms.f32	s15, s14, s13
 8019126:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801912a:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801912e:	e7dd      	b.n	80190ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8019130:	4b06      	ldr	r3, [pc, #24]	; (801914c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 8019132:	9311      	str	r3, [sp, #68]	; 0x44
 8019134:	236e      	movs	r3, #110	; 0x6e
 8019136:	e792      	b.n	801905e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8019138:	ee66 6a87 	vmul.f32	s13, s13, s14
 801913c:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8019140:	e7c7      	b.n	80190d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8019142:	bf00      	nop
 8019144:	7f7fffff 	.word	0x7f7fffff
 8019148:	006e0069 	.word	0x006e0069
 801914c:	0061006e 	.word	0x0061006e
 8019150:	2563      	movs	r5, #99	; 0x63
 8019152:	2a63      	cmp	r2, #99	; 0x63
 8019154:	bfd4      	ite	le
 8019156:	ebc5 0202 	rsble	r2, r5, r2
 801915a:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801915e:	2a00      	cmp	r2, #0
 8019160:	dd43      	ble.n	80191ea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019162:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019164:	2b00      	cmp	r3, #0
 8019166:	dd40      	ble.n	80191ea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019168:	f04f 0901 	mov.w	r9, #1
 801916c:	210a      	movs	r1, #10
 801916e:	f113 33ff 	adds.w	r3, r3, #4294967295
 8019172:	d30c      	bcc.n	801918e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8019174:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8019178:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801917c:	ee17 0a10 	vmov	r0, s14
 8019180:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019184:	fb01 0909 	mla	r9, r1, r9, r0
 8019188:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801918c:	e7ef      	b.n	801916e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801918e:	3501      	adds	r5, #1
 8019190:	930f      	str	r3, [sp, #60]	; 0x3c
 8019192:	b292      	uxth	r2, r2
 8019194:	230a      	movs	r3, #10
 8019196:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801919a:	4648      	mov	r0, r9
 801919c:	f7ff fb4e 	bl	801883c <_ZN8touchgfx7Unicode4itoaElPtti>
 80191a0:	f1b9 0f01 	cmp.w	r9, #1
 80191a4:	dc1f      	bgt.n	80191e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 80191a6:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 80191aa:	2b00      	cmp	r3, #0
 80191ac:	bf0c      	ite	eq
 80191ae:	2300      	moveq	r3, #0
 80191b0:	232e      	movne	r3, #46	; 0x2e
 80191b2:	aa44      	add	r2, sp, #272	; 0x110
 80191b4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80191b8:	eef4 7ae4 	vcmpe.f32	s15, s9
 80191bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80191c0:	f825 3ccc 	strh.w	r3, [r5, #-204]
 80191c4:	f6ff af4c 	blt.w	8019060 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80191c8:	2300      	movs	r3, #0
 80191ca:	f838 2b02 	ldrh.w	r2, [r8], #2
 80191ce:	1c59      	adds	r1, r3, #1
 80191d0:	b98a      	cbnz	r2, 80191f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 80191d2:	b29b      	uxth	r3, r3
 80191d4:	2130      	movs	r1, #48	; 0x30
 80191d6:	b983      	cbnz	r3, 80191fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 80191d8:	2331      	movs	r3, #49	; 0x31
 80191da:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80191de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80191e0:	3b02      	subs	r3, #2
 80191e2:	9310      	str	r3, [sp, #64]	; 0x40
 80191e4:	e73c      	b.n	8019060 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80191e6:	232e      	movs	r3, #46	; 0x2e
 80191e8:	e7e3      	b.n	80191b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 80191ea:	ab44      	add	r3, sp, #272	; 0x110
 80191ec:	3501      	adds	r5, #1
 80191ee:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80191f2:	2300      	movs	r3, #0
 80191f4:	e7e0      	b.n	80191b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 80191f6:	460b      	mov	r3, r1
 80191f8:	e7e7      	b.n	80191ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 80191fa:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 80191fe:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 8019202:	2808      	cmp	r0, #8
 8019204:	d806      	bhi.n	8019214 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 8019206:	a944      	add	r1, sp, #272	; 0x110
 8019208:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801920c:	3201      	adds	r2, #1
 801920e:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8019212:	e725      	b.n	8019060 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019214:	2a39      	cmp	r2, #57	; 0x39
 8019216:	bf08      	it	eq
 8019218:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801921c:	3b01      	subs	r3, #1
 801921e:	e7da      	b.n	80191d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8019220:	9a08      	ldr	r2, [sp, #32]
 8019222:	2a00      	cmp	r2, #0
 8019224:	f43f af23 	beq.w	801906e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019228:	7812      	ldrb	r2, [r2, #0]
 801922a:	e720      	b.n	801906e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801922c:	2d00      	cmp	r5, #0
 801922e:	f43f aede 	beq.w	8018fee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019232:	782d      	ldrb	r5, [r5, #0]
 8019234:	e6db      	b.n	8018fee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019236:	bf00      	nop

08019238 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8019238:	b507      	push	{r0, r1, r2, lr}
 801923a:	9300      	str	r3, [sp, #0]
 801923c:	4613      	mov	r3, r2
 801923e:	2200      	movs	r2, #0
 8019240:	f7ff fe1c 	bl	8018e7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8019244:	b003      	add	sp, #12
 8019246:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801924c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801924c:	4b01      	ldr	r3, [pc, #4]	; (8019254 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801924e:	6018      	str	r0, [r3, #0]
 8019250:	4770      	bx	lr
 8019252:	bf00      	nop
 8019254:	20012e1c 	.word	0x20012e1c

08019258 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8019258:	4b06      	ldr	r3, [pc, #24]	; (8019274 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801925a:	881a      	ldrh	r2, [r3, #0]
 801925c:	4282      	cmp	r2, r0
 801925e:	d807      	bhi.n	8019270 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8019260:	4b05      	ldr	r3, [pc, #20]	; (8019278 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8019262:	881b      	ldrh	r3, [r3, #0]
 8019264:	4413      	add	r3, r2
 8019266:	4298      	cmp	r0, r3
 8019268:	bfac      	ite	ge
 801926a:	2000      	movge	r0, #0
 801926c:	2001      	movlt	r0, #1
 801926e:	4770      	bx	lr
 8019270:	2000      	movs	r0, #0
 8019272:	4770      	bx	lr
 8019274:	20012e3c 	.word	0x20012e3c
 8019278:	20012e40 	.word	0x20012e40

0801927c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801927c:	b508      	push	{r3, lr}
 801927e:	4601      	mov	r1, r0
 8019280:	f7ff ffea 	bl	8019258 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8019284:	b118      	cbz	r0, 801928e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8019286:	4b02      	ldr	r3, [pc, #8]	; (8019290 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8019288:	681b      	ldr	r3, [r3, #0]
 801928a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801928e:	bd08      	pop	{r3, pc}
 8019290:	20012e20 	.word	0x20012e20

08019294 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8019294:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019296:	4c24      	ldr	r4, [pc, #144]	; (8019328 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8019298:	6823      	ldr	r3, [r4, #0]
 801929a:	2b00      	cmp	r3, #0
 801929c:	d042      	beq.n	8019324 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801929e:	4a23      	ldr	r2, [pc, #140]	; (801932c <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80192a0:	4d23      	ldr	r5, [pc, #140]	; (8019330 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80192a2:	8811      	ldrh	r1, [r2, #0]
 80192a4:	f8b5 c000 	ldrh.w	ip, [r5]
 80192a8:	4822      	ldr	r0, [pc, #136]	; (8019334 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80192aa:	4461      	add	r1, ip
 80192ac:	1c4a      	adds	r2, r1, #1
 80192ae:	f022 0201 	bic.w	r2, r2, #1
 80192b2:	008f      	lsls	r7, r1, #2
 80192b4:	0412      	lsls	r2, r2, #16
 80192b6:	19de      	adds	r6, r3, r7
 80192b8:	0c12      	lsrs	r2, r2, #16
 80192ba:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80192be:	6006      	str	r6, [r0, #0]
 80192c0:	4e1d      	ldr	r6, [pc, #116]	; (8019338 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80192c2:	19da      	adds	r2, r3, r7
 80192c4:	6032      	str	r2, [r6, #0]
 80192c6:	220e      	movs	r2, #14
 80192c8:	fb02 f20c 	mul.w	r2, r2, ip
 80192cc:	3203      	adds	r2, #3
 80192ce:	f022 0203 	bic.w	r2, r2, #3
 80192d2:	443a      	add	r2, r7
 80192d4:	4f19      	ldr	r7, [pc, #100]	; (801933c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80192d6:	4413      	add	r3, r2
 80192d8:	603b      	str	r3, [r7, #0]
 80192da:	4f19      	ldr	r7, [pc, #100]	; (8019340 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80192dc:	2300      	movs	r3, #0
 80192de:	803b      	strh	r3, [r7, #0]
 80192e0:	4f18      	ldr	r7, [pc, #96]	; (8019344 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80192e2:	683f      	ldr	r7, [r7, #0]
 80192e4:	1aba      	subs	r2, r7, r2
 80192e6:	4f18      	ldr	r7, [pc, #96]	; (8019348 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80192e8:	603a      	str	r2, [r7, #0]
 80192ea:	4a18      	ldr	r2, [pc, #96]	; (801934c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80192ec:	469c      	mov	ip, r3
 80192ee:	8013      	strh	r3, [r2, #0]
 80192f0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80192f4:	428b      	cmp	r3, r1
 80192f6:	d10d      	bne.n	8019314 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80192f8:	882d      	ldrh	r5, [r5, #0]
 80192fa:	6830      	ldr	r0, [r6, #0]
 80192fc:	2300      	movs	r3, #0
 80192fe:	240e      	movs	r4, #14
 8019300:	429d      	cmp	r5, r3
 8019302:	d90f      	bls.n	8019324 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019304:	fb04 0203 	mla	r2, r4, r3, r0
 8019308:	3301      	adds	r3, #1
 801930a:	7b11      	ldrb	r1, [r2, #12]
 801930c:	f36f 1145 	bfc	r1, #5, #1
 8019310:	7311      	strb	r1, [r2, #12]
 8019312:	e7f5      	b.n	8019300 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8019314:	6822      	ldr	r2, [r4, #0]
 8019316:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801931a:	6802      	ldr	r2, [r0, #0]
 801931c:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8019320:	3301      	adds	r3, #1
 8019322:	e7e7      	b.n	80192f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8019324:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019326:	bf00      	nop
 8019328:	20012e20 	.word	0x20012e20
 801932c:	20012e3c 	.word	0x20012e3c
 8019330:	20012e40 	.word	0x20012e40
 8019334:	20012e34 	.word	0x20012e34
 8019338:	20012e24 	.word	0x20012e24
 801933c:	20012e2c 	.word	0x20012e2c
 8019340:	20012e3e 	.word	0x20012e3e
 8019344:	20012e28 	.word	0x20012e28
 8019348:	20012e38 	.word	0x20012e38
 801934c:	20012e30 	.word	0x20012e30

08019350 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8019350:	4b06      	ldr	r3, [pc, #24]	; (801936c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8019352:	681b      	ldr	r3, [r3, #0]
 8019354:	b943      	cbnz	r3, 8019368 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019356:	b139      	cbz	r1, 8019368 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8019358:	4b05      	ldr	r3, [pc, #20]	; (8019370 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801935a:	801a      	strh	r2, [r3, #0]
 801935c:	4b05      	ldr	r3, [pc, #20]	; (8019374 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801935e:	6019      	str	r1, [r3, #0]
 8019360:	4b05      	ldr	r3, [pc, #20]	; (8019378 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8019362:	6018      	str	r0, [r3, #0]
 8019364:	f7ff bf96 	b.w	8019294 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8019368:	4770      	bx	lr
 801936a:	bf00      	nop
 801936c:	20012e2c 	.word	0x20012e2c
 8019370:	20012e40 	.word	0x20012e40
 8019374:	20012e28 	.word	0x20012e28
 8019378:	20012e20 	.word	0x20012e20

0801937c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801937c:	b470      	push	{r4, r5, r6}
 801937e:	4c07      	ldr	r4, [pc, #28]	; (801939c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8019380:	6826      	ldr	r6, [r4, #0]
 8019382:	4605      	mov	r5, r0
 8019384:	4610      	mov	r0, r2
 8019386:	9a03      	ldr	r2, [sp, #12]
 8019388:	b936      	cbnz	r6, 8019398 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801938a:	6025      	str	r5, [r4, #0]
 801938c:	4c04      	ldr	r4, [pc, #16]	; (80193a0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801938e:	8021      	strh	r1, [r4, #0]
 8019390:	bc70      	pop	{r4, r5, r6}
 8019392:	4619      	mov	r1, r3
 8019394:	f7ff bfdc 	b.w	8019350 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8019398:	bc70      	pop	{r4, r5, r6}
 801939a:	4770      	bx	lr
 801939c:	20012e44 	.word	0x20012e44
 80193a0:	20012e3c 	.word	0x20012e3c

080193a4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80193a4:	4a12      	ldr	r2, [pc, #72]	; (80193f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80193a6:	8803      	ldrh	r3, [r0, #0]
 80193a8:	8812      	ldrh	r2, [r2, #0]
 80193aa:	4293      	cmp	r3, r2
 80193ac:	d207      	bcs.n	80193be <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80193ae:	4a11      	ldr	r2, [pc, #68]	; (80193f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80193b0:	6812      	ldr	r2, [r2, #0]
 80193b2:	2114      	movs	r1, #20
 80193b4:	fb01 2303 	mla	r3, r1, r3, r2
 80193b8:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80193bc:	4770      	bx	lr
 80193be:	490e      	ldr	r1, [pc, #56]	; (80193f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80193c0:	8809      	ldrh	r1, [r1, #0]
 80193c2:	4411      	add	r1, r2
 80193c4:	428b      	cmp	r3, r1
 80193c6:	da04      	bge.n	80193d2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80193c8:	1a9b      	subs	r3, r3, r2
 80193ca:	4a0c      	ldr	r2, [pc, #48]	; (80193fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80193cc:	210e      	movs	r1, #14
 80193ce:	6812      	ldr	r2, [r2, #0]
 80193d0:	e7f0      	b.n	80193b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80193d2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80193d6:	4293      	cmp	r3, r2
 80193d8:	d108      	bne.n	80193ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80193da:	4b09      	ldr	r3, [pc, #36]	; (8019400 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80193dc:	781b      	ldrb	r3, [r3, #0]
 80193de:	b91b      	cbnz	r3, 80193e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80193e0:	4b08      	ldr	r3, [pc, #32]	; (8019404 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80193e2:	f9b3 0000 	ldrsh.w	r0, [r3]
 80193e6:	4770      	bx	lr
 80193e8:	4b07      	ldr	r3, [pc, #28]	; (8019408 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80193ea:	e7fa      	b.n	80193e2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80193ec:	2000      	movs	r0, #0
 80193ee:	4770      	bx	lr
 80193f0:	20012e3c 	.word	0x20012e3c
 80193f4:	20012e44 	.word	0x20012e44
 80193f8:	20012e40 	.word	0x20012e40
 80193fc:	20012e24 	.word	0x20012e24
 8019400:	20012dac 	.word	0x20012dac
 8019404:	20012dae 	.word	0x20012dae
 8019408:	20012db0 	.word	0x20012db0

0801940c <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801940c:	4a12      	ldr	r2, [pc, #72]	; (8019458 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801940e:	8803      	ldrh	r3, [r0, #0]
 8019410:	8812      	ldrh	r2, [r2, #0]
 8019412:	4293      	cmp	r3, r2
 8019414:	d207      	bcs.n	8019426 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8019416:	4a11      	ldr	r2, [pc, #68]	; (801945c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8019418:	6812      	ldr	r2, [r2, #0]
 801941a:	2114      	movs	r1, #20
 801941c:	fb01 2303 	mla	r3, r1, r3, r2
 8019420:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8019424:	4770      	bx	lr
 8019426:	490e      	ldr	r1, [pc, #56]	; (8019460 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8019428:	8809      	ldrh	r1, [r1, #0]
 801942a:	4411      	add	r1, r2
 801942c:	428b      	cmp	r3, r1
 801942e:	da04      	bge.n	801943a <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8019430:	1a9b      	subs	r3, r3, r2
 8019432:	4a0c      	ldr	r2, [pc, #48]	; (8019464 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8019434:	210e      	movs	r1, #14
 8019436:	6812      	ldr	r2, [r2, #0]
 8019438:	e7f0      	b.n	801941c <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801943a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801943e:	4293      	cmp	r3, r2
 8019440:	d108      	bne.n	8019454 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8019442:	4b09      	ldr	r3, [pc, #36]	; (8019468 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8019444:	781b      	ldrb	r3, [r3, #0]
 8019446:	b91b      	cbnz	r3, 8019450 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8019448:	4b08      	ldr	r3, [pc, #32]	; (801946c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801944a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801944e:	4770      	bx	lr
 8019450:	4b07      	ldr	r3, [pc, #28]	; (8019470 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8019452:	e7fa      	b.n	801944a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8019454:	2000      	movs	r0, #0
 8019456:	4770      	bx	lr
 8019458:	20012e3c 	.word	0x20012e3c
 801945c:	20012e44 	.word	0x20012e44
 8019460:	20012e40 	.word	0x20012e40
 8019464:	20012e24 	.word	0x20012e24
 8019468:	20012dac 	.word	0x20012dac
 801946c:	20012db0 	.word	0x20012db0
 8019470:	20012dae 	.word	0x20012dae

08019474 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8019474:	b510      	push	{r4, lr}
 8019476:	4a1f      	ldr	r2, [pc, #124]	; (80194f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8019478:	880b      	ldrh	r3, [r1, #0]
 801947a:	8812      	ldrh	r2, [r2, #0]
 801947c:	4293      	cmp	r3, r2
 801947e:	d213      	bcs.n	80194a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8019480:	4a1d      	ldr	r2, [pc, #116]	; (80194f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8019482:	6812      	ldr	r2, [r2, #0]
 8019484:	2114      	movs	r1, #20
 8019486:	fb01 2303 	mla	r3, r1, r3, r2
 801948a:	8a1a      	ldrh	r2, [r3, #16]
 801948c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8019490:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8019494:	8a5b      	ldrh	r3, [r3, #18]
 8019496:	8004      	strh	r4, [r0, #0]
 8019498:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801949c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80194a0:	8041      	strh	r1, [r0, #2]
 80194a2:	8082      	strh	r2, [r0, #4]
 80194a4:	80c3      	strh	r3, [r0, #6]
 80194a6:	e00e      	b.n	80194c6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80194a8:	4914      	ldr	r1, [pc, #80]	; (80194fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80194aa:	8809      	ldrh	r1, [r1, #0]
 80194ac:	4411      	add	r1, r2
 80194ae:	428b      	cmp	r3, r1
 80194b0:	da0a      	bge.n	80194c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80194b2:	1a9b      	subs	r3, r3, r2
 80194b4:	4a12      	ldr	r2, [pc, #72]	; (8019500 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80194b6:	6812      	ldr	r2, [r2, #0]
 80194b8:	210e      	movs	r1, #14
 80194ba:	fb01 2303 	mla	r3, r1, r3, r2
 80194be:	681a      	ldr	r2, [r3, #0]
 80194c0:	6002      	str	r2, [r0, #0]
 80194c2:	685a      	ldr	r2, [r3, #4]
 80194c4:	6042      	str	r2, [r0, #4]
 80194c6:	bd10      	pop	{r4, pc}
 80194c8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80194cc:	4293      	cmp	r3, r2
 80194ce:	d10b      	bne.n	80194e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80194d0:	4b0c      	ldr	r3, [pc, #48]	; (8019504 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80194d2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80194d6:	4b0c      	ldr	r3, [pc, #48]	; (8019508 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80194d8:	8081      	strh	r1, [r0, #4]
 80194da:	f9b3 2000 	ldrsh.w	r2, [r3]
 80194de:	80c2      	strh	r2, [r0, #6]
 80194e0:	2300      	movs	r3, #0
 80194e2:	8003      	strh	r3, [r0, #0]
 80194e4:	8043      	strh	r3, [r0, #2]
 80194e6:	e7ee      	b.n	80194c6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80194e8:	2300      	movs	r3, #0
 80194ea:	8003      	strh	r3, [r0, #0]
 80194ec:	8043      	strh	r3, [r0, #2]
 80194ee:	8083      	strh	r3, [r0, #4]
 80194f0:	e7d8      	b.n	80194a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80194f2:	bf00      	nop
 80194f4:	20012e3c 	.word	0x20012e3c
 80194f8:	20012e44 	.word	0x20012e44
 80194fc:	20012e40 	.word	0x20012e40
 8019500:	20012e24 	.word	0x20012e24
 8019504:	20012da8 	.word	0x20012da8
 8019508:	20012daa 	.word	0x20012daa

0801950c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801950c:	4a17      	ldr	r2, [pc, #92]	; (801956c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801950e:	8803      	ldrh	r3, [r0, #0]
 8019510:	8812      	ldrh	r2, [r2, #0]
 8019512:	4293      	cmp	r3, r2
 8019514:	d213      	bcs.n	801953e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8019516:	4a16      	ldr	r2, [pc, #88]	; (8019570 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8019518:	6812      	ldr	r2, [r2, #0]
 801951a:	2114      	movs	r1, #20
 801951c:	fb01 2303 	mla	r3, r1, r3, r2
 8019520:	8a1a      	ldrh	r2, [r3, #16]
 8019522:	8919      	ldrh	r1, [r3, #8]
 8019524:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019528:	428a      	cmp	r2, r1
 801952a:	db1d      	blt.n	8019568 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801952c:	8a58      	ldrh	r0, [r3, #18]
 801952e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8019532:	895b      	ldrh	r3, [r3, #10]
 8019534:	4298      	cmp	r0, r3
 8019536:	bfac      	ite	ge
 8019538:	2000      	movge	r0, #0
 801953a:	2001      	movlt	r0, #1
 801953c:	4770      	bx	lr
 801953e:	490d      	ldr	r1, [pc, #52]	; (8019574 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8019540:	8809      	ldrh	r1, [r1, #0]
 8019542:	4411      	add	r1, r2
 8019544:	428b      	cmp	r3, r1
 8019546:	da0d      	bge.n	8019564 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8019548:	1a9b      	subs	r3, r3, r2
 801954a:	4a0b      	ldr	r2, [pc, #44]	; (8019578 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801954c:	6812      	ldr	r2, [r2, #0]
 801954e:	210e      	movs	r1, #14
 8019550:	fb01 2303 	mla	r3, r1, r3, r2
 8019554:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8019558:	891a      	ldrh	r2, [r3, #8]
 801955a:	4291      	cmp	r1, r2
 801955c:	db04      	blt.n	8019568 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801955e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8019562:	e7e6      	b.n	8019532 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8019564:	2000      	movs	r0, #0
 8019566:	4770      	bx	lr
 8019568:	2001      	movs	r0, #1
 801956a:	4770      	bx	lr
 801956c:	20012e3c 	.word	0x20012e3c
 8019570:	20012e44 	.word	0x20012e44
 8019574:	20012e40 	.word	0x20012e40
 8019578:	20012e24 	.word	0x20012e24

0801957c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801957c:	4a12      	ldr	r2, [pc, #72]	; (80195c8 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801957e:	8803      	ldrh	r3, [r0, #0]
 8019580:	8811      	ldrh	r1, [r2, #0]
 8019582:	428b      	cmp	r3, r1
 8019584:	d20b      	bcs.n	801959e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8019586:	4a11      	ldr	r2, [pc, #68]	; (80195cc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8019588:	6812      	ldr	r2, [r2, #0]
 801958a:	b112      	cbz	r2, 8019592 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801958c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8019590:	b9c0      	cbnz	r0, 80195c4 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8019592:	4a0f      	ldr	r2, [pc, #60]	; (80195d0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8019594:	6811      	ldr	r1, [r2, #0]
 8019596:	2214      	movs	r2, #20
 8019598:	4353      	muls	r3, r2
 801959a:	58c8      	ldr	r0, [r1, r3]
 801959c:	4770      	bx	lr
 801959e:	4a0d      	ldr	r2, [pc, #52]	; (80195d4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80195a0:	8812      	ldrh	r2, [r2, #0]
 80195a2:	440a      	add	r2, r1
 80195a4:	4293      	cmp	r3, r2
 80195a6:	da04      	bge.n	80195b2 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80195a8:	4a08      	ldr	r2, [pc, #32]	; (80195cc <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80195aa:	6812      	ldr	r2, [r2, #0]
 80195ac:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80195b0:	4770      	bx	lr
 80195b2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80195b6:	4293      	cmp	r3, r2
 80195b8:	d103      	bne.n	80195c2 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80195ba:	4b07      	ldr	r3, [pc, #28]	; (80195d8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80195bc:	681b      	ldr	r3, [r3, #0]
 80195be:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80195c0:	4770      	bx	lr
 80195c2:	2000      	movs	r0, #0
 80195c4:	4770      	bx	lr
 80195c6:	bf00      	nop
 80195c8:	20012e3c 	.word	0x20012e3c
 80195cc:	20012e20 	.word	0x20012e20
 80195d0:	20012e44 	.word	0x20012e44
 80195d4:	20012e40 	.word	0x20012e40
 80195d8:	20012db4 	.word	0x20012db4

080195dc <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80195dc:	4b24      	ldr	r3, [pc, #144]	; (8019670 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80195de:	8802      	ldrh	r2, [r0, #0]
 80195e0:	8818      	ldrh	r0, [r3, #0]
 80195e2:	4282      	cmp	r2, r0
 80195e4:	d221      	bcs.n	801962a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80195e6:	4b23      	ldr	r3, [pc, #140]	; (8019674 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80195e8:	6819      	ldr	r1, [r3, #0]
 80195ea:	2314      	movs	r3, #20
 80195ec:	fb03 1302 	mla	r3, r3, r2, r1
 80195f0:	6858      	ldr	r0, [r3, #4]
 80195f2:	2800      	cmp	r0, #0
 80195f4:	d03a      	beq.n	801966c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80195f6:	4920      	ldr	r1, [pc, #128]	; (8019678 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80195f8:	6809      	ldr	r1, [r1, #0]
 80195fa:	2900      	cmp	r1, #0
 80195fc:	d036      	beq.n	801966c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80195fe:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8019602:	2900      	cmp	r1, #0
 8019604:	d032      	beq.n	801966c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019606:	891a      	ldrh	r2, [r3, #8]
 8019608:	8958      	ldrh	r0, [r3, #10]
 801960a:	4350      	muls	r0, r2
 801960c:	7c5a      	ldrb	r2, [r3, #17]
 801960e:	7cdb      	ldrb	r3, [r3, #19]
 8019610:	0952      	lsrs	r2, r2, #5
 8019612:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8019616:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801961a:	2b0b      	cmp	r3, #11
 801961c:	bf18      	it	ne
 801961e:	0040      	lslne	r0, r0, #1
 8019620:	3003      	adds	r0, #3
 8019622:	f020 0003 	bic.w	r0, r0, #3
 8019626:	4408      	add	r0, r1
 8019628:	4770      	bx	lr
 801962a:	4b14      	ldr	r3, [pc, #80]	; (801967c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801962c:	881b      	ldrh	r3, [r3, #0]
 801962e:	4403      	add	r3, r0
 8019630:	429a      	cmp	r2, r3
 8019632:	da1a      	bge.n	801966a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019634:	4b12      	ldr	r3, [pc, #72]	; (8019680 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8019636:	681b      	ldr	r3, [r3, #0]
 8019638:	1a10      	subs	r0, r2, r0
 801963a:	210e      	movs	r1, #14
 801963c:	fb01 3000 	mla	r0, r1, r0, r3
 8019640:	7b03      	ldrb	r3, [r0, #12]
 8019642:	f003 031f 	and.w	r3, r3, #31
 8019646:	2b0b      	cmp	r3, #11
 8019648:	d10b      	bne.n	8019662 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801964a:	8903      	ldrh	r3, [r0, #8]
 801964c:	8940      	ldrh	r0, [r0, #10]
 801964e:	4358      	muls	r0, r3
 8019650:	4b09      	ldr	r3, [pc, #36]	; (8019678 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019652:	6819      	ldr	r1, [r3, #0]
 8019654:	3003      	adds	r0, #3
 8019656:	f020 0303 	bic.w	r3, r0, #3
 801965a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801965e:	4418      	add	r0, r3
 8019660:	4770      	bx	lr
 8019662:	2b0d      	cmp	r3, #13
 8019664:	d101      	bne.n	801966a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8019666:	300d      	adds	r0, #13
 8019668:	4770      	bx	lr
 801966a:	2000      	movs	r0, #0
 801966c:	4770      	bx	lr
 801966e:	bf00      	nop
 8019670:	20012e3c 	.word	0x20012e3c
 8019674:	20012e44 	.word	0x20012e44
 8019678:	20012e20 	.word	0x20012e20
 801967c:	20012e40 	.word	0x20012e40
 8019680:	20012e24 	.word	0x20012e24

08019684 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8019684:	b510      	push	{r4, lr}
 8019686:	4a17      	ldr	r2, [pc, #92]	; (80196e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8019688:	8803      	ldrh	r3, [r0, #0]
 801968a:	8812      	ldrh	r2, [r2, #0]
 801968c:	4293      	cmp	r3, r2
 801968e:	d20c      	bcs.n	80196aa <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8019690:	4a15      	ldr	r2, [pc, #84]	; (80196e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8019692:	6812      	ldr	r2, [r2, #0]
 8019694:	2114      	movs	r1, #20
 8019696:	fb01 2303 	mla	r3, r1, r3, r2
 801969a:	7c58      	ldrb	r0, [r3, #17]
 801969c:	0942      	lsrs	r2, r0, #5
 801969e:	7cd8      	ldrb	r0, [r3, #19]
 80196a0:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80196a4:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80196a8:	bd10      	pop	{r4, pc}
 80196aa:	4910      	ldr	r1, [pc, #64]	; (80196ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80196ac:	8809      	ldrh	r1, [r1, #0]
 80196ae:	4411      	add	r1, r2
 80196b0:	428b      	cmp	r3, r1
 80196b2:	da09      	bge.n	80196c8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80196b4:	1a9b      	subs	r3, r3, r2
 80196b6:	4a0e      	ldr	r2, [pc, #56]	; (80196f0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80196b8:	6812      	ldr	r2, [r2, #0]
 80196ba:	210e      	movs	r1, #14
 80196bc:	fb01 2303 	mla	r3, r1, r3, r2
 80196c0:	7b18      	ldrb	r0, [r3, #12]
 80196c2:	f000 001f 	and.w	r0, r0, #31
 80196c6:	e7ef      	b.n	80196a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80196c8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80196cc:	4293      	cmp	r3, r2
 80196ce:	d106      	bne.n	80196de <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80196d0:	f7ea fff4 	bl	80046bc <_ZN8touchgfx3HAL3lcdEv>
 80196d4:	6803      	ldr	r3, [r0, #0]
 80196d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80196da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80196dc:	4718      	bx	r3
 80196de:	2000      	movs	r0, #0
 80196e0:	e7e2      	b.n	80196a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80196e2:	bf00      	nop
 80196e4:	20012e3c 	.word	0x20012e3c
 80196e8:	20012e44 	.word	0x20012e44
 80196ec:	20012e40 	.word	0x20012e40
 80196f0:	20012e24 	.word	0x20012e24

080196f4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80196f4:	2010      	movs	r0, #16
 80196f6:	4770      	bx	lr

080196f8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80196f8:	2000      	movs	r0, #0
 80196fa:	4770      	bx	lr

080196fc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80196fc:	4b02      	ldr	r3, [pc, #8]	; (8019708 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80196fe:	8818      	ldrh	r0, [r3, #0]
 8019700:	0040      	lsls	r0, r0, #1
 8019702:	b280      	uxth	r0, r0
 8019704:	4770      	bx	lr
 8019706:	bf00      	nop
 8019708:	20012dae 	.word	0x20012dae

0801970c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801970c:	2bff      	cmp	r3, #255	; 0xff
 801970e:	d050      	beq.n	80197b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8019710:	2a0b      	cmp	r2, #11
 8019712:	d04a      	beq.n	80197aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8019714:	d80e      	bhi.n	8019734 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8019716:	2a03      	cmp	r2, #3
 8019718:	d03f      	beq.n	801979a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801971a:	d804      	bhi.n	8019726 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801971c:	2a01      	cmp	r2, #1
 801971e:	d03e      	beq.n	801979e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8019720:	d93f      	bls.n	80197a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8019722:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8019724:	4770      	bx	lr
 8019726:	2a09      	cmp	r2, #9
 8019728:	d03f      	beq.n	80197aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801972a:	d83c      	bhi.n	80197a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801972c:	2a08      	cmp	r2, #8
 801972e:	d03a      	beq.n	80197a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8019730:	2000      	movs	r0, #0
 8019732:	4770      	bx	lr
 8019734:	2a2f      	cmp	r2, #47	; 0x2f
 8019736:	d024      	beq.n	8019782 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8019738:	d80d      	bhi.n	8019756 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801973a:	2a2d      	cmp	r2, #45	; 0x2d
 801973c:	d014      	beq.n	8019768 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801973e:	d826      	bhi.n	801978e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8019740:	2a2c      	cmp	r2, #44	; 0x2c
 8019742:	d1f5      	bne.n	8019730 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019744:	684b      	ldr	r3, [r1, #4]
 8019746:	781b      	ldrb	r3, [r3, #0]
 8019748:	2b01      	cmp	r3, #1
 801974a:	d018      	beq.n	801977e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801974c:	d323      	bcc.n	8019796 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801974e:	2b02      	cmp	r3, #2
 8019750:	d1ee      	bne.n	8019730 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019752:	6880      	ldr	r0, [r0, #8]
 8019754:	4770      	bx	lr
 8019756:	2a31      	cmp	r2, #49	; 0x31
 8019758:	d004      	beq.n	8019764 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801975a:	d328      	bcc.n	80197ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801975c:	2a32      	cmp	r2, #50	; 0x32
 801975e:	d026      	beq.n	80197ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8019760:	2a33      	cmp	r2, #51	; 0x33
 8019762:	d1e5      	bne.n	8019730 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019764:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8019766:	4770      	bx	lr
 8019768:	684b      	ldr	r3, [r1, #4]
 801976a:	781b      	ldrb	r3, [r3, #0]
 801976c:	2b01      	cmp	r3, #1
 801976e:	d004      	beq.n	801977a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8019770:	d30b      	bcc.n	801978a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019772:	2b02      	cmp	r3, #2
 8019774:	d1dc      	bne.n	8019730 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019776:	6900      	ldr	r0, [r0, #16]
 8019778:	4770      	bx	lr
 801977a:	6a00      	ldr	r0, [r0, #32]
 801977c:	4770      	bx	lr
 801977e:	6980      	ldr	r0, [r0, #24]
 8019780:	4770      	bx	lr
 8019782:	684b      	ldr	r3, [r1, #4]
 8019784:	781b      	ldrb	r3, [r3, #0]
 8019786:	2b00      	cmp	r3, #0
 8019788:	d1d2      	bne.n	8019730 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801978a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801978c:	4770      	bx	lr
 801978e:	684b      	ldr	r3, [r1, #4]
 8019790:	781b      	ldrb	r3, [r3, #0]
 8019792:	2b00      	cmp	r3, #0
 8019794:	d1cc      	bne.n	8019730 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019796:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8019798:	4770      	bx	lr
 801979a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801979c:	4770      	bx	lr
 801979e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80197a0:	4770      	bx	lr
 80197a2:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80197a4:	4770      	bx	lr
 80197a6:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80197a8:	4770      	bx	lr
 80197aa:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80197ac:	4770      	bx	lr
 80197ae:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80197b0:	4770      	bx	lr
 80197b2:	2a0b      	cmp	r2, #11
 80197b4:	d049      	beq.n	801984a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80197b6:	d80e      	bhi.n	80197d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80197b8:	2a03      	cmp	r2, #3
 80197ba:	d040      	beq.n	801983e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80197bc:	d804      	bhi.n	80197c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80197be:	2a01      	cmp	r2, #1
 80197c0:	d03f      	beq.n	8019842 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80197c2:	d940      	bls.n	8019846 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80197c4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80197c6:	4770      	bx	lr
 80197c8:	2a09      	cmp	r2, #9
 80197ca:	d03e      	beq.n	801984a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80197cc:	d801      	bhi.n	80197d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80197ce:	2a08      	cmp	r2, #8
 80197d0:	d1ae      	bne.n	8019730 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80197d2:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80197d4:	4770      	bx	lr
 80197d6:	2a2f      	cmp	r2, #47	; 0x2f
 80197d8:	d024      	beq.n	8019824 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80197da:	d80d      	bhi.n	80197f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80197dc:	2a2d      	cmp	r2, #45	; 0x2d
 80197de:	d014      	beq.n	801980a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80197e0:	d826      	bhi.n	8019830 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80197e2:	2a2c      	cmp	r2, #44	; 0x2c
 80197e4:	d1a4      	bne.n	8019730 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80197e6:	684b      	ldr	r3, [r1, #4]
 80197e8:	781b      	ldrb	r3, [r3, #0]
 80197ea:	2b01      	cmp	r3, #1
 80197ec:	d018      	beq.n	8019820 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80197ee:	d324      	bcc.n	801983a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80197f0:	2b02      	cmp	r3, #2
 80197f2:	d19d      	bne.n	8019730 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80197f4:	68c0      	ldr	r0, [r0, #12]
 80197f6:	4770      	bx	lr
 80197f8:	2a31      	cmp	r2, #49	; 0x31
 80197fa:	d004      	beq.n	8019806 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80197fc:	d327      	bcc.n	801984e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80197fe:	2a32      	cmp	r2, #50	; 0x32
 8019800:	d025      	beq.n	801984e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8019802:	2a33      	cmp	r2, #51	; 0x33
 8019804:	d194      	bne.n	8019730 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019806:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8019808:	4770      	bx	lr
 801980a:	684b      	ldr	r3, [r1, #4]
 801980c:	781b      	ldrb	r3, [r3, #0]
 801980e:	2b01      	cmp	r3, #1
 8019810:	d004      	beq.n	801981c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8019812:	d30b      	bcc.n	801982c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8019814:	2b02      	cmp	r3, #2
 8019816:	d18b      	bne.n	8019730 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019818:	6940      	ldr	r0, [r0, #20]
 801981a:	4770      	bx	lr
 801981c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801981e:	4770      	bx	lr
 8019820:	69c0      	ldr	r0, [r0, #28]
 8019822:	4770      	bx	lr
 8019824:	684b      	ldr	r3, [r1, #4]
 8019826:	781b      	ldrb	r3, [r3, #0]
 8019828:	2b00      	cmp	r3, #0
 801982a:	d181      	bne.n	8019730 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801982c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801982e:	4770      	bx	lr
 8019830:	684b      	ldr	r3, [r1, #4]
 8019832:	781b      	ldrb	r3, [r3, #0]
 8019834:	2b00      	cmp	r3, #0
 8019836:	f47f af7b 	bne.w	8019730 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801983a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801983c:	4770      	bx	lr
 801983e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8019840:	4770      	bx	lr
 8019842:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8019844:	4770      	bx	lr
 8019846:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8019848:	4770      	bx	lr
 801984a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801984c:	4770      	bx	lr
 801984e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8019850:	4770      	bx	lr

08019852 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019852:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019856:	b087      	sub	sp, #28
 8019858:	9815      	ldr	r0, [sp, #84]	; 0x54
 801985a:	9205      	str	r2, [sp, #20]
 801985c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019860:	9202      	str	r2, [sp, #8]
 8019862:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8019866:	9101      	str	r1, [sp, #4]
 8019868:	6841      	ldr	r1, [r0, #4]
 801986a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801986e:	fb01 2404 	mla	r4, r1, r4, r2
 8019872:	6802      	ldr	r2, [r0, #0]
 8019874:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019878:	f8de 2000 	ldr.w	r2, [lr]
 801987c:	9203      	str	r2, [sp, #12]
 801987e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019882:	3204      	adds	r2, #4
 8019884:	9204      	str	r2, [sp, #16]
 8019886:	9a02      	ldr	r2, [sp, #8]
 8019888:	43d6      	mvns	r6, r2
 801988a:	b2f6      	uxtb	r6, r6
 801988c:	9a01      	ldr	r2, [sp, #4]
 801988e:	2a00      	cmp	r2, #0
 8019890:	dc03      	bgt.n	801989a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019892:	9a05      	ldr	r2, [sp, #20]
 8019894:	2a00      	cmp	r2, #0
 8019896:	f340 8129 	ble.w	8019aec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801989a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801989c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80198a0:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80198a4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80198a8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80198aa:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80198ae:	2b00      	cmp	r3, #0
 80198b0:	dd0e      	ble.n	80198d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80198b2:	1408      	asrs	r0, r1, #16
 80198b4:	d405      	bmi.n	80198c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80198b6:	4560      	cmp	r0, ip
 80198b8:	da03      	bge.n	80198c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80198ba:	1410      	asrs	r0, r2, #16
 80198bc:	d401      	bmi.n	80198c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80198be:	42b8      	cmp	r0, r7
 80198c0:	db07      	blt.n	80198d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80198c2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80198c4:	4401      	add	r1, r0
 80198c6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80198c8:	3b01      	subs	r3, #1
 80198ca:	4402      	add	r2, r0
 80198cc:	3402      	adds	r4, #2
 80198ce:	e7ee      	b.n	80198ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80198d0:	d071      	beq.n	80199b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80198d2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80198d4:	1e58      	subs	r0, r3, #1
 80198d6:	fb05 1500 	mla	r5, r5, r0, r1
 80198da:	142d      	asrs	r5, r5, #16
 80198dc:	d45f      	bmi.n	801999e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80198de:	4565      	cmp	r5, ip
 80198e0:	da5d      	bge.n	801999e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80198e2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80198e4:	fb05 2000 	mla	r0, r5, r0, r2
 80198e8:	1400      	asrs	r0, r0, #16
 80198ea:	d458      	bmi.n	801999e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80198ec:	42b8      	cmp	r0, r7
 80198ee:	da56      	bge.n	801999e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80198f0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80198f4:	4699      	mov	r9, r3
 80198f6:	46a2      	mov	sl, r4
 80198f8:	f1b9 0f00 	cmp.w	r9, #0
 80198fc:	dd57      	ble.n	80199ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80198fe:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019902:	9803      	ldr	r0, [sp, #12]
 8019904:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8019908:	140d      	asrs	r5, r1, #16
 801990a:	fb07 000c 	mla	r0, r7, ip, r0
 801990e:	f109 39ff 	add.w	r9, r9, #4294967295
 8019912:	5d40      	ldrb	r0, [r0, r5]
 8019914:	9d04      	ldr	r5, [sp, #16]
 8019916:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801991a:	f8ba 5000 	ldrh.w	r5, [sl]
 801991e:	122f      	asrs	r7, r5, #8
 8019920:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019924:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019928:	fb17 f706 	smulbb	r7, r7, r6
 801992c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019930:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019934:	00ed      	lsls	r5, r5, #3
 8019936:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801993a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801993e:	10c7      	asrs	r7, r0, #3
 8019940:	b2ed      	uxtb	r5, r5
 8019942:	00c0      	lsls	r0, r0, #3
 8019944:	fb18 f806 	smulbb	r8, r8, r6
 8019948:	fb15 f506 	smulbb	r5, r5, r6
 801994c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019950:	b2c0      	uxtb	r0, r0
 8019952:	fa1f fc8c 	uxth.w	ip, ip
 8019956:	fb07 870b 	mla	r7, r7, fp, r8
 801995a:	fb00 500b 	mla	r0, r0, fp, r5
 801995e:	b280      	uxth	r0, r0
 8019960:	b2bf      	uxth	r7, r7
 8019962:	f10c 0501 	add.w	r5, ip, #1
 8019966:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801996a:	f107 0801 	add.w	r8, r7, #1
 801996e:	1c45      	adds	r5, r0, #1
 8019970:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019974:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019978:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801997a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801997e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019982:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019986:	ea45 0c0c 	orr.w	ip, r5, ip
 801998a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801998e:	4401      	add	r1, r0
 8019990:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019992:	ea4c 0c08 	orr.w	ip, ip, r8
 8019996:	f82a cb02 	strh.w	ip, [sl], #2
 801999a:	4402      	add	r2, r0
 801999c:	e7ac      	b.n	80198f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801999e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80199a2:	f04f 0800 	mov.w	r8, #0
 80199a6:	eb03 0008 	add.w	r0, r3, r8
 80199aa:	2800      	cmp	r0, #0
 80199ac:	dc41      	bgt.n	8019a32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80199ae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80199b2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80199b6:	9b01      	ldr	r3, [sp, #4]
 80199b8:	2b00      	cmp	r3, #0
 80199ba:	f340 8097 	ble.w	8019aec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80199be:	ee30 0a04 	vadd.f32	s0, s0, s8
 80199c2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80199c6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80199ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80199cc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80199d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80199d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80199d8:	eef0 6a62 	vmov.f32	s13, s5
 80199dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80199e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80199e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80199e8:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80199ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80199f0:	eef0 6a43 	vmov.f32	s13, s6
 80199f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80199f8:	ee12 2a90 	vmov	r2, s5
 80199fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019a00:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a04:	ee13 2a10 	vmov	r2, s6
 8019a08:	9313      	str	r3, [sp, #76]	; 0x4c
 8019a0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019a0c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019a10:	9314      	str	r3, [sp, #80]	; 0x50
 8019a12:	9b01      	ldr	r3, [sp, #4]
 8019a14:	9a05      	ldr	r2, [sp, #20]
 8019a16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019a1a:	3b01      	subs	r3, #1
 8019a1c:	9301      	str	r3, [sp, #4]
 8019a1e:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019a22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019a24:	eeb0 3a67 	vmov.f32	s6, s15
 8019a28:	bf08      	it	eq
 8019a2a:	4613      	moveq	r3, r2
 8019a2c:	eef0 2a47 	vmov.f32	s5, s14
 8019a30:	e72c      	b.n	801988c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019a32:	140f      	asrs	r7, r1, #16
 8019a34:	d453      	bmi.n	8019ade <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019a36:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019a3a:	42bd      	cmp	r5, r7
 8019a3c:	dd4f      	ble.n	8019ade <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019a3e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019a42:	d44c      	bmi.n	8019ade <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019a44:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019a48:	4560      	cmp	r0, ip
 8019a4a:	dd48      	ble.n	8019ade <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8019a4c:	9803      	ldr	r0, [sp, #12]
 8019a4e:	b22d      	sxth	r5, r5
 8019a50:	fb0c 0505 	mla	r5, ip, r5, r0
 8019a54:	5de8      	ldrb	r0, [r5, r7]
 8019a56:	9d04      	ldr	r5, [sp, #16]
 8019a58:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019a5c:	f06f 0501 	mvn.w	r5, #1
 8019a60:	fb05 fb08 	mul.w	fp, r5, r8
 8019a64:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019a68:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019a6c:	122f      	asrs	r7, r5, #8
 8019a6e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019a72:	fb17 f706 	smulbb	r7, r7, r6
 8019a76:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019a7a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019a7e:	00ed      	lsls	r5, r5, #3
 8019a80:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019a84:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019a88:	10c7      	asrs	r7, r0, #3
 8019a8a:	b2ed      	uxtb	r5, r5
 8019a8c:	00c0      	lsls	r0, r0, #3
 8019a8e:	fb19 f906 	smulbb	r9, r9, r6
 8019a92:	fb15 f506 	smulbb	r5, r5, r6
 8019a96:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019a9a:	b2c0      	uxtb	r0, r0
 8019a9c:	fa1f fc8c 	uxth.w	ip, ip
 8019aa0:	fb07 970a 	mla	r7, r7, sl, r9
 8019aa4:	fb00 500a 	mla	r0, r0, sl, r5
 8019aa8:	b2bf      	uxth	r7, r7
 8019aaa:	b280      	uxth	r0, r0
 8019aac:	f10c 0501 	add.w	r5, ip, #1
 8019ab0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019ab4:	f107 0901 	add.w	r9, r7, #1
 8019ab8:	1c45      	adds	r5, r0, #1
 8019aba:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019abe:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019ac2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019ac6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019aca:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019ace:	ea45 0c0c 	orr.w	ip, r5, ip
 8019ad2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019ad6:	ea4c 0c09 	orr.w	ip, ip, r9
 8019ada:	f824 c00b 	strh.w	ip, [r4, fp]
 8019ade:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019ae0:	4401      	add	r1, r0
 8019ae2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019ae4:	f108 38ff 	add.w	r8, r8, #4294967295
 8019ae8:	4402      	add	r2, r0
 8019aea:	e75c      	b.n	80199a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8019aec:	b007      	add	sp, #28
 8019aee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019af2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019af2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019af6:	b085      	sub	sp, #20
 8019af8:	4693      	mov	fp, r2
 8019afa:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019afc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019afe:	6870      	ldr	r0, [r6, #4]
 8019b00:	9100      	str	r1, [sp, #0]
 8019b02:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019b06:	fb00 2404 	mla	r4, r0, r4, r2
 8019b0a:	6832      	ldr	r2, [r6, #0]
 8019b0c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019b10:	682a      	ldr	r2, [r5, #0]
 8019b12:	9201      	str	r2, [sp, #4]
 8019b14:	686a      	ldr	r2, [r5, #4]
 8019b16:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019b1a:	3204      	adds	r2, #4
 8019b1c:	9202      	str	r2, [sp, #8]
 8019b1e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019b22:	9a00      	ldr	r2, [sp, #0]
 8019b24:	2a00      	cmp	r2, #0
 8019b26:	dc03      	bgt.n	8019b30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019b28:	f1bb 0f00 	cmp.w	fp, #0
 8019b2c:	f340 80a0 	ble.w	8019c70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019b30:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019b32:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019b36:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019b3a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019b3e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019b40:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019b44:	2b00      	cmp	r3, #0
 8019b46:	dd0c      	ble.n	8019b62 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019b48:	1406      	asrs	r6, r0, #16
 8019b4a:	d405      	bmi.n	8019b58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019b4c:	454e      	cmp	r6, r9
 8019b4e:	da03      	bge.n	8019b58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019b50:	1416      	asrs	r6, r2, #16
 8019b52:	d401      	bmi.n	8019b58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019b54:	4546      	cmp	r6, r8
 8019b56:	db05      	blt.n	8019b64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019b58:	4470      	add	r0, lr
 8019b5a:	4462      	add	r2, ip
 8019b5c:	3b01      	subs	r3, #1
 8019b5e:	3402      	adds	r4, #2
 8019b60:	e7f0      	b.n	8019b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019b62:	d00f      	beq.n	8019b84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019b64:	1e5e      	subs	r6, r3, #1
 8019b66:	fb0e 0706 	mla	r7, lr, r6, r0
 8019b6a:	143f      	asrs	r7, r7, #16
 8019b6c:	d541      	bpl.n	8019bf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8019b6e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019b72:	4698      	mov	r8, r3
 8019b74:	9603      	str	r6, [sp, #12]
 8019b76:	f1b8 0f00 	cmp.w	r8, #0
 8019b7a:	dc59      	bgt.n	8019c30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019b7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019b80:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019b84:	9b00      	ldr	r3, [sp, #0]
 8019b86:	2b00      	cmp	r3, #0
 8019b88:	dd72      	ble.n	8019c70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019b8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019b8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019b92:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019b96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019b98:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b9c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019ba0:	eeb0 6a62 	vmov.f32	s12, s5
 8019ba4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019ba8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019bac:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019bb0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019bb4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019bb8:	eeb0 6a43 	vmov.f32	s12, s6
 8019bbc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019bc0:	ee12 2a90 	vmov	r2, s5
 8019bc4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019bc8:	fb92 fef3 	sdiv	lr, r2, r3
 8019bcc:	ee13 2a10 	vmov	r2, s6
 8019bd0:	fb92 fcf3 	sdiv	ip, r2, r3
 8019bd4:	9b00      	ldr	r3, [sp, #0]
 8019bd6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019bda:	3b01      	subs	r3, #1
 8019bdc:	9300      	str	r3, [sp, #0]
 8019bde:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019be2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019be4:	eeb0 3a67 	vmov.f32	s6, s15
 8019be8:	bf08      	it	eq
 8019bea:	465b      	moveq	r3, fp
 8019bec:	eef0 2a47 	vmov.f32	s5, s14
 8019bf0:	e797      	b.n	8019b22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019bf2:	454f      	cmp	r7, r9
 8019bf4:	dabb      	bge.n	8019b6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019bf6:	fb0c 2606 	mla	r6, ip, r6, r2
 8019bfa:	1436      	asrs	r6, r6, #16
 8019bfc:	d4b7      	bmi.n	8019b6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019bfe:	4546      	cmp	r6, r8
 8019c00:	dab5      	bge.n	8019b6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019c02:	461e      	mov	r6, r3
 8019c04:	46a0      	mov	r8, r4
 8019c06:	2e00      	cmp	r6, #0
 8019c08:	ddb8      	ble.n	8019b7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019c0a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019c0e:	9901      	ldr	r1, [sp, #4]
 8019c10:	1417      	asrs	r7, r2, #16
 8019c12:	ea4f 4920 	mov.w	r9, r0, asr #16
 8019c16:	fb0a 1707 	mla	r7, sl, r7, r1
 8019c1a:	9902      	ldr	r1, [sp, #8]
 8019c1c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8019c20:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019c24:	f828 7b02 	strh.w	r7, [r8], #2
 8019c28:	4470      	add	r0, lr
 8019c2a:	4462      	add	r2, ip
 8019c2c:	3e01      	subs	r6, #1
 8019c2e:	e7ea      	b.n	8019c06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8019c30:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019c34:	d417      	bmi.n	8019c66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019c36:	68ae      	ldr	r6, [r5, #8]
 8019c38:	454e      	cmp	r6, r9
 8019c3a:	dd14      	ble.n	8019c66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019c3c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8019c40:	d411      	bmi.n	8019c66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019c42:	68ef      	ldr	r7, [r5, #12]
 8019c44:	4557      	cmp	r7, sl
 8019c46:	dd0e      	ble.n	8019c66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8019c48:	9f01      	ldr	r7, [sp, #4]
 8019c4a:	b236      	sxth	r6, r6
 8019c4c:	fb0a 7606 	mla	r6, sl, r6, r7
 8019c50:	9f02      	ldr	r7, [sp, #8]
 8019c52:	f816 6009 	ldrb.w	r6, [r6, r9]
 8019c56:	f06f 0101 	mvn.w	r1, #1
 8019c5a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019c5e:	fb01 f608 	mul.w	r6, r1, r8
 8019c62:	9903      	ldr	r1, [sp, #12]
 8019c64:	538f      	strh	r7, [r1, r6]
 8019c66:	4470      	add	r0, lr
 8019c68:	4462      	add	r2, ip
 8019c6a:	f108 38ff 	add.w	r8, r8, #4294967295
 8019c6e:	e782      	b.n	8019b76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019c70:	b005      	add	sp, #20
 8019c72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019c76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c7a:	b087      	sub	sp, #28
 8019c7c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019c7e:	9205      	str	r2, [sp, #20]
 8019c80:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019c84:	9203      	str	r2, [sp, #12]
 8019c86:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019c8a:	9102      	str	r1, [sp, #8]
 8019c8c:	6861      	ldr	r1, [r4, #4]
 8019c8e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019c92:	fb01 2000 	mla	r0, r1, r0, r2
 8019c96:	6822      	ldr	r2, [r4, #0]
 8019c98:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8019c9c:	9200      	str	r2, [sp, #0]
 8019c9e:	f8dc 2000 	ldr.w	r2, [ip]
 8019ca2:	9204      	str	r2, [sp, #16]
 8019ca4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019ca8:	3204      	adds	r2, #4
 8019caa:	9201      	str	r2, [sp, #4]
 8019cac:	9a03      	ldr	r2, [sp, #12]
 8019cae:	43d5      	mvns	r5, r2
 8019cb0:	b2ed      	uxtb	r5, r5
 8019cb2:	9a02      	ldr	r2, [sp, #8]
 8019cb4:	2a00      	cmp	r2, #0
 8019cb6:	dc03      	bgt.n	8019cc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019cb8:	9a05      	ldr	r2, [sp, #20]
 8019cba:	2a00      	cmp	r2, #0
 8019cbc:	f340 812c 	ble.w	8019f18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019cc0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019cc2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8019cc6:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8019cca:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019cce:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019cd0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019cd4:	2b00      	cmp	r3, #0
 8019cd6:	dd10      	ble.n	8019cfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019cd8:	140c      	asrs	r4, r1, #16
 8019cda:	d405      	bmi.n	8019ce8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019cdc:	4574      	cmp	r4, lr
 8019cde:	da03      	bge.n	8019ce8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019ce0:	1414      	asrs	r4, r2, #16
 8019ce2:	d401      	bmi.n	8019ce8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019ce4:	42bc      	cmp	r4, r7
 8019ce6:	db09      	blt.n	8019cfc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019ce8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019cea:	9800      	ldr	r0, [sp, #0]
 8019cec:	4421      	add	r1, r4
 8019cee:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019cf0:	3002      	adds	r0, #2
 8019cf2:	4422      	add	r2, r4
 8019cf4:	3b01      	subs	r3, #1
 8019cf6:	9000      	str	r0, [sp, #0]
 8019cf8:	e7ec      	b.n	8019cd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019cfa:	d071      	beq.n	8019de0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8019cfc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019cfe:	1e5c      	subs	r4, r3, #1
 8019d00:	fb06 1604 	mla	r6, r6, r4, r1
 8019d04:	1436      	asrs	r6, r6, #16
 8019d06:	d45d      	bmi.n	8019dc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019d08:	4576      	cmp	r6, lr
 8019d0a:	da5b      	bge.n	8019dc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019d0c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8019d0e:	fb06 2404 	mla	r4, r6, r4, r2
 8019d12:	1424      	asrs	r4, r4, #16
 8019d14:	d456      	bmi.n	8019dc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019d16:	42bc      	cmp	r4, r7
 8019d18:	da54      	bge.n	8019dc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019d1a:	f8dd 9000 	ldr.w	r9, [sp]
 8019d1e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8019d22:	4698      	mov	r8, r3
 8019d24:	f1b8 0f00 	cmp.w	r8, #0
 8019d28:	dd54      	ble.n	8019dd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019d2a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019d2e:	9804      	ldr	r0, [sp, #16]
 8019d30:	1414      	asrs	r4, r2, #16
 8019d32:	fb07 0404 	mla	r4, r7, r4, r0
 8019d36:	140e      	asrs	r6, r1, #16
 8019d38:	9801      	ldr	r0, [sp, #4]
 8019d3a:	f814 e006 	ldrb.w	lr, [r4, r6]
 8019d3e:	f8b9 4000 	ldrh.w	r4, [r9]
 8019d42:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019d46:	eb00 0b0e 	add.w	fp, r0, lr
 8019d4a:	1227      	asrs	r7, r4, #8
 8019d4c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019d50:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019d54:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019d58:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019d5a:	fb16 f60a 	smulbb	r6, r6, sl
 8019d5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019d62:	fb07 6705 	mla	r7, r7, r5, r6
 8019d66:	10e6      	asrs	r6, r4, #3
 8019d68:	00e4      	lsls	r4, r4, #3
 8019d6a:	b2e4      	uxtb	r4, r4
 8019d6c:	fb1b fb0a 	smulbb	fp, fp, sl
 8019d70:	fb14 f405 	smulbb	r4, r4, r5
 8019d74:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019d78:	b2bf      	uxth	r7, r7
 8019d7a:	fb06 b605 	mla	r6, r6, r5, fp
 8019d7e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8019d82:	b2b6      	uxth	r6, r6
 8019d84:	fa1f fe8e 	uxth.w	lr, lr
 8019d88:	1c7c      	adds	r4, r7, #1
 8019d8a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019d8e:	f106 0b01 	add.w	fp, r6, #1
 8019d92:	f10e 0401 	add.w	r4, lr, #1
 8019d96:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8019d9a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019d9e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019da2:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019da6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019daa:	4327      	orrs	r7, r4
 8019dac:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019db0:	4401      	add	r1, r0
 8019db2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019db4:	ea47 070b 	orr.w	r7, r7, fp
 8019db8:	f829 7b02 	strh.w	r7, [r9], #2
 8019dbc:	4402      	add	r2, r0
 8019dbe:	f108 38ff 	add.w	r8, r8, #4294967295
 8019dc2:	e7af      	b.n	8019d24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8019dc4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8019dc8:	f04f 0e00 	mov.w	lr, #0
 8019dcc:	eb03 040e 	add.w	r4, r3, lr
 8019dd0:	2c00      	cmp	r4, #0
 8019dd2:	dc43      	bgt.n	8019e5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019dd4:	9a00      	ldr	r2, [sp, #0]
 8019dd6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019dda:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019dde:	9300      	str	r3, [sp, #0]
 8019de0:	9b02      	ldr	r3, [sp, #8]
 8019de2:	2b00      	cmp	r3, #0
 8019de4:	f340 8098 	ble.w	8019f18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019de8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019dec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019df0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019df4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019df6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019dfa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019dfe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019e02:	eef0 6a62 	vmov.f32	s13, s5
 8019e06:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019e0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019e12:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8019e16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019e1a:	eef0 6a43 	vmov.f32	s13, s6
 8019e1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019e22:	ee12 2a90 	vmov	r2, s5
 8019e26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019e2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e2e:	ee13 2a10 	vmov	r2, s6
 8019e32:	9313      	str	r3, [sp, #76]	; 0x4c
 8019e34:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019e36:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e3a:	9314      	str	r3, [sp, #80]	; 0x50
 8019e3c:	9b02      	ldr	r3, [sp, #8]
 8019e3e:	9a05      	ldr	r2, [sp, #20]
 8019e40:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e44:	3b01      	subs	r3, #1
 8019e46:	9302      	str	r3, [sp, #8]
 8019e48:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019e4c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019e4e:	eeb0 3a67 	vmov.f32	s6, s15
 8019e52:	bf08      	it	eq
 8019e54:	4613      	moveq	r3, r2
 8019e56:	eef0 2a47 	vmov.f32	s5, s14
 8019e5a:	e72a      	b.n	8019cb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019e5c:	140f      	asrs	r7, r1, #16
 8019e5e:	d454      	bmi.n	8019f0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019e60:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8019e64:	42be      	cmp	r6, r7
 8019e66:	dd50      	ble.n	8019f0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019e68:	ea5f 4822 	movs.w	r8, r2, asr #16
 8019e6c:	d44d      	bmi.n	8019f0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019e6e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8019e72:	4544      	cmp	r4, r8
 8019e74:	dd49      	ble.n	8019f0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019e76:	9c04      	ldr	r4, [sp, #16]
 8019e78:	b236      	sxth	r6, r6
 8019e7a:	fb08 4606 	mla	r6, r8, r6, r4
 8019e7e:	f06f 0001 	mvn.w	r0, #1
 8019e82:	f816 8007 	ldrb.w	r8, [r6, r7]
 8019e86:	9c01      	ldr	r4, [sp, #4]
 8019e88:	fb00 fa0e 	mul.w	sl, r0, lr
 8019e8c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019e90:	9800      	ldr	r0, [sp, #0]
 8019e92:	eb04 0b08 	add.w	fp, r4, r8
 8019e96:	f830 400a 	ldrh.w	r4, [r0, sl]
 8019e9a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019e9e:	9801      	ldr	r0, [sp, #4]
 8019ea0:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019ea4:	f810 8008 	ldrb.w	r8, [r0, r8]
 8019ea8:	9800      	ldr	r0, [sp, #0]
 8019eaa:	1227      	asrs	r7, r4, #8
 8019eac:	fb16 f609 	smulbb	r6, r6, r9
 8019eb0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019eb4:	fb07 6705 	mla	r7, r7, r5, r6
 8019eb8:	10e6      	asrs	r6, r4, #3
 8019eba:	00e4      	lsls	r4, r4, #3
 8019ebc:	b2e4      	uxtb	r4, r4
 8019ebe:	fb1b fb09 	smulbb	fp, fp, r9
 8019ec2:	fb14 f405 	smulbb	r4, r4, r5
 8019ec6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019eca:	b2bf      	uxth	r7, r7
 8019ecc:	fb06 b605 	mla	r6, r6, r5, fp
 8019ed0:	fb08 4809 	mla	r8, r8, r9, r4
 8019ed4:	b2b6      	uxth	r6, r6
 8019ed6:	fa1f f888 	uxth.w	r8, r8
 8019eda:	1c7c      	adds	r4, r7, #1
 8019edc:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019ee0:	f106 0b01 	add.w	fp, r6, #1
 8019ee4:	f108 0401 	add.w	r4, r8, #1
 8019ee8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8019eec:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019ef0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019ef4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019ef8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019efc:	4327      	orrs	r7, r4
 8019efe:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8019f02:	ea47 070b 	orr.w	r7, r7, fp
 8019f06:	f820 700a 	strh.w	r7, [r0, sl]
 8019f0a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019f0c:	4401      	add	r1, r0
 8019f0e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019f10:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019f14:	4402      	add	r2, r0
 8019f16:	e759      	b.n	8019dcc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019f18:	b007      	add	sp, #28
 8019f1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019f20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f24:	b085      	sub	sp, #20
 8019f26:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019f2a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019f2c:	9203      	str	r2, [sp, #12]
 8019f2e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019f32:	6870      	ldr	r0, [r6, #4]
 8019f34:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019f36:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8019f3a:	686f      	ldr	r7, [r5, #4]
 8019f3c:	9101      	str	r1, [sp, #4]
 8019f3e:	fb00 2404 	mla	r4, r0, r4, r2
 8019f42:	6832      	ldr	r2, [r6, #0]
 8019f44:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019f48:	682a      	ldr	r2, [r5, #0]
 8019f4a:	9202      	str	r2, [sp, #8]
 8019f4c:	3704      	adds	r7, #4
 8019f4e:	9a01      	ldr	r2, [sp, #4]
 8019f50:	2a00      	cmp	r2, #0
 8019f52:	dc03      	bgt.n	8019f5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019f54:	9a03      	ldr	r2, [sp, #12]
 8019f56:	2a00      	cmp	r2, #0
 8019f58:	f340 80cc 	ble.w	801a0f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8019f5c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019f5e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019f62:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019f66:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019f6a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019f6c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019f70:	2b00      	cmp	r3, #0
 8019f72:	dd0d      	ble.n	8019f90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019f74:	1406      	asrs	r6, r0, #16
 8019f76:	d405      	bmi.n	8019f84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019f78:	454e      	cmp	r6, r9
 8019f7a:	da03      	bge.n	8019f84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019f7c:	1416      	asrs	r6, r2, #16
 8019f7e:	d401      	bmi.n	8019f84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019f80:	4546      	cmp	r6, r8
 8019f82:	db06      	blt.n	8019f92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019f84:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8019f86:	4460      	add	r0, ip
 8019f88:	4432      	add	r2, r6
 8019f8a:	3b01      	subs	r3, #1
 8019f8c:	3402      	adds	r4, #2
 8019f8e:	e7ef      	b.n	8019f70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8019f90:	d00f      	beq.n	8019fb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019f92:	1e5e      	subs	r6, r3, #1
 8019f94:	fb0c 0e06 	mla	lr, ip, r6, r0
 8019f98:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8019f9c:	d543      	bpl.n	801a026 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8019f9e:	4698      	mov	r8, r3
 8019fa0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8019fa4:	f1b8 0f00 	cmp.w	r8, #0
 8019fa8:	dc71      	bgt.n	801a08e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8019faa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019fae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019fb2:	9b01      	ldr	r3, [sp, #4]
 8019fb4:	2b00      	cmp	r3, #0
 8019fb6:	f340 809d 	ble.w	801a0f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8019fba:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019fbe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019fc2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019fc6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019fc8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019fcc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019fd0:	eeb0 6a62 	vmov.f32	s12, s5
 8019fd4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019fd8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019fdc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019fe0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019fe4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019fe8:	eeb0 6a43 	vmov.f32	s12, s6
 8019fec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019ff0:	ee12 2a90 	vmov	r2, s5
 8019ff4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019ff8:	fb92 fcf3 	sdiv	ip, r2, r3
 8019ffc:	ee13 2a10 	vmov	r2, s6
 801a000:	fb92 f3f3 	sdiv	r3, r2, r3
 801a004:	9312      	str	r3, [sp, #72]	; 0x48
 801a006:	9b01      	ldr	r3, [sp, #4]
 801a008:	9a03      	ldr	r2, [sp, #12]
 801a00a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a00e:	3b01      	subs	r3, #1
 801a010:	9301      	str	r3, [sp, #4]
 801a012:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a016:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a018:	eeb0 3a67 	vmov.f32	s6, s15
 801a01c:	bf08      	it	eq
 801a01e:	4613      	moveq	r3, r2
 801a020:	eef0 2a47 	vmov.f32	s5, s14
 801a024:	e793      	b.n	8019f4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801a026:	45ce      	cmp	lr, r9
 801a028:	dab9      	bge.n	8019f9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a02a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a02c:	fb01 2606 	mla	r6, r1, r6, r2
 801a030:	1436      	asrs	r6, r6, #16
 801a032:	d4b4      	bmi.n	8019f9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a034:	4546      	cmp	r6, r8
 801a036:	dab2      	bge.n	8019f9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a038:	4698      	mov	r8, r3
 801a03a:	46a2      	mov	sl, r4
 801a03c:	f1b8 0f00 	cmp.w	r8, #0
 801a040:	ddb3      	ble.n	8019faa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a042:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a046:	9902      	ldr	r1, [sp, #8]
 801a048:	1416      	asrs	r6, r2, #16
 801a04a:	fb09 1606 	mla	r6, r9, r6, r1
 801a04e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801a052:	492a      	ldr	r1, [pc, #168]	; (801a0fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801a054:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801a058:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a05c:	eb07 0b0e 	add.w	fp, r7, lr
 801a060:	4460      	add	r0, ip
 801a062:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801a066:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801a06a:	00f6      	lsls	r6, r6, #3
 801a06c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801a070:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a074:	ea49 0606 	orr.w	r6, r9, r6
 801a078:	f817 900e 	ldrb.w	r9, [r7, lr]
 801a07c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a07e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801a082:	f82a 6b02 	strh.w	r6, [sl], #2
 801a086:	440a      	add	r2, r1
 801a088:	f108 38ff 	add.w	r8, r8, #4294967295
 801a08c:	e7d6      	b.n	801a03c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a08e:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a092:	d429      	bmi.n	801a0e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a094:	68ae      	ldr	r6, [r5, #8]
 801a096:	454e      	cmp	r6, r9
 801a098:	dd26      	ble.n	801a0e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a09a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801a09e:	d423      	bmi.n	801a0e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a0a0:	68e9      	ldr	r1, [r5, #12]
 801a0a2:	4559      	cmp	r1, fp
 801a0a4:	dd20      	ble.n	801a0e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801a0a6:	9902      	ldr	r1, [sp, #8]
 801a0a8:	fa0f fe86 	sxth.w	lr, r6
 801a0ac:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801a0b0:	f06f 0101 	mvn.w	r1, #1
 801a0b4:	f81e e009 	ldrb.w	lr, [lr, r9]
 801a0b8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a0bc:	eb07 060e 	add.w	r6, r7, lr
 801a0c0:	fb01 f908 	mul.w	r9, r1, r8
 801a0c4:	f896 b002 	ldrb.w	fp, [r6, #2]
 801a0c8:	7876      	ldrb	r6, [r6, #1]
 801a0ca:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801a0ce:	00f6      	lsls	r6, r6, #3
 801a0d0:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801a0d4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a0d8:	ea4b 0606 	orr.w	r6, fp, r6
 801a0dc:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801a0e0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801a0e4:	f82a 6009 	strh.w	r6, [sl, r9]
 801a0e8:	9912      	ldr	r1, [sp, #72]	; 0x48
 801a0ea:	4460      	add	r0, ip
 801a0ec:	440a      	add	r2, r1
 801a0ee:	f108 38ff 	add.w	r8, r8, #4294967295
 801a0f2:	e757      	b.n	8019fa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a0f4:	b005      	add	sp, #20
 801a0f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a0fa:	bf00      	nop
 801a0fc:	fffff800 	.word	0xfffff800

0801a100 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a100:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a104:	b087      	sub	sp, #28
 801a106:	468b      	mov	fp, r1
 801a108:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a10a:	9204      	str	r2, [sp, #16]
 801a10c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a110:	9205      	str	r2, [sp, #20]
 801a112:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a116:	6841      	ldr	r1, [r0, #4]
 801a118:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a11c:	fb01 2404 	mla	r4, r1, r4, r2
 801a120:	6802      	ldr	r2, [r0, #0]
 801a122:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a126:	f8dc 2000 	ldr.w	r2, [ip]
 801a12a:	9201      	str	r2, [sp, #4]
 801a12c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a130:	3204      	adds	r2, #4
 801a132:	9202      	str	r2, [sp, #8]
 801a134:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a138:	f1bb 0f00 	cmp.w	fp, #0
 801a13c:	dc03      	bgt.n	801a146 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801a13e:	9a04      	ldr	r2, [sp, #16]
 801a140:	2a00      	cmp	r2, #0
 801a142:	f340 8138 	ble.w	801a3b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a146:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a148:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a14c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801a150:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a154:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a156:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a15a:	2b00      	cmp	r3, #0
 801a15c:	dd0e      	ble.n	801a17c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a15e:	1402      	asrs	r2, r0, #16
 801a160:	d405      	bmi.n	801a16e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a162:	42ba      	cmp	r2, r7
 801a164:	da03      	bge.n	801a16e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a166:	140a      	asrs	r2, r1, #16
 801a168:	d401      	bmi.n	801a16e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a16a:	42b2      	cmp	r2, r6
 801a16c:	db07      	blt.n	801a17e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a16e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a170:	4410      	add	r0, r2
 801a172:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a174:	3b01      	subs	r3, #1
 801a176:	4411      	add	r1, r2
 801a178:	3402      	adds	r4, #2
 801a17a:	e7ee      	b.n	801a15a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a17c:	d019      	beq.n	801a1b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a17e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a180:	1e5a      	subs	r2, r3, #1
 801a182:	fb05 0502 	mla	r5, r5, r2, r0
 801a186:	142d      	asrs	r5, r5, #16
 801a188:	d409      	bmi.n	801a19e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a18a:	42bd      	cmp	r5, r7
 801a18c:	da07      	bge.n	801a19e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a18e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a190:	fb05 1202 	mla	r2, r5, r2, r1
 801a194:	1412      	asrs	r2, r2, #16
 801a196:	d402      	bmi.n	801a19e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a198:	42b2      	cmp	r2, r6
 801a19a:	f2c0 80ac 	blt.w	801a2f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801a19e:	f04f 0e00 	mov.w	lr, #0
 801a1a2:	eb03 020e 	add.w	r2, r3, lr
 801a1a6:	2a00      	cmp	r2, #0
 801a1a8:	dc3e      	bgt.n	801a228 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a1aa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a1ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a1b2:	f1bb 0f00 	cmp.w	fp, #0
 801a1b6:	f340 80fe 	ble.w	801a3b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a1ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a1be:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a1c2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a1c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a1c8:	f1bb 0b01 	subs.w	fp, fp, #1
 801a1cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a1d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a1d4:	eeb0 6a62 	vmov.f32	s12, s5
 801a1d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a1dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a1e0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a1e4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a1e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a1ec:	eeb0 6a43 	vmov.f32	s12, s6
 801a1f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a1f4:	ee12 2a90 	vmov	r2, s5
 801a1f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a1fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a200:	ee13 2a10 	vmov	r2, s6
 801a204:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a208:	9313      	str	r3, [sp, #76]	; 0x4c
 801a20a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a20c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a210:	9a04      	ldr	r2, [sp, #16]
 801a212:	9314      	str	r3, [sp, #80]	; 0x50
 801a214:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a218:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a21a:	eeb0 3a67 	vmov.f32	s6, s15
 801a21e:	bf08      	it	eq
 801a220:	4613      	moveq	r3, r2
 801a222:	eef0 2a47 	vmov.f32	s5, s14
 801a226:	e787      	b.n	801a138 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a228:	1406      	asrs	r6, r0, #16
 801a22a:	d45d      	bmi.n	801a2e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a22c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801a230:	42b5      	cmp	r5, r6
 801a232:	dd59      	ble.n	801a2e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a234:	140f      	asrs	r7, r1, #16
 801a236:	d457      	bmi.n	801a2e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a238:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801a23c:	42ba      	cmp	r2, r7
 801a23e:	dd53      	ble.n	801a2e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a240:	9a01      	ldr	r2, [sp, #4]
 801a242:	b22d      	sxth	r5, r5
 801a244:	fb07 2505 	mla	r5, r7, r5, r2
 801a248:	5daa      	ldrb	r2, [r5, r6]
 801a24a:	9d02      	ldr	r5, [sp, #8]
 801a24c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a250:	0e2e      	lsrs	r6, r5, #24
 801a252:	d049      	beq.n	801a2e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801a254:	f06f 0201 	mvn.w	r2, #1
 801a258:	fb02 f20e 	mul.w	r2, r2, lr
 801a25c:	9203      	str	r2, [sp, #12]
 801a25e:	f834 8002 	ldrh.w	r8, [r4, r2]
 801a262:	9a05      	ldr	r2, [sp, #20]
 801a264:	4356      	muls	r6, r2
 801a266:	1c72      	adds	r2, r6, #1
 801a268:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a26c:	1212      	asrs	r2, r2, #8
 801a26e:	fa1f f982 	uxth.w	r9, r2
 801a272:	ea4f 2728 	mov.w	r7, r8, asr #8
 801a276:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a27a:	43d2      	mvns	r2, r2
 801a27c:	b2d2      	uxtb	r2, r2
 801a27e:	fb16 f609 	smulbb	r6, r6, r9
 801a282:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a286:	fb07 6702 	mla	r7, r7, r2, r6
 801a28a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a28e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a292:	b2ed      	uxtb	r5, r5
 801a294:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a298:	fa5f f888 	uxtb.w	r8, r8
 801a29c:	fb15 f509 	smulbb	r5, r5, r9
 801a2a0:	fb08 5502 	mla	r5, r8, r2, r5
 801a2a4:	b2bf      	uxth	r7, r7
 801a2a6:	fb1a fa09 	smulbb	sl, sl, r9
 801a2aa:	b2ad      	uxth	r5, r5
 801a2ac:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a2b0:	fb06 a602 	mla	r6, r6, r2, sl
 801a2b4:	1c7a      	adds	r2, r7, #1
 801a2b6:	f105 0a01 	add.w	sl, r5, #1
 801a2ba:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a2be:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a2c2:	b2b6      	uxth	r6, r6
 801a2c4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a2c8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a2cc:	ea4a 0707 	orr.w	r7, sl, r7
 801a2d0:	f106 0a01 	add.w	sl, r6, #1
 801a2d4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a2d8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a2dc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a2e0:	9a03      	ldr	r2, [sp, #12]
 801a2e2:	ea47 070a 	orr.w	r7, r7, sl
 801a2e6:	52a7      	strh	r7, [r4, r2]
 801a2e8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a2ea:	4410      	add	r0, r2
 801a2ec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a2ee:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a2f2:	4411      	add	r1, r2
 801a2f4:	e755      	b.n	801a1a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a2f6:	f04f 0800 	mov.w	r8, #0
 801a2fa:	eba3 0208 	sub.w	r2, r3, r8
 801a2fe:	2a00      	cmp	r2, #0
 801a300:	f77f af53 	ble.w	801a1aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a304:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801a308:	9f01      	ldr	r7, [sp, #4]
 801a30a:	140a      	asrs	r2, r1, #16
 801a30c:	1405      	asrs	r5, r0, #16
 801a30e:	fb06 7202 	mla	r2, r6, r2, r7
 801a312:	5d52      	ldrb	r2, [r2, r5]
 801a314:	9d02      	ldr	r5, [sp, #8]
 801a316:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801a31a:	0e2e      	lsrs	r6, r5, #24
 801a31c:	d044      	beq.n	801a3a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a31e:	9a05      	ldr	r2, [sp, #20]
 801a320:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a324:	4356      	muls	r6, r2
 801a326:	1c72      	adds	r2, r6, #1
 801a328:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801a32c:	1212      	asrs	r2, r2, #8
 801a32e:	fa1f f982 	uxth.w	r9, r2
 801a332:	ea4f 272e 	mov.w	r7, lr, asr #8
 801a336:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a33a:	43d2      	mvns	r2, r2
 801a33c:	b2d2      	uxtb	r2, r2
 801a33e:	fb16 f609 	smulbb	r6, r6, r9
 801a342:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a346:	fb07 6702 	mla	r7, r7, r2, r6
 801a34a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a34e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a352:	b2ed      	uxtb	r5, r5
 801a354:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a358:	fa5f fe8e 	uxtb.w	lr, lr
 801a35c:	fb15 f509 	smulbb	r5, r5, r9
 801a360:	fb0e 5502 	mla	r5, lr, r2, r5
 801a364:	b2bf      	uxth	r7, r7
 801a366:	fb1a fa09 	smulbb	sl, sl, r9
 801a36a:	b2ad      	uxth	r5, r5
 801a36c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a370:	fb06 a602 	mla	r6, r6, r2, sl
 801a374:	1c7a      	adds	r2, r7, #1
 801a376:	f105 0a01 	add.w	sl, r5, #1
 801a37a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801a37e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a382:	b2b6      	uxth	r6, r6
 801a384:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a388:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a38c:	ea4a 0707 	orr.w	r7, sl, r7
 801a390:	f106 0a01 	add.w	sl, r6, #1
 801a394:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a398:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a39c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a3a0:	ea47 070a 	orr.w	r7, r7, sl
 801a3a4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a3a8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a3aa:	4410      	add	r0, r2
 801a3ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a3ae:	f108 0801 	add.w	r8, r8, #1
 801a3b2:	4411      	add	r1, r2
 801a3b4:	e7a1      	b.n	801a2fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a3b6:	b007      	add	sp, #28
 801a3b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a3bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a3bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a3c0:	b085      	sub	sp, #20
 801a3c2:	468b      	mov	fp, r1
 801a3c4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a3c6:	9203      	str	r2, [sp, #12]
 801a3c8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a3cc:	6841      	ldr	r1, [r0, #4]
 801a3ce:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801a3d2:	fb01 2404 	mla	r4, r1, r4, r2
 801a3d6:	6802      	ldr	r2, [r0, #0]
 801a3d8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a3dc:	f8de 2000 	ldr.w	r2, [lr]
 801a3e0:	9200      	str	r2, [sp, #0]
 801a3e2:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a3e6:	3204      	adds	r2, #4
 801a3e8:	9201      	str	r2, [sp, #4]
 801a3ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a3ee:	f1bb 0f00 	cmp.w	fp, #0
 801a3f2:	dc03      	bgt.n	801a3fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a3f4:	9a03      	ldr	r2, [sp, #12]
 801a3f6:	2a00      	cmp	r2, #0
 801a3f8:	f340 8153 	ble.w	801a6a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a3fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a3fe:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a402:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a406:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a40a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a40c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a410:	2b00      	cmp	r3, #0
 801a412:	dd0e      	ble.n	801a432 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a414:	1408      	asrs	r0, r1, #16
 801a416:	d405      	bmi.n	801a424 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a418:	42b8      	cmp	r0, r7
 801a41a:	da03      	bge.n	801a424 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a41c:	1410      	asrs	r0, r2, #16
 801a41e:	d401      	bmi.n	801a424 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a420:	42b0      	cmp	r0, r6
 801a422:	db07      	blt.n	801a434 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a424:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a426:	4401      	add	r1, r0
 801a428:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a42a:	3b01      	subs	r3, #1
 801a42c:	4402      	add	r2, r0
 801a42e:	3402      	adds	r4, #2
 801a430:	e7ee      	b.n	801a410 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a432:	d017      	beq.n	801a464 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a434:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a436:	1e58      	subs	r0, r3, #1
 801a438:	fb05 1500 	mla	r5, r5, r0, r1
 801a43c:	142d      	asrs	r5, r5, #16
 801a43e:	d409      	bmi.n	801a454 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a440:	42bd      	cmp	r5, r7
 801a442:	da07      	bge.n	801a454 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a444:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a446:	fb05 2000 	mla	r0, r5, r0, r2
 801a44a:	1400      	asrs	r0, r0, #16
 801a44c:	d402      	bmi.n	801a454 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a44e:	42b0      	cmp	r0, r6
 801a450:	f2c0 80bc 	blt.w	801a5cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801a454:	2600      	movs	r6, #0
 801a456:	1998      	adds	r0, r3, r6
 801a458:	2800      	cmp	r0, #0
 801a45a:	dc3e      	bgt.n	801a4da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801a45c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a460:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a464:	f1bb 0f00 	cmp.w	fp, #0
 801a468:	f340 811b 	ble.w	801a6a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801a46c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a470:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a474:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a478:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a47a:	f1bb 0b01 	subs.w	fp, fp, #1
 801a47e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a482:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a486:	eeb0 6a62 	vmov.f32	s12, s5
 801a48a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a48e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a492:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a496:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a49a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a49e:	eeb0 6a43 	vmov.f32	s12, s6
 801a4a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a4a6:	ee12 2a90 	vmov	r2, s5
 801a4aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a4ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801a4b2:	ee13 2a10 	vmov	r2, s6
 801a4b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a4ba:	9311      	str	r3, [sp, #68]	; 0x44
 801a4bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a4be:	fb92 f3f3 	sdiv	r3, r2, r3
 801a4c2:	9a03      	ldr	r2, [sp, #12]
 801a4c4:	9312      	str	r3, [sp, #72]	; 0x48
 801a4c6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a4ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a4cc:	eeb0 3a67 	vmov.f32	s6, s15
 801a4d0:	bf08      	it	eq
 801a4d2:	4613      	moveq	r3, r2
 801a4d4:	eef0 2a47 	vmov.f32	s5, s14
 801a4d8:	e789      	b.n	801a3ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a4da:	140f      	asrs	r7, r1, #16
 801a4dc:	d426      	bmi.n	801a52c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a4de:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a4e2:	42bd      	cmp	r5, r7
 801a4e4:	dd22      	ble.n	801a52c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a4e6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a4ea:	d41f      	bmi.n	801a52c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a4ec:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a4f0:	4560      	cmp	r0, ip
 801a4f2:	dd1b      	ble.n	801a52c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a4f4:	9800      	ldr	r0, [sp, #0]
 801a4f6:	b22d      	sxth	r5, r5
 801a4f8:	fb0c 0505 	mla	r5, ip, r5, r0
 801a4fc:	5de8      	ldrb	r0, [r5, r7]
 801a4fe:	9d01      	ldr	r5, [sp, #4]
 801a500:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801a504:	0e07      	lsrs	r7, r0, #24
 801a506:	2fff      	cmp	r7, #255	; 0xff
 801a508:	d116      	bne.n	801a538 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a50a:	f06f 0501 	mvn.w	r5, #1
 801a50e:	fb05 f706 	mul.w	r7, r5, r6
 801a512:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a516:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a51a:	0945      	lsrs	r5, r0, #5
 801a51c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a520:	ea4c 0505 	orr.w	r5, ip, r5
 801a524:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a528:	4305      	orrs	r5, r0
 801a52a:	53e5      	strh	r5, [r4, r7]
 801a52c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a52e:	4401      	add	r1, r0
 801a530:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a532:	3e01      	subs	r6, #1
 801a534:	4402      	add	r2, r0
 801a536:	e78e      	b.n	801a456 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a538:	b2fd      	uxtb	r5, r7
 801a53a:	2f00      	cmp	r7, #0
 801a53c:	d0f6      	beq.n	801a52c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a53e:	f06f 0701 	mvn.w	r7, #1
 801a542:	4377      	muls	r7, r6
 801a544:	fa1f f985 	uxth.w	r9, r5
 801a548:	f834 8007 	ldrh.w	r8, [r4, r7]
 801a54c:	9702      	str	r7, [sp, #8]
 801a54e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a552:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a556:	43ed      	mvns	r5, r5
 801a558:	b2ed      	uxtb	r5, r5
 801a55a:	fb17 f709 	smulbb	r7, r7, r9
 801a55e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a562:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a566:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a56a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801a56e:	b2c0      	uxtb	r0, r0
 801a570:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a574:	fa5f f888 	uxtb.w	r8, r8
 801a578:	fb10 f009 	smulbb	r0, r0, r9
 801a57c:	fb08 0005 	mla	r0, r8, r5, r0
 801a580:	b280      	uxth	r0, r0
 801a582:	fa1f fc8c 	uxth.w	ip, ip
 801a586:	fb1a fa09 	smulbb	sl, sl, r9
 801a58a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a58e:	fb07 a705 	mla	r7, r7, r5, sl
 801a592:	f100 0a01 	add.w	sl, r0, #1
 801a596:	f10c 0501 	add.w	r5, ip, #1
 801a59a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a59e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a5a2:	b2bf      	uxth	r7, r7
 801a5a4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a5a8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a5ac:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a5b0:	f107 0a01 	add.w	sl, r7, #1
 801a5b4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a5b8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a5bc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a5c0:	9802      	ldr	r0, [sp, #8]
 801a5c2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a5c6:	f824 c000 	strh.w	ip, [r4, r0]
 801a5ca:	e7af      	b.n	801a52c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a5cc:	f04f 0800 	mov.w	r8, #0
 801a5d0:	eba3 0008 	sub.w	r0, r3, r8
 801a5d4:	2800      	cmp	r0, #0
 801a5d6:	f77f af41 	ble.w	801a45c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a5da:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a5de:	9f00      	ldr	r7, [sp, #0]
 801a5e0:	1410      	asrs	r0, r2, #16
 801a5e2:	140d      	asrs	r5, r1, #16
 801a5e4:	fb06 7000 	mla	r0, r6, r0, r7
 801a5e8:	5d40      	ldrb	r0, [r0, r5]
 801a5ea:	9d01      	ldr	r5, [sp, #4]
 801a5ec:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a5f0:	0e2e      	lsrs	r6, r5, #24
 801a5f2:	2eff      	cmp	r6, #255	; 0xff
 801a5f4:	d112      	bne.n	801a61c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801a5f6:	482c      	ldr	r0, [pc, #176]	; (801a6a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801a5f8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a5fc:	0968      	lsrs	r0, r5, #5
 801a5fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a602:	4330      	orrs	r0, r6
 801a604:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a608:	4328      	orrs	r0, r5
 801a60a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801a60e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a610:	4401      	add	r1, r0
 801a612:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a614:	f108 0801 	add.w	r8, r8, #1
 801a618:	4402      	add	r2, r0
 801a61a:	e7d9      	b.n	801a5d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a61c:	b2f0      	uxtb	r0, r6
 801a61e:	2e00      	cmp	r6, #0
 801a620:	d0f5      	beq.n	801a60e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a622:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801a626:	fa1f f980 	uxth.w	r9, r0
 801a62a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a62e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a632:	43c0      	mvns	r0, r0
 801a634:	b2c0      	uxtb	r0, r0
 801a636:	fb16 f609 	smulbb	r6, r6, r9
 801a63a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a63e:	fb07 6700 	mla	r7, r7, r0, r6
 801a642:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a646:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a64a:	b2ed      	uxtb	r5, r5
 801a64c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a650:	fa5f fc8c 	uxtb.w	ip, ip
 801a654:	fb15 f509 	smulbb	r5, r5, r9
 801a658:	fb0c 5500 	mla	r5, ip, r0, r5
 801a65c:	b2bf      	uxth	r7, r7
 801a65e:	fb1a fa09 	smulbb	sl, sl, r9
 801a662:	b2ad      	uxth	r5, r5
 801a664:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a668:	fb06 a600 	mla	r6, r6, r0, sl
 801a66c:	1c78      	adds	r0, r7, #1
 801a66e:	f105 0a01 	add.w	sl, r5, #1
 801a672:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a676:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a67a:	b2b6      	uxth	r6, r6
 801a67c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a680:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a684:	ea4a 0707 	orr.w	r7, sl, r7
 801a688:	f106 0a01 	add.w	sl, r6, #1
 801a68c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a690:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a694:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a698:	ea47 070a 	orr.w	r7, r7, sl
 801a69c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a6a0:	e7b5      	b.n	801a60e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a6a2:	b005      	add	sp, #20
 801a6a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a6a8:	fffff800 	.word	0xfffff800

0801a6ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a6ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6b0:	b087      	sub	sp, #28
 801a6b2:	468b      	mov	fp, r1
 801a6b4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a6b6:	9204      	str	r2, [sp, #16]
 801a6b8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a6bc:	9205      	str	r2, [sp, #20]
 801a6be:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a6c2:	6861      	ldr	r1, [r4, #4]
 801a6c4:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801a6c8:	fb01 2000 	mla	r0, r1, r0, r2
 801a6cc:	6822      	ldr	r2, [r4, #0]
 801a6ce:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801a6d2:	f8de 2000 	ldr.w	r2, [lr]
 801a6d6:	9201      	str	r2, [sp, #4]
 801a6d8:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a6dc:	9202      	str	r2, [sp, #8]
 801a6de:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a6e2:	f1bb 0f00 	cmp.w	fp, #0
 801a6e6:	dc03      	bgt.n	801a6f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801a6e8:	9a04      	ldr	r2, [sp, #16]
 801a6ea:	2a00      	cmp	r2, #0
 801a6ec:	f340 8142 	ble.w	801a974 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a6f0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a6f2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a6f6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a6fa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a6fe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a700:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a704:	2b00      	cmp	r3, #0
 801a706:	dd0e      	ble.n	801a726 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a708:	140c      	asrs	r4, r1, #16
 801a70a:	d405      	bmi.n	801a718 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a70c:	42bc      	cmp	r4, r7
 801a70e:	da03      	bge.n	801a718 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a710:	1414      	asrs	r4, r2, #16
 801a712:	d401      	bmi.n	801a718 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a714:	42b4      	cmp	r4, r6
 801a716:	db07      	blt.n	801a728 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a718:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a71a:	4421      	add	r1, r4
 801a71c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a71e:	3b01      	subs	r3, #1
 801a720:	4422      	add	r2, r4
 801a722:	3002      	adds	r0, #2
 801a724:	e7ee      	b.n	801a704 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a726:	d019      	beq.n	801a75c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a728:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a72a:	1e5c      	subs	r4, r3, #1
 801a72c:	fb05 1504 	mla	r5, r5, r4, r1
 801a730:	142d      	asrs	r5, r5, #16
 801a732:	d409      	bmi.n	801a748 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a734:	42bd      	cmp	r5, r7
 801a736:	da07      	bge.n	801a748 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a738:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a73a:	fb05 2404 	mla	r4, r5, r4, r2
 801a73e:	1424      	asrs	r4, r4, #16
 801a740:	d402      	bmi.n	801a748 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a742:	42b4      	cmp	r4, r6
 801a744:	f2c0 80b1 	blt.w	801a8aa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801a748:	f04f 0800 	mov.w	r8, #0
 801a74c:	eb03 0408 	add.w	r4, r3, r8
 801a750:	2c00      	cmp	r4, #0
 801a752:	dc3e      	bgt.n	801a7d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a754:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a758:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a75c:	f1bb 0f00 	cmp.w	fp, #0
 801a760:	f340 8108 	ble.w	801a974 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a764:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a768:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a76c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a770:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a772:	f1bb 0b01 	subs.w	fp, fp, #1
 801a776:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a77a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a77e:	eeb0 6a62 	vmov.f32	s12, s5
 801a782:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a786:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a78a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a78e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a792:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a796:	eeb0 6a43 	vmov.f32	s12, s6
 801a79a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a79e:	ee12 2a90 	vmov	r2, s5
 801a7a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a7a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a7aa:	ee13 2a10 	vmov	r2, s6
 801a7ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a7b2:	9313      	str	r3, [sp, #76]	; 0x4c
 801a7b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a7b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a7ba:	9a04      	ldr	r2, [sp, #16]
 801a7bc:	9314      	str	r3, [sp, #80]	; 0x50
 801a7be:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a7c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a7c4:	eeb0 3a67 	vmov.f32	s6, s15
 801a7c8:	bf08      	it	eq
 801a7ca:	4613      	moveq	r3, r2
 801a7cc:	eef0 2a47 	vmov.f32	s5, s14
 801a7d0:	e787      	b.n	801a6e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801a7d2:	140e      	asrs	r6, r1, #16
 801a7d4:	d462      	bmi.n	801a89c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a7d6:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a7da:	42b5      	cmp	r5, r6
 801a7dc:	dd5e      	ble.n	801a89c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a7de:	1417      	asrs	r7, r2, #16
 801a7e0:	d45c      	bmi.n	801a89c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a7e2:	f8de 400c 	ldr.w	r4, [lr, #12]
 801a7e6:	42bc      	cmp	r4, r7
 801a7e8:	dd58      	ble.n	801a89c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a7ea:	b22d      	sxth	r5, r5
 801a7ec:	fb07 6505 	mla	r5, r7, r5, r6
 801a7f0:	9c02      	ldr	r4, [sp, #8]
 801a7f2:	5d66      	ldrb	r6, [r4, r5]
 801a7f4:	2e00      	cmp	r6, #0
 801a7f6:	d051      	beq.n	801a89c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a7f8:	9c01      	ldr	r4, [sp, #4]
 801a7fa:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801a7fe:	f06f 0401 	mvn.w	r4, #1
 801a802:	fb04 f408 	mul.w	r4, r4, r8
 801a806:	9403      	str	r4, [sp, #12]
 801a808:	5b05      	ldrh	r5, [r0, r4]
 801a80a:	9c05      	ldr	r4, [sp, #20]
 801a80c:	4366      	muls	r6, r4
 801a80e:	1c74      	adds	r4, r6, #1
 801a810:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a814:	1224      	asrs	r4, r4, #8
 801a816:	b2a7      	uxth	r7, r4
 801a818:	122e      	asrs	r6, r5, #8
 801a81a:	43e4      	mvns	r4, r4
 801a81c:	b2e4      	uxtb	r4, r4
 801a81e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801a822:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a826:	fb16 f604 	smulbb	r6, r6, r4
 801a82a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a82e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a832:	00ed      	lsls	r5, r5, #3
 801a834:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a838:	b2ed      	uxtb	r5, r5
 801a83a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801a83e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801a842:	fb15 f504 	smulbb	r5, r5, r4
 801a846:	fa5f f989 	uxtb.w	r9, r9
 801a84a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a84e:	fb09 5507 	mla	r5, r9, r7, r5
 801a852:	fb1a fa04 	smulbb	sl, sl, r4
 801a856:	fa1f fc8c 	uxth.w	ip, ip
 801a85a:	b2ad      	uxth	r5, r5
 801a85c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a860:	fb06 a607 	mla	r6, r6, r7, sl
 801a864:	f10c 0401 	add.w	r4, ip, #1
 801a868:	f105 0a01 	add.w	sl, r5, #1
 801a86c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a870:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a874:	b2b6      	uxth	r6, r6
 801a876:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a87a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a87e:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a882:	f106 0a01 	add.w	sl, r6, #1
 801a886:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a88a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a88e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a892:	9c03      	ldr	r4, [sp, #12]
 801a894:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a898:	f820 c004 	strh.w	ip, [r0, r4]
 801a89c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a89e:	4421      	add	r1, r4
 801a8a0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a8a2:	f108 38ff 	add.w	r8, r8, #4294967295
 801a8a6:	4422      	add	r2, r4
 801a8a8:	e750      	b.n	801a74c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a8aa:	f04f 0900 	mov.w	r9, #0
 801a8ae:	eba3 0409 	sub.w	r4, r3, r9
 801a8b2:	2c00      	cmp	r4, #0
 801a8b4:	f77f af4e 	ble.w	801a754 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a8b8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a8bc:	140d      	asrs	r5, r1, #16
 801a8be:	1414      	asrs	r4, r2, #16
 801a8c0:	fb06 5404 	mla	r4, r6, r4, r5
 801a8c4:	9d02      	ldr	r5, [sp, #8]
 801a8c6:	5d2e      	ldrb	r6, [r5, r4]
 801a8c8:	2e00      	cmp	r6, #0
 801a8ca:	d04c      	beq.n	801a966 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801a8cc:	9d01      	ldr	r5, [sp, #4]
 801a8ce:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801a8d2:	9c05      	ldr	r4, [sp, #20]
 801a8d4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801a8d8:	4366      	muls	r6, r4
 801a8da:	1c74      	adds	r4, r6, #1
 801a8dc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a8e0:	1224      	asrs	r4, r4, #8
 801a8e2:	b2a7      	uxth	r7, r4
 801a8e4:	122e      	asrs	r6, r5, #8
 801a8e6:	43e4      	mvns	r4, r4
 801a8e8:	b2e4      	uxtb	r4, r4
 801a8ea:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a8ee:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a8f2:	fb16 f604 	smulbb	r6, r6, r4
 801a8f6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a8fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a8fe:	00ed      	lsls	r5, r5, #3
 801a900:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a904:	b2ed      	uxtb	r5, r5
 801a906:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a90a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a90e:	fb15 f504 	smulbb	r5, r5, r4
 801a912:	fa5f f888 	uxtb.w	r8, r8
 801a916:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801a91a:	fb08 5507 	mla	r5, r8, r7, r5
 801a91e:	fb1a fa04 	smulbb	sl, sl, r4
 801a922:	fa1f fc8c 	uxth.w	ip, ip
 801a926:	b2ad      	uxth	r5, r5
 801a928:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a92c:	fb06 a607 	mla	r6, r6, r7, sl
 801a930:	f10c 0401 	add.w	r4, ip, #1
 801a934:	f105 0a01 	add.w	sl, r5, #1
 801a938:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a93c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a940:	b2b6      	uxth	r6, r6
 801a942:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a946:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a94a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a94e:	f106 0a01 	add.w	sl, r6, #1
 801a952:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a956:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a95a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a95e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a962:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801a966:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a968:	4421      	add	r1, r4
 801a96a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a96c:	f109 0901 	add.w	r9, r9, #1
 801a970:	4422      	add	r2, r4
 801a972:	e79c      	b.n	801a8ae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801a974:	b007      	add	sp, #28
 801a976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a97a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a97a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a97e:	b085      	sub	sp, #20
 801a980:	468b      	mov	fp, r1
 801a982:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a984:	9203      	str	r2, [sp, #12]
 801a986:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801a98a:	6861      	ldr	r1, [r4, #4]
 801a98c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a990:	fb01 2000 	mla	r0, r1, r0, r2
 801a994:	6822      	ldr	r2, [r4, #0]
 801a996:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801a99a:	f8d8 2000 	ldr.w	r2, [r8]
 801a99e:	9200      	str	r2, [sp, #0]
 801a9a0:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801a9a4:	9201      	str	r2, [sp, #4]
 801a9a6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a9aa:	f1bb 0f00 	cmp.w	fp, #0
 801a9ae:	dc03      	bgt.n	801a9b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a9b0:	9a03      	ldr	r2, [sp, #12]
 801a9b2:	2a00      	cmp	r2, #0
 801a9b4:	f340 8146 	ble.w	801ac44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801a9b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a9ba:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a9be:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a9c2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a9c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a9c8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a9cc:	2b00      	cmp	r3, #0
 801a9ce:	dd0e      	ble.n	801a9ee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a9d0:	140c      	asrs	r4, r1, #16
 801a9d2:	d405      	bmi.n	801a9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a9d4:	42bc      	cmp	r4, r7
 801a9d6:	da03      	bge.n	801a9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a9d8:	1414      	asrs	r4, r2, #16
 801a9da:	d401      	bmi.n	801a9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a9dc:	42b4      	cmp	r4, r6
 801a9de:	db07      	blt.n	801a9f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a9e0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801a9e2:	4421      	add	r1, r4
 801a9e4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a9e6:	3b01      	subs	r3, #1
 801a9e8:	4422      	add	r2, r4
 801a9ea:	3002      	adds	r0, #2
 801a9ec:	e7ee      	b.n	801a9cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a9ee:	d017      	beq.n	801aa20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a9f0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a9f2:	1e5c      	subs	r4, r3, #1
 801a9f4:	fb05 1504 	mla	r5, r5, r4, r1
 801a9f8:	142d      	asrs	r5, r5, #16
 801a9fa:	d409      	bmi.n	801aa10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a9fc:	42bd      	cmp	r5, r7
 801a9fe:	da07      	bge.n	801aa10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801aa00:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801aa02:	fb05 2404 	mla	r4, r5, r4, r2
 801aa06:	1424      	asrs	r4, r4, #16
 801aa08:	d402      	bmi.n	801aa10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801aa0a:	42b4      	cmp	r4, r6
 801aa0c:	f2c0 80b3 	blt.w	801ab76 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801aa10:	2600      	movs	r6, #0
 801aa12:	199c      	adds	r4, r3, r6
 801aa14:	2c00      	cmp	r4, #0
 801aa16:	dc3e      	bgt.n	801aa96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801aa18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aa1c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801aa20:	f1bb 0f00 	cmp.w	fp, #0
 801aa24:	f340 810e 	ble.w	801ac44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801aa28:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aa2c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aa30:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aa34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aa36:	f1bb 0b01 	subs.w	fp, fp, #1
 801aa3a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aa3e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aa42:	eeb0 6a62 	vmov.f32	s12, s5
 801aa46:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aa4a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa4e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aa52:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801aa56:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aa5a:	eeb0 6a43 	vmov.f32	s12, s6
 801aa5e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aa62:	ee12 2a90 	vmov	r2, s5
 801aa66:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aa6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa6e:	ee13 2a10 	vmov	r2, s6
 801aa72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa76:	9311      	str	r3, [sp, #68]	; 0x44
 801aa78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aa7a:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa7e:	9a03      	ldr	r2, [sp, #12]
 801aa80:	9312      	str	r3, [sp, #72]	; 0x48
 801aa82:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801aa86:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aa88:	eeb0 3a67 	vmov.f32	s6, s15
 801aa8c:	bf08      	it	eq
 801aa8e:	4613      	moveq	r3, r2
 801aa90:	eef0 2a47 	vmov.f32	s5, s14
 801aa94:	e789      	b.n	801a9aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801aa96:	140f      	asrs	r7, r1, #16
 801aa98:	d418      	bmi.n	801aacc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aa9a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801aa9e:	42bd      	cmp	r5, r7
 801aaa0:	dd14      	ble.n	801aacc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aaa2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801aaa6:	d411      	bmi.n	801aacc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aaa8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801aaac:	4564      	cmp	r4, ip
 801aaae:	dd0d      	ble.n	801aacc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aab0:	b22d      	sxth	r5, r5
 801aab2:	fb0c 7505 	mla	r5, ip, r5, r7
 801aab6:	9c01      	ldr	r4, [sp, #4]
 801aab8:	5d64      	ldrb	r4, [r4, r5]
 801aaba:	2cff      	cmp	r4, #255	; 0xff
 801aabc:	d10c      	bne.n	801aad8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801aabe:	9c00      	ldr	r4, [sp, #0]
 801aac0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801aac4:	f06f 0401 	mvn.w	r4, #1
 801aac8:	4374      	muls	r4, r6
 801aaca:	5305      	strh	r5, [r0, r4]
 801aacc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801aace:	4421      	add	r1, r4
 801aad0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801aad2:	3e01      	subs	r6, #1
 801aad4:	4422      	add	r2, r4
 801aad6:	e79c      	b.n	801aa12 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801aad8:	2c00      	cmp	r4, #0
 801aada:	d0f7      	beq.n	801aacc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801aadc:	9f00      	ldr	r7, [sp, #0]
 801aade:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801aae2:	f06f 0501 	mvn.w	r5, #1
 801aae6:	4375      	muls	r5, r6
 801aae8:	9502      	str	r5, [sp, #8]
 801aaea:	5b45      	ldrh	r5, [r0, r5]
 801aaec:	fa1f fc84 	uxth.w	ip, r4
 801aaf0:	122f      	asrs	r7, r5, #8
 801aaf2:	43e4      	mvns	r4, r4
 801aaf4:	b2e4      	uxtb	r4, r4
 801aaf6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801aafa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aafe:	fb17 f704 	smulbb	r7, r7, r4
 801ab02:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ab06:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ab0a:	00ed      	lsls	r5, r5, #3
 801ab0c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801ab10:	b2ed      	uxtb	r5, r5
 801ab12:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801ab16:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801ab1a:	fb15 f504 	smulbb	r5, r5, r4
 801ab1e:	fa5f f989 	uxtb.w	r9, r9
 801ab22:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ab26:	fb09 550c 	mla	r5, r9, ip, r5
 801ab2a:	fb1a fa04 	smulbb	sl, sl, r4
 801ab2e:	fa1f fe8e 	uxth.w	lr, lr
 801ab32:	b2ad      	uxth	r5, r5
 801ab34:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ab38:	fb07 a70c 	mla	r7, r7, ip, sl
 801ab3c:	f10e 0401 	add.w	r4, lr, #1
 801ab40:	f105 0a01 	add.w	sl, r5, #1
 801ab44:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801ab48:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ab4c:	b2bf      	uxth	r7, r7
 801ab4e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ab52:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ab56:	ea4a 0e0e 	orr.w	lr, sl, lr
 801ab5a:	f107 0a01 	add.w	sl, r7, #1
 801ab5e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801ab62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ab66:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ab6a:	9c02      	ldr	r4, [sp, #8]
 801ab6c:	ea4e 0e0a 	orr.w	lr, lr, sl
 801ab70:	f820 e004 	strh.w	lr, [r0, r4]
 801ab74:	e7aa      	b.n	801aacc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ab76:	f04f 0900 	mov.w	r9, #0
 801ab7a:	eba3 0409 	sub.w	r4, r3, r9
 801ab7e:	2c00      	cmp	r4, #0
 801ab80:	f77f af4a 	ble.w	801aa18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ab84:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801ab88:	1414      	asrs	r4, r2, #16
 801ab8a:	140d      	asrs	r5, r1, #16
 801ab8c:	fb06 5504 	mla	r5, r6, r4, r5
 801ab90:	9c01      	ldr	r4, [sp, #4]
 801ab92:	5d64      	ldrb	r4, [r4, r5]
 801ab94:	2cff      	cmp	r4, #255	; 0xff
 801ab96:	d10b      	bne.n	801abb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801ab98:	9c00      	ldr	r4, [sp, #0]
 801ab9a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801ab9e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801aba2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801aba4:	4421      	add	r1, r4
 801aba6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801aba8:	f109 0901 	add.w	r9, r9, #1
 801abac:	4422      	add	r2, r4
 801abae:	e7e4      	b.n	801ab7a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801abb0:	2c00      	cmp	r4, #0
 801abb2:	d0f6      	beq.n	801aba2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801abb4:	9e00      	ldr	r6, [sp, #0]
 801abb6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801abba:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801abbe:	b2a7      	uxth	r7, r4
 801abc0:	122e      	asrs	r6, r5, #8
 801abc2:	43e4      	mvns	r4, r4
 801abc4:	b2e4      	uxtb	r4, r4
 801abc6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801abca:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801abce:	fb16 f604 	smulbb	r6, r6, r4
 801abd2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801abd6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801abda:	00ed      	lsls	r5, r5, #3
 801abdc:	fb0c 6c07 	mla	ip, ip, r7, r6
 801abe0:	b2ed      	uxtb	r5, r5
 801abe2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801abe6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801abea:	fb15 f504 	smulbb	r5, r5, r4
 801abee:	fa5f fe8e 	uxtb.w	lr, lr
 801abf2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801abf6:	fb0e 5507 	mla	r5, lr, r7, r5
 801abfa:	fb1a fa04 	smulbb	sl, sl, r4
 801abfe:	fa1f fc8c 	uxth.w	ip, ip
 801ac02:	b2ad      	uxth	r5, r5
 801ac04:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ac08:	fb06 a607 	mla	r6, r6, r7, sl
 801ac0c:	f10c 0401 	add.w	r4, ip, #1
 801ac10:	f105 0a01 	add.w	sl, r5, #1
 801ac14:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ac18:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ac1c:	b2b6      	uxth	r6, r6
 801ac1e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ac22:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ac26:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ac2a:	f106 0a01 	add.w	sl, r6, #1
 801ac2e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ac32:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ac36:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ac3a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ac3e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801ac42:	e7ae      	b.n	801aba2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ac44:	b005      	add	sp, #20
 801ac46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ac4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac4e:	b085      	sub	sp, #20
 801ac50:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ac52:	9203      	str	r2, [sp, #12]
 801ac54:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801ac58:	9201      	str	r2, [sp, #4]
 801ac5a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ac5e:	9100      	str	r1, [sp, #0]
 801ac60:	6841      	ldr	r1, [r0, #4]
 801ac62:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801ac66:	fb01 2404 	mla	r4, r1, r4, r2
 801ac6a:	6802      	ldr	r2, [r0, #0]
 801ac6c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ac70:	f8de 2000 	ldr.w	r2, [lr]
 801ac74:	9202      	str	r2, [sp, #8]
 801ac76:	9a01      	ldr	r2, [sp, #4]
 801ac78:	43d6      	mvns	r6, r2
 801ac7a:	b2f6      	uxtb	r6, r6
 801ac7c:	9a00      	ldr	r2, [sp, #0]
 801ac7e:	2a00      	cmp	r2, #0
 801ac80:	dc03      	bgt.n	801ac8a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801ac82:	9a03      	ldr	r2, [sp, #12]
 801ac84:	2a00      	cmp	r2, #0
 801ac86:	f340 8124 	ble.w	801aed2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801ac8a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ac8c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801ac90:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801ac94:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ac98:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ac9a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ac9e:	2b00      	cmp	r3, #0
 801aca0:	dd0e      	ble.n	801acc0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801aca2:	1408      	asrs	r0, r1, #16
 801aca4:	d405      	bmi.n	801acb2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801aca6:	4560      	cmp	r0, ip
 801aca8:	da03      	bge.n	801acb2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801acaa:	1410      	asrs	r0, r2, #16
 801acac:	d401      	bmi.n	801acb2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801acae:	42b8      	cmp	r0, r7
 801acb0:	db07      	blt.n	801acc2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801acb2:	9811      	ldr	r0, [sp, #68]	; 0x44
 801acb4:	4401      	add	r1, r0
 801acb6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801acb8:	3b01      	subs	r3, #1
 801acba:	4402      	add	r2, r0
 801acbc:	3402      	adds	r4, #2
 801acbe:	e7ee      	b.n	801ac9e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801acc0:	d06e      	beq.n	801ada0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801acc2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801acc4:	1e58      	subs	r0, r3, #1
 801acc6:	fb05 1500 	mla	r5, r5, r0, r1
 801acca:	142d      	asrs	r5, r5, #16
 801accc:	d45c      	bmi.n	801ad88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801acce:	4565      	cmp	r5, ip
 801acd0:	da5a      	bge.n	801ad88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801acd2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801acd4:	fb05 2000 	mla	r0, r5, r0, r2
 801acd8:	1400      	asrs	r0, r0, #16
 801acda:	d455      	bmi.n	801ad88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801acdc:	42b8      	cmp	r0, r7
 801acde:	da53      	bge.n	801ad88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ace0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801ace4:	4699      	mov	r9, r3
 801ace6:	46a2      	mov	sl, r4
 801ace8:	f1b9 0f00 	cmp.w	r9, #0
 801acec:	dd54      	ble.n	801ad98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801acee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801acf2:	140d      	asrs	r5, r1, #16
 801acf4:	1410      	asrs	r0, r2, #16
 801acf6:	fb07 5000 	mla	r0, r7, r0, r5
 801acfa:	9d02      	ldr	r5, [sp, #8]
 801acfc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ad00:	f8ba 5000 	ldrh.w	r5, [sl]
 801ad04:	122f      	asrs	r7, r5, #8
 801ad06:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ad0a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ad0e:	fb17 f706 	smulbb	r7, r7, r6
 801ad12:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801ad16:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ad1a:	00ed      	lsls	r5, r5, #3
 801ad1c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801ad20:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801ad24:	10c7      	asrs	r7, r0, #3
 801ad26:	b2ed      	uxtb	r5, r5
 801ad28:	00c0      	lsls	r0, r0, #3
 801ad2a:	fb18 f806 	smulbb	r8, r8, r6
 801ad2e:	fb15 f506 	smulbb	r5, r5, r6
 801ad32:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ad36:	b2c0      	uxtb	r0, r0
 801ad38:	fa1f fc8c 	uxth.w	ip, ip
 801ad3c:	fb07 870b 	mla	r7, r7, fp, r8
 801ad40:	fb00 500b 	mla	r0, r0, fp, r5
 801ad44:	b280      	uxth	r0, r0
 801ad46:	b2bf      	uxth	r7, r7
 801ad48:	f10c 0501 	add.w	r5, ip, #1
 801ad4c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ad50:	f107 0801 	add.w	r8, r7, #1
 801ad54:	1c45      	adds	r5, r0, #1
 801ad56:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ad5a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801ad5e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ad60:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ad64:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ad68:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ad6c:	ea45 0c0c 	orr.w	ip, r5, ip
 801ad70:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ad74:	4401      	add	r1, r0
 801ad76:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ad78:	ea4c 0c08 	orr.w	ip, ip, r8
 801ad7c:	f82a cb02 	strh.w	ip, [sl], #2
 801ad80:	4402      	add	r2, r0
 801ad82:	f109 39ff 	add.w	r9, r9, #4294967295
 801ad86:	e7af      	b.n	801ace8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ad88:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801ad8c:	f04f 0800 	mov.w	r8, #0
 801ad90:	eb03 0008 	add.w	r0, r3, r8
 801ad94:	2800      	cmp	r0, #0
 801ad96:	dc41      	bgt.n	801ae1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801ad98:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ad9c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ada0:	9b00      	ldr	r3, [sp, #0]
 801ada2:	2b00      	cmp	r3, #0
 801ada4:	f340 8095 	ble.w	801aed2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801ada8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801adac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801adb0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801adb4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801adb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801adba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801adbe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801adc2:	eef0 6a62 	vmov.f32	s13, s5
 801adc6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801adca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801adce:	ee77 2a62 	vsub.f32	s5, s14, s5
 801add2:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801add6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801adda:	eef0 6a43 	vmov.f32	s13, s6
 801adde:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ade2:	ee12 2a90 	vmov	r2, s5
 801ade6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801adea:	fb92 f3f3 	sdiv	r3, r2, r3
 801adee:	ee13 2a10 	vmov	r2, s6
 801adf2:	9311      	str	r3, [sp, #68]	; 0x44
 801adf4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801adf6:	fb92 f3f3 	sdiv	r3, r2, r3
 801adfa:	9312      	str	r3, [sp, #72]	; 0x48
 801adfc:	9b00      	ldr	r3, [sp, #0]
 801adfe:	9a03      	ldr	r2, [sp, #12]
 801ae00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae04:	3b01      	subs	r3, #1
 801ae06:	9300      	str	r3, [sp, #0]
 801ae08:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801ae0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ae0e:	eeb0 3a67 	vmov.f32	s6, s15
 801ae12:	bf08      	it	eq
 801ae14:	4613      	moveq	r3, r2
 801ae16:	eef0 2a47 	vmov.f32	s5, s14
 801ae1a:	e72f      	b.n	801ac7c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801ae1c:	140f      	asrs	r7, r1, #16
 801ae1e:	d451      	bmi.n	801aec4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ae20:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ae24:	42bd      	cmp	r5, r7
 801ae26:	dd4d      	ble.n	801aec4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ae28:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ae2c:	d44a      	bmi.n	801aec4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ae2e:	f8de 000c 	ldr.w	r0, [lr, #12]
 801ae32:	4560      	cmp	r0, ip
 801ae34:	dd46      	ble.n	801aec4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801ae36:	b22d      	sxth	r5, r5
 801ae38:	fb0c 7505 	mla	r5, ip, r5, r7
 801ae3c:	9802      	ldr	r0, [sp, #8]
 801ae3e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801ae42:	f06f 0501 	mvn.w	r5, #1
 801ae46:	fb05 fb08 	mul.w	fp, r5, r8
 801ae4a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ae4e:	f834 500b 	ldrh.w	r5, [r4, fp]
 801ae52:	122f      	asrs	r7, r5, #8
 801ae54:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ae58:	fb17 f706 	smulbb	r7, r7, r6
 801ae5c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ae60:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ae64:	00ed      	lsls	r5, r5, #3
 801ae66:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801ae6a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ae6e:	10c7      	asrs	r7, r0, #3
 801ae70:	b2ed      	uxtb	r5, r5
 801ae72:	00c0      	lsls	r0, r0, #3
 801ae74:	fb19 f906 	smulbb	r9, r9, r6
 801ae78:	fb15 f506 	smulbb	r5, r5, r6
 801ae7c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ae80:	b2c0      	uxtb	r0, r0
 801ae82:	fa1f fc8c 	uxth.w	ip, ip
 801ae86:	fb07 970a 	mla	r7, r7, sl, r9
 801ae8a:	fb00 500a 	mla	r0, r0, sl, r5
 801ae8e:	b2bf      	uxth	r7, r7
 801ae90:	b280      	uxth	r0, r0
 801ae92:	f10c 0501 	add.w	r5, ip, #1
 801ae96:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ae9a:	f107 0901 	add.w	r9, r7, #1
 801ae9e:	1c45      	adds	r5, r0, #1
 801aea0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801aea4:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801aea8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801aeac:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801aeb0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801aeb4:	ea45 0c0c 	orr.w	ip, r5, ip
 801aeb8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801aebc:	ea4c 0c09 	orr.w	ip, ip, r9
 801aec0:	f824 c00b 	strh.w	ip, [r4, fp]
 801aec4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801aec6:	4401      	add	r1, r0
 801aec8:	9812      	ldr	r0, [sp, #72]	; 0x48
 801aeca:	f108 38ff 	add.w	r8, r8, #4294967295
 801aece:	4402      	add	r2, r0
 801aed0:	e75e      	b.n	801ad90 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801aed2:	b005      	add	sp, #20
 801aed4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aed8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aedc:	b085      	sub	sp, #20
 801aede:	4693      	mov	fp, r2
 801aee0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801aee2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801aee4:	6870      	ldr	r0, [r6, #4]
 801aee6:	9101      	str	r1, [sp, #4]
 801aee8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801aeec:	fb00 2404 	mla	r4, r0, r4, r2
 801aef0:	6832      	ldr	r2, [r6, #0]
 801aef2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801aef6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801aefa:	682a      	ldr	r2, [r5, #0]
 801aefc:	9202      	str	r2, [sp, #8]
 801aefe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801af02:	9a01      	ldr	r2, [sp, #4]
 801af04:	2a00      	cmp	r2, #0
 801af06:	dc03      	bgt.n	801af10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801af08:	f1bb 0f00 	cmp.w	fp, #0
 801af0c:	f340 809a 	ble.w	801b044 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801af10:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801af12:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801af16:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801af1a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801af1e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801af20:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801af24:	2b00      	cmp	r3, #0
 801af26:	dd0c      	ble.n	801af42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801af28:	1406      	asrs	r6, r0, #16
 801af2a:	d405      	bmi.n	801af38 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801af2c:	454e      	cmp	r6, r9
 801af2e:	da03      	bge.n	801af38 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801af30:	1416      	asrs	r6, r2, #16
 801af32:	d401      	bmi.n	801af38 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801af34:	4546      	cmp	r6, r8
 801af36:	db05      	blt.n	801af44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801af38:	4470      	add	r0, lr
 801af3a:	4462      	add	r2, ip
 801af3c:	3b01      	subs	r3, #1
 801af3e:	3402      	adds	r4, #2
 801af40:	e7f0      	b.n	801af24 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801af42:	d00f      	beq.n	801af64 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801af44:	1e5e      	subs	r6, r3, #1
 801af46:	fb0e 0706 	mla	r7, lr, r6, r0
 801af4a:	143f      	asrs	r7, r7, #16
 801af4c:	d541      	bpl.n	801afd2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801af4e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801af52:	4698      	mov	r8, r3
 801af54:	9603      	str	r6, [sp, #12]
 801af56:	f1b8 0f00 	cmp.w	r8, #0
 801af5a:	dc56      	bgt.n	801b00a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801af5c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801af60:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801af64:	9b01      	ldr	r3, [sp, #4]
 801af66:	2b00      	cmp	r3, #0
 801af68:	dd6c      	ble.n	801b044 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801af6a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801af6e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801af72:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801af76:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801af78:	ee31 1a05 	vadd.f32	s2, s2, s10
 801af7c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801af80:	eeb0 6a62 	vmov.f32	s12, s5
 801af84:	ee61 7a27 	vmul.f32	s15, s2, s15
 801af88:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801af8c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801af90:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801af94:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801af98:	eeb0 6a43 	vmov.f32	s12, s6
 801af9c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801afa0:	ee12 2a90 	vmov	r2, s5
 801afa4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801afa8:	fb92 fef3 	sdiv	lr, r2, r3
 801afac:	ee13 2a10 	vmov	r2, s6
 801afb0:	fb92 fcf3 	sdiv	ip, r2, r3
 801afb4:	9b01      	ldr	r3, [sp, #4]
 801afb6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801afba:	3b01      	subs	r3, #1
 801afbc:	9301      	str	r3, [sp, #4]
 801afbe:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801afc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801afc4:	eeb0 3a67 	vmov.f32	s6, s15
 801afc8:	bf08      	it	eq
 801afca:	465b      	moveq	r3, fp
 801afcc:	eef0 2a47 	vmov.f32	s5, s14
 801afd0:	e797      	b.n	801af02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801afd2:	454f      	cmp	r7, r9
 801afd4:	dabb      	bge.n	801af4e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801afd6:	fb0c 2606 	mla	r6, ip, r6, r2
 801afda:	1436      	asrs	r6, r6, #16
 801afdc:	d4b7      	bmi.n	801af4e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801afde:	4546      	cmp	r6, r8
 801afe0:	dab5      	bge.n	801af4e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801afe2:	461e      	mov	r6, r3
 801afe4:	46a0      	mov	r8, r4
 801afe6:	2e00      	cmp	r6, #0
 801afe8:	ddb8      	ble.n	801af5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801afea:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801afee:	9902      	ldr	r1, [sp, #8]
 801aff0:	1417      	asrs	r7, r2, #16
 801aff2:	ea4f 4920 	mov.w	r9, r0, asr #16
 801aff6:	fb0a 9707 	mla	r7, sl, r7, r9
 801affa:	4470      	add	r0, lr
 801affc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801b000:	f828 7b02 	strh.w	r7, [r8], #2
 801b004:	4462      	add	r2, ip
 801b006:	3e01      	subs	r6, #1
 801b008:	e7ed      	b.n	801afe6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801b00a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b00e:	d414      	bmi.n	801b03a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b010:	68ae      	ldr	r6, [r5, #8]
 801b012:	454e      	cmp	r6, r9
 801b014:	dd11      	ble.n	801b03a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b016:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801b01a:	d40e      	bmi.n	801b03a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b01c:	68ef      	ldr	r7, [r5, #12]
 801b01e:	4557      	cmp	r7, sl
 801b020:	dd0b      	ble.n	801b03a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801b022:	b236      	sxth	r6, r6
 801b024:	fb0a 9606 	mla	r6, sl, r6, r9
 801b028:	9f02      	ldr	r7, [sp, #8]
 801b02a:	f06f 0101 	mvn.w	r1, #1
 801b02e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801b032:	fb01 f608 	mul.w	r6, r1, r8
 801b036:	9903      	ldr	r1, [sp, #12]
 801b038:	538f      	strh	r7, [r1, r6]
 801b03a:	4470      	add	r0, lr
 801b03c:	4462      	add	r2, ip
 801b03e:	f108 38ff 	add.w	r8, r8, #4294967295
 801b042:	e788      	b.n	801af56 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b044:	b005      	add	sp, #20
 801b046:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b04a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b04a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b04e:	b087      	sub	sp, #28
 801b050:	468b      	mov	fp, r1
 801b052:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b054:	9203      	str	r2, [sp, #12]
 801b056:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b05a:	9204      	str	r2, [sp, #16]
 801b05c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801b060:	6841      	ldr	r1, [r0, #4]
 801b062:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b066:	fb01 2505 	mla	r5, r1, r5, r2
 801b06a:	6802      	ldr	r2, [r0, #0]
 801b06c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801b070:	f8d9 2000 	ldr.w	r2, [r9]
 801b074:	9201      	str	r2, [sp, #4]
 801b076:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b07a:	f1bb 0f00 	cmp.w	fp, #0
 801b07e:	dc03      	bgt.n	801b088 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b080:	9a03      	ldr	r2, [sp, #12]
 801b082:	2a00      	cmp	r2, #0
 801b084:	f340 8159 	ble.w	801b33a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b088:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b08a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b08e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b092:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b096:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b098:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b09c:	2b00      	cmp	r3, #0
 801b09e:	dd0e      	ble.n	801b0be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b0a0:	1402      	asrs	r2, r0, #16
 801b0a2:	d405      	bmi.n	801b0b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b0a4:	42ba      	cmp	r2, r7
 801b0a6:	da03      	bge.n	801b0b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b0a8:	140a      	asrs	r2, r1, #16
 801b0aa:	d401      	bmi.n	801b0b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b0ac:	42b2      	cmp	r2, r6
 801b0ae:	db07      	blt.n	801b0c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b0b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b0b2:	4410      	add	r0, r2
 801b0b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b0b6:	3b01      	subs	r3, #1
 801b0b8:	4411      	add	r1, r2
 801b0ba:	3502      	adds	r5, #2
 801b0bc:	e7ee      	b.n	801b09c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b0be:	d017      	beq.n	801b0f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b0c0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b0c2:	1e5a      	subs	r2, r3, #1
 801b0c4:	fb04 0402 	mla	r4, r4, r2, r0
 801b0c8:	1424      	asrs	r4, r4, #16
 801b0ca:	d409      	bmi.n	801b0e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b0cc:	42bc      	cmp	r4, r7
 801b0ce:	da07      	bge.n	801b0e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b0d0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b0d2:	fb04 1202 	mla	r2, r4, r2, r1
 801b0d6:	1412      	asrs	r2, r2, #16
 801b0d8:	d402      	bmi.n	801b0e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b0da:	42b2      	cmp	r2, r6
 801b0dc:	f2c0 80bf 	blt.w	801b25e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b0e0:	2700      	movs	r7, #0
 801b0e2:	19da      	adds	r2, r3, r7
 801b0e4:	2a00      	cmp	r2, #0
 801b0e6:	dc3e      	bgt.n	801b166 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b0e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b0ec:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801b0f0:	f1bb 0f00 	cmp.w	fp, #0
 801b0f4:	f340 8121 	ble.w	801b33a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801b0f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b0fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b100:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b104:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b106:	f1bb 0b01 	subs.w	fp, fp, #1
 801b10a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b10e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b112:	eeb0 6a62 	vmov.f32	s12, s5
 801b116:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b11a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b11e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b122:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b126:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b12a:	eeb0 6a43 	vmov.f32	s12, s6
 801b12e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b132:	ee12 2a90 	vmov	r2, s5
 801b136:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b13a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b13e:	ee13 2a10 	vmov	r2, s6
 801b142:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b146:	9313      	str	r3, [sp, #76]	; 0x4c
 801b148:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b14a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b14e:	9a03      	ldr	r2, [sp, #12]
 801b150:	9314      	str	r3, [sp, #80]	; 0x50
 801b152:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b156:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b158:	eeb0 3a67 	vmov.f32	s6, s15
 801b15c:	bf08      	it	eq
 801b15e:	4613      	moveq	r3, r2
 801b160:	eef0 2a47 	vmov.f32	s5, s14
 801b164:	e789      	b.n	801b07a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b166:	1406      	asrs	r6, r0, #16
 801b168:	d42d      	bmi.n	801b1c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b16a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801b16e:	42b4      	cmp	r4, r6
 801b170:	dd29      	ble.n	801b1c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b172:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801b176:	d426      	bmi.n	801b1c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b178:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b17c:	4562      	cmp	r2, ip
 801b17e:	dd22      	ble.n	801b1c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b180:	b224      	sxth	r4, r4
 801b182:	9a01      	ldr	r2, [sp, #4]
 801b184:	fb0c 6404 	mla	r4, ip, r4, r6
 801b188:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801b18c:	0e22      	lsrs	r2, r4, #24
 801b18e:	d01a      	beq.n	801b1c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b190:	9e04      	ldr	r6, [sp, #16]
 801b192:	4372      	muls	r2, r6
 801b194:	1c56      	adds	r6, r2, #1
 801b196:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b19a:	1212      	asrs	r2, r2, #8
 801b19c:	0a26      	lsrs	r6, r4, #8
 801b19e:	2aff      	cmp	r2, #255	; 0xff
 801b1a0:	9605      	str	r6, [sp, #20]
 801b1a2:	d116      	bne.n	801b1d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801b1a4:	f06f 0201 	mvn.w	r2, #1
 801b1a8:	fb02 fc07 	mul.w	ip, r2, r7
 801b1ac:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b1b0:	0962      	lsrs	r2, r4, #5
 801b1b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b1b6:	f026 0607 	bic.w	r6, r6, #7
 801b1ba:	4316      	orrs	r6, r2
 801b1bc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b1c0:	4326      	orrs	r6, r4
 801b1c2:	f825 600c 	strh.w	r6, [r5, ip]
 801b1c6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b1c8:	4410      	add	r0, r2
 801b1ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b1cc:	3f01      	subs	r7, #1
 801b1ce:	4411      	add	r1, r2
 801b1d0:	e787      	b.n	801b0e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b1d2:	f06f 0601 	mvn.w	r6, #1
 801b1d6:	437e      	muls	r6, r7
 801b1d8:	fa1f fa82 	uxth.w	sl, r2
 801b1dc:	f835 8006 	ldrh.w	r8, [r5, r6]
 801b1e0:	9602      	str	r6, [sp, #8]
 801b1e2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b1e6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801b1ea:	43d2      	mvns	r2, r2
 801b1ec:	b2d2      	uxtb	r2, r2
 801b1ee:	fb1c fc0a 	smulbb	ip, ip, sl
 801b1f2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b1f6:	fb0e ce02 	mla	lr, lr, r2, ip
 801b1fa:	b2e4      	uxtb	r4, r4
 801b1fc:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b200:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b204:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b208:	fa5f f888 	uxtb.w	r8, r8
 801b20c:	fb14 f40a 	smulbb	r4, r4, sl
 801b210:	fb08 4402 	mla	r4, r8, r2, r4
 801b214:	fa1f fe8e 	uxth.w	lr, lr
 801b218:	fb16 f60a 	smulbb	r6, r6, sl
 801b21c:	b2a4      	uxth	r4, r4
 801b21e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b222:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b226:	f10e 0201 	add.w	r2, lr, #1
 801b22a:	1c66      	adds	r6, r4, #1
 801b22c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b230:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b234:	fa1f fc8c 	uxth.w	ip, ip
 801b238:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b23c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b240:	ea46 0e0e 	orr.w	lr, r6, lr
 801b244:	f10c 0601 	add.w	r6, ip, #1
 801b248:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b24c:	0976      	lsrs	r6, r6, #5
 801b24e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b252:	9a02      	ldr	r2, [sp, #8]
 801b254:	ea4e 0e06 	orr.w	lr, lr, r6
 801b258:	f825 e002 	strh.w	lr, [r5, r2]
 801b25c:	e7b3      	b.n	801b1c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b25e:	f04f 0800 	mov.w	r8, #0
 801b262:	eba3 0208 	sub.w	r2, r3, r8
 801b266:	2a00      	cmp	r2, #0
 801b268:	f77f af3e 	ble.w	801b0e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b26c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801b270:	1404      	asrs	r4, r0, #16
 801b272:	140a      	asrs	r2, r1, #16
 801b274:	fb06 4202 	mla	r2, r6, r2, r4
 801b278:	9c01      	ldr	r4, [sp, #4]
 801b27a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801b27e:	0e22      	lsrs	r2, r4, #24
 801b280:	d016      	beq.n	801b2b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b282:	9e04      	ldr	r6, [sp, #16]
 801b284:	4372      	muls	r2, r6
 801b286:	1c56      	adds	r6, r2, #1
 801b288:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801b28c:	1212      	asrs	r2, r2, #8
 801b28e:	2aff      	cmp	r2, #255	; 0xff
 801b290:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801b294:	d113      	bne.n	801b2be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801b296:	0962      	lsrs	r2, r4, #5
 801b298:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b29c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b2a0:	f026 0607 	bic.w	r6, r6, #7
 801b2a4:	4316      	orrs	r6, r2
 801b2a6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801b2aa:	4326      	orrs	r6, r4
 801b2ac:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801b2b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b2b2:	4410      	add	r0, r2
 801b2b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b2b6:	f108 0801 	add.w	r8, r8, #1
 801b2ba:	4411      	add	r1, r2
 801b2bc:	e7d1      	b.n	801b262 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801b2be:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801b2c2:	fa1f fa82 	uxth.w	sl, r2
 801b2c6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b2ca:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801b2ce:	43d2      	mvns	r2, r2
 801b2d0:	b2d2      	uxtb	r2, r2
 801b2d2:	fb17 f70a 	smulbb	r7, r7, sl
 801b2d6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b2da:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b2de:	b2e4      	uxtb	r4, r4
 801b2e0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b2e4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b2e8:	fa5f fe8e 	uxtb.w	lr, lr
 801b2ec:	fb14 f40a 	smulbb	r4, r4, sl
 801b2f0:	fb0e 4402 	mla	r4, lr, r2, r4
 801b2f4:	b2f6      	uxtb	r6, r6
 801b2f6:	fa1f fc8c 	uxth.w	ip, ip
 801b2fa:	fb16 f60a 	smulbb	r6, r6, sl
 801b2fe:	b2a4      	uxth	r4, r4
 801b300:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b304:	fb07 6702 	mla	r7, r7, r2, r6
 801b308:	f10c 0201 	add.w	r2, ip, #1
 801b30c:	1c66      	adds	r6, r4, #1
 801b30e:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b312:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801b316:	b2bf      	uxth	r7, r7
 801b318:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b31c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b320:	ea46 0c0c 	orr.w	ip, r6, ip
 801b324:	1c7e      	adds	r6, r7, #1
 801b326:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801b32a:	0976      	lsrs	r6, r6, #5
 801b32c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b330:	ea4c 0c06 	orr.w	ip, ip, r6
 801b334:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801b338:	e7ba      	b.n	801b2b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801b33a:	b007      	add	sp, #28
 801b33c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b340 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b344:	b085      	sub	sp, #20
 801b346:	468b      	mov	fp, r1
 801b348:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b34a:	9203      	str	r2, [sp, #12]
 801b34c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b350:	6841      	ldr	r1, [r0, #4]
 801b352:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b356:	fb01 2404 	mla	r4, r1, r4, r2
 801b35a:	6802      	ldr	r2, [r0, #0]
 801b35c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b360:	f8d8 2000 	ldr.w	r2, [r8]
 801b364:	9201      	str	r2, [sp, #4]
 801b366:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b36a:	f1bb 0f00 	cmp.w	fp, #0
 801b36e:	dc03      	bgt.n	801b378 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b370:	9a03      	ldr	r2, [sp, #12]
 801b372:	2a00      	cmp	r2, #0
 801b374:	f340 814f 	ble.w	801b616 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b378:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b37a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b37e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b382:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b386:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b388:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b38c:	2b00      	cmp	r3, #0
 801b38e:	dd0e      	ble.n	801b3ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b390:	1408      	asrs	r0, r1, #16
 801b392:	d405      	bmi.n	801b3a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b394:	42b8      	cmp	r0, r7
 801b396:	da03      	bge.n	801b3a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b398:	1410      	asrs	r0, r2, #16
 801b39a:	d401      	bmi.n	801b3a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801b39c:	42b0      	cmp	r0, r6
 801b39e:	db07      	blt.n	801b3b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b3a0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b3a2:	4401      	add	r1, r0
 801b3a4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b3a6:	3b01      	subs	r3, #1
 801b3a8:	4402      	add	r2, r0
 801b3aa:	3402      	adds	r4, #2
 801b3ac:	e7ee      	b.n	801b38c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b3ae:	d017      	beq.n	801b3e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b3b0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b3b2:	1e58      	subs	r0, r3, #1
 801b3b4:	fb05 1500 	mla	r5, r5, r0, r1
 801b3b8:	142d      	asrs	r5, r5, #16
 801b3ba:	d409      	bmi.n	801b3d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b3bc:	42bd      	cmp	r5, r7
 801b3be:	da07      	bge.n	801b3d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b3c0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b3c2:	fb05 2000 	mla	r0, r5, r0, r2
 801b3c6:	1400      	asrs	r0, r0, #16
 801b3c8:	d402      	bmi.n	801b3d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801b3ca:	42b0      	cmp	r0, r6
 801b3cc:	f2c0 80ba 	blt.w	801b544 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b3d0:	2600      	movs	r6, #0
 801b3d2:	1998      	adds	r0, r3, r6
 801b3d4:	2800      	cmp	r0, #0
 801b3d6:	dc3e      	bgt.n	801b456 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b3d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b3dc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b3e0:	f1bb 0f00 	cmp.w	fp, #0
 801b3e4:	f340 8117 	ble.w	801b616 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801b3e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b3ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b3f0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b3f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b3f6:	f1bb 0b01 	subs.w	fp, fp, #1
 801b3fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b3fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b402:	eeb0 6a62 	vmov.f32	s12, s5
 801b406:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b40a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b40e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b412:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b416:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b41a:	eeb0 6a43 	vmov.f32	s12, s6
 801b41e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b422:	ee12 2a90 	vmov	r2, s5
 801b426:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b42a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b42e:	ee13 2a10 	vmov	r2, s6
 801b432:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b436:	9311      	str	r3, [sp, #68]	; 0x44
 801b438:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b43a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b43e:	9a03      	ldr	r2, [sp, #12]
 801b440:	9312      	str	r3, [sp, #72]	; 0x48
 801b442:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b446:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b448:	eeb0 3a67 	vmov.f32	s6, s15
 801b44c:	bf08      	it	eq
 801b44e:	4613      	moveq	r3, r2
 801b450:	eef0 2a47 	vmov.f32	s5, s14
 801b454:	e789      	b.n	801b36a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801b456:	140f      	asrs	r7, r1, #16
 801b458:	d424      	bmi.n	801b4a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b45a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b45e:	42bd      	cmp	r5, r7
 801b460:	dd20      	ble.n	801b4a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b462:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b466:	d41d      	bmi.n	801b4a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b468:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801b46c:	4560      	cmp	r0, ip
 801b46e:	dd19      	ble.n	801b4a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b470:	b22d      	sxth	r5, r5
 801b472:	fb0c 7505 	mla	r5, ip, r5, r7
 801b476:	9801      	ldr	r0, [sp, #4]
 801b478:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801b47c:	0e07      	lsrs	r7, r0, #24
 801b47e:	2fff      	cmp	r7, #255	; 0xff
 801b480:	d116      	bne.n	801b4b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b482:	f06f 0501 	mvn.w	r5, #1
 801b486:	fb05 f706 	mul.w	r7, r5, r6
 801b48a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b48e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b492:	0945      	lsrs	r5, r0, #5
 801b494:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b498:	ea4c 0505 	orr.w	r5, ip, r5
 801b49c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b4a0:	4305      	orrs	r5, r0
 801b4a2:	53e5      	strh	r5, [r4, r7]
 801b4a4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b4a6:	4401      	add	r1, r0
 801b4a8:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b4aa:	3e01      	subs	r6, #1
 801b4ac:	4402      	add	r2, r0
 801b4ae:	e790      	b.n	801b3d2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b4b0:	b2fd      	uxtb	r5, r7
 801b4b2:	2f00      	cmp	r7, #0
 801b4b4:	d0f6      	beq.n	801b4a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b4b6:	f06f 0701 	mvn.w	r7, #1
 801b4ba:	4377      	muls	r7, r6
 801b4bc:	fa1f f985 	uxth.w	r9, r5
 801b4c0:	f834 e007 	ldrh.w	lr, [r4, r7]
 801b4c4:	9702      	str	r7, [sp, #8]
 801b4c6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b4ca:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b4ce:	43ed      	mvns	r5, r5
 801b4d0:	b2ed      	uxtb	r5, r5
 801b4d2:	fb17 f709 	smulbb	r7, r7, r9
 801b4d6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b4da:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b4de:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b4e2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b4e6:	b2c0      	uxtb	r0, r0
 801b4e8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b4ec:	fa5f fe8e 	uxtb.w	lr, lr
 801b4f0:	fb10 f009 	smulbb	r0, r0, r9
 801b4f4:	fb0e 0005 	mla	r0, lr, r5, r0
 801b4f8:	b280      	uxth	r0, r0
 801b4fa:	fa1f fc8c 	uxth.w	ip, ip
 801b4fe:	fb1a fa09 	smulbb	sl, sl, r9
 801b502:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b506:	fb07 a705 	mla	r7, r7, r5, sl
 801b50a:	f100 0a01 	add.w	sl, r0, #1
 801b50e:	f10c 0501 	add.w	r5, ip, #1
 801b512:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b516:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b51a:	b2bf      	uxth	r7, r7
 801b51c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b520:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b524:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b528:	f107 0a01 	add.w	sl, r7, #1
 801b52c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b530:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b534:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b538:	9802      	ldr	r0, [sp, #8]
 801b53a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b53e:	f824 c000 	strh.w	ip, [r4, r0]
 801b542:	e7af      	b.n	801b4a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b544:	f04f 0e00 	mov.w	lr, #0
 801b548:	eba3 000e 	sub.w	r0, r3, lr
 801b54c:	2800      	cmp	r0, #0
 801b54e:	f77f af43 	ble.w	801b3d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b552:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b556:	140d      	asrs	r5, r1, #16
 801b558:	1410      	asrs	r0, r2, #16
 801b55a:	fb06 5000 	mla	r0, r6, r0, r5
 801b55e:	9d01      	ldr	r5, [sp, #4]
 801b560:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b564:	0e2e      	lsrs	r6, r5, #24
 801b566:	2eff      	cmp	r6, #255	; 0xff
 801b568:	d112      	bne.n	801b590 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801b56a:	482c      	ldr	r0, [pc, #176]	; (801b61c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801b56c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b570:	0968      	lsrs	r0, r5, #5
 801b572:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b576:	4330      	orrs	r0, r6
 801b578:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b57c:	4328      	orrs	r0, r5
 801b57e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801b582:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b584:	4401      	add	r1, r0
 801b586:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b588:	f10e 0e01 	add.w	lr, lr, #1
 801b58c:	4402      	add	r2, r0
 801b58e:	e7db      	b.n	801b548 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801b590:	b2f0      	uxtb	r0, r6
 801b592:	2e00      	cmp	r6, #0
 801b594:	d0f5      	beq.n	801b582 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b596:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b59a:	fa1f f980 	uxth.w	r9, r0
 801b59e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b5a2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b5a6:	43c0      	mvns	r0, r0
 801b5a8:	b2c0      	uxtb	r0, r0
 801b5aa:	fb16 f609 	smulbb	r6, r6, r9
 801b5ae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b5b2:	fb07 6700 	mla	r7, r7, r0, r6
 801b5b6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b5ba:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b5be:	b2ed      	uxtb	r5, r5
 801b5c0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b5c4:	fa5f fc8c 	uxtb.w	ip, ip
 801b5c8:	fb15 f509 	smulbb	r5, r5, r9
 801b5cc:	fb0c 5500 	mla	r5, ip, r0, r5
 801b5d0:	b2bf      	uxth	r7, r7
 801b5d2:	fb1a fa09 	smulbb	sl, sl, r9
 801b5d6:	b2ad      	uxth	r5, r5
 801b5d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b5dc:	fb06 a600 	mla	r6, r6, r0, sl
 801b5e0:	1c78      	adds	r0, r7, #1
 801b5e2:	f105 0a01 	add.w	sl, r5, #1
 801b5e6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b5ea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b5ee:	b2b6      	uxth	r6, r6
 801b5f0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b5f4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b5f8:	ea4a 0707 	orr.w	r7, sl, r7
 801b5fc:	f106 0a01 	add.w	sl, r6, #1
 801b600:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b604:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b608:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b60c:	ea47 070a 	orr.w	r7, r7, sl
 801b610:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801b614:	e7b5      	b.n	801b582 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b616:	b005      	add	sp, #20
 801b618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b61c:	fffff800 	.word	0xfffff800

0801b620 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b624:	b087      	sub	sp, #28
 801b626:	468b      	mov	fp, r1
 801b628:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b62a:	9203      	str	r2, [sp, #12]
 801b62c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b630:	9204      	str	r2, [sp, #16]
 801b632:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b636:	6841      	ldr	r1, [r0, #4]
 801b638:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801b63c:	fb01 2404 	mla	r4, r1, r4, r2
 801b640:	6802      	ldr	r2, [r0, #0]
 801b642:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b646:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b64a:	3201      	adds	r2, #1
 801b64c:	f022 0201 	bic.w	r2, r2, #1
 801b650:	9200      	str	r2, [sp, #0]
 801b652:	f8d9 2000 	ldr.w	r2, [r9]
 801b656:	9201      	str	r2, [sp, #4]
 801b658:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b65c:	f1bb 0f00 	cmp.w	fp, #0
 801b660:	dc03      	bgt.n	801b66a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b662:	9a03      	ldr	r2, [sp, #12]
 801b664:	2a00      	cmp	r2, #0
 801b666:	f340 8169 	ble.w	801b93c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b66a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b66c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b670:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b674:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b678:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b67a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b67e:	2b00      	cmp	r3, #0
 801b680:	dd0e      	ble.n	801b6a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b682:	1402      	asrs	r2, r0, #16
 801b684:	d405      	bmi.n	801b692 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b686:	42ba      	cmp	r2, r7
 801b688:	da03      	bge.n	801b692 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b68a:	140a      	asrs	r2, r1, #16
 801b68c:	d401      	bmi.n	801b692 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b68e:	42b2      	cmp	r2, r6
 801b690:	db07      	blt.n	801b6a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b692:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b694:	4410      	add	r0, r2
 801b696:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b698:	3b01      	subs	r3, #1
 801b69a:	4411      	add	r1, r2
 801b69c:	3402      	adds	r4, #2
 801b69e:	e7ee      	b.n	801b67e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b6a0:	d017      	beq.n	801b6d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b6a2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b6a4:	1e5a      	subs	r2, r3, #1
 801b6a6:	fb05 0502 	mla	r5, r5, r2, r0
 801b6aa:	142d      	asrs	r5, r5, #16
 801b6ac:	d409      	bmi.n	801b6c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b6ae:	42bd      	cmp	r5, r7
 801b6b0:	da07      	bge.n	801b6c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b6b2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b6b4:	fb05 1202 	mla	r2, r5, r2, r1
 801b6b8:	1412      	asrs	r2, r2, #16
 801b6ba:	d402      	bmi.n	801b6c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b6bc:	42b2      	cmp	r2, r6
 801b6be:	f2c0 80c7 	blt.w	801b850 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801b6c2:	2700      	movs	r7, #0
 801b6c4:	19da      	adds	r2, r3, r7
 801b6c6:	2a00      	cmp	r2, #0
 801b6c8:	dc3e      	bgt.n	801b748 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b6ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b6ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b6d2:	f1bb 0f00 	cmp.w	fp, #0
 801b6d6:	f340 8131 	ble.w	801b93c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b6da:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b6de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b6e2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b6e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b6e8:	f1bb 0b01 	subs.w	fp, fp, #1
 801b6ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b6f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b6f4:	eeb0 6a62 	vmov.f32	s12, s5
 801b6f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b6fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b700:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b704:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b708:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b70c:	eeb0 6a43 	vmov.f32	s12, s6
 801b710:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b714:	ee12 2a90 	vmov	r2, s5
 801b718:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b71c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b720:	ee13 2a10 	vmov	r2, s6
 801b724:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b728:	9313      	str	r3, [sp, #76]	; 0x4c
 801b72a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b72c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b730:	9a03      	ldr	r2, [sp, #12]
 801b732:	9314      	str	r3, [sp, #80]	; 0x50
 801b734:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b738:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b73a:	eeb0 3a67 	vmov.f32	s6, s15
 801b73e:	bf08      	it	eq
 801b740:	4613      	moveq	r3, r2
 801b742:	eef0 2a47 	vmov.f32	s5, s14
 801b746:	e789      	b.n	801b65c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b748:	1405      	asrs	r5, r0, #16
 801b74a:	d435      	bmi.n	801b7b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b74c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b750:	42aa      	cmp	r2, r5
 801b752:	dd31      	ble.n	801b7b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b754:	140e      	asrs	r6, r1, #16
 801b756:	d42f      	bmi.n	801b7b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b758:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b75c:	42b2      	cmp	r2, r6
 801b75e:	dd2b      	ble.n	801b7b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b760:	9a00      	ldr	r2, [sp, #0]
 801b762:	fb06 5502 	mla	r5, r6, r2, r5
 801b766:	086a      	lsrs	r2, r5, #1
 801b768:	9e01      	ldr	r6, [sp, #4]
 801b76a:	5cb2      	ldrb	r2, [r6, r2]
 801b76c:	07ee      	lsls	r6, r5, #31
 801b76e:	bf54      	ite	pl
 801b770:	f002 020f 	andpl.w	r2, r2, #15
 801b774:	1112      	asrmi	r2, r2, #4
 801b776:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b77a:	b2d2      	uxtb	r2, r2
 801b77c:	b1e2      	cbz	r2, 801b7b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b77e:	9d04      	ldr	r5, [sp, #16]
 801b780:	436a      	muls	r2, r5
 801b782:	1c55      	adds	r5, r2, #1
 801b784:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b788:	4d6e      	ldr	r5, [pc, #440]	; (801b944 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b78a:	682d      	ldr	r5, [r5, #0]
 801b78c:	1212      	asrs	r2, r2, #8
 801b78e:	0a2e      	lsrs	r6, r5, #8
 801b790:	2aff      	cmp	r2, #255	; 0xff
 801b792:	9605      	str	r6, [sp, #20]
 801b794:	d116      	bne.n	801b7c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b796:	f06f 0201 	mvn.w	r2, #1
 801b79a:	fb02 fc07 	mul.w	ip, r2, r7
 801b79e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b7a2:	096a      	lsrs	r2, r5, #5
 801b7a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b7a8:	f026 0607 	bic.w	r6, r6, #7
 801b7ac:	4316      	orrs	r6, r2
 801b7ae:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b7b2:	432e      	orrs	r6, r5
 801b7b4:	f824 600c 	strh.w	r6, [r4, ip]
 801b7b8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b7ba:	4410      	add	r0, r2
 801b7bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b7be:	3f01      	subs	r7, #1
 801b7c0:	4411      	add	r1, r2
 801b7c2:	e77f      	b.n	801b6c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801b7c4:	f06f 0601 	mvn.w	r6, #1
 801b7c8:	437e      	muls	r6, r7
 801b7ca:	fa1f fa82 	uxth.w	sl, r2
 801b7ce:	f834 8006 	ldrh.w	r8, [r4, r6]
 801b7d2:	9602      	str	r6, [sp, #8]
 801b7d4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b7d8:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801b7dc:	43d2      	mvns	r2, r2
 801b7de:	b2d2      	uxtb	r2, r2
 801b7e0:	fb1c fc0a 	smulbb	ip, ip, sl
 801b7e4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b7e8:	fb0e ce02 	mla	lr, lr, r2, ip
 801b7ec:	b2ed      	uxtb	r5, r5
 801b7ee:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b7f2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b7f6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b7fa:	fa5f f888 	uxtb.w	r8, r8
 801b7fe:	fb15 f50a 	smulbb	r5, r5, sl
 801b802:	fb08 5502 	mla	r5, r8, r2, r5
 801b806:	fa1f fe8e 	uxth.w	lr, lr
 801b80a:	fb16 f60a 	smulbb	r6, r6, sl
 801b80e:	b2ad      	uxth	r5, r5
 801b810:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801b814:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b818:	f10e 0201 	add.w	r2, lr, #1
 801b81c:	1c6e      	adds	r6, r5, #1
 801b81e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b822:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801b826:	fa1f fc8c 	uxth.w	ip, ip
 801b82a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b82e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b832:	ea46 0e0e 	orr.w	lr, r6, lr
 801b836:	f10c 0601 	add.w	r6, ip, #1
 801b83a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b83e:	0976      	lsrs	r6, r6, #5
 801b840:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b844:	9a02      	ldr	r2, [sp, #8]
 801b846:	ea4e 0e06 	orr.w	lr, lr, r6
 801b84a:	f824 e002 	strh.w	lr, [r4, r2]
 801b84e:	e7b3      	b.n	801b7b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b850:	f04f 0800 	mov.w	r8, #0
 801b854:	eba3 0208 	sub.w	r2, r3, r8
 801b858:	2a00      	cmp	r2, #0
 801b85a:	f77f af36 	ble.w	801b6ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b85e:	9e00      	ldr	r6, [sp, #0]
 801b860:	1402      	asrs	r2, r0, #16
 801b862:	140d      	asrs	r5, r1, #16
 801b864:	fb06 2505 	mla	r5, r6, r5, r2
 801b868:	086a      	lsrs	r2, r5, #1
 801b86a:	9e01      	ldr	r6, [sp, #4]
 801b86c:	5cb2      	ldrb	r2, [r6, r2]
 801b86e:	07ed      	lsls	r5, r5, #31
 801b870:	bf54      	ite	pl
 801b872:	f002 020f 	andpl.w	r2, r2, #15
 801b876:	1112      	asrmi	r2, r2, #4
 801b878:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b87c:	b2d2      	uxtb	r2, r2
 801b87e:	b1c2      	cbz	r2, 801b8b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801b880:	9d04      	ldr	r5, [sp, #16]
 801b882:	436a      	muls	r2, r5
 801b884:	1c55      	adds	r5, r2, #1
 801b886:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b88a:	4d2e      	ldr	r5, [pc, #184]	; (801b944 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b88c:	1212      	asrs	r2, r2, #8
 801b88e:	682e      	ldr	r6, [r5, #0]
 801b890:	2aff      	cmp	r2, #255	; 0xff
 801b892:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801b896:	d113      	bne.n	801b8c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801b898:	0972      	lsrs	r2, r6, #5
 801b89a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801b89e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b8a2:	f025 0507 	bic.w	r5, r5, #7
 801b8a6:	4315      	orrs	r5, r2
 801b8a8:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801b8ac:	4335      	orrs	r5, r6
 801b8ae:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801b8b2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b8b4:	4410      	add	r0, r2
 801b8b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b8b8:	f108 0801 	add.w	r8, r8, #1
 801b8bc:	4411      	add	r1, r2
 801b8be:	e7c9      	b.n	801b854 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b8c0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801b8c4:	fa1f fa82 	uxth.w	sl, r2
 801b8c8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b8cc:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801b8d0:	43d2      	mvns	r2, r2
 801b8d2:	b2d2      	uxtb	r2, r2
 801b8d4:	fb17 f70a 	smulbb	r7, r7, sl
 801b8d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b8dc:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b8e0:	b2f6      	uxtb	r6, r6
 801b8e2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b8e6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b8ea:	fa5f fe8e 	uxtb.w	lr, lr
 801b8ee:	fb16 f60a 	smulbb	r6, r6, sl
 801b8f2:	fb0e 6602 	mla	r6, lr, r2, r6
 801b8f6:	b2ed      	uxtb	r5, r5
 801b8f8:	fa1f fc8c 	uxth.w	ip, ip
 801b8fc:	fb15 f50a 	smulbb	r5, r5, sl
 801b900:	b2b6      	uxth	r6, r6
 801b902:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b906:	fb07 5702 	mla	r7, r7, r2, r5
 801b90a:	f10c 0201 	add.w	r2, ip, #1
 801b90e:	1c75      	adds	r5, r6, #1
 801b910:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b914:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801b918:	b2bf      	uxth	r7, r7
 801b91a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b91e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b922:	ea45 0c0c 	orr.w	ip, r5, ip
 801b926:	1c7d      	adds	r5, r7, #1
 801b928:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801b92c:	096d      	lsrs	r5, r5, #5
 801b92e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b932:	ea4c 0c05 	orr.w	ip, ip, r5
 801b936:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801b93a:	e7ba      	b.n	801b8b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801b93c:	b007      	add	sp, #28
 801b93e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b942:	bf00      	nop
 801b944:	20012dc4 	.word	0x20012dc4

0801b948 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b94c:	b087      	sub	sp, #28
 801b94e:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801bc5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801b952:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b954:	9205      	str	r2, [sp, #20]
 801b956:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b95a:	9101      	str	r1, [sp, #4]
 801b95c:	6841      	ldr	r1, [r0, #4]
 801b95e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801b962:	fb01 2404 	mla	r4, r1, r4, r2
 801b966:	6802      	ldr	r2, [r0, #0]
 801b968:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b96c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801b970:	3201      	adds	r2, #1
 801b972:	f022 0201 	bic.w	r2, r2, #1
 801b976:	9202      	str	r2, [sp, #8]
 801b978:	f8db 2000 	ldr.w	r2, [fp]
 801b97c:	9203      	str	r2, [sp, #12]
 801b97e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b982:	9a01      	ldr	r2, [sp, #4]
 801b984:	2a00      	cmp	r2, #0
 801b986:	dc03      	bgt.n	801b990 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b988:	9a05      	ldr	r2, [sp, #20]
 801b98a:	2a00      	cmp	r2, #0
 801b98c:	f340 8162 	ble.w	801bc54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801b990:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b992:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801b996:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801b99a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b99e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b9a0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b9a4:	2b00      	cmp	r3, #0
 801b9a6:	dd0e      	ble.n	801b9c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b9a8:	1402      	asrs	r2, r0, #16
 801b9aa:	d405      	bmi.n	801b9b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b9ac:	42ba      	cmp	r2, r7
 801b9ae:	da03      	bge.n	801b9b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b9b0:	140a      	asrs	r2, r1, #16
 801b9b2:	d401      	bmi.n	801b9b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b9b4:	42b2      	cmp	r2, r6
 801b9b6:	db07      	blt.n	801b9c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b9b8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b9ba:	4410      	add	r0, r2
 801b9bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b9be:	3b01      	subs	r3, #1
 801b9c0:	4411      	add	r1, r2
 801b9c2:	3402      	adds	r4, #2
 801b9c4:	e7ee      	b.n	801b9a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801b9c6:	d017      	beq.n	801b9f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801b9c8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b9ca:	1e5a      	subs	r2, r3, #1
 801b9cc:	fb05 0502 	mla	r5, r5, r2, r0
 801b9d0:	142d      	asrs	r5, r5, #16
 801b9d2:	d409      	bmi.n	801b9e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b9d4:	42bd      	cmp	r5, r7
 801b9d6:	da07      	bge.n	801b9e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b9d8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b9da:	fb05 1202 	mla	r2, r5, r2, r1
 801b9de:	1412      	asrs	r2, r2, #16
 801b9e0:	d402      	bmi.n	801b9e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b9e2:	42b2      	cmp	r2, r6
 801b9e4:	f2c0 80c3 	blt.w	801bb6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801b9e8:	2500      	movs	r5, #0
 801b9ea:	195a      	adds	r2, r3, r5
 801b9ec:	2a00      	cmp	r2, #0
 801b9ee:	dc3f      	bgt.n	801ba70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b9f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b9f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b9f8:	9b01      	ldr	r3, [sp, #4]
 801b9fa:	2b00      	cmp	r3, #0
 801b9fc:	f340 812a 	ble.w	801bc54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ba00:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba04:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba08:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ba0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ba0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba12:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba16:	eeb0 6a62 	vmov.f32	s12, s5
 801ba1a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba1e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ba22:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba26:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ba2a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba2e:	eeb0 6a43 	vmov.f32	s12, s6
 801ba32:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba36:	ee12 2a90 	vmov	r2, s5
 801ba3a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ba3e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba42:	ee13 2a10 	vmov	r2, s6
 801ba46:	9313      	str	r3, [sp, #76]	; 0x4c
 801ba48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ba4a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba4e:	9314      	str	r3, [sp, #80]	; 0x50
 801ba50:	9b01      	ldr	r3, [sp, #4]
 801ba52:	9a05      	ldr	r2, [sp, #20]
 801ba54:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ba58:	3b01      	subs	r3, #1
 801ba5a:	9301      	str	r3, [sp, #4]
 801ba5c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ba60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ba62:	eeb0 3a67 	vmov.f32	s6, s15
 801ba66:	bf08      	it	eq
 801ba68:	4613      	moveq	r3, r2
 801ba6a:	eef0 2a47 	vmov.f32	s5, s14
 801ba6e:	e788      	b.n	801b982 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ba70:	1406      	asrs	r6, r0, #16
 801ba72:	d42c      	bmi.n	801bace <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ba74:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ba78:	42b2      	cmp	r2, r6
 801ba7a:	dd28      	ble.n	801bace <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ba7c:	140f      	asrs	r7, r1, #16
 801ba7e:	d426      	bmi.n	801bace <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ba80:	f8db 200c 	ldr.w	r2, [fp, #12]
 801ba84:	42ba      	cmp	r2, r7
 801ba86:	dd22      	ble.n	801bace <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ba88:	9a02      	ldr	r2, [sp, #8]
 801ba8a:	fb07 6602 	mla	r6, r7, r2, r6
 801ba8e:	0872      	lsrs	r2, r6, #1
 801ba90:	9f03      	ldr	r7, [sp, #12]
 801ba92:	5cba      	ldrb	r2, [r7, r2]
 801ba94:	07f6      	lsls	r6, r6, #31
 801ba96:	bf54      	ite	pl
 801ba98:	f002 020f 	andpl.w	r2, r2, #15
 801ba9c:	1112      	asrmi	r2, r2, #4
 801ba9e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801baa2:	b2d2      	uxtb	r2, r2
 801baa4:	2aff      	cmp	r2, #255	; 0xff
 801baa6:	d118      	bne.n	801bada <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801baa8:	f8d8 2000 	ldr.w	r2, [r8]
 801baac:	f06f 0601 	mvn.w	r6, #1
 801bab0:	fb06 f705 	mul.w	r7, r6, r5
 801bab4:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801bab8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801babc:	0956      	lsrs	r6, r2, #5
 801babe:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bac2:	ea4c 0606 	orr.w	r6, ip, r6
 801bac6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801baca:	4316      	orrs	r6, r2
 801bacc:	53e6      	strh	r6, [r4, r7]
 801bace:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bad0:	4410      	add	r0, r2
 801bad2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bad4:	3d01      	subs	r5, #1
 801bad6:	4411      	add	r1, r2
 801bad8:	e787      	b.n	801b9ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801bada:	2a00      	cmp	r2, #0
 801badc:	d0f7      	beq.n	801bace <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bade:	f06f 0601 	mvn.w	r6, #1
 801bae2:	436e      	muls	r6, r5
 801bae4:	f8d8 c000 	ldr.w	ip, [r8]
 801bae8:	f834 e006 	ldrh.w	lr, [r4, r6]
 801baec:	9604      	str	r6, [sp, #16]
 801baee:	fa1f f982 	uxth.w	r9, r2
 801baf2:	ea4f 272e 	mov.w	r7, lr, asr #8
 801baf6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801bafa:	43d2      	mvns	r2, r2
 801bafc:	b2d2      	uxtb	r2, r2
 801bafe:	fb16 f609 	smulbb	r6, r6, r9
 801bb02:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bb06:	fb07 6702 	mla	r7, r7, r2, r6
 801bb0a:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801bb0e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801bb12:	fa5f fc8c 	uxtb.w	ip, ip
 801bb16:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bb1a:	fa5f fe8e 	uxtb.w	lr, lr
 801bb1e:	fb1c fc09 	smulbb	ip, ip, r9
 801bb22:	fb0e cc02 	mla	ip, lr, r2, ip
 801bb26:	b2bf      	uxth	r7, r7
 801bb28:	fb1a fa09 	smulbb	sl, sl, r9
 801bb2c:	fa1f fc8c 	uxth.w	ip, ip
 801bb30:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bb34:	fb06 a602 	mla	r6, r6, r2, sl
 801bb38:	1c7a      	adds	r2, r7, #1
 801bb3a:	f10c 0a01 	add.w	sl, ip, #1
 801bb3e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bb42:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801bb46:	b2b6      	uxth	r6, r6
 801bb48:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bb4c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801bb50:	ea4a 0707 	orr.w	r7, sl, r7
 801bb54:	f106 0a01 	add.w	sl, r6, #1
 801bb58:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bb5c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bb60:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bb64:	9a04      	ldr	r2, [sp, #16]
 801bb66:	ea47 070a 	orr.w	r7, r7, sl
 801bb6a:	52a7      	strh	r7, [r4, r2]
 801bb6c:	e7af      	b.n	801bace <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801bb6e:	f04f 0e00 	mov.w	lr, #0
 801bb72:	eba3 020e 	sub.w	r2, r3, lr
 801bb76:	2a00      	cmp	r2, #0
 801bb78:	f77f af3a 	ble.w	801b9f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bb7c:	9e02      	ldr	r6, [sp, #8]
 801bb7e:	1402      	asrs	r2, r0, #16
 801bb80:	140d      	asrs	r5, r1, #16
 801bb82:	fb06 2505 	mla	r5, r6, r5, r2
 801bb86:	086a      	lsrs	r2, r5, #1
 801bb88:	9e03      	ldr	r6, [sp, #12]
 801bb8a:	5cb2      	ldrb	r2, [r6, r2]
 801bb8c:	07ed      	lsls	r5, r5, #31
 801bb8e:	bf54      	ite	pl
 801bb90:	f002 020f 	andpl.w	r2, r2, #15
 801bb94:	1112      	asrmi	r2, r2, #4
 801bb96:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801bb9a:	b2d2      	uxtb	r2, r2
 801bb9c:	2aff      	cmp	r2, #255	; 0xff
 801bb9e:	d115      	bne.n	801bbcc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801bba0:	f8d8 5000 	ldr.w	r5, [r8]
 801bba4:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801bba8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801bbac:	096a      	lsrs	r2, r5, #5
 801bbae:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bbb2:	4332      	orrs	r2, r6
 801bbb4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bbb8:	432a      	orrs	r2, r5
 801bbba:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801bbbe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bbc0:	4410      	add	r0, r2
 801bbc2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bbc4:	f10e 0e01 	add.w	lr, lr, #1
 801bbc8:	4411      	add	r1, r2
 801bbca:	e7d2      	b.n	801bb72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801bbcc:	2a00      	cmp	r2, #0
 801bbce:	d0f6      	beq.n	801bbbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bbd0:	f8d8 7000 	ldr.w	r7, [r8]
 801bbd4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801bbd8:	fa1f f982 	uxth.w	r9, r2
 801bbdc:	ea4f 262c 	mov.w	r6, ip, asr #8
 801bbe0:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801bbe4:	43d2      	mvns	r2, r2
 801bbe6:	b2d2      	uxtb	r2, r2
 801bbe8:	fb15 f509 	smulbb	r5, r5, r9
 801bbec:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bbf0:	fb06 5602 	mla	r6, r6, r2, r5
 801bbf4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801bbf8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801bbfc:	b2ff      	uxtb	r7, r7
 801bbfe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bc02:	fa5f fc8c 	uxtb.w	ip, ip
 801bc06:	fb17 f709 	smulbb	r7, r7, r9
 801bc0a:	fb0c 7702 	mla	r7, ip, r2, r7
 801bc0e:	b2b6      	uxth	r6, r6
 801bc10:	fb1a fa09 	smulbb	sl, sl, r9
 801bc14:	b2bf      	uxth	r7, r7
 801bc16:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bc1a:	fb05 a502 	mla	r5, r5, r2, sl
 801bc1e:	1c72      	adds	r2, r6, #1
 801bc20:	f107 0a01 	add.w	sl, r7, #1
 801bc24:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801bc28:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bc2c:	b2ad      	uxth	r5, r5
 801bc2e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bc32:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bc36:	ea4a 0606 	orr.w	r6, sl, r6
 801bc3a:	f105 0a01 	add.w	sl, r5, #1
 801bc3e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bc42:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bc46:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bc4a:	ea46 060a 	orr.w	r6, r6, sl
 801bc4e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801bc52:	e7b4      	b.n	801bbbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801bc54:	b007      	add	sp, #28
 801bc56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bc5a:	bf00      	nop
 801bc5c:	20012dc4 	.word	0x20012dc4

0801bc60 <_ZN8touchgfx8LCD16bppD1Ev>:
 801bc60:	4770      	bx	lr

0801bc62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801bc62:	4770      	bx	lr

0801bc64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801bc64:	4770      	bx	lr

0801bc66 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801bc66:	4770      	bx	lr

0801bc68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801bc68:	4770      	bx	lr

0801bc6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801bc6a:	4770      	bx	lr

0801bc6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801bc6c:	4770      	bx	lr

0801bc6e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801bc6e:	4770      	bx	lr

0801bc70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bc70:	4770      	bx	lr

0801bc72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bc72:	4770      	bx	lr

0801bc74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bc74:	4770      	bx	lr

0801bc76 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bc76:	4770      	bx	lr

0801bc78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bc78:	4770      	bx	lr

0801bc7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801bc7a:	4770      	bx	lr

0801bc7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bc7c:	4770      	bx	lr

0801bc7e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bc7e:	4770      	bx	lr

0801bc80 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bc80:	4770      	bx	lr

0801bc82 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801bc82:	4770      	bx	lr

0801bc84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bc84:	4770      	bx	lr

0801bc86 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bc86:	4770      	bx	lr

0801bc88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801bc88:	4770      	bx	lr

0801bc8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801bc8a:	4770      	bx	lr

0801bc8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801bc8c:	4770      	bx	lr

0801bc8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801bc8e:	4770      	bx	lr

0801bc90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bc90:	4770      	bx	lr

0801bc92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801bc92:	4770      	bx	lr

0801bc94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bc94:	4770      	bx	lr

0801bc96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801bc96:	4770      	bx	lr

0801bc98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801bc98:	4770      	bx	lr

0801bc9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801bc9a:	4770      	bx	lr

0801bc9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801bc9c:	4770      	bx	lr

0801bc9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801bc9e:	4770      	bx	lr

0801bca0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801bca0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bca4:	b088      	sub	sp, #32
 801bca6:	ac08      	add	r4, sp, #32
 801bca8:	4606      	mov	r6, r0
 801bcaa:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801bcae:	4620      	mov	r0, r4
 801bcb0:	4688      	mov	r8, r1
 801bcb2:	4691      	mov	r9, r2
 801bcb4:	f7fd fc62 	bl	801957c <_ZNK8touchgfx6Bitmap7getDataEv>
 801bcb8:	6833      	ldr	r3, [r6, #0]
 801bcba:	4605      	mov	r5, r0
 801bcbc:	4620      	mov	r0, r4
 801bcbe:	699f      	ldr	r7, [r3, #24]
 801bcc0:	f7fd fb70 	bl	80193a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801bcc4:	4682      	mov	sl, r0
 801bcc6:	4620      	mov	r0, r4
 801bcc8:	f7fd fba0 	bl	801940c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801bccc:	9500      	str	r5, [sp, #0]
 801bcce:	e9cd a001 	strd	sl, r0, [sp, #4]
 801bcd2:	464b      	mov	r3, r9
 801bcd4:	a806      	add	r0, sp, #24
 801bcd6:	4642      	mov	r2, r8
 801bcd8:	4631      	mov	r1, r6
 801bcda:	47b8      	blx	r7
 801bcdc:	4628      	mov	r0, r5
 801bcde:	b008      	add	sp, #32
 801bce0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801bce4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801bce4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801bce8:	2300      	movs	r3, #0
 801bcea:	9300      	str	r3, [sp, #0]
 801bcec:	4b3d      	ldr	r3, [pc, #244]	; (801bde4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801bcee:	781b      	ldrb	r3, [r3, #0]
 801bcf0:	2b00      	cmp	r3, #0
 801bcf2:	d137      	bne.n	801bd64 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801bcf4:	4a3c      	ldr	r2, [pc, #240]	; (801bde8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bcf6:	f9b2 2000 	ldrsh.w	r2, [r2]
 801bcfa:	f8ad 2004 	strh.w	r2, [sp, #4]
 801bcfe:	2b00      	cmp	r3, #0
 801bd00:	d132      	bne.n	801bd68 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801bd02:	4b3a      	ldr	r3, [pc, #232]	; (801bdec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801bd04:	f9b3 3000 	ldrsh.w	r3, [r3]
 801bd08:	6808      	ldr	r0, [r1, #0]
 801bd0a:	6849      	ldr	r1, [r1, #4]
 801bd0c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801bd10:	ac02      	add	r4, sp, #8
 801bd12:	ab02      	add	r3, sp, #8
 801bd14:	c303      	stmia	r3!, {r0, r1}
 801bd16:	4669      	mov	r1, sp
 801bd18:	4620      	mov	r0, r4
 801bd1a:	f7f9 fdc1 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bd1e:	4668      	mov	r0, sp
 801bd20:	f7f9 fd7a 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bd24:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801bd28:	f8bd 2000 	ldrh.w	r2, [sp]
 801bd2c:	4d30      	ldr	r5, [pc, #192]	; (801bdf0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801bd2e:	4413      	add	r3, r2
 801bd30:	f8ad 3008 	strh.w	r3, [sp, #8]
 801bd34:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801bd38:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801bd3c:	6828      	ldr	r0, [r5, #0]
 801bd3e:	4413      	add	r3, r2
 801bd40:	f8ad 300a 	strh.w	r3, [sp, #10]
 801bd44:	6803      	ldr	r3, [r0, #0]
 801bd46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bd48:	4798      	blx	r3
 801bd4a:	f010 0f01 	tst.w	r0, #1
 801bd4e:	462f      	mov	r7, r5
 801bd50:	d00c      	beq.n	801bd6c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801bd52:	6828      	ldr	r0, [r5, #0]
 801bd54:	6803      	ldr	r3, [r0, #0]
 801bd56:	e894 0006 	ldmia.w	r4, {r1, r2}
 801bd5a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801bd5c:	4798      	blx	r3
 801bd5e:	b004      	add	sp, #16
 801bd60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bd64:	4a21      	ldr	r2, [pc, #132]	; (801bdec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801bd66:	e7c6      	b.n	801bcf6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801bd68:	4b1f      	ldr	r3, [pc, #124]	; (801bde8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bd6a:	e7cb      	b.n	801bd04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801bd6c:	6838      	ldr	r0, [r7, #0]
 801bd6e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801bd72:	6803      	ldr	r3, [r0, #0]
 801bd74:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801bd78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801bd7a:	4798      	blx	r3
 801bd7c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801bd80:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801bd84:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801bd88:	fb16 3602 	smlabb	r6, r6, r2, r3
 801bd8c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801bd90:	6838      	ldr	r0, [r7, #0]
 801bd92:	6803      	ldr	r3, [r0, #0]
 801bd94:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bd96:	4798      	blx	r3
 801bd98:	4a13      	ldr	r2, [pc, #76]	; (801bde8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801bd9a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801bd9e:	8813      	ldrh	r3, [r2, #0]
 801bda0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801bda4:	fb03 1404 	mla	r4, r3, r4, r1
 801bda8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801bdac:	435d      	muls	r5, r3
 801bdae:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801bdb2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801bdb6:	4691      	mov	r9, r2
 801bdb8:	6838      	ldr	r0, [r7, #0]
 801bdba:	42ac      	cmp	r4, r5
 801bdbc:	6803      	ldr	r3, [r0, #0]
 801bdbe:	d20e      	bcs.n	801bdde <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801bdc0:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801bdc4:	4632      	mov	r2, r6
 801bdc6:	4643      	mov	r3, r8
 801bdc8:	4621      	mov	r1, r4
 801bdca:	47d0      	blx	sl
 801bdcc:	f8b9 3000 	ldrh.w	r3, [r9]
 801bdd0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bdd4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801bdd8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801bddc:	e7ec      	b.n	801bdb8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801bdde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bde0:	4798      	blx	r3
 801bde2:	e7bc      	b.n	801bd5e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801bde4:	20012dac 	.word	0x20012dac
 801bde8:	20012dae 	.word	0x20012dae
 801bdec:	20012db0 	.word	0x20012db0
 801bdf0:	20012db4 	.word	0x20012db4

0801bdf4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801bdf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdf8:	b08b      	sub	sp, #44	; 0x2c
 801bdfa:	460f      	mov	r7, r1
 801bdfc:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801be00:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801be04:	4616      	mov	r6, r2
 801be06:	f1bb 0f00 	cmp.w	fp, #0
 801be0a:	d04a      	beq.n	801bea2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801be0c:	6810      	ldr	r0, [r2, #0]
 801be0e:	6851      	ldr	r1, [r2, #4]
 801be10:	ad06      	add	r5, sp, #24
 801be12:	c503      	stmia	r5!, {r0, r1}
 801be14:	6818      	ldr	r0, [r3, #0]
 801be16:	6859      	ldr	r1, [r3, #4]
 801be18:	ad08      	add	r5, sp, #32
 801be1a:	c503      	stmia	r5!, {r0, r1}
 801be1c:	a806      	add	r0, sp, #24
 801be1e:	f7f9 fcfb 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801be22:	4631      	mov	r1, r6
 801be24:	a808      	add	r0, sp, #32
 801be26:	f7f9 fd3b 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801be2a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801be2e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801be32:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801be36:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801be3a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801be3e:	fb16 2103 	smlabb	r1, r6, r3, r2
 801be42:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801be46:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801be4a:	4f5f      	ldr	r7, [pc, #380]	; (801bfc8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801be4c:	440a      	add	r2, r1
 801be4e:	f8ad 2020 	strh.w	r2, [sp, #32]
 801be52:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801be56:	6838      	ldr	r0, [r7, #0]
 801be58:	4413      	add	r3, r2
 801be5a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801be5e:	6803      	ldr	r3, [r0, #0]
 801be60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801be62:	4798      	blx	r3
 801be64:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801be68:	46b9      	mov	r9, r7
 801be6a:	d11d      	bne.n	801bea8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801be6c:	b9fc      	cbnz	r4, 801beae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801be6e:	f010 0f01 	tst.w	r0, #1
 801be72:	d01c      	beq.n	801beae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801be74:	f8d9 0000 	ldr.w	r0, [r9]
 801be78:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801be7c:	6801      	ldr	r1, [r0, #0]
 801be7e:	f8cd b00c 	str.w	fp, [sp, #12]
 801be82:	2700      	movs	r7, #0
 801be84:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801be88:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801be8c:	9402      	str	r4, [sp, #8]
 801be8e:	b2ad      	uxth	r5, r5
 801be90:	fa1f f488 	uxth.w	r4, r8
 801be94:	9501      	str	r5, [sp, #4]
 801be96:	9400      	str	r4, [sp, #0]
 801be98:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801be9a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801be9e:	4631      	mov	r1, r6
 801bea0:	47a0      	blx	r4
 801bea2:	b00b      	add	sp, #44	; 0x2c
 801bea4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bea8:	f010 0f04 	tst.w	r0, #4
 801beac:	e7e1      	b.n	801be72 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801beae:	f8d9 0000 	ldr.w	r0, [r9]
 801beb2:	6803      	ldr	r3, [r0, #0]
 801beb4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801beb6:	4798      	blx	r3
 801beb8:	4b44      	ldr	r3, [pc, #272]	; (801bfcc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801beba:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801bebe:	881a      	ldrh	r2, [r3, #0]
 801bec0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801bec4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801bec8:	fb02 1404 	mla	r4, r2, r4, r1
 801becc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801bed0:	469a      	mov	sl, r3
 801bed2:	fb05 f502 	mul.w	r5, r5, r2
 801bed6:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801beda:	d059      	beq.n	801bf90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801bedc:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801bee0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801bee4:	fa1f f28b 	uxth.w	r2, fp
 801bee8:	fa1f f989 	uxth.w	r9, r9
 801beec:	469e      	mov	lr, r3
 801beee:	42ac      	cmp	r4, r5
 801bef0:	d264      	bcs.n	801bfbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801bef2:	eb04 0a07 	add.w	sl, r4, r7
 801bef6:	4554      	cmp	r4, sl
 801bef8:	d23d      	bcs.n	801bf76 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801befa:	8821      	ldrh	r1, [r4, #0]
 801befc:	f836 3b02 	ldrh.w	r3, [r6], #2
 801bf00:	1208      	asrs	r0, r1, #8
 801bf02:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801bf06:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bf0a:	fb10 f009 	smulbb	r0, r0, r9
 801bf0e:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801bf12:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bf16:	00c9      	lsls	r1, r1, #3
 801bf18:	fb0c 0c02 	mla	ip, ip, r2, r0
 801bf1c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801bf20:	10d8      	asrs	r0, r3, #3
 801bf22:	b2c9      	uxtb	r1, r1
 801bf24:	00db      	lsls	r3, r3, #3
 801bf26:	fa1f fc8c 	uxth.w	ip, ip
 801bf2a:	fb1b fb09 	smulbb	fp, fp, r9
 801bf2e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801bf32:	b2db      	uxtb	r3, r3
 801bf34:	fb11 f109 	smulbb	r1, r1, r9
 801bf38:	fb00 b002 	mla	r0, r0, r2, fp
 801bf3c:	fb03 1302 	mla	r3, r3, r2, r1
 801bf40:	f10c 0b01 	add.w	fp, ip, #1
 801bf44:	b29b      	uxth	r3, r3
 801bf46:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801bf4a:	b280      	uxth	r0, r0
 801bf4c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801bf50:	f103 0c01 	add.w	ip, r3, #1
 801bf54:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801bf58:	1c43      	adds	r3, r0, #1
 801bf5a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801bf5e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801bf62:	0940      	lsrs	r0, r0, #5
 801bf64:	ea4c 0c0b 	orr.w	ip, ip, fp
 801bf68:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bf6c:	ea4c 0c00 	orr.w	ip, ip, r0
 801bf70:	f824 cb02 	strh.w	ip, [r4], #2
 801bf74:	e7bf      	b.n	801bef6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801bf76:	f8be 3000 	ldrh.w	r3, [lr]
 801bf7a:	eba3 0308 	sub.w	r3, r3, r8
 801bf7e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bf82:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801bf86:	eba3 0308 	sub.w	r3, r3, r8
 801bf8a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801bf8e:	e7ae      	b.n	801beee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801bf90:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801bf94:	f8d9 0000 	ldr.w	r0, [r9]
 801bf98:	42ac      	cmp	r4, r5
 801bf9a:	6803      	ldr	r3, [r0, #0]
 801bf9c:	d20e      	bcs.n	801bfbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801bf9e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801bfa2:	4632      	mov	r2, r6
 801bfa4:	463b      	mov	r3, r7
 801bfa6:	4621      	mov	r1, r4
 801bfa8:	47c0      	blx	r8
 801bfaa:	f8ba 3000 	ldrh.w	r3, [sl]
 801bfae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bfb2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801bfb6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801bfba:	e7eb      	b.n	801bf94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801bfbc:	4b02      	ldr	r3, [pc, #8]	; (801bfc8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801bfbe:	6818      	ldr	r0, [r3, #0]
 801bfc0:	6803      	ldr	r3, [r0, #0]
 801bfc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bfc4:	4798      	blx	r3
 801bfc6:	e76c      	b.n	801bea2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801bfc8:	20012db4 	.word	0x20012db4
 801bfcc:	20012dae 	.word	0x20012dae

0801bfd0 <_ZN8touchgfx8LCD16bppD0Ev>:
 801bfd0:	b510      	push	{r4, lr}
 801bfd2:	2184      	movs	r1, #132	; 0x84
 801bfd4:	4604      	mov	r4, r0
 801bfd6:	f00d fe4a 	bl	8029c6e <_ZdlPvj>
 801bfda:	4620      	mov	r0, r4
 801bfdc:	bd10      	pop	{r4, pc}

0801bfde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801bfde:	b510      	push	{r4, lr}
 801bfe0:	2104      	movs	r1, #4
 801bfe2:	4604      	mov	r4, r0
 801bfe4:	f00d fe43 	bl	8029c6e <_ZdlPvj>
 801bfe8:	4620      	mov	r0, r4
 801bfea:	bd10      	pop	{r4, pc}

0801bfec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801bfec:	b510      	push	{r4, lr}
 801bfee:	2104      	movs	r1, #4
 801bff0:	4604      	mov	r4, r0
 801bff2:	f00d fe3c 	bl	8029c6e <_ZdlPvj>
 801bff6:	4620      	mov	r0, r4
 801bff8:	bd10      	pop	{r4, pc}

0801bffa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801bffa:	b510      	push	{r4, lr}
 801bffc:	f640 0144 	movw	r1, #2116	; 0x844
 801c000:	4604      	mov	r4, r0
 801c002:	f00d fe34 	bl	8029c6e <_ZdlPvj>
 801c006:	4620      	mov	r0, r4
 801c008:	bd10      	pop	{r4, pc}

0801c00a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c00a:	b510      	push	{r4, lr}
 801c00c:	2104      	movs	r1, #4
 801c00e:	4604      	mov	r4, r0
 801c010:	f00d fe2d 	bl	8029c6e <_ZdlPvj>
 801c014:	4620      	mov	r0, r4
 801c016:	bd10      	pop	{r4, pc}

0801c018 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c018:	b510      	push	{r4, lr}
 801c01a:	2104      	movs	r1, #4
 801c01c:	4604      	mov	r4, r0
 801c01e:	f00d fe26 	bl	8029c6e <_ZdlPvj>
 801c022:	4620      	mov	r0, r4
 801c024:	bd10      	pop	{r4, pc}

0801c026 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c026:	b510      	push	{r4, lr}
 801c028:	2104      	movs	r1, #4
 801c02a:	4604      	mov	r4, r0
 801c02c:	f00d fe1f 	bl	8029c6e <_ZdlPvj>
 801c030:	4620      	mov	r0, r4
 801c032:	bd10      	pop	{r4, pc}

0801c034 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c034:	b510      	push	{r4, lr}
 801c036:	2104      	movs	r1, #4
 801c038:	4604      	mov	r4, r0
 801c03a:	f00d fe18 	bl	8029c6e <_ZdlPvj>
 801c03e:	4620      	mov	r0, r4
 801c040:	bd10      	pop	{r4, pc}

0801c042 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c042:	b510      	push	{r4, lr}
 801c044:	2104      	movs	r1, #4
 801c046:	4604      	mov	r4, r0
 801c048:	f00d fe11 	bl	8029c6e <_ZdlPvj>
 801c04c:	4620      	mov	r0, r4
 801c04e:	bd10      	pop	{r4, pc}

0801c050 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801c050:	b510      	push	{r4, lr}
 801c052:	2104      	movs	r1, #4
 801c054:	4604      	mov	r4, r0
 801c056:	f00d fe0a 	bl	8029c6e <_ZdlPvj>
 801c05a:	4620      	mov	r0, r4
 801c05c:	bd10      	pop	{r4, pc}

0801c05e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c05e:	b510      	push	{r4, lr}
 801c060:	2104      	movs	r1, #4
 801c062:	4604      	mov	r4, r0
 801c064:	f00d fe03 	bl	8029c6e <_ZdlPvj>
 801c068:	4620      	mov	r0, r4
 801c06a:	bd10      	pop	{r4, pc}

0801c06c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801c06c:	b510      	push	{r4, lr}
 801c06e:	2104      	movs	r1, #4
 801c070:	4604      	mov	r4, r0
 801c072:	f00d fdfc 	bl	8029c6e <_ZdlPvj>
 801c076:	4620      	mov	r0, r4
 801c078:	bd10      	pop	{r4, pc}

0801c07a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c07a:	b510      	push	{r4, lr}
 801c07c:	2104      	movs	r1, #4
 801c07e:	4604      	mov	r4, r0
 801c080:	f00d fdf5 	bl	8029c6e <_ZdlPvj>
 801c084:	4620      	mov	r0, r4
 801c086:	bd10      	pop	{r4, pc}

0801c088 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c088:	b510      	push	{r4, lr}
 801c08a:	2104      	movs	r1, #4
 801c08c:	4604      	mov	r4, r0
 801c08e:	f00d fdee 	bl	8029c6e <_ZdlPvj>
 801c092:	4620      	mov	r0, r4
 801c094:	bd10      	pop	{r4, pc}

0801c096 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c096:	b510      	push	{r4, lr}
 801c098:	2104      	movs	r1, #4
 801c09a:	4604      	mov	r4, r0
 801c09c:	f00d fde7 	bl	8029c6e <_ZdlPvj>
 801c0a0:	4620      	mov	r0, r4
 801c0a2:	bd10      	pop	{r4, pc}

0801c0a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c0a4:	b510      	push	{r4, lr}
 801c0a6:	2104      	movs	r1, #4
 801c0a8:	4604      	mov	r4, r0
 801c0aa:	f00d fde0 	bl	8029c6e <_ZdlPvj>
 801c0ae:	4620      	mov	r0, r4
 801c0b0:	bd10      	pop	{r4, pc}

0801c0b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801c0b2:	b510      	push	{r4, lr}
 801c0b4:	2104      	movs	r1, #4
 801c0b6:	4604      	mov	r4, r0
 801c0b8:	f00d fdd9 	bl	8029c6e <_ZdlPvj>
 801c0bc:	4620      	mov	r0, r4
 801c0be:	bd10      	pop	{r4, pc}

0801c0c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801c0c0:	b510      	push	{r4, lr}
 801c0c2:	2104      	movs	r1, #4
 801c0c4:	4604      	mov	r4, r0
 801c0c6:	f00d fdd2 	bl	8029c6e <_ZdlPvj>
 801c0ca:	4620      	mov	r0, r4
 801c0cc:	bd10      	pop	{r4, pc}

0801c0ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c0ce:	b510      	push	{r4, lr}
 801c0d0:	2104      	movs	r1, #4
 801c0d2:	4604      	mov	r4, r0
 801c0d4:	f00d fdcb 	bl	8029c6e <_ZdlPvj>
 801c0d8:	4620      	mov	r0, r4
 801c0da:	bd10      	pop	{r4, pc}

0801c0dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c0dc:	b510      	push	{r4, lr}
 801c0de:	2104      	movs	r1, #4
 801c0e0:	4604      	mov	r4, r0
 801c0e2:	f00d fdc4 	bl	8029c6e <_ZdlPvj>
 801c0e6:	4620      	mov	r0, r4
 801c0e8:	bd10      	pop	{r4, pc}

0801c0ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801c0ea:	b510      	push	{r4, lr}
 801c0ec:	2104      	movs	r1, #4
 801c0ee:	4604      	mov	r4, r0
 801c0f0:	f00d fdbd 	bl	8029c6e <_ZdlPvj>
 801c0f4:	4620      	mov	r0, r4
 801c0f6:	bd10      	pop	{r4, pc}

0801c0f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801c0f8:	b510      	push	{r4, lr}
 801c0fa:	2104      	movs	r1, #4
 801c0fc:	4604      	mov	r4, r0
 801c0fe:	f00d fdb6 	bl	8029c6e <_ZdlPvj>
 801c102:	4620      	mov	r0, r4
 801c104:	bd10      	pop	{r4, pc}

0801c106 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c106:	b510      	push	{r4, lr}
 801c108:	2104      	movs	r1, #4
 801c10a:	4604      	mov	r4, r0
 801c10c:	f00d fdaf 	bl	8029c6e <_ZdlPvj>
 801c110:	4620      	mov	r0, r4
 801c112:	bd10      	pop	{r4, pc}

0801c114 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c114:	b510      	push	{r4, lr}
 801c116:	2104      	movs	r1, #4
 801c118:	4604      	mov	r4, r0
 801c11a:	f00d fda8 	bl	8029c6e <_ZdlPvj>
 801c11e:	4620      	mov	r0, r4
 801c120:	bd10      	pop	{r4, pc}

0801c122 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801c122:	b510      	push	{r4, lr}
 801c124:	2104      	movs	r1, #4
 801c126:	4604      	mov	r4, r0
 801c128:	f00d fda1 	bl	8029c6e <_ZdlPvj>
 801c12c:	4620      	mov	r0, r4
 801c12e:	bd10      	pop	{r4, pc}

0801c130 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801c130:	b510      	push	{r4, lr}
 801c132:	2104      	movs	r1, #4
 801c134:	4604      	mov	r4, r0
 801c136:	f00d fd9a 	bl	8029c6e <_ZdlPvj>
 801c13a:	4620      	mov	r0, r4
 801c13c:	bd10      	pop	{r4, pc}

0801c13e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801c13e:	b510      	push	{r4, lr}
 801c140:	2104      	movs	r1, #4
 801c142:	4604      	mov	r4, r0
 801c144:	f00d fd93 	bl	8029c6e <_ZdlPvj>
 801c148:	4620      	mov	r0, r4
 801c14a:	bd10      	pop	{r4, pc}

0801c14c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801c14c:	b510      	push	{r4, lr}
 801c14e:	2104      	movs	r1, #4
 801c150:	4604      	mov	r4, r0
 801c152:	f00d fd8c 	bl	8029c6e <_ZdlPvj>
 801c156:	4620      	mov	r0, r4
 801c158:	bd10      	pop	{r4, pc}

0801c15a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801c15a:	b510      	push	{r4, lr}
 801c15c:	2104      	movs	r1, #4
 801c15e:	4604      	mov	r4, r0
 801c160:	f00d fd85 	bl	8029c6e <_ZdlPvj>
 801c164:	4620      	mov	r0, r4
 801c166:	bd10      	pop	{r4, pc}

0801c168 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801c168:	b510      	push	{r4, lr}
 801c16a:	2104      	movs	r1, #4
 801c16c:	4604      	mov	r4, r0
 801c16e:	f00d fd7e 	bl	8029c6e <_ZdlPvj>
 801c172:	4620      	mov	r0, r4
 801c174:	bd10      	pop	{r4, pc}

0801c176 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801c176:	b510      	push	{r4, lr}
 801c178:	2104      	movs	r1, #4
 801c17a:	4604      	mov	r4, r0
 801c17c:	f00d fd77 	bl	8029c6e <_ZdlPvj>
 801c180:	4620      	mov	r0, r4
 801c182:	bd10      	pop	{r4, pc}

0801c184 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801c184:	b510      	push	{r4, lr}
 801c186:	2104      	movs	r1, #4
 801c188:	4604      	mov	r4, r0
 801c18a:	f00d fd70 	bl	8029c6e <_ZdlPvj>
 801c18e:	4620      	mov	r0, r4
 801c190:	bd10      	pop	{r4, pc}
	...

0801c194 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c198:	b08f      	sub	sp, #60	; 0x3c
 801c19a:	461c      	mov	r4, r3
 801c19c:	9205      	str	r2, [sp, #20]
 801c19e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c1a2:	9100      	str	r1, [sp, #0]
 801c1a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c1a6:	9201      	str	r2, [sp, #4]
 801c1a8:	2a00      	cmp	r2, #0
 801c1aa:	f000 8115 	beq.w	801c3d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801c1ae:	6820      	ldr	r0, [r4, #0]
 801c1b0:	6861      	ldr	r1, [r4, #4]
 801c1b2:	aa0a      	add	r2, sp, #40	; 0x28
 801c1b4:	c203      	stmia	r2!, {r0, r1}
 801c1b6:	6818      	ldr	r0, [r3, #0]
 801c1b8:	6859      	ldr	r1, [r3, #4]
 801c1ba:	aa0c      	add	r2, sp, #48	; 0x30
 801c1bc:	c203      	stmia	r2!, {r0, r1}
 801c1be:	a80a      	add	r0, sp, #40	; 0x28
 801c1c0:	f7f9 fb2a 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c1c4:	4621      	mov	r1, r4
 801c1c6:	a80c      	add	r0, sp, #48	; 0x30
 801c1c8:	f7f9 fb6a 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c1cc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c1d0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c1d4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c1d8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c1dc:	bfde      	ittt	le
 801c1de:	b2b3      	uxthle	r3, r6
 801c1e0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c1e4:	fb92 f3f3 	sdivle	r3, r2, r3
 801c1e8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c1ec:	bfc8      	it	gt
 801c1ee:	2301      	movgt	r3, #1
 801c1f0:	fb92 f1f3 	sdiv	r1, r2, r3
 801c1f4:	fa1f fc81 	uxth.w	ip, r1
 801c1f8:	fb0c 2413 	mls	r4, ip, r3, r2
 801c1fc:	fb14 f406 	smulbb	r4, r4, r6
 801c200:	441d      	add	r5, r3
 801c202:	4404      	add	r4, r0
 801c204:	4661      	mov	r1, ip
 801c206:	3d01      	subs	r5, #1
 801c208:	b2a4      	uxth	r4, r4
 801c20a:	fb95 f5f3 	sdiv	r5, r5, r3
 801c20e:	b131      	cbz	r1, 801c21e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801c210:	9b05      	ldr	r3, [sp, #20]
 801c212:	9900      	ldr	r1, [sp, #0]
 801c214:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c218:	ba1b      	rev	r3, r3
 801c21a:	4419      	add	r1, r3
 801c21c:	9100      	str	r1, [sp, #0]
 801c21e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c222:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801c226:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c22a:	4418      	add	r0, r3
 801c22c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c230:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c234:	441a      	add	r2, r3
 801c236:	4b6a      	ldr	r3, [pc, #424]	; (801c3e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c238:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c23c:	6818      	ldr	r0, [r3, #0]
 801c23e:	6803      	ldr	r3, [r0, #0]
 801c240:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c242:	4798      	blx	r3
 801c244:	4967      	ldr	r1, [pc, #412]	; (801c3e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801c246:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c24a:	880b      	ldrh	r3, [r1, #0]
 801c24c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c250:	9109      	str	r1, [sp, #36]	; 0x24
 801c252:	fb03 c202 	mla	r2, r3, r2, ip
 801c256:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c25a:	4373      	muls	r3, r6
 801c25c:	b2ad      	uxth	r5, r5
 801c25e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c262:	00ad      	lsls	r5, r5, #2
 801c264:	9306      	str	r3, [sp, #24]
 801c266:	1d2b      	adds	r3, r5, #4
 801c268:	9307      	str	r3, [sp, #28]
 801c26a:	9b01      	ldr	r3, [sp, #4]
 801c26c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c270:	9103      	str	r1, [sp, #12]
 801c272:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801c276:	2c00      	cmp	r4, #0
 801c278:	bf0c      	ite	eq
 801c27a:	46c6      	moveq	lr, r8
 801c27c:	f04f 0e00 	movne.w	lr, #0
 801c280:	2300      	movs	r3, #0
 801c282:	b292      	uxth	r2, r2
 801c284:	fa1f fe8e 	uxth.w	lr, lr
 801c288:	9302      	str	r3, [sp, #8]
 801c28a:	9204      	str	r2, [sp, #16]
 801c28c:	9a06      	ldr	r2, [sp, #24]
 801c28e:	4282      	cmp	r2, r0
 801c290:	f240 809d 	bls.w	801c3ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801c294:	b963      	cbnz	r3, 801c2b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c296:	9b00      	ldr	r3, [sp, #0]
 801c298:	781a      	ldrb	r2, [r3, #0]
 801c29a:	0993      	lsrs	r3, r2, #6
 801c29c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c2a0:	9202      	str	r2, [sp, #8]
 801c2a2:	1e5a      	subs	r2, r3, #1
 801c2a4:	2a02      	cmp	r2, #2
 801c2a6:	d815      	bhi.n	801c2d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801c2a8:	9a00      	ldr	r2, [sp, #0]
 801c2aa:	3201      	adds	r2, #1
 801c2ac:	9200      	str	r2, [sp, #0]
 801c2ae:	b29b      	uxth	r3, r3
 801c2b0:	b1b4      	cbz	r4, 801c2e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801c2b2:	429c      	cmp	r4, r3
 801c2b4:	bf95      	itete	ls
 801c2b6:	1b1c      	subls	r4, r3, r4
 801c2b8:	1ae4      	subhi	r4, r4, r3
 801c2ba:	fa1f fa84 	uxthls.w	sl, r4
 801c2be:	b2a4      	uxthhi	r4, r4
 801c2c0:	bf87      	ittee	hi
 801c2c2:	4671      	movhi	r1, lr
 801c2c4:	f04f 0a00 	movhi.w	sl, #0
 801c2c8:	fa1f f188 	uxthls.w	r1, r8
 801c2cc:	2400      	movls	r4, #0
 801c2ce:	4653      	mov	r3, sl
 801c2d0:	468e      	mov	lr, r1
 801c2d2:	e7db      	b.n	801c28c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801c2d4:	9a00      	ldr	r2, [sp, #0]
 801c2d6:	9b00      	ldr	r3, [sp, #0]
 801c2d8:	3202      	adds	r2, #2
 801c2da:	785b      	ldrb	r3, [r3, #1]
 801c2dc:	9200      	str	r2, [sp, #0]
 801c2de:	e7e7      	b.n	801c2b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801c2e0:	2202      	movs	r2, #2
 801c2e2:	4615      	mov	r5, r2
 801c2e4:	9907      	ldr	r1, [sp, #28]
 801c2e6:	9a02      	ldr	r2, [sp, #8]
 801c2e8:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c2ec:	9905      	ldr	r1, [sp, #20]
 801c2ee:	4573      	cmp	r3, lr
 801c2f0:	f831 c002 	ldrh.w	ip, [r1, r2]
 801c2f4:	9a01      	ldr	r2, [sp, #4]
 801c2f6:	bf2b      	itete	cs
 801c2f8:	eba3 0a0e 	subcs.w	sl, r3, lr
 801c2fc:	ebae 0103 	subcc.w	r1, lr, r3
 801c300:	46f1      	movcs	r9, lr
 801c302:	4699      	movcc	r9, r3
 801c304:	bf27      	ittee	cs
 801c306:	fa1f fa8a 	uxthcs.w	sl, sl
 801c30a:	4621      	movcs	r1, r4
 801c30c:	b289      	uxthcc	r1, r1
 801c30e:	46a2      	movcc	sl, r4
 801c310:	2aff      	cmp	r2, #255	; 0xff
 801c312:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c316:	d105      	bne.n	801c324 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c318:	4481      	add	r9, r0
 801c31a:	4581      	cmp	r9, r0
 801c31c:	d045      	beq.n	801c3aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c31e:	f820 cb02 	strh.w	ip, [r0], #2
 801c322:	e7fa      	b.n	801c31a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801c324:	9d03      	ldr	r5, [sp, #12]
 801c326:	ea4f 222c 	mov.w	r2, ip, asr #8
 801c32a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801c32e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c332:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c336:	436a      	muls	r2, r5
 801c338:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801c33c:	fa5f fc8c 	uxtb.w	ip, ip
 801c340:	9208      	str	r2, [sp, #32]
 801c342:	fb0b fb05 	mul.w	fp, fp, r5
 801c346:	fb0c fc05 	mul.w	ip, ip, r5
 801c34a:	4481      	add	r9, r0
 801c34c:	4581      	cmp	r9, r0
 801c34e:	d02c      	beq.n	801c3aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801c350:	8802      	ldrh	r2, [r0, #0]
 801c352:	9d04      	ldr	r5, [sp, #16]
 801c354:	9f04      	ldr	r7, [sp, #16]
 801c356:	1216      	asrs	r6, r2, #8
 801c358:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c35c:	fb16 f605 	smulbb	r6, r6, r5
 801c360:	9d08      	ldr	r5, [sp, #32]
 801c362:	442e      	add	r6, r5
 801c364:	10d5      	asrs	r5, r2, #3
 801c366:	00d2      	lsls	r2, r2, #3
 801c368:	b2d2      	uxtb	r2, r2
 801c36a:	fb12 f207 	smulbb	r2, r2, r7
 801c36e:	b2b6      	uxth	r6, r6
 801c370:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c374:	4462      	add	r2, ip
 801c376:	fb15 f507 	smulbb	r5, r5, r7
 801c37a:	b292      	uxth	r2, r2
 801c37c:	1c77      	adds	r7, r6, #1
 801c37e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801c382:	1c57      	adds	r7, r2, #1
 801c384:	445d      	add	r5, fp
 801c386:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801c38a:	b2ad      	uxth	r5, r5
 801c38c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c390:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c394:	4316      	orrs	r6, r2
 801c396:	1c6a      	adds	r2, r5, #1
 801c398:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c39c:	096d      	lsrs	r5, r5, #5
 801c39e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c3a2:	432e      	orrs	r6, r5
 801c3a4:	f820 6b02 	strh.w	r6, [r0], #2
 801c3a8:	e7d0      	b.n	801c34c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801c3aa:	4573      	cmp	r3, lr
 801c3ac:	d38f      	bcc.n	801c2ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c3ae:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801c3b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c3b4:	fa1f f188 	uxth.w	r1, r8
 801c3b8:	1a64      	subs	r4, r4, r1
 801c3ba:	881b      	ldrh	r3, [r3, #0]
 801c3bc:	b2a4      	uxth	r4, r4
 801c3be:	2c00      	cmp	r4, #0
 801c3c0:	eba3 0308 	sub.w	r3, r3, r8
 801c3c4:	bf18      	it	ne
 801c3c6:	2100      	movne	r1, #0
 801c3c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c3cc:	e77f      	b.n	801c2ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801c3ce:	4b04      	ldr	r3, [pc, #16]	; (801c3e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c3d0:	6818      	ldr	r0, [r3, #0]
 801c3d2:	6803      	ldr	r3, [r0, #0]
 801c3d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c3d6:	4798      	blx	r3
 801c3d8:	b00f      	add	sp, #60	; 0x3c
 801c3da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c3de:	bf00      	nop
 801c3e0:	20012db4 	.word	0x20012db4
 801c3e4:	20012dae 	.word	0x20012dae

0801c3e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c3e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c3ec:	b09f      	sub	sp, #124	; 0x7c
 801c3ee:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c3f2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c3f6:	9209      	str	r2, [sp, #36]	; 0x24
 801c3f8:	461d      	mov	r5, r3
 801c3fa:	4604      	mov	r4, r0
 801c3fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c3fe:	2a00      	cmp	r2, #0
 801c400:	f000 81eb 	beq.w	801c7da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c404:	6828      	ldr	r0, [r5, #0]
 801c406:	6869      	ldr	r1, [r5, #4]
 801c408:	aa1a      	add	r2, sp, #104	; 0x68
 801c40a:	c203      	stmia	r2!, {r0, r1}
 801c40c:	6818      	ldr	r0, [r3, #0]
 801c40e:	6859      	ldr	r1, [r3, #4]
 801c410:	aa1c      	add	r2, sp, #112	; 0x70
 801c412:	c203      	stmia	r2!, {r0, r1}
 801c414:	a81a      	add	r0, sp, #104	; 0x68
 801c416:	f7f9 f9ff 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c41a:	4629      	mov	r1, r5
 801c41c:	a81c      	add	r0, sp, #112	; 0x70
 801c41e:	f7f9 fa3f 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c422:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c426:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801c42a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801c42e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c432:	bfd7      	itett	le
 801c434:	b29a      	uxthle	r2, r3
 801c436:	2201      	movgt	r2, #1
 801c438:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c43c:	fb91 f2f2 	sdivle	r2, r1, r2
 801c440:	9202      	str	r2, [sp, #8]
 801c442:	9802      	ldr	r0, [sp, #8]
 801c444:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c448:	fb92 f0f0 	sdiv	r0, r2, r0
 801c44c:	b280      	uxth	r0, r0
 801c44e:	9010      	str	r0, [sp, #64]	; 0x40
 801c450:	9902      	ldr	r1, [sp, #8]
 801c452:	9802      	ldr	r0, [sp, #8]
 801c454:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c456:	4488      	add	r8, r1
 801c458:	fb05 2510 	mls	r5, r5, r0, r2
 801c45c:	fb15 f503 	smulbb	r5, r5, r3
 801c460:	f108 38ff 	add.w	r8, r8, #4294967295
 801c464:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c468:	fb98 f8f1 	sdiv	r8, r8, r1
 801c46c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c470:	440d      	add	r5, r1
 801c472:	4419      	add	r1, r3
 801c474:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c478:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c47c:	441a      	add	r2, r3
 801c47e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c482:	9304      	str	r3, [sp, #16]
 801c484:	4b95      	ldr	r3, [pc, #596]	; (801c6dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c486:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c48a:	6818      	ldr	r0, [r3, #0]
 801c48c:	6803      	ldr	r3, [r0, #0]
 801c48e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c490:	4798      	blx	r3
 801c492:	4b93      	ldr	r3, [pc, #588]	; (801c6e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c494:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c498:	881a      	ldrh	r2, [r3, #0]
 801c49a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c49e:	9318      	str	r3, [sp, #96]	; 0x60
 801c4a0:	fb02 7101 	mla	r1, r2, r1, r7
 801c4a4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c4a8:	4356      	muls	r6, r2
 801c4aa:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801c4ae:	f108 0801 	add.w	r8, r8, #1
 801c4b2:	920a      	str	r2, [sp, #40]	; 0x28
 801c4b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c4b6:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801c4ba:	930f      	str	r3, [sp, #60]	; 0x3c
 801c4bc:	fa1f f888 	uxth.w	r8, r8
 801c4c0:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801c4c4:	f108 0204 	add.w	r2, r8, #4
 801c4c8:	9211      	str	r2, [sp, #68]	; 0x44
 801c4ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c4cc:	4b85      	ldr	r3, [pc, #532]	; (801c6e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c4ce:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801c4d2:	b2ad      	uxth	r5, r5
 801c4d4:	9215      	str	r2, [sp, #84]	; 0x54
 801c4d6:	2d00      	cmp	r5, #0
 801c4d8:	9a04      	ldr	r2, [sp, #16]
 801c4da:	f04f 0100 	mov.w	r1, #0
 801c4de:	bf18      	it	ne
 801c4e0:	2200      	movne	r2, #0
 801c4e2:	1b1b      	subs	r3, r3, r4
 801c4e4:	b292      	uxth	r2, r2
 801c4e6:	910d      	str	r1, [sp, #52]	; 0x34
 801c4e8:	9319      	str	r3, [sp, #100]	; 0x64
 801c4ea:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c4ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c4ee:	fa11 f383 	uxtah	r3, r1, r3
 801c4f2:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c4f4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c4f8:	3304      	adds	r3, #4
 801c4fa:	9306      	str	r3, [sp, #24]
 801c4fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c4fe:	4283      	cmp	r3, r0
 801c500:	f240 8166 	bls.w	801c7d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801c504:	9902      	ldr	r1, [sp, #8]
 801c506:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c50a:	fbb5 f3f3 	udiv	r3, r5, r3
 801c50e:	1acb      	subs	r3, r1, r3
 801c510:	b29b      	uxth	r3, r3
 801c512:	9316      	str	r3, [sp, #88]	; 0x58
 801c514:	9b06      	ldr	r3, [sp, #24]
 801c516:	9e06      	ldr	r6, [sp, #24]
 801c518:	7859      	ldrb	r1, [r3, #1]
 801c51a:	789b      	ldrb	r3, [r3, #2]
 801c51c:	7836      	ldrb	r6, [r6, #0]
 801c51e:	9612      	str	r6, [sp, #72]	; 0x48
 801c520:	021b      	lsls	r3, r3, #8
 801c522:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801c526:	9906      	ldr	r1, [sp, #24]
 801c528:	78c9      	ldrb	r1, [r1, #3]
 801c52a:	430b      	orrs	r3, r1
 801c52c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801c52e:	3601      	adds	r6, #1
 801c530:	4419      	add	r1, r3
 801c532:	9605      	str	r6, [sp, #20]
 801c534:	1c4e      	adds	r6, r1, #1
 801c536:	9603      	str	r6, [sp, #12]
 801c538:	7849      	ldrb	r1, [r1, #1]
 801c53a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c53c:	0209      	lsls	r1, r1, #8
 801c53e:	5cf3      	ldrb	r3, [r6, r3]
 801c540:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801c544:	4319      	orrs	r1, r3
 801c546:	b28b      	uxth	r3, r1
 801c548:	930c      	str	r3, [sp, #48]	; 0x30
 801c54a:	2300      	movs	r3, #0
 801c54c:	f04f 0a01 	mov.w	sl, #1
 801c550:	9307      	str	r3, [sp, #28]
 801c552:	469c      	mov	ip, r3
 801c554:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c558:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c55c:	46d3      	mov	fp, sl
 801c55e:	4657      	mov	r7, sl
 801c560:	930e      	str	r3, [sp, #56]	; 0x38
 801c562:	2d00      	cmp	r5, #0
 801c564:	d07e      	beq.n	801c664 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801c566:	42af      	cmp	r7, r5
 801c568:	d26e      	bcs.n	801c648 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801c56a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c56c:	9201      	str	r2, [sp, #4]
 801c56e:	1bed      	subs	r5, r5, r7
 801c570:	4283      	cmp	r3, r0
 801c572:	b2ad      	uxth	r5, r5
 801c574:	d802      	bhi.n	801c57c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801c576:	e073      	b.n	801c660 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801c578:	2b00      	cmp	r3, #0
 801c57a:	d15f      	bne.n	801c63c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801c57c:	9b03      	ldr	r3, [sp, #12]
 801c57e:	785b      	ldrb	r3, [r3, #1]
 801c580:	f1cb 0207 	rsb	r2, fp, #7
 801c584:	4093      	lsls	r3, r2
 801c586:	005b      	lsls	r3, r3, #1
 801c588:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c58c:	9b03      	ldr	r3, [sp, #12]
 801c58e:	781b      	ldrb	r3, [r3, #0]
 801c590:	fa43 f30b 	asr.w	r3, r3, fp
 801c594:	b2db      	uxtb	r3, r3
 801c596:	4313      	orrs	r3, r2
 801c598:	f10b 0201 	add.w	r2, fp, #1
 801c59c:	fa5f fb82 	uxtb.w	fp, r2
 801c5a0:	9a03      	ldr	r2, [sp, #12]
 801c5a2:	f1bb 0f08 	cmp.w	fp, #8
 801c5a6:	bf15      	itete	ne
 801c5a8:	3201      	addne	r2, #1
 801c5aa:	3202      	addeq	r2, #2
 801c5ac:	9203      	strne	r2, [sp, #12]
 801c5ae:	9203      	streq	r2, [sp, #12]
 801c5b0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c5b2:	b29f      	uxth	r7, r3
 801c5b4:	bf08      	it	eq
 801c5b6:	f04f 0b00 	moveq.w	fp, #0
 801c5ba:	42ba      	cmp	r2, r7
 801c5bc:	d309      	bcc.n	801c5d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c5be:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c5c2:	2301      	movs	r3, #1
 801c5c4:	9a05      	ldr	r2, [sp, #20]
 801c5c6:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801c5ca:	d30e      	bcc.n	801c5ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801c5cc:	469a      	mov	sl, r3
 801c5ce:	2600      	movs	r6, #0
 801c5d0:	e035      	b.n	801c63e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801c5d2:	9b05      	ldr	r3, [sp, #20]
 801c5d4:	429f      	cmp	r7, r3
 801c5d6:	d318      	bcc.n	801c60a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801c5d8:	eb04 030a 	add.w	r3, r4, sl
 801c5dc:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801c5e0:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801c5e4:	f10a 0301 	add.w	r3, sl, #1
 801c5e8:	b29b      	uxth	r3, r3
 801c5ea:	9a05      	ldr	r2, [sp, #20]
 801c5ec:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c5f0:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c5f2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c5f6:	7116      	strb	r6, [r2, #4]
 801c5f8:	f10a 0601 	add.w	r6, sl, #1
 801c5fc:	80d1      	strh	r1, [r2, #6]
 801c5fe:	7156      	strb	r6, [r2, #5]
 801c600:	9a05      	ldr	r2, [sp, #20]
 801c602:	3201      	adds	r2, #1
 801c604:	b292      	uxth	r2, r2
 801c606:	9205      	str	r2, [sp, #20]
 801c608:	e7e0      	b.n	801c5cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801c60a:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801c60e:	463a      	mov	r2, r7
 801c610:	795b      	ldrb	r3, [r3, #5]
 801c612:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c616:	4426      	add	r6, r4
 801c618:	9919      	ldr	r1, [sp, #100]	; 0x64
 801c61a:	eb01 0c06 	add.w	ip, r1, r6
 801c61e:	f1bc 0f00 	cmp.w	ip, #0
 801c622:	dd07      	ble.n	801c634 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801c624:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c628:	f892 c004 	ldrb.w	ip, [r2, #4]
 801c62c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801c630:	88d2      	ldrh	r2, [r2, #6]
 801c632:	e7f1      	b.n	801c618 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801c634:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c638:	b29b      	uxth	r3, r3
 801c63a:	e7c3      	b.n	801c5c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801c63c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801c63e:	970c      	str	r7, [sp, #48]	; 0x30
 801c640:	9a01      	ldr	r2, [sp, #4]
 801c642:	46b4      	mov	ip, r6
 801c644:	461f      	mov	r7, r3
 801c646:	e78c      	b.n	801c562 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801c648:	1b7b      	subs	r3, r7, r5
 801c64a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c64e:	9201      	str	r2, [sp, #4]
 801c650:	eb0c 0605 	add.w	r6, ip, r5
 801c654:	b29b      	uxth	r3, r3
 801c656:	b2b6      	uxth	r6, r6
 801c658:	2500      	movs	r5, #0
 801c65a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c65c:	4282      	cmp	r2, r0
 801c65e:	d88b      	bhi.n	801c578 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801c660:	9a01      	ldr	r2, [sp, #4]
 801c662:	e74b      	b.n	801c4fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801c664:	4297      	cmp	r7, r2
 801c666:	d332      	bcc.n	801c6ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801c668:	1abb      	subs	r3, r7, r2
 801c66a:	b29b      	uxth	r3, r3
 801c66c:	9208      	str	r2, [sp, #32]
 801c66e:	9501      	str	r5, [sp, #4]
 801c670:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c672:	29ff      	cmp	r1, #255	; 0xff
 801c674:	9908      	ldr	r1, [sp, #32]
 801c676:	eb0c 0601 	add.w	r6, ip, r1
 801c67a:	d135      	bne.n	801c6e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801c67c:	f1a0 0e02 	sub.w	lr, r0, #2
 801c680:	b2b6      	uxth	r6, r6
 801c682:	45b4      	cmp	ip, r6
 801c684:	f040 808c 	bne.w	801c7a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801c688:	9908      	ldr	r1, [sp, #32]
 801c68a:	4297      	cmp	r7, r2
 801c68c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c690:	d3e2      	bcc.n	801c658 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801c692:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c694:	9904      	ldr	r1, [sp, #16]
 801c696:	8812      	ldrh	r2, [r2, #0]
 801c698:	1a52      	subs	r2, r2, r1
 801c69a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c69e:	9a07      	ldr	r2, [sp, #28]
 801c6a0:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c6a2:	3201      	adds	r2, #1
 801c6a4:	428a      	cmp	r2, r1
 801c6a6:	9207      	str	r2, [sp, #28]
 801c6a8:	f040 8087 	bne.w	801c7ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c6ac:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c6b0:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801c6b4:	9b04      	ldr	r3, [sp, #16]
 801c6b6:	1bed      	subs	r5, r5, r7
 801c6b8:	b2ad      	uxth	r5, r5
 801c6ba:	2d00      	cmp	r5, #0
 801c6bc:	bf08      	it	eq
 801c6be:	461a      	moveq	r2, r3
 801c6c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c6c2:	bf18      	it	ne
 801c6c4:	2200      	movne	r2, #0
 801c6c6:	3301      	adds	r3, #1
 801c6c8:	930d      	str	r3, [sp, #52]	; 0x34
 801c6ca:	b292      	uxth	r2, r2
 801c6cc:	e70d      	b.n	801c4ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801c6ce:	1bd1      	subs	r1, r2, r7
 801c6d0:	b28b      	uxth	r3, r1
 801c6d2:	9301      	str	r3, [sp, #4]
 801c6d4:	9708      	str	r7, [sp, #32]
 801c6d6:	462b      	mov	r3, r5
 801c6d8:	e7ca      	b.n	801c670 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801c6da:	bf00      	nop
 801c6dc:	20012db4 	.word	0x20012db4
 801c6e0:	20012dae 	.word	0x20012dae
 801c6e4:	fffff7fb 	.word	0xfffff7fb
 801c6e8:	b2b6      	uxth	r6, r6
 801c6ea:	900b      	str	r0, [sp, #44]	; 0x2c
 801c6ec:	45b4      	cmp	ip, r6
 801c6ee:	d0cb      	beq.n	801c688 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801c6f0:	f10c 0101 	add.w	r1, ip, #1
 801c6f4:	44a4      	add	ip, r4
 801c6f6:	9117      	str	r1, [sp, #92]	; 0x5c
 801c6f8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c6fc:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c6fe:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c702:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c704:	f8b1 c000 	ldrh.w	ip, [r1]
 801c708:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c70a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801c70e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c712:	fb1e fe01 	smulbb	lr, lr, r1
 801c716:	ea4f 2825 	mov.w	r8, r5, asr #8
 801c71a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c71c:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801c720:	fb08 e801 	mla	r8, r8, r1, lr
 801c724:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801c728:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c72a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c72e:	fb19 f901 	smulbb	r9, r9, r1
 801c732:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801c736:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c738:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801c73c:	fb0e 9e01 	mla	lr, lr, r1, r9
 801c740:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c744:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c746:	fa5f fc8c 	uxtb.w	ip, ip
 801c74a:	fb1c fc01 	smulbb	ip, ip, r1
 801c74e:	00ed      	lsls	r5, r5, #3
 801c750:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c752:	b2ed      	uxtb	r5, r5
 801c754:	fb05 c501 	mla	r5, r5, r1, ip
 801c758:	fa1f f888 	uxth.w	r8, r8
 801c75c:	fa1f fe8e 	uxth.w	lr, lr
 801c760:	b2ad      	uxth	r5, r5
 801c762:	f108 0c01 	add.w	ip, r8, #1
 801c766:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801c76a:	f10e 0901 	add.w	r9, lr, #1
 801c76e:	f105 0c01 	add.w	ip, r5, #1
 801c772:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801c776:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801c77a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c77e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801c782:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c786:	ea4c 0808 	orr.w	r8, ip, r8
 801c78a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c78c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801c790:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c794:	ea48 0809 	orr.w	r8, r8, r9
 801c798:	f821 8b02 	strh.w	r8, [r1], #2
 801c79c:	910b      	str	r1, [sp, #44]	; 0x2c
 801c79e:	e7a5      	b.n	801c6ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801c7a0:	f10c 0801 	add.w	r8, ip, #1
 801c7a4:	44a4      	add	ip, r4
 801c7a6:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c7a8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801c7ac:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c7b0:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801c7b4:	fa1f fc88 	uxth.w	ip, r8
 801c7b8:	e763      	b.n	801c682 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801c7ba:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c7be:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c7c2:	1aad      	subs	r5, r5, r2
 801c7c4:	b2ad      	uxth	r5, r5
 801c7c6:	2d00      	cmp	r5, #0
 801c7c8:	bf18      	it	ne
 801c7ca:	2200      	movne	r2, #0
 801c7cc:	9201      	str	r2, [sp, #4]
 801c7ce:	e744      	b.n	801c65a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801c7d0:	4b03      	ldr	r3, [pc, #12]	; (801c7e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801c7d2:	6818      	ldr	r0, [r3, #0]
 801c7d4:	6803      	ldr	r3, [r0, #0]
 801c7d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c7d8:	4798      	blx	r3
 801c7da:	b01f      	add	sp, #124	; 0x7c
 801c7dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c7e0:	20012db4 	.word	0x20012db4

0801c7e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c7e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7e8:	b08f      	sub	sp, #60	; 0x3c
 801c7ea:	461c      	mov	r4, r3
 801c7ec:	9203      	str	r2, [sp, #12]
 801c7ee:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c7f2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c7f4:	9202      	str	r2, [sp, #8]
 801c7f6:	460f      	mov	r7, r1
 801c7f8:	2a00      	cmp	r2, #0
 801c7fa:	f000 8128 	beq.w	801ca4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801c7fe:	6820      	ldr	r0, [r4, #0]
 801c800:	6861      	ldr	r1, [r4, #4]
 801c802:	aa0a      	add	r2, sp, #40	; 0x28
 801c804:	c203      	stmia	r2!, {r0, r1}
 801c806:	6818      	ldr	r0, [r3, #0]
 801c808:	6859      	ldr	r1, [r3, #4]
 801c80a:	aa0c      	add	r2, sp, #48	; 0x30
 801c80c:	c203      	stmia	r2!, {r0, r1}
 801c80e:	a80a      	add	r0, sp, #40	; 0x28
 801c810:	f7f9 f802 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c814:	4621      	mov	r1, r4
 801c816:	a80c      	add	r0, sp, #48	; 0x30
 801c818:	f7f9 f842 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c81c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c820:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801c824:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801c828:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801c82c:	bfde      	ittt	le
 801c82e:	b2b3      	uxthle	r3, r6
 801c830:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801c834:	fb92 f3f3 	sdivle	r3, r2, r3
 801c838:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801c83c:	bfc8      	it	gt
 801c83e:	2301      	movgt	r3, #1
 801c840:	fb92 f1f3 	sdiv	r1, r2, r3
 801c844:	fa1f fc81 	uxth.w	ip, r1
 801c848:	fb0c 2413 	mls	r4, ip, r3, r2
 801c84c:	fb14 f406 	smulbb	r4, r4, r6
 801c850:	441d      	add	r5, r3
 801c852:	4404      	add	r4, r0
 801c854:	4661      	mov	r1, ip
 801c856:	3d01      	subs	r5, #1
 801c858:	b2a4      	uxth	r4, r4
 801c85a:	fb95 f5f3 	sdiv	r5, r5, r3
 801c85e:	b121      	cbz	r1, 801c86a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801c860:	9b03      	ldr	r3, [sp, #12]
 801c862:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c866:	ba1b      	rev	r3, r3
 801c868:	441f      	add	r7, r3
 801c86a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c86e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801c872:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801c876:	4418      	add	r0, r3
 801c878:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801c87c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801c880:	441a      	add	r2, r3
 801c882:	4b74      	ldr	r3, [pc, #464]	; (801ca54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801c884:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801c888:	6818      	ldr	r0, [r3, #0]
 801c88a:	6803      	ldr	r3, [r0, #0]
 801c88c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c88e:	4798      	blx	r3
 801c890:	4a71      	ldr	r2, [pc, #452]	; (801ca58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801c892:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801c896:	8813      	ldrh	r3, [r2, #0]
 801c898:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801c89c:	9209      	str	r2, [sp, #36]	; 0x24
 801c89e:	fb03 c101 	mla	r1, r3, r1, ip
 801c8a2:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c8a6:	4373      	muls	r3, r6
 801c8a8:	b2ad      	uxth	r5, r5
 801c8aa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c8ae:	00ad      	lsls	r5, r5, #2
 801c8b0:	2c00      	cmp	r4, #0
 801c8b2:	9304      	str	r3, [sp, #16]
 801c8b4:	f105 0304 	add.w	r3, r5, #4
 801c8b8:	9305      	str	r3, [sp, #20]
 801c8ba:	bf0c      	ite	eq
 801c8bc:	46c8      	moveq	r8, r9
 801c8be:	f04f 0800 	movne.w	r8, #0
 801c8c2:	2300      	movs	r3, #0
 801c8c4:	fa1f f888 	uxth.w	r8, r8
 801c8c8:	9301      	str	r3, [sp, #4]
 801c8ca:	9a04      	ldr	r2, [sp, #16]
 801c8cc:	4282      	cmp	r2, r0
 801c8ce:	f240 80b9 	bls.w	801ca44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801c8d2:	b95b      	cbnz	r3, 801c8ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801c8d4:	783a      	ldrb	r2, [r7, #0]
 801c8d6:	0993      	lsrs	r3, r2, #6
 801c8d8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801c8dc:	9201      	str	r2, [sp, #4]
 801c8de:	1e5a      	subs	r2, r3, #1
 801c8e0:	2a02      	cmp	r2, #2
 801c8e2:	bf8d      	iteet	hi
 801c8e4:	787b      	ldrbhi	r3, [r7, #1]
 801c8e6:	3701      	addls	r7, #1
 801c8e8:	b29b      	uxthls	r3, r3
 801c8ea:	3702      	addhi	r7, #2
 801c8ec:	b184      	cbz	r4, 801c910 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801c8ee:	429c      	cmp	r4, r3
 801c8f0:	bf95      	itete	ls
 801c8f2:	1b1c      	subls	r4, r3, r4
 801c8f4:	1ae4      	subhi	r4, r4, r3
 801c8f6:	fa1f fa84 	uxthls.w	sl, r4
 801c8fa:	b2a4      	uxthhi	r4, r4
 801c8fc:	bf87      	ittee	hi
 801c8fe:	46c4      	movhi	ip, r8
 801c900:	f04f 0a00 	movhi.w	sl, #0
 801c904:	fa1f fc89 	uxthls.w	ip, r9
 801c908:	2400      	movls	r4, #0
 801c90a:	4653      	mov	r3, sl
 801c90c:	46e0      	mov	r8, ip
 801c90e:	e7dc      	b.n	801c8ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801c910:	2204      	movs	r2, #4
 801c912:	4615      	mov	r5, r2
 801c914:	9905      	ldr	r1, [sp, #20]
 801c916:	9a01      	ldr	r2, [sp, #4]
 801c918:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c91c:	9903      	ldr	r1, [sp, #12]
 801c91e:	588a      	ldr	r2, [r1, r2]
 801c920:	4543      	cmp	r3, r8
 801c922:	bf27      	ittee	cs
 801c924:	eba3 0a08 	subcs.w	sl, r3, r8
 801c928:	46c6      	movcs	lr, r8
 801c92a:	eba8 0c03 	subcc.w	ip, r8, r3
 801c92e:	469e      	movcc	lr, r3
 801c930:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801c934:	bf27      	ittee	cs
 801c936:	fa1f fa8a 	uxthcs.w	sl, sl
 801c93a:	46a4      	movcs	ip, r4
 801c93c:	fa1f fc8c 	uxthcc.w	ip, ip
 801c940:	46a2      	movcc	sl, r4
 801c942:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801c946:	2900      	cmp	r1, #0
 801c948:	d066      	beq.n	801ca18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801c94a:	29ff      	cmp	r1, #255	; 0xff
 801c94c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801c950:	d114      	bne.n	801c97c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801c952:	9d02      	ldr	r5, [sp, #8]
 801c954:	2dff      	cmp	r5, #255	; 0xff
 801c956:	d111      	bne.n	801c97c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801c958:	0951      	lsrs	r1, r2, #5
 801c95a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c95e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c962:	f026 0607 	bic.w	r6, r6, #7
 801c966:	430e      	orrs	r6, r1
 801c968:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c96c:	4316      	orrs	r6, r2
 801c96e:	b2b6      	uxth	r6, r6
 801c970:	4486      	add	lr, r0
 801c972:	4586      	cmp	lr, r0
 801c974:	d051      	beq.n	801ca1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c976:	f820 6b02 	strh.w	r6, [r0], #2
 801c97a:	e7fa      	b.n	801c972 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801c97c:	9d02      	ldr	r5, [sp, #8]
 801c97e:	4369      	muls	r1, r5
 801c980:	1c4d      	adds	r5, r1, #1
 801c982:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801c986:	122d      	asrs	r5, r5, #8
 801c988:	ea6f 0b05 	mvn.w	fp, r5
 801c98c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c990:	b2ad      	uxth	r5, r5
 801c992:	b2f6      	uxtb	r6, r6
 801c994:	b2d2      	uxtb	r2, r2
 801c996:	fb11 f105 	smulbb	r1, r1, r5
 801c99a:	fb16 f605 	smulbb	r6, r6, r5
 801c99e:	fb12 f205 	smulbb	r2, r2, r5
 801c9a2:	b289      	uxth	r1, r1
 801c9a4:	b2b6      	uxth	r6, r6
 801c9a6:	b292      	uxth	r2, r2
 801c9a8:	9106      	str	r1, [sp, #24]
 801c9aa:	9607      	str	r6, [sp, #28]
 801c9ac:	9208      	str	r2, [sp, #32]
 801c9ae:	4486      	add	lr, r0
 801c9b0:	fa5f fb8b 	uxtb.w	fp, fp
 801c9b4:	4586      	cmp	lr, r0
 801c9b6:	d030      	beq.n	801ca1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c9b8:	8802      	ldrh	r2, [r0, #0]
 801c9ba:	9906      	ldr	r1, [sp, #24]
 801c9bc:	1216      	asrs	r6, r2, #8
 801c9be:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c9c2:	10d5      	asrs	r5, r2, #3
 801c9c4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c9c8:	fb06 160b 	mla	r6, r6, fp, r1
 801c9cc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c9d0:	9907      	ldr	r1, [sp, #28]
 801c9d2:	00d2      	lsls	r2, r2, #3
 801c9d4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c9d8:	fb05 150b 	mla	r5, r5, fp, r1
 801c9dc:	b2d2      	uxtb	r2, r2
 801c9de:	9908      	ldr	r1, [sp, #32]
 801c9e0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c9e4:	b2b6      	uxth	r6, r6
 801c9e6:	fb02 120b 	mla	r2, r2, fp, r1
 801c9ea:	b292      	uxth	r2, r2
 801c9ec:	1c71      	adds	r1, r6, #1
 801c9ee:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801c9f2:	1c51      	adds	r1, r2, #1
 801c9f4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c9f8:	b2ad      	uxth	r5, r5
 801c9fa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c9fe:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ca02:	4316      	orrs	r6, r2
 801ca04:	1c6a      	adds	r2, r5, #1
 801ca06:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801ca0a:	096d      	lsrs	r5, r5, #5
 801ca0c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ca10:	432e      	orrs	r6, r5
 801ca12:	f820 6b02 	strh.w	r6, [r0], #2
 801ca16:	e7cd      	b.n	801c9b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801ca18:	4470      	add	r0, lr
 801ca1a:	4543      	cmp	r3, r8
 801ca1c:	f4ff af75 	bcc.w	801c90a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ca20:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801ca24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ca26:	fa1f fc89 	uxth.w	ip, r9
 801ca2a:	eba4 040c 	sub.w	r4, r4, ip
 801ca2e:	881b      	ldrh	r3, [r3, #0]
 801ca30:	b2a4      	uxth	r4, r4
 801ca32:	2c00      	cmp	r4, #0
 801ca34:	eba3 0309 	sub.w	r3, r3, r9
 801ca38:	bf18      	it	ne
 801ca3a:	f04f 0c00 	movne.w	ip, #0
 801ca3e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ca42:	e762      	b.n	801c90a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ca44:	4b03      	ldr	r3, [pc, #12]	; (801ca54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801ca46:	6818      	ldr	r0, [r3, #0]
 801ca48:	6803      	ldr	r3, [r0, #0]
 801ca4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ca4c:	4798      	blx	r3
 801ca4e:	b00f      	add	sp, #60	; 0x3c
 801ca50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca54:	20012db4 	.word	0x20012db4
 801ca58:	20012dae 	.word	0x20012dae

0801ca5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ca5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca60:	b093      	sub	sp, #76	; 0x4c
 801ca62:	461c      	mov	r4, r3
 801ca64:	9205      	str	r2, [sp, #20]
 801ca66:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801ca6a:	9101      	str	r1, [sp, #4]
 801ca6c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ca6e:	9202      	str	r2, [sp, #8]
 801ca70:	2a00      	cmp	r2, #0
 801ca72:	f000 812c 	beq.w	801ccce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801ca76:	6820      	ldr	r0, [r4, #0]
 801ca78:	6861      	ldr	r1, [r4, #4]
 801ca7a:	aa0e      	add	r2, sp, #56	; 0x38
 801ca7c:	c203      	stmia	r2!, {r0, r1}
 801ca7e:	6818      	ldr	r0, [r3, #0]
 801ca80:	6859      	ldr	r1, [r3, #4]
 801ca82:	aa10      	add	r2, sp, #64	; 0x40
 801ca84:	c203      	stmia	r2!, {r0, r1}
 801ca86:	a80e      	add	r0, sp, #56	; 0x38
 801ca88:	f7f8 fec6 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ca8c:	4621      	mov	r1, r4
 801ca8e:	a810      	add	r0, sp, #64	; 0x40
 801ca90:	f7f8 ff06 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ca94:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801ca98:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801ca9c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801caa0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801caa4:	bfde      	ittt	le
 801caa6:	b2b3      	uxthle	r3, r6
 801caa8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801caac:	fb92 f3f3 	sdivle	r3, r2, r3
 801cab0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cab4:	bfc8      	it	gt
 801cab6:	2301      	movgt	r3, #1
 801cab8:	fb92 f1f3 	sdiv	r1, r2, r3
 801cabc:	fa1f fc81 	uxth.w	ip, r1
 801cac0:	fb0c 2413 	mls	r4, ip, r3, r2
 801cac4:	fb14 f406 	smulbb	r4, r4, r6
 801cac8:	441d      	add	r5, r3
 801caca:	4404      	add	r4, r0
 801cacc:	4661      	mov	r1, ip
 801cace:	3d01      	subs	r5, #1
 801cad0:	b2a4      	uxth	r4, r4
 801cad2:	fb95 f5f3 	sdiv	r5, r5, r3
 801cad6:	b131      	cbz	r1, 801cae6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801cad8:	9b05      	ldr	r3, [sp, #20]
 801cada:	9901      	ldr	r1, [sp, #4]
 801cadc:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801cae0:	ba1b      	rev	r3, r3
 801cae2:	4419      	add	r1, r3
 801cae4:	9101      	str	r1, [sp, #4]
 801cae6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801caea:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801caee:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801caf2:	4418      	add	r0, r3
 801caf4:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801caf8:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801cafc:	441a      	add	r2, r3
 801cafe:	4b75      	ldr	r3, [pc, #468]	; (801ccd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801cb00:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801cb04:	6818      	ldr	r0, [r3, #0]
 801cb06:	6803      	ldr	r3, [r0, #0]
 801cb08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cb0a:	4798      	blx	r3
 801cb0c:	4972      	ldr	r1, [pc, #456]	; (801ccd8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801cb0e:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801cb12:	880b      	ldrh	r3, [r1, #0]
 801cb14:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cb18:	910d      	str	r1, [sp, #52]	; 0x34
 801cb1a:	fb03 c202 	mla	r2, r3, r2, ip
 801cb1e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cb22:	4373      	muls	r3, r6
 801cb24:	b2ad      	uxth	r5, r5
 801cb26:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cb2a:	00ad      	lsls	r5, r5, #2
 801cb2c:	9308      	str	r3, [sp, #32]
 801cb2e:	1d2b      	adds	r3, r5, #4
 801cb30:	9309      	str	r3, [sp, #36]	; 0x24
 801cb32:	9b02      	ldr	r3, [sp, #8]
 801cb34:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cb38:	9106      	str	r1, [sp, #24]
 801cb3a:	43da      	mvns	r2, r3
 801cb3c:	2c00      	cmp	r4, #0
 801cb3e:	bf0c      	ite	eq
 801cb40:	46dc      	moveq	ip, fp
 801cb42:	f04f 0c00 	movne.w	ip, #0
 801cb46:	2300      	movs	r3, #0
 801cb48:	b2d2      	uxtb	r2, r2
 801cb4a:	fa1f fc8c 	uxth.w	ip, ip
 801cb4e:	9303      	str	r3, [sp, #12]
 801cb50:	9207      	str	r2, [sp, #28]
 801cb52:	9a08      	ldr	r2, [sp, #32]
 801cb54:	4282      	cmp	r2, r0
 801cb56:	f240 80b5 	bls.w	801ccc4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801cb5a:	b963      	cbnz	r3, 801cb76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cb5c:	9b01      	ldr	r3, [sp, #4]
 801cb5e:	781a      	ldrb	r2, [r3, #0]
 801cb60:	0993      	lsrs	r3, r2, #6
 801cb62:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cb66:	9203      	str	r2, [sp, #12]
 801cb68:	1e5a      	subs	r2, r3, #1
 801cb6a:	2a02      	cmp	r2, #2
 801cb6c:	d815      	bhi.n	801cb9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801cb6e:	9a01      	ldr	r2, [sp, #4]
 801cb70:	3201      	adds	r2, #1
 801cb72:	9201      	str	r2, [sp, #4]
 801cb74:	b29b      	uxth	r3, r3
 801cb76:	b1b4      	cbz	r4, 801cba6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801cb78:	429c      	cmp	r4, r3
 801cb7a:	bf95      	itete	ls
 801cb7c:	1b1c      	subls	r4, r3, r4
 801cb7e:	1ae4      	subhi	r4, r4, r3
 801cb80:	fa1f f884 	uxthls.w	r8, r4
 801cb84:	b2a4      	uxthhi	r4, r4
 801cb86:	bf87      	ittee	hi
 801cb88:	4666      	movhi	r6, ip
 801cb8a:	f04f 0800 	movhi.w	r8, #0
 801cb8e:	fa1f f68b 	uxthls.w	r6, fp
 801cb92:	2400      	movls	r4, #0
 801cb94:	4643      	mov	r3, r8
 801cb96:	46b4      	mov	ip, r6
 801cb98:	e7db      	b.n	801cb52 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801cb9a:	9a01      	ldr	r2, [sp, #4]
 801cb9c:	9b01      	ldr	r3, [sp, #4]
 801cb9e:	3202      	adds	r2, #2
 801cba0:	785b      	ldrb	r3, [r3, #1]
 801cba2:	9201      	str	r2, [sp, #4]
 801cba4:	e7e7      	b.n	801cb76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801cba6:	2203      	movs	r2, #3
 801cba8:	4615      	mov	r5, r2
 801cbaa:	9909      	ldr	r1, [sp, #36]	; 0x24
 801cbac:	9a03      	ldr	r2, [sp, #12]
 801cbae:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cbb2:	9905      	ldr	r1, [sp, #20]
 801cbb4:	4563      	cmp	r3, ip
 801cbb6:	eb01 0502 	add.w	r5, r1, r2
 801cbba:	9902      	ldr	r1, [sp, #8]
 801cbbc:	bf29      	itett	cs
 801cbbe:	eba3 080c 	subcs.w	r8, r3, ip
 801cbc2:	ebac 0603 	subcc.w	r6, ip, r3
 801cbc6:	fa1f f888 	uxthcs.w	r8, r8
 801cbca:	46e1      	movcs	r9, ip
 801cbcc:	bf2f      	iteee	cs
 801cbce:	4626      	movcs	r6, r4
 801cbd0:	b2b6      	uxthcc	r6, r6
 801cbd2:	4699      	movcc	r9, r3
 801cbd4:	46a0      	movcc	r8, r4
 801cbd6:	29ff      	cmp	r1, #255	; 0xff
 801cbd8:	d04a      	beq.n	801cc70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801cbda:	9f06      	ldr	r7, [sp, #24]
 801cbdc:	78a9      	ldrb	r1, [r5, #2]
 801cbde:	9004      	str	r0, [sp, #16]
 801cbe0:	4379      	muls	r1, r7
 801cbe2:	910a      	str	r1, [sp, #40]	; 0x28
 801cbe4:	7869      	ldrb	r1, [r5, #1]
 801cbe6:	4379      	muls	r1, r7
 801cbe8:	910b      	str	r1, [sp, #44]	; 0x2c
 801cbea:	9905      	ldr	r1, [sp, #20]
 801cbec:	5c8a      	ldrb	r2, [r1, r2]
 801cbee:	437a      	muls	r2, r7
 801cbf0:	920c      	str	r2, [sp, #48]	; 0x30
 801cbf2:	46ca      	mov	sl, r9
 801cbf4:	f1ba 0f00 	cmp.w	sl, #0
 801cbf8:	d03d      	beq.n	801cc76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801cbfa:	9a04      	ldr	r2, [sp, #16]
 801cbfc:	9f07      	ldr	r7, [sp, #28]
 801cbfe:	8812      	ldrh	r2, [r2, #0]
 801cc00:	1215      	asrs	r5, r2, #8
 801cc02:	46be      	mov	lr, r7
 801cc04:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cc08:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801cc0a:	10d1      	asrs	r1, r2, #3
 801cc0c:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801cc10:	fb05 750e 	mla	r5, r5, lr, r7
 801cc14:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801cc18:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801cc1a:	00d2      	lsls	r2, r2, #3
 801cc1c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801cc20:	fb01 710e 	mla	r1, r1, lr, r7
 801cc24:	b2d2      	uxtb	r2, r2
 801cc26:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801cc28:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cc2c:	b2ad      	uxth	r5, r5
 801cc2e:	fb02 720e 	mla	r2, r2, lr, r7
 801cc32:	b292      	uxth	r2, r2
 801cc34:	f105 0e01 	add.w	lr, r5, #1
 801cc38:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801cc3c:	f102 0e01 	add.w	lr, r2, #1
 801cc40:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801cc44:	b289      	uxth	r1, r1
 801cc46:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cc4a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cc4e:	4315      	orrs	r5, r2
 801cc50:	1c4a      	adds	r2, r1, #1
 801cc52:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cc56:	0949      	lsrs	r1, r1, #5
 801cc58:	9a04      	ldr	r2, [sp, #16]
 801cc5a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cc5e:	430d      	orrs	r5, r1
 801cc60:	f822 5b02 	strh.w	r5, [r2], #2
 801cc64:	f10a 3aff 	add.w	sl, sl, #4294967295
 801cc68:	9204      	str	r2, [sp, #16]
 801cc6a:	fa1f fa8a 	uxth.w	sl, sl
 801cc6e:	e7c1      	b.n	801cbf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801cc70:	4649      	mov	r1, r9
 801cc72:	4686      	mov	lr, r0
 801cc74:	b999      	cbnz	r1, 801cc9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801cc76:	4563      	cmp	r3, ip
 801cc78:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801cc7c:	d38a      	bcc.n	801cb94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801cc7e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801cc82:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cc84:	fa1f f68b 	uxth.w	r6, fp
 801cc88:	1ba4      	subs	r4, r4, r6
 801cc8a:	881b      	ldrh	r3, [r3, #0]
 801cc8c:	b2a4      	uxth	r4, r4
 801cc8e:	2c00      	cmp	r4, #0
 801cc90:	eba3 030b 	sub.w	r3, r3, fp
 801cc94:	bf18      	it	ne
 801cc96:	2600      	movne	r6, #0
 801cc98:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cc9c:	e77a      	b.n	801cb94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801cc9e:	78aa      	ldrb	r2, [r5, #2]
 801cca0:	4f0e      	ldr	r7, [pc, #56]	; (801ccdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801cca2:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801cca6:	786a      	ldrb	r2, [r5, #1]
 801cca8:	00d2      	lsls	r2, r2, #3
 801ccaa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ccae:	ea4a 0202 	orr.w	r2, sl, r2
 801ccb2:	f895 a000 	ldrb.w	sl, [r5]
 801ccb6:	3901      	subs	r1, #1
 801ccb8:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801ccbc:	f82e 2b02 	strh.w	r2, [lr], #2
 801ccc0:	b289      	uxth	r1, r1
 801ccc2:	e7d7      	b.n	801cc74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801ccc4:	4b03      	ldr	r3, [pc, #12]	; (801ccd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801ccc6:	6818      	ldr	r0, [r3, #0]
 801ccc8:	6803      	ldr	r3, [r0, #0]
 801ccca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cccc:	4798      	blx	r3
 801ccce:	b013      	add	sp, #76	; 0x4c
 801ccd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ccd4:	20012db4 	.word	0x20012db4
 801ccd8:	20012dae 	.word	0x20012dae
 801ccdc:	fffff800 	.word	0xfffff800

0801cce0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801cce0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cce4:	b09d      	sub	sp, #116	; 0x74
 801cce6:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801ccea:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801ccee:	920e      	str	r2, [sp, #56]	; 0x38
 801ccf0:	461c      	mov	r4, r3
 801ccf2:	4683      	mov	fp, r0
 801ccf4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ccf6:	2a00      	cmp	r2, #0
 801ccf8:	f000 81e0 	beq.w	801d0bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801ccfc:	6820      	ldr	r0, [r4, #0]
 801ccfe:	6861      	ldr	r1, [r4, #4]
 801cd00:	aa18      	add	r2, sp, #96	; 0x60
 801cd02:	c203      	stmia	r2!, {r0, r1}
 801cd04:	6818      	ldr	r0, [r3, #0]
 801cd06:	6859      	ldr	r1, [r3, #4]
 801cd08:	aa1a      	add	r2, sp, #104	; 0x68
 801cd0a:	c203      	stmia	r2!, {r0, r1}
 801cd0c:	a818      	add	r0, sp, #96	; 0x60
 801cd0e:	f7f8 fd83 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cd12:	4621      	mov	r1, r4
 801cd14:	a81a      	add	r0, sp, #104	; 0x68
 801cd16:	f7f8 fdc3 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cd1a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801cd1e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801cd22:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801cd26:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801cd2a:	bfd7      	itett	le
 801cd2c:	b29a      	uxthle	r2, r3
 801cd2e:	2201      	movgt	r2, #1
 801cd30:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801cd34:	fb91 f2f2 	sdivle	r2, r1, r2
 801cd38:	9202      	str	r2, [sp, #8]
 801cd3a:	9802      	ldr	r0, [sp, #8]
 801cd3c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801cd40:	fb92 f0f0 	sdiv	r0, r2, r0
 801cd44:	b280      	uxth	r0, r0
 801cd46:	900f      	str	r0, [sp, #60]	; 0x3c
 801cd48:	9902      	ldr	r1, [sp, #8]
 801cd4a:	9802      	ldr	r0, [sp, #8]
 801cd4c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801cd4e:	440c      	add	r4, r1
 801cd50:	fb05 2510 	mls	r5, r5, r0, r2
 801cd54:	fb15 f503 	smulbb	r5, r5, r3
 801cd58:	3c01      	subs	r4, #1
 801cd5a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801cd5e:	fb94 f4f1 	sdiv	r4, r4, r1
 801cd62:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801cd66:	440d      	add	r5, r1
 801cd68:	4419      	add	r1, r3
 801cd6a:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801cd6e:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801cd72:	441a      	add	r2, r3
 801cd74:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801cd78:	9306      	str	r3, [sp, #24]
 801cd7a:	4bb3      	ldr	r3, [pc, #716]	; (801d048 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801cd7c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801cd80:	6818      	ldr	r0, [r3, #0]
 801cd82:	6803      	ldr	r3, [r0, #0]
 801cd84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cd86:	4798      	blx	r3
 801cd88:	4bb0      	ldr	r3, [pc, #704]	; (801d04c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801cd8a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801cd8e:	881a      	ldrh	r2, [r3, #0]
 801cd90:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801cd94:	9316      	str	r3, [sp, #88]	; 0x58
 801cd96:	fb02 7101 	mla	r1, r2, r1, r7
 801cd9a:	3401      	adds	r4, #1
 801cd9c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801cda0:	b2a4      	uxth	r4, r4
 801cda2:	4356      	muls	r6, r2
 801cda4:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801cda8:	00a4      	lsls	r4, r4, #2
 801cdaa:	920a      	str	r2, [sp, #40]	; 0x28
 801cdac:	1d22      	adds	r2, r4, #4
 801cdae:	b2ad      	uxth	r5, r5
 801cdb0:	9213      	str	r2, [sp, #76]	; 0x4c
 801cdb2:	4ba7      	ldr	r3, [pc, #668]	; (801d050 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801cdb4:	9a06      	ldr	r2, [sp, #24]
 801cdb6:	2d00      	cmp	r5, #0
 801cdb8:	bf0c      	ite	eq
 801cdba:	4611      	moveq	r1, r2
 801cdbc:	2100      	movne	r1, #0
 801cdbe:	2200      	movs	r2, #0
 801cdc0:	eba3 030b 	sub.w	r3, r3, fp
 801cdc4:	b289      	uxth	r1, r1
 801cdc6:	920d      	str	r2, [sp, #52]	; 0x34
 801cdc8:	9317      	str	r3, [sp, #92]	; 0x5c
 801cdca:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cdcc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cdce:	fa12 f383 	uxtah	r3, r2, r3
 801cdd2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cdd4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801cdd8:	3304      	adds	r3, #4
 801cdda:	9308      	str	r3, [sp, #32]
 801cddc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cdde:	4543      	cmp	r3, r8
 801cde0:	f240 8167 	bls.w	801d0b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801cde4:	9a02      	ldr	r2, [sp, #8]
 801cde6:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801cdea:	fbb5 f3f3 	udiv	r3, r5, r3
 801cdee:	1ad3      	subs	r3, r2, r3
 801cdf0:	b29b      	uxth	r3, r3
 801cdf2:	9314      	str	r3, [sp, #80]	; 0x50
 801cdf4:	9b08      	ldr	r3, [sp, #32]
 801cdf6:	9808      	ldr	r0, [sp, #32]
 801cdf8:	785a      	ldrb	r2, [r3, #1]
 801cdfa:	789b      	ldrb	r3, [r3, #2]
 801cdfc:	7800      	ldrb	r0, [r0, #0]
 801cdfe:	9010      	str	r0, [sp, #64]	; 0x40
 801ce00:	021b      	lsls	r3, r3, #8
 801ce02:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801ce06:	9a08      	ldr	r2, [sp, #32]
 801ce08:	78d2      	ldrb	r2, [r2, #3]
 801ce0a:	4313      	orrs	r3, r2
 801ce0c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ce0e:	3001      	adds	r0, #1
 801ce10:	441a      	add	r2, r3
 801ce12:	9007      	str	r0, [sp, #28]
 801ce14:	1c50      	adds	r0, r2, #1
 801ce16:	9005      	str	r0, [sp, #20]
 801ce18:	7852      	ldrb	r2, [r2, #1]
 801ce1a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ce1c:	0212      	lsls	r2, r2, #8
 801ce1e:	5cc3      	ldrb	r3, [r0, r3]
 801ce20:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801ce24:	431a      	orrs	r2, r3
 801ce26:	b293      	uxth	r3, r2
 801ce28:	930b      	str	r3, [sp, #44]	; 0x2c
 801ce2a:	2300      	movs	r3, #0
 801ce2c:	9309      	str	r3, [sp, #36]	; 0x24
 801ce2e:	2301      	movs	r3, #1
 801ce30:	9301      	str	r3, [sp, #4]
 801ce32:	9304      	str	r3, [sp, #16]
 801ce34:	2300      	movs	r3, #0
 801ce36:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801ce3a:	9303      	str	r3, [sp, #12]
 801ce3c:	f04f 0e01 	mov.w	lr, #1
 801ce40:	2d00      	cmp	r5, #0
 801ce42:	d07c      	beq.n	801cf3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801ce44:	45ae      	cmp	lr, r5
 801ce46:	d26b      	bcs.n	801cf20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801ce48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ce4a:	eba5 050e 	sub.w	r5, r5, lr
 801ce4e:	4543      	cmp	r3, r8
 801ce50:	b2ad      	uxth	r5, r5
 801ce52:	460c      	mov	r4, r1
 801ce54:	d802      	bhi.n	801ce5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801ce56:	e070      	b.n	801cf3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801ce58:	2b00      	cmp	r3, #0
 801ce5a:	d15c      	bne.n	801cf16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801ce5c:	9b05      	ldr	r3, [sp, #20]
 801ce5e:	9a04      	ldr	r2, [sp, #16]
 801ce60:	785b      	ldrb	r3, [r3, #1]
 801ce62:	9904      	ldr	r1, [sp, #16]
 801ce64:	f1c2 0207 	rsb	r2, r2, #7
 801ce68:	4093      	lsls	r3, r2
 801ce6a:	005b      	lsls	r3, r3, #1
 801ce6c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801ce70:	9b05      	ldr	r3, [sp, #20]
 801ce72:	781b      	ldrb	r3, [r3, #0]
 801ce74:	410b      	asrs	r3, r1
 801ce76:	3101      	adds	r1, #1
 801ce78:	b2c9      	uxtb	r1, r1
 801ce7a:	2908      	cmp	r1, #8
 801ce7c:	9104      	str	r1, [sp, #16]
 801ce7e:	9905      	ldr	r1, [sp, #20]
 801ce80:	bf0a      	itet	eq
 801ce82:	3102      	addeq	r1, #2
 801ce84:	3101      	addne	r1, #1
 801ce86:	9105      	streq	r1, [sp, #20]
 801ce88:	b2db      	uxtb	r3, r3
 801ce8a:	bf0a      	itet	eq
 801ce8c:	2100      	moveq	r1, #0
 801ce8e:	9105      	strne	r1, [sp, #20]
 801ce90:	9104      	streq	r1, [sp, #16]
 801ce92:	4313      	orrs	r3, r2
 801ce94:	9910      	ldr	r1, [sp, #64]	; 0x40
 801ce96:	b29a      	uxth	r2, r3
 801ce98:	4291      	cmp	r1, r2
 801ce9a:	d30a      	bcc.n	801ceb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801ce9c:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801cea0:	2301      	movs	r3, #1
 801cea2:	9907      	ldr	r1, [sp, #28]
 801cea4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801cea8:	d30f      	bcc.n	801ceca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801ceaa:	2100      	movs	r1, #0
 801ceac:	9301      	str	r3, [sp, #4]
 801ceae:	9103      	str	r1, [sp, #12]
 801ceb0:	e032      	b.n	801cf18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801ceb2:	9b07      	ldr	r3, [sp, #28]
 801ceb4:	429a      	cmp	r2, r3
 801ceb6:	d318      	bcc.n	801ceea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801ceb8:	9b01      	ldr	r3, [sp, #4]
 801ceba:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801cebe:	445b      	add	r3, fp
 801cec0:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801cec4:	9b01      	ldr	r3, [sp, #4]
 801cec6:	3301      	adds	r3, #1
 801cec8:	b29b      	uxth	r3, r3
 801ceca:	9907      	ldr	r1, [sp, #28]
 801cecc:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801ced0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801ced4:	7108      	strb	r0, [r1, #4]
 801ced6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ced8:	80c8      	strh	r0, [r1, #6]
 801ceda:	9801      	ldr	r0, [sp, #4]
 801cedc:	3001      	adds	r0, #1
 801cede:	7148      	strb	r0, [r1, #5]
 801cee0:	9907      	ldr	r1, [sp, #28]
 801cee2:	3101      	adds	r1, #1
 801cee4:	b289      	uxth	r1, r1
 801cee6:	9107      	str	r1, [sp, #28]
 801cee8:	e7df      	b.n	801ceaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801ceea:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801ceee:	4611      	mov	r1, r2
 801cef0:	795b      	ldrb	r3, [r3, #5]
 801cef2:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801cef6:	4458      	add	r0, fp
 801cef8:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801cefa:	4406      	add	r6, r0
 801cefc:	2e00      	cmp	r6, #0
 801cefe:	dd06      	ble.n	801cf0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801cf00:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801cf04:	790e      	ldrb	r6, [r1, #4]
 801cf06:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801cf0a:	88c9      	ldrh	r1, [r1, #6]
 801cf0c:	e7f4      	b.n	801cef8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801cf0e:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801cf12:	b29b      	uxth	r3, r3
 801cf14:	e7c5      	b.n	801cea2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801cf16:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801cf18:	920b      	str	r2, [sp, #44]	; 0x2c
 801cf1a:	4621      	mov	r1, r4
 801cf1c:	469e      	mov	lr, r3
 801cf1e:	e78f      	b.n	801ce40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801cf20:	9a03      	ldr	r2, [sp, #12]
 801cf22:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801cf26:	442a      	add	r2, r5
 801cf28:	ebae 0305 	sub.w	r3, lr, r5
 801cf2c:	b292      	uxth	r2, r2
 801cf2e:	b29b      	uxth	r3, r3
 801cf30:	9203      	str	r2, [sp, #12]
 801cf32:	2500      	movs	r5, #0
 801cf34:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801cf36:	4542      	cmp	r2, r8
 801cf38:	d88e      	bhi.n	801ce58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801cf3a:	4621      	mov	r1, r4
 801cf3c:	e74e      	b.n	801cddc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801cf3e:	458e      	cmp	lr, r1
 801cf40:	bf29      	itett	cs
 801cf42:	ebae 0301 	subcs.w	r3, lr, r1
 801cf46:	eba1 040e 	subcc.w	r4, r1, lr
 801cf4a:	b29b      	uxthcs	r3, r3
 801cf4c:	910c      	strcs	r1, [sp, #48]	; 0x30
 801cf4e:	bf2f      	iteee	cs
 801cf50:	462c      	movcs	r4, r5
 801cf52:	b2a4      	uxthcc	r4, r4
 801cf54:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801cf58:	462b      	movcc	r3, r5
 801cf5a:	f04f 0900 	mov.w	r9, #0
 801cf5e:	9a03      	ldr	r2, [sp, #12]
 801cf60:	980c      	ldr	r0, [sp, #48]	; 0x30
 801cf62:	444a      	add	r2, r9
 801cf64:	4548      	cmp	r0, r9
 801cf66:	b292      	uxth	r2, r2
 801cf68:	d074      	beq.n	801d054 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801cf6a:	445a      	add	r2, fp
 801cf6c:	2004      	movs	r0, #4
 801cf6e:	4605      	mov	r5, r0
 801cf70:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801cf74:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cf76:	fb15 0202 	smlabb	r2, r5, r2, r0
 801cf7a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801cf7c:	5880      	ldr	r0, [r0, r2]
 801cf7e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801cf82:	d014      	beq.n	801cfae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801cf84:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801cf88:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801cf8c:	d112      	bne.n	801cfb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801cf8e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801cf90:	2aff      	cmp	r2, #255	; 0xff
 801cf92:	d10f      	bne.n	801cfb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801cf94:	0942      	lsrs	r2, r0, #5
 801cf96:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801cf9a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cf9e:	f025 0507 	bic.w	r5, r5, #7
 801cfa2:	4315      	orrs	r5, r2
 801cfa4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801cfa8:	4305      	orrs	r5, r0
 801cfaa:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801cfae:	f109 0901 	add.w	r9, r9, #1
 801cfb2:	e7d4      	b.n	801cf5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801cfb4:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801cfb8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801cfbc:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801cfc0:	9215      	str	r2, [sp, #84]	; 0x54
 801cfc2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801cfc4:	fb02 fa0a 	mul.w	sl, r2, sl
 801cfc8:	f10a 0201 	add.w	r2, sl, #1
 801cfcc:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801cfd0:	ea4f 272c 	mov.w	r7, ip, asr #8
 801cfd4:	1212      	asrs	r2, r2, #8
 801cfd6:	fa1f fa82 	uxth.w	sl, r2
 801cfda:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801cfde:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cfe2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cfe6:	43d2      	mvns	r2, r2
 801cfe8:	b2d2      	uxtb	r2, r2
 801cfea:	fb16 f60a 	smulbb	r6, r6, sl
 801cfee:	fa5f fc8c 	uxtb.w	ip, ip
 801cff2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801cff6:	b2c0      	uxtb	r0, r0
 801cff8:	fb07 6702 	mla	r7, r7, r2, r6
 801cffc:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801d000:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801d002:	fb10 f00a 	smulbb	r0, r0, sl
 801d006:	fb0c 0002 	mla	r0, ip, r2, r0
 801d00a:	b2ed      	uxtb	r5, r5
 801d00c:	b2bf      	uxth	r7, r7
 801d00e:	fb15 f50a 	smulbb	r5, r5, sl
 801d012:	b280      	uxth	r0, r0
 801d014:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d018:	fb06 5602 	mla	r6, r6, r2, r5
 801d01c:	1c7a      	adds	r2, r7, #1
 801d01e:	1c45      	adds	r5, r0, #1
 801d020:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d024:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801d028:	b2b6      	uxth	r6, r6
 801d02a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d02e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d032:	432f      	orrs	r7, r5
 801d034:	1c75      	adds	r5, r6, #1
 801d036:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801d03a:	096d      	lsrs	r5, r5, #5
 801d03c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d040:	432f      	orrs	r7, r5
 801d042:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801d046:	e7b2      	b.n	801cfae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801d048:	20012db4 	.word	0x20012db4
 801d04c:	20012dae 	.word	0x20012dae
 801d050:	fffff7fb 	.word	0xfffff7fb
 801d054:	9203      	str	r2, [sp, #12]
 801d056:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d058:	458e      	cmp	lr, r1
 801d05a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d05e:	f4ff af68 	bcc.w	801cf32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801d062:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801d064:	9906      	ldr	r1, [sp, #24]
 801d066:	8812      	ldrh	r2, [r2, #0]
 801d068:	1a52      	subs	r2, r2, r1
 801d06a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d06e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d070:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d072:	3201      	adds	r2, #1
 801d074:	428a      	cmp	r2, r1
 801d076:	9209      	str	r2, [sp, #36]	; 0x24
 801d078:	d111      	bne.n	801d09e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801d07a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801d07e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801d082:	9b06      	ldr	r3, [sp, #24]
 801d084:	eba5 0509 	sub.w	r5, r5, r9
 801d088:	b2ad      	uxth	r5, r5
 801d08a:	2d00      	cmp	r5, #0
 801d08c:	bf08      	it	eq
 801d08e:	4619      	moveq	r1, r3
 801d090:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d092:	bf18      	it	ne
 801d094:	2100      	movne	r1, #0
 801d096:	3301      	adds	r3, #1
 801d098:	930d      	str	r3, [sp, #52]	; 0x34
 801d09a:	b289      	uxth	r1, r1
 801d09c:	e695      	b.n	801cdca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801d09e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d0a2:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801d0a6:	1b2d      	subs	r5, r5, r4
 801d0a8:	b2ad      	uxth	r5, r5
 801d0aa:	2d00      	cmp	r5, #0
 801d0ac:	bf18      	it	ne
 801d0ae:	2400      	movne	r4, #0
 801d0b0:	e740      	b.n	801cf34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801d0b2:	4b04      	ldr	r3, [pc, #16]	; (801d0c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801d0b4:	6818      	ldr	r0, [r3, #0]
 801d0b6:	6803      	ldr	r3, [r0, #0]
 801d0b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d0ba:	4798      	blx	r3
 801d0bc:	b01d      	add	sp, #116	; 0x74
 801d0be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d0c2:	bf00      	nop
 801d0c4:	20012db4 	.word	0x20012db4

0801d0c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d0c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d0cc:	b09f      	sub	sp, #124	; 0x7c
 801d0ce:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d0d2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d0d6:	920a      	str	r2, [sp, #40]	; 0x28
 801d0d8:	461d      	mov	r5, r3
 801d0da:	4604      	mov	r4, r0
 801d0dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d0de:	2a00      	cmp	r2, #0
 801d0e0:	f000 81fa 	beq.w	801d4d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801d0e4:	6828      	ldr	r0, [r5, #0]
 801d0e6:	6869      	ldr	r1, [r5, #4]
 801d0e8:	aa1a      	add	r2, sp, #104	; 0x68
 801d0ea:	c203      	stmia	r2!, {r0, r1}
 801d0ec:	6818      	ldr	r0, [r3, #0]
 801d0ee:	6859      	ldr	r1, [r3, #4]
 801d0f0:	aa1c      	add	r2, sp, #112	; 0x70
 801d0f2:	c203      	stmia	r2!, {r0, r1}
 801d0f4:	a81a      	add	r0, sp, #104	; 0x68
 801d0f6:	f7f8 fb8f 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d0fa:	4629      	mov	r1, r5
 801d0fc:	a81c      	add	r0, sp, #112	; 0x70
 801d0fe:	f7f8 fbcf 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d102:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d106:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d10a:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801d10e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d112:	bfd7      	itett	le
 801d114:	b29a      	uxthle	r2, r3
 801d116:	2201      	movgt	r2, #1
 801d118:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d11c:	fb91 f2f2 	sdivle	r2, r1, r2
 801d120:	9201      	str	r2, [sp, #4]
 801d122:	9801      	ldr	r0, [sp, #4]
 801d124:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d128:	fb92 f0f0 	sdiv	r0, r2, r0
 801d12c:	b280      	uxth	r0, r0
 801d12e:	9010      	str	r0, [sp, #64]	; 0x40
 801d130:	9901      	ldr	r1, [sp, #4]
 801d132:	9801      	ldr	r0, [sp, #4]
 801d134:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d136:	440e      	add	r6, r1
 801d138:	fb05 2510 	mls	r5, r5, r0, r2
 801d13c:	fb15 f503 	smulbb	r5, r5, r3
 801d140:	3e01      	subs	r6, #1
 801d142:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d146:	fb96 f6f1 	sdiv	r6, r6, r1
 801d14a:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d14e:	440d      	add	r5, r1
 801d150:	4419      	add	r1, r3
 801d152:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d156:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d15a:	441a      	add	r2, r3
 801d15c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d160:	9304      	str	r3, [sp, #16]
 801d162:	4b96      	ldr	r3, [pc, #600]	; (801d3bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d164:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d168:	6818      	ldr	r0, [r3, #0]
 801d16a:	6803      	ldr	r3, [r0, #0]
 801d16c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d16e:	4798      	blx	r3
 801d170:	4b93      	ldr	r3, [pc, #588]	; (801d3c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d172:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d176:	881a      	ldrh	r2, [r3, #0]
 801d178:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801d17c:	9318      	str	r3, [sp, #96]	; 0x60
 801d17e:	fb02 c101 	mla	r1, r2, r1, ip
 801d182:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801d186:	4357      	muls	r7, r2
 801d188:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801d18c:	3601      	adds	r6, #1
 801d18e:	920b      	str	r2, [sp, #44]	; 0x2c
 801d190:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d192:	4b8c      	ldr	r3, [pc, #560]	; (801d3c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d194:	b2b6      	uxth	r6, r6
 801d196:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801d19a:	1d32      	adds	r2, r6, #4
 801d19c:	9206      	str	r2, [sp, #24]
 801d19e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d1a0:	43d2      	mvns	r2, r2
 801d1a2:	b2d2      	uxtb	r2, r2
 801d1a4:	b2ad      	uxth	r5, r5
 801d1a6:	9215      	str	r2, [sp, #84]	; 0x54
 801d1a8:	9a04      	ldr	r2, [sp, #16]
 801d1aa:	2d00      	cmp	r5, #0
 801d1ac:	bf0c      	ite	eq
 801d1ae:	4611      	moveq	r1, r2
 801d1b0:	2100      	movne	r1, #0
 801d1b2:	2200      	movs	r2, #0
 801d1b4:	1b1b      	subs	r3, r3, r4
 801d1b6:	b289      	uxth	r1, r1
 801d1b8:	920d      	str	r2, [sp, #52]	; 0x34
 801d1ba:	9319      	str	r3, [sp, #100]	; 0x64
 801d1bc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d1be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d1c0:	fa12 f383 	uxtah	r3, r2, r3
 801d1c4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d1c6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d1ca:	3304      	adds	r3, #4
 801d1cc:	9307      	str	r3, [sp, #28]
 801d1ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d1d0:	455b      	cmp	r3, fp
 801d1d2:	f240 817c 	bls.w	801d4ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801d1d6:	9a01      	ldr	r2, [sp, #4]
 801d1d8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d1dc:	fbb5 f3f3 	udiv	r3, r5, r3
 801d1e0:	1ad3      	subs	r3, r2, r3
 801d1e2:	b29b      	uxth	r3, r3
 801d1e4:	9316      	str	r3, [sp, #88]	; 0x58
 801d1e6:	9b07      	ldr	r3, [sp, #28]
 801d1e8:	9807      	ldr	r0, [sp, #28]
 801d1ea:	785a      	ldrb	r2, [r3, #1]
 801d1ec:	789b      	ldrb	r3, [r3, #2]
 801d1ee:	7800      	ldrb	r0, [r0, #0]
 801d1f0:	9011      	str	r0, [sp, #68]	; 0x44
 801d1f2:	021b      	lsls	r3, r3, #8
 801d1f4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d1f8:	9a07      	ldr	r2, [sp, #28]
 801d1fa:	78d2      	ldrb	r2, [r2, #3]
 801d1fc:	4313      	orrs	r3, r2
 801d1fe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d200:	3001      	adds	r0, #1
 801d202:	441a      	add	r2, r3
 801d204:	9005      	str	r0, [sp, #20]
 801d206:	1c50      	adds	r0, r2, #1
 801d208:	9003      	str	r0, [sp, #12]
 801d20a:	7852      	ldrb	r2, [r2, #1]
 801d20c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d20e:	0212      	lsls	r2, r2, #8
 801d210:	5cc3      	ldrb	r3, [r0, r3]
 801d212:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801d216:	431a      	orrs	r2, r3
 801d218:	b293      	uxth	r3, r2
 801d21a:	930c      	str	r3, [sp, #48]	; 0x30
 801d21c:	2300      	movs	r3, #0
 801d21e:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d222:	9308      	str	r3, [sp, #32]
 801d224:	461a      	mov	r2, r3
 801d226:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d22a:	930e      	str	r3, [sp, #56]	; 0x38
 801d22c:	f04f 0801 	mov.w	r8, #1
 801d230:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d234:	f8cd 8008 	str.w	r8, [sp, #8]
 801d238:	46c4      	mov	ip, r8
 801d23a:	930f      	str	r3, [sp, #60]	; 0x3c
 801d23c:	2d00      	cmp	r5, #0
 801d23e:	d07c      	beq.n	801d33a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801d240:	45ac      	cmp	ip, r5
 801d242:	d26c      	bcs.n	801d31e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801d244:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d246:	eba5 050c 	sub.w	r5, r5, ip
 801d24a:	455b      	cmp	r3, fp
 801d24c:	b2ad      	uxth	r5, r5
 801d24e:	4608      	mov	r0, r1
 801d250:	d802      	bhi.n	801d258 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801d252:	e070      	b.n	801d336 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801d254:	2b00      	cmp	r3, #0
 801d256:	d15c      	bne.n	801d312 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801d258:	9b03      	ldr	r3, [sp, #12]
 801d25a:	9a02      	ldr	r2, [sp, #8]
 801d25c:	785b      	ldrb	r3, [r3, #1]
 801d25e:	9902      	ldr	r1, [sp, #8]
 801d260:	f1c2 0207 	rsb	r2, r2, #7
 801d264:	4093      	lsls	r3, r2
 801d266:	005b      	lsls	r3, r3, #1
 801d268:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d26c:	9b03      	ldr	r3, [sp, #12]
 801d26e:	781b      	ldrb	r3, [r3, #0]
 801d270:	410b      	asrs	r3, r1
 801d272:	3101      	adds	r1, #1
 801d274:	b2c9      	uxtb	r1, r1
 801d276:	2908      	cmp	r1, #8
 801d278:	9102      	str	r1, [sp, #8]
 801d27a:	9903      	ldr	r1, [sp, #12]
 801d27c:	bf0a      	itet	eq
 801d27e:	3102      	addeq	r1, #2
 801d280:	3101      	addne	r1, #1
 801d282:	9103      	streq	r1, [sp, #12]
 801d284:	b2db      	uxtb	r3, r3
 801d286:	bf0a      	itet	eq
 801d288:	2100      	moveq	r1, #0
 801d28a:	9103      	strne	r1, [sp, #12]
 801d28c:	9102      	streq	r1, [sp, #8]
 801d28e:	4313      	orrs	r3, r2
 801d290:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d292:	b29a      	uxth	r2, r3
 801d294:	4291      	cmp	r1, r2
 801d296:	d30a      	bcc.n	801d2ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801d298:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d29c:	2301      	movs	r3, #1
 801d29e:	9905      	ldr	r1, [sp, #20]
 801d2a0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801d2a4:	d30f      	bcc.n	801d2c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801d2a6:	2100      	movs	r1, #0
 801d2a8:	4698      	mov	r8, r3
 801d2aa:	9100      	str	r1, [sp, #0]
 801d2ac:	e032      	b.n	801d314 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801d2ae:	9b05      	ldr	r3, [sp, #20]
 801d2b0:	429a      	cmp	r2, r3
 801d2b2:	d318      	bcc.n	801d2e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801d2b4:	eb04 0308 	add.w	r3, r4, r8
 801d2b8:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801d2bc:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801d2c0:	f108 0301 	add.w	r3, r8, #1
 801d2c4:	b29b      	uxth	r3, r3
 801d2c6:	9905      	ldr	r1, [sp, #20]
 801d2c8:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d2cc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d2d0:	710e      	strb	r6, [r1, #4]
 801d2d2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801d2d4:	80ce      	strh	r6, [r1, #6]
 801d2d6:	f108 0601 	add.w	r6, r8, #1
 801d2da:	714e      	strb	r6, [r1, #5]
 801d2dc:	9905      	ldr	r1, [sp, #20]
 801d2de:	3101      	adds	r1, #1
 801d2e0:	b289      	uxth	r1, r1
 801d2e2:	9105      	str	r1, [sp, #20]
 801d2e4:	e7df      	b.n	801d2a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801d2e6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801d2ea:	4611      	mov	r1, r2
 801d2ec:	795b      	ldrb	r3, [r3, #5]
 801d2ee:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d2f2:	4426      	add	r6, r4
 801d2f4:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801d2f6:	4437      	add	r7, r6
 801d2f8:	2f00      	cmp	r7, #0
 801d2fa:	dd06      	ble.n	801d30a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d2fc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801d300:	790f      	ldrb	r7, [r1, #4]
 801d302:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801d306:	88c9      	ldrh	r1, [r1, #6]
 801d308:	e7f4      	b.n	801d2f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801d30a:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d30e:	b29b      	uxth	r3, r3
 801d310:	e7c5      	b.n	801d29e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801d312:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d314:	920c      	str	r2, [sp, #48]	; 0x30
 801d316:	4601      	mov	r1, r0
 801d318:	9a00      	ldr	r2, [sp, #0]
 801d31a:	469c      	mov	ip, r3
 801d31c:	e78e      	b.n	801d23c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801d31e:	1957      	adds	r7, r2, r5
 801d320:	ebac 0305 	sub.w	r3, ip, r5
 801d324:	b2ba      	uxth	r2, r7
 801d326:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d32a:	9200      	str	r2, [sp, #0]
 801d32c:	b29b      	uxth	r3, r3
 801d32e:	2500      	movs	r5, #0
 801d330:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d332:	455a      	cmp	r2, fp
 801d334:	d88e      	bhi.n	801d254 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801d336:	4601      	mov	r1, r0
 801d338:	e749      	b.n	801d1ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801d33a:	458c      	cmp	ip, r1
 801d33c:	bf2c      	ite	cs
 801d33e:	4628      	movcs	r0, r5
 801d340:	462b      	movcc	r3, r5
 801d342:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801d344:	bf27      	ittee	cs
 801d346:	9109      	strcs	r1, [sp, #36]	; 0x24
 801d348:	ebac 0301 	subcs.w	r3, ip, r1
 801d34c:	eba1 000c 	subcc.w	r0, r1, ip
 801d350:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801d354:	bf2c      	ite	cs
 801d356:	b29b      	uxthcs	r3, r3
 801d358:	b280      	uxthcc	r0, r0
 801d35a:	2dff      	cmp	r5, #255	; 0xff
 801d35c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801d35e:	eb02 0705 	add.w	r7, r2, r5
 801d362:	b2bd      	uxth	r5, r7
 801d364:	9500      	str	r5, [sp, #0]
 801d366:	d12f      	bne.n	801d3c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801d368:	465e      	mov	r6, fp
 801d36a:	9d00      	ldr	r5, [sp, #0]
 801d36c:	42aa      	cmp	r2, r5
 801d36e:	f040 8084 	bne.w	801d47a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801d372:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d374:	458c      	cmp	ip, r1
 801d376:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d37a:	d3d8      	bcc.n	801d32e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801d37c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d37e:	9904      	ldr	r1, [sp, #16]
 801d380:	8812      	ldrh	r2, [r2, #0]
 801d382:	1a52      	subs	r2, r2, r1
 801d384:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801d388:	9a08      	ldr	r2, [sp, #32]
 801d38a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d38c:	3201      	adds	r2, #1
 801d38e:	428a      	cmp	r2, r1
 801d390:	9208      	str	r2, [sp, #32]
 801d392:	f040 8092 	bne.w	801d4ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d396:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d39a:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801d39e:	9b04      	ldr	r3, [sp, #16]
 801d3a0:	eba5 050c 	sub.w	r5, r5, ip
 801d3a4:	b2ad      	uxth	r5, r5
 801d3a6:	2d00      	cmp	r5, #0
 801d3a8:	bf08      	it	eq
 801d3aa:	4619      	moveq	r1, r3
 801d3ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d3ae:	bf18      	it	ne
 801d3b0:	2100      	movne	r1, #0
 801d3b2:	3301      	adds	r3, #1
 801d3b4:	930d      	str	r3, [sp, #52]	; 0x34
 801d3b6:	b289      	uxth	r1, r1
 801d3b8:	e700      	b.n	801d1bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801d3ba:	bf00      	nop
 801d3bc:	20012db4 	.word	0x20012db4
 801d3c0:	20012dae 	.word	0x20012dae
 801d3c4:	fffff7fb 	.word	0xfffff7fb
 801d3c8:	46d9      	mov	r9, fp
 801d3ca:	9d00      	ldr	r5, [sp, #0]
 801d3cc:	42aa      	cmp	r2, r5
 801d3ce:	d0d0      	beq.n	801d372 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801d3d0:	1c55      	adds	r5, r2, #1
 801d3d2:	4422      	add	r2, r4
 801d3d4:	9517      	str	r5, [sp, #92]	; 0x5c
 801d3d6:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801d3da:	9a06      	ldr	r2, [sp, #24]
 801d3dc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801d3e0:	4472      	add	r2, lr
 801d3e2:	9212      	str	r2, [sp, #72]	; 0x48
 801d3e4:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d3e6:	f8b9 2000 	ldrh.w	r2, [r9]
 801d3ea:	f897 a002 	ldrb.w	sl, [r7, #2]
 801d3ee:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d3f0:	1216      	asrs	r6, r2, #8
 801d3f2:	fb1a fa07 	smulbb	sl, sl, r7
 801d3f6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d3fa:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d3fc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d400:	fb06 a607 	mla	r6, r6, r7, sl
 801d404:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801d406:	f897 a001 	ldrb.w	sl, [r7, #1]
 801d40a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d40c:	10d5      	asrs	r5, r2, #3
 801d40e:	fb1a fa07 	smulbb	sl, sl, r7
 801d412:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d416:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d418:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d41c:	fb05 a507 	mla	r5, r5, r7, sl
 801d420:	9f06      	ldr	r7, [sp, #24]
 801d422:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d426:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801d428:	00d2      	lsls	r2, r2, #3
 801d42a:	fb1e fe07 	smulbb	lr, lr, r7
 801d42e:	b2d2      	uxtb	r2, r2
 801d430:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801d432:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d436:	b2b6      	uxth	r6, r6
 801d438:	fb02 e207 	mla	r2, r2, r7, lr
 801d43c:	b292      	uxth	r2, r2
 801d43e:	b2ad      	uxth	r5, r5
 801d440:	f106 0a01 	add.w	sl, r6, #1
 801d444:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d448:	f102 0e01 	add.w	lr, r2, #1
 801d44c:	f105 0a01 	add.w	sl, r5, #1
 801d450:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801d454:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d458:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d45c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d460:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d464:	ea4e 0606 	orr.w	r6, lr, r6
 801d468:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d46c:	ea46 060a 	orr.w	r6, r6, sl
 801d470:	f829 6b02 	strh.w	r6, [r9], #2
 801d474:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801d478:	e7a7      	b.n	801d3ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801d47a:	f102 0e01 	add.w	lr, r2, #1
 801d47e:	4422      	add	r2, r4
 801d480:	9f06      	ldr	r7, [sp, #24]
 801d482:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801d486:	9a06      	ldr	r2, [sp, #24]
 801d488:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d48c:	eb02 0a05 	add.w	sl, r2, r5
 801d490:	4a13      	ldr	r2, [pc, #76]	; (801d4e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801d492:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801d496:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801d49a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801d49e:	00d2      	lsls	r2, r2, #3
 801d4a0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d4a4:	ea49 0202 	orr.w	r2, r9, r2
 801d4a8:	f817 9005 	ldrb.w	r9, [r7, r5]
 801d4ac:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801d4b0:	f826 2b02 	strh.w	r2, [r6], #2
 801d4b4:	fa1f f28e 	uxth.w	r2, lr
 801d4b8:	e757      	b.n	801d36a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801d4ba:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801d4be:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d4c2:	1a2d      	subs	r5, r5, r0
 801d4c4:	b2ad      	uxth	r5, r5
 801d4c6:	2d00      	cmp	r5, #0
 801d4c8:	bf18      	it	ne
 801d4ca:	2000      	movne	r0, #0
 801d4cc:	e730      	b.n	801d330 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801d4ce:	4b05      	ldr	r3, [pc, #20]	; (801d4e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801d4d0:	6818      	ldr	r0, [r3, #0]
 801d4d2:	6803      	ldr	r3, [r0, #0]
 801d4d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d4d6:	4798      	blx	r3
 801d4d8:	b01f      	add	sp, #124	; 0x7c
 801d4da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d4de:	bf00      	nop
 801d4e0:	fffff800 	.word	0xfffff800
 801d4e4:	20012db4 	.word	0x20012db4

0801d4e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801d4e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d4ec:	b091      	sub	sp, #68	; 0x44
 801d4ee:	469b      	mov	fp, r3
 801d4f0:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801d4f4:	4616      	mov	r6, r2
 801d4f6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801d4fa:	f9b3 2000 	ldrsh.w	r2, [r3]
 801d4fe:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d502:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801d506:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d50a:	4604      	mov	r4, r0
 801d50c:	460d      	mov	r5, r1
 801d50e:	4640      	mov	r0, r8
 801d510:	4659      	mov	r1, fp
 801d512:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801d516:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801d51a:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801d51e:	f7f3 fa1d 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 801d522:	4631      	mov	r1, r6
 801d524:	4640      	mov	r0, r8
 801d526:	f7f3 fa19 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 801d52a:	4b74      	ldr	r3, [pc, #464]	; (801d6fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801d52c:	8818      	ldrh	r0, [r3, #0]
 801d52e:	4b74      	ldr	r3, [pc, #464]	; (801d700 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801d530:	8819      	ldrh	r1, [r3, #0]
 801d532:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d536:	2b00      	cmp	r3, #0
 801d538:	b202      	sxth	r2, r0
 801d53a:	b20e      	sxth	r6, r1
 801d53c:	da07      	bge.n	801d54e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801d53e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801d542:	4463      	add	r3, ip
 801d544:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801d548:	2300      	movs	r3, #0
 801d54a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801d54e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801d552:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d556:	1ad2      	subs	r2, r2, r3
 801d558:	4594      	cmp	ip, r2
 801d55a:	bfc4      	itt	gt
 801d55c:	1ac2      	subgt	r2, r0, r3
 801d55e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801d562:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d566:	2a00      	cmp	r2, #0
 801d568:	da07      	bge.n	801d57a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801d56a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801d56e:	4462      	add	r2, ip
 801d570:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801d574:	2200      	movs	r2, #0
 801d576:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801d57a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801d57e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d582:	eba6 060a 	sub.w	r6, r6, sl
 801d586:	42b2      	cmp	r2, r6
 801d588:	bfc4      	itt	gt
 801d58a:	eba1 020a 	subgt.w	r2, r1, sl
 801d58e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801d592:	4a5c      	ldr	r2, [pc, #368]	; (801d704 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801d594:	7812      	ldrb	r2, [r2, #0]
 801d596:	b9a2      	cbnz	r2, 801d5c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801d598:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d59c:	4286      	cmp	r6, r0
 801d59e:	4640      	mov	r0, r8
 801d5a0:	9303      	str	r3, [sp, #12]
 801d5a2:	bf14      	ite	ne
 801d5a4:	2600      	movne	r6, #0
 801d5a6:	2601      	moveq	r6, #1
 801d5a8:	f7f3 fa1b 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d5ac:	9b03      	ldr	r3, [sp, #12]
 801d5ae:	b160      	cbz	r0, 801d5ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801d5b0:	2300      	movs	r3, #0
 801d5b2:	8023      	strh	r3, [r4, #0]
 801d5b4:	8063      	strh	r3, [r4, #2]
 801d5b6:	80a3      	strh	r3, [r4, #4]
 801d5b8:	4620      	mov	r0, r4
 801d5ba:	80e3      	strh	r3, [r4, #6]
 801d5bc:	b011      	add	sp, #68	; 0x44
 801d5be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d5c2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801d5c6:	428e      	cmp	r6, r1
 801d5c8:	e7e9      	b.n	801d59e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801d5ca:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801d5ce:	9205      	str	r2, [sp, #20]
 801d5d0:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801d5d4:	9206      	str	r2, [sp, #24]
 801d5d6:	f8bb 2000 	ldrh.w	r2, [fp]
 801d5da:	900e      	str	r0, [sp, #56]	; 0x38
 801d5dc:	1a9b      	subs	r3, r3, r2
 801d5de:	b21b      	sxth	r3, r3
 801d5e0:	9303      	str	r3, [sp, #12]
 801d5e2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d5e6:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801d5ea:	ebaa 0a03 	sub.w	sl, sl, r3
 801d5ee:	fa0f f38a 	sxth.w	r3, sl
 801d5f2:	9304      	str	r3, [sp, #16]
 801d5f4:	9b03      	ldr	r3, [sp, #12]
 801d5f6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801d5fa:	9b04      	ldr	r3, [sp, #16]
 801d5fc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801d600:	9b05      	ldr	r3, [sp, #20]
 801d602:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801d606:	a90e      	add	r1, sp, #56	; 0x38
 801d608:	9b06      	ldr	r3, [sp, #24]
 801d60a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801d60e:	a80c      	add	r0, sp, #48	; 0x30
 801d610:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801d614:	f7f8 f944 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d618:	4640      	mov	r0, r8
 801d61a:	f7f8 f8fd 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d61e:	a80e      	add	r0, sp, #56	; 0x38
 801d620:	f7f8 f8fa 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d624:	4b38      	ldr	r3, [pc, #224]	; (801d708 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801d626:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801d62a:	881b      	ldrh	r3, [r3, #0]
 801d62c:	9307      	str	r3, [sp, #28]
 801d62e:	682b      	ldr	r3, [r5, #0]
 801d630:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801d70c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d634:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d636:	4628      	mov	r0, r5
 801d638:	4798      	blx	r3
 801d63a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801d63e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801d642:	4681      	mov	r9, r0
 801d644:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801d648:	f8db 0000 	ldr.w	r0, [fp]
 801d64c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801d64e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801d652:	6803      	ldr	r3, [r0, #0]
 801d654:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d656:	4798      	blx	r3
 801d658:	4607      	mov	r7, r0
 801d65a:	f8db 0000 	ldr.w	r0, [fp]
 801d65e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801d662:	6803      	ldr	r3, [r0, #0]
 801d664:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801d668:	9109      	str	r1, [sp, #36]	; 0x24
 801d66a:	9208      	str	r2, [sp, #32]
 801d66c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d66e:	4798      	blx	r3
 801d670:	f010 0f01 	tst.w	r0, #1
 801d674:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801d678:	d012      	beq.n	801d6a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801d67a:	f8db 0000 	ldr.w	r0, [fp]
 801d67e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801d682:	6803      	ldr	r3, [r0, #0]
 801d684:	9200      	str	r2, [sp, #0]
 801d686:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801d688:	e898 0006 	ldmia.w	r8, {r1, r2}
 801d68c:	462b      	mov	r3, r5
 801d68e:	47b0      	blx	r6
 801d690:	9b03      	ldr	r3, [sp, #12]
 801d692:	8023      	strh	r3, [r4, #0]
 801d694:	9b04      	ldr	r3, [sp, #16]
 801d696:	8063      	strh	r3, [r4, #2]
 801d698:	9b05      	ldr	r3, [sp, #20]
 801d69a:	80a3      	strh	r3, [r4, #4]
 801d69c:	9b06      	ldr	r3, [sp, #24]
 801d69e:	e78b      	b.n	801d5b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801d6a0:	fb09 f202 	mul.w	r2, r9, r2
 801d6a4:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801d6a8:	440f      	add	r7, r1
 801d6aa:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801d6ae:	b166      	cbz	r6, 801d6ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d6b0:	9a07      	ldr	r2, [sp, #28]
 801d6b2:	4592      	cmp	sl, r2
 801d6b4:	d109      	bne.n	801d6ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801d6b6:	f8db 0000 	ldr.w	r0, [fp]
 801d6ba:	6802      	ldr	r2, [r0, #0]
 801d6bc:	fb09 f303 	mul.w	r3, r9, r3
 801d6c0:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801d6c2:	4629      	mov	r1, r5
 801d6c4:	463a      	mov	r2, r7
 801d6c6:	47b0      	blx	r6
 801d6c8:	e7e2      	b.n	801d690 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d6ca:	fb0a f303 	mul.w	r3, sl, r3
 801d6ce:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801d70c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801d6d2:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801d6d6:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801d6da:	4545      	cmp	r5, r8
 801d6dc:	d2d8      	bcs.n	801d690 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801d6de:	f8db 0000 	ldr.w	r0, [fp]
 801d6e2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d6e6:	6802      	ldr	r2, [r0, #0]
 801d6e8:	4629      	mov	r1, r5
 801d6ea:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801d6ee:	005b      	lsls	r3, r3, #1
 801d6f0:	463a      	mov	r2, r7
 801d6f2:	47d0      	blx	sl
 801d6f4:	444f      	add	r7, r9
 801d6f6:	4435      	add	r5, r6
 801d6f8:	e7ef      	b.n	801d6da <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801d6fa:	bf00      	nop
 801d6fc:	20012da8 	.word	0x20012da8
 801d700:	20012daa 	.word	0x20012daa
 801d704:	20012dac 	.word	0x20012dac
 801d708:	20012dae 	.word	0x20012dae
 801d70c:	20012db4 	.word	0x20012db4

0801d710 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801d710:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d712:	4606      	mov	r6, r0
 801d714:	b087      	sub	sp, #28
 801d716:	460c      	mov	r4, r1
 801d718:	4617      	mov	r7, r2
 801d71a:	461d      	mov	r5, r3
 801d71c:	b333      	cbz	r3, 801d76c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d71e:	4608      	mov	r0, r1
 801d720:	f7f3 f95f 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d724:	bb10      	cbnz	r0, 801d76c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d726:	6820      	ldr	r0, [r4, #0]
 801d728:	6861      	ldr	r1, [r4, #4]
 801d72a:	4c1c      	ldr	r4, [pc, #112]	; (801d79c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801d72c:	ab04      	add	r3, sp, #16
 801d72e:	c303      	stmia	r3!, {r0, r1}
 801d730:	a804      	add	r0, sp, #16
 801d732:	f7f8 f871 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d736:	6820      	ldr	r0, [r4, #0]
 801d738:	6803      	ldr	r3, [r0, #0]
 801d73a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d73c:	4798      	blx	r3
 801d73e:	2dff      	cmp	r5, #255	; 0xff
 801d740:	d016      	beq.n	801d770 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801d742:	f010 0f08 	tst.w	r0, #8
 801d746:	6820      	ldr	r0, [r4, #0]
 801d748:	d015      	beq.n	801d776 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801d74a:	2400      	movs	r4, #0
 801d74c:	6801      	ldr	r1, [r0, #0]
 801d74e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801d752:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d756:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801d75a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801d75e:	9401      	str	r4, [sp, #4]
 801d760:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801d764:	9400      	str	r4, [sp, #0]
 801d766:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801d768:	4639      	mov	r1, r7
 801d76a:	47a0      	blx	r4
 801d76c:	b007      	add	sp, #28
 801d76e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d770:	f010 0f02 	tst.w	r0, #2
 801d774:	e7e7      	b.n	801d746 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801d776:	6803      	ldr	r3, [r0, #0]
 801d778:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d77a:	4798      	blx	r3
 801d77c:	4b08      	ldr	r3, [pc, #32]	; (801d7a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801d77e:	881a      	ldrh	r2, [r3, #0]
 801d780:	6833      	ldr	r3, [r6, #0]
 801d782:	e9cd 7500 	strd	r7, r5, [sp]
 801d786:	4601      	mov	r1, r0
 801d788:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801d78a:	4630      	mov	r0, r6
 801d78c:	ab04      	add	r3, sp, #16
 801d78e:	47a8      	blx	r5
 801d790:	6820      	ldr	r0, [r4, #0]
 801d792:	6803      	ldr	r3, [r0, #0]
 801d794:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d796:	4798      	blx	r3
 801d798:	e7e8      	b.n	801d76c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801d79a:	bf00      	nop
 801d79c:	20012db4 	.word	0x20012db4
 801d7a0:	20012dae 	.word	0x20012dae

0801d7a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801d7a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d7a8:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801d7ac:	9e08      	ldr	r6, [sp, #32]
 801d7ae:	4688      	mov	r8, r1
 801d7b0:	4614      	mov	r4, r2
 801d7b2:	461d      	mov	r5, r3
 801d7b4:	2f00      	cmp	r7, #0
 801d7b6:	f000 80a9 	beq.w	801d90c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d7ba:	4618      	mov	r0, r3
 801d7bc:	f7f3 f911 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d7c0:	2800      	cmp	r0, #0
 801d7c2:	f040 80a3 	bne.w	801d90c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d7c6:	f9b5 1000 	ldrsh.w	r1, [r5]
 801d7ca:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801d7ce:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801d7d2:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801d7d6:	fb04 1303 	mla	r3, r4, r3, r1
 801d7da:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801d7de:	4365      	muls	r5, r4
 801d7e0:	2fff      	cmp	r7, #255	; 0xff
 801d7e2:	eba4 0200 	sub.w	r2, r4, r0
 801d7e6:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801d7ea:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801d7ee:	d04a      	beq.n	801d886 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801d7f0:	b2bc      	uxth	r4, r7
 801d7f2:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801d7f6:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801d7fa:	fa5f f788 	uxtb.w	r7, r8
 801d7fe:	b2f3      	uxtb	r3, r6
 801d800:	0040      	lsls	r0, r0, #1
 801d802:	fb0e fe04 	mul.w	lr, lr, r4
 801d806:	4367      	muls	r7, r4
 801d808:	4363      	muls	r3, r4
 801d80a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801d80e:	fa1f fc8c 	uxth.w	ip, ip
 801d812:	42a9      	cmp	r1, r5
 801d814:	d27a      	bcs.n	801d90c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d816:	eb01 0900 	add.w	r9, r1, r0
 801d81a:	4549      	cmp	r1, r9
 801d81c:	d231      	bcs.n	801d882 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801d81e:	880a      	ldrh	r2, [r1, #0]
 801d820:	1214      	asrs	r4, r2, #8
 801d822:	10d6      	asrs	r6, r2, #3
 801d824:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801d828:	00d2      	lsls	r2, r2, #3
 801d82a:	b2d2      	uxtb	r2, r2
 801d82c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d830:	fb14 f40c 	smulbb	r4, r4, ip
 801d834:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d838:	4474      	add	r4, lr
 801d83a:	fb12 f20c 	smulbb	r2, r2, ip
 801d83e:	b2a4      	uxth	r4, r4
 801d840:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d844:	441a      	add	r2, r3
 801d846:	b292      	uxth	r2, r2
 801d848:	f104 0a01 	add.w	sl, r4, #1
 801d84c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d850:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801d854:	fb16 f60c 	smulbb	r6, r6, ip
 801d858:	f102 0a01 	add.w	sl, r2, #1
 801d85c:	443e      	add	r6, r7
 801d85e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801d862:	b2b6      	uxth	r6, r6
 801d864:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801d868:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d86c:	4322      	orrs	r2, r4
 801d86e:	1c74      	adds	r4, r6, #1
 801d870:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801d874:	0976      	lsrs	r6, r6, #5
 801d876:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d87a:	4332      	orrs	r2, r6
 801d87c:	f821 2b02 	strh.w	r2, [r1], #2
 801d880:	e7cb      	b.n	801d81a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801d882:	4441      	add	r1, r8
 801d884:	e7c5      	b.n	801d812 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801d886:	4f22      	ldr	r7, [pc, #136]	; (801d910 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801d888:	0973      	lsrs	r3, r6, #5
 801d88a:	ea08 0707 	and.w	r7, r8, r7
 801d88e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d892:	433b      	orrs	r3, r7
 801d894:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801d898:	4333      	orrs	r3, r6
 801d89a:	07e7      	lsls	r7, r4, #31
 801d89c:	b29b      	uxth	r3, r3
 801d89e:	d50b      	bpl.n	801d8b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801d8a0:	0040      	lsls	r0, r0, #1
 801d8a2:	0052      	lsls	r2, r2, #1
 801d8a4:	42a9      	cmp	r1, r5
 801d8a6:	d231      	bcs.n	801d90c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d8a8:	180c      	adds	r4, r1, r0
 801d8aa:	42a1      	cmp	r1, r4
 801d8ac:	d202      	bcs.n	801d8b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801d8ae:	f821 3b02 	strh.w	r3, [r1], #2
 801d8b2:	e7fa      	b.n	801d8aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801d8b4:	4411      	add	r1, r2
 801d8b6:	e7f5      	b.n	801d8a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801d8b8:	078e      	lsls	r6, r1, #30
 801d8ba:	d008      	beq.n	801d8ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801d8bc:	0066      	lsls	r6, r4, #1
 801d8be:	460a      	mov	r2, r1
 801d8c0:	42aa      	cmp	r2, r5
 801d8c2:	d202      	bcs.n	801d8ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801d8c4:	8013      	strh	r3, [r2, #0]
 801d8c6:	4432      	add	r2, r6
 801d8c8:	e7fa      	b.n	801d8c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801d8ca:	3102      	adds	r1, #2
 801d8cc:	3801      	subs	r0, #1
 801d8ce:	07c2      	lsls	r2, r0, #31
 801d8d0:	d50b      	bpl.n	801d8ea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801d8d2:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801d8d6:	3a01      	subs	r2, #1
 801d8d8:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801d8dc:	0066      	lsls	r6, r4, #1
 801d8de:	42aa      	cmp	r2, r5
 801d8e0:	d202      	bcs.n	801d8e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801d8e2:	8013      	strh	r3, [r2, #0]
 801d8e4:	4432      	add	r2, r6
 801d8e6:	e7fa      	b.n	801d8de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801d8e8:	3801      	subs	r0, #1
 801d8ea:	b178      	cbz	r0, 801d90c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d8ec:	1040      	asrs	r0, r0, #1
 801d8ee:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801d8f2:	0080      	lsls	r0, r0, #2
 801d8f4:	0064      	lsls	r4, r4, #1
 801d8f6:	42a9      	cmp	r1, r5
 801d8f8:	d208      	bcs.n	801d90c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801d8fa:	180e      	adds	r6, r1, r0
 801d8fc:	460a      	mov	r2, r1
 801d8fe:	42b2      	cmp	r2, r6
 801d900:	d202      	bcs.n	801d908 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801d902:	f842 3b04 	str.w	r3, [r2], #4
 801d906:	e7fa      	b.n	801d8fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801d908:	4421      	add	r1, r4
 801d90a:	e7f4      	b.n	801d8f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801d90c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d910:	00fff800 	.word	0x00fff800

0801d914 <_ZN8touchgfx8LCD16bppC1Ev>:
 801d914:	2200      	movs	r2, #0
 801d916:	4912      	ldr	r1, [pc, #72]	; (801d960 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801d918:	6042      	str	r2, [r0, #4]
 801d91a:	6001      	str	r1, [r0, #0]
 801d91c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801d920:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801d924:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801d928:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801d92c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801d930:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801d934:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801d938:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801d93c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801d940:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801d944:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801d948:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801d94c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801d950:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801d954:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801d958:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801d95c:	4770      	bx	lr
 801d95e:	bf00      	nop
 801d960:	0802f658 	.word	0x0802f658

0801d964 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801d964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d968:	460d      	mov	r5, r1
 801d96a:	b08d      	sub	sp, #52	; 0x34
 801d96c:	4604      	mov	r4, r0
 801d96e:	6808      	ldr	r0, [r1, #0]
 801d970:	6849      	ldr	r1, [r1, #4]
 801d972:	4699      	mov	r9, r3
 801d974:	ab08      	add	r3, sp, #32
 801d976:	c303      	stmia	r3!, {r0, r1}
 801d978:	6810      	ldr	r0, [r2, #0]
 801d97a:	6851      	ldr	r1, [r2, #4]
 801d97c:	ab0a      	add	r3, sp, #40	; 0x28
 801d97e:	c303      	stmia	r3!, {r0, r1}
 801d980:	a808      	add	r0, sp, #32
 801d982:	f7f7 ff49 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d986:	4629      	mov	r1, r5
 801d988:	a80a      	add	r0, sp, #40	; 0x28
 801d98a:	f7f7 ff89 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d98e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801d992:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801d996:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801d99a:	4d63      	ldr	r5, [pc, #396]	; (801db28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801d99c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801d9a0:	6828      	ldr	r0, [r5, #0]
 801d9a2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801d9a6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d9aa:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801d9ae:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801d9b2:	440a      	add	r2, r1
 801d9b4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801d9b8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801d9bc:	4413      	add	r3, r2
 801d9be:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801d9c2:	6803      	ldr	r3, [r0, #0]
 801d9c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d9c6:	4798      	blx	r3
 801d9c8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d9cc:	d119      	bne.n	801da02 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801d9ce:	f010 0f20 	tst.w	r0, #32
 801d9d2:	6828      	ldr	r0, [r5, #0]
 801d9d4:	d018      	beq.n	801da08 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801d9d6:	2500      	movs	r5, #0
 801d9d8:	6801      	ldr	r1, [r0, #0]
 801d9da:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801d9de:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801d9e2:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801d9e6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801d9ea:	9502      	str	r5, [sp, #8]
 801d9ec:	b2b6      	uxth	r6, r6
 801d9ee:	fa1f f588 	uxth.w	r5, r8
 801d9f2:	9601      	str	r6, [sp, #4]
 801d9f4:	9500      	str	r5, [sp, #0]
 801d9f6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801d9f8:	4621      	mov	r1, r4
 801d9fa:	47a8      	blx	r5
 801d9fc:	b00d      	add	sp, #52	; 0x34
 801d9fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da02:	f010 0f40 	tst.w	r0, #64	; 0x40
 801da06:	e7e4      	b.n	801d9d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801da08:	6803      	ldr	r3, [r0, #0]
 801da0a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801da0c:	4798      	blx	r3
 801da0e:	4947      	ldr	r1, [pc, #284]	; (801db2c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801da10:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801da14:	880b      	ldrh	r3, [r1, #0]
 801da16:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801da1a:	fb03 5202 	mla	r2, r3, r2, r5
 801da1e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801da22:	4373      	muls	r3, r6
 801da24:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801da28:	9307      	str	r3, [sp, #28]
 801da2a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801da2e:	9306      	str	r3, [sp, #24]
 801da30:	468a      	mov	sl, r1
 801da32:	9b07      	ldr	r3, [sp, #28]
 801da34:	4298      	cmp	r0, r3
 801da36:	d270      	bcs.n	801db1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801da38:	9b06      	ldr	r3, [sp, #24]
 801da3a:	4621      	mov	r1, r4
 801da3c:	eb00 0b03 	add.w	fp, r0, r3
 801da40:	4558      	cmp	r0, fp
 801da42:	d25d      	bcs.n	801db00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801da44:	f851 4b04 	ldr.w	r4, [r1], #4
 801da48:	0e23      	lsrs	r3, r4, #24
 801da4a:	d014      	beq.n	801da76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801da4c:	2bff      	cmp	r3, #255	; 0xff
 801da4e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801da52:	d112      	bne.n	801da7a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801da54:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801da58:	d10f      	bne.n	801da7a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801da5a:	0963      	lsrs	r3, r4, #5
 801da5c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801da60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801da64:	f02c 0c07 	bic.w	ip, ip, #7
 801da68:	ea43 0c0c 	orr.w	ip, r3, ip
 801da6c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801da70:	ea4c 0404 	orr.w	r4, ip, r4
 801da74:	8004      	strh	r4, [r0, #0]
 801da76:	3002      	adds	r0, #2
 801da78:	e7e2      	b.n	801da40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801da7a:	fb09 f303 	mul.w	r3, r9, r3
 801da7e:	8807      	ldrh	r7, [r0, #0]
 801da80:	1c5a      	adds	r2, r3, #1
 801da82:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801da86:	1212      	asrs	r2, r2, #8
 801da88:	123e      	asrs	r6, r7, #8
 801da8a:	b293      	uxth	r3, r2
 801da8c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801da90:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801da94:	43d2      	mvns	r2, r2
 801da96:	b2d2      	uxtb	r2, r2
 801da98:	10fd      	asrs	r5, r7, #3
 801da9a:	fb1e fe03 	smulbb	lr, lr, r3
 801da9e:	00ff      	lsls	r7, r7, #3
 801daa0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801daa4:	fb06 e602 	mla	r6, r6, r2, lr
 801daa8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801daac:	b2ff      	uxtb	r7, r7
 801daae:	fa5f fc8c 	uxtb.w	ip, ip
 801dab2:	b2e4      	uxtb	r4, r4
 801dab4:	b2b6      	uxth	r6, r6
 801dab6:	fb1c fc03 	smulbb	ip, ip, r3
 801daba:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801dabe:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801dac2:	fb14 f403 	smulbb	r4, r4, r3
 801dac6:	fb05 c502 	mla	r5, r5, r2, ip
 801daca:	f106 0e01 	add.w	lr, r6, #1
 801dace:	fb07 4702 	mla	r7, r7, r2, r4
 801dad2:	b2ad      	uxth	r5, r5
 801dad4:	b2bf      	uxth	r7, r7
 801dad6:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801dada:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801dade:	f105 0c01 	add.w	ip, r5, #1
 801dae2:	1c7e      	adds	r6, r7, #1
 801dae4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801dae8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801daec:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801daf0:	096d      	lsrs	r5, r5, #5
 801daf2:	ea46 060e 	orr.w	r6, r6, lr
 801daf6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dafa:	432e      	orrs	r6, r5
 801dafc:	8006      	strh	r6, [r0, #0]
 801dafe:	e7ba      	b.n	801da76 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801db00:	f8ba 3000 	ldrh.w	r3, [sl]
 801db04:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801db08:	eba3 0308 	sub.w	r3, r3, r8
 801db0c:	eba4 0408 	sub.w	r4, r4, r8
 801db10:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801db14:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801db18:	e78b      	b.n	801da32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801db1a:	4b03      	ldr	r3, [pc, #12]	; (801db28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801db1c:	6818      	ldr	r0, [r3, #0]
 801db1e:	6803      	ldr	r3, [r0, #0]
 801db20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801db22:	4798      	blx	r3
 801db24:	e76a      	b.n	801d9fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801db26:	bf00      	nop
 801db28:	20012db4 	.word	0x20012db4
 801db2c:	20012dae 	.word	0x20012dae

0801db30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801db30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801db34:	460c      	mov	r4, r1
 801db36:	b085      	sub	sp, #20
 801db38:	6810      	ldr	r0, [r2, #0]
 801db3a:	6851      	ldr	r1, [r2, #4]
 801db3c:	466d      	mov	r5, sp
 801db3e:	c503      	stmia	r5!, {r0, r1}
 801db40:	6818      	ldr	r0, [r3, #0]
 801db42:	6859      	ldr	r1, [r3, #4]
 801db44:	4616      	mov	r6, r2
 801db46:	c503      	stmia	r5!, {r0, r1}
 801db48:	4668      	mov	r0, sp
 801db4a:	f7f7 fe65 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801db4e:	4631      	mov	r1, r6
 801db50:	a802      	add	r0, sp, #8
 801db52:	f7f7 fea5 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801db56:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801db5a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801db5e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801db62:	4d28      	ldr	r5, [pc, #160]	; (801dc04 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801db64:	4e28      	ldr	r6, [pc, #160]	; (801dc08 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801db66:	6828      	ldr	r0, [r5, #0]
 801db68:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801db6c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801db70:	fb11 2103 	smlabb	r1, r1, r3, r2
 801db74:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801db78:	f8bd 1000 	ldrh.w	r1, [sp]
 801db7c:	440a      	add	r2, r1
 801db7e:	f8ad 2008 	strh.w	r2, [sp, #8]
 801db82:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801db86:	4413      	add	r3, r2
 801db88:	f8ad 300a 	strh.w	r3, [sp, #10]
 801db8c:	6803      	ldr	r3, [r0, #0]
 801db8e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801db90:	4798      	blx	r3
 801db92:	8833      	ldrh	r3, [r6, #0]
 801db94:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801db98:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801db9c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801dc0c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801dba0:	fb03 1202 	mla	r2, r3, r2, r1
 801dba4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dba8:	fb08 f303 	mul.w	r3, r8, r3
 801dbac:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dbb0:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801dbb4:	4298      	cmp	r0, r3
 801dbb6:	d21d      	bcs.n	801dbf4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801dbb8:	eb00 080c 	add.w	r8, r0, ip
 801dbbc:	4540      	cmp	r0, r8
 801dbbe:	d20f      	bcs.n	801dbe0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801dbc0:	f854 1b04 	ldr.w	r1, [r4], #4
 801dbc4:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801dbc8:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801dbcc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dbd0:	ea42 0209 	orr.w	r2, r2, r9
 801dbd4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801dbd8:	430a      	orrs	r2, r1
 801dbda:	f820 2b02 	strh.w	r2, [r0], #2
 801dbde:	e7ed      	b.n	801dbbc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801dbe0:	8832      	ldrh	r2, [r6, #0]
 801dbe2:	1bd2      	subs	r2, r2, r7
 801dbe4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dbe8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801dbec:	1bd2      	subs	r2, r2, r7
 801dbee:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801dbf2:	e7df      	b.n	801dbb4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801dbf4:	6828      	ldr	r0, [r5, #0]
 801dbf6:	6803      	ldr	r3, [r0, #0]
 801dbf8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dbfa:	4798      	blx	r3
 801dbfc:	b005      	add	sp, #20
 801dbfe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801dc02:	bf00      	nop
 801dc04:	20012db4 	.word	0x20012db4
 801dc08:	20012dae 	.word	0x20012dae
 801dc0c:	fffff800 	.word	0xfffff800

0801dc10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801dc10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801dc14:	460e      	mov	r6, r1
 801dc16:	b08e      	sub	sp, #56	; 0x38
 801dc18:	4604      	mov	r4, r0
 801dc1a:	6808      	ldr	r0, [r1, #0]
 801dc1c:	6849      	ldr	r1, [r1, #4]
 801dc1e:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801ddf8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801dc22:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801ddfc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801dc26:	461d      	mov	r5, r3
 801dc28:	ab0a      	add	r3, sp, #40	; 0x28
 801dc2a:	c303      	stmia	r3!, {r0, r1}
 801dc2c:	6810      	ldr	r0, [r2, #0]
 801dc2e:	6851      	ldr	r1, [r2, #4]
 801dc30:	ab0c      	add	r3, sp, #48	; 0x30
 801dc32:	c303      	stmia	r3!, {r0, r1}
 801dc34:	a80a      	add	r0, sp, #40	; 0x28
 801dc36:	f7f7 fdef 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dc3a:	4631      	mov	r1, r6
 801dc3c:	a80c      	add	r0, sp, #48	; 0x30
 801dc3e:	f7f7 fe2f 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dc42:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801dc46:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801dc4a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801dc4e:	f8d8 0000 	ldr.w	r0, [r8]
 801dc52:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801dc56:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801dc5a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801dc5e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801dc62:	440c      	add	r4, r1
 801dc64:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801dc68:	440a      	add	r2, r1
 801dc6a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801dc6e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801dc72:	4413      	add	r3, r2
 801dc74:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801dc78:	6803      	ldr	r3, [r0, #0]
 801dc7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801dc7c:	4798      	blx	r3
 801dc7e:	2dff      	cmp	r5, #255	; 0xff
 801dc80:	d124      	bne.n	801dccc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801dc82:	f010 0f01 	tst.w	r0, #1
 801dc86:	f8d8 0000 	ldr.w	r0, [r8]
 801dc8a:	d022      	beq.n	801dcd2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801dc8c:	2100      	movs	r1, #0
 801dc8e:	f8d0 c000 	ldr.w	ip, [r0]
 801dc92:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801dc96:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801dc9a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801dc9e:	f04f 0e01 	mov.w	lr, #1
 801dca2:	f8cd e018 	str.w	lr, [sp, #24]
 801dca6:	f8b9 e000 	ldrh.w	lr, [r9]
 801dcaa:	9503      	str	r5, [sp, #12]
 801dcac:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801dcb0:	b2b6      	uxth	r6, r6
 801dcb2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801dcb6:	9102      	str	r1, [sp, #8]
 801dcb8:	b2bf      	uxth	r7, r7
 801dcba:	9601      	str	r6, [sp, #4]
 801dcbc:	9700      	str	r7, [sp, #0]
 801dcbe:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801dcc2:	4621      	mov	r1, r4
 801dcc4:	47a8      	blx	r5
 801dcc6:	b00e      	add	sp, #56	; 0x38
 801dcc8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801dccc:	f010 0f04 	tst.w	r0, #4
 801dcd0:	e7d9      	b.n	801dc86 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801dcd2:	6803      	ldr	r3, [r0, #0]
 801dcd4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dcd6:	4798      	blx	r3
 801dcd8:	f8b9 3000 	ldrh.w	r3, [r9]
 801dcdc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801dce0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801dce4:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801dce8:	fb03 1202 	mla	r2, r3, r2, r1
 801dcec:	ebac 0c07 	sub.w	ip, ip, r7
 801dcf0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dcf4:	435e      	muls	r6, r3
 801dcf6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801dcfa:	2dff      	cmp	r5, #255	; 0xff
 801dcfc:	eba3 0707 	sub.w	r7, r3, r7
 801dd00:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801dd04:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801dd08:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801dd0c:	d049      	beq.n	801dda2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801dd0e:	43eb      	mvns	r3, r5
 801dd10:	fa1f f985 	uxth.w	r9, r5
 801dd14:	b2db      	uxtb	r3, r3
 801dd16:	42b0      	cmp	r0, r6
 801dd18:	d266      	bcs.n	801dde8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801dd1a:	eb00 0a0e 	add.w	sl, r0, lr
 801dd1e:	4550      	cmp	r0, sl
 801dd20:	4621      	mov	r1, r4
 801dd22:	f104 0403 	add.w	r4, r4, #3
 801dd26:	d25b      	bcs.n	801dde0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801dd28:	8802      	ldrh	r2, [r0, #0]
 801dd2a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801dd2e:	ea4f 2822 	mov.w	r8, r2, asr #8
 801dd32:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801dd36:	fb11 f109 	smulbb	r1, r1, r9
 801dd3a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801dd3e:	10d5      	asrs	r5, r2, #3
 801dd40:	fb08 1803 	mla	r8, r8, r3, r1
 801dd44:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801dd48:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801dd4c:	fb11 f109 	smulbb	r1, r1, r9
 801dd50:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801dd54:	fb05 1503 	mla	r5, r5, r3, r1
 801dd58:	00d2      	lsls	r2, r2, #3
 801dd5a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801dd5e:	b2d2      	uxtb	r2, r2
 801dd60:	fb11 f109 	smulbb	r1, r1, r9
 801dd64:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801dd68:	fa1f f888 	uxth.w	r8, r8
 801dd6c:	fb02 1203 	mla	r2, r2, r3, r1
 801dd70:	b292      	uxth	r2, r2
 801dd72:	f108 0101 	add.w	r1, r8, #1
 801dd76:	b2ad      	uxth	r5, r5
 801dd78:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801dd7c:	1c51      	adds	r1, r2, #1
 801dd7e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801dd82:	1c69      	adds	r1, r5, #1
 801dd84:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801dd88:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801dd8c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dd90:	096d      	lsrs	r5, r5, #5
 801dd92:	ea42 0208 	orr.w	r2, r2, r8
 801dd96:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dd9a:	432a      	orrs	r2, r5
 801dd9c:	f820 2b02 	strh.w	r2, [r0], #2
 801dda0:	e7bd      	b.n	801dd1e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801dda2:	4a14      	ldr	r2, [pc, #80]	; (801ddf4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801dda4:	42b0      	cmp	r0, r6
 801dda6:	d21f      	bcs.n	801dde8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801dda8:	eb00 050e 	add.w	r5, r0, lr
 801ddac:	42a8      	cmp	r0, r5
 801ddae:	4621      	mov	r1, r4
 801ddb0:	f104 0403 	add.w	r4, r4, #3
 801ddb4:	d210      	bcs.n	801ddd8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801ddb6:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801ddba:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801ddbe:	00db      	lsls	r3, r3, #3
 801ddc0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801ddc4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ddc8:	430b      	orrs	r3, r1
 801ddca:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ddce:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801ddd2:	f820 3b02 	strh.w	r3, [r0], #2
 801ddd6:	e7e9      	b.n	801ddac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801ddd8:	4438      	add	r0, r7
 801ddda:	eb01 040c 	add.w	r4, r1, ip
 801ddde:	e7e1      	b.n	801dda4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801dde0:	4438      	add	r0, r7
 801dde2:	eb01 040c 	add.w	r4, r1, ip
 801dde6:	e796      	b.n	801dd16 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801dde8:	4b03      	ldr	r3, [pc, #12]	; (801ddf8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801ddea:	6818      	ldr	r0, [r3, #0]
 801ddec:	6803      	ldr	r3, [r0, #0]
 801ddee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ddf0:	4798      	blx	r3
 801ddf2:	e768      	b.n	801dcc6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801ddf4:	fffff800 	.word	0xfffff800
 801ddf8:	20012db4 	.word	0x20012db4
 801ddfc:	20012dae 	.word	0x20012dae

0801de00 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801de00:	b4f0      	push	{r4, r5, r6, r7}
 801de02:	4616      	mov	r6, r2
 801de04:	2e01      	cmp	r6, #1
 801de06:	461c      	mov	r4, r3
 801de08:	460d      	mov	r5, r1
 801de0a:	9a04      	ldr	r2, [sp, #16]
 801de0c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801de10:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801de14:	d012      	beq.n	801de3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801de16:	d303      	bcc.n	801de20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801de18:	2e02      	cmp	r6, #2
 801de1a:	d00a      	beq.n	801de32 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801de1c:	bcf0      	pop	{r4, r5, r6, r7}
 801de1e:	4770      	bx	lr
 801de20:	6805      	ldr	r5, [r0, #0]
 801de22:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801de26:	68ed      	ldr	r5, [r5, #12]
 801de28:	4613      	mov	r3, r2
 801de2a:	46ac      	mov	ip, r5
 801de2c:	4622      	mov	r2, r4
 801de2e:	bcf0      	pop	{r4, r5, r6, r7}
 801de30:	4760      	bx	ip
 801de32:	4621      	mov	r1, r4
 801de34:	4628      	mov	r0, r5
 801de36:	bcf0      	pop	{r4, r5, r6, r7}
 801de38:	f7ff bd94 	b.w	801d964 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801de3c:	4621      	mov	r1, r4
 801de3e:	4628      	mov	r0, r5
 801de40:	bcf0      	pop	{r4, r5, r6, r7}
 801de42:	f7ff bee5 	b.w	801dc10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801de48 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801de48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de4c:	4681      	mov	r9, r0
 801de4e:	b093      	sub	sp, #76	; 0x4c
 801de50:	6810      	ldr	r0, [r2, #0]
 801de52:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801de56:	4f6d      	ldr	r7, [pc, #436]	; (801e00c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801de58:	4688      	mov	r8, r1
 801de5a:	6851      	ldr	r1, [r2, #4]
 801de5c:	ac0e      	add	r4, sp, #56	; 0x38
 801de5e:	c403      	stmia	r4!, {r0, r1}
 801de60:	6818      	ldr	r0, [r3, #0]
 801de62:	6859      	ldr	r1, [r3, #4]
 801de64:	ac10      	add	r4, sp, #64	; 0x40
 801de66:	4616      	mov	r6, r2
 801de68:	c403      	stmia	r4!, {r0, r1}
 801de6a:	a80e      	add	r0, sp, #56	; 0x38
 801de6c:	f7f7 fcd4 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801de70:	4631      	mov	r1, r6
 801de72:	a810      	add	r0, sp, #64	; 0x40
 801de74:	f7f7 fd14 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801de78:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801de7c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801de80:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801de84:	4e62      	ldr	r6, [pc, #392]	; (801e010 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801de86:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801de8a:	6830      	ldr	r0, [r6, #0]
 801de8c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801de90:	fb11 2103 	smlabb	r1, r1, r3, r2
 801de94:	4489      	add	r9, r1
 801de96:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801de9a:	440a      	add	r2, r1
 801de9c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801dea0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801dea4:	4413      	add	r3, r2
 801dea6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801deaa:	6803      	ldr	r3, [r0, #0]
 801deac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801deae:	4798      	blx	r3
 801deb0:	f010 0f80 	tst.w	r0, #128	; 0x80
 801deb4:	6830      	ldr	r0, [r6, #0]
 801deb6:	d01d      	beq.n	801def4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801deb8:	2200      	movs	r2, #0
 801deba:	6801      	ldr	r1, [r0, #0]
 801debc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801dec0:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801dec4:	220b      	movs	r2, #11
 801dec6:	9207      	str	r2, [sp, #28]
 801dec8:	883a      	ldrh	r2, [r7, #0]
 801deca:	9206      	str	r2, [sp, #24]
 801decc:	2201      	movs	r2, #1
 801dece:	e9cd a204 	strd	sl, r2, [sp, #16]
 801ded2:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801ded6:	9203      	str	r2, [sp, #12]
 801ded8:	b2a4      	uxth	r4, r4
 801deda:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801dede:	9200      	str	r2, [sp, #0]
 801dee0:	b2ad      	uxth	r5, r5
 801dee2:	9502      	str	r5, [sp, #8]
 801dee4:	9401      	str	r4, [sp, #4]
 801dee6:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801dee8:	4642      	mov	r2, r8
 801deea:	4649      	mov	r1, r9
 801deec:	47a0      	blx	r4
 801deee:	b013      	add	sp, #76	; 0x4c
 801def0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801def4:	6803      	ldr	r3, [r0, #0]
 801def6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801def8:	4798      	blx	r3
 801defa:	883b      	ldrh	r3, [r7, #0]
 801defc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801df00:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801df04:	fb03 1202 	mla	r2, r3, r2, r1
 801df08:	435d      	muls	r5, r3
 801df0a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801df0e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801df12:	920c      	str	r2, [sp, #48]	; 0x30
 801df14:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801df18:	1b12      	subs	r2, r2, r4
 801df1a:	920d      	str	r2, [sp, #52]	; 0x34
 801df1c:	0062      	lsls	r2, r4, #1
 801df1e:	1b1c      	subs	r4, r3, r4
 801df20:	0063      	lsls	r3, r4, #1
 801df22:	920a      	str	r2, [sp, #40]	; 0x28
 801df24:	930b      	str	r3, [sp, #44]	; 0x2c
 801df26:	f04f 0e04 	mov.w	lr, #4
 801df2a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801df2c:	4298      	cmp	r0, r3
 801df2e:	d266      	bcs.n	801dffe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801df30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801df32:	eb00 0b03 	add.w	fp, r0, r3
 801df36:	4558      	cmp	r0, fp
 801df38:	d25c      	bcs.n	801dff4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801df3a:	f819 3b01 	ldrb.w	r3, [r9], #1
 801df3e:	fb1e e303 	smlabb	r3, lr, r3, lr
 801df42:	f858 2003 	ldr.w	r2, [r8, r3]
 801df46:	0e11      	lsrs	r1, r2, #24
 801df48:	d012      	beq.n	801df70 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801df4a:	29ff      	cmp	r1, #255	; 0xff
 801df4c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801df50:	d110      	bne.n	801df74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801df52:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801df56:	d10d      	bne.n	801df74 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801df58:	0953      	lsrs	r3, r2, #5
 801df5a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801df5e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801df62:	f027 0707 	bic.w	r7, r7, #7
 801df66:	431f      	orrs	r7, r3
 801df68:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801df6c:	433a      	orrs	r2, r7
 801df6e:	8002      	strh	r2, [r0, #0]
 801df70:	3002      	adds	r0, #2
 801df72:	e7e0      	b.n	801df36 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801df74:	fb0a f101 	mul.w	r1, sl, r1
 801df78:	8806      	ldrh	r6, [r0, #0]
 801df7a:	1c4b      	adds	r3, r1, #1
 801df7c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801df80:	1235      	asrs	r5, r6, #8
 801df82:	10f4      	asrs	r4, r6, #3
 801df84:	121b      	asrs	r3, r3, #8
 801df86:	00f6      	lsls	r6, r6, #3
 801df88:	b299      	uxth	r1, r3
 801df8a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801df8e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801df92:	b2f6      	uxtb	r6, r6
 801df94:	43db      	mvns	r3, r3
 801df96:	b2d2      	uxtb	r2, r2
 801df98:	b2db      	uxtb	r3, r3
 801df9a:	fb1c fc01 	smulbb	ip, ip, r1
 801df9e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801dfa2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801dfa6:	fb12 f201 	smulbb	r2, r2, r1
 801dfaa:	fb05 c503 	mla	r5, r5, r3, ip
 801dfae:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801dfb2:	b2ff      	uxtb	r7, r7
 801dfb4:	fb06 2203 	mla	r2, r6, r3, r2
 801dfb8:	b2ad      	uxth	r5, r5
 801dfba:	fb17 f701 	smulbb	r7, r7, r1
 801dfbe:	b292      	uxth	r2, r2
 801dfc0:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801dfc4:	fb04 7403 	mla	r4, r4, r3, r7
 801dfc8:	f105 0c01 	add.w	ip, r5, #1
 801dfcc:	1c57      	adds	r7, r2, #1
 801dfce:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801dfd2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801dfd6:	b2a4      	uxth	r4, r4
 801dfd8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801dfdc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801dfe0:	433d      	orrs	r5, r7
 801dfe2:	1c67      	adds	r7, r4, #1
 801dfe4:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801dfe8:	0964      	lsrs	r4, r4, #5
 801dfea:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801dfee:	4325      	orrs	r5, r4
 801dff0:	8005      	strh	r5, [r0, #0]
 801dff2:	e7bd      	b.n	801df70 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801dff4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dff6:	4418      	add	r0, r3
 801dff8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dffa:	4499      	add	r9, r3
 801dffc:	e795      	b.n	801df2a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801dffe:	4b04      	ldr	r3, [pc, #16]	; (801e010 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e000:	6818      	ldr	r0, [r3, #0]
 801e002:	6803      	ldr	r3, [r0, #0]
 801e004:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e006:	4798      	blx	r3
 801e008:	e771      	b.n	801deee <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801e00a:	bf00      	nop
 801e00c:	20012dae 	.word	0x20012dae
 801e010:	20012db4 	.word	0x20012db4

0801e014 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801e014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e018:	b087      	sub	sp, #28
 801e01a:	4680      	mov	r8, r0
 801e01c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801e020:	460d      	mov	r5, r1
 801e022:	4614      	mov	r4, r2
 801e024:	2e00      	cmp	r6, #0
 801e026:	f000 80b9 	beq.w	801e19c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801e02a:	6810      	ldr	r0, [r2, #0]
 801e02c:	6851      	ldr	r1, [r2, #4]
 801e02e:	af02      	add	r7, sp, #8
 801e030:	c703      	stmia	r7!, {r0, r1}
 801e032:	6818      	ldr	r0, [r3, #0]
 801e034:	6859      	ldr	r1, [r3, #4]
 801e036:	af04      	add	r7, sp, #16
 801e038:	c703      	stmia	r7!, {r0, r1}
 801e03a:	a802      	add	r0, sp, #8
 801e03c:	f7f7 fbec 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e040:	4621      	mov	r1, r4
 801e042:	a804      	add	r0, sp, #16
 801e044:	f7f7 fc2c 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e048:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e04c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e050:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801e054:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801e058:	fb14 2103 	smlabb	r1, r4, r3, r2
 801e05c:	eb08 0401 	add.w	r4, r8, r1
 801e060:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e064:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e068:	440a      	add	r2, r1
 801e06a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e06e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e072:	4413      	add	r3, r2
 801e074:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e078:	4b4a      	ldr	r3, [pc, #296]	; (801e1a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e07a:	6818      	ldr	r0, [r3, #0]
 801e07c:	6803      	ldr	r3, [r0, #0]
 801e07e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e080:	4798      	blx	r3
 801e082:	4b49      	ldr	r3, [pc, #292]	; (801e1a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801e084:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801e088:	881a      	ldrh	r2, [r3, #0]
 801e08a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801e08e:	2eff      	cmp	r6, #255	; 0xff
 801e090:	fb02 c101 	mla	r1, r2, r1, ip
 801e094:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e098:	fb02 f207 	mul.w	r2, r2, r7
 801e09c:	f105 0104 	add.w	r1, r5, #4
 801e0a0:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801e0a4:	461d      	mov	r5, r3
 801e0a6:	d05a      	beq.n	801e15e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801e0a8:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801e0ac:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e0b0:	b2b6      	uxth	r6, r6
 801e0b2:	fa1f fe8e 	uxth.w	lr, lr
 801e0b6:	9301      	str	r3, [sp, #4]
 801e0b8:	4282      	cmp	r2, r0
 801e0ba:	d96a      	bls.n	801e192 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e0bc:	eb00 0b0a 	add.w	fp, r0, sl
 801e0c0:	4583      	cmp	fp, r0
 801e0c2:	d940      	bls.n	801e146 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801e0c4:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e0c8:	8805      	ldrh	r5, [r0, #0]
 801e0ca:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e0ce:	122f      	asrs	r7, r5, #8
 801e0d0:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e0d4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e0d8:	fb17 f70e 	smulbb	r7, r7, lr
 801e0dc:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e0e0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e0e4:	00ed      	lsls	r5, r5, #3
 801e0e6:	fb0c 7c06 	mla	ip, ip, r6, r7
 801e0ea:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801e0ee:	10df      	asrs	r7, r3, #3
 801e0f0:	b2ed      	uxtb	r5, r5
 801e0f2:	00db      	lsls	r3, r3, #3
 801e0f4:	fa1f fc8c 	uxth.w	ip, ip
 801e0f8:	fb19 f90e 	smulbb	r9, r9, lr
 801e0fc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e100:	b2db      	uxtb	r3, r3
 801e102:	fb15 f50e 	smulbb	r5, r5, lr
 801e106:	fb07 9706 	mla	r7, r7, r6, r9
 801e10a:	fb03 5306 	mla	r3, r3, r6, r5
 801e10e:	f10c 0901 	add.w	r9, ip, #1
 801e112:	b29b      	uxth	r3, r3
 801e114:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801e118:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801e11c:	f103 0c01 	add.w	ip, r3, #1
 801e120:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e124:	b2bf      	uxth	r7, r7
 801e126:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e12a:	ea4c 0c09 	orr.w	ip, ip, r9
 801e12e:	f107 0901 	add.w	r9, r7, #1
 801e132:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801e136:	097f      	lsrs	r7, r7, #5
 801e138:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801e13c:	ea4c 0c07 	orr.w	ip, ip, r7
 801e140:	f820 cb02 	strh.w	ip, [r0], #2
 801e144:	e7bc      	b.n	801e0c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801e146:	9b01      	ldr	r3, [sp, #4]
 801e148:	881b      	ldrh	r3, [r3, #0]
 801e14a:	eba3 0308 	sub.w	r3, r3, r8
 801e14e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e152:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e156:	eba3 0308 	sub.w	r3, r3, r8
 801e15a:	441c      	add	r4, r3
 801e15c:	e7ac      	b.n	801e0b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801e15e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e162:	4282      	cmp	r2, r0
 801e164:	d915      	bls.n	801e192 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e166:	eb00 060a 	add.w	r6, r0, sl
 801e16a:	4286      	cmp	r6, r0
 801e16c:	d906      	bls.n	801e17c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801e16e:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e172:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e176:	f820 3b02 	strh.w	r3, [r0], #2
 801e17a:	e7f6      	b.n	801e16a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801e17c:	882b      	ldrh	r3, [r5, #0]
 801e17e:	eba3 0308 	sub.w	r3, r3, r8
 801e182:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e186:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e18a:	eba3 0308 	sub.w	r3, r3, r8
 801e18e:	441c      	add	r4, r3
 801e190:	e7e7      	b.n	801e162 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801e192:	4b04      	ldr	r3, [pc, #16]	; (801e1a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e194:	6818      	ldr	r0, [r3, #0]
 801e196:	6803      	ldr	r3, [r0, #0]
 801e198:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e19a:	4798      	blx	r3
 801e19c:	b007      	add	sp, #28
 801e19e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e1a2:	bf00      	nop
 801e1a4:	20012db4 	.word	0x20012db4
 801e1a8:	20012dae 	.word	0x20012dae

0801e1ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801e1ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1b0:	b091      	sub	sp, #68	; 0x44
 801e1b2:	4680      	mov	r8, r0
 801e1b4:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801e1b8:	460f      	mov	r7, r1
 801e1ba:	4614      	mov	r4, r2
 801e1bc:	2d00      	cmp	r5, #0
 801e1be:	d051      	beq.n	801e264 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e1c0:	6810      	ldr	r0, [r2, #0]
 801e1c2:	6851      	ldr	r1, [r2, #4]
 801e1c4:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801e3c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801e1c8:	ae0c      	add	r6, sp, #48	; 0x30
 801e1ca:	c603      	stmia	r6!, {r0, r1}
 801e1cc:	6818      	ldr	r0, [r3, #0]
 801e1ce:	6859      	ldr	r1, [r3, #4]
 801e1d0:	ae0e      	add	r6, sp, #56	; 0x38
 801e1d2:	c603      	stmia	r6!, {r0, r1}
 801e1d4:	a80c      	add	r0, sp, #48	; 0x30
 801e1d6:	f7f7 fb1f 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e1da:	4621      	mov	r1, r4
 801e1dc:	a80e      	add	r0, sp, #56	; 0x38
 801e1de:	f7f7 fb5f 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e1e2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801e1e6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e1ea:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801e1ee:	f8d9 0000 	ldr.w	r0, [r9]
 801e1f2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801e1f6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801e1fa:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e1fe:	eb08 0401 	add.w	r4, r8, r1
 801e202:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801e206:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801e3cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801e20a:	440a      	add	r2, r1
 801e20c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801e210:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801e214:	4413      	add	r3, r2
 801e216:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801e21a:	6803      	ldr	r3, [r0, #0]
 801e21c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e21e:	4798      	blx	r3
 801e220:	f010 0f80 	tst.w	r0, #128	; 0x80
 801e224:	f8d9 0000 	ldr.w	r0, [r9]
 801e228:	d01f      	beq.n	801e26a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801e22a:	2200      	movs	r2, #0
 801e22c:	6801      	ldr	r1, [r0, #0]
 801e22e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801e232:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e236:	220b      	movs	r2, #11
 801e238:	9207      	str	r2, [sp, #28]
 801e23a:	f8b8 2000 	ldrh.w	r2, [r8]
 801e23e:	9206      	str	r2, [sp, #24]
 801e240:	2201      	movs	r2, #1
 801e242:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801e246:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801e24a:	9203      	str	r2, [sp, #12]
 801e24c:	fa1f f28a 	uxth.w	r2, sl
 801e250:	9202      	str	r2, [sp, #8]
 801e252:	b2b6      	uxth	r6, r6
 801e254:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801e258:	9200      	str	r2, [sp, #0]
 801e25a:	9601      	str	r6, [sp, #4]
 801e25c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801e25e:	463a      	mov	r2, r7
 801e260:	4621      	mov	r1, r4
 801e262:	47a8      	blx	r5
 801e264:	b011      	add	sp, #68	; 0x44
 801e266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e26a:	6803      	ldr	r3, [r0, #0]
 801e26c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e26e:	4798      	blx	r3
 801e270:	f8b8 2000 	ldrh.w	r2, [r8]
 801e274:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801e278:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801e27c:	2dff      	cmp	r5, #255	; 0xff
 801e27e:	fb02 1303 	mla	r3, r2, r3, r1
 801e282:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e286:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801e28a:	fb0a fa02 	mul.w	sl, sl, r2
 801e28e:	d062      	beq.n	801e356 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801e290:	ea6f 0c05 	mvn.w	ip, r5
 801e294:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801e298:	930a      	str	r3, [sp, #40]	; 0x28
 801e29a:	b2ad      	uxth	r5, r5
 801e29c:	fa5f fc8c 	uxtb.w	ip, ip
 801e2a0:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801e2a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e2a6:	4298      	cmp	r0, r3
 801e2a8:	f080 8085 	bcs.w	801e3b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e2ac:	eb00 0b09 	add.w	fp, r0, r9
 801e2b0:	4558      	cmp	r0, fp
 801e2b2:	d246      	bcs.n	801e342 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801e2b4:	f814 eb01 	ldrb.w	lr, [r4], #1
 801e2b8:	2303      	movs	r3, #3
 801e2ba:	2204      	movs	r2, #4
 801e2bc:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801e2c0:	eb07 0a0e 	add.w	sl, r7, lr
 801e2c4:	8803      	ldrh	r3, [r0, #0]
 801e2c6:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801e2ca:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e2ce:	1219      	asrs	r1, r3, #8
 801e2d0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e2d4:	fb18 f805 	smulbb	r8, r8, r5
 801e2d8:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801e2dc:	10da      	asrs	r2, r3, #3
 801e2de:	fb01 810c 	mla	r1, r1, ip, r8
 801e2e2:	00db      	lsls	r3, r3, #3
 801e2e4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e2e8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e2ec:	b2db      	uxtb	r3, r3
 801e2ee:	fb18 f805 	smulbb	r8, r8, r5
 801e2f2:	fb1e fe05 	smulbb	lr, lr, r5
 801e2f6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801e2fa:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801e2fe:	b289      	uxth	r1, r1
 801e300:	fb02 820c 	mla	r2, r2, ip, r8
 801e304:	fb03 e30c 	mla	r3, r3, ip, lr
 801e308:	b292      	uxth	r2, r2
 801e30a:	b29b      	uxth	r3, r3
 801e30c:	f101 0801 	add.w	r8, r1, #1
 801e310:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801e314:	f103 0e01 	add.w	lr, r3, #1
 801e318:	f102 0801 	add.w	r8, r2, #1
 801e31c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801e320:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801e324:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e328:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e32c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801e330:	ea4e 0101 	orr.w	r1, lr, r1
 801e334:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801e338:	ea41 0108 	orr.w	r1, r1, r8
 801e33c:	f820 1b02 	strh.w	r1, [r0], #2
 801e340:	e7b6      	b.n	801e2b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801e342:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e344:	881b      	ldrh	r3, [r3, #0]
 801e346:	1b9b      	subs	r3, r3, r6
 801e348:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e34c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e350:	1b9b      	subs	r3, r3, r6
 801e352:	441c      	add	r4, r3
 801e354:	e7a6      	b.n	801e2a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801e356:	491b      	ldr	r1, [pc, #108]	; (801e3c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801e358:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801e35c:	2203      	movs	r2, #3
 801e35e:	2504      	movs	r5, #4
 801e360:	4550      	cmp	r0, sl
 801e362:	d228      	bcs.n	801e3b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801e364:	eb00 0c09 	add.w	ip, r0, r9
 801e368:	4560      	cmp	r0, ip
 801e36a:	4623      	mov	r3, r4
 801e36c:	d219      	bcs.n	801e3a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801e36e:	f893 e000 	ldrb.w	lr, [r3]
 801e372:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801e376:	eb07 0b0e 	add.w	fp, r7, lr
 801e37a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e37e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801e382:	f89b b001 	ldrb.w	fp, [fp, #1]
 801e386:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801e38a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801e38e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801e392:	ea43 030b 	orr.w	r3, r3, fp
 801e396:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801e39a:	3401      	adds	r4, #1
 801e39c:	f820 3b02 	strh.w	r3, [r0], #2
 801e3a0:	e7e2      	b.n	801e368 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801e3a2:	f8b8 3000 	ldrh.w	r3, [r8]
 801e3a6:	1b9b      	subs	r3, r3, r6
 801e3a8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e3ac:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e3b0:	1b9b      	subs	r3, r3, r6
 801e3b2:	441c      	add	r4, r3
 801e3b4:	e7d4      	b.n	801e360 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801e3b6:	4b04      	ldr	r3, [pc, #16]	; (801e3c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801e3b8:	6818      	ldr	r0, [r3, #0]
 801e3ba:	6803      	ldr	r3, [r0, #0]
 801e3bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e3be:	4798      	blx	r3
 801e3c0:	e750      	b.n	801e264 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e3c2:	bf00      	nop
 801e3c4:	fffff800 	.word	0xfffff800
 801e3c8:	20012db4 	.word	0x20012db4
 801e3cc:	20012dae 	.word	0x20012dae

0801e3d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801e3d0:	b4f0      	push	{r4, r5, r6, r7}
 801e3d2:	460c      	mov	r4, r1
 801e3d4:	4611      	mov	r1, r2
 801e3d6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801e3da:	780f      	ldrb	r7, [r1, #0]
 801e3dc:	784e      	ldrb	r6, [r1, #1]
 801e3de:	2f01      	cmp	r7, #1
 801e3e0:	461a      	mov	r2, r3
 801e3e2:	9b04      	ldr	r3, [sp, #16]
 801e3e4:	d036      	beq.n	801e454 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801e3e6:	d31e      	bcc.n	801e426 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801e3e8:	2f02      	cmp	r7, #2
 801e3ea:	d14a      	bne.n	801e482 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e3ec:	2e03      	cmp	r6, #3
 801e3ee:	d848      	bhi.n	801e482 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e3f0:	e8df f006 	tbb	[pc, r6]
 801e3f4:	16140702 	.word	0x16140702
 801e3f8:	9504      	str	r5, [sp, #16]
 801e3fa:	4620      	mov	r0, r4
 801e3fc:	bcf0      	pop	{r4, r5, r6, r7}
 801e3fe:	f7ff be09 	b.w	801e014 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801e402:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e404:	2800      	cmp	r0, #0
 801e406:	d03c      	beq.n	801e482 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e408:	6806      	ldr	r6, [r0, #0]
 801e40a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e40e:	68b5      	ldr	r5, [r6, #8]
 801e410:	4613      	mov	r3, r2
 801e412:	46ac      	mov	ip, r5
 801e414:	460a      	mov	r2, r1
 801e416:	4621      	mov	r1, r4
 801e418:	bcf0      	pop	{r4, r5, r6, r7}
 801e41a:	4760      	bx	ip
 801e41c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e41e:	e7f1      	b.n	801e404 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e420:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e424:	e7ee      	b.n	801e404 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801e426:	2e03      	cmp	r6, #3
 801e428:	d82b      	bhi.n	801e482 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e42a:	e8df f006 	tbb	[pc, r6]
 801e42e:	0702      	.short	0x0702
 801e430:	100e      	.short	0x100e
 801e432:	9504      	str	r5, [sp, #16]
 801e434:	4620      	mov	r0, r4
 801e436:	bcf0      	pop	{r4, r5, r6, r7}
 801e438:	f7ff bd06 	b.w	801de48 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801e43c:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e43e:	b300      	cbz	r0, 801e482 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e440:	6806      	ldr	r6, [r0, #0]
 801e442:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e446:	68f5      	ldr	r5, [r6, #12]
 801e448:	e7e2      	b.n	801e410 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e44a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e44c:	e7f7      	b.n	801e43e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e44e:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e452:	e7f4      	b.n	801e43e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801e454:	2e03      	cmp	r6, #3
 801e456:	d814      	bhi.n	801e482 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e458:	e8df f006 	tbb	[pc, r6]
 801e45c:	100e0702 	.word	0x100e0702
 801e460:	9504      	str	r5, [sp, #16]
 801e462:	4620      	mov	r0, r4
 801e464:	bcf0      	pop	{r4, r5, r6, r7}
 801e466:	f7ff bea1 	b.w	801e1ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801e46a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801e46c:	b148      	cbz	r0, 801e482 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801e46e:	6806      	ldr	r6, [r0, #0]
 801e470:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801e474:	6935      	ldr	r5, [r6, #16]
 801e476:	e7cb      	b.n	801e410 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801e478:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801e47a:	e7f7      	b.n	801e46c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e47c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801e480:	e7f4      	b.n	801e46c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801e482:	bcf0      	pop	{r4, r5, r6, r7}
 801e484:	4770      	bx	lr
	...

0801e488 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801e488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e48c:	4604      	mov	r4, r0
 801e48e:	b087      	sub	sp, #28
 801e490:	6810      	ldr	r0, [r2, #0]
 801e492:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801e496:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801e6d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801e49a:	460e      	mov	r6, r1
 801e49c:	6851      	ldr	r1, [r2, #4]
 801e49e:	ad02      	add	r5, sp, #8
 801e4a0:	c503      	stmia	r5!, {r0, r1}
 801e4a2:	6818      	ldr	r0, [r3, #0]
 801e4a4:	6859      	ldr	r1, [r3, #4]
 801e4a6:	ad04      	add	r5, sp, #16
 801e4a8:	4617      	mov	r7, r2
 801e4aa:	c503      	stmia	r5!, {r0, r1}
 801e4ac:	a802      	add	r0, sp, #8
 801e4ae:	f7f7 f9b3 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e4b2:	4639      	mov	r1, r7
 801e4b4:	a804      	add	r0, sp, #16
 801e4b6:	f7f7 f9f3 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e4ba:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e4be:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e4c2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801e4c6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e4ca:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801e4ce:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e4d2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801e4d6:	440e      	add	r6, r1
 801e4d8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e4dc:	440a      	add	r2, r1
 801e4de:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e4e2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e4e6:	4413      	add	r3, r2
 801e4e8:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e4ec:	4b77      	ldr	r3, [pc, #476]	; (801e6cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e4ee:	6818      	ldr	r0, [r3, #0]
 801e4f0:	6803      	ldr	r3, [r0, #0]
 801e4f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e4f4:	4798      	blx	r3
 801e4f6:	f8b9 b000 	ldrh.w	fp, [r9]
 801e4fa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e4fe:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e502:	fb0b 2303 	mla	r3, fp, r3, r2
 801e506:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e50a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e50e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e512:	fb05 f50b 	mul.w	r5, r5, fp
 801e516:	9300      	str	r3, [sp, #0]
 801e518:	d069      	beq.n	801e5ee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801e51a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801e51e:	4558      	cmp	r0, fp
 801e520:	f080 80cc 	bcs.w	801e6bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e524:	9b00      	ldr	r3, [sp, #0]
 801e526:	18c3      	adds	r3, r0, r3
 801e528:	9301      	str	r3, [sp, #4]
 801e52a:	4631      	mov	r1, r6
 801e52c:	9b01      	ldr	r3, [sp, #4]
 801e52e:	4298      	cmp	r0, r3
 801e530:	d24f      	bcs.n	801e5d2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801e532:	f811 2b01 	ldrb.w	r2, [r1], #1
 801e536:	2a00      	cmp	r2, #0
 801e538:	d048      	beq.n	801e5cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e53a:	fb0a f202 	mul.w	r2, sl, r2
 801e53e:	1c53      	adds	r3, r2, #1
 801e540:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e544:	121b      	asrs	r3, r3, #8
 801e546:	d041      	beq.n	801e5cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801e548:	8802      	ldrh	r2, [r0, #0]
 801e54a:	f8b4 c000 	ldrh.w	ip, [r4]
 801e54e:	b29e      	uxth	r6, r3
 801e550:	1215      	asrs	r5, r2, #8
 801e552:	43db      	mvns	r3, r3
 801e554:	b2db      	uxtb	r3, r3
 801e556:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e55a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e55e:	fb15 f503 	smulbb	r5, r5, r3
 801e562:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801e566:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e56a:	00d2      	lsls	r2, r2, #3
 801e56c:	fb07 5706 	mla	r7, r7, r6, r5
 801e570:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e574:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e578:	b2d2      	uxtb	r2, r2
 801e57a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e57e:	b2bf      	uxth	r7, r7
 801e580:	fb1e fe03 	smulbb	lr, lr, r3
 801e584:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e588:	fa5f fc8c 	uxtb.w	ip, ip
 801e58c:	fb12 f203 	smulbb	r2, r2, r3
 801e590:	fb05 e506 	mla	r5, r5, r6, lr
 801e594:	fb0c 2c06 	mla	ip, ip, r6, r2
 801e598:	f107 0e01 	add.w	lr, r7, #1
 801e59c:	fa1f fc8c 	uxth.w	ip, ip
 801e5a0:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801e5a4:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801e5a8:	f10c 0701 	add.w	r7, ip, #1
 801e5ac:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e5b0:	b2ad      	uxth	r5, r5
 801e5b2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e5b6:	ea47 070e 	orr.w	r7, r7, lr
 801e5ba:	f105 0e01 	add.w	lr, r5, #1
 801e5be:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801e5c2:	096d      	lsrs	r5, r5, #5
 801e5c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e5c8:	432f      	orrs	r7, r5
 801e5ca:	8007      	strh	r7, [r0, #0]
 801e5cc:	3002      	adds	r0, #2
 801e5ce:	3402      	adds	r4, #2
 801e5d0:	e7ac      	b.n	801e52c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801e5d2:	f8b9 3000 	ldrh.w	r3, [r9]
 801e5d6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e5da:	eba3 0308 	sub.w	r3, r3, r8
 801e5de:	eba6 0608 	sub.w	r6, r6, r8
 801e5e2:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e5e6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e5ea:	440e      	add	r6, r1
 801e5ec:	e797      	b.n	801e51e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801e5ee:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801e5f2:	42a8      	cmp	r0, r5
 801e5f4:	d262      	bcs.n	801e6bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801e5f6:	9b00      	ldr	r3, [sp, #0]
 801e5f8:	4631      	mov	r1, r6
 801e5fa:	eb00 0b03 	add.w	fp, r0, r3
 801e5fe:	4558      	cmp	r0, fp
 801e600:	d24e      	bcs.n	801e6a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801e602:	f811 3b01 	ldrb.w	r3, [r1], #1
 801e606:	b12b      	cbz	r3, 801e614 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e608:	2bff      	cmp	r3, #255	; 0xff
 801e60a:	f8b4 e000 	ldrh.w	lr, [r4]
 801e60e:	d104      	bne.n	801e61a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801e610:	f8a0 e000 	strh.w	lr, [r0]
 801e614:	3002      	adds	r0, #2
 801e616:	3402      	adds	r4, #2
 801e618:	e7f1      	b.n	801e5fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801e61a:	8802      	ldrh	r2, [r0, #0]
 801e61c:	b29f      	uxth	r7, r3
 801e61e:	1216      	asrs	r6, r2, #8
 801e620:	43db      	mvns	r3, r3
 801e622:	b2db      	uxtb	r3, r3
 801e624:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e628:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e62c:	fb16 f603 	smulbb	r6, r6, r3
 801e630:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801e634:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e638:	00d2      	lsls	r2, r2, #3
 801e63a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801e63e:	b2d2      	uxtb	r2, r2
 801e640:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801e644:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801e648:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e64c:	fb1a fa03 	smulbb	sl, sl, r3
 801e650:	fa1f fc8c 	uxth.w	ip, ip
 801e654:	fb12 f303 	smulbb	r3, r2, r3
 801e658:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e65c:	fa5f fe8e 	uxtb.w	lr, lr
 801e660:	fb06 a607 	mla	r6, r6, r7, sl
 801e664:	f10c 0201 	add.w	r2, ip, #1
 801e668:	fb0e 3307 	mla	r3, lr, r7, r3
 801e66c:	b2b6      	uxth	r6, r6
 801e66e:	b29b      	uxth	r3, r3
 801e670:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e674:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801e678:	f106 0a01 	add.w	sl, r6, #1
 801e67c:	f103 0c01 	add.w	ip, r3, #1
 801e680:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e684:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e688:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e68c:	0976      	lsrs	r6, r6, #5
 801e68e:	ea4c 0c02 	orr.w	ip, ip, r2
 801e692:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e696:	ea4c 0c06 	orr.w	ip, ip, r6
 801e69a:	f8a0 c000 	strh.w	ip, [r0]
 801e69e:	e7b9      	b.n	801e614 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801e6a0:	f8b9 3000 	ldrh.w	r3, [r9]
 801e6a4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801e6a8:	eba3 0308 	sub.w	r3, r3, r8
 801e6ac:	eba6 0608 	sub.w	r6, r6, r8
 801e6b0:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801e6b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e6b8:	440e      	add	r6, r1
 801e6ba:	e79a      	b.n	801e5f2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801e6bc:	4b03      	ldr	r3, [pc, #12]	; (801e6cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801e6be:	6818      	ldr	r0, [r3, #0]
 801e6c0:	6803      	ldr	r3, [r0, #0]
 801e6c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e6c4:	4798      	blx	r3
 801e6c6:	b007      	add	sp, #28
 801e6c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e6cc:	20012db4 	.word	0x20012db4
 801e6d0:	20012dae 	.word	0x20012dae

0801e6d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801e6d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6d8:	b089      	sub	sp, #36	; 0x24
 801e6da:	4682      	mov	sl, r0
 801e6dc:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801e6e0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e6e2:	460f      	mov	r7, r1
 801e6e4:	4691      	mov	r9, r2
 801e6e6:	4698      	mov	r8, r3
 801e6e8:	2e00      	cmp	r6, #0
 801e6ea:	d03d      	beq.n	801e768 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e6ec:	4608      	mov	r0, r1
 801e6ee:	f7fa fe59 	bl	80193a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801e6f2:	4605      	mov	r5, r0
 801e6f4:	4638      	mov	r0, r7
 801e6f6:	f7fa fe89 	bl	801940c <_ZNK8touchgfx6Bitmap9getHeightEv>
 801e6fa:	f8ad 000e 	strh.w	r0, [sp, #14]
 801e6fe:	4638      	mov	r0, r7
 801e700:	f8ad 9008 	strh.w	r9, [sp, #8]
 801e704:	f8ad 500c 	strh.w	r5, [sp, #12]
 801e708:	f8ad 800a 	strh.w	r8, [sp, #10]
 801e70c:	f7fa ff36 	bl	801957c <_ZNK8touchgfx6Bitmap7getDataEv>
 801e710:	4605      	mov	r5, r0
 801e712:	4638      	mov	r0, r7
 801e714:	f7fa ff62 	bl	80195dc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801e718:	4681      	mov	r9, r0
 801e71a:	4638      	mov	r0, r7
 801e71c:	f7fa ffb2 	bl	8019684 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801e720:	280b      	cmp	r0, #11
 801e722:	d821      	bhi.n	801e768 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e724:	e8df f000 	tbb	[pc, r0]
 801e728:	2006aebe 	.word	0x2006aebe
 801e72c:	20202020 	.word	0x20202020
 801e730:	b5202020 	.word	0xb5202020
 801e734:	4bb0      	ldr	r3, [pc, #704]	; (801e9f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801e736:	6818      	ldr	r0, [r3, #0]
 801e738:	6803      	ldr	r3, [r0, #0]
 801e73a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e73c:	4798      	blx	r3
 801e73e:	2eff      	cmp	r6, #255	; 0xff
 801e740:	d101      	bne.n	801e746 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e742:	0683      	lsls	r3, r0, #26
 801e744:	d506      	bpl.n	801e754 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801e746:	4633      	mov	r3, r6
 801e748:	4622      	mov	r2, r4
 801e74a:	a902      	add	r1, sp, #8
 801e74c:	4628      	mov	r0, r5
 801e74e:	f7ff f909 	bl	801d964 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e752:	e009      	b.n	801e768 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e754:	4638      	mov	r0, r7
 801e756:	f7fa fed9 	bl	801950c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e75a:	b940      	cbnz	r0, 801e76e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801e75c:	4623      	mov	r3, r4
 801e75e:	aa02      	add	r2, sp, #8
 801e760:	4629      	mov	r1, r5
 801e762:	4650      	mov	r0, sl
 801e764:	f7ff f9e4 	bl	801db30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e768:	b009      	add	sp, #36	; 0x24
 801e76a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e76e:	f10d 0818 	add.w	r8, sp, #24
 801e772:	4639      	mov	r1, r7
 801e774:	4640      	mov	r0, r8
 801e776:	f7fa fe7d 	bl	8019474 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e77a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801e77e:	af04      	add	r7, sp, #16
 801e780:	e887 0003 	stmia.w	r7, {r0, r1}
 801e784:	4638      	mov	r0, r7
 801e786:	4621      	mov	r1, r4
 801e788:	f7f2 f8e8 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 801e78c:	4638      	mov	r0, r7
 801e78e:	f7f2 f928 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e792:	2800      	cmp	r0, #0
 801e794:	d1d7      	bne.n	801e746 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801e796:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e79a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801e79e:	4293      	cmp	r3, r2
 801e7a0:	dd12      	ble.n	801e7c8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801e7a2:	1a9b      	subs	r3, r3, r2
 801e7a4:	f9b4 0000 	ldrsh.w	r0, [r4]
 801e7a8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e7ac:	f8ad 0018 	strh.w	r0, [sp, #24]
 801e7b0:	f8ad 201a 	strh.w	r2, [sp, #26]
 801e7b4:	f8ad 101c 	strh.w	r1, [sp, #28]
 801e7b8:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e7bc:	4642      	mov	r2, r8
 801e7be:	4633      	mov	r3, r6
 801e7c0:	a902      	add	r1, sp, #8
 801e7c2:	4628      	mov	r0, r5
 801e7c4:	f7ff f8ce 	bl	801d964 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e7c8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e7cc:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e7d0:	4293      	cmp	r3, r2
 801e7d2:	dd12      	ble.n	801e7fa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801e7d4:	1a9b      	subs	r3, r3, r2
 801e7d6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e7da:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e7de:	f8ad 2018 	strh.w	r2, [sp, #24]
 801e7e2:	f8ad 001a 	strh.w	r0, [sp, #26]
 801e7e6:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e7ea:	f8ad 101e 	strh.w	r1, [sp, #30]
 801e7ee:	23ff      	movs	r3, #255	; 0xff
 801e7f0:	4642      	mov	r2, r8
 801e7f2:	a902      	add	r1, sp, #8
 801e7f4:	4628      	mov	r0, r5
 801e7f6:	f7ff f8b5 	bl	801d964 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e7fa:	463b      	mov	r3, r7
 801e7fc:	aa02      	add	r2, sp, #8
 801e7fe:	4629      	mov	r1, r5
 801e800:	4650      	mov	r0, sl
 801e802:	f7ff f995 	bl	801db30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801e806:	88a2      	ldrh	r2, [r4, #4]
 801e808:	8823      	ldrh	r3, [r4, #0]
 801e80a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801e80e:	4413      	add	r3, r2
 801e810:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e814:	440a      	add	r2, r1
 801e816:	b29b      	uxth	r3, r3
 801e818:	b292      	uxth	r2, r2
 801e81a:	b211      	sxth	r1, r2
 801e81c:	b218      	sxth	r0, r3
 801e81e:	4288      	cmp	r0, r1
 801e820:	dd12      	ble.n	801e848 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801e822:	1a9b      	subs	r3, r3, r2
 801e824:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801e828:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801e82c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801e830:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e834:	f8ad 001e 	strh.w	r0, [sp, #30]
 801e838:	23ff      	movs	r3, #255	; 0xff
 801e83a:	4642      	mov	r2, r8
 801e83c:	a902      	add	r1, sp, #8
 801e83e:	4628      	mov	r0, r5
 801e840:	f8ad 601a 	strh.w	r6, [sp, #26]
 801e844:	f7ff f88e 	bl	801d964 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e848:	88e2      	ldrh	r2, [r4, #6]
 801e84a:	8863      	ldrh	r3, [r4, #2]
 801e84c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e850:	4413      	add	r3, r2
 801e852:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e856:	440a      	add	r2, r1
 801e858:	b29b      	uxth	r3, r3
 801e85a:	b292      	uxth	r2, r2
 801e85c:	b211      	sxth	r1, r2
 801e85e:	b218      	sxth	r0, r3
 801e860:	4288      	cmp	r0, r1
 801e862:	dd81      	ble.n	801e768 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e864:	1a9b      	subs	r3, r3, r2
 801e866:	f9b4 6000 	ldrsh.w	r6, [r4]
 801e86a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e86e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e872:	f8ad 6018 	strh.w	r6, [sp, #24]
 801e876:	f8ad 101a 	strh.w	r1, [sp, #26]
 801e87a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801e87e:	23ff      	movs	r3, #255	; 0xff
 801e880:	4642      	mov	r2, r8
 801e882:	e762      	b.n	801e74a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801e884:	4633      	mov	r3, r6
 801e886:	4622      	mov	r2, r4
 801e888:	a902      	add	r1, sp, #8
 801e88a:	4628      	mov	r0, r5
 801e88c:	f7ff f9c0 	bl	801dc10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801e890:	e76a      	b.n	801e768 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e892:	e9cd 4600 	strd	r4, r6, [sp]
 801e896:	ab02      	add	r3, sp, #8
 801e898:	464a      	mov	r2, r9
 801e89a:	4629      	mov	r1, r5
 801e89c:	4650      	mov	r0, sl
 801e89e:	f7ff fd97 	bl	801e3d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801e8a2:	e761      	b.n	801e768 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e8a4:	4638      	mov	r0, r7
 801e8a6:	f7fa fe31 	bl	801950c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801e8aa:	b950      	cbnz	r0, 801e8c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801e8ac:	e9cd 6000 	strd	r6, r0, [sp]
 801e8b0:	f8da 3000 	ldr.w	r3, [sl]
 801e8b4:	aa02      	add	r2, sp, #8
 801e8b6:	68de      	ldr	r6, [r3, #12]
 801e8b8:	4629      	mov	r1, r5
 801e8ba:	4623      	mov	r3, r4
 801e8bc:	4650      	mov	r0, sl
 801e8be:	47b0      	blx	r6
 801e8c0:	e752      	b.n	801e768 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e8c2:	f10d 0818 	add.w	r8, sp, #24
 801e8c6:	4639      	mov	r1, r7
 801e8c8:	4640      	mov	r0, r8
 801e8ca:	f7fa fdd3 	bl	8019474 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801e8ce:	e898 0003 	ldmia.w	r8, {r0, r1}
 801e8d2:	af04      	add	r7, sp, #16
 801e8d4:	e887 0003 	stmia.w	r7, {r0, r1}
 801e8d8:	4638      	mov	r0, r7
 801e8da:	4621      	mov	r1, r4
 801e8dc:	f7f2 f83e 	bl	801095c <_ZN8touchgfx4RectaNERKS0_>
 801e8e0:	4638      	mov	r0, r7
 801e8e2:	f7f2 f87e 	bl	80109e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e8e6:	b138      	cbz	r0, 801e8f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801e8e8:	9600      	str	r6, [sp, #0]
 801e8ea:	4623      	mov	r3, r4
 801e8ec:	aa02      	add	r2, sp, #8
 801e8ee:	4649      	mov	r1, r9
 801e8f0:	4628      	mov	r0, r5
 801e8f2:	f7ff fdc9 	bl	801e488 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e8f6:	e737      	b.n	801e768 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e8f8:	e9cd 6000 	strd	r6, r0, [sp]
 801e8fc:	f8da 3000 	ldr.w	r3, [sl]
 801e900:	aa02      	add	r2, sp, #8
 801e902:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801e906:	4629      	mov	r1, r5
 801e908:	463b      	mov	r3, r7
 801e90a:	4650      	mov	r0, sl
 801e90c:	47d8      	blx	fp
 801e90e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e912:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801e916:	4293      	cmp	r3, r2
 801e918:	dd13      	ble.n	801e942 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801e91a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801e91e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801e922:	f8ad 0018 	strh.w	r0, [sp, #24]
 801e926:	1a9b      	subs	r3, r3, r2
 801e928:	f8ad 201a 	strh.w	r2, [sp, #26]
 801e92c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801e930:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e934:	9600      	str	r6, [sp, #0]
 801e936:	4643      	mov	r3, r8
 801e938:	aa02      	add	r2, sp, #8
 801e93a:	4649      	mov	r1, r9
 801e93c:	4628      	mov	r0, r5
 801e93e:	f7ff fda3 	bl	801e488 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e942:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801e946:	f9b4 2000 	ldrsh.w	r2, [r4]
 801e94a:	4293      	cmp	r3, r2
 801e94c:	dd13      	ble.n	801e976 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801e94e:	1a9b      	subs	r3, r3, r2
 801e950:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801e954:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801e958:	f8ad 2018 	strh.w	r2, [sp, #24]
 801e95c:	f8ad 001a 	strh.w	r0, [sp, #26]
 801e960:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e964:	f8ad 101e 	strh.w	r1, [sp, #30]
 801e968:	9600      	str	r6, [sp, #0]
 801e96a:	4643      	mov	r3, r8
 801e96c:	aa02      	add	r2, sp, #8
 801e96e:	4649      	mov	r1, r9
 801e970:	4628      	mov	r0, r5
 801e972:	f7ff fd89 	bl	801e488 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e976:	88a2      	ldrh	r2, [r4, #4]
 801e978:	8823      	ldrh	r3, [r4, #0]
 801e97a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801e97e:	4413      	add	r3, r2
 801e980:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e984:	440a      	add	r2, r1
 801e986:	b29b      	uxth	r3, r3
 801e988:	b292      	uxth	r2, r2
 801e98a:	b211      	sxth	r1, r2
 801e98c:	b218      	sxth	r0, r3
 801e98e:	4288      	cmp	r0, r1
 801e990:	dd13      	ble.n	801e9ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801e992:	1a9b      	subs	r3, r3, r2
 801e994:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801e998:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801e99c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801e9a0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801e9a4:	f8ad 001e 	strh.w	r0, [sp, #30]
 801e9a8:	9600      	str	r6, [sp, #0]
 801e9aa:	4643      	mov	r3, r8
 801e9ac:	aa02      	add	r2, sp, #8
 801e9ae:	4649      	mov	r1, r9
 801e9b0:	4628      	mov	r0, r5
 801e9b2:	f8ad 701a 	strh.w	r7, [sp, #26]
 801e9b6:	f7ff fd67 	bl	801e488 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801e9ba:	88e2      	ldrh	r2, [r4, #6]
 801e9bc:	8863      	ldrh	r3, [r4, #2]
 801e9be:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801e9c2:	4413      	add	r3, r2
 801e9c4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801e9c8:	440a      	add	r2, r1
 801e9ca:	b29b      	uxth	r3, r3
 801e9cc:	b292      	uxth	r2, r2
 801e9ce:	b211      	sxth	r1, r2
 801e9d0:	b218      	sxth	r0, r3
 801e9d2:	4288      	cmp	r0, r1
 801e9d4:	f77f aec8 	ble.w	801e768 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801e9d8:	f9b4 7000 	ldrsh.w	r7, [r4]
 801e9dc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801e9e0:	f8ad 7018 	strh.w	r7, [sp, #24]
 801e9e4:	1a9b      	subs	r3, r3, r2
 801e9e6:	f8ad 301e 	strh.w	r3, [sp, #30]
 801e9ea:	f8ad 101a 	strh.w	r1, [sp, #26]
 801e9ee:	f8ad 001c 	strh.w	r0, [sp, #28]
 801e9f2:	9600      	str	r6, [sp, #0]
 801e9f4:	4643      	mov	r3, r8
 801e9f6:	e779      	b.n	801e8ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801e9f8:	20012db4 	.word	0x20012db4

0801e9fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801e9fc:	b180      	cbz	r0, 801ea20 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801e9fe:	2903      	cmp	r1, #3
 801ea00:	d81c      	bhi.n	801ea3c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ea02:	e8df f001 	tbb	[pc, r1]
 801ea06:	1d02      	.short	0x1d02
 801ea08:	1f08      	.short	0x1f08
 801ea0a:	4b10      	ldr	r3, [pc, #64]	; (801ea4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801ea0c:	8818      	ldrh	r0, [r3, #0]
 801ea0e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ea12:	4240      	negs	r0, r0
 801ea14:	4770      	bx	lr
 801ea16:	4b0d      	ldr	r3, [pc, #52]	; (801ea4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801ea18:	8818      	ldrh	r0, [r3, #0]
 801ea1a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ea1e:	4770      	bx	lr
 801ea20:	2903      	cmp	r1, #3
 801ea22:	d80b      	bhi.n	801ea3c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801ea24:	a301      	add	r3, pc, #4	; (adr r3, 801ea2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801ea26:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ea2a:	bf00      	nop
 801ea2c:	0801ea41 	.word	0x0801ea41
 801ea30:	0801ea17 	.word	0x0801ea17
 801ea34:	0801ea45 	.word	0x0801ea45
 801ea38:	0801ea0b 	.word	0x0801ea0b
 801ea3c:	2000      	movs	r0, #0
 801ea3e:	4770      	bx	lr
 801ea40:	2001      	movs	r0, #1
 801ea42:	4770      	bx	lr
 801ea44:	f04f 30ff 	mov.w	r0, #4294967295
 801ea48:	4770      	bx	lr
 801ea4a:	bf00      	nop
 801ea4c:	20012dae 	.word	0x20012dae

0801ea50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801ea50:	b180      	cbz	r0, 801ea74 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801ea52:	2903      	cmp	r1, #3
 801ea54:	d81c      	bhi.n	801ea90 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801ea56:	e8df f001 	tbb	[pc, r1]
 801ea5a:	021d      	.short	0x021d
 801ea5c:	071f      	.short	0x071f
 801ea5e:	4b10      	ldr	r3, [pc, #64]	; (801eaa0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ea60:	8818      	ldrh	r0, [r3, #0]
 801ea62:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ea66:	4770      	bx	lr
 801ea68:	4b0d      	ldr	r3, [pc, #52]	; (801eaa0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801ea6a:	8818      	ldrh	r0, [r3, #0]
 801ea6c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801ea70:	4240      	negs	r0, r0
 801ea72:	4770      	bx	lr
 801ea74:	2903      	cmp	r1, #3
 801ea76:	d80b      	bhi.n	801ea90 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801ea78:	a301      	add	r3, pc, #4	; (adr r3, 801ea80 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801ea7a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801ea7e:	bf00      	nop
 801ea80:	0801ea5f 	.word	0x0801ea5f
 801ea84:	0801ea99 	.word	0x0801ea99
 801ea88:	0801ea69 	.word	0x0801ea69
 801ea8c:	0801ea95 	.word	0x0801ea95
 801ea90:	2000      	movs	r0, #0
 801ea92:	4770      	bx	lr
 801ea94:	2001      	movs	r0, #1
 801ea96:	4770      	bx	lr
 801ea98:	f04f 30ff 	mov.w	r0, #4294967295
 801ea9c:	4770      	bx	lr
 801ea9e:	bf00      	nop
 801eaa0:	20012dae 	.word	0x20012dae

0801eaa4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801eaa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eaa8:	b099      	sub	sp, #100	; 0x64
 801eaaa:	910b      	str	r1, [sp, #44]	; 0x2c
 801eaac:	a914      	add	r1, sp, #80	; 0x50
 801eaae:	e881 000c 	stmia.w	r1, {r2, r3}
 801eab2:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801eab6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801eaba:	f891 900d 	ldrb.w	r9, [r1, #13]
 801eabe:	9309      	str	r3, [sp, #36]	; 0x24
 801eac0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801eac4:	9310      	str	r3, [sp, #64]	; 0x40
 801eac6:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801eaca:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801eace:	930c      	str	r3, [sp, #48]	; 0x30
 801ead0:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801ead4:	798f      	ldrb	r7, [r1, #6]
 801ead6:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801eada:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801eade:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801eae2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801eae6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801eaea:	431f      	orrs	r7, r3
 801eaec:	f000 8195 	beq.w	801ee1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801eaf0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801eaf4:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801eaf8:	f891 9007 	ldrb.w	r9, [r1, #7]
 801eafc:	ea59 0903 	orrs.w	r9, r9, r3
 801eb00:	f000 818b 	beq.w	801ee1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801eb04:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801eb08:	b29b      	uxth	r3, r3
 801eb0a:	2d00      	cmp	r5, #0
 801eb0c:	f000 812e 	beq.w	801ed6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801eb10:	1aed      	subs	r5, r5, r3
 801eb12:	b2ad      	uxth	r5, r5
 801eb14:	042b      	lsls	r3, r5, #16
 801eb16:	d502      	bpl.n	801eb1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801eb18:	1b64      	subs	r4, r4, r5
 801eb1a:	b224      	sxth	r4, r4
 801eb1c:	2500      	movs	r5, #0
 801eb1e:	f9b2 1000 	ldrsh.w	r1, [r2]
 801eb22:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801eb26:	428c      	cmp	r4, r1
 801eb28:	b28b      	uxth	r3, r1
 801eb2a:	bfbf      	itttt	lt
 801eb2c:	18ed      	addlt	r5, r5, r3
 801eb2e:	1b2c      	sublt	r4, r5, r4
 801eb30:	b2a5      	uxthlt	r5, r4
 801eb32:	460c      	movlt	r4, r1
 801eb34:	8891      	ldrh	r1, [r2, #4]
 801eb36:	440b      	add	r3, r1
 801eb38:	b21b      	sxth	r3, r3
 801eb3a:	930f      	str	r3, [sp, #60]	; 0x3c
 801eb3c:	88d3      	ldrh	r3, [r2, #6]
 801eb3e:	8852      	ldrh	r2, [r2, #2]
 801eb40:	4413      	add	r3, r2
 801eb42:	b21b      	sxth	r3, r3
 801eb44:	930d      	str	r3, [sp, #52]	; 0x34
 801eb46:	4bbe      	ldr	r3, [pc, #760]	; (801ee40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801eb48:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801eb4a:	f893 b000 	ldrb.w	fp, [r3]
 801eb4e:	f10b 3cff 	add.w	ip, fp, #4294967295
 801eb52:	f1dc 0300 	rsbs	r3, ip, #0
 801eb56:	eb43 030c 	adc.w	r3, r3, ip
 801eb5a:	930e      	str	r3, [sp, #56]	; 0x38
 801eb5c:	4621      	mov	r1, r4
 801eb5e:	4653      	mov	r3, sl
 801eb60:	a814      	add	r0, sp, #80	; 0x50
 801eb62:	f7f6 fcce 	bl	8015502 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801eb66:	4621      	mov	r1, r4
 801eb68:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801eb6c:	4653      	mov	r3, sl
 801eb6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801eb70:	a814      	add	r0, sp, #80	; 0x50
 801eb72:	f7f6 fce3 	bl	801553c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801eb76:	a918      	add	r1, sp, #96	; 0x60
 801eb78:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801eb7c:	a817      	add	r0, sp, #92	; 0x5c
 801eb7e:	f7f6 fe09 	bl	8015794 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801eb82:	f1ba 0f00 	cmp.w	sl, #0
 801eb86:	f040 80f4 	bne.w	801ed72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801eb8a:	f1bb 0f01 	cmp.w	fp, #1
 801eb8e:	f040 80f8 	bne.w	801ed82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801eb92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801eb94:	2b00      	cmp	r3, #0
 801eb96:	f040 8145 	bne.w	801ee24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801eb9a:	b2ba      	uxth	r2, r7
 801eb9c:	b905      	cbnz	r5, 801eba0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801eb9e:	b16e      	cbz	r6, 801ebbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801eba0:	fb06 5302 	mla	r3, r6, r2, r5
 801eba4:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801eba6:	fb08 f303 	mul.w	r3, r8, r3
 801ebaa:	4631      	mov	r1, r6
 801ebac:	f003 0607 	and.w	r6, r3, #7
 801ebb0:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801ebb4:	9328      	str	r3, [sp, #160]	; 0xa0
 801ebb6:	eba9 0301 	sub.w	r3, r9, r1
 801ebba:	930a      	str	r3, [sp, #40]	; 0x28
 801ebbc:	4651      	mov	r1, sl
 801ebbe:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ebc0:	f7ff ff1c 	bl	801e9fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801ebc4:	4681      	mov	r9, r0
 801ebc6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ebc8:	f7ff ff42 	bl	801ea50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801ebcc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ebce:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ebd0:	eba3 0a01 	sub.w	sl, r3, r1
 801ebd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ebd6:	459a      	cmp	sl, r3
 801ebd8:	bfa8      	it	ge
 801ebda:	469a      	movge	sl, r3
 801ebdc:	f1ba 0f00 	cmp.w	sl, #0
 801ebe0:	4683      	mov	fp, r0
 801ebe2:	f340 811a 	ble.w	801ee1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ebe6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ebe8:	1b64      	subs	r4, r4, r5
 801ebea:	1b1c      	subs	r4, r3, r4
 801ebec:	42bc      	cmp	r4, r7
 801ebee:	bfd4      	ite	le
 801ebf0:	ebc5 0504 	rsble	r5, r5, r4
 801ebf4:	ebc5 0507 	rsbgt	r5, r5, r7
 801ebf8:	2d00      	cmp	r5, #0
 801ebfa:	f340 810e 	ble.w	801ee1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ebfe:	1b52      	subs	r2, r2, r5
 801ec00:	fb08 f302 	mul.w	r3, r8, r2
 801ec04:	930f      	str	r3, [sp, #60]	; 0x3c
 801ec06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ec08:	2b00      	cmp	r3, #0
 801ec0a:	f040 8116 	bne.w	801ee3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801ec0e:	4b8d      	ldr	r3, [pc, #564]	; (801ee44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801ec10:	6818      	ldr	r0, [r3, #0]
 801ec12:	6803      	ldr	r3, [r0, #0]
 801ec14:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ec16:	4798      	blx	r3
 801ec18:	2301      	movs	r3, #1
 801ec1a:	fa03 f308 	lsl.w	r3, r3, r8
 801ec1e:	4a8a      	ldr	r2, [pc, #552]	; (801ee48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801ec20:	3b01      	subs	r3, #1
 801ec22:	b2db      	uxtb	r3, r3
 801ec24:	8811      	ldrh	r1, [r2, #0]
 801ec26:	930e      	str	r3, [sp, #56]	; 0x38
 801ec28:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801ec2c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801ec30:	fb01 2303 	mla	r3, r1, r3, r2
 801ec34:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ec38:	930a      	str	r3, [sp, #40]	; 0x28
 801ec3a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ec3c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801ec40:	9313      	str	r3, [sp, #76]	; 0x4c
 801ec42:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ec44:	0a19      	lsrs	r1, r3, #8
 801ec46:	b2cb      	uxtb	r3, r1
 801ec48:	9312      	str	r3, [sp, #72]	; 0x48
 801ec4a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ec4c:	b2db      	uxtb	r3, r3
 801ec4e:	9311      	str	r3, [sp, #68]	; 0x44
 801ec50:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ec52:	095a      	lsrs	r2, r3, #5
 801ec54:	4b7d      	ldr	r3, [pc, #500]	; (801ee4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801ec56:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ec5a:	400b      	ands	r3, r1
 801ec5c:	4313      	orrs	r3, r2
 801ec5e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ec60:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ec64:	4313      	orrs	r3, r2
 801ec66:	b29b      	uxth	r3, r3
 801ec68:	9310      	str	r3, [sp, #64]	; 0x40
 801ec6a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ec6c:	781a      	ldrb	r2, [r3, #0]
 801ec6e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801ec72:	4132      	asrs	r2, r6
 801ec74:	fb05 b919 	mls	r9, r5, r9, fp
 801ec78:	fb03 fb05 	mul.w	fp, r3, r5
 801ec7c:	b2d2      	uxtb	r2, r2
 801ec7e:	930d      	str	r3, [sp, #52]	; 0x34
 801ec80:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801ec84:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801ec88:	f0c0 80f5 	bcc.w	801ee76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801ec8c:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801ec90:	46ae      	mov	lr, r5
 801ec92:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801ec96:	f0c0 80dd 	bcc.w	801ee54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801ec9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ec9c:	4013      	ands	r3, r2
 801ec9e:	d055      	beq.n	801ed4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801eca0:	20ff      	movs	r0, #255	; 0xff
 801eca2:	990e      	ldr	r1, [sp, #56]	; 0x38
 801eca4:	fb90 f1f1 	sdiv	r1, r0, r1
 801eca8:	434b      	muls	r3, r1
 801ecaa:	2bfe      	cmp	r3, #254	; 0xfe
 801ecac:	dd03      	ble.n	801ecb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801ecae:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ecb0:	4281      	cmp	r1, r0
 801ecb2:	f000 80cd 	beq.w	801ee50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801ecb6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ecb8:	f8bc 4000 	ldrh.w	r4, [ip]
 801ecbc:	fb11 f303 	smulbb	r3, r1, r3
 801ecc0:	b29b      	uxth	r3, r3
 801ecc2:	1c59      	adds	r1, r3, #1
 801ecc4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ecc8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eccc:	b29f      	uxth	r7, r3
 801ecce:	43db      	mvns	r3, r3
 801ecd0:	b2db      	uxtb	r3, r3
 801ecd2:	9309      	str	r3, [sp, #36]	; 0x24
 801ecd4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ecd6:	1220      	asrs	r0, r4, #8
 801ecd8:	fb13 f907 	smulbb	r9, r3, r7
 801ecdc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ece0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ece2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801ece6:	fb00 9003 	mla	r0, r0, r3, r9
 801ecea:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ecec:	10e1      	asrs	r1, r4, #3
 801ecee:	fb13 f907 	smulbb	r9, r3, r7
 801ecf2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ecf6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ecf8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801ecfc:	fb01 9103 	mla	r1, r1, r3, r9
 801ed00:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ed02:	00e4      	lsls	r4, r4, #3
 801ed04:	fb13 f707 	smulbb	r7, r3, r7
 801ed08:	b2e4      	uxtb	r4, r4
 801ed0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ed0c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ed10:	fb04 7403 	mla	r4, r4, r3, r7
 801ed14:	b280      	uxth	r0, r0
 801ed16:	b2a4      	uxth	r4, r4
 801ed18:	1c43      	adds	r3, r0, #1
 801ed1a:	f104 0901 	add.w	r9, r4, #1
 801ed1e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ed22:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801ed26:	b289      	uxth	r1, r1
 801ed28:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801ed2c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ed30:	ea49 0000 	orr.w	r0, r9, r0
 801ed34:	f101 0901 	add.w	r9, r1, #1
 801ed38:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801ed3c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ed40:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ed44:	ea40 0009 	orr.w	r0, r0, r9
 801ed48:	f8ac 0000 	strh.w	r0, [ip]
 801ed4c:	4446      	add	r6, r8
 801ed4e:	b2b6      	uxth	r6, r6
 801ed50:	2e07      	cmp	r6, #7
 801ed52:	bf81      	itttt	hi
 801ed54:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801ed56:	785a      	ldrbhi	r2, [r3, #1]
 801ed58:	3301      	addhi	r3, #1
 801ed5a:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801ed5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ed5e:	bf9a      	itte	ls
 801ed60:	fa42 f208 	asrls.w	r2, r2, r8
 801ed64:	b2d2      	uxtbls	r2, r2
 801ed66:	2600      	movhi	r6, #0
 801ed68:	449c      	add	ip, r3
 801ed6a:	e792      	b.n	801ec92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801ed6c:	441c      	add	r4, r3
 801ed6e:	b224      	sxth	r4, r4
 801ed70:	e6d5      	b.n	801eb1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ed72:	f1ba 0f01 	cmp.w	sl, #1
 801ed76:	f47f af0c 	bne.w	801eb92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ed7a:	f1bb 0f01 	cmp.w	fp, #1
 801ed7e:	f47f af08 	bne.w	801eb92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ed82:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801ee44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801ed86:	f8db 0000 	ldr.w	r0, [fp]
 801ed8a:	6803      	ldr	r3, [r0, #0]
 801ed8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ed8e:	4798      	blx	r3
 801ed90:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801ed94:	465a      	mov	r2, fp
 801ed96:	d006      	beq.n	801eda6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ed98:	f1b8 0f04 	cmp.w	r8, #4
 801ed9c:	d140      	bne.n	801ee20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801ed9e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801eda0:	3300      	adds	r3, #0
 801eda2:	bf18      	it	ne
 801eda4:	2301      	movne	r3, #1
 801eda6:	0580      	lsls	r0, r0, #22
 801eda8:	d56e      	bpl.n	801ee88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801edaa:	f1b8 0f08 	cmp.w	r8, #8
 801edae:	d16b      	bne.n	801ee88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801edb0:	2b00      	cmp	r3, #0
 801edb2:	bf0c      	ite	eq
 801edb4:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801edb8:	f44f 7180 	movne.w	r1, #256	; 0x100
 801edbc:	2d00      	cmp	r5, #0
 801edbe:	f47f aee8 	bne.w	801eb92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801edc2:	2e00      	cmp	r6, #0
 801edc4:	f47f aee5 	bne.w	801eb92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801edc8:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801edca:	19e3      	adds	r3, r4, r7
 801edcc:	4283      	cmp	r3, r0
 801edce:	f73f aee0 	bgt.w	801eb92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801edd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801edd4:	980d      	ldr	r0, [sp, #52]	; 0x34
 801edd6:	444b      	add	r3, r9
 801edd8:	4283      	cmp	r3, r0
 801edda:	f73f aeda 	bgt.w	801eb92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801edde:	6810      	ldr	r0, [r2, #0]
 801ede0:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801ede4:	6804      	ldr	r4, [r0, #0]
 801ede6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801edea:	b2bf      	uxth	r7, r7
 801edec:	f1b8 0f08 	cmp.w	r8, #8
 801edf0:	f04f 0500 	mov.w	r5, #0
 801edf4:	bf18      	it	ne
 801edf6:	3701      	addne	r7, #1
 801edf8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801edfc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801edfe:	9104      	str	r1, [sp, #16]
 801ee00:	bf18      	it	ne
 801ee02:	f027 0701 	bicne.w	r7, r7, #1
 801ee06:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801ee08:	bf18      	it	ne
 801ee0a:	b2bf      	uxthne	r7, r7
 801ee0c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801ee10:	e9cd 7900 	strd	r7, r9, [sp]
 801ee14:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ee16:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801ee18:	47a0      	blx	r4
 801ee1a:	b019      	add	sp, #100	; 0x64
 801ee1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee20:	2300      	movs	r3, #0
 801ee22:	e7c0      	b.n	801eda6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ee24:	2208      	movs	r2, #8
 801ee26:	fb92 f3f8 	sdiv	r3, r2, r8
 801ee2a:	1e5a      	subs	r2, r3, #1
 801ee2c:	443a      	add	r2, r7
 801ee2e:	fb92 f2f3 	sdiv	r2, r2, r3
 801ee32:	fb12 f203 	smulbb	r2, r2, r3
 801ee36:	b292      	uxth	r2, r2
 801ee38:	e6b0      	b.n	801eb9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801ee3a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801ee3c:	e6ec      	b.n	801ec18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801ee3e:	bf00      	nop
 801ee40:	20012dac 	.word	0x20012dac
 801ee44:	20012db4 	.word	0x20012db4
 801ee48:	20012dae 	.word	0x20012dae
 801ee4c:	00fff800 	.word	0x00fff800
 801ee50:	9810      	ldr	r0, [sp, #64]	; 0x40
 801ee52:	e779      	b.n	801ed48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801ee54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ee56:	b153      	cbz	r3, 801ee6e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801ee58:	441e      	add	r6, r3
 801ee5a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ee5c:	b2b6      	uxth	r6, r6
 801ee5e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801ee62:	f006 0607 	and.w	r6, r6, #7
 801ee66:	781a      	ldrb	r2, [r3, #0]
 801ee68:	9328      	str	r3, [sp, #160]	; 0xa0
 801ee6a:	4132      	asrs	r2, r6
 801ee6c:	b2d2      	uxtb	r2, r2
 801ee6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ee70:	445b      	add	r3, fp
 801ee72:	930a      	str	r3, [sp, #40]	; 0x28
 801ee74:	e706      	b.n	801ec84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801ee76:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ee78:	2b00      	cmp	r3, #0
 801ee7a:	d1ce      	bne.n	801ee1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ee7c:	4b05      	ldr	r3, [pc, #20]	; (801ee94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801ee7e:	6818      	ldr	r0, [r3, #0]
 801ee80:	6803      	ldr	r3, [r0, #0]
 801ee82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ee84:	4798      	blx	r3
 801ee86:	e7c8      	b.n	801ee1a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ee88:	2b00      	cmp	r3, #0
 801ee8a:	f43f ae82 	beq.w	801eb92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ee8e:	f44f 7180 	mov.w	r1, #256	; 0x100
 801ee92:	e793      	b.n	801edbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801ee94:	20012db4 	.word	0x20012db4

0801ee98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801ee98:	b538      	push	{r3, r4, r5, lr}
 801ee9a:	4c15      	ldr	r4, [pc, #84]	; (801eef0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801ee9c:	7823      	ldrb	r3, [r4, #0]
 801ee9e:	f3bf 8f5b 	dmb	ish
 801eea2:	07da      	lsls	r2, r3, #31
 801eea4:	4605      	mov	r5, r0
 801eea6:	d40b      	bmi.n	801eec0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801eea8:	4620      	mov	r0, r4
 801eeaa:	f00a fee2 	bl	8029c72 <__cxa_guard_acquire>
 801eeae:	b138      	cbz	r0, 801eec0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801eeb0:	4620      	mov	r0, r4
 801eeb2:	f00a feea 	bl	8029c8a <__cxa_guard_release>
 801eeb6:	4a0f      	ldr	r2, [pc, #60]	; (801eef4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801eeb8:	490f      	ldr	r1, [pc, #60]	; (801eef8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801eeba:	4810      	ldr	r0, [pc, #64]	; (801eefc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801eebc:	f00a fed2 	bl	8029c64 <__aeabi_atexit>
 801eec0:	4c0f      	ldr	r4, [pc, #60]	; (801ef00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801eec2:	7823      	ldrb	r3, [r4, #0]
 801eec4:	f3bf 8f5b 	dmb	ish
 801eec8:	07db      	lsls	r3, r3, #31
 801eeca:	d40b      	bmi.n	801eee4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801eecc:	4620      	mov	r0, r4
 801eece:	f00a fed0 	bl	8029c72 <__cxa_guard_acquire>
 801eed2:	b138      	cbz	r0, 801eee4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801eed4:	4620      	mov	r0, r4
 801eed6:	f00a fed8 	bl	8029c8a <__cxa_guard_release>
 801eeda:	4a06      	ldr	r2, [pc, #24]	; (801eef4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801eedc:	4909      	ldr	r1, [pc, #36]	; (801ef04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801eede:	480a      	ldr	r0, [pc, #40]	; (801ef08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801eee0:	f00a fec0 	bl	8029c64 <__aeabi_atexit>
 801eee4:	4b05      	ldr	r3, [pc, #20]	; (801eefc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801eee6:	612b      	str	r3, [r5, #16]
 801eee8:	4b07      	ldr	r3, [pc, #28]	; (801ef08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801eeea:	616b      	str	r3, [r5, #20]
 801eeec:	bd38      	pop	{r3, r4, r5, pc}
 801eeee:	bf00      	nop
 801eef0:	20012e94 	.word	0x20012e94
 801eef4:	20000000 	.word	0x20000000
 801eef8:	0801bc9b 	.word	0x0801bc9b
 801eefc:	200000d4 	.word	0x200000d4
 801ef00:	20012e98 	.word	0x20012e98
 801ef04:	0801bc99 	.word	0x0801bc99
 801ef08:	200000d8 	.word	0x200000d8

0801ef0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801ef0c:	b538      	push	{r3, r4, r5, lr}
 801ef0e:	4c15      	ldr	r4, [pc, #84]	; (801ef64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801ef10:	7823      	ldrb	r3, [r4, #0]
 801ef12:	f3bf 8f5b 	dmb	ish
 801ef16:	07da      	lsls	r2, r3, #31
 801ef18:	4605      	mov	r5, r0
 801ef1a:	d40b      	bmi.n	801ef34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801ef1c:	4620      	mov	r0, r4
 801ef1e:	f00a fea8 	bl	8029c72 <__cxa_guard_acquire>
 801ef22:	b138      	cbz	r0, 801ef34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801ef24:	4620      	mov	r0, r4
 801ef26:	f00a feb0 	bl	8029c8a <__cxa_guard_release>
 801ef2a:	4a0f      	ldr	r2, [pc, #60]	; (801ef68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801ef2c:	490f      	ldr	r1, [pc, #60]	; (801ef6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801ef2e:	4810      	ldr	r0, [pc, #64]	; (801ef70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801ef30:	f00a fe98 	bl	8029c64 <__aeabi_atexit>
 801ef34:	4c0f      	ldr	r4, [pc, #60]	; (801ef74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801ef36:	7823      	ldrb	r3, [r4, #0]
 801ef38:	f3bf 8f5b 	dmb	ish
 801ef3c:	07db      	lsls	r3, r3, #31
 801ef3e:	d40b      	bmi.n	801ef58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801ef40:	4620      	mov	r0, r4
 801ef42:	f00a fe96 	bl	8029c72 <__cxa_guard_acquire>
 801ef46:	b138      	cbz	r0, 801ef58 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801ef48:	4620      	mov	r0, r4
 801ef4a:	f00a fe9e 	bl	8029c8a <__cxa_guard_release>
 801ef4e:	4a06      	ldr	r2, [pc, #24]	; (801ef68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801ef50:	4909      	ldr	r1, [pc, #36]	; (801ef78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801ef52:	480a      	ldr	r0, [pc, #40]	; (801ef7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801ef54:	f00a fe86 	bl	8029c64 <__aeabi_atexit>
 801ef58:	4b05      	ldr	r3, [pc, #20]	; (801ef70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801ef5a:	60ab      	str	r3, [r5, #8]
 801ef5c:	4b07      	ldr	r3, [pc, #28]	; (801ef7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801ef5e:	60eb      	str	r3, [r5, #12]
 801ef60:	bd38      	pop	{r3, r4, r5, pc}
 801ef62:	bf00      	nop
 801ef64:	20012e6c 	.word	0x20012e6c
 801ef68:	20000000 	.word	0x20000000
 801ef6c:	0801bc9f 	.word	0x0801bc9f
 801ef70:	200000ac 	.word	0x200000ac
 801ef74:	20012e70 	.word	0x20012e70
 801ef78:	0801bc9d 	.word	0x0801bc9d
 801ef7c:	200000b0 	.word	0x200000b0

0801ef80 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801ef80:	b510      	push	{r4, lr}
 801ef82:	4604      	mov	r4, r0
 801ef84:	f7ff ff88 	bl	801ee98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801ef88:	4620      	mov	r0, r4
 801ef8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ef8e:	f7ff bfbd 	b.w	801ef0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801ef94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801ef94:	b538      	push	{r3, r4, r5, lr}
 801ef96:	4c15      	ldr	r4, [pc, #84]	; (801efec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801ef98:	7823      	ldrb	r3, [r4, #0]
 801ef9a:	f3bf 8f5b 	dmb	ish
 801ef9e:	07da      	lsls	r2, r3, #31
 801efa0:	4605      	mov	r5, r0
 801efa2:	d40b      	bmi.n	801efbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801efa4:	4620      	mov	r0, r4
 801efa6:	f00a fe64 	bl	8029c72 <__cxa_guard_acquire>
 801efaa:	b138      	cbz	r0, 801efbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801efac:	4620      	mov	r0, r4
 801efae:	f00a fe6c 	bl	8029c8a <__cxa_guard_release>
 801efb2:	4a0f      	ldr	r2, [pc, #60]	; (801eff0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801efb4:	490f      	ldr	r1, [pc, #60]	; (801eff4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801efb6:	4810      	ldr	r0, [pc, #64]	; (801eff8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801efb8:	f00a fe54 	bl	8029c64 <__aeabi_atexit>
 801efbc:	4c0f      	ldr	r4, [pc, #60]	; (801effc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801efbe:	7823      	ldrb	r3, [r4, #0]
 801efc0:	f3bf 8f5b 	dmb	ish
 801efc4:	07db      	lsls	r3, r3, #31
 801efc6:	d40b      	bmi.n	801efe0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801efc8:	4620      	mov	r0, r4
 801efca:	f00a fe52 	bl	8029c72 <__cxa_guard_acquire>
 801efce:	b138      	cbz	r0, 801efe0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801efd0:	4620      	mov	r0, r4
 801efd2:	f00a fe5a 	bl	8029c8a <__cxa_guard_release>
 801efd6:	4a06      	ldr	r2, [pc, #24]	; (801eff0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801efd8:	4909      	ldr	r1, [pc, #36]	; (801f000 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801efda:	480a      	ldr	r0, [pc, #40]	; (801f004 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801efdc:	f00a fe42 	bl	8029c64 <__aeabi_atexit>
 801efe0:	4b05      	ldr	r3, [pc, #20]	; (801eff8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801efe2:	622b      	str	r3, [r5, #32]
 801efe4:	4b07      	ldr	r3, [pc, #28]	; (801f004 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801efe6:	626b      	str	r3, [r5, #36]	; 0x24
 801efe8:	bd38      	pop	{r3, r4, r5, pc}
 801efea:	bf00      	nop
 801efec:	20012e9c 	.word	0x20012e9c
 801eff0:	20000000 	.word	0x20000000
 801eff4:	0801bc93 	.word	0x0801bc93
 801eff8:	200000dc 	.word	0x200000dc
 801effc:	20012ea0 	.word	0x20012ea0
 801f000:	0801bc91 	.word	0x0801bc91
 801f004:	200000e0 	.word	0x200000e0

0801f008 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801f008:	b538      	push	{r3, r4, r5, lr}
 801f00a:	4c15      	ldr	r4, [pc, #84]	; (801f060 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801f00c:	7823      	ldrb	r3, [r4, #0]
 801f00e:	f3bf 8f5b 	dmb	ish
 801f012:	07da      	lsls	r2, r3, #31
 801f014:	4605      	mov	r5, r0
 801f016:	d40b      	bmi.n	801f030 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f018:	4620      	mov	r0, r4
 801f01a:	f00a fe2a 	bl	8029c72 <__cxa_guard_acquire>
 801f01e:	b138      	cbz	r0, 801f030 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f020:	4620      	mov	r0, r4
 801f022:	f00a fe32 	bl	8029c8a <__cxa_guard_release>
 801f026:	4a0f      	ldr	r2, [pc, #60]	; (801f064 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f028:	490f      	ldr	r1, [pc, #60]	; (801f068 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801f02a:	4810      	ldr	r0, [pc, #64]	; (801f06c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f02c:	f00a fe1a 	bl	8029c64 <__aeabi_atexit>
 801f030:	4c0f      	ldr	r4, [pc, #60]	; (801f070 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801f032:	7823      	ldrb	r3, [r4, #0]
 801f034:	f3bf 8f5b 	dmb	ish
 801f038:	07db      	lsls	r3, r3, #31
 801f03a:	d40b      	bmi.n	801f054 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f03c:	4620      	mov	r0, r4
 801f03e:	f00a fe18 	bl	8029c72 <__cxa_guard_acquire>
 801f042:	b138      	cbz	r0, 801f054 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f044:	4620      	mov	r0, r4
 801f046:	f00a fe20 	bl	8029c8a <__cxa_guard_release>
 801f04a:	4a06      	ldr	r2, [pc, #24]	; (801f064 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f04c:	4909      	ldr	r1, [pc, #36]	; (801f074 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801f04e:	480a      	ldr	r0, [pc, #40]	; (801f078 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f050:	f00a fe08 	bl	8029c64 <__aeabi_atexit>
 801f054:	4b05      	ldr	r3, [pc, #20]	; (801f06c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f056:	61ab      	str	r3, [r5, #24]
 801f058:	4b07      	ldr	r3, [pc, #28]	; (801f078 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f05a:	61eb      	str	r3, [r5, #28]
 801f05c:	bd38      	pop	{r3, r4, r5, pc}
 801f05e:	bf00      	nop
 801f060:	20012e74 	.word	0x20012e74
 801f064:	20000000 	.word	0x20000000
 801f068:	0801bc97 	.word	0x0801bc97
 801f06c:	200000b4 	.word	0x200000b4
 801f070:	20012e78 	.word	0x20012e78
 801f074:	0801bc95 	.word	0x0801bc95
 801f078:	200000b8 	.word	0x200000b8

0801f07c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801f07c:	b510      	push	{r4, lr}
 801f07e:	4604      	mov	r4, r0
 801f080:	f7ff ff88 	bl	801ef94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801f084:	4620      	mov	r0, r4
 801f086:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f08a:	f7ff bfbd 	b.w	801f008 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801f090 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801f090:	b538      	push	{r3, r4, r5, lr}
 801f092:	4c15      	ldr	r4, [pc, #84]	; (801f0e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801f094:	7823      	ldrb	r3, [r4, #0]
 801f096:	f3bf 8f5b 	dmb	ish
 801f09a:	07da      	lsls	r2, r3, #31
 801f09c:	4605      	mov	r5, r0
 801f09e:	d40b      	bmi.n	801f0b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f0a0:	4620      	mov	r0, r4
 801f0a2:	f00a fde6 	bl	8029c72 <__cxa_guard_acquire>
 801f0a6:	b138      	cbz	r0, 801f0b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f0a8:	4620      	mov	r0, r4
 801f0aa:	f00a fdee 	bl	8029c8a <__cxa_guard_release>
 801f0ae:	4a0f      	ldr	r2, [pc, #60]	; (801f0ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f0b0:	490f      	ldr	r1, [pc, #60]	; (801f0f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801f0b2:	4810      	ldr	r0, [pc, #64]	; (801f0f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f0b4:	f00a fdd6 	bl	8029c64 <__aeabi_atexit>
 801f0b8:	4c0f      	ldr	r4, [pc, #60]	; (801f0f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801f0ba:	7823      	ldrb	r3, [r4, #0]
 801f0bc:	f3bf 8f5b 	dmb	ish
 801f0c0:	07db      	lsls	r3, r3, #31
 801f0c2:	d40b      	bmi.n	801f0dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f0c4:	4620      	mov	r0, r4
 801f0c6:	f00a fdd4 	bl	8029c72 <__cxa_guard_acquire>
 801f0ca:	b138      	cbz	r0, 801f0dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f0cc:	4620      	mov	r0, r4
 801f0ce:	f00a fddc 	bl	8029c8a <__cxa_guard_release>
 801f0d2:	4a06      	ldr	r2, [pc, #24]	; (801f0ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f0d4:	4909      	ldr	r1, [pc, #36]	; (801f0fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801f0d6:	480a      	ldr	r0, [pc, #40]	; (801f100 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f0d8:	f00a fdc4 	bl	8029c64 <__aeabi_atexit>
 801f0dc:	4b05      	ldr	r3, [pc, #20]	; (801f0f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f0de:	632b      	str	r3, [r5, #48]	; 0x30
 801f0e0:	4b07      	ldr	r3, [pc, #28]	; (801f100 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f0e2:	636b      	str	r3, [r5, #52]	; 0x34
 801f0e4:	bd38      	pop	{r3, r4, r5, pc}
 801f0e6:	bf00      	nop
 801f0e8:	20012eac 	.word	0x20012eac
 801f0ec:	20000000 	.word	0x20000000
 801f0f0:	0801bc8b 	.word	0x0801bc8b
 801f0f4:	200000ec 	.word	0x200000ec
 801f0f8:	20012eb0 	.word	0x20012eb0
 801f0fc:	0801bc89 	.word	0x0801bc89
 801f100:	200000f0 	.word	0x200000f0

0801f104 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801f104:	b538      	push	{r3, r4, r5, lr}
 801f106:	4c15      	ldr	r4, [pc, #84]	; (801f15c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801f108:	7823      	ldrb	r3, [r4, #0]
 801f10a:	f3bf 8f5b 	dmb	ish
 801f10e:	07da      	lsls	r2, r3, #31
 801f110:	4605      	mov	r5, r0
 801f112:	d40b      	bmi.n	801f12c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f114:	4620      	mov	r0, r4
 801f116:	f00a fdac 	bl	8029c72 <__cxa_guard_acquire>
 801f11a:	b138      	cbz	r0, 801f12c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f11c:	4620      	mov	r0, r4
 801f11e:	f00a fdb4 	bl	8029c8a <__cxa_guard_release>
 801f122:	4a0f      	ldr	r2, [pc, #60]	; (801f160 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f124:	490f      	ldr	r1, [pc, #60]	; (801f164 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801f126:	4810      	ldr	r0, [pc, #64]	; (801f168 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f128:	f00a fd9c 	bl	8029c64 <__aeabi_atexit>
 801f12c:	4c0f      	ldr	r4, [pc, #60]	; (801f16c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801f12e:	7823      	ldrb	r3, [r4, #0]
 801f130:	f3bf 8f5b 	dmb	ish
 801f134:	07db      	lsls	r3, r3, #31
 801f136:	d40b      	bmi.n	801f150 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f138:	4620      	mov	r0, r4
 801f13a:	f00a fd9a 	bl	8029c72 <__cxa_guard_acquire>
 801f13e:	b138      	cbz	r0, 801f150 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f140:	4620      	mov	r0, r4
 801f142:	f00a fda2 	bl	8029c8a <__cxa_guard_release>
 801f146:	4a06      	ldr	r2, [pc, #24]	; (801f160 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f148:	4909      	ldr	r1, [pc, #36]	; (801f170 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801f14a:	480a      	ldr	r0, [pc, #40]	; (801f174 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f14c:	f00a fd8a 	bl	8029c64 <__aeabi_atexit>
 801f150:	4b05      	ldr	r3, [pc, #20]	; (801f168 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f152:	62ab      	str	r3, [r5, #40]	; 0x28
 801f154:	4b07      	ldr	r3, [pc, #28]	; (801f174 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f156:	62eb      	str	r3, [r5, #44]	; 0x2c
 801f158:	bd38      	pop	{r3, r4, r5, pc}
 801f15a:	bf00      	nop
 801f15c:	20012e7c 	.word	0x20012e7c
 801f160:	20000000 	.word	0x20000000
 801f164:	0801bc8f 	.word	0x0801bc8f
 801f168:	200000bc 	.word	0x200000bc
 801f16c:	20012e80 	.word	0x20012e80
 801f170:	0801bc8d 	.word	0x0801bc8d
 801f174:	200000c0 	.word	0x200000c0

0801f178 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801f178:	b510      	push	{r4, lr}
 801f17a:	4604      	mov	r4, r0
 801f17c:	f7ff ff88 	bl	801f090 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801f180:	4620      	mov	r0, r4
 801f182:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f186:	f7ff bfbd 	b.w	801f104 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801f18c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801f18c:	b538      	push	{r3, r4, r5, lr}
 801f18e:	4c15      	ldr	r4, [pc, #84]	; (801f1e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801f190:	7823      	ldrb	r3, [r4, #0]
 801f192:	f3bf 8f5b 	dmb	ish
 801f196:	07da      	lsls	r2, r3, #31
 801f198:	4605      	mov	r5, r0
 801f19a:	d40b      	bmi.n	801f1b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f19c:	4620      	mov	r0, r4
 801f19e:	f00a fd68 	bl	8029c72 <__cxa_guard_acquire>
 801f1a2:	b138      	cbz	r0, 801f1b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f1a4:	4620      	mov	r0, r4
 801f1a6:	f00a fd70 	bl	8029c8a <__cxa_guard_release>
 801f1aa:	4a0f      	ldr	r2, [pc, #60]	; (801f1e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f1ac:	490f      	ldr	r1, [pc, #60]	; (801f1ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801f1ae:	4810      	ldr	r0, [pc, #64]	; (801f1f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f1b0:	f00a fd58 	bl	8029c64 <__aeabi_atexit>
 801f1b4:	4c0f      	ldr	r4, [pc, #60]	; (801f1f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801f1b6:	7823      	ldrb	r3, [r4, #0]
 801f1b8:	f3bf 8f5b 	dmb	ish
 801f1bc:	07db      	lsls	r3, r3, #31
 801f1be:	d40b      	bmi.n	801f1d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f1c0:	4620      	mov	r0, r4
 801f1c2:	f00a fd56 	bl	8029c72 <__cxa_guard_acquire>
 801f1c6:	b138      	cbz	r0, 801f1d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f1c8:	4620      	mov	r0, r4
 801f1ca:	f00a fd5e 	bl	8029c8a <__cxa_guard_release>
 801f1ce:	4a06      	ldr	r2, [pc, #24]	; (801f1e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f1d0:	4909      	ldr	r1, [pc, #36]	; (801f1f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801f1d2:	480a      	ldr	r0, [pc, #40]	; (801f1fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f1d4:	f00a fd46 	bl	8029c64 <__aeabi_atexit>
 801f1d8:	4b05      	ldr	r3, [pc, #20]	; (801f1f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f1da:	652b      	str	r3, [r5, #80]	; 0x50
 801f1dc:	4b07      	ldr	r3, [pc, #28]	; (801f1fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f1de:	656b      	str	r3, [r5, #84]	; 0x54
 801f1e0:	bd38      	pop	{r3, r4, r5, pc}
 801f1e2:	bf00      	nop
 801f1e4:	20012eb4 	.word	0x20012eb4
 801f1e8:	20000000 	.word	0x20000000
 801f1ec:	0801bc7b 	.word	0x0801bc7b
 801f1f0:	200000f4 	.word	0x200000f4
 801f1f4:	20012eb8 	.word	0x20012eb8
 801f1f8:	0801bc79 	.word	0x0801bc79
 801f1fc:	200000f8 	.word	0x200000f8

0801f200 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801f200:	b538      	push	{r3, r4, r5, lr}
 801f202:	4c15      	ldr	r4, [pc, #84]	; (801f258 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801f204:	7823      	ldrb	r3, [r4, #0]
 801f206:	f3bf 8f5b 	dmb	ish
 801f20a:	07da      	lsls	r2, r3, #31
 801f20c:	4605      	mov	r5, r0
 801f20e:	d40b      	bmi.n	801f228 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f210:	4620      	mov	r0, r4
 801f212:	f00a fd2e 	bl	8029c72 <__cxa_guard_acquire>
 801f216:	b138      	cbz	r0, 801f228 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f218:	4620      	mov	r0, r4
 801f21a:	f00a fd36 	bl	8029c8a <__cxa_guard_release>
 801f21e:	4a0f      	ldr	r2, [pc, #60]	; (801f25c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f220:	490f      	ldr	r1, [pc, #60]	; (801f260 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801f222:	4810      	ldr	r0, [pc, #64]	; (801f264 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f224:	f00a fd1e 	bl	8029c64 <__aeabi_atexit>
 801f228:	4c0f      	ldr	r4, [pc, #60]	; (801f268 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801f22a:	7823      	ldrb	r3, [r4, #0]
 801f22c:	f3bf 8f5b 	dmb	ish
 801f230:	07db      	lsls	r3, r3, #31
 801f232:	d40b      	bmi.n	801f24c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f234:	4620      	mov	r0, r4
 801f236:	f00a fd1c 	bl	8029c72 <__cxa_guard_acquire>
 801f23a:	b138      	cbz	r0, 801f24c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801f23c:	4620      	mov	r0, r4
 801f23e:	f00a fd24 	bl	8029c8a <__cxa_guard_release>
 801f242:	4a06      	ldr	r2, [pc, #24]	; (801f25c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f244:	4909      	ldr	r1, [pc, #36]	; (801f26c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801f246:	480a      	ldr	r0, [pc, #40]	; (801f270 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f248:	f00a fd0c 	bl	8029c64 <__aeabi_atexit>
 801f24c:	4b05      	ldr	r3, [pc, #20]	; (801f264 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801f24e:	64ab      	str	r3, [r5, #72]	; 0x48
 801f250:	4b07      	ldr	r3, [pc, #28]	; (801f270 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801f252:	64eb      	str	r3, [r5, #76]	; 0x4c
 801f254:	bd38      	pop	{r3, r4, r5, pc}
 801f256:	bf00      	nop
 801f258:	20012ebc 	.word	0x20012ebc
 801f25c:	20000000 	.word	0x20000000
 801f260:	0801bc7f 	.word	0x0801bc7f
 801f264:	200000fc 	.word	0x200000fc
 801f268:	20012ec0 	.word	0x20012ec0
 801f26c:	0801bc7d 	.word	0x0801bc7d
 801f270:	20000100 	.word	0x20000100

0801f274 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801f274:	b538      	push	{r3, r4, r5, lr}
 801f276:	4c15      	ldr	r4, [pc, #84]	; (801f2cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801f278:	7823      	ldrb	r3, [r4, #0]
 801f27a:	f3bf 8f5b 	dmb	ish
 801f27e:	07da      	lsls	r2, r3, #31
 801f280:	4605      	mov	r5, r0
 801f282:	d40b      	bmi.n	801f29c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f284:	4620      	mov	r0, r4
 801f286:	f00a fcf4 	bl	8029c72 <__cxa_guard_acquire>
 801f28a:	b138      	cbz	r0, 801f29c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801f28c:	4620      	mov	r0, r4
 801f28e:	f00a fcfc 	bl	8029c8a <__cxa_guard_release>
 801f292:	4a0f      	ldr	r2, [pc, #60]	; (801f2d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f294:	490f      	ldr	r1, [pc, #60]	; (801f2d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801f296:	4810      	ldr	r0, [pc, #64]	; (801f2d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f298:	f00a fce4 	bl	8029c64 <__aeabi_atexit>
 801f29c:	4c0f      	ldr	r4, [pc, #60]	; (801f2dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801f29e:	7823      	ldrb	r3, [r4, #0]
 801f2a0:	f3bf 8f5b 	dmb	ish
 801f2a4:	07db      	lsls	r3, r3, #31
 801f2a6:	d40b      	bmi.n	801f2c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f2a8:	4620      	mov	r0, r4
 801f2aa:	f00a fce2 	bl	8029c72 <__cxa_guard_acquire>
 801f2ae:	b138      	cbz	r0, 801f2c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801f2b0:	4620      	mov	r0, r4
 801f2b2:	f00a fcea 	bl	8029c8a <__cxa_guard_release>
 801f2b6:	4a06      	ldr	r2, [pc, #24]	; (801f2d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801f2b8:	4909      	ldr	r1, [pc, #36]	; (801f2e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801f2ba:	480a      	ldr	r0, [pc, #40]	; (801f2e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f2bc:	f00a fcd2 	bl	8029c64 <__aeabi_atexit>
 801f2c0:	4b05      	ldr	r3, [pc, #20]	; (801f2d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801f2c2:	642b      	str	r3, [r5, #64]	; 0x40
 801f2c4:	4b07      	ldr	r3, [pc, #28]	; (801f2e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801f2c6:	646b      	str	r3, [r5, #68]	; 0x44
 801f2c8:	bd38      	pop	{r3, r4, r5, pc}
 801f2ca:	bf00      	nop
 801f2cc:	20012e84 	.word	0x20012e84
 801f2d0:	20000000 	.word	0x20000000
 801f2d4:	0801bc83 	.word	0x0801bc83
 801f2d8:	200000c4 	.word	0x200000c4
 801f2dc:	20012e88 	.word	0x20012e88
 801f2e0:	0801bc81 	.word	0x0801bc81
 801f2e4:	200000c8 	.word	0x200000c8

0801f2e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801f2e8:	b538      	push	{r3, r4, r5, lr}
 801f2ea:	4c15      	ldr	r4, [pc, #84]	; (801f340 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801f2ec:	7823      	ldrb	r3, [r4, #0]
 801f2ee:	f3bf 8f5b 	dmb	ish
 801f2f2:	07da      	lsls	r2, r3, #31
 801f2f4:	4605      	mov	r5, r0
 801f2f6:	d40b      	bmi.n	801f310 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f2f8:	4620      	mov	r0, r4
 801f2fa:	f00a fcba 	bl	8029c72 <__cxa_guard_acquire>
 801f2fe:	b138      	cbz	r0, 801f310 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801f300:	4620      	mov	r0, r4
 801f302:	f00a fcc2 	bl	8029c8a <__cxa_guard_release>
 801f306:	4a0f      	ldr	r2, [pc, #60]	; (801f344 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f308:	490f      	ldr	r1, [pc, #60]	; (801f348 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801f30a:	4810      	ldr	r0, [pc, #64]	; (801f34c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f30c:	f00a fcaa 	bl	8029c64 <__aeabi_atexit>
 801f310:	4c0f      	ldr	r4, [pc, #60]	; (801f350 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801f312:	7823      	ldrb	r3, [r4, #0]
 801f314:	f3bf 8f5b 	dmb	ish
 801f318:	07db      	lsls	r3, r3, #31
 801f31a:	d40b      	bmi.n	801f334 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f31c:	4620      	mov	r0, r4
 801f31e:	f00a fca8 	bl	8029c72 <__cxa_guard_acquire>
 801f322:	b138      	cbz	r0, 801f334 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801f324:	4620      	mov	r0, r4
 801f326:	f00a fcb0 	bl	8029c8a <__cxa_guard_release>
 801f32a:	4a06      	ldr	r2, [pc, #24]	; (801f344 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801f32c:	4909      	ldr	r1, [pc, #36]	; (801f354 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801f32e:	480a      	ldr	r0, [pc, #40]	; (801f358 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f330:	f00a fc98 	bl	8029c64 <__aeabi_atexit>
 801f334:	4b05      	ldr	r3, [pc, #20]	; (801f34c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801f336:	63ab      	str	r3, [r5, #56]	; 0x38
 801f338:	4b07      	ldr	r3, [pc, #28]	; (801f358 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801f33a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801f33c:	bd38      	pop	{r3, r4, r5, pc}
 801f33e:	bf00      	nop
 801f340:	20012ea4 	.word	0x20012ea4
 801f344:	20000000 	.word	0x20000000
 801f348:	0801bc87 	.word	0x0801bc87
 801f34c:	200000e4 	.word	0x200000e4
 801f350:	20012ea8 	.word	0x20012ea8
 801f354:	0801bc85 	.word	0x0801bc85
 801f358:	200000e8 	.word	0x200000e8

0801f35c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801f35c:	b510      	push	{r4, lr}
 801f35e:	4604      	mov	r4, r0
 801f360:	f7ff ff14 	bl	801f18c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801f364:	4620      	mov	r0, r4
 801f366:	f7ff ff85 	bl	801f274 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801f36a:	4620      	mov	r0, r4
 801f36c:	f7ff ff48 	bl	801f200 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801f370:	4620      	mov	r0, r4
 801f372:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f376:	f7ff bfb7 	b.w	801f2e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801f37c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801f37c:	b538      	push	{r3, r4, r5, lr}
 801f37e:	4c15      	ldr	r4, [pc, #84]	; (801f3d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801f380:	7823      	ldrb	r3, [r4, #0]
 801f382:	f3bf 8f5b 	dmb	ish
 801f386:	07da      	lsls	r2, r3, #31
 801f388:	4605      	mov	r5, r0
 801f38a:	d40b      	bmi.n	801f3a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f38c:	4620      	mov	r0, r4
 801f38e:	f00a fc70 	bl	8029c72 <__cxa_guard_acquire>
 801f392:	b138      	cbz	r0, 801f3a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801f394:	4620      	mov	r0, r4
 801f396:	f00a fc78 	bl	8029c8a <__cxa_guard_release>
 801f39a:	4a0f      	ldr	r2, [pc, #60]	; (801f3d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f39c:	490f      	ldr	r1, [pc, #60]	; (801f3dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801f39e:	4810      	ldr	r0, [pc, #64]	; (801f3e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f3a0:	f00a fc60 	bl	8029c64 <__aeabi_atexit>
 801f3a4:	4c0f      	ldr	r4, [pc, #60]	; (801f3e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801f3a6:	7823      	ldrb	r3, [r4, #0]
 801f3a8:	f3bf 8f5b 	dmb	ish
 801f3ac:	07db      	lsls	r3, r3, #31
 801f3ae:	d40b      	bmi.n	801f3c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f3b0:	4620      	mov	r0, r4
 801f3b2:	f00a fc5e 	bl	8029c72 <__cxa_guard_acquire>
 801f3b6:	b138      	cbz	r0, 801f3c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801f3b8:	4620      	mov	r0, r4
 801f3ba:	f00a fc66 	bl	8029c8a <__cxa_guard_release>
 801f3be:	4a06      	ldr	r2, [pc, #24]	; (801f3d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801f3c0:	4909      	ldr	r1, [pc, #36]	; (801f3e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801f3c2:	480a      	ldr	r0, [pc, #40]	; (801f3ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f3c4:	f00a fc4e 	bl	8029c64 <__aeabi_atexit>
 801f3c8:	4b05      	ldr	r3, [pc, #20]	; (801f3e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801f3ca:	662b      	str	r3, [r5, #96]	; 0x60
 801f3cc:	4b07      	ldr	r3, [pc, #28]	; (801f3ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801f3ce:	666b      	str	r3, [r5, #100]	; 0x64
 801f3d0:	bd38      	pop	{r3, r4, r5, pc}
 801f3d2:	bf00      	nop
 801f3d4:	20012e8c 	.word	0x20012e8c
 801f3d8:	20000000 	.word	0x20000000
 801f3dc:	0801bc73 	.word	0x0801bc73
 801f3e0:	200000cc 	.word	0x200000cc
 801f3e4:	20012e90 	.word	0x20012e90
 801f3e8:	0801bc71 	.word	0x0801bc71
 801f3ec:	200000d0 	.word	0x200000d0

0801f3f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801f3f0:	b538      	push	{r3, r4, r5, lr}
 801f3f2:	4c15      	ldr	r4, [pc, #84]	; (801f448 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801f3f4:	7823      	ldrb	r3, [r4, #0]
 801f3f6:	f3bf 8f5b 	dmb	ish
 801f3fa:	07da      	lsls	r2, r3, #31
 801f3fc:	4605      	mov	r5, r0
 801f3fe:	d40b      	bmi.n	801f418 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f400:	4620      	mov	r0, r4
 801f402:	f00a fc36 	bl	8029c72 <__cxa_guard_acquire>
 801f406:	b138      	cbz	r0, 801f418 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801f408:	4620      	mov	r0, r4
 801f40a:	f00a fc3e 	bl	8029c8a <__cxa_guard_release>
 801f40e:	4a0f      	ldr	r2, [pc, #60]	; (801f44c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f410:	490f      	ldr	r1, [pc, #60]	; (801f450 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801f412:	4810      	ldr	r0, [pc, #64]	; (801f454 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f414:	f00a fc26 	bl	8029c64 <__aeabi_atexit>
 801f418:	4c0f      	ldr	r4, [pc, #60]	; (801f458 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801f41a:	7823      	ldrb	r3, [r4, #0]
 801f41c:	f3bf 8f5b 	dmb	ish
 801f420:	07db      	lsls	r3, r3, #31
 801f422:	d40b      	bmi.n	801f43c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f424:	4620      	mov	r0, r4
 801f426:	f00a fc24 	bl	8029c72 <__cxa_guard_acquire>
 801f42a:	b138      	cbz	r0, 801f43c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801f42c:	4620      	mov	r0, r4
 801f42e:	f00a fc2c 	bl	8029c8a <__cxa_guard_release>
 801f432:	4a06      	ldr	r2, [pc, #24]	; (801f44c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801f434:	4909      	ldr	r1, [pc, #36]	; (801f45c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801f436:	480a      	ldr	r0, [pc, #40]	; (801f460 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f438:	f00a fc14 	bl	8029c64 <__aeabi_atexit>
 801f43c:	4b05      	ldr	r3, [pc, #20]	; (801f454 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801f43e:	65ab      	str	r3, [r5, #88]	; 0x58
 801f440:	4b07      	ldr	r3, [pc, #28]	; (801f460 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801f442:	65eb      	str	r3, [r5, #92]	; 0x5c
 801f444:	bd38      	pop	{r3, r4, r5, pc}
 801f446:	bf00      	nop
 801f448:	20012e64 	.word	0x20012e64
 801f44c:	20000000 	.word	0x20000000
 801f450:	0801bc77 	.word	0x0801bc77
 801f454:	200000a4 	.word	0x200000a4
 801f458:	20012e68 	.word	0x20012e68
 801f45c:	0801bc75 	.word	0x0801bc75
 801f460:	200000a8 	.word	0x200000a8

0801f464 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801f464:	b510      	push	{r4, lr}
 801f466:	4604      	mov	r4, r0
 801f468:	f7ff ff88 	bl	801f37c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801f46c:	4620      	mov	r0, r4
 801f46e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f472:	f7ff bfbd 	b.w	801f3f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801f478 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801f478:	b538      	push	{r3, r4, r5, lr}
 801f47a:	4c15      	ldr	r4, [pc, #84]	; (801f4d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801f47c:	7823      	ldrb	r3, [r4, #0]
 801f47e:	f3bf 8f5b 	dmb	ish
 801f482:	07da      	lsls	r2, r3, #31
 801f484:	4605      	mov	r5, r0
 801f486:	d40b      	bmi.n	801f4a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f488:	4620      	mov	r0, r4
 801f48a:	f00a fbf2 	bl	8029c72 <__cxa_guard_acquire>
 801f48e:	b138      	cbz	r0, 801f4a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801f490:	4620      	mov	r0, r4
 801f492:	f00a fbfa 	bl	8029c8a <__cxa_guard_release>
 801f496:	4a0f      	ldr	r2, [pc, #60]	; (801f4d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f498:	490f      	ldr	r1, [pc, #60]	; (801f4d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801f49a:	4810      	ldr	r0, [pc, #64]	; (801f4dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f49c:	f00a fbe2 	bl	8029c64 <__aeabi_atexit>
 801f4a0:	4c0f      	ldr	r4, [pc, #60]	; (801f4e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801f4a2:	7823      	ldrb	r3, [r4, #0]
 801f4a4:	f3bf 8f5b 	dmb	ish
 801f4a8:	07db      	lsls	r3, r3, #31
 801f4aa:	d40b      	bmi.n	801f4c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f4ac:	4620      	mov	r0, r4
 801f4ae:	f00a fbe0 	bl	8029c72 <__cxa_guard_acquire>
 801f4b2:	b138      	cbz	r0, 801f4c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801f4b4:	4620      	mov	r0, r4
 801f4b6:	f00a fbe8 	bl	8029c8a <__cxa_guard_release>
 801f4ba:	4a06      	ldr	r2, [pc, #24]	; (801f4d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801f4bc:	4909      	ldr	r1, [pc, #36]	; (801f4e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801f4be:	480a      	ldr	r0, [pc, #40]	; (801f4e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f4c0:	f00a fbd0 	bl	8029c64 <__aeabi_atexit>
 801f4c4:	4b05      	ldr	r3, [pc, #20]	; (801f4dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801f4c6:	672b      	str	r3, [r5, #112]	; 0x70
 801f4c8:	4b07      	ldr	r3, [pc, #28]	; (801f4e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801f4ca:	676b      	str	r3, [r5, #116]	; 0x74
 801f4cc:	bd38      	pop	{r3, r4, r5, pc}
 801f4ce:	bf00      	nop
 801f4d0:	20012e5c 	.word	0x20012e5c
 801f4d4:	20000000 	.word	0x20000000
 801f4d8:	0801bc6b 	.word	0x0801bc6b
 801f4dc:	2000009c 	.word	0x2000009c
 801f4e0:	20012e60 	.word	0x20012e60
 801f4e4:	0801bc69 	.word	0x0801bc69
 801f4e8:	200000a0 	.word	0x200000a0

0801f4ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801f4ec:	b538      	push	{r3, r4, r5, lr}
 801f4ee:	4c15      	ldr	r4, [pc, #84]	; (801f544 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801f4f0:	7823      	ldrb	r3, [r4, #0]
 801f4f2:	f3bf 8f5b 	dmb	ish
 801f4f6:	07da      	lsls	r2, r3, #31
 801f4f8:	4605      	mov	r5, r0
 801f4fa:	d40b      	bmi.n	801f514 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f4fc:	4620      	mov	r0, r4
 801f4fe:	f00a fbb8 	bl	8029c72 <__cxa_guard_acquire>
 801f502:	b138      	cbz	r0, 801f514 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801f504:	4620      	mov	r0, r4
 801f506:	f00a fbc0 	bl	8029c8a <__cxa_guard_release>
 801f50a:	4a0f      	ldr	r2, [pc, #60]	; (801f548 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f50c:	490f      	ldr	r1, [pc, #60]	; (801f54c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801f50e:	4810      	ldr	r0, [pc, #64]	; (801f550 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f510:	f00a fba8 	bl	8029c64 <__aeabi_atexit>
 801f514:	4c0f      	ldr	r4, [pc, #60]	; (801f554 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801f516:	7823      	ldrb	r3, [r4, #0]
 801f518:	f3bf 8f5b 	dmb	ish
 801f51c:	07db      	lsls	r3, r3, #31
 801f51e:	d40b      	bmi.n	801f538 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f520:	4620      	mov	r0, r4
 801f522:	f00a fba6 	bl	8029c72 <__cxa_guard_acquire>
 801f526:	b138      	cbz	r0, 801f538 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801f528:	4620      	mov	r0, r4
 801f52a:	f00a fbae 	bl	8029c8a <__cxa_guard_release>
 801f52e:	4a06      	ldr	r2, [pc, #24]	; (801f548 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801f530:	4909      	ldr	r1, [pc, #36]	; (801f558 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801f532:	480a      	ldr	r0, [pc, #40]	; (801f55c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f534:	f00a fb96 	bl	8029c64 <__aeabi_atexit>
 801f538:	4b05      	ldr	r3, [pc, #20]	; (801f550 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801f53a:	66ab      	str	r3, [r5, #104]	; 0x68
 801f53c:	4b07      	ldr	r3, [pc, #28]	; (801f55c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801f53e:	66eb      	str	r3, [r5, #108]	; 0x6c
 801f540:	bd38      	pop	{r3, r4, r5, pc}
 801f542:	bf00      	nop
 801f544:	20012e54 	.word	0x20012e54
 801f548:	20000000 	.word	0x20000000
 801f54c:	0801bc6f 	.word	0x0801bc6f
 801f550:	20000094 	.word	0x20000094
 801f554:	20012e58 	.word	0x20012e58
 801f558:	0801bc6d 	.word	0x0801bc6d
 801f55c:	20000098 	.word	0x20000098

0801f560 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801f560:	b510      	push	{r4, lr}
 801f562:	4604      	mov	r4, r0
 801f564:	f7ff ff88 	bl	801f478 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801f568:	4620      	mov	r0, r4
 801f56a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f56e:	f7ff bfbd 	b.w	801f4ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801f572 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801f572:	b510      	push	{r4, lr}
 801f574:	4604      	mov	r4, r0
 801f576:	f7ff fff3 	bl	801f560 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801f57a:	4620      	mov	r0, r4
 801f57c:	f7ff ff72 	bl	801f464 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801f580:	4620      	mov	r0, r4
 801f582:	f7ff fdf9 	bl	801f178 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801f586:	4620      	mov	r0, r4
 801f588:	f7ff fcfa 	bl	801ef80 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801f58c:	4620      	mov	r0, r4
 801f58e:	f7ff fd75 	bl	801f07c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801f592:	4620      	mov	r0, r4
 801f594:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f598:	f7ff bee0 	b.w	801f35c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801f59c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801f59c:	b538      	push	{r3, r4, r5, lr}
 801f59e:	4c0b      	ldr	r4, [pc, #44]	; (801f5cc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801f5a0:	7823      	ldrb	r3, [r4, #0]
 801f5a2:	f3bf 8f5b 	dmb	ish
 801f5a6:	07db      	lsls	r3, r3, #31
 801f5a8:	4605      	mov	r5, r0
 801f5aa:	d40b      	bmi.n	801f5c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f5ac:	4620      	mov	r0, r4
 801f5ae:	f00a fb60 	bl	8029c72 <__cxa_guard_acquire>
 801f5b2:	b138      	cbz	r0, 801f5c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801f5b4:	4620      	mov	r0, r4
 801f5b6:	f00a fb68 	bl	8029c8a <__cxa_guard_release>
 801f5ba:	4a05      	ldr	r2, [pc, #20]	; (801f5d0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801f5bc:	4905      	ldr	r1, [pc, #20]	; (801f5d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801f5be:	4806      	ldr	r0, [pc, #24]	; (801f5d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f5c0:	f00a fb50 	bl	8029c64 <__aeabi_atexit>
 801f5c4:	4b04      	ldr	r3, [pc, #16]	; (801f5d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801f5c6:	67ab      	str	r3, [r5, #120]	; 0x78
 801f5c8:	bd38      	pop	{r3, r4, r5, pc}
 801f5ca:	bf00      	nop
 801f5cc:	20012e48 	.word	0x20012e48
 801f5d0:	20000000 	.word	0x20000000
 801f5d4:	0801bc67 	.word	0x0801bc67
 801f5d8:	2000008c 	.word	0x2000008c

0801f5dc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801f5dc:	b538      	push	{r3, r4, r5, lr}
 801f5de:	4c0b      	ldr	r4, [pc, #44]	; (801f60c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801f5e0:	7823      	ldrb	r3, [r4, #0]
 801f5e2:	f3bf 8f5b 	dmb	ish
 801f5e6:	07db      	lsls	r3, r3, #31
 801f5e8:	4605      	mov	r5, r0
 801f5ea:	d40b      	bmi.n	801f604 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f5ec:	4620      	mov	r0, r4
 801f5ee:	f00a fb40 	bl	8029c72 <__cxa_guard_acquire>
 801f5f2:	b138      	cbz	r0, 801f604 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801f5f4:	4620      	mov	r0, r4
 801f5f6:	f00a fb48 	bl	8029c8a <__cxa_guard_release>
 801f5fa:	4a05      	ldr	r2, [pc, #20]	; (801f610 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801f5fc:	4905      	ldr	r1, [pc, #20]	; (801f614 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801f5fe:	4806      	ldr	r0, [pc, #24]	; (801f618 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f600:	f00a fb30 	bl	8029c64 <__aeabi_atexit>
 801f604:	4b04      	ldr	r3, [pc, #16]	; (801f618 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801f606:	67eb      	str	r3, [r5, #124]	; 0x7c
 801f608:	bd38      	pop	{r3, r4, r5, pc}
 801f60a:	bf00      	nop
 801f60c:	20012e4c 	.word	0x20012e4c
 801f610:	20000000 	.word	0x20000000
 801f614:	0801bc65 	.word	0x0801bc65
 801f618:	20000090 	.word	0x20000090

0801f61c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801f61c:	b570      	push	{r4, r5, r6, lr}
 801f61e:	4d0d      	ldr	r5, [pc, #52]	; (801f654 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801f620:	4c0d      	ldr	r4, [pc, #52]	; (801f658 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801f622:	782b      	ldrb	r3, [r5, #0]
 801f624:	f3bf 8f5b 	dmb	ish
 801f628:	f013 0f01 	tst.w	r3, #1
 801f62c:	4606      	mov	r6, r0
 801f62e:	d10d      	bne.n	801f64c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f630:	4628      	mov	r0, r5
 801f632:	f00a fb1e 	bl	8029c72 <__cxa_guard_acquire>
 801f636:	b148      	cbz	r0, 801f64c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801f638:	4b08      	ldr	r3, [pc, #32]	; (801f65c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801f63a:	6023      	str	r3, [r4, #0]
 801f63c:	4628      	mov	r0, r5
 801f63e:	f00a fb24 	bl	8029c8a <__cxa_guard_release>
 801f642:	4a07      	ldr	r2, [pc, #28]	; (801f660 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801f644:	4907      	ldr	r1, [pc, #28]	; (801f664 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801f646:	4620      	mov	r0, r4
 801f648:	f00a fb0c 	bl	8029c64 <__aeabi_atexit>
 801f64c:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801f650:	bd70      	pop	{r4, r5, r6, pc}
 801f652:	bf00      	nop
 801f654:	20012e50 	.word	0x20012e50
 801f658:	20012ec4 	.word	0x20012ec4
 801f65c:	0802f40c 	.word	0x0802f40c
 801f660:	20000000 	.word	0x20000000
 801f664:	0801bc63 	.word	0x0801bc63

0801f668 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801f668:	b510      	push	{r4, lr}
 801f66a:	4604      	mov	r4, r0
 801f66c:	f7ff ff96 	bl	801f59c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801f670:	4620      	mov	r0, r4
 801f672:	f7ff ffb3 	bl	801f5dc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801f676:	4620      	mov	r0, r4
 801f678:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f67c:	f7ff bfce 	b.w	801f61c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801f680 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801f680:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f684:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801f688:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801f68c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801f690:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801f694:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801f698:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801f69c:	8808      	ldrh	r0, [r1, #0]
 801f69e:	fb05 4c0e 	mla	ip, r5, lr, r4
 801f6a2:	2d00      	cmp	r5, #0
 801f6a4:	eb02 0a0c 	add.w	sl, r2, ip
 801f6a8:	f2c0 80b0 	blt.w	801f80c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f6ac:	45ab      	cmp	fp, r5
 801f6ae:	f340 80ad 	ble.w	801f80c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801f6b2:	2c00      	cmp	r4, #0
 801f6b4:	f2c0 80a8 	blt.w	801f808 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f6b8:	45a6      	cmp	lr, r4
 801f6ba:	f340 80a5 	ble.w	801f808 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801f6be:	f812 200c 	ldrb.w	r2, [r2, ip]
 801f6c2:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801f6c6:	1c62      	adds	r2, r4, #1
 801f6c8:	f100 80a3 	bmi.w	801f812 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f6cc:	4596      	cmp	lr, r2
 801f6ce:	f340 80a0 	ble.w	801f812 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f6d2:	f1b9 0f00 	cmp.w	r9, #0
 801f6d6:	f000 809c 	beq.w	801f812 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801f6da:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f6de:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f6e2:	3501      	adds	r5, #1
 801f6e4:	f100 8099 	bmi.w	801f81a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f6e8:	45ab      	cmp	fp, r5
 801f6ea:	f340 8096 	ble.w	801f81a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f6ee:	2f00      	cmp	r7, #0
 801f6f0:	f000 8093 	beq.w	801f81a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801f6f4:	2c00      	cmp	r4, #0
 801f6f6:	f2c0 808e 	blt.w	801f816 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f6fa:	45a6      	cmp	lr, r4
 801f6fc:	f340 808b 	ble.w	801f816 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801f700:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801f704:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801f708:	3401      	adds	r4, #1
 801f70a:	f100 8089 	bmi.w	801f820 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f70e:	45a6      	cmp	lr, r4
 801f710:	f340 8086 	ble.w	801f820 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f714:	f1b9 0f00 	cmp.w	r9, #0
 801f718:	f000 8082 	beq.w	801f820 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801f71c:	44d6      	add	lr, sl
 801f71e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f722:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801f726:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801f72a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f72e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801f732:	fb19 fe07 	smulbb	lr, r9, r7
 801f736:	ea44 0808 	orr.w	r8, r4, r8
 801f73a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801f73e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801f742:	f1c7 0210 	rsb	r2, r7, #16
 801f746:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801f74a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f74e:	ea44 0c0c 	orr.w	ip, r4, ip
 801f752:	eba2 0209 	sub.w	r2, r2, r9
 801f756:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801f75a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801f75e:	fb04 f40c 	mul.w	r4, r4, ip
 801f762:	fb02 4808 	mla	r8, r2, r8, r4
 801f766:	041a      	lsls	r2, r3, #16
 801f768:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f76c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f770:	4313      	orrs	r3, r2
 801f772:	042a      	lsls	r2, r5, #16
 801f774:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801f778:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f77c:	fb0e 8303 	mla	r3, lr, r3, r8
 801f780:	432a      	orrs	r2, r5
 801f782:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801f786:	fb07 3202 	mla	r2, r7, r2, r3
 801f78a:	0d53      	lsrs	r3, r2, #21
 801f78c:	0952      	lsrs	r2, r2, #5
 801f78e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f792:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f796:	431a      	orrs	r2, r3
 801f798:	b293      	uxth	r3, r2
 801f79a:	b2b4      	uxth	r4, r6
 801f79c:	1202      	asrs	r2, r0, #8
 801f79e:	43f6      	mvns	r6, r6
 801f7a0:	b2f6      	uxtb	r6, r6
 801f7a2:	121d      	asrs	r5, r3, #8
 801f7a4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f7a8:	fb12 f206 	smulbb	r2, r2, r6
 801f7ac:	10c7      	asrs	r7, r0, #3
 801f7ae:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f7b2:	00c0      	lsls	r0, r0, #3
 801f7b4:	fb05 2504 	mla	r5, r5, r4, r2
 801f7b8:	b2c0      	uxtb	r0, r0
 801f7ba:	10da      	asrs	r2, r3, #3
 801f7bc:	00db      	lsls	r3, r3, #3
 801f7be:	b2db      	uxtb	r3, r3
 801f7c0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f7c4:	fb10 f006 	smulbb	r0, r0, r6
 801f7c8:	b2ad      	uxth	r5, r5
 801f7ca:	fb03 0004 	mla	r0, r3, r4, r0
 801f7ce:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f7d2:	fb17 f706 	smulbb	r7, r7, r6
 801f7d6:	b280      	uxth	r0, r0
 801f7d8:	1c6b      	adds	r3, r5, #1
 801f7da:	fb02 7204 	mla	r2, r2, r4, r7
 801f7de:	b292      	uxth	r2, r2
 801f7e0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f7e4:	1c43      	adds	r3, r0, #1
 801f7e6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801f7ea:	1c50      	adds	r0, r2, #1
 801f7ec:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801f7f0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f7f4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f7f8:	0952      	lsrs	r2, r2, #5
 801f7fa:	432b      	orrs	r3, r5
 801f7fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f800:	4313      	orrs	r3, r2
 801f802:	800b      	strh	r3, [r1, #0]
 801f804:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f808:	4680      	mov	r8, r0
 801f80a:	e75c      	b.n	801f6c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801f80c:	4684      	mov	ip, r0
 801f80e:	4680      	mov	r8, r0
 801f810:	e767      	b.n	801f6e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f812:	4684      	mov	ip, r0
 801f814:	e765      	b.n	801f6e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801f816:	4605      	mov	r5, r0
 801f818:	e776      	b.n	801f708 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801f81a:	4603      	mov	r3, r0
 801f81c:	4605      	mov	r5, r0
 801f81e:	e782      	b.n	801f726 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801f820:	4603      	mov	r3, r0
 801f822:	e780      	b.n	801f726 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801f824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f828:	b099      	sub	sp, #100	; 0x64
 801f82a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801f82e:	9215      	str	r2, [sp, #84]	; 0x54
 801f830:	9309      	str	r3, [sp, #36]	; 0x24
 801f832:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801f834:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801f838:	930d      	str	r3, [sp, #52]	; 0x34
 801f83a:	910c      	str	r1, [sp, #48]	; 0x30
 801f83c:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801f840:	9016      	str	r0, [sp, #88]	; 0x58
 801f842:	6850      	ldr	r0, [r2, #4]
 801f844:	6812      	ldr	r2, [r2, #0]
 801f846:	fb00 1303 	mla	r3, r0, r3, r1
 801f84a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801f84e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f850:	681b      	ldr	r3, [r3, #0]
 801f852:	930b      	str	r3, [sp, #44]	; 0x2c
 801f854:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f856:	685e      	ldr	r6, [r3, #4]
 801f858:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f85a:	43db      	mvns	r3, r3
 801f85c:	b2db      	uxtb	r3, r3
 801f85e:	3604      	adds	r6, #4
 801f860:	930a      	str	r3, [sp, #40]	; 0x28
 801f862:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f864:	2b00      	cmp	r3, #0
 801f866:	dc03      	bgt.n	801f870 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801f868:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801f86a:	2b00      	cmp	r3, #0
 801f86c:	f340 8225 	ble.w	801fcba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801f870:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f872:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f876:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f87a:	1e48      	subs	r0, r1, #1
 801f87c:	1e57      	subs	r7, r2, #1
 801f87e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f880:	2b00      	cmp	r3, #0
 801f882:	f340 80e3 	ble.w	801fa4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801f886:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801f88a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f88e:	d406      	bmi.n	801f89e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f890:	4584      	cmp	ip, r0
 801f892:	da04      	bge.n	801f89e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f894:	2b00      	cmp	r3, #0
 801f896:	db02      	blt.n	801f89e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f898:	42bb      	cmp	r3, r7
 801f89a:	f2c0 80d8 	blt.w	801fa4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f89e:	f11c 0c01 	adds.w	ip, ip, #1
 801f8a2:	f100 80c9 	bmi.w	801fa38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f8a6:	4561      	cmp	r1, ip
 801f8a8:	f2c0 80c6 	blt.w	801fa38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f8ac:	3301      	adds	r3, #1
 801f8ae:	f100 80c3 	bmi.w	801fa38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f8b2:	429a      	cmp	r2, r3
 801f8b4:	f2c0 80c0 	blt.w	801fa38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f8b8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f8bc:	4647      	mov	r7, r8
 801f8be:	f1bb 0f00 	cmp.w	fp, #0
 801f8c2:	f340 80e3 	ble.w	801fa8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801f8c6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f8c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f8ca:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f8ce:	689b      	ldr	r3, [r3, #8]
 801f8d0:	ea5f 422a 	movs.w	r2, sl, asr #16
 801f8d4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801f8d8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801f8dc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f8e0:	f100 8121 	bmi.w	801fb26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f8e4:	f103 39ff 	add.w	r9, r3, #4294967295
 801f8e8:	454a      	cmp	r2, r9
 801f8ea:	f280 811c 	bge.w	801fb26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f8ee:	f1bc 0f00 	cmp.w	ip, #0
 801f8f2:	f2c0 8118 	blt.w	801fb26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f8f6:	f10e 39ff 	add.w	r9, lr, #4294967295
 801f8fa:	45cc      	cmp	ip, r9
 801f8fc:	f280 8113 	bge.w	801fb26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801f900:	b21b      	sxth	r3, r3
 801f902:	fb0c 2203 	mla	r2, ip, r3, r2
 801f906:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801f908:	eb04 0902 	add.w	r9, r4, r2
 801f90c:	5ca2      	ldrb	r2, [r4, r2]
 801f90e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801f912:	2800      	cmp	r0, #0
 801f914:	f000 80fe 	beq.w	801fb14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801f918:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f91c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801f920:	9211      	str	r2, [sp, #68]	; 0x44
 801f922:	b151      	cbz	r1, 801f93a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f924:	eb09 0203 	add.w	r2, r9, r3
 801f928:	f819 3003 	ldrb.w	r3, [r9, r3]
 801f92c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f930:	930f      	str	r3, [sp, #60]	; 0x3c
 801f932:	7853      	ldrb	r3, [r2, #1]
 801f934:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801f938:	9312      	str	r3, [sp, #72]	; 0x48
 801f93a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f93c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f93e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f942:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f946:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f94a:	ea4c 0c03 	orr.w	ip, ip, r3
 801f94e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f950:	041b      	lsls	r3, r3, #16
 801f952:	fb10 f201 	smulbb	r2, r0, r1
 801f956:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801f95a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f95e:	10d2      	asrs	r2, r2, #3
 801f960:	4323      	orrs	r3, r4
 801f962:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801f966:	4353      	muls	r3, r2
 801f968:	fb09 330c 	mla	r3, r9, ip, r3
 801f96c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f970:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f974:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f978:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f97c:	f1c1 0c10 	rsb	ip, r1, #16
 801f980:	ebac 0c00 	sub.w	ip, ip, r0
 801f984:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f988:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f98c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f98e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801f990:	0418      	lsls	r0, r3, #16
 801f992:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f996:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f99a:	4318      	orrs	r0, r3
 801f99c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f9a0:	fb02 c200 	mla	r2, r2, r0, ip
 801f9a4:	0d53      	lsrs	r3, r2, #21
 801f9a6:	0952      	lsrs	r2, r2, #5
 801f9a8:	8838      	ldrh	r0, [r7, #0]
 801f9aa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f9ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f9b2:	431a      	orrs	r2, r3
 801f9b4:	b292      	uxth	r2, r2
 801f9b6:	1201      	asrs	r1, r0, #8
 801f9b8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801f9bc:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801f9c0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f9c4:	fb11 f104 	smulbb	r1, r1, r4
 801f9c8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801f9cc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f9d0:	00c0      	lsls	r0, r0, #3
 801f9d2:	fb0c 1c03 	mla	ip, ip, r3, r1
 801f9d6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f9da:	10d1      	asrs	r1, r2, #3
 801f9dc:	b2c0      	uxtb	r0, r0
 801f9de:	00d2      	lsls	r2, r2, #3
 801f9e0:	b2d2      	uxtb	r2, r2
 801f9e2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f9e6:	fb1e fe04 	smulbb	lr, lr, r4
 801f9ea:	fb10 f004 	smulbb	r0, r0, r4
 801f9ee:	fa1f fc8c 	uxth.w	ip, ip
 801f9f2:	fb01 e103 	mla	r1, r1, r3, lr
 801f9f6:	fb02 0303 	mla	r3, r2, r3, r0
 801f9fa:	b29a      	uxth	r2, r3
 801f9fc:	f10c 0301 	add.w	r3, ip, #1
 801fa00:	b289      	uxth	r1, r1
 801fa02:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801fa06:	1c53      	adds	r3, r2, #1
 801fa08:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fa0c:	1c4a      	adds	r2, r1, #1
 801fa0e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801fa12:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801fa16:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fa1a:	0949      	lsrs	r1, r1, #5
 801fa1c:	ea43 030c 	orr.w	r3, r3, ip
 801fa20:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fa24:	430b      	orrs	r3, r1
 801fa26:	803b      	strh	r3, [r7, #0]
 801fa28:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fa2a:	449a      	add	sl, r3
 801fa2c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fa2e:	3702      	adds	r7, #2
 801fa30:	441d      	add	r5, r3
 801fa32:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fa36:	e742      	b.n	801f8be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801fa38:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fa3a:	449a      	add	sl, r3
 801fa3c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fa3e:	441d      	add	r5, r3
 801fa40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa42:	3b01      	subs	r3, #1
 801fa44:	9309      	str	r3, [sp, #36]	; 0x24
 801fa46:	f108 0802 	add.w	r8, r8, #2
 801fa4a:	e718      	b.n	801f87e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801fa4c:	d023      	beq.n	801fa96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801fa4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa50:	9825      	ldr	r0, [sp, #148]	; 0x94
 801fa52:	3b01      	subs	r3, #1
 801fa54:	fb00 a003 	mla	r0, r0, r3, sl
 801fa58:	1400      	asrs	r0, r0, #16
 801fa5a:	f53f af2d 	bmi.w	801f8b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fa5e:	3901      	subs	r1, #1
 801fa60:	4288      	cmp	r0, r1
 801fa62:	f6bf af29 	bge.w	801f8b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fa66:	9926      	ldr	r1, [sp, #152]	; 0x98
 801fa68:	fb01 5303 	mla	r3, r1, r3, r5
 801fa6c:	141b      	asrs	r3, r3, #16
 801fa6e:	f53f af23 	bmi.w	801f8b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fa72:	3a01      	subs	r2, #1
 801fa74:	4293      	cmp	r3, r2
 801fa76:	f6bf af1f 	bge.w	801f8b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fa7a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801fa7e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801fa82:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801fa86:	f1be 0f00 	cmp.w	lr, #0
 801fa8a:	dc6c      	bgt.n	801fb66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801fa8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa8e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801fa92:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801fa96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fa98:	2b00      	cmp	r3, #0
 801fa9a:	f340 810e 	ble.w	801fcba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801fa9e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801faa2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801faa6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801faaa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801faac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fab0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fab4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fab8:	eef0 6a62 	vmov.f32	s13, s5
 801fabc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fac0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fac4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fac8:	ee16 aa90 	vmov	sl, s13
 801facc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fad0:	eef0 6a43 	vmov.f32	s13, s6
 801fad4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fad8:	ee12 2a90 	vmov	r2, s5
 801fadc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fae0:	fb92 f3f3 	sdiv	r3, r2, r3
 801fae4:	ee13 2a10 	vmov	r2, s6
 801fae8:	9325      	str	r3, [sp, #148]	; 0x94
 801faea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801faec:	fb92 f3f3 	sdiv	r3, r2, r3
 801faf0:	9326      	str	r3, [sp, #152]	; 0x98
 801faf2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801faf4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801faf6:	3b01      	subs	r3, #1
 801faf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fafc:	930c      	str	r3, [sp, #48]	; 0x30
 801fafe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801fb00:	bf08      	it	eq
 801fb02:	4613      	moveq	r3, r2
 801fb04:	ee16 5a90 	vmov	r5, s13
 801fb08:	9309      	str	r3, [sp, #36]	; 0x24
 801fb0a:	eeb0 3a67 	vmov.f32	s6, s15
 801fb0e:	eef0 2a47 	vmov.f32	s5, s14
 801fb12:	e6a6      	b.n	801f862 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801fb14:	2900      	cmp	r1, #0
 801fb16:	f43f af10 	beq.w	801f93a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fb1a:	f819 3003 	ldrb.w	r3, [r9, r3]
 801fb1e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fb22:	930f      	str	r3, [sp, #60]	; 0x3c
 801fb24:	e709      	b.n	801f93a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801fb26:	f112 0901 	adds.w	r9, r2, #1
 801fb2a:	f53f af7d 	bmi.w	801fa28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fb2e:	454b      	cmp	r3, r9
 801fb30:	f6ff af7a 	blt.w	801fa28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fb34:	f11c 0901 	adds.w	r9, ip, #1
 801fb38:	f53f af76 	bmi.w	801fa28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fb3c:	45ce      	cmp	lr, r9
 801fb3e:	f6ff af73 	blt.w	801fa28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fb42:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801fb44:	9202      	str	r2, [sp, #8]
 801fb46:	b21b      	sxth	r3, r3
 801fb48:	fa0f f28e 	sxth.w	r2, lr
 801fb4c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801fb50:	e9cd c003 	strd	ip, r0, [sp, #12]
 801fb54:	9201      	str	r2, [sp, #4]
 801fb56:	9300      	str	r3, [sp, #0]
 801fb58:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fb5a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801fb5c:	4633      	mov	r3, r6
 801fb5e:	4639      	mov	r1, r7
 801fb60:	f7ff fd8e 	bl	801f680 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801fb64:	e760      	b.n	801fa28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fb66:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fb68:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801fb6a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801fb6e:	ea4f 422a 	mov.w	r2, sl, asr #16
 801fb72:	1429      	asrs	r1, r5, #16
 801fb74:	fb03 2101 	mla	r1, r3, r1, r2
 801fb78:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fb7a:	440a      	add	r2, r1
 801fb7c:	5c61      	ldrb	r1, [r4, r1]
 801fb7e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801fb82:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801fb86:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801fb8a:	f1bc 0f00 	cmp.w	ip, #0
 801fb8e:	f000 808c 	beq.w	801fcaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801fb92:	7857      	ldrb	r7, [r2, #1]
 801fb94:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801fb98:	9413      	str	r4, [sp, #76]	; 0x4c
 801fb9a:	b140      	cbz	r0, 801fbae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fb9c:	18d7      	adds	r7, r2, r3
 801fb9e:	5cd3      	ldrb	r3, [r2, r3]
 801fba0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fba4:	9310      	str	r3, [sp, #64]	; 0x40
 801fba6:	787b      	ldrb	r3, [r7, #1]
 801fba8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fbac:	9314      	str	r3, [sp, #80]	; 0x50
 801fbae:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801fbb0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fbb2:	fb1c f200 	smulbb	r2, ip, r0
 801fbb6:	041f      	lsls	r7, r3, #16
 801fbb8:	10d2      	asrs	r2, r2, #3
 801fbba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fbbe:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801fbc2:	431f      	orrs	r7, r3
 801fbc4:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801fbc8:	9317      	str	r3, [sp, #92]	; 0x5c
 801fbca:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801fbcc:	041b      	lsls	r3, r3, #16
 801fbce:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801fbd2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fbd6:	ea43 030b 	orr.w	r3, r3, fp
 801fbda:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801fbdc:	4353      	muls	r3, r2
 801fbde:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801fbe2:	fb04 3707 	mla	r7, r4, r7, r3
 801fbe6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801fbea:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801fbee:	ea43 0b01 	orr.w	fp, r3, r1
 801fbf2:	f1c0 0110 	rsb	r1, r0, #16
 801fbf6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fbf8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801fbfa:	eba1 0c0c 	sub.w	ip, r1, ip
 801fbfe:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801fc02:	fb0c 770b 	mla	r7, ip, fp, r7
 801fc06:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fc0a:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801fc0e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fc12:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801fc16:	ea4c 0c0b 	orr.w	ip, ip, fp
 801fc1a:	fb02 770c 	mla	r7, r2, ip, r7
 801fc1e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fc20:	0d79      	lsrs	r1, r7, #21
 801fc22:	097f      	lsrs	r7, r7, #5
 801fc24:	8812      	ldrh	r2, [r2, #0]
 801fc26:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fc2a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fc2e:	430f      	orrs	r7, r1
 801fc30:	b2bb      	uxth	r3, r7
 801fc32:	1211      	asrs	r1, r2, #8
 801fc34:	1218      	asrs	r0, r3, #8
 801fc36:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fc3a:	fb11 f104 	smulbb	r1, r1, r4
 801fc3e:	10d7      	asrs	r7, r2, #3
 801fc40:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fc44:	00d2      	lsls	r2, r2, #3
 801fc46:	fb00 1009 	mla	r0, r0, r9, r1
 801fc4a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801fc4e:	10d9      	asrs	r1, r3, #3
 801fc50:	b2d2      	uxtb	r2, r2
 801fc52:	00db      	lsls	r3, r3, #3
 801fc54:	fb17 f704 	smulbb	r7, r7, r4
 801fc58:	fb12 f204 	smulbb	r2, r2, r4
 801fc5c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fc60:	b2db      	uxtb	r3, r3
 801fc62:	b280      	uxth	r0, r0
 801fc64:	fb01 7109 	mla	r1, r1, r9, r7
 801fc68:	fb03 2309 	mla	r3, r3, r9, r2
 801fc6c:	b29b      	uxth	r3, r3
 801fc6e:	b289      	uxth	r1, r1
 801fc70:	1c42      	adds	r2, r0, #1
 801fc72:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fc76:	1c4f      	adds	r7, r1, #1
 801fc78:	1c5a      	adds	r2, r3, #1
 801fc7a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801fc7e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801fc82:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801fc86:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fc8a:	0949      	lsrs	r1, r1, #5
 801fc8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fc8e:	4310      	orrs	r0, r2
 801fc90:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fc94:	4308      	orrs	r0, r1
 801fc96:	f823 0b02 	strh.w	r0, [r3], #2
 801fc9a:	930e      	str	r3, [sp, #56]	; 0x38
 801fc9c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801fc9e:	449a      	add	sl, r3
 801fca0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fca2:	f10e 3eff 	add.w	lr, lr, #4294967295
 801fca6:	441d      	add	r5, r3
 801fca8:	e6ed      	b.n	801fa86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801fcaa:	2800      	cmp	r0, #0
 801fcac:	f43f af7f 	beq.w	801fbae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fcb0:	5cd3      	ldrb	r3, [r2, r3]
 801fcb2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801fcb6:	9310      	str	r3, [sp, #64]	; 0x40
 801fcb8:	e779      	b.n	801fbae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fcba:	b019      	add	sp, #100	; 0x64
 801fcbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fcc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801fcc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fcc4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801fcc8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801fccc:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801fcd0:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801fcd4:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801fcd8:	8808      	ldrh	r0, [r1, #0]
 801fcda:	fb08 470e 	mla	r7, r8, lr, r4
 801fcde:	f1b8 0f00 	cmp.w	r8, #0
 801fce2:	eb02 0907 	add.w	r9, r2, r7
 801fce6:	db67      	blt.n	801fdb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801fce8:	45c2      	cmp	sl, r8
 801fcea:	dd65      	ble.n	801fdb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801fcec:	2c00      	cmp	r4, #0
 801fcee:	db61      	blt.n	801fdb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801fcf0:	45a6      	cmp	lr, r4
 801fcf2:	dd5f      	ble.n	801fdb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801fcf4:	5dd2      	ldrb	r2, [r2, r7]
 801fcf6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801fcfa:	1c62      	adds	r2, r4, #1
 801fcfc:	d45f      	bmi.n	801fdbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fcfe:	4596      	cmp	lr, r2
 801fd00:	dd5d      	ble.n	801fdbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fd02:	2d00      	cmp	r5, #0
 801fd04:	d05b      	beq.n	801fdbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801fd06:	f899 2001 	ldrb.w	r2, [r9, #1]
 801fd0a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801fd0e:	f118 0801 	adds.w	r8, r8, #1
 801fd12:	d458      	bmi.n	801fdc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fd14:	45c2      	cmp	sl, r8
 801fd16:	dd56      	ble.n	801fdc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fd18:	2e00      	cmp	r6, #0
 801fd1a:	d054      	beq.n	801fdc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801fd1c:	2c00      	cmp	r4, #0
 801fd1e:	db50      	blt.n	801fdc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801fd20:	45a6      	cmp	lr, r4
 801fd22:	dd4e      	ble.n	801fdc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801fd24:	f819 200e 	ldrb.w	r2, [r9, lr]
 801fd28:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801fd2c:	3401      	adds	r4, #1
 801fd2e:	d407      	bmi.n	801fd40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fd30:	45a6      	cmp	lr, r4
 801fd32:	dd05      	ble.n	801fd40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fd34:	b125      	cbz	r5, 801fd40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801fd36:	44ce      	add	lr, r9
 801fd38:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801fd3c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801fd40:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801fd44:	fb15 f406 	smulbb	r4, r5, r6
 801fd48:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fd4c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801fd50:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801fd54:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801fd58:	ea43 0c0c 	orr.w	ip, r3, ip
 801fd5c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801fd60:	f1c6 0310 	rsb	r3, r6, #16
 801fd64:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801fd68:	1b5b      	subs	r3, r3, r5
 801fd6a:	ea4e 0707 	orr.w	r7, lr, r7
 801fd6e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801fd72:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801fd76:	437d      	muls	r5, r7
 801fd78:	fb03 5c0c 	mla	ip, r3, ip, r5
 801fd7c:	0403      	lsls	r3, r0, #16
 801fd7e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fd82:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fd86:	4318      	orrs	r0, r3
 801fd88:	0413      	lsls	r3, r2, #16
 801fd8a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fd8e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801fd92:	4313      	orrs	r3, r2
 801fd94:	fb04 c000 	mla	r0, r4, r0, ip
 801fd98:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801fd9c:	fb06 0003 	mla	r0, r6, r3, r0
 801fda0:	0d43      	lsrs	r3, r0, #21
 801fda2:	0940      	lsrs	r0, r0, #5
 801fda4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fda8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801fdac:	4318      	orrs	r0, r3
 801fdae:	8008      	strh	r0, [r1, #0]
 801fdb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fdb4:	4684      	mov	ip, r0
 801fdb6:	e7a0      	b.n	801fcfa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801fdb8:	4607      	mov	r7, r0
 801fdba:	4684      	mov	ip, r0
 801fdbc:	e7a7      	b.n	801fd0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801fdbe:	4607      	mov	r7, r0
 801fdc0:	e7a5      	b.n	801fd0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801fdc2:	4602      	mov	r2, r0
 801fdc4:	e7b2      	b.n	801fd2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801fdc6:	4602      	mov	r2, r0
 801fdc8:	e7ba      	b.n	801fd40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801fdca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fdca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fdce:	b093      	sub	sp, #76	; 0x4c
 801fdd0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801fdd4:	920f      	str	r2, [sp, #60]	; 0x3c
 801fdd6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fdd8:	9108      	str	r1, [sp, #32]
 801fdda:	9306      	str	r3, [sp, #24]
 801fddc:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801fde0:	9010      	str	r0, [sp, #64]	; 0x40
 801fde2:	6850      	ldr	r0, [r2, #4]
 801fde4:	6812      	ldr	r2, [r2, #0]
 801fde6:	fb00 1303 	mla	r3, r0, r3, r1
 801fdea:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801fdee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fdf0:	681b      	ldr	r3, [r3, #0]
 801fdf2:	9307      	str	r3, [sp, #28]
 801fdf4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fdf6:	685f      	ldr	r7, [r3, #4]
 801fdf8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801fdfc:	3704      	adds	r7, #4
 801fdfe:	9b08      	ldr	r3, [sp, #32]
 801fe00:	2b00      	cmp	r3, #0
 801fe02:	dc03      	bgt.n	801fe0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801fe04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fe06:	2b00      	cmp	r3, #0
 801fe08:	f340 81b2 	ble.w	8020170 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801fe0c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fe0e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fe12:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fe16:	1e48      	subs	r0, r1, #1
 801fe18:	f102 3cff 	add.w	ip, r2, #4294967295
 801fe1c:	9b06      	ldr	r3, [sp, #24]
 801fe1e:	2b00      	cmp	r3, #0
 801fe20:	f340 80a9 	ble.w	801ff76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801fe24:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fe28:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fe2c:	d406      	bmi.n	801fe3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801fe2e:	4586      	cmp	lr, r0
 801fe30:	da04      	bge.n	801fe3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801fe32:	2b00      	cmp	r3, #0
 801fe34:	db02      	blt.n	801fe3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801fe36:	4563      	cmp	r3, ip
 801fe38:	f2c0 809e 	blt.w	801ff78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fe3c:	f11e 0e01 	adds.w	lr, lr, #1
 801fe40:	f100 808f 	bmi.w	801ff62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fe44:	4571      	cmp	r1, lr
 801fe46:	f2c0 808c 	blt.w	801ff62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fe4a:	3301      	adds	r3, #1
 801fe4c:	f100 8089 	bmi.w	801ff62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fe50:	429a      	cmp	r2, r3
 801fe52:	f2c0 8086 	blt.w	801ff62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fe56:	f8dd b018 	ldr.w	fp, [sp, #24]
 801fe5a:	46c8      	mov	r8, r9
 801fe5c:	f1bb 0f00 	cmp.w	fp, #0
 801fe60:	f340 80a6 	ble.w	801ffb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801fe64:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801fe66:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fe68:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801fe6c:	689b      	ldr	r3, [r3, #8]
 801fe6e:	1422      	asrs	r2, r4, #16
 801fe70:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801fe74:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801fe78:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fe7c:	f100 80e3 	bmi.w	8020046 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801fe80:	f103 3aff 	add.w	sl, r3, #4294967295
 801fe84:	4552      	cmp	r2, sl
 801fe86:	f280 80de 	bge.w	8020046 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801fe8a:	f1bc 0f00 	cmp.w	ip, #0
 801fe8e:	f2c0 80da 	blt.w	8020046 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801fe92:	f10e 3aff 	add.w	sl, lr, #4294967295
 801fe96:	45d4      	cmp	ip, sl
 801fe98:	f280 80d5 	bge.w	8020046 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801fe9c:	b21b      	sxth	r3, r3
 801fe9e:	fb0c 2203 	mla	r2, ip, r3, r2
 801fea2:	9d07      	ldr	r5, [sp, #28]
 801fea4:	eb05 0a02 	add.w	sl, r5, r2
 801fea8:	5caa      	ldrb	r2, [r5, r2]
 801feaa:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801feae:	2800      	cmp	r0, #0
 801feb0:	f000 80c0 	beq.w	8020034 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801feb4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801feb8:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801febc:	920b      	str	r2, [sp, #44]	; 0x2c
 801febe:	b151      	cbz	r1, 801fed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801fec0:	eb0a 0203 	add.w	r2, sl, r3
 801fec4:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801fec8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801fecc:	9309      	str	r3, [sp, #36]	; 0x24
 801fece:	7853      	ldrb	r3, [r2, #1]
 801fed0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801fed4:	930c      	str	r3, [sp, #48]	; 0x30
 801fed6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fed8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801feda:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801fede:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801fee2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801fee6:	ea4c 0c03 	orr.w	ip, ip, r3
 801feea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801feec:	041b      	lsls	r3, r3, #16
 801feee:	fb10 f201 	smulbb	r2, r0, r1
 801fef2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801fef6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801fefa:	10d2      	asrs	r2, r2, #3
 801fefc:	432b      	orrs	r3, r5
 801fefe:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801ff02:	4353      	muls	r3, r2
 801ff04:	fb0a 330c 	mla	r3, sl, ip, r3
 801ff08:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ff0c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ff10:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ff14:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ff18:	f1c1 0c10 	rsb	ip, r1, #16
 801ff1c:	ebac 0c00 	sub.w	ip, ip, r0
 801ff20:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ff24:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ff28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff2a:	0418      	lsls	r0, r3, #16
 801ff2c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ff30:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ff34:	4318      	orrs	r0, r3
 801ff36:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ff3a:	fb02 c200 	mla	r2, r2, r0, ip
 801ff3e:	0d53      	lsrs	r3, r2, #21
 801ff40:	0952      	lsrs	r2, r2, #5
 801ff42:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ff46:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ff4a:	431a      	orrs	r2, r3
 801ff4c:	f8a8 2000 	strh.w	r2, [r8]
 801ff50:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ff52:	441c      	add	r4, r3
 801ff54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ff56:	f108 0802 	add.w	r8, r8, #2
 801ff5a:	441e      	add	r6, r3
 801ff5c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ff60:	e77c      	b.n	801fe5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ff62:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ff64:	441c      	add	r4, r3
 801ff66:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ff68:	441e      	add	r6, r3
 801ff6a:	9b06      	ldr	r3, [sp, #24]
 801ff6c:	3b01      	subs	r3, #1
 801ff6e:	9306      	str	r3, [sp, #24]
 801ff70:	f109 0902 	add.w	r9, r9, #2
 801ff74:	e752      	b.n	801fe1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ff76:	d020      	beq.n	801ffba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ff78:	9b06      	ldr	r3, [sp, #24]
 801ff7a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ff7c:	3b01      	subs	r3, #1
 801ff7e:	fb00 4003 	mla	r0, r0, r3, r4
 801ff82:	1400      	asrs	r0, r0, #16
 801ff84:	f53f af67 	bmi.w	801fe56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ff88:	3901      	subs	r1, #1
 801ff8a:	4288      	cmp	r0, r1
 801ff8c:	f6bf af63 	bge.w	801fe56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ff90:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ff92:	fb01 6303 	mla	r3, r1, r3, r6
 801ff96:	141b      	asrs	r3, r3, #16
 801ff98:	f53f af5d 	bmi.w	801fe56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ff9c:	3a01      	subs	r2, #1
 801ff9e:	4293      	cmp	r3, r2
 801ffa0:	f6bf af59 	bge.w	801fe56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ffa4:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801ffa8:	46ca      	mov	sl, r9
 801ffaa:	f1b8 0f00 	cmp.w	r8, #0
 801ffae:	dc67      	bgt.n	8020080 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ffb0:	9b06      	ldr	r3, [sp, #24]
 801ffb2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ffb6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ffba:	9b08      	ldr	r3, [sp, #32]
 801ffbc:	2b00      	cmp	r3, #0
 801ffbe:	f340 80d7 	ble.w	8020170 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ffc2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ffc6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ffca:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ffce:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ffd0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ffd4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ffd8:	eeb0 6a62 	vmov.f32	s12, s5
 801ffdc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ffe0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ffe4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ffe8:	ee16 4a10 	vmov	r4, s12
 801ffec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fff0:	eeb0 6a43 	vmov.f32	s12, s6
 801fff4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fff8:	ee12 2a90 	vmov	r2, s5
 801fffc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020000:	fb92 f3f3 	sdiv	r3, r2, r3
 8020004:	ee13 2a10 	vmov	r2, s6
 8020008:	931f      	str	r3, [sp, #124]	; 0x7c
 802000a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802000c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020010:	9320      	str	r3, [sp, #128]	; 0x80
 8020012:	9b08      	ldr	r3, [sp, #32]
 8020014:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020016:	3b01      	subs	r3, #1
 8020018:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802001c:	9308      	str	r3, [sp, #32]
 802001e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020020:	bf08      	it	eq
 8020022:	4613      	moveq	r3, r2
 8020024:	ee16 6a10 	vmov	r6, s12
 8020028:	9306      	str	r3, [sp, #24]
 802002a:	eeb0 3a67 	vmov.f32	s6, s15
 802002e:	eef0 2a47 	vmov.f32	s5, s14
 8020032:	e6e4      	b.n	801fdfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020034:	2900      	cmp	r1, #0
 8020036:	f43f af4e 	beq.w	801fed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802003a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 802003e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020042:	9309      	str	r3, [sp, #36]	; 0x24
 8020044:	e747      	b.n	801fed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020046:	f112 0a01 	adds.w	sl, r2, #1
 802004a:	d481      	bmi.n	801ff50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802004c:	4553      	cmp	r3, sl
 802004e:	f6ff af7f 	blt.w	801ff50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020052:	f11c 0a01 	adds.w	sl, ip, #1
 8020056:	f53f af7b 	bmi.w	801ff50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802005a:	45d6      	cmp	lr, sl
 802005c:	f6ff af78 	blt.w	801ff50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020060:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8020064:	b21b      	sxth	r3, r3
 8020066:	fa0f f28e 	sxth.w	r2, lr
 802006a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802006e:	9201      	str	r2, [sp, #4]
 8020070:	9300      	str	r3, [sp, #0]
 8020072:	9a07      	ldr	r2, [sp, #28]
 8020074:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020076:	463b      	mov	r3, r7
 8020078:	4641      	mov	r1, r8
 802007a:	f7ff fe21 	bl	801fcc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802007e:	e767      	b.n	801ff50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020080:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020082:	9d07      	ldr	r5, [sp, #28]
 8020084:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020088:	1422      	asrs	r2, r4, #16
 802008a:	1431      	asrs	r1, r6, #16
 802008c:	fb03 2101 	mla	r1, r3, r1, r2
 8020090:	9a07      	ldr	r2, [sp, #28]
 8020092:	440a      	add	r2, r1
 8020094:	5c69      	ldrb	r1, [r5, r1]
 8020096:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 802009a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802009e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80200a2:	f1be 0f00 	cmp.w	lr, #0
 80200a6:	d05c      	beq.n	8020162 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80200a8:	f892 c001 	ldrb.w	ip, [r2, #1]
 80200ac:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80200b0:	950d      	str	r5, [sp, #52]	; 0x34
 80200b2:	b150      	cbz	r0, 80200ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80200b4:	eb02 0c03 	add.w	ip, r2, r3
 80200b8:	5cd3      	ldrb	r3, [r2, r3]
 80200ba:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80200be:	930a      	str	r3, [sp, #40]	; 0x28
 80200c0:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80200c4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80200c8:	930e      	str	r3, [sp, #56]	; 0x38
 80200ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80200cc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80200ce:	fb1e f200 	smulbb	r2, lr, r0
 80200d2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80200d6:	10d2      	asrs	r2, r2, #3
 80200d8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80200dc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80200e0:	ea4c 0c03 	orr.w	ip, ip, r3
 80200e4:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80200e8:	9311      	str	r3, [sp, #68]	; 0x44
 80200ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80200ec:	041b      	lsls	r3, r3, #16
 80200ee:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80200f2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80200f6:	ea43 030b 	orr.w	r3, r3, fp
 80200fa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80200fc:	4353      	muls	r3, r2
 80200fe:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020102:	fb05 3c0c 	mla	ip, r5, ip, r3
 8020106:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802010a:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 802010e:	ea43 0b01 	orr.w	fp, r3, r1
 8020112:	f1c0 0110 	rsb	r1, r0, #16
 8020116:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020118:	eba1 0e0e 	sub.w	lr, r1, lr
 802011c:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8020120:	fb0e cc0b 	mla	ip, lr, fp, ip
 8020124:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8020128:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 802012c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020130:	ea4b 0e0e 	orr.w	lr, fp, lr
 8020134:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020138:	fb02 cc0e 	mla	ip, r2, lr, ip
 802013c:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8020140:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020144:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020148:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802014c:	ea43 0c0c 	orr.w	ip, r3, ip
 8020150:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020152:	f82a cb02 	strh.w	ip, [sl], #2
 8020156:	441c      	add	r4, r3
 8020158:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802015a:	f108 38ff 	add.w	r8, r8, #4294967295
 802015e:	441e      	add	r6, r3
 8020160:	e723      	b.n	801ffaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8020162:	2800      	cmp	r0, #0
 8020164:	d0b1      	beq.n	80200ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020166:	5cd3      	ldrb	r3, [r2, r3]
 8020168:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802016c:	930a      	str	r3, [sp, #40]	; 0x28
 802016e:	e7ac      	b.n	80200ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020170:	b013      	add	sp, #76	; 0x4c
 8020172:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020176 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8020176:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802017a:	880d      	ldrh	r5, [r1, #0]
 802017c:	b087      	sub	sp, #28
 802017e:	10ef      	asrs	r7, r5, #3
 8020180:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8020184:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020188:	00ed      	lsls	r5, r5, #3
 802018a:	9701      	str	r7, [sp, #4]
 802018c:	b2ed      	uxtb	r5, r5
 802018e:	9502      	str	r5, [sp, #8]
 8020190:	9d01      	ldr	r5, [sp, #4]
 8020192:	9103      	str	r1, [sp, #12]
 8020194:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8020198:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 802019c:	9902      	ldr	r1, [sp, #8]
 802019e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80201a2:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 80201a6:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 80201aa:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 80201ae:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 80201b2:	022d      	lsls	r5, r5, #8
 80201b4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80201b8:	fb06 0709 	mla	r7, r6, r9, r0
 80201bc:	430d      	orrs	r5, r1
 80201be:	2e00      	cmp	r6, #0
 80201c0:	eb02 0c07 	add.w	ip, r2, r7
 80201c4:	9505      	str	r5, [sp, #20]
 80201c6:	f2c0 80b6 	blt.w	8020336 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80201ca:	45b3      	cmp	fp, r6
 80201cc:	f340 80b3 	ble.w	8020336 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80201d0:	2800      	cmp	r0, #0
 80201d2:	f2c0 80ae 	blt.w	8020332 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80201d6:	4581      	cmp	r9, r0
 80201d8:	f340 80ab 	ble.w	8020332 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80201dc:	5dd7      	ldrb	r7, [r2, r7]
 80201de:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80201e2:	441f      	add	r7, r3
 80201e4:	1c42      	adds	r2, r0, #1
 80201e6:	f100 80a9 	bmi.w	802033c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80201ea:	4591      	cmp	r9, r2
 80201ec:	f340 80a6 	ble.w	802033c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80201f0:	2c00      	cmp	r4, #0
 80201f2:	f000 80a3 	beq.w	802033c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80201f6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80201fa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80201fe:	441d      	add	r5, r3
 8020200:	3601      	adds	r6, #1
 8020202:	f100 809f 	bmi.w	8020344 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020206:	45b3      	cmp	fp, r6
 8020208:	f340 809c 	ble.w	8020344 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 802020c:	f1be 0f00 	cmp.w	lr, #0
 8020210:	f000 8098 	beq.w	8020344 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020214:	2800      	cmp	r0, #0
 8020216:	f2c0 8093 	blt.w	8020340 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 802021a:	4581      	cmp	r9, r0
 802021c:	f340 8090 	ble.w	8020340 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020220:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8020224:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020228:	441e      	add	r6, r3
 802022a:	3001      	adds	r0, #1
 802022c:	f100 808d 	bmi.w	802034a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020230:	4581      	cmp	r9, r0
 8020232:	f340 808a 	ble.w	802034a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020236:	2c00      	cmp	r4, #0
 8020238:	f000 8087 	beq.w	802034a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 802023c:	44e1      	add	r9, ip
 802023e:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020242:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020246:	4413      	add	r3, r2
 8020248:	b2a4      	uxth	r4, r4
 802024a:	fa1f fe8e 	uxth.w	lr, lr
 802024e:	fb04 fb0e 	mul.w	fp, r4, lr
 8020252:	0124      	lsls	r4, r4, #4
 8020254:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8020258:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 802025c:	eba4 040b 	sub.w	r4, r4, fp
 8020260:	fa1f f08e 	uxth.w	r0, lr
 8020264:	b2a2      	uxth	r2, r4
 8020266:	78ac      	ldrb	r4, [r5, #2]
 8020268:	f897 c002 	ldrb.w	ip, [r7, #2]
 802026c:	9901      	ldr	r1, [sp, #4]
 802026e:	eba9 0900 	sub.w	r9, r9, r0
 8020272:	fa1f f989 	uxth.w	r9, r9
 8020276:	4354      	muls	r4, r2
 8020278:	fb09 440c 	mla	r4, r9, ip, r4
 802027c:	f896 c002 	ldrb.w	ip, [r6, #2]
 8020280:	fb00 440c 	mla	r4, r0, ip, r4
 8020284:	f893 c002 	ldrb.w	ip, [r3, #2]
 8020288:	fa1f fe88 	uxth.w	lr, r8
 802028c:	ea6f 0808 	mvn.w	r8, r8
 8020290:	fa5f f888 	uxtb.w	r8, r8
 8020294:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8020298:	fb1a fa08 	smulbb	sl, sl, r8
 802029c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80202a0:	fb0c ac0e 	mla	ip, ip, lr, sl
 80202a4:	f895 a001 	ldrb.w	sl, [r5, #1]
 80202a8:	787c      	ldrb	r4, [r7, #1]
 80202aa:	782d      	ldrb	r5, [r5, #0]
 80202ac:	783f      	ldrb	r7, [r7, #0]
 80202ae:	fb02 fa0a 	mul.w	sl, r2, sl
 80202b2:	fb09 aa04 	mla	sl, r9, r4, sl
 80202b6:	7874      	ldrb	r4, [r6, #1]
 80202b8:	436a      	muls	r2, r5
 80202ba:	7835      	ldrb	r5, [r6, #0]
 80202bc:	fb00 aa04 	mla	sl, r0, r4, sl
 80202c0:	fb09 2207 	mla	r2, r9, r7, r2
 80202c4:	785c      	ldrb	r4, [r3, #1]
 80202c6:	781b      	ldrb	r3, [r3, #0]
 80202c8:	fb00 2005 	mla	r0, r0, r5, r2
 80202cc:	fb0b a404 	mla	r4, fp, r4, sl
 80202d0:	fb0b 0b03 	mla	fp, fp, r3, r0
 80202d4:	9b02      	ldr	r3, [sp, #8]
 80202d6:	fb11 fa08 	smulbb	sl, r1, r8
 80202da:	fa1f fc8c 	uxth.w	ip, ip
 80202de:	fb13 f808 	smulbb	r8, r3, r8
 80202e2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80202e6:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80202ea:	fb04 a40e 	mla	r4, r4, lr, sl
 80202ee:	f10c 0301 	add.w	r3, ip, #1
 80202f2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80202f6:	fa1f fe8e 	uxth.w	lr, lr
 80202fa:	b2a4      	uxth	r4, r4
 80202fc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020300:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8020304:	f104 0a01 	add.w	sl, r4, #1
 8020308:	f10e 0c01 	add.w	ip, lr, #1
 802030c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020310:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020314:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020318:	0964      	lsrs	r4, r4, #5
 802031a:	ea4c 0c03 	orr.w	ip, ip, r3
 802031e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020322:	9b03      	ldr	r3, [sp, #12]
 8020324:	ea4c 0c04 	orr.w	ip, ip, r4
 8020328:	f8a3 c000 	strh.w	ip, [r3]
 802032c:	b007      	add	sp, #28
 802032e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020332:	af05      	add	r7, sp, #20
 8020334:	e756      	b.n	80201e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8020336:	ad05      	add	r5, sp, #20
 8020338:	462f      	mov	r7, r5
 802033a:	e761      	b.n	8020200 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 802033c:	ad05      	add	r5, sp, #20
 802033e:	e75f      	b.n	8020200 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8020340:	ae05      	add	r6, sp, #20
 8020342:	e772      	b.n	802022a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8020344:	ab05      	add	r3, sp, #20
 8020346:	461e      	mov	r6, r3
 8020348:	e77e      	b.n	8020248 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 802034a:	ab05      	add	r3, sp, #20
 802034c:	e77c      	b.n	8020248 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0802034e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802034e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020352:	b095      	sub	sp, #84	; 0x54
 8020354:	9212      	str	r2, [sp, #72]	; 0x48
 8020356:	9309      	str	r3, [sp, #36]	; 0x24
 8020358:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 802035a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 802035e:	930f      	str	r3, [sp, #60]	; 0x3c
 8020360:	910e      	str	r1, [sp, #56]	; 0x38
 8020362:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8020366:	9013      	str	r0, [sp, #76]	; 0x4c
 8020368:	6850      	ldr	r0, [r2, #4]
 802036a:	6812      	ldr	r2, [r2, #0]
 802036c:	fb00 1303 	mla	r3, r0, r3, r1
 8020370:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020374:	930a      	str	r3, [sp, #40]	; 0x28
 8020376:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020378:	681b      	ldr	r3, [r3, #0]
 802037a:	930d      	str	r3, [sp, #52]	; 0x34
 802037c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802037e:	685c      	ldr	r4, [r3, #4]
 8020380:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020382:	43db      	mvns	r3, r3
 8020384:	b2db      	uxtb	r3, r3
 8020386:	3404      	adds	r4, #4
 8020388:	930b      	str	r3, [sp, #44]	; 0x2c
 802038a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802038c:	2b00      	cmp	r3, #0
 802038e:	dc03      	bgt.n	8020398 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020390:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020392:	2b00      	cmp	r3, #0
 8020394:	f340 8255 	ble.w	8020842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8020398:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802039a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802039e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80203a2:	1e48      	subs	r0, r1, #1
 80203a4:	1e55      	subs	r5, r2, #1
 80203a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80203a8:	2b00      	cmp	r3, #0
 80203aa:	f340 80f9 	ble.w	80205a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80203ae:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80203b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80203b2:	1436      	asrs	r6, r6, #16
 80203b4:	ea4f 4323 	mov.w	r3, r3, asr #16
 80203b8:	d406      	bmi.n	80203c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80203ba:	4286      	cmp	r6, r0
 80203bc:	da04      	bge.n	80203c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80203be:	2b00      	cmp	r3, #0
 80203c0:	db02      	blt.n	80203c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80203c2:	42ab      	cmp	r3, r5
 80203c4:	f2c0 80ed 	blt.w	80205a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 80203c8:	3601      	adds	r6, #1
 80203ca:	f100 80da 	bmi.w	8020582 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80203ce:	42b1      	cmp	r1, r6
 80203d0:	f2c0 80d7 	blt.w	8020582 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80203d4:	3301      	adds	r3, #1
 80203d6:	f100 80d4 	bmi.w	8020582 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80203da:	429a      	cmp	r2, r3
 80203dc:	f2c0 80d1 	blt.w	8020582 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80203e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80203e2:	9311      	str	r3, [sp, #68]	; 0x44
 80203e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80203e6:	930c      	str	r3, [sp, #48]	; 0x30
 80203e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80203ea:	2b00      	cmp	r3, #0
 80203ec:	f340 80fa 	ble.w	80205e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80203f0:	9826      	ldr	r0, [sp, #152]	; 0x98
 80203f2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80203f4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80203f6:	68c6      	ldr	r6, [r0, #12]
 80203f8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80203fa:	141d      	asrs	r5, r3, #16
 80203fc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8020400:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020402:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8020404:	1400      	asrs	r0, r0, #16
 8020406:	f3c3 3303 	ubfx	r3, r3, #12, #4
 802040a:	6892      	ldr	r2, [r2, #8]
 802040c:	f100 813e 	bmi.w	802068c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020410:	1e57      	subs	r7, r2, #1
 8020412:	42b8      	cmp	r0, r7
 8020414:	f280 813a 	bge.w	802068c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020418:	2d00      	cmp	r5, #0
 802041a:	f2c0 8137 	blt.w	802068c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802041e:	1e77      	subs	r7, r6, #1
 8020420:	42bd      	cmp	r5, r7
 8020422:	f280 8133 	bge.w	802068c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020426:	b212      	sxth	r2, r2
 8020428:	fb05 0002 	mla	r0, r5, r2, r0
 802042c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802042e:	f815 a000 	ldrb.w	sl, [r5, r0]
 8020432:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8020436:	182e      	adds	r6, r5, r0
 8020438:	eb04 050a 	add.w	r5, r4, sl
 802043c:	2b00      	cmp	r3, #0
 802043e:	f000 8117 	beq.w	8020670 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8020442:	f896 c001 	ldrb.w	ip, [r6, #1]
 8020446:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802044a:	44a4      	add	ip, r4
 802044c:	2900      	cmp	r1, #0
 802044e:	f000 8117 	beq.w	8020680 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8020452:	18b0      	adds	r0, r6, r2
 8020454:	5cb2      	ldrb	r2, [r6, r2]
 8020456:	7840      	ldrb	r0, [r0, #1]
 8020458:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802045c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020460:	4422      	add	r2, r4
 8020462:	4420      	add	r0, r4
 8020464:	b29b      	uxth	r3, r3
 8020466:	b289      	uxth	r1, r1
 8020468:	fb03 f901 	mul.w	r9, r3, r1
 802046c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020470:	011b      	lsls	r3, r3, #4
 8020472:	b289      	uxth	r1, r1
 8020474:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8020478:	f895 b002 	ldrb.w	fp, [r5, #2]
 802047c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802047e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8020482:	f8b6 e000 	ldrh.w	lr, [r6]
 8020486:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 802048a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802048e:	eba3 0309 	sub.w	r3, r3, r9
 8020492:	b29b      	uxth	r3, r3
 8020494:	eba8 0801 	sub.w	r8, r8, r1
 8020498:	fa1f f888 	uxth.w	r8, r8
 802049c:	435f      	muls	r7, r3
 802049e:	fb08 770b 	mla	r7, r8, fp, r7
 80204a2:	f892 b002 	ldrb.w	fp, [r2, #2]
 80204a6:	9310      	str	r3, [sp, #64]	; 0x40
 80204a8:	fb01 770b 	mla	r7, r1, fp, r7
 80204ac:	f890 b002 	ldrb.w	fp, [r0, #2]
 80204b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80204b2:	fb09 770b 	mla	r7, r9, fp, r7
 80204b6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80204ba:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80204be:	fb1b fb03 	smulbb	fp, fp, r3
 80204c2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80204c6:	fb07 b706 	mla	r7, r7, r6, fp
 80204ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80204cc:	f895 b001 	ldrb.w	fp, [r5, #1]
 80204d0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80204d4:	f89c c000 	ldrb.w	ip, [ip]
 80204d8:	435d      	muls	r5, r3
 80204da:	fb08 550b 	mla	r5, r8, fp, r5
 80204de:	f892 b001 	ldrb.w	fp, [r2, #1]
 80204e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80204e4:	fb01 550b 	mla	r5, r1, fp, r5
 80204e8:	f890 b001 	ldrb.w	fp, [r0, #1]
 80204ec:	fb09 550b 	mla	r5, r9, fp, r5
 80204f0:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80204f4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80204f8:	fb1b fb03 	smulbb	fp, fp, r3
 80204fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80204fe:	fb03 f30c 	mul.w	r3, r3, ip
 8020502:	f892 c000 	ldrb.w	ip, [r2]
 8020506:	fb08 330a 	mla	r3, r8, sl, r3
 802050a:	fb01 330c 	mla	r3, r1, ip, r3
 802050e:	f890 c000 	ldrb.w	ip, [r0]
 8020512:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020516:	fb09 3c0c 	mla	ip, r9, ip, r3
 802051a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802051c:	fa5f fe8e 	uxtb.w	lr, lr
 8020520:	b2bf      	uxth	r7, r7
 8020522:	fb1e fe03 	smulbb	lr, lr, r3
 8020526:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802052a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802052e:	fb05 b506 	mla	r5, r5, r6, fp
 8020532:	1c7b      	adds	r3, r7, #1
 8020534:	fb0c e606 	mla	r6, ip, r6, lr
 8020538:	b2ad      	uxth	r5, r5
 802053a:	b2b6      	uxth	r6, r6
 802053c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8020540:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8020544:	f105 0b01 	add.w	fp, r5, #1
 8020548:	1c77      	adds	r7, r6, #1
 802054a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 802054e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8020552:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020556:	096d      	lsrs	r5, r5, #5
 8020558:	431f      	orrs	r7, r3
 802055a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802055e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020560:	433d      	orrs	r5, r7
 8020562:	801d      	strh	r5, [r3, #0]
 8020564:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020566:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020568:	3302      	adds	r3, #2
 802056a:	930c      	str	r3, [sp, #48]	; 0x30
 802056c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802056e:	4413      	add	r3, r2
 8020570:	931f      	str	r3, [sp, #124]	; 0x7c
 8020572:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020574:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020576:	4413      	add	r3, r2
 8020578:	9320      	str	r3, [sp, #128]	; 0x80
 802057a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802057c:	3b01      	subs	r3, #1
 802057e:	9311      	str	r3, [sp, #68]	; 0x44
 8020580:	e732      	b.n	80203e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020582:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020584:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8020586:	4433      	add	r3, r6
 8020588:	931f      	str	r3, [sp, #124]	; 0x7c
 802058a:	9e22      	ldr	r6, [sp, #136]	; 0x88
 802058c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802058e:	4433      	add	r3, r6
 8020590:	9320      	str	r3, [sp, #128]	; 0x80
 8020592:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020594:	3b01      	subs	r3, #1
 8020596:	9309      	str	r3, [sp, #36]	; 0x24
 8020598:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802059a:	3302      	adds	r3, #2
 802059c:	930a      	str	r3, [sp, #40]	; 0x28
 802059e:	e702      	b.n	80203a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80205a0:	d027      	beq.n	80205f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80205a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80205a4:	9821      	ldr	r0, [sp, #132]	; 0x84
 80205a6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80205a8:	3b01      	subs	r3, #1
 80205aa:	fb00 5003 	mla	r0, r0, r3, r5
 80205ae:	1400      	asrs	r0, r0, #16
 80205b0:	f53f af16 	bmi.w	80203e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80205b4:	3901      	subs	r1, #1
 80205b6:	4288      	cmp	r0, r1
 80205b8:	f6bf af12 	bge.w	80203e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80205bc:	9922      	ldr	r1, [sp, #136]	; 0x88
 80205be:	9820      	ldr	r0, [sp, #128]	; 0x80
 80205c0:	fb01 0303 	mla	r3, r1, r3, r0
 80205c4:	141b      	asrs	r3, r3, #16
 80205c6:	f53f af0b 	bmi.w	80203e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80205ca:	3a01      	subs	r2, #1
 80205cc:	4293      	cmp	r3, r2
 80205ce:	f6bf af07 	bge.w	80203e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80205d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80205d4:	9311      	str	r3, [sp, #68]	; 0x44
 80205d6:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80205da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80205dc:	930c      	str	r3, [sp, #48]	; 0x30
 80205de:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80205e0:	2b00      	cmp	r3, #0
 80205e2:	dc70      	bgt.n	80206c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80205e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80205e6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80205e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80205ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80205f0:	930a      	str	r3, [sp, #40]	; 0x28
 80205f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80205f4:	2b00      	cmp	r3, #0
 80205f6:	f340 8124 	ble.w	8020842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80205fa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80205fe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020602:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020606:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020608:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802060c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020610:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020614:	eef0 6a62 	vmov.f32	s13, s5
 8020618:	ee61 7a27 	vmul.f32	s15, s2, s15
 802061c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020620:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020624:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8020628:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802062c:	eef0 6a43 	vmov.f32	s13, s6
 8020630:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020634:	ee12 2a90 	vmov	r2, s5
 8020638:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802063c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020640:	ee13 2a10 	vmov	r2, s6
 8020644:	9321      	str	r3, [sp, #132]	; 0x84
 8020646:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8020648:	fb92 f3f3 	sdiv	r3, r2, r3
 802064c:	9322      	str	r3, [sp, #136]	; 0x88
 802064e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020650:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020652:	3b01      	subs	r3, #1
 8020654:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020658:	930e      	str	r3, [sp, #56]	; 0x38
 802065a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802065c:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8020660:	bf08      	it	eq
 8020662:	4613      	moveq	r3, r2
 8020664:	9309      	str	r3, [sp, #36]	; 0x24
 8020666:	eeb0 3a67 	vmov.f32	s6, s15
 802066a:	eef0 2a47 	vmov.f32	s5, s14
 802066e:	e68c      	b.n	802038a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020670:	b149      	cbz	r1, 8020686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8020672:	5cb2      	ldrb	r2, [r6, r2]
 8020674:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020678:	4422      	add	r2, r4
 802067a:	4628      	mov	r0, r5
 802067c:	46ac      	mov	ip, r5
 802067e:	e6f1      	b.n	8020464 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020680:	4628      	mov	r0, r5
 8020682:	462a      	mov	r2, r5
 8020684:	e6ee      	b.n	8020464 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020686:	4628      	mov	r0, r5
 8020688:	462a      	mov	r2, r5
 802068a:	e7f7      	b.n	802067c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 802068c:	1c47      	adds	r7, r0, #1
 802068e:	f53f af69 	bmi.w	8020564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020692:	42ba      	cmp	r2, r7
 8020694:	f6ff af66 	blt.w	8020564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020698:	1c6f      	adds	r7, r5, #1
 802069a:	f53f af63 	bmi.w	8020564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802069e:	42be      	cmp	r6, r7
 80206a0:	f6ff af60 	blt.w	8020564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80206a4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80206a6:	9002      	str	r0, [sp, #8]
 80206a8:	b236      	sxth	r6, r6
 80206aa:	b212      	sxth	r2, r2
 80206ac:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80206b0:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80206b4:	9200      	str	r2, [sp, #0]
 80206b6:	9601      	str	r6, [sp, #4]
 80206b8:	4623      	mov	r3, r4
 80206ba:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80206be:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80206c0:	f7ff fd59 	bl	8020176 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80206c4:	e74e      	b.n	8020564 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80206c6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80206c8:	9820      	ldr	r0, [sp, #128]	; 0x80
 80206ca:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80206cc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80206ce:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80206d2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80206d4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80206d8:	142d      	asrs	r5, r5, #16
 80206da:	1400      	asrs	r0, r0, #16
 80206dc:	fb02 5000 	mla	r0, r2, r0, r5
 80206e0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80206e2:	f815 9000 	ldrb.w	r9, [r5, r0]
 80206e6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80206ea:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80206ee:	182e      	adds	r6, r5, r0
 80206f0:	eb04 0509 	add.w	r5, r4, r9
 80206f4:	2b00      	cmp	r3, #0
 80206f6:	f000 8096 	beq.w	8020826 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80206fa:	7877      	ldrb	r7, [r6, #1]
 80206fc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020700:	4427      	add	r7, r4
 8020702:	2900      	cmp	r1, #0
 8020704:	f000 8097 	beq.w	8020836 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8020708:	18b0      	adds	r0, r6, r2
 802070a:	5cb2      	ldrb	r2, [r6, r2]
 802070c:	7840      	ldrb	r0, [r0, #1]
 802070e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020712:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020716:	4422      	add	r2, r4
 8020718:	4420      	add	r0, r4
 802071a:	b29b      	uxth	r3, r3
 802071c:	b289      	uxth	r1, r1
 802071e:	fb03 f801 	mul.w	r8, r3, r1
 8020722:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020724:	f895 b002 	ldrb.w	fp, [r5, #2]
 8020728:	f8b6 c000 	ldrh.w	ip, [r6]
 802072c:	78be      	ldrb	r6, [r7, #2]
 802072e:	f814 9009 	ldrb.w	r9, [r4, r9]
 8020732:	011b      	lsls	r3, r3, #4
 8020734:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8020738:	b289      	uxth	r1, r1
 802073a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802073e:	eba3 0308 	sub.w	r3, r3, r8
 8020742:	b29b      	uxth	r3, r3
 8020744:	ebae 0e01 	sub.w	lr, lr, r1
 8020748:	fa1f fe8e 	uxth.w	lr, lr
 802074c:	435e      	muls	r6, r3
 802074e:	fb0e 660b 	mla	r6, lr, fp, r6
 8020752:	f892 b002 	ldrb.w	fp, [r2, #2]
 8020756:	9310      	str	r3, [sp, #64]	; 0x40
 8020758:	fb01 660b 	mla	r6, r1, fp, r6
 802075c:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020760:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020762:	fb08 660b 	mla	r6, r8, fp, r6
 8020766:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 802076a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802076e:	fb1b fb03 	smulbb	fp, fp, r3
 8020772:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020776:	fb06 b60a 	mla	r6, r6, sl, fp
 802077a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802077c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020780:	787d      	ldrb	r5, [r7, #1]
 8020782:	783f      	ldrb	r7, [r7, #0]
 8020784:	435d      	muls	r5, r3
 8020786:	fb0e 550b 	mla	r5, lr, fp, r5
 802078a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802078e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020790:	fb01 550b 	mla	r5, r1, fp, r5
 8020794:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020798:	fb08 550b 	mla	r5, r8, fp, r5
 802079c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80207a0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80207a4:	fb1b fb03 	smulbb	fp, fp, r3
 80207a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80207aa:	437b      	muls	r3, r7
 80207ac:	7817      	ldrb	r7, [r2, #0]
 80207ae:	fb0e 3309 	mla	r3, lr, r9, r3
 80207b2:	fb01 3307 	mla	r3, r1, r7, r3
 80207b6:	7807      	ldrb	r7, [r0, #0]
 80207b8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80207bc:	fb08 3707 	mla	r7, r8, r7, r3
 80207c0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80207c2:	fa5f fc8c 	uxtb.w	ip, ip
 80207c6:	fb1c fc03 	smulbb	ip, ip, r3
 80207ca:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80207ce:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80207d2:	fb05 b50a 	mla	r5, r5, sl, fp
 80207d6:	fb07 c70a 	mla	r7, r7, sl, ip
 80207da:	b2b6      	uxth	r6, r6
 80207dc:	b2ad      	uxth	r5, r5
 80207de:	b2bf      	uxth	r7, r7
 80207e0:	1c73      	adds	r3, r6, #1
 80207e2:	1c7a      	adds	r2, r7, #1
 80207e4:	f105 0b01 	add.w	fp, r5, #1
 80207e8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80207ec:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80207f0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80207f4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80207f8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80207fc:	096d      	lsrs	r5, r5, #5
 80207fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020800:	4316      	orrs	r6, r2
 8020802:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020806:	432e      	orrs	r6, r5
 8020808:	f823 6b02 	strh.w	r6, [r3], #2
 802080c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802080e:	930c      	str	r3, [sp, #48]	; 0x30
 8020810:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020812:	4413      	add	r3, r2
 8020814:	931f      	str	r3, [sp, #124]	; 0x7c
 8020816:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8020818:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802081a:	4413      	add	r3, r2
 802081c:	9320      	str	r3, [sp, #128]	; 0x80
 802081e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020820:	3b01      	subs	r3, #1
 8020822:	9311      	str	r3, [sp, #68]	; 0x44
 8020824:	e6db      	b.n	80205de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8020826:	b149      	cbz	r1, 802083c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8020828:	5cb2      	ldrb	r2, [r6, r2]
 802082a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802082e:	4422      	add	r2, r4
 8020830:	4628      	mov	r0, r5
 8020832:	462f      	mov	r7, r5
 8020834:	e771      	b.n	802071a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8020836:	4628      	mov	r0, r5
 8020838:	462a      	mov	r2, r5
 802083a:	e76e      	b.n	802071a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 802083c:	4628      	mov	r0, r5
 802083e:	462a      	mov	r2, r5
 8020840:	e7f7      	b.n	8020832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020842:	b015      	add	sp, #84	; 0x54
 8020844:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020848 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8020848:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802084c:	880f      	ldrh	r7, [r1, #0]
 802084e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8020852:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8020856:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 802085a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802085e:	023c      	lsls	r4, r7, #8
 8020860:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8020864:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8020868:	017c      	lsls	r4, r7, #5
 802086a:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 802086e:	00ff      	lsls	r7, r7, #3
 8020870:	ea4b 0404 	orr.w	r4, fp, r4
 8020874:	b2ff      	uxtb	r7, r7
 8020876:	fb05 ca0e 	mla	sl, r5, lr, ip
 802087a:	4327      	orrs	r7, r4
 802087c:	2d00      	cmp	r5, #0
 802087e:	eb02 080a 	add.w	r8, r2, sl
 8020882:	9701      	str	r7, [sp, #4]
 8020884:	db7e      	blt.n	8020984 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8020886:	45a9      	cmp	r9, r5
 8020888:	dd7c      	ble.n	8020984 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 802088a:	f1bc 0f00 	cmp.w	ip, #0
 802088e:	db77      	blt.n	8020980 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020890:	45e6      	cmp	lr, ip
 8020892:	dd75      	ble.n	8020980 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8020894:	f812 700a 	ldrb.w	r7, [r2, sl]
 8020898:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802089c:	441f      	add	r7, r3
 802089e:	f11c 0201 	adds.w	r2, ip, #1
 80208a2:	d472      	bmi.n	802098a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80208a4:	4596      	cmp	lr, r2
 80208a6:	dd70      	ble.n	802098a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80208a8:	2800      	cmp	r0, #0
 80208aa:	d06e      	beq.n	802098a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80208ac:	f898 4001 	ldrb.w	r4, [r8, #1]
 80208b0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80208b4:	441c      	add	r4, r3
 80208b6:	3501      	adds	r5, #1
 80208b8:	d46b      	bmi.n	8020992 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80208ba:	45a9      	cmp	r9, r5
 80208bc:	dd69      	ble.n	8020992 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80208be:	2e00      	cmp	r6, #0
 80208c0:	d067      	beq.n	8020992 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80208c2:	f1bc 0f00 	cmp.w	ip, #0
 80208c6:	db62      	blt.n	802098e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80208c8:	45e6      	cmp	lr, ip
 80208ca:	dd60      	ble.n	802098e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80208cc:	f818 500e 	ldrb.w	r5, [r8, lr]
 80208d0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80208d4:	441d      	add	r5, r3
 80208d6:	f11c 0201 	adds.w	r2, ip, #1
 80208da:	d45d      	bmi.n	8020998 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80208dc:	4596      	cmp	lr, r2
 80208de:	dd5b      	ble.n	8020998 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80208e0:	2800      	cmp	r0, #0
 80208e2:	d059      	beq.n	8020998 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80208e4:	44c6      	add	lr, r8
 80208e6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80208ea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80208ee:	4413      	add	r3, r2
 80208f0:	b280      	uxth	r0, r0
 80208f2:	b2b2      	uxth	r2, r6
 80208f4:	fb00 f602 	mul.w	r6, r0, r2
 80208f8:	0100      	lsls	r0, r0, #4
 80208fa:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80208fe:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8020902:	1b80      	subs	r0, r0, r6
 8020904:	fa1f fc82 	uxth.w	ip, r2
 8020908:	b282      	uxth	r2, r0
 802090a:	78a0      	ldrb	r0, [r4, #2]
 802090c:	f897 e002 	ldrb.w	lr, [r7, #2]
 8020910:	f897 9000 	ldrb.w	r9, [r7]
 8020914:	787f      	ldrb	r7, [r7, #1]
 8020916:	eba8 080c 	sub.w	r8, r8, ip
 802091a:	fa1f f888 	uxth.w	r8, r8
 802091e:	4350      	muls	r0, r2
 8020920:	fb08 0e0e 	mla	lr, r8, lr, r0
 8020924:	78a8      	ldrb	r0, [r5, #2]
 8020926:	fb0c e000 	mla	r0, ip, r0, lr
 802092a:	f893 e002 	ldrb.w	lr, [r3, #2]
 802092e:	fb06 0e0e 	mla	lr, r6, lr, r0
 8020932:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8020936:	f894 e000 	ldrb.w	lr, [r4]
 802093a:	fb02 fe0e 	mul.w	lr, r2, lr
 802093e:	fb08 e909 	mla	r9, r8, r9, lr
 8020942:	f895 e000 	ldrb.w	lr, [r5]
 8020946:	fb0c 990e 	mla	r9, ip, lr, r9
 802094a:	f893 e000 	ldrb.w	lr, [r3]
 802094e:	785b      	ldrb	r3, [r3, #1]
 8020950:	fb06 9e0e 	mla	lr, r6, lr, r9
 8020954:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020958:	ea4e 0e00 	orr.w	lr, lr, r0
 802095c:	7860      	ldrb	r0, [r4, #1]
 802095e:	4350      	muls	r0, r2
 8020960:	786a      	ldrb	r2, [r5, #1]
 8020962:	fb08 0007 	mla	r0, r8, r7, r0
 8020966:	fb0c 0202 	mla	r2, ip, r2, r0
 802096a:	fb06 2303 	mla	r3, r6, r3, r2
 802096e:	095b      	lsrs	r3, r3, #5
 8020970:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020974:	ea4e 0303 	orr.w	r3, lr, r3
 8020978:	800b      	strh	r3, [r1, #0]
 802097a:	b003      	add	sp, #12
 802097c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020980:	af01      	add	r7, sp, #4
 8020982:	e78c      	b.n	802089e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8020984:	ac01      	add	r4, sp, #4
 8020986:	4627      	mov	r7, r4
 8020988:	e795      	b.n	80208b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802098a:	ac01      	add	r4, sp, #4
 802098c:	e793      	b.n	80208b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802098e:	ad01      	add	r5, sp, #4
 8020990:	e7a1      	b.n	80208d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8020992:	ab01      	add	r3, sp, #4
 8020994:	461d      	mov	r5, r3
 8020996:	e7ab      	b.n	80208f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8020998:	ab01      	add	r3, sp, #4
 802099a:	e7a9      	b.n	80208f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0802099c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802099c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80209a0:	b08f      	sub	sp, #60	; 0x3c
 80209a2:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 80209a6:	920c      	str	r2, [sp, #48]	; 0x30
 80209a8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80209aa:	910a      	str	r1, [sp, #40]	; 0x28
 80209ac:	9306      	str	r3, [sp, #24]
 80209ae:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 80209b2:	900d      	str	r0, [sp, #52]	; 0x34
 80209b4:	6850      	ldr	r0, [r2, #4]
 80209b6:	6812      	ldr	r2, [r2, #0]
 80209b8:	fb00 1303 	mla	r3, r0, r3, r1
 80209bc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80209c0:	9307      	str	r3, [sp, #28]
 80209c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80209c4:	681b      	ldr	r3, [r3, #0]
 80209c6:	9308      	str	r3, [sp, #32]
 80209c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80209ca:	685c      	ldr	r4, [r3, #4]
 80209cc:	3404      	adds	r4, #4
 80209ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80209d0:	2b00      	cmp	r3, #0
 80209d2:	dc03      	bgt.n	80209dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80209d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80209d6:	2b00      	cmp	r3, #0
 80209d8:	f340 81d6 	ble.w	8020d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80209dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80209de:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80209e2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80209e6:	1e48      	subs	r0, r1, #1
 80209e8:	1e56      	subs	r6, r2, #1
 80209ea:	9b06      	ldr	r3, [sp, #24]
 80209ec:	2b00      	cmp	r3, #0
 80209ee:	f340 80b7 	ble.w	8020b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 80209f2:	ea5f 472b 	movs.w	r7, fp, asr #16
 80209f6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80209fa:	d406      	bmi.n	8020a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80209fc:	4287      	cmp	r7, r0
 80209fe:	da04      	bge.n	8020a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020a00:	2b00      	cmp	r3, #0
 8020a02:	db02      	blt.n	8020a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020a04:	42b3      	cmp	r3, r6
 8020a06:	f2c0 80ac 	blt.w	8020b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8020a0a:	3701      	adds	r7, #1
 8020a0c:	f100 809d 	bmi.w	8020b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020a10:	42b9      	cmp	r1, r7
 8020a12:	f2c0 809a 	blt.w	8020b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020a16:	3301      	adds	r3, #1
 8020a18:	f100 8097 	bmi.w	8020b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020a1c:	429a      	cmp	r2, r3
 8020a1e:	f2c0 8094 	blt.w	8020b4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020a22:	9b06      	ldr	r3, [sp, #24]
 8020a24:	930b      	str	r3, [sp, #44]	; 0x2c
 8020a26:	9b07      	ldr	r3, [sp, #28]
 8020a28:	9309      	str	r3, [sp, #36]	; 0x24
 8020a2a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020a2c:	2b00      	cmp	r3, #0
 8020a2e:	f340 80b5 	ble.w	8020b9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020a32:	9820      	ldr	r0, [sp, #128]	; 0x80
 8020a34:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020a36:	68c7      	ldr	r7, [r0, #12]
 8020a38:	6892      	ldr	r2, [r2, #8]
 8020a3a:	ea5f 402b 	movs.w	r0, fp, asr #16
 8020a3e:	ea4f 4625 	mov.w	r6, r5, asr #16
 8020a42:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020a46:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020a4a:	f100 80fb 	bmi.w	8020c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020a4e:	f102 3cff 	add.w	ip, r2, #4294967295
 8020a52:	4560      	cmp	r0, ip
 8020a54:	f280 80f6 	bge.w	8020c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020a58:	2e00      	cmp	r6, #0
 8020a5a:	f2c0 80f3 	blt.w	8020c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020a5e:	f107 3cff 	add.w	ip, r7, #4294967295
 8020a62:	4566      	cmp	r6, ip
 8020a64:	f280 80ee 	bge.w	8020c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8020a68:	b212      	sxth	r2, r2
 8020a6a:	fb06 0002 	mla	r0, r6, r2, r0
 8020a6e:	9e08      	ldr	r6, [sp, #32]
 8020a70:	1837      	adds	r7, r6, r0
 8020a72:	5c30      	ldrb	r0, [r6, r0]
 8020a74:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8020a78:	eb04 0c08 	add.w	ip, r4, r8
 8020a7c:	2b00      	cmp	r3, #0
 8020a7e:	f000 80d3 	beq.w	8020c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8020a82:	787e      	ldrb	r6, [r7, #1]
 8020a84:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020a88:	4426      	add	r6, r4
 8020a8a:	2900      	cmp	r1, #0
 8020a8c:	f000 80d4 	beq.w	8020c38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8020a90:	18b8      	adds	r0, r7, r2
 8020a92:	5cba      	ldrb	r2, [r7, r2]
 8020a94:	7840      	ldrb	r0, [r0, #1]
 8020a96:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020a9a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020a9e:	4422      	add	r2, r4
 8020aa0:	4420      	add	r0, r4
 8020aa2:	b29b      	uxth	r3, r3
 8020aa4:	b289      	uxth	r1, r1
 8020aa6:	fb03 f901 	mul.w	r9, r3, r1
 8020aaa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020aae:	011b      	lsls	r3, r3, #4
 8020ab0:	b289      	uxth	r1, r1
 8020ab2:	78b7      	ldrb	r7, [r6, #2]
 8020ab4:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020ab8:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020abc:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020ac0:	eba3 0309 	sub.w	r3, r3, r9
 8020ac4:	b29b      	uxth	r3, r3
 8020ac6:	ebae 0e01 	sub.w	lr, lr, r1
 8020aca:	fa1f fe8e 	uxth.w	lr, lr
 8020ace:	435f      	muls	r7, r3
 8020ad0:	fb0e 770a 	mla	r7, lr, sl, r7
 8020ad4:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020ad8:	fb01 770a 	mla	r7, r1, sl, r7
 8020adc:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020ae0:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020ae4:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020ae8:	f896 8000 	ldrb.w	r8, [r6]
 8020aec:	7876      	ldrb	r6, [r6, #1]
 8020aee:	fb03 f808 	mul.w	r8, r3, r8
 8020af2:	fb0e 8807 	mla	r8, lr, r7, r8
 8020af6:	7817      	ldrb	r7, [r2, #0]
 8020af8:	fb01 8807 	mla	r8, r1, r7, r8
 8020afc:	7807      	ldrb	r7, [r0, #0]
 8020afe:	fb09 8707 	mla	r7, r9, r7, r8
 8020b02:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020b06:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020b0a:	ea47 070a 	orr.w	r7, r7, sl
 8020b0e:	4373      	muls	r3, r6
 8020b10:	f892 a001 	ldrb.w	sl, [r2, #1]
 8020b14:	fb0e 330c 	mla	r3, lr, ip, r3
 8020b18:	fb01 310a 	mla	r1, r1, sl, r3
 8020b1c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020b20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020b22:	fb09 1a0a 	mla	sl, r9, sl, r1
 8020b26:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020b2a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020b2e:	ea47 070a 	orr.w	r7, r7, sl
 8020b32:	801f      	strh	r7, [r3, #0]
 8020b34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020b36:	3302      	adds	r3, #2
 8020b38:	9309      	str	r3, [sp, #36]	; 0x24
 8020b3a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020b3c:	449b      	add	fp, r3
 8020b3e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020b40:	441d      	add	r5, r3
 8020b42:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020b44:	3b01      	subs	r3, #1
 8020b46:	930b      	str	r3, [sp, #44]	; 0x2c
 8020b48:	e76f      	b.n	8020a2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020b4a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020b4c:	449b      	add	fp, r3
 8020b4e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020b50:	441d      	add	r5, r3
 8020b52:	9b06      	ldr	r3, [sp, #24]
 8020b54:	3b01      	subs	r3, #1
 8020b56:	9306      	str	r3, [sp, #24]
 8020b58:	9b07      	ldr	r3, [sp, #28]
 8020b5a:	3302      	adds	r3, #2
 8020b5c:	9307      	str	r3, [sp, #28]
 8020b5e:	e744      	b.n	80209ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8020b60:	d023      	beq.n	8020baa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8020b62:	9b06      	ldr	r3, [sp, #24]
 8020b64:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8020b66:	3b01      	subs	r3, #1
 8020b68:	fb00 b003 	mla	r0, r0, r3, fp
 8020b6c:	1400      	asrs	r0, r0, #16
 8020b6e:	f53f af58 	bmi.w	8020a22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020b72:	3901      	subs	r1, #1
 8020b74:	4288      	cmp	r0, r1
 8020b76:	f6bf af54 	bge.w	8020a22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020b7a:	991c      	ldr	r1, [sp, #112]	; 0x70
 8020b7c:	fb01 5303 	mla	r3, r1, r3, r5
 8020b80:	141b      	asrs	r3, r3, #16
 8020b82:	f53f af4e 	bmi.w	8020a22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020b86:	3a01      	subs	r2, #1
 8020b88:	4293      	cmp	r3, r2
 8020b8a:	f6bf af4a 	bge.w	8020a22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020b8e:	9b06      	ldr	r3, [sp, #24]
 8020b90:	9309      	str	r3, [sp, #36]	; 0x24
 8020b92:	9b07      	ldr	r3, [sp, #28]
 8020b94:	930b      	str	r3, [sp, #44]	; 0x2c
 8020b96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020b98:	2b00      	cmp	r3, #0
 8020b9a:	dc70      	bgt.n	8020c7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8020b9c:	9b06      	ldr	r3, [sp, #24]
 8020b9e:	9a07      	ldr	r2, [sp, #28]
 8020ba0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020ba4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020ba8:	9307      	str	r3, [sp, #28]
 8020baa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020bac:	2b00      	cmp	r3, #0
 8020bae:	f340 80eb 	ble.w	8020d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8020bb2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020bb6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020bba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020bbe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020bc0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020bc4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020bc8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020bcc:	eef0 6a62 	vmov.f32	s13, s5
 8020bd0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020bd4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020bd8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020bdc:	ee16 ba90 	vmov	fp, s13
 8020be0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020be4:	eef0 6a43 	vmov.f32	s13, s6
 8020be8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020bec:	ee12 2a90 	vmov	r2, s5
 8020bf0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020bf4:	fb92 f3f3 	sdiv	r3, r2, r3
 8020bf8:	ee13 2a10 	vmov	r2, s6
 8020bfc:	931b      	str	r3, [sp, #108]	; 0x6c
 8020bfe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020c00:	fb92 f3f3 	sdiv	r3, r2, r3
 8020c04:	931c      	str	r3, [sp, #112]	; 0x70
 8020c06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020c08:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020c0a:	3b01      	subs	r3, #1
 8020c0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c10:	930a      	str	r3, [sp, #40]	; 0x28
 8020c12:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020c14:	bf08      	it	eq
 8020c16:	4613      	moveq	r3, r2
 8020c18:	ee16 5a90 	vmov	r5, s13
 8020c1c:	9306      	str	r3, [sp, #24]
 8020c1e:	eeb0 3a67 	vmov.f32	s6, s15
 8020c22:	eef0 2a47 	vmov.f32	s5, s14
 8020c26:	e6d2      	b.n	80209ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8020c28:	b149      	cbz	r1, 8020c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8020c2a:	5cba      	ldrb	r2, [r7, r2]
 8020c2c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020c30:	4422      	add	r2, r4
 8020c32:	4660      	mov	r0, ip
 8020c34:	4666      	mov	r6, ip
 8020c36:	e734      	b.n	8020aa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020c38:	4660      	mov	r0, ip
 8020c3a:	4662      	mov	r2, ip
 8020c3c:	e731      	b.n	8020aa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8020c3e:	4660      	mov	r0, ip
 8020c40:	4662      	mov	r2, ip
 8020c42:	e7f7      	b.n	8020c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8020c44:	f110 0c01 	adds.w	ip, r0, #1
 8020c48:	f53f af74 	bmi.w	8020b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020c4c:	4562      	cmp	r2, ip
 8020c4e:	f6ff af71 	blt.w	8020b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020c52:	f116 0c01 	adds.w	ip, r6, #1
 8020c56:	f53f af6d 	bmi.w	8020b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020c5a:	4567      	cmp	r7, ip
 8020c5c:	f6ff af6a 	blt.w	8020b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020c60:	b23f      	sxth	r7, r7
 8020c62:	b212      	sxth	r2, r2
 8020c64:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8020c68:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8020c6c:	9200      	str	r2, [sp, #0]
 8020c6e:	9701      	str	r7, [sp, #4]
 8020c70:	4623      	mov	r3, r4
 8020c72:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020c76:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020c78:	f7ff fde6 	bl	8020848 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8020c7c:	e75a      	b.n	8020b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020c7e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8020c80:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020c84:	ea4f 462b 	mov.w	r6, fp, asr #16
 8020c88:	1428      	asrs	r0, r5, #16
 8020c8a:	fb02 6000 	mla	r0, r2, r0, r6
 8020c8e:	9e08      	ldr	r6, [sp, #32]
 8020c90:	f816 8000 	ldrb.w	r8, [r6, r0]
 8020c94:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8020c98:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8020c9c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020ca0:	1837      	adds	r7, r6, r0
 8020ca2:	eb04 0c08 	add.w	ip, r4, r8
 8020ca6:	2b00      	cmp	r3, #0
 8020ca8:	d060      	beq.n	8020d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8020caa:	787e      	ldrb	r6, [r7, #1]
 8020cac:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020cb0:	4426      	add	r6, r4
 8020cb2:	2900      	cmp	r1, #0
 8020cb4:	d062      	beq.n	8020d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8020cb6:	18b8      	adds	r0, r7, r2
 8020cb8:	5cba      	ldrb	r2, [r7, r2]
 8020cba:	7840      	ldrb	r0, [r0, #1]
 8020cbc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020cc0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020cc4:	4422      	add	r2, r4
 8020cc6:	4420      	add	r0, r4
 8020cc8:	b29b      	uxth	r3, r3
 8020cca:	b289      	uxth	r1, r1
 8020ccc:	fb03 f901 	mul.w	r9, r3, r1
 8020cd0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020cd4:	011b      	lsls	r3, r3, #4
 8020cd6:	b289      	uxth	r1, r1
 8020cd8:	78b7      	ldrb	r7, [r6, #2]
 8020cda:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020cde:	f89c c001 	ldrb.w	ip, [ip, #1]
 8020ce2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8020ce6:	eba3 0309 	sub.w	r3, r3, r9
 8020cea:	b29b      	uxth	r3, r3
 8020cec:	ebae 0e01 	sub.w	lr, lr, r1
 8020cf0:	fa1f fe8e 	uxth.w	lr, lr
 8020cf4:	435f      	muls	r7, r3
 8020cf6:	fb0e 770a 	mla	r7, lr, sl, r7
 8020cfa:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020cfe:	fb01 770a 	mla	r7, r1, sl, r7
 8020d02:	f890 a002 	ldrb.w	sl, [r0, #2]
 8020d06:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020d0a:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020d0e:	f896 8000 	ldrb.w	r8, [r6]
 8020d12:	7876      	ldrb	r6, [r6, #1]
 8020d14:	fb03 f808 	mul.w	r8, r3, r8
 8020d18:	fb0e 8807 	mla	r8, lr, r7, r8
 8020d1c:	7817      	ldrb	r7, [r2, #0]
 8020d1e:	fb01 8807 	mla	r8, r1, r7, r8
 8020d22:	7807      	ldrb	r7, [r0, #0]
 8020d24:	fb09 8707 	mla	r7, r9, r7, r8
 8020d28:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020d2c:	4373      	muls	r3, r6
 8020d2e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020d32:	7856      	ldrb	r6, [r2, #1]
 8020d34:	ea47 070a 	orr.w	r7, r7, sl
 8020d38:	fb0e 330c 	mla	r3, lr, ip, r3
 8020d3c:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020d40:	fb01 3306 	mla	r3, r1, r6, r3
 8020d44:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020d48:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020d4c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020d4e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020d52:	ea47 070a 	orr.w	r7, r7, sl
 8020d56:	f823 7b02 	strh.w	r7, [r3], #2
 8020d5a:	930b      	str	r3, [sp, #44]	; 0x2c
 8020d5c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020d5e:	449b      	add	fp, r3
 8020d60:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020d62:	441d      	add	r5, r3
 8020d64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d66:	3b01      	subs	r3, #1
 8020d68:	9309      	str	r3, [sp, #36]	; 0x24
 8020d6a:	e714      	b.n	8020b96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8020d6c:	b149      	cbz	r1, 8020d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020d6e:	5cba      	ldrb	r2, [r7, r2]
 8020d70:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020d74:	4422      	add	r2, r4
 8020d76:	4660      	mov	r0, ip
 8020d78:	4666      	mov	r6, ip
 8020d7a:	e7a5      	b.n	8020cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020d7c:	4660      	mov	r0, ip
 8020d7e:	4662      	mov	r2, ip
 8020d80:	e7a2      	b.n	8020cc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020d82:	4660      	mov	r0, ip
 8020d84:	4662      	mov	r2, ip
 8020d86:	e7f7      	b.n	8020d78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8020d88:	b00f      	add	sp, #60	; 0x3c
 8020d8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020d8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8020d8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d92:	b085      	sub	sp, #20
 8020d94:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8020d98:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8020d9c:	9102      	str	r1, [sp, #8]
 8020d9e:	2c00      	cmp	r4, #0
 8020da0:	fb04 710c 	mla	r1, r4, ip, r7
 8020da4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8020da8:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8020dac:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8020db0:	eb02 0e01 	add.w	lr, r2, r1
 8020db4:	f2c0 8122 	blt.w	8020ffc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020db8:	45a0      	cmp	r8, r4
 8020dba:	f340 811f 	ble.w	8020ffc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8020dbe:	2f00      	cmp	r7, #0
 8020dc0:	f2c0 811a 	blt.w	8020ff8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020dc4:	45bc      	cmp	ip, r7
 8020dc6:	f340 8117 	ble.w	8020ff8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8020dca:	5c52      	ldrb	r2, [r2, r1]
 8020dcc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8020dd0:	1c7a      	adds	r2, r7, #1
 8020dd2:	f100 8116 	bmi.w	8021002 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020dd6:	4594      	cmp	ip, r2
 8020dd8:	f340 8113 	ble.w	8021002 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020ddc:	2e00      	cmp	r6, #0
 8020dde:	f000 8112 	beq.w	8021006 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8020de2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020de6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020dea:	3401      	adds	r4, #1
 8020dec:	f100 810f 	bmi.w	802100e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020df0:	45a0      	cmp	r8, r4
 8020df2:	f340 810c 	ble.w	802100e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020df6:	2800      	cmp	r0, #0
 8020df8:	f000 810c 	beq.w	8021014 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8020dfc:	2f00      	cmp	r7, #0
 8020dfe:	f2c0 8104 	blt.w	802100a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020e02:	45bc      	cmp	ip, r7
 8020e04:	f340 8101 	ble.w	802100a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020e08:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8020e0c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8020e10:	3701      	adds	r7, #1
 8020e12:	f100 8102 	bmi.w	802101a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020e16:	45bc      	cmp	ip, r7
 8020e18:	f340 80ff 	ble.w	802101a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020e1c:	2e00      	cmp	r6, #0
 8020e1e:	f000 80fe 	beq.w	802101e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8020e22:	44f4      	add	ip, lr
 8020e24:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8020e28:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8020e2c:	b2b6      	uxth	r6, r6
 8020e2e:	b280      	uxth	r0, r0
 8020e30:	fb00 fe06 	mul.w	lr, r0, r6
 8020e34:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020e38:	0136      	lsls	r6, r6, #4
 8020e3a:	eba6 070e 	sub.w	r7, r6, lr
 8020e3e:	b280      	uxth	r0, r0
 8020e40:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8020e44:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020e48:	b2bf      	uxth	r7, r7
 8020e4a:	1a1b      	subs	r3, r3, r0
 8020e4c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020e50:	b29b      	uxth	r3, r3
 8020e52:	fb0a f607 	mul.w	r6, sl, r7
 8020e56:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020e5a:	fb0b 6603 	mla	r6, fp, r3, r6
 8020e5e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8020e62:	fb00 6609 	mla	r6, r0, r9, r6
 8020e66:	fb0e 6608 	mla	r6, lr, r8, r6
 8020e6a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020e6e:	9600      	str	r6, [sp, #0]
 8020e70:	2e00      	cmp	r6, #0
 8020e72:	f000 80be 	beq.w	8020ff2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8020e76:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020e7a:	fb0b fc0c 	mul.w	ip, fp, ip
 8020e7e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8020e82:	fb0b f505 	mul.w	r5, fp, r5
 8020e86:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8020e8a:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8020e8e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020e92:	44dc      	add	ip, fp
 8020e94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e98:	9501      	str	r5, [sp, #4]
 8020e9a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8020e9e:	9503      	str	r5, [sp, #12]
 8020ea0:	9d01      	ldr	r5, [sp, #4]
 8020ea2:	9e02      	ldr	r6, [sp, #8]
 8020ea4:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8020ea8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020eac:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8020eb0:	fb0a fc0c 	mul.w	ip, sl, ip
 8020eb4:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8020eb8:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8020ebc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020ec0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020ec4:	4465      	add	r5, ip
 8020ec6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020eca:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8020ece:	fb09 fc0c 	mul.w	ip, r9, ip
 8020ed2:	fb09 f904 	mul.w	r9, r9, r4
 8020ed6:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8020eda:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8020ede:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8020ee2:	fb08 f404 	mul.w	r4, r8, r4
 8020ee6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020eea:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020eee:	fb08 f802 	mul.w	r8, r8, r2
 8020ef2:	fb0a fa01 	mul.w	sl, sl, r1
 8020ef6:	0a22      	lsrs	r2, r4, #8
 8020ef8:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8020efc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020f00:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8020f04:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8020f08:	4414      	add	r4, r2
 8020f0a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8020f0e:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8020f12:	0a2d      	lsrs	r5, r5, #8
 8020f14:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020f18:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020f1c:	9a03      	ldr	r2, [sp, #12]
 8020f1e:	8836      	ldrh	r6, [r6, #0]
 8020f20:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020f24:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020f28:	437d      	muls	r5, r7
 8020f2a:	4461      	add	r1, ip
 8020f2c:	0a24      	lsrs	r4, r4, #8
 8020f2e:	fb02 5503 	mla	r5, r2, r3, r5
 8020f32:	0a09      	lsrs	r1, r1, #8
 8020f34:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020f38:	fb04 540e 	mla	r4, r4, lr, r5
 8020f3c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020f40:	fb01 4100 	mla	r1, r1, r0, r4
 8020f44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f48:	0a09      	lsrs	r1, r1, #8
 8020f4a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020f4e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8020f52:	fb07 f70a 	mul.w	r7, r7, sl
 8020f56:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020f5a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8020f5e:	fb03 7101 	mla	r1, r3, r1, r7
 8020f62:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020f66:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8020f6a:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020f6e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8020f72:	fb00 e101 	mla	r1, r0, r1, lr
 8020f76:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8020f7a:	9a00      	ldr	r2, [sp, #0]
 8020f7c:	b287      	uxth	r7, r0
 8020f7e:	437a      	muls	r2, r7
 8020f80:	0a09      	lsrs	r1, r1, #8
 8020f82:	1c53      	adds	r3, r2, #1
 8020f84:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020f88:	4321      	orrs	r1, r4
 8020f8a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020f8e:	1235      	asrs	r5, r6, #8
 8020f90:	0c0a      	lsrs	r2, r1, #16
 8020f92:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8020f96:	b2db      	uxtb	r3, r3
 8020f98:	fb12 f207 	smulbb	r2, r2, r7
 8020f9c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020fa0:	fb05 2503 	mla	r5, r5, r3, r2
 8020fa4:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8020fa8:	10f2      	asrs	r2, r6, #3
 8020faa:	b2c8      	uxtb	r0, r1
 8020fac:	00f6      	lsls	r6, r6, #3
 8020fae:	fb14 f407 	smulbb	r4, r4, r7
 8020fb2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020fb6:	b2f6      	uxtb	r6, r6
 8020fb8:	fb10 f007 	smulbb	r0, r0, r7
 8020fbc:	fb02 4203 	mla	r2, r2, r3, r4
 8020fc0:	b2ad      	uxth	r5, r5
 8020fc2:	fb06 0303 	mla	r3, r6, r3, r0
 8020fc6:	b299      	uxth	r1, r3
 8020fc8:	b294      	uxth	r4, r2
 8020fca:	1c6b      	adds	r3, r5, #1
 8020fcc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020fd0:	1c62      	adds	r2, r4, #1
 8020fd2:	1c4b      	adds	r3, r1, #1
 8020fd4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020fd8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8020fdc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020fe0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020fe4:	0952      	lsrs	r2, r2, #5
 8020fe6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020fea:	432b      	orrs	r3, r5
 8020fec:	4313      	orrs	r3, r2
 8020fee:	9a02      	ldr	r2, [sp, #8]
 8020ff0:	8013      	strh	r3, [r2, #0]
 8020ff2:	b005      	add	sp, #20
 8020ff4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020ff8:	2500      	movs	r5, #0
 8020ffa:	e6e9      	b.n	8020dd0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8020ffc:	2100      	movs	r1, #0
 8020ffe:	460d      	mov	r5, r1
 8021000:	e6f3      	b.n	8020dea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021002:	2100      	movs	r1, #0
 8021004:	e6f1      	b.n	8020dea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021006:	4631      	mov	r1, r6
 8021008:	e6ef      	b.n	8020dea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802100a:	2400      	movs	r4, #0
 802100c:	e700      	b.n	8020e10 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802100e:	2200      	movs	r2, #0
 8021010:	4614      	mov	r4, r2
 8021012:	e70b      	b.n	8020e2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021014:	4602      	mov	r2, r0
 8021016:	4604      	mov	r4, r0
 8021018:	e708      	b.n	8020e2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802101a:	2200      	movs	r2, #0
 802101c:	e706      	b.n	8020e2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802101e:	4632      	mov	r2, r6
 8021020:	e704      	b.n	8020e2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08021022 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021022:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021026:	b09f      	sub	sp, #124	; 0x7c
 8021028:	921b      	str	r2, [sp, #108]	; 0x6c
 802102a:	9309      	str	r3, [sp, #36]	; 0x24
 802102c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802102e:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8021032:	931c      	str	r3, [sp, #112]	; 0x70
 8021034:	9119      	str	r1, [sp, #100]	; 0x64
 8021036:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 802103a:	901d      	str	r0, [sp, #116]	; 0x74
 802103c:	6850      	ldr	r0, [r2, #4]
 802103e:	6812      	ldr	r2, [r2, #0]
 8021040:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8021042:	fb00 1303 	mla	r3, r0, r3, r1
 8021046:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802104a:	930c      	str	r3, [sp, #48]	; 0x30
 802104c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802104e:	681b      	ldr	r3, [r3, #0]
 8021050:	9312      	str	r3, [sp, #72]	; 0x48
 8021052:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021054:	685e      	ldr	r6, [r3, #4]
 8021056:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 802105a:	930d      	str	r3, [sp, #52]	; 0x34
 802105c:	3604      	adds	r6, #4
 802105e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021060:	2b00      	cmp	r3, #0
 8021062:	dc03      	bgt.n	802106c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021064:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021066:	2b00      	cmp	r3, #0
 8021068:	f340 8388 	ble.w	802177c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802106c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802106e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021072:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021076:	1e48      	subs	r0, r1, #1
 8021078:	1e57      	subs	r7, r2, #1
 802107a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802107c:	2b00      	cmp	r3, #0
 802107e:	f340 8195 	ble.w	80213ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021082:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021084:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021088:	ea4f 4325 	mov.w	r3, r5, asr #16
 802108c:	d406      	bmi.n	802109c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802108e:	4584      	cmp	ip, r0
 8021090:	da04      	bge.n	802109c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021092:	2b00      	cmp	r3, #0
 8021094:	db02      	blt.n	802109c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021096:	42bb      	cmp	r3, r7
 8021098:	f2c0 8189 	blt.w	80213ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 802109c:	f11c 0c01 	adds.w	ip, ip, #1
 80210a0:	f100 8177 	bmi.w	8021392 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80210a4:	4561      	cmp	r1, ip
 80210a6:	f2c0 8174 	blt.w	8021392 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80210aa:	3301      	adds	r3, #1
 80210ac:	f100 8171 	bmi.w	8021392 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80210b0:	429a      	cmp	r2, r3
 80210b2:	f2c0 816e 	blt.w	8021392 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80210b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80210b8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80210ba:	931a      	str	r3, [sp, #104]	; 0x68
 80210bc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80210be:	2b00      	cmp	r3, #0
 80210c0:	f340 8193 	ble.w	80213ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80210c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80210c6:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80210ca:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80210cc:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80210d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80210d2:	141b      	asrs	r3, r3, #16
 80210d4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80210d8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80210dc:	f100 81d6 	bmi.w	802148c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80210e0:	f100 38ff 	add.w	r8, r0, #4294967295
 80210e4:	4543      	cmp	r3, r8
 80210e6:	f280 81d1 	bge.w	802148c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80210ea:	f1bc 0f00 	cmp.w	ip, #0
 80210ee:	f2c0 81cd 	blt.w	802148c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80210f2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80210f6:	45c4      	cmp	ip, r8
 80210f8:	f280 81c8 	bge.w	802148c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80210fc:	b200      	sxth	r0, r0
 80210fe:	fb0c 3300 	mla	r3, ip, r0, r3
 8021102:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021104:	eb04 0803 	add.w	r8, r4, r3
 8021108:	5ce3      	ldrb	r3, [r4, r3]
 802110a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802110e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021112:	2a00      	cmp	r2, #0
 8021114:	f000 81af 	beq.w	8021476 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021118:	f898 c001 	ldrb.w	ip, [r8, #1]
 802111c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021120:	940e      	str	r4, [sp, #56]	; 0x38
 8021122:	0e24      	lsrs	r4, r4, #24
 8021124:	9415      	str	r4, [sp, #84]	; 0x54
 8021126:	b179      	cbz	r1, 8021148 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021128:	eb08 0c00 	add.w	ip, r8, r0
 802112c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021130:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021134:	900a      	str	r0, [sp, #40]	; 0x28
 8021136:	0e00      	lsrs	r0, r0, #24
 8021138:	9013      	str	r0, [sp, #76]	; 0x4c
 802113a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 802113e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021142:	900f      	str	r0, [sp, #60]	; 0x3c
 8021144:	0e00      	lsrs	r0, r0, #24
 8021146:	9016      	str	r0, [sp, #88]	; 0x58
 8021148:	b292      	uxth	r2, r2
 802114a:	b289      	uxth	r1, r1
 802114c:	fb02 f901 	mul.w	r9, r2, r1
 8021150:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021154:	0112      	lsls	r2, r2, #4
 8021156:	eba2 0809 	sub.w	r8, r2, r9
 802115a:	b289      	uxth	r1, r1
 802115c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021160:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021162:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021164:	fa1f f888 	uxth.w	r8, r8
 8021168:	1a52      	subs	r2, r2, r1
 802116a:	b292      	uxth	r2, r2
 802116c:	fb08 f000 	mul.w	r0, r8, r0
 8021170:	fb02 000e 	mla	r0, r2, lr, r0
 8021174:	fb01 0004 	mla	r0, r1, r4, r0
 8021178:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802117a:	fb09 0004 	mla	r0, r9, r4, r0
 802117e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8021182:	2800      	cmp	r0, #0
 8021184:	f000 80fa 	beq.w	802137c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021188:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802118c:	d01b      	beq.n	80211c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802118e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021192:	fb0e fa0a 	mul.w	sl, lr, sl
 8021196:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802119a:	fb0e fe03 	mul.w	lr, lr, r3
 802119e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80211a2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80211a6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80211aa:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80211ae:	4453      	add	r3, sl
 80211b0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80211b4:	0a1b      	lsrs	r3, r3, #8
 80211b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80211ba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80211be:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80211c2:	ea43 030c 	orr.w	r3, r3, ip
 80211c6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80211c8:	2cff      	cmp	r4, #255	; 0xff
 80211ca:	d021      	beq.n	8021210 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80211cc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80211ce:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80211d2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80211d4:	fb04 fb0b 	mul.w	fp, r4, fp
 80211d8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80211da:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80211de:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80211e0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80211e4:	fb04 fa0a 	mul.w	sl, r4, sl
 80211e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80211ec:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80211f0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80211f4:	44de      	add	lr, fp
 80211f6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80211fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80211fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021202:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021206:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802120a:	ea4e 040a 	orr.w	r4, lr, sl
 802120e:	940e      	str	r4, [sp, #56]	; 0x38
 8021210:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021212:	2cff      	cmp	r4, #255	; 0xff
 8021214:	d021      	beq.n	802125a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8021216:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021218:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802121c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802121e:	fb04 fb0b 	mul.w	fp, r4, fp
 8021222:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021224:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021228:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802122a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802122e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021232:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021236:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802123a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802123e:	44de      	add	lr, fp
 8021240:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021244:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021248:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802124c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021250:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021254:	ea4e 040a 	orr.w	r4, lr, sl
 8021258:	940a      	str	r4, [sp, #40]	; 0x28
 802125a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802125c:	2cff      	cmp	r4, #255	; 0xff
 802125e:	d021      	beq.n	80212a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021260:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021262:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021266:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021268:	fb04 fb0b 	mul.w	fp, r4, fp
 802126c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802126e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021272:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021274:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021278:	fb04 fa0a 	mul.w	sl, r4, sl
 802127c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021280:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021284:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021288:	44de      	add	lr, fp
 802128a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802128e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021292:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021296:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802129a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802129e:	ea4e 040a 	orr.w	r4, lr, sl
 80212a2:	940f      	str	r4, [sp, #60]	; 0x3c
 80212a4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80212a6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80212aa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80212ac:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80212b0:	fb08 fc0c 	mul.w	ip, r8, ip
 80212b4:	fb02 cc0e 	mla	ip, r2, lr, ip
 80212b8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80212bc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80212be:	fb01 cc0e 	mla	ip, r1, lr, ip
 80212c2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80212c6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80212c8:	fb09 cc0e 	mla	ip, r9, lr, ip
 80212cc:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80212d0:	fb08 f80e 	mul.w	r8, r8, lr
 80212d4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80212d8:	fb02 8303 	mla	r3, r2, r3, r8
 80212dc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80212de:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80212e0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80212e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80212e6:	fb01 330a 	mla	r3, r1, sl, r3
 80212ea:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80212ee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80212f0:	fb09 3901 	mla	r9, r9, r1, r3
 80212f4:	4342      	muls	r2, r0
 80212f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80212fa:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80212fe:	883b      	ldrh	r3, [r7, #0]
 8021300:	1c50      	adds	r0, r2, #1
 8021302:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021306:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802130a:	ea4c 0c09 	orr.w	ip, ip, r9
 802130e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8021312:	1219      	asrs	r1, r3, #8
 8021314:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8021318:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802131c:	b2c0      	uxtb	r0, r0
 802131e:	fb12 f204 	smulbb	r2, r2, r4
 8021322:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021326:	fb01 2100 	mla	r1, r1, r0, r2
 802132a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802132e:	10da      	asrs	r2, r3, #3
 8021330:	fa5f fc8c 	uxtb.w	ip, ip
 8021334:	00db      	lsls	r3, r3, #3
 8021336:	fb1c fc04 	smulbb	ip, ip, r4
 802133a:	b2db      	uxtb	r3, r3
 802133c:	b289      	uxth	r1, r1
 802133e:	fb03 c300 	mla	r3, r3, r0, ip
 8021342:	fa1f fc83 	uxth.w	ip, r3
 8021346:	1c4b      	adds	r3, r1, #1
 8021348:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802134c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021350:	fb1e fe04 	smulbb	lr, lr, r4
 8021354:	f10c 0301 	add.w	r3, ip, #1
 8021358:	fb02 e200 	mla	r2, r2, r0, lr
 802135c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8021360:	b292      	uxth	r2, r2
 8021362:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8021366:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802136a:	430b      	orrs	r3, r1
 802136c:	1c51      	adds	r1, r2, #1
 802136e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021372:	0952      	lsrs	r2, r2, #5
 8021374:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021378:	4313      	orrs	r3, r2
 802137a:	803b      	strh	r3, [r7, #0]
 802137c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802137e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021380:	441a      	add	r2, r3
 8021382:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021384:	9229      	str	r2, [sp, #164]	; 0xa4
 8021386:	441d      	add	r5, r3
 8021388:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802138a:	3b01      	subs	r3, #1
 802138c:	3702      	adds	r7, #2
 802138e:	931a      	str	r3, [sp, #104]	; 0x68
 8021390:	e694      	b.n	80210bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021392:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021394:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021396:	441c      	add	r4, r3
 8021398:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802139a:	9429      	str	r4, [sp, #164]	; 0xa4
 802139c:	441d      	add	r5, r3
 802139e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80213a0:	3b01      	subs	r3, #1
 80213a2:	9309      	str	r3, [sp, #36]	; 0x24
 80213a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80213a6:	3302      	adds	r3, #2
 80213a8:	930c      	str	r3, [sp, #48]	; 0x30
 80213aa:	e666      	b.n	802107a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80213ac:	d024      	beq.n	80213f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80213ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80213b0:	982b      	ldr	r0, [sp, #172]	; 0xac
 80213b2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80213b4:	3b01      	subs	r3, #1
 80213b6:	fb00 4003 	mla	r0, r0, r3, r4
 80213ba:	1400      	asrs	r0, r0, #16
 80213bc:	f53f ae7b 	bmi.w	80210b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80213c0:	3901      	subs	r1, #1
 80213c2:	4288      	cmp	r0, r1
 80213c4:	f6bf ae77 	bge.w	80210b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80213c8:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80213ca:	fb01 5303 	mla	r3, r1, r3, r5
 80213ce:	141b      	asrs	r3, r3, #16
 80213d0:	f53f ae71 	bmi.w	80210b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80213d4:	3a01      	subs	r2, #1
 80213d6:	4293      	cmp	r3, r2
 80213d8:	f6bf ae6d 	bge.w	80210b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80213dc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80213e0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80213e4:	f1bb 0f00 	cmp.w	fp, #0
 80213e8:	dc70      	bgt.n	80214cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80213ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80213ec:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80213f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80213f2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80213f6:	930c      	str	r3, [sp, #48]	; 0x30
 80213f8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80213fa:	2b00      	cmp	r3, #0
 80213fc:	f340 81be 	ble.w	802177c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021400:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021404:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021408:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802140c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802140e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021412:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021416:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802141a:	eef0 6a62 	vmov.f32	s13, s5
 802141e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021422:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021426:	ee77 2a62 	vsub.f32	s5, s14, s5
 802142a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 802142e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021432:	eef0 6a43 	vmov.f32	s13, s6
 8021436:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802143a:	ee12 2a90 	vmov	r2, s5
 802143e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021442:	fb92 f3f3 	sdiv	r3, r2, r3
 8021446:	ee13 2a10 	vmov	r2, s6
 802144a:	932b      	str	r3, [sp, #172]	; 0xac
 802144c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802144e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021452:	932c      	str	r3, [sp, #176]	; 0xb0
 8021454:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021456:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8021458:	3b01      	subs	r3, #1
 802145a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802145e:	9319      	str	r3, [sp, #100]	; 0x64
 8021460:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021462:	bf08      	it	eq
 8021464:	4613      	moveq	r3, r2
 8021466:	ee16 5a90 	vmov	r5, s13
 802146a:	9309      	str	r3, [sp, #36]	; 0x24
 802146c:	eeb0 3a67 	vmov.f32	s6, s15
 8021470:	eef0 2a47 	vmov.f32	s5, s14
 8021474:	e5f3      	b.n	802105e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021476:	2900      	cmp	r1, #0
 8021478:	f43f ae66 	beq.w	8021148 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802147c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021480:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021484:	900a      	str	r0, [sp, #40]	; 0x28
 8021486:	0e00      	lsrs	r0, r0, #24
 8021488:	9013      	str	r0, [sp, #76]	; 0x4c
 802148a:	e65d      	b.n	8021148 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802148c:	f113 0801 	adds.w	r8, r3, #1
 8021490:	f53f af74 	bmi.w	802137c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021494:	4540      	cmp	r0, r8
 8021496:	f6ff af71 	blt.w	802137c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802149a:	f11c 0801 	adds.w	r8, ip, #1
 802149e:	f53f af6d 	bmi.w	802137c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80214a2:	45c6      	cmp	lr, r8
 80214a4:	f6ff af6a 	blt.w	802137c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80214a8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80214aa:	9302      	str	r3, [sp, #8]
 80214ac:	b200      	sxth	r0, r0
 80214ae:	fa0f f38e 	sxth.w	r3, lr
 80214b2:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80214b6:	e9cd c203 	strd	ip, r2, [sp, #12]
 80214ba:	9301      	str	r3, [sp, #4]
 80214bc:	9000      	str	r0, [sp, #0]
 80214be:	4633      	mov	r3, r6
 80214c0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80214c2:	981d      	ldr	r0, [sp, #116]	; 0x74
 80214c4:	4639      	mov	r1, r7
 80214c6:	f7ff fc62 	bl	8020d8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80214ca:	e757      	b.n	802137c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80214cc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80214ce:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80214d0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80214d4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80214d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80214da:	1427      	asrs	r7, r4, #16
 80214dc:	142b      	asrs	r3, r5, #16
 80214de:	fb01 7303 	mla	r3, r1, r3, r7
 80214e2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80214e4:	18e7      	adds	r7, r4, r3
 80214e6:	5ce3      	ldrb	r3, [r4, r3]
 80214e8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80214ec:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80214f0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80214f4:	2a00      	cmp	r2, #0
 80214f6:	f000 8137 	beq.w	8021768 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80214fa:	f897 e001 	ldrb.w	lr, [r7, #1]
 80214fe:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8021502:	9410      	str	r4, [sp, #64]	; 0x40
 8021504:	0e24      	lsrs	r4, r4, #24
 8021506:	9417      	str	r4, [sp, #92]	; 0x5c
 8021508:	b170      	cbz	r0, 8021528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802150a:	eb07 0e01 	add.w	lr, r7, r1
 802150e:	5c79      	ldrb	r1, [r7, r1]
 8021510:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021514:	910b      	str	r1, [sp, #44]	; 0x2c
 8021516:	0e09      	lsrs	r1, r1, #24
 8021518:	9114      	str	r1, [sp, #80]	; 0x50
 802151a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802151e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021522:	9111      	str	r1, [sp, #68]	; 0x44
 8021524:	0e09      	lsrs	r1, r1, #24
 8021526:	9118      	str	r1, [sp, #96]	; 0x60
 8021528:	b292      	uxth	r2, r2
 802152a:	b280      	uxth	r0, r0
 802152c:	fb02 f800 	mul.w	r8, r2, r0
 8021530:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021534:	0112      	lsls	r2, r2, #4
 8021536:	eba2 0e08 	sub.w	lr, r2, r8
 802153a:	b280      	uxth	r0, r0
 802153c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021540:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8021542:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021544:	fa1f fe8e 	uxth.w	lr, lr
 8021548:	1a12      	subs	r2, r2, r0
 802154a:	b292      	uxth	r2, r2
 802154c:	fb0e f101 	mul.w	r1, lr, r1
 8021550:	fb02 110c 	mla	r1, r2, ip, r1
 8021554:	fb00 1104 	mla	r1, r0, r4, r1
 8021558:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802155a:	fb08 1104 	mla	r1, r8, r4, r1
 802155e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021562:	2900      	cmp	r1, #0
 8021564:	f000 80f5 	beq.w	8021752 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8021568:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802156c:	d019      	beq.n	80215a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802156e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021572:	fb0c fa0a 	mul.w	sl, ip, sl
 8021576:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802157a:	fb0c fc03 	mul.w	ip, ip, r3
 802157e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021582:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021586:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802158a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802158e:	4453      	add	r3, sl
 8021590:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021594:	0a1b      	lsrs	r3, r3, #8
 8021596:	0a3f      	lsrs	r7, r7, #8
 8021598:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802159c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80215a0:	433b      	orrs	r3, r7
 80215a2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80215a4:	2cff      	cmp	r4, #255	; 0xff
 80215a6:	d020      	beq.n	80215ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80215a8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80215aa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80215ae:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80215b0:	4367      	muls	r7, r4
 80215b2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80215b4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80215b8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80215ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80215be:	fb04 fa0a 	mul.w	sl, r4, sl
 80215c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80215c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80215ca:	44bc      	add	ip, r7
 80215cc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80215d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80215d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80215d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80215dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80215e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80215e4:	ea4c 040a 	orr.w	r4, ip, sl
 80215e8:	9410      	str	r4, [sp, #64]	; 0x40
 80215ea:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80215ec:	2cff      	cmp	r4, #255	; 0xff
 80215ee:	d020      	beq.n	8021632 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80215f0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80215f2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80215f6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80215f8:	4367      	muls	r7, r4
 80215fa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80215fc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021600:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021602:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021606:	fb04 fa0a 	mul.w	sl, r4, sl
 802160a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802160e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021612:	44bc      	add	ip, r7
 8021614:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021618:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802161c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021620:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021624:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021628:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802162c:	ea4c 040a 	orr.w	r4, ip, sl
 8021630:	940b      	str	r4, [sp, #44]	; 0x2c
 8021632:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021634:	2cff      	cmp	r4, #255	; 0xff
 8021636:	d020      	beq.n	802167a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8021638:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802163a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802163e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8021640:	4367      	muls	r7, r4
 8021642:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021644:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021648:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802164a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802164e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021652:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021656:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802165a:	44bc      	add	ip, r7
 802165c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021660:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021664:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021668:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802166c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021670:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021674:	ea4c 040a 	orr.w	r4, ip, sl
 8021678:	9411      	str	r4, [sp, #68]	; 0x44
 802167a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802167c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021680:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021682:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8021686:	fb0e f707 	mul.w	r7, lr, r7
 802168a:	fb02 770c 	mla	r7, r2, ip, r7
 802168e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021692:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021694:	fb00 770c 	mla	r7, r0, ip, r7
 8021698:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802169c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802169e:	fb08 770c 	mla	r7, r8, ip, r7
 80216a2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80216a6:	fb0e fe0c 	mul.w	lr, lr, ip
 80216aa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80216ae:	fb02 e303 	mla	r3, r2, r3, lr
 80216b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80216b4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80216b6:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80216ba:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80216bc:	fb00 330a 	mla	r3, r0, sl, r3
 80216c0:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80216c4:	fb08 3c0c 	mla	ip, r8, ip, r3
 80216c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80216ca:	f8b9 0000 	ldrh.w	r0, [r9]
 80216ce:	434b      	muls	r3, r1
 80216d0:	0a3f      	lsrs	r7, r7, #8
 80216d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80216d6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80216da:	1c59      	adds	r1, r3, #1
 80216dc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80216e0:	ea47 070c 	orr.w	r7, r7, ip
 80216e4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80216e8:	1202      	asrs	r2, r0, #8
 80216ea:	0c3b      	lsrs	r3, r7, #16
 80216ec:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80216f0:	b2c9      	uxtb	r1, r1
 80216f2:	fb13 f304 	smulbb	r3, r3, r4
 80216f6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80216fa:	fb02 3201 	mla	r2, r2, r1, r3
 80216fe:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8021702:	10c3      	asrs	r3, r0, #3
 8021704:	b2ff      	uxtb	r7, r7
 8021706:	00c0      	lsls	r0, r0, #3
 8021708:	b292      	uxth	r2, r2
 802170a:	fb1c fc04 	smulbb	ip, ip, r4
 802170e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021712:	b2c0      	uxtb	r0, r0
 8021714:	fb17 f704 	smulbb	r7, r7, r4
 8021718:	fb03 c301 	mla	r3, r3, r1, ip
 802171c:	fb00 7001 	mla	r0, r0, r1, r7
 8021720:	f102 0c01 	add.w	ip, r2, #1
 8021724:	b280      	uxth	r0, r0
 8021726:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802172a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 802172e:	1c42      	adds	r2, r0, #1
 8021730:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8021734:	b29b      	uxth	r3, r3
 8021736:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802173a:	ea42 020c 	orr.w	r2, r2, ip
 802173e:	f103 0c01 	add.w	ip, r3, #1
 8021742:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8021746:	095b      	lsrs	r3, r3, #5
 8021748:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802174c:	431a      	orrs	r2, r3
 802174e:	f8a9 2000 	strh.w	r2, [r9]
 8021752:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8021754:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021756:	441a      	add	r2, r3
 8021758:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802175a:	9229      	str	r2, [sp, #164]	; 0xa4
 802175c:	f109 0902 	add.w	r9, r9, #2
 8021760:	441d      	add	r5, r3
 8021762:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021766:	e63d      	b.n	80213e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8021768:	2800      	cmp	r0, #0
 802176a:	f43f aedd 	beq.w	8021528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802176e:	5c79      	ldrb	r1, [r7, r1]
 8021770:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021774:	910b      	str	r1, [sp, #44]	; 0x2c
 8021776:	0e09      	lsrs	r1, r1, #24
 8021778:	9114      	str	r1, [sp, #80]	; 0x50
 802177a:	e6d5      	b.n	8021528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802177c:	b01f      	add	sp, #124	; 0x7c
 802177e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021782 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8021782:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021786:	b089      	sub	sp, #36	; 0x24
 8021788:	9101      	str	r1, [sp, #4]
 802178a:	9801      	ldr	r0, [sp, #4]
 802178c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8021790:	8800      	ldrh	r0, [r0, #0]
 8021792:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8021796:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 802179a:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802179e:	1206      	asrs	r6, r0, #8
 80217a0:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 80217a4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80217a8:	9602      	str	r6, [sp, #8]
 80217aa:	10c6      	asrs	r6, r0, #3
 80217ac:	00c0      	lsls	r0, r0, #3
 80217ae:	b2c0      	uxtb	r0, r0
 80217b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80217b4:	9004      	str	r0, [sp, #16]
 80217b6:	2f00      	cmp	r7, #0
 80217b8:	fb07 100c 	mla	r0, r7, ip, r1
 80217bc:	9603      	str	r6, [sp, #12]
 80217be:	eb02 0e00 	add.w	lr, r2, r0
 80217c2:	f2c0 810a 	blt.w	80219da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80217c6:	45b8      	cmp	r8, r7
 80217c8:	f340 8107 	ble.w	80219da <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80217cc:	2900      	cmp	r1, #0
 80217ce:	f2c0 8102 	blt.w	80219d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80217d2:	458c      	cmp	ip, r1
 80217d4:	f340 80ff 	ble.w	80219d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80217d8:	5c12      	ldrb	r2, [r2, r0]
 80217da:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80217de:	1c4a      	adds	r2, r1, #1
 80217e0:	f100 80fe 	bmi.w	80219e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80217e4:	4594      	cmp	ip, r2
 80217e6:	f340 80fb 	ble.w	80219e0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80217ea:	2d00      	cmp	r5, #0
 80217ec:	f000 80fa 	beq.w	80219e4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80217f0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80217f4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80217f8:	3701      	adds	r7, #1
 80217fa:	f100 80f7 	bmi.w	80219ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80217fe:	45b8      	cmp	r8, r7
 8021800:	f340 80f4 	ble.w	80219ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8021804:	2c00      	cmp	r4, #0
 8021806:	f000 80f4 	beq.w	80219f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 802180a:	2900      	cmp	r1, #0
 802180c:	eb0e 020c 	add.w	r2, lr, ip
 8021810:	f2c0 80ea 	blt.w	80219e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8021814:	458c      	cmp	ip, r1
 8021816:	f340 80e7 	ble.w	80219e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 802181a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 802181e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8021822:	3101      	adds	r1, #1
 8021824:	f100 80e8 	bmi.w	80219f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8021828:	458c      	cmp	ip, r1
 802182a:	f340 80e5 	ble.w	80219f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 802182e:	2d00      	cmp	r5, #0
 8021830:	f000 80e4 	beq.w	80219fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8021834:	7852      	ldrb	r2, [r2, #1]
 8021836:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802183a:	0e0b      	lsrs	r3, r1, #24
 802183c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8021840:	9300      	str	r3, [sp, #0]
 8021842:	b2a4      	uxth	r4, r4
 8021844:	b2ab      	uxth	r3, r5
 8021846:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 802184a:	fb03 f904 	mul.w	r9, r3, r4
 802184e:	fb0a f505 	mul.w	r5, sl, r5
 8021852:	011b      	lsls	r3, r3, #4
 8021854:	eba3 0e09 	sub.w	lr, r3, r9
 8021858:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 802185c:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8021860:	0a28      	lsrs	r0, r5, #8
 8021862:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8021866:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 802186a:	4405      	add	r5, r0
 802186c:	0a2d      	lsrs	r5, r5, #8
 802186e:	fb0a f303 	mul.w	r3, sl, r3
 8021872:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8021876:	9005      	str	r0, [sp, #20]
 8021878:	f503 7080 	add.w	r0, r3, #256	; 0x100
 802187c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021880:	0a1b      	lsrs	r3, r3, #8
 8021882:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8021886:	9306      	str	r3, [sp, #24]
 8021888:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 802188c:	fb0b f303 	mul.w	r3, fp, r3
 8021890:	0a1d      	lsrs	r5, r3, #8
 8021892:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021896:	ea4f 6817 	mov.w	r8, r7, lsr #24
 802189a:	fb0b f606 	mul.w	r6, fp, r6
 802189e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80218a2:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80218a6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80218aa:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80218ae:	fb08 f707 	mul.w	r7, r8, r7
 80218b2:	441d      	add	r5, r3
 80218b4:	f506 7380 	add.w	r3, r6, #256	; 0x100
 80218b8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80218bc:	f507 7380 	add.w	r3, r7, #256	; 0x100
 80218c0:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80218c4:	fb08 fc0c 	mul.w	ip, r8, ip
 80218c8:	0a1b      	lsrs	r3, r3, #8
 80218ca:	9307      	str	r3, [sp, #28]
 80218cc:	ea4f 201c 	mov.w	r0, ip, lsr #8
 80218d0:	0e0b      	lsrs	r3, r1, #24
 80218d2:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 80218d6:	435f      	muls	r7, r3
 80218d8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80218dc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80218e0:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80218e4:	4460      	add	r0, ip
 80218e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80218ea:	b2a4      	uxth	r4, r4
 80218ec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80218f0:	0a2d      	lsrs	r5, r5, #8
 80218f2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80218f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80218fa:	fa1f fe8e 	uxth.w	lr, lr
 80218fe:	4359      	muls	r1, r3
 8021900:	1b12      	subs	r2, r2, r4
 8021902:	9b05      	ldr	r3, [sp, #20]
 8021904:	44bc      	add	ip, r7
 8021906:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802190a:	b292      	uxth	r2, r2
 802190c:	fb05 f50e 	mul.w	r5, r5, lr
 8021910:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021914:	fb03 5502 	mla	r5, r3, r2, r5
 8021918:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802191c:	9b06      	ldr	r3, [sp, #24]
 802191e:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8021922:	0a36      	lsrs	r6, r6, #8
 8021924:	0a00      	lsrs	r0, r0, #8
 8021926:	fb0c 5509 	mla	r5, ip, r9, r5
 802192a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802192e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8021932:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8021936:	fb00 5504 	mla	r5, r0, r4, r5
 802193a:	fb0e f606 	mul.w	r6, lr, r6
 802193e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8021942:	0a09      	lsrs	r1, r1, #8
 8021944:	9b07      	ldr	r3, [sp, #28]
 8021946:	fb02 6000 	mla	r0, r2, r0, r6
 802194a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802194e:	fb09 0001 	mla	r0, r9, r1, r0
 8021952:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021956:	fb0e fe0b 	mul.w	lr, lr, fp
 802195a:	fb04 0003 	mla	r0, r4, r3, r0
 802195e:	fb02 e20a 	mla	r2, r2, sl, lr
 8021962:	9b00      	ldr	r3, [sp, #0]
 8021964:	fb04 2408 	mla	r4, r4, r8, r2
 8021968:	fb09 4903 	mla	r9, r9, r3, r4
 802196c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8021970:	9b02      	ldr	r3, [sp, #8]
 8021972:	9a04      	ldr	r2, [sp, #16]
 8021974:	fa5f f989 	uxtb.w	r9, r9
 8021978:	fb03 f109 	mul.w	r1, r3, r9
 802197c:	9b03      	ldr	r3, [sp, #12]
 802197e:	0a2d      	lsrs	r5, r5, #8
 8021980:	0a00      	lsrs	r0, r0, #8
 8021982:	fb03 f309 	mul.w	r3, r3, r9
 8021986:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802198a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802198e:	4305      	orrs	r5, r0
 8021990:	fb02 f909 	mul.w	r9, r2, r9
 8021994:	1c58      	adds	r0, r3, #1
 8021996:	1c4a      	adds	r2, r1, #1
 8021998:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802199c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80219a0:	0a2b      	lsrs	r3, r5, #8
 80219a2:	0c2a      	lsrs	r2, r5, #16
 80219a4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80219a8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80219ac:	00db      	lsls	r3, r3, #3
 80219ae:	0212      	lsls	r2, r2, #8
 80219b0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80219b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80219b8:	4313      	orrs	r3, r2
 80219ba:	f109 0201 	add.w	r2, r9, #1
 80219be:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80219c2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80219c6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80219ca:	431d      	orrs	r5, r3
 80219cc:	9b01      	ldr	r3, [sp, #4]
 80219ce:	801d      	strh	r5, [r3, #0]
 80219d0:	b009      	add	sp, #36	; 0x24
 80219d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80219d6:	2000      	movs	r0, #0
 80219d8:	e701      	b.n	80217de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 80219da:	2600      	movs	r6, #0
 80219dc:	4630      	mov	r0, r6
 80219de:	e70b      	b.n	80217f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80219e0:	2600      	movs	r6, #0
 80219e2:	e709      	b.n	80217f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80219e4:	462e      	mov	r6, r5
 80219e6:	e707      	b.n	80217f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80219e8:	2700      	movs	r7, #0
 80219ea:	e71a      	b.n	8021822 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 80219ec:	2100      	movs	r1, #0
 80219ee:	460f      	mov	r7, r1
 80219f0:	e723      	b.n	802183a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80219f2:	4621      	mov	r1, r4
 80219f4:	4627      	mov	r7, r4
 80219f6:	e720      	b.n	802183a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80219f8:	2100      	movs	r1, #0
 80219fa:	e71e      	b.n	802183a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80219fc:	4629      	mov	r1, r5
 80219fe:	e71c      	b.n	802183a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08021a00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021a00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a04:	b09b      	sub	sp, #108	; 0x6c
 8021a06:	9218      	str	r2, [sp, #96]	; 0x60
 8021a08:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8021a0a:	9116      	str	r1, [sp, #88]	; 0x58
 8021a0c:	9307      	str	r3, [sp, #28]
 8021a0e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8021a12:	9019      	str	r0, [sp, #100]	; 0x64
 8021a14:	6850      	ldr	r0, [r2, #4]
 8021a16:	6812      	ldr	r2, [r2, #0]
 8021a18:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8021a1a:	fb00 1303 	mla	r3, r0, r3, r1
 8021a1e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021a22:	930a      	str	r3, [sp, #40]	; 0x28
 8021a24:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021a26:	681b      	ldr	r3, [r3, #0]
 8021a28:	930f      	str	r3, [sp, #60]	; 0x3c
 8021a2a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021a2c:	685e      	ldr	r6, [r3, #4]
 8021a2e:	3604      	adds	r6, #4
 8021a30:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021a32:	2b00      	cmp	r3, #0
 8021a34:	dc03      	bgt.n	8021a3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8021a36:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021a38:	2b00      	cmp	r3, #0
 8021a3a:	f340 8373 	ble.w	8022124 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021a3e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021a40:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021a44:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021a48:	1e48      	subs	r0, r1, #1
 8021a4a:	1e57      	subs	r7, r2, #1
 8021a4c:	9b07      	ldr	r3, [sp, #28]
 8021a4e:	2b00      	cmp	r3, #0
 8021a50:	f340 8190 	ble.w	8021d74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8021a54:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021a56:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021a5a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021a5e:	d406      	bmi.n	8021a6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021a60:	4584      	cmp	ip, r0
 8021a62:	da04      	bge.n	8021a6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021a64:	2b00      	cmp	r3, #0
 8021a66:	db02      	blt.n	8021a6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021a68:	42bb      	cmp	r3, r7
 8021a6a:	f2c0 8184 	blt.w	8021d76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8021a6e:	f11c 0c01 	adds.w	ip, ip, #1
 8021a72:	f100 8172 	bmi.w	8021d5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021a76:	4561      	cmp	r1, ip
 8021a78:	f2c0 816f 	blt.w	8021d5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021a7c:	3301      	adds	r3, #1
 8021a7e:	f100 816c 	bmi.w	8021d5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021a82:	429a      	cmp	r2, r3
 8021a84:	f2c0 8169 	blt.w	8021d5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021a88:	9b07      	ldr	r3, [sp, #28]
 8021a8a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8021a8c:	9317      	str	r3, [sp, #92]	; 0x5c
 8021a8e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021a90:	2b00      	cmp	r3, #0
 8021a92:	f340 818e 	ble.w	8021db2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8021a96:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021a98:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021a9c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021a9e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8021aa2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021aa4:	141b      	asrs	r3, r3, #16
 8021aa6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021aaa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021aae:	f100 81d1 	bmi.w	8021e54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021ab2:	f101 38ff 	add.w	r8, r1, #4294967295
 8021ab6:	4543      	cmp	r3, r8
 8021ab8:	f280 81cc 	bge.w	8021e54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021abc:	f1bc 0f00 	cmp.w	ip, #0
 8021ac0:	f2c0 81c8 	blt.w	8021e54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021ac4:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021ac8:	45c4      	cmp	ip, r8
 8021aca:	f280 81c3 	bge.w	8021e54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021ace:	b209      	sxth	r1, r1
 8021ad0:	fb0c 3301 	mla	r3, ip, r1, r3
 8021ad4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021ad6:	eb04 0803 	add.w	r8, r4, r3
 8021ada:	5ce3      	ldrb	r3, [r4, r3]
 8021adc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021ae0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021ae4:	2a00      	cmp	r2, #0
 8021ae6:	f000 81aa 	beq.w	8021e3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8021aea:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021aee:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021af2:	940b      	str	r4, [sp, #44]	; 0x2c
 8021af4:	0e24      	lsrs	r4, r4, #24
 8021af6:	9412      	str	r4, [sp, #72]	; 0x48
 8021af8:	b178      	cbz	r0, 8021b1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021afa:	eb08 0c01 	add.w	ip, r8, r1
 8021afe:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021b02:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021b06:	9108      	str	r1, [sp, #32]
 8021b08:	0e09      	lsrs	r1, r1, #24
 8021b0a:	9110      	str	r1, [sp, #64]	; 0x40
 8021b0c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8021b10:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021b14:	910c      	str	r1, [sp, #48]	; 0x30
 8021b16:	0e09      	lsrs	r1, r1, #24
 8021b18:	9113      	str	r1, [sp, #76]	; 0x4c
 8021b1a:	b292      	uxth	r2, r2
 8021b1c:	b280      	uxth	r0, r0
 8021b1e:	fb02 f900 	mul.w	r9, r2, r0
 8021b22:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021b26:	0112      	lsls	r2, r2, #4
 8021b28:	eba2 0809 	sub.w	r8, r2, r9
 8021b2c:	b280      	uxth	r0, r0
 8021b2e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021b32:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021b34:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021b36:	fa1f f888 	uxth.w	r8, r8
 8021b3a:	1a12      	subs	r2, r2, r0
 8021b3c:	b292      	uxth	r2, r2
 8021b3e:	fb08 f101 	mul.w	r1, r8, r1
 8021b42:	fb02 110e 	mla	r1, r2, lr, r1
 8021b46:	fb00 1104 	mla	r1, r0, r4, r1
 8021b4a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021b4c:	fb09 1104 	mla	r1, r9, r4, r1
 8021b50:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021b54:	2900      	cmp	r1, #0
 8021b56:	f000 80f5 	beq.w	8021d44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021b5a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021b5e:	d01b      	beq.n	8021b98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021b60:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021b64:	fb0e fa0a 	mul.w	sl, lr, sl
 8021b68:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021b6c:	fb0e fe03 	mul.w	lr, lr, r3
 8021b70:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021b74:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021b78:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021b7c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021b80:	4453      	add	r3, sl
 8021b82:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021b86:	0a1b      	lsrs	r3, r3, #8
 8021b88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b8c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021b90:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021b94:	ea43 030c 	orr.w	r3, r3, ip
 8021b98:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021b9a:	2cff      	cmp	r4, #255	; 0xff
 8021b9c:	d021      	beq.n	8021be2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8021b9e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021ba0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021ba4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021ba6:	fb04 fb0b 	mul.w	fp, r4, fp
 8021baa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021bac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021bb0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021bb2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021bb6:	fb04 fa0a 	mul.w	sl, r4, sl
 8021bba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021bbe:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021bc2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021bc6:	44de      	add	lr, fp
 8021bc8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021bcc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021bd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021bd4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021bd8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021bdc:	ea4e 040a 	orr.w	r4, lr, sl
 8021be0:	940b      	str	r4, [sp, #44]	; 0x2c
 8021be2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021be4:	2cff      	cmp	r4, #255	; 0xff
 8021be6:	d021      	beq.n	8021c2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8021be8:	9c08      	ldr	r4, [sp, #32]
 8021bea:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021bee:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021bf0:	fb04 fb0b 	mul.w	fp, r4, fp
 8021bf4:	9c08      	ldr	r4, [sp, #32]
 8021bf6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021bfa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021bfc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021c00:	fb04 fa0a 	mul.w	sl, r4, sl
 8021c04:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021c08:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021c0c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021c10:	44de      	add	lr, fp
 8021c12:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021c16:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021c1a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021c1e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021c22:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021c26:	ea4e 040a 	orr.w	r4, lr, sl
 8021c2a:	9408      	str	r4, [sp, #32]
 8021c2c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021c2e:	2cff      	cmp	r4, #255	; 0xff
 8021c30:	d021      	beq.n	8021c76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021c32:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021c34:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021c38:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021c3a:	fb04 fb0b 	mul.w	fp, r4, fp
 8021c3e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021c40:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021c44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021c46:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021c4a:	fb04 fa0a 	mul.w	sl, r4, sl
 8021c4e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021c52:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021c56:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021c5a:	44de      	add	lr, fp
 8021c5c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021c60:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021c64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021c68:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021c6c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021c70:	ea4e 040a 	orr.w	r4, lr, sl
 8021c74:	940c      	str	r4, [sp, #48]	; 0x30
 8021c76:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021c78:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021c7c:	9c08      	ldr	r4, [sp, #32]
 8021c7e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021c82:	fb08 fc0c 	mul.w	ip, r8, ip
 8021c86:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021c8a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021c8e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8021c90:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021c94:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021c98:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021c9a:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021c9e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021ca2:	fb08 f80e 	mul.w	r8, r8, lr
 8021ca6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021caa:	fb02 8303 	mla	r3, r2, r3, r8
 8021cae:	9a08      	ldr	r2, [sp, #32]
 8021cb0:	f8b7 8000 	ldrh.w	r8, [r7]
 8021cb4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021cb8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021cba:	fb00 330a 	mla	r3, r0, sl, r3
 8021cbe:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8021cc2:	fb09 3900 	mla	r9, r9, r0, r3
 8021cc6:	43c9      	mvns	r1, r1
 8021cc8:	ea4f 2228 	mov.w	r2, r8, asr #8
 8021ccc:	fa5f fe81 	uxtb.w	lr, r1
 8021cd0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021cd4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021cd8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021cdc:	fb02 f20e 	mul.w	r2, r2, lr
 8021ce0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021ce4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021ce8:	ea4c 0c09 	orr.w	ip, ip, r9
 8021cec:	1c53      	adds	r3, r2, #1
 8021cee:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8021cf2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8021cf6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8021cfa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021cfe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021d02:	4a63      	ldr	r2, [pc, #396]	; (8021e90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8021d04:	fb00 f00e 	mul.w	r0, r0, lr
 8021d08:	b2db      	uxtb	r3, r3
 8021d0a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8021d0e:	1c43      	adds	r3, r0, #1
 8021d10:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021d14:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8021d18:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8021d1c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021d20:	b2c9      	uxtb	r1, r1
 8021d22:	00db      	lsls	r3, r3, #3
 8021d24:	fb01 f10e 	mul.w	r1, r1, lr
 8021d28:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021d2c:	4313      	orrs	r3, r2
 8021d2e:	1c4a      	adds	r2, r1, #1
 8021d30:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021d34:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021d38:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021d3c:	ea4c 0c03 	orr.w	ip, ip, r3
 8021d40:	f8a7 c000 	strh.w	ip, [r7]
 8021d44:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021d46:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021d48:	441a      	add	r2, r3
 8021d4a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021d4c:	9225      	str	r2, [sp, #148]	; 0x94
 8021d4e:	441d      	add	r5, r3
 8021d50:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8021d52:	3b01      	subs	r3, #1
 8021d54:	3702      	adds	r7, #2
 8021d56:	9317      	str	r3, [sp, #92]	; 0x5c
 8021d58:	e699      	b.n	8021a8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021d5a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021d5c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021d5e:	441c      	add	r4, r3
 8021d60:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021d62:	9425      	str	r4, [sp, #148]	; 0x94
 8021d64:	441d      	add	r5, r3
 8021d66:	9b07      	ldr	r3, [sp, #28]
 8021d68:	3b01      	subs	r3, #1
 8021d6a:	9307      	str	r3, [sp, #28]
 8021d6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021d6e:	3302      	adds	r3, #2
 8021d70:	930a      	str	r3, [sp, #40]	; 0x28
 8021d72:	e66b      	b.n	8021a4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8021d74:	d024      	beq.n	8021dc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8021d76:	9b07      	ldr	r3, [sp, #28]
 8021d78:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8021d7a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021d7c:	3b01      	subs	r3, #1
 8021d7e:	fb00 4003 	mla	r0, r0, r3, r4
 8021d82:	1400      	asrs	r0, r0, #16
 8021d84:	f53f ae80 	bmi.w	8021a88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d88:	3901      	subs	r1, #1
 8021d8a:	4288      	cmp	r0, r1
 8021d8c:	f6bf ae7c 	bge.w	8021a88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d90:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021d92:	fb01 5303 	mla	r3, r1, r3, r5
 8021d96:	141b      	asrs	r3, r3, #16
 8021d98:	f53f ae76 	bmi.w	8021a88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021d9c:	3a01      	subs	r2, #1
 8021d9e:	4293      	cmp	r3, r2
 8021da0:	f6bf ae72 	bge.w	8021a88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021da4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8021da8:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8021dac:	f1bb 0f00 	cmp.w	fp, #0
 8021db0:	dc70      	bgt.n	8021e94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021db2:	9b07      	ldr	r3, [sp, #28]
 8021db4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021db8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021dba:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021dbe:	930a      	str	r3, [sp, #40]	; 0x28
 8021dc0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021dc2:	2b00      	cmp	r3, #0
 8021dc4:	f340 81ae 	ble.w	8022124 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8021dc8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021dcc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021dd0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021dd4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021dd6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021dda:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021dde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021de2:	eef0 6a62 	vmov.f32	s13, s5
 8021de6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021dea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021dee:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021df2:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8021df6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021dfa:	eef0 6a43 	vmov.f32	s13, s6
 8021dfe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021e02:	ee12 2a90 	vmov	r2, s5
 8021e06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021e0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e0e:	ee13 2a10 	vmov	r2, s6
 8021e12:	9327      	str	r3, [sp, #156]	; 0x9c
 8021e14:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021e16:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e1a:	9328      	str	r3, [sp, #160]	; 0xa0
 8021e1c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021e1e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8021e20:	3b01      	subs	r3, #1
 8021e22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e26:	9316      	str	r3, [sp, #88]	; 0x58
 8021e28:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021e2a:	bf08      	it	eq
 8021e2c:	4613      	moveq	r3, r2
 8021e2e:	ee16 5a90 	vmov	r5, s13
 8021e32:	9307      	str	r3, [sp, #28]
 8021e34:	eeb0 3a67 	vmov.f32	s6, s15
 8021e38:	eef0 2a47 	vmov.f32	s5, s14
 8021e3c:	e5f8      	b.n	8021a30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8021e3e:	2800      	cmp	r0, #0
 8021e40:	f43f ae6b 	beq.w	8021b1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021e44:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021e48:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021e4c:	9108      	str	r1, [sp, #32]
 8021e4e:	0e09      	lsrs	r1, r1, #24
 8021e50:	9110      	str	r1, [sp, #64]	; 0x40
 8021e52:	e662      	b.n	8021b1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8021e54:	f113 0801 	adds.w	r8, r3, #1
 8021e58:	f53f af74 	bmi.w	8021d44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021e5c:	4541      	cmp	r1, r8
 8021e5e:	f6ff af71 	blt.w	8021d44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021e62:	f11c 0801 	adds.w	r8, ip, #1
 8021e66:	f53f af6d 	bmi.w	8021d44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021e6a:	45c6      	cmp	lr, r8
 8021e6c:	f6ff af6a 	blt.w	8021d44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021e70:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8021e74:	b209      	sxth	r1, r1
 8021e76:	fa0f f38e 	sxth.w	r3, lr
 8021e7a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8021e7e:	9301      	str	r3, [sp, #4]
 8021e80:	9100      	str	r1, [sp, #0]
 8021e82:	4633      	mov	r3, r6
 8021e84:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021e86:	9819      	ldr	r0, [sp, #100]	; 0x64
 8021e88:	4639      	mov	r1, r7
 8021e8a:	f7ff fc7a 	bl	8021782 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8021e8e:	e759      	b.n	8021d44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021e90:	fffff800 	.word	0xfffff800
 8021e94:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8021e96:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021e98:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021e9c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8021e9e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021ea2:	1427      	asrs	r7, r4, #16
 8021ea4:	142b      	asrs	r3, r5, #16
 8021ea6:	fb01 7303 	mla	r3, r1, r3, r7
 8021eaa:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021eac:	18e7      	adds	r7, r4, r3
 8021eae:	5ce3      	ldrb	r3, [r4, r3]
 8021eb0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021eb4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021eb8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021ebc:	2a00      	cmp	r2, #0
 8021ebe:	f000 8127 	beq.w	8022110 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021ec2:	f897 e001 	ldrb.w	lr, [r7, #1]
 8021ec6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8021eca:	940d      	str	r4, [sp, #52]	; 0x34
 8021ecc:	0e24      	lsrs	r4, r4, #24
 8021ece:	9414      	str	r4, [sp, #80]	; 0x50
 8021ed0:	b170      	cbz	r0, 8021ef0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8021ed2:	eb07 0e01 	add.w	lr, r7, r1
 8021ed6:	5c79      	ldrb	r1, [r7, r1]
 8021ed8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021edc:	9109      	str	r1, [sp, #36]	; 0x24
 8021ede:	0e09      	lsrs	r1, r1, #24
 8021ee0:	9111      	str	r1, [sp, #68]	; 0x44
 8021ee2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8021ee6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021eea:	910e      	str	r1, [sp, #56]	; 0x38
 8021eec:	0e09      	lsrs	r1, r1, #24
 8021eee:	9115      	str	r1, [sp, #84]	; 0x54
 8021ef0:	b292      	uxth	r2, r2
 8021ef2:	b280      	uxth	r0, r0
 8021ef4:	fb02 f800 	mul.w	r8, r2, r0
 8021ef8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021efc:	0112      	lsls	r2, r2, #4
 8021efe:	eba2 0e08 	sub.w	lr, r2, r8
 8021f02:	b280      	uxth	r0, r0
 8021f04:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8021f08:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021f0a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021f0c:	fa1f fe8e 	uxth.w	lr, lr
 8021f10:	1a09      	subs	r1, r1, r0
 8021f12:	b289      	uxth	r1, r1
 8021f14:	fb0e f202 	mul.w	r2, lr, r2
 8021f18:	fb01 220c 	mla	r2, r1, ip, r2
 8021f1c:	fb00 2204 	mla	r2, r0, r4, r2
 8021f20:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021f22:	fb08 2204 	mla	r2, r8, r4, r2
 8021f26:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8021f2a:	2a00      	cmp	r2, #0
 8021f2c:	f000 80e5 	beq.w	80220fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8021f30:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8021f34:	d019      	beq.n	8021f6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8021f36:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021f3a:	fb0c fa0a 	mul.w	sl, ip, sl
 8021f3e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021f42:	fb0c fc03 	mul.w	ip, ip, r3
 8021f46:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021f4a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021f4e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021f52:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8021f56:	4453      	add	r3, sl
 8021f58:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021f5c:	0a1b      	lsrs	r3, r3, #8
 8021f5e:	0a3f      	lsrs	r7, r7, #8
 8021f60:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021f64:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021f68:	433b      	orrs	r3, r7
 8021f6a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021f6c:	2cff      	cmp	r4, #255	; 0xff
 8021f6e:	d020      	beq.n	8021fb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8021f70:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021f72:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021f76:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021f78:	4367      	muls	r7, r4
 8021f7a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021f7c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021f80:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021f82:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021f86:	fb04 fa0a 	mul.w	sl, r4, sl
 8021f8a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021f8e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021f92:	44bc      	add	ip, r7
 8021f94:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021f98:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021f9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021fa0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021fa4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021fa8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021fac:	ea4c 040a 	orr.w	r4, ip, sl
 8021fb0:	940d      	str	r4, [sp, #52]	; 0x34
 8021fb2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021fb4:	2cff      	cmp	r4, #255	; 0xff
 8021fb6:	d020      	beq.n	8021ffa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8021fb8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8021fba:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021fbe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021fc0:	4367      	muls	r7, r4
 8021fc2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8021fc4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021fc8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021fca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021fce:	fb04 fa0a 	mul.w	sl, r4, sl
 8021fd2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021fd6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021fda:	44bc      	add	ip, r7
 8021fdc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021fe0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021fe4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021fe8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021fec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021ff0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021ff4:	ea4c 040a 	orr.w	r4, ip, sl
 8021ff8:	9409      	str	r4, [sp, #36]	; 0x24
 8021ffa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021ffc:	2cff      	cmp	r4, #255	; 0xff
 8021ffe:	d020      	beq.n	8022042 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8022000:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022002:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022006:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022008:	4367      	muls	r7, r4
 802200a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802200c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022010:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022012:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022016:	fb04 fa0a 	mul.w	sl, r4, sl
 802201a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802201e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022022:	44bc      	add	ip, r7
 8022024:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022028:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802202c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022030:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022034:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022038:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802203c:	ea4c 040a 	orr.w	r4, ip, sl
 8022040:	940e      	str	r4, [sp, #56]	; 0x38
 8022042:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022044:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022048:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802204a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802204e:	fb0e f707 	mul.w	r7, lr, r7
 8022052:	fb01 770c 	mla	r7, r1, ip, r7
 8022056:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802205a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802205c:	fb00 770c 	mla	r7, r0, ip, r7
 8022060:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022064:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022066:	fb08 770c 	mla	r7, r8, ip, r7
 802206a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802206e:	fb0e fe0c 	mul.w	lr, lr, ip
 8022072:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022076:	fb01 e303 	mla	r3, r1, r3, lr
 802207a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802207c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8022080:	990e      	ldr	r1, [sp, #56]	; 0x38
 8022082:	fb00 330a 	mla	r3, r0, sl, r3
 8022086:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802208a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802208e:	f8b9 3000 	ldrh.w	r3, [r9]
 8022092:	43d2      	mvns	r2, r2
 8022094:	1218      	asrs	r0, r3, #8
 8022096:	b2d2      	uxtb	r2, r2
 8022098:	10d9      	asrs	r1, r3, #3
 802209a:	0a3f      	lsrs	r7, r7, #8
 802209c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80220a0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80220a4:	00db      	lsls	r3, r3, #3
 80220a6:	4350      	muls	r0, r2
 80220a8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80220ac:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80220b0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80220b4:	b2db      	uxtb	r3, r3
 80220b6:	ea47 070c 	orr.w	r7, r7, ip
 80220ba:	4351      	muls	r1, r2
 80220bc:	4353      	muls	r3, r2
 80220be:	1c42      	adds	r2, r0, #1
 80220c0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80220c4:	0c3a      	lsrs	r2, r7, #16
 80220c6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80220ca:	4a18      	ldr	r2, [pc, #96]	; (802212c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80220cc:	b2c0      	uxtb	r0, r0
 80220ce:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80220d2:	1c4a      	adds	r2, r1, #1
 80220d4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80220d8:	0a3a      	lsrs	r2, r7, #8
 80220da:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80220de:	00c9      	lsls	r1, r1, #3
 80220e0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80220e4:	4301      	orrs	r1, r0
 80220e6:	1c58      	adds	r0, r3, #1
 80220e8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80220ec:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80220f0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80220f4:	4308      	orrs	r0, r1
 80220f6:	f8a9 0000 	strh.w	r0, [r9]
 80220fa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80220fc:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80220fe:	441a      	add	r2, r3
 8022100:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022102:	9225      	str	r2, [sp, #148]	; 0x94
 8022104:	f109 0902 	add.w	r9, r9, #2
 8022108:	441d      	add	r5, r3
 802210a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802210e:	e64d      	b.n	8021dac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8022110:	2800      	cmp	r0, #0
 8022112:	f43f aeed 	beq.w	8021ef0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022116:	5c79      	ldrb	r1, [r7, r1]
 8022118:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802211c:	9109      	str	r1, [sp, #36]	; 0x24
 802211e:	0e09      	lsrs	r1, r1, #24
 8022120:	9111      	str	r1, [sp, #68]	; 0x44
 8022122:	e6e5      	b.n	8021ef0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022124:	b01b      	add	sp, #108	; 0x6c
 8022126:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802212a:	bf00      	nop
 802212c:	fffff800 	.word	0xfffff800

08022130 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8022130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022134:	b085      	sub	sp, #20
 8022136:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 802213a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802213e:	9103      	str	r1, [sp, #12]
 8022140:	fb00 7406 	mla	r4, r0, r6, r7
 8022144:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8022148:	2800      	cmp	r0, #0
 802214a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802214e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022152:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022156:	9501      	str	r5, [sp, #4]
 8022158:	eb03 0904 	add.w	r9, r3, r4
 802215c:	f2c0 8150 	blt.w	8022400 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022160:	4583      	cmp	fp, r0
 8022162:	f340 814d 	ble.w	8022400 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022166:	2f00      	cmp	r7, #0
 8022168:	f2c0 8146 	blt.w	80223f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802216c:	42be      	cmp	r6, r7
 802216e:	f340 8143 	ble.w	80223f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022172:	f813 c004 	ldrb.w	ip, [r3, r4]
 8022176:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 802217a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802217e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022182:	4355      	muls	r5, r2
 8022184:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022188:	f64f 041f 	movw	r4, #63519	; 0xf81f
 802218c:	fb0c f203 	mul.w	r2, ip, r3
 8022190:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022194:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022198:	441d      	add	r5, r3
 802219a:	f102 0320 	add.w	r3, r2, #32
 802219e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80221a2:	0a1b      	lsrs	r3, r3, #8
 80221a4:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80221a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80221ac:	431c      	orrs	r4, r3
 80221ae:	1c7b      	adds	r3, r7, #1
 80221b0:	f100 812b 	bmi.w	802240a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80221b4:	429e      	cmp	r6, r3
 80221b6:	f340 8128 	ble.w	802240a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80221ba:	2900      	cmp	r1, #0
 80221bc:	f000 8128 	beq.w	8022410 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80221c0:	9a01      	ldr	r2, [sp, #4]
 80221c2:	f899 3001 	ldrb.w	r3, [r9, #1]
 80221c6:	8855      	ldrh	r5, [r2, #2]
 80221c8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80221cc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80221d0:	fb08 f802 	mul.w	r8, r8, r2
 80221d4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80221d8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80221dc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80221e0:	435d      	muls	r5, r3
 80221e2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80221e6:	44d0      	add	r8, sl
 80221e8:	f105 0a20 	add.w	sl, r5, #32
 80221ec:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80221f0:	0a2d      	lsrs	r5, r5, #8
 80221f2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80221f6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80221fa:	432a      	orrs	r2, r5
 80221fc:	3001      	adds	r0, #1
 80221fe:	f100 810d 	bmi.w	802241c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022202:	4583      	cmp	fp, r0
 8022204:	f340 810a 	ble.w	802241c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022208:	f1be 0f00 	cmp.w	lr, #0
 802220c:	f000 810b 	beq.w	8022426 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8022210:	2f00      	cmp	r7, #0
 8022212:	f2c0 8100 	blt.w	8022416 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022216:	42be      	cmp	r6, r7
 8022218:	f340 80fd 	ble.w	8022416 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802221c:	9801      	ldr	r0, [sp, #4]
 802221e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022222:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022226:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 802222a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802222e:	fb0a fa00 	mul.w	sl, sl, r0
 8022232:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022236:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802223a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802223e:	fb05 f808 	mul.w	r8, r5, r8
 8022242:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022246:	4482      	add	sl, r0
 8022248:	f108 0020 	add.w	r0, r8, #32
 802224c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022250:	0a00      	lsrs	r0, r0, #8
 8022252:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022256:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802225a:	ea4b 0b00 	orr.w	fp, fp, r0
 802225e:	3701      	adds	r7, #1
 8022260:	f100 80e6 	bmi.w	8022430 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022264:	42be      	cmp	r6, r7
 8022266:	f340 80e3 	ble.w	8022430 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802226a:	2900      	cmp	r1, #0
 802226c:	f000 80e3 	beq.w	8022436 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8022270:	3601      	adds	r6, #1
 8022272:	9801      	ldr	r0, [sp, #4]
 8022274:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022278:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 802227c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022280:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022284:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022288:	fb09 f906 	mul.w	r9, r9, r6
 802228c:	fb07 f800 	mul.w	r8, r7, r0
 8022290:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022294:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022298:	f609 0901 	addw	r9, r9, #2049	; 0x801
 802229c:	44d1      	add	r9, sl
 802229e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80222a2:	f108 0020 	add.w	r0, r8, #32
 80222a6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80222aa:	0a00      	lsrs	r0, r0, #8
 80222ac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80222b0:	4330      	orrs	r0, r6
 80222b2:	b28e      	uxth	r6, r1
 80222b4:	fa1f f98e 	uxth.w	r9, lr
 80222b8:	fb06 f809 	mul.w	r8, r6, r9
 80222bc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80222c0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80222c4:	0136      	lsls	r6, r6, #4
 80222c6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80222ca:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80222ce:	9601      	str	r6, [sp, #4]
 80222d0:	ea4a 0404 	orr.w	r4, sl, r4
 80222d4:	fa1f f689 	uxth.w	r6, r9
 80222d8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80222dc:	fb11 f90e 	smulbb	r9, r1, lr
 80222e0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80222e4:	9602      	str	r6, [sp, #8]
 80222e6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80222ea:	4626      	mov	r6, r4
 80222ec:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80222f0:	f1ce 0410 	rsb	r4, lr, #16
 80222f4:	1a64      	subs	r4, r4, r1
 80222f6:	ea4a 0202 	orr.w	r2, sl, r2
 80222fa:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80222fe:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022302:	434a      	muls	r2, r1
 8022304:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022308:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802230c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022310:	fb04 2406 	mla	r4, r4, r6, r2
 8022314:	ea4a 0000 	orr.w	r0, sl, r0
 8022318:	fb09 4200 	mla	r2, r9, r0, r4
 802231c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022320:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022324:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022328:	ea44 0b0b 	orr.w	fp, r4, fp
 802232c:	9c01      	ldr	r4, [sp, #4]
 802232e:	9e02      	ldr	r6, [sp, #8]
 8022330:	9903      	ldr	r1, [sp, #12]
 8022332:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8022336:	1ba4      	subs	r4, r4, r6
 8022338:	9e01      	ldr	r6, [sp, #4]
 802233a:	8808      	ldrh	r0, [r1, #0]
 802233c:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8022340:	eba6 0608 	sub.w	r6, r6, r8
 8022344:	b2b6      	uxth	r6, r6
 8022346:	b2a4      	uxth	r4, r4
 8022348:	4373      	muls	r3, r6
 802234a:	fb0c 3304 	mla	r3, ip, r4, r3
 802234e:	9c02      	ldr	r4, [sp, #8]
 8022350:	fb04 3505 	mla	r5, r4, r5, r3
 8022354:	fb08 5707 	mla	r7, r8, r7, r5
 8022358:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802235c:	b289      	uxth	r1, r1
 802235e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022362:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8022366:	434f      	muls	r7, r1
 8022368:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802236c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022370:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022374:	1c7b      	adds	r3, r7, #1
 8022376:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802237a:	ea42 0e0e 	orr.w	lr, r2, lr
 802237e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8022382:	fa1f f28e 	uxth.w	r2, lr
 8022386:	1203      	asrs	r3, r0, #8
 8022388:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 802238c:	b2ff      	uxtb	r7, r7
 802238e:	1215      	asrs	r5, r2, #8
 8022390:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022394:	fb13 f307 	smulbb	r3, r3, r7
 8022398:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802239c:	fb05 3501 	mla	r5, r5, r1, r3
 80223a0:	10c3      	asrs	r3, r0, #3
 80223a2:	10d4      	asrs	r4, r2, #3
 80223a4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80223a8:	fb13 f307 	smulbb	r3, r3, r7
 80223ac:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80223b0:	fb04 3401 	mla	r4, r4, r1, r3
 80223b4:	00c3      	lsls	r3, r0, #3
 80223b6:	00d2      	lsls	r2, r2, #3
 80223b8:	b2db      	uxtb	r3, r3
 80223ba:	fb13 f307 	smulbb	r3, r3, r7
 80223be:	b2d2      	uxtb	r2, r2
 80223c0:	fb02 3101 	mla	r1, r2, r1, r3
 80223c4:	b2ad      	uxth	r5, r5
 80223c6:	b289      	uxth	r1, r1
 80223c8:	b2a4      	uxth	r4, r4
 80223ca:	1c6b      	adds	r3, r5, #1
 80223cc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80223d0:	1c62      	adds	r2, r4, #1
 80223d2:	1c4b      	adds	r3, r1, #1
 80223d4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80223d8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80223dc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80223e0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80223e4:	0964      	lsrs	r4, r4, #5
 80223e6:	432b      	orrs	r3, r5
 80223e8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80223ec:	9a03      	ldr	r2, [sp, #12]
 80223ee:	4323      	orrs	r3, r4
 80223f0:	8013      	strh	r3, [r2, #0]
 80223f2:	b005      	add	sp, #20
 80223f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80223f8:	f04f 0c00 	mov.w	ip, #0
 80223fc:	4664      	mov	r4, ip
 80223fe:	e6d6      	b.n	80221ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8022400:	2300      	movs	r3, #0
 8022402:	469c      	mov	ip, r3
 8022404:	461a      	mov	r2, r3
 8022406:	461c      	mov	r4, r3
 8022408:	e6f8      	b.n	80221fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802240a:	2300      	movs	r3, #0
 802240c:	461a      	mov	r2, r3
 802240e:	e6f5      	b.n	80221fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022410:	460b      	mov	r3, r1
 8022412:	460a      	mov	r2, r1
 8022414:	e6f2      	b.n	80221fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022416:	2500      	movs	r5, #0
 8022418:	46ab      	mov	fp, r5
 802241a:	e720      	b.n	802225e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 802241c:	2700      	movs	r7, #0
 802241e:	463d      	mov	r5, r7
 8022420:	4638      	mov	r0, r7
 8022422:	46bb      	mov	fp, r7
 8022424:	e745      	b.n	80222b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022426:	4677      	mov	r7, lr
 8022428:	4675      	mov	r5, lr
 802242a:	4670      	mov	r0, lr
 802242c:	46f3      	mov	fp, lr
 802242e:	e740      	b.n	80222b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022430:	2700      	movs	r7, #0
 8022432:	4638      	mov	r0, r7
 8022434:	e73d      	b.n	80222b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022436:	460f      	mov	r7, r1
 8022438:	4608      	mov	r0, r1
 802243a:	e73a      	b.n	80222b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0802243c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802243c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022440:	b097      	sub	sp, #92	; 0x5c
 8022442:	9214      	str	r2, [sp, #80]	; 0x50
 8022444:	9308      	str	r3, [sp, #32]
 8022446:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022448:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 802244c:	9312      	str	r3, [sp, #72]	; 0x48
 802244e:	9111      	str	r1, [sp, #68]	; 0x44
 8022450:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8022454:	9015      	str	r0, [sp, #84]	; 0x54
 8022456:	6850      	ldr	r0, [r2, #4]
 8022458:	6812      	ldr	r2, [r2, #0]
 802245a:	fb00 1303 	mla	r3, r0, r3, r1
 802245e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022462:	9309      	str	r3, [sp, #36]	; 0x24
 8022464:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022466:	681b      	ldr	r3, [r3, #0]
 8022468:	930b      	str	r3, [sp, #44]	; 0x2c
 802246a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802246c:	685b      	ldr	r3, [r3, #4]
 802246e:	930c      	str	r3, [sp, #48]	; 0x30
 8022470:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8022474:	930a      	str	r3, [sp, #40]	; 0x28
 8022476:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022478:	2b00      	cmp	r3, #0
 802247a:	dc03      	bgt.n	8022484 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802247c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802247e:	2b00      	cmp	r3, #0
 8022480:	f340 83cb 	ble.w	8022c1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8022484:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022486:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802248a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802248e:	1e48      	subs	r0, r1, #1
 8022490:	1e55      	subs	r5, r2, #1
 8022492:	9b08      	ldr	r3, [sp, #32]
 8022494:	2b00      	cmp	r3, #0
 8022496:	f340 81a3 	ble.w	80227e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 802249a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 802249c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802249e:	1436      	asrs	r6, r6, #16
 80224a0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80224a4:	d406      	bmi.n	80224b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80224a6:	4286      	cmp	r6, r0
 80224a8:	da04      	bge.n	80224b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80224aa:	2b00      	cmp	r3, #0
 80224ac:	db02      	blt.n	80224b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80224ae:	42ab      	cmp	r3, r5
 80224b0:	f2c0 8197 	blt.w	80227e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80224b4:	3601      	adds	r6, #1
 80224b6:	f100 8184 	bmi.w	80227c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80224ba:	42b1      	cmp	r1, r6
 80224bc:	f2c0 8181 	blt.w	80227c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80224c0:	3301      	adds	r3, #1
 80224c2:	f100 817e 	bmi.w	80227c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80224c6:	429a      	cmp	r2, r3
 80224c8:	f2c0 817b 	blt.w	80227c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80224cc:	9b08      	ldr	r3, [sp, #32]
 80224ce:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80224d0:	9313      	str	r3, [sp, #76]	; 0x4c
 80224d2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80224d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80224d8:	2b00      	cmp	r3, #0
 80224da:	f340 81a4 	ble.w	8022826 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80224de:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80224e0:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80224e2:	1418      	asrs	r0, r3, #16
 80224e4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80224e6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80224ea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80224ec:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80224f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80224f2:	142d      	asrs	r5, r5, #16
 80224f4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80224f8:	f100 81f8 	bmi.w	80228ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80224fc:	f102 3eff 	add.w	lr, r2, #4294967295
 8022500:	4575      	cmp	r5, lr
 8022502:	f280 81f3 	bge.w	80228ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022506:	2800      	cmp	r0, #0
 8022508:	f2c0 81f0 	blt.w	80228ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802250c:	f103 3eff 	add.w	lr, r3, #4294967295
 8022510:	4570      	cmp	r0, lr
 8022512:	f280 81eb 	bge.w	80228ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022516:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022518:	b212      	sxth	r2, r2
 802251a:	fb00 5002 	mla	r0, r0, r2, r5
 802251e:	fa1f fe81 	uxth.w	lr, r1
 8022522:	eb03 0a00 	add.w	sl, r3, r0
 8022526:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802252a:	f813 9000 	ldrb.w	r9, [r3, r0]
 802252e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022532:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8022536:	b29b      	uxth	r3, r3
 8022538:	f1bc 0f00 	cmp.w	ip, #0
 802253c:	f000 81b9 	beq.w	80228b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8022540:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8022544:	940d      	str	r4, [sp, #52]	; 0x34
 8022546:	eb0a 0b02 	add.w	fp, sl, r2
 802254a:	fa1f fa8c 	uxth.w	sl, ip
 802254e:	fb0a fe0e 	mul.w	lr, sl, lr
 8022552:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8022556:	fa1f fa8a 	uxth.w	sl, sl
 802255a:	eba5 050e 	sub.w	r5, r5, lr
 802255e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022562:	940e      	str	r4, [sp, #56]	; 0x38
 8022564:	eba3 030a 	sub.w	r3, r3, sl
 8022568:	b2ad      	uxth	r5, r5
 802256a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802256c:	b29b      	uxth	r3, r3
 802256e:	fb08 f505 	mul.w	r5, r8, r5
 8022572:	fb09 5303 	mla	r3, r9, r3, r5
 8022576:	fb0a 3304 	mla	r3, sl, r4, r3
 802257a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802257c:	fb0e 3304 	mla	r3, lr, r4, r3
 8022580:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022584:	2b00      	cmp	r3, #0
 8022586:	f000 810f 	beq.w	80227a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802258a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802258c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022590:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022594:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022598:	f000 8190 	beq.w	80228bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 802259c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80225a0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80225a4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80225a8:	fb09 f000 	mul.w	r0, r9, r0
 80225ac:	fb0a fe0e 	mul.w	lr, sl, lr
 80225b0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80225b4:	f100 0b20 	add.w	fp, r0, #32
 80225b8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80225bc:	44ce      	add	lr, r9
 80225be:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80225c2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80225c6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80225ca:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80225ce:	ea4e 0909 	orr.w	r9, lr, r9
 80225d2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80225d6:	8868      	ldrh	r0, [r5, #2]
 80225d8:	d019      	beq.n	802260e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80225da:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80225de:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80225e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80225e6:	fb08 f800 	mul.w	r8, r8, r0
 80225ea:	fb0a fe0e 	mul.w	lr, sl, lr
 80225ee:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80225f2:	f108 0b20 	add.w	fp, r8, #32
 80225f6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80225fa:	4486      	add	lr, r0
 80225fc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022600:	0a00      	lsrs	r0, r0, #8
 8022602:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022606:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802260a:	ea4e 0000 	orr.w	r0, lr, r0
 802260e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8022612:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022616:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802261a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802261e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022622:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022626:	ea4e 0909 	orr.w	r9, lr, r9
 802262a:	ea4a 0000 	orr.w	r0, sl, r0
 802262e:	f1bc 0f00 	cmp.w	ip, #0
 8022632:	f000 8145 	beq.w	80228c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8022636:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802263a:	3a01      	subs	r2, #1
 802263c:	0052      	lsls	r2, r2, #1
 802263e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022640:	3202      	adds	r2, #2
 8022642:	2cff      	cmp	r4, #255	; 0xff
 8022644:	eb05 0e02 	add.w	lr, r5, r2
 8022648:	5aaa      	ldrh	r2, [r5, r2]
 802264a:	d018      	beq.n	802267e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 802264c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022650:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022654:	fb04 fa02 	mul.w	sl, r4, r2
 8022658:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802265c:	fb08 f805 	mul.w	r8, r8, r5
 8022660:	f10a 0520 	add.w	r5, sl, #32
 8022664:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022668:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802266c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022670:	4442      	add	r2, r8
 8022672:	0a2d      	lsrs	r5, r5, #8
 8022674:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022678:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802267c:	432a      	orrs	r2, r5
 802267e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022680:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022684:	2cff      	cmp	r4, #255	; 0xff
 8022686:	d01a      	beq.n	80226be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8022688:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802268c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022690:	fb04 fa05 	mul.w	sl, r4, r5
 8022694:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022698:	fb08 f80e 	mul.w	r8, r8, lr
 802269c:	f10a 0e20 	add.w	lr, sl, #32
 80226a0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80226a4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80226a8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80226ac:	4445      	add	r5, r8
 80226ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80226b2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80226b6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80226ba:	ea45 050e 	orr.w	r5, r5, lr
 80226be:	fb1c fe01 	smulbb	lr, ip, r1
 80226c2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80226c6:	f1cc 0810 	rsb	r8, ip, #16
 80226ca:	eba8 0801 	sub.w	r8, r8, r1
 80226ce:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80226d2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80226d6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80226da:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80226de:	4341      	muls	r1, r0
 80226e0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80226e4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80226e8:	ea4a 0202 	orr.w	r2, sl, r2
 80226ec:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80226f0:	fb09 1108 	mla	r1, r9, r8, r1
 80226f4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80226f8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80226fc:	fb0c 1102 	mla	r1, ip, r2, r1
 8022700:	ea4b 0505 	orr.w	r5, fp, r5
 8022704:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022708:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802270c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022710:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022714:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022718:	ea42 0e0e 	orr.w	lr, r2, lr
 802271c:	fa1f f28e 	uxth.w	r2, lr
 8022720:	2bff      	cmp	r3, #255	; 0xff
 8022722:	d103      	bne.n	802272c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8022724:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022726:	29ff      	cmp	r1, #255	; 0xff
 8022728:	f000 80de 	beq.w	80228e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 802272c:	990a      	ldr	r1, [sp, #40]	; 0x28
 802272e:	8838      	ldrh	r0, [r7, #0]
 8022730:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022732:	434b      	muls	r3, r1
 8022734:	f103 0c01 	add.w	ip, r3, #1
 8022738:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 802273c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022740:	fa5f fc83 	uxtb.w	ip, r3
 8022744:	1203      	asrs	r3, r0, #8
 8022746:	1215      	asrs	r5, r2, #8
 8022748:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802274c:	fb13 f30c 	smulbb	r3, r3, ip
 8022750:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022754:	fb05 3501 	mla	r5, r5, r1, r3
 8022758:	10c3      	asrs	r3, r0, #3
 802275a:	10d1      	asrs	r1, r2, #3
 802275c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022760:	fb13 f30c 	smulbb	r3, r3, ip
 8022764:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022768:	fb01 3104 	mla	r1, r1, r4, r3
 802276c:	00c3      	lsls	r3, r0, #3
 802276e:	00d2      	lsls	r2, r2, #3
 8022770:	b2db      	uxtb	r3, r3
 8022772:	b2d2      	uxtb	r2, r2
 8022774:	fb13 f30c 	smulbb	r3, r3, ip
 8022778:	b2ad      	uxth	r5, r5
 802277a:	fb02 3304 	mla	r3, r2, r4, r3
 802277e:	b29a      	uxth	r2, r3
 8022780:	1c6b      	adds	r3, r5, #1
 8022782:	b289      	uxth	r1, r1
 8022784:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022788:	1c53      	adds	r3, r2, #1
 802278a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802278e:	1c4a      	adds	r2, r1, #1
 8022790:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022794:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022798:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802279c:	0949      	lsrs	r1, r1, #5
 802279e:	432b      	orrs	r3, r5
 80227a0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80227a4:	430b      	orrs	r3, r1
 80227a6:	803b      	strh	r3, [r7, #0]
 80227a8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80227aa:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80227ac:	4413      	add	r3, r2
 80227ae:	9321      	str	r3, [sp, #132]	; 0x84
 80227b0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80227b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80227b4:	441a      	add	r2, r3
 80227b6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80227b8:	9222      	str	r2, [sp, #136]	; 0x88
 80227ba:	3b01      	subs	r3, #1
 80227bc:	3702      	adds	r7, #2
 80227be:	9313      	str	r3, [sp, #76]	; 0x4c
 80227c0:	e689      	b.n	80224d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80227c2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80227c4:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80227c6:	9c22      	ldr	r4, [sp, #136]	; 0x88
 80227c8:	4433      	add	r3, r6
 80227ca:	9321      	str	r3, [sp, #132]	; 0x84
 80227cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80227ce:	441c      	add	r4, r3
 80227d0:	9b08      	ldr	r3, [sp, #32]
 80227d2:	9422      	str	r4, [sp, #136]	; 0x88
 80227d4:	3b01      	subs	r3, #1
 80227d6:	9308      	str	r3, [sp, #32]
 80227d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80227da:	3302      	adds	r3, #2
 80227dc:	9309      	str	r3, [sp, #36]	; 0x24
 80227de:	e658      	b.n	8022492 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80227e0:	d028      	beq.n	8022834 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80227e2:	9b08      	ldr	r3, [sp, #32]
 80227e4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80227e6:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80227e8:	3b01      	subs	r3, #1
 80227ea:	fb00 5003 	mla	r0, r0, r3, r5
 80227ee:	1400      	asrs	r0, r0, #16
 80227f0:	f53f ae6c 	bmi.w	80224cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80227f4:	3901      	subs	r1, #1
 80227f6:	4288      	cmp	r0, r1
 80227f8:	f6bf ae68 	bge.w	80224cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80227fc:	9924      	ldr	r1, [sp, #144]	; 0x90
 80227fe:	9822      	ldr	r0, [sp, #136]	; 0x88
 8022800:	fb01 0303 	mla	r3, r1, r3, r0
 8022804:	141b      	asrs	r3, r3, #16
 8022806:	f53f ae61 	bmi.w	80224cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802280a:	3a01      	subs	r2, #1
 802280c:	4293      	cmp	r3, r2
 802280e:	f6bf ae5d 	bge.w	80224cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022812:	9b08      	ldr	r3, [sp, #32]
 8022814:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8022818:	9313      	str	r3, [sp, #76]	; 0x4c
 802281a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802281e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022820:	2b00      	cmp	r3, #0
 8022822:	f300 8082 	bgt.w	802292a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8022826:	9b08      	ldr	r3, [sp, #32]
 8022828:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802282c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802282e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022832:	9309      	str	r3, [sp, #36]	; 0x24
 8022834:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022836:	2b00      	cmp	r3, #0
 8022838:	f340 81ef 	ble.w	8022c1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 802283c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022840:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022844:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022848:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802284a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802284e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022852:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022856:	eef0 6a62 	vmov.f32	s13, s5
 802285a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802285e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022862:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022866:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 802286a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802286e:	eef0 6a43 	vmov.f32	s13, s6
 8022872:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022876:	ee12 2a90 	vmov	r2, s5
 802287a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802287e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022882:	ee13 2a10 	vmov	r2, s6
 8022886:	9323      	str	r3, [sp, #140]	; 0x8c
 8022888:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802288a:	fb92 f3f3 	sdiv	r3, r2, r3
 802288e:	9324      	str	r3, [sp, #144]	; 0x90
 8022890:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022892:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022894:	3b01      	subs	r3, #1
 8022896:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802289a:	9311      	str	r3, [sp, #68]	; 0x44
 802289c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802289e:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 80228a2:	bf08      	it	eq
 80228a4:	4613      	moveq	r3, r2
 80228a6:	9308      	str	r3, [sp, #32]
 80228a8:	eeb0 3a67 	vmov.f32	s6, s15
 80228ac:	eef0 2a47 	vmov.f32	s5, s14
 80228b0:	e5e1      	b.n	8022476 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80228b2:	fb08 f505 	mul.w	r5, r8, r5
 80228b6:	fb09 5303 	mla	r3, r9, r3, r5
 80228ba:	e661      	b.n	8022580 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80228bc:	4681      	mov	r9, r0
 80228be:	e688      	b.n	80225d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80228c0:	f1c1 0210 	rsb	r2, r1, #16
 80228c4:	4341      	muls	r1, r0
 80228c6:	fb09 1902 	mla	r9, r9, r2, r1
 80228ca:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80228ce:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80228d2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80228d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80228da:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80228de:	ea42 0909 	orr.w	r9, r2, r9
 80228e2:	fa1f f289 	uxth.w	r2, r9
 80228e6:	e71b      	b.n	8022720 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80228e8:	803a      	strh	r2, [r7, #0]
 80228ea:	e75d      	b.n	80227a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80228ec:	f115 0e01 	adds.w	lr, r5, #1
 80228f0:	f53f af5a 	bmi.w	80227a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80228f4:	4572      	cmp	r2, lr
 80228f6:	f6ff af57 	blt.w	80227a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80228fa:	f110 0e01 	adds.w	lr, r0, #1
 80228fe:	f53f af53 	bmi.w	80227a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022902:	4573      	cmp	r3, lr
 8022904:	f6ff af50 	blt.w	80227a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022908:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802290a:	9502      	str	r5, [sp, #8]
 802290c:	b21b      	sxth	r3, r3
 802290e:	b212      	sxth	r2, r2
 8022910:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8022914:	9301      	str	r3, [sp, #4]
 8022916:	9200      	str	r2, [sp, #0]
 8022918:	e9cd c405 	strd	ip, r4, [sp, #20]
 802291c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8022920:	4639      	mov	r1, r7
 8022922:	9815      	ldr	r0, [sp, #84]	; 0x54
 8022924:	f7ff fc04 	bl	8022130 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8022928:	e73e      	b.n	80227a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802292a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802292c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022930:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022932:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022936:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022938:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802293c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802293e:	141f      	asrs	r7, r3, #16
 8022940:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022942:	141b      	asrs	r3, r3, #16
 8022944:	fb01 3707 	mla	r7, r1, r7, r3
 8022948:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802294a:	fa1f fc82 	uxth.w	ip, r2
 802294e:	eb03 0a07 	add.w	sl, r3, r7
 8022952:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8022956:	f813 9007 	ldrb.w	r9, [r3, r7]
 802295a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802295e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8022962:	b29b      	uxth	r3, r3
 8022964:	2d00      	cmp	r5, #0
 8022966:	f000 813d 	beq.w	8022be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 802296a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802296e:	940f      	str	r4, [sp, #60]	; 0x3c
 8022970:	eb0a 0b01 	add.w	fp, sl, r1
 8022974:	fa1f fa85 	uxth.w	sl, r5
 8022978:	fb0a fc0c 	mul.w	ip, sl, ip
 802297c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022980:	fa1f fa8a 	uxth.w	sl, sl
 8022984:	eba0 000c 	sub.w	r0, r0, ip
 8022988:	eba3 030a 	sub.w	r3, r3, sl
 802298c:	b280      	uxth	r0, r0
 802298e:	fb08 f000 	mul.w	r0, r8, r0
 8022992:	b29b      	uxth	r3, r3
 8022994:	fb09 0303 	mla	r3, r9, r3, r0
 8022998:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802299a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802299e:	9410      	str	r4, [sp, #64]	; 0x40
 80229a0:	fb0a 3300 	mla	r3, sl, r0, r3
 80229a4:	fb0c 3304 	mla	r3, ip, r4, r3
 80229a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80229ac:	2b00      	cmp	r3, #0
 80229ae:	f000 810b 	beq.w	8022bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80229b2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80229b4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80229b6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80229ba:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80229be:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80229c2:	f000 8114 	beq.w	8022bee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 80229c6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80229ca:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80229ce:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80229d2:	fb09 f707 	mul.w	r7, r9, r7
 80229d6:	fb0a fc0c 	mul.w	ip, sl, ip
 80229da:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80229de:	f107 0b20 	add.w	fp, r7, #32
 80229e2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80229e6:	44cc      	add	ip, r9
 80229e8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80229ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80229f0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80229f4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80229f8:	ea4c 0909 	orr.w	r9, ip, r9
 80229fc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022a00:	8847      	ldrh	r7, [r0, #2]
 8022a02:	d019      	beq.n	8022a38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8022a04:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022a08:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022a0c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022a10:	fb08 f807 	mul.w	r8, r8, r7
 8022a14:	fb0a fc0c 	mul.w	ip, sl, ip
 8022a18:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022a1c:	f108 0b20 	add.w	fp, r8, #32
 8022a20:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022a24:	44bc      	add	ip, r7
 8022a26:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022a2a:	0a3f      	lsrs	r7, r7, #8
 8022a2c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022a30:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022a34:	ea4c 0707 	orr.w	r7, ip, r7
 8022a38:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022a3c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022a40:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022a44:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022a48:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022a4c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022a50:	ea4c 0909 	orr.w	r9, ip, r9
 8022a54:	ea4a 0707 	orr.w	r7, sl, r7
 8022a58:	2d00      	cmp	r5, #0
 8022a5a:	f000 80ca 	beq.w	8022bf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8022a5e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022a62:	3901      	subs	r1, #1
 8022a64:	0049      	lsls	r1, r1, #1
 8022a66:	3102      	adds	r1, #2
 8022a68:	eb00 0c01 	add.w	ip, r0, r1
 8022a6c:	5a41      	ldrh	r1, [r0, r1]
 8022a6e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022a70:	28ff      	cmp	r0, #255	; 0xff
 8022a72:	d019      	beq.n	8022aa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8022a74:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022a76:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022a7a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022a7e:	fb04 fa01 	mul.w	sl, r4, r1
 8022a82:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022a86:	fb08 f800 	mul.w	r8, r8, r0
 8022a8a:	f10a 0020 	add.w	r0, sl, #32
 8022a8e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022a92:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022a96:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022a9a:	4441      	add	r1, r8
 8022a9c:	0a00      	lsrs	r0, r0, #8
 8022a9e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022aa2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022aa6:	4301      	orrs	r1, r0
 8022aa8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022aaa:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022aae:	2cff      	cmp	r4, #255	; 0xff
 8022ab0:	d01a      	beq.n	8022ae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8022ab2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022ab6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022aba:	fb04 fa00 	mul.w	sl, r4, r0
 8022abe:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022ac2:	fb08 f80c 	mul.w	r8, r8, ip
 8022ac6:	f10a 0c20 	add.w	ip, sl, #32
 8022aca:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022ace:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022ad2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022ad6:	4440      	add	r0, r8
 8022ad8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022adc:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022ae0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022ae4:	ea40 000c 	orr.w	r0, r0, ip
 8022ae8:	fb15 fc02 	smulbb	ip, r5, r2
 8022aec:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022af0:	f1c5 0810 	rsb	r8, r5, #16
 8022af4:	eba8 0802 	sub.w	r8, r8, r2
 8022af8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022afc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022b00:	437a      	muls	r2, r7
 8022b02:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022b06:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022b0a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022b0e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022b12:	fb09 2208 	mla	r2, r9, r8, r2
 8022b16:	ea4a 0101 	orr.w	r1, sl, r1
 8022b1a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022b1e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022b22:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022b26:	fb05 2201 	mla	r2, r5, r1, r2
 8022b2a:	ea4b 0000 	orr.w	r0, fp, r0
 8022b2e:	fb0c 2200 	mla	r2, ip, r0, r2
 8022b32:	0d57      	lsrs	r7, r2, #21
 8022b34:	0952      	lsrs	r2, r2, #5
 8022b36:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022b3a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022b3e:	433a      	orrs	r2, r7
 8022b40:	2bff      	cmp	r3, #255	; 0xff
 8022b42:	b292      	uxth	r2, r2
 8022b44:	d102      	bne.n	8022b4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022b46:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022b48:	29ff      	cmp	r1, #255	; 0xff
 8022b4a:	d063      	beq.n	8022c14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8022b4c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8022b4e:	f8be 1000 	ldrh.w	r1, [lr]
 8022b52:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022b54:	4343      	muls	r3, r0
 8022b56:	1c58      	adds	r0, r3, #1
 8022b58:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8022b5c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022b60:	1208      	asrs	r0, r1, #8
 8022b62:	b2db      	uxtb	r3, r3
 8022b64:	1215      	asrs	r5, r2, #8
 8022b66:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022b6a:	fb10 f003 	smulbb	r0, r0, r3
 8022b6e:	10cf      	asrs	r7, r1, #3
 8022b70:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022b74:	00c9      	lsls	r1, r1, #3
 8022b76:	fb05 0504 	mla	r5, r5, r4, r0
 8022b7a:	b2c9      	uxtb	r1, r1
 8022b7c:	10d0      	asrs	r0, r2, #3
 8022b7e:	00d2      	lsls	r2, r2, #3
 8022b80:	fb11 f103 	smulbb	r1, r1, r3
 8022b84:	b2d2      	uxtb	r2, r2
 8022b86:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022b8a:	fb02 1204 	mla	r2, r2, r4, r1
 8022b8e:	fb17 f703 	smulbb	r7, r7, r3
 8022b92:	b2ad      	uxth	r5, r5
 8022b94:	b292      	uxth	r2, r2
 8022b96:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022b9a:	fb00 7004 	mla	r0, r0, r4, r7
 8022b9e:	1c6b      	adds	r3, r5, #1
 8022ba0:	1c57      	adds	r7, r2, #1
 8022ba2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022ba6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8022baa:	b280      	uxth	r0, r0
 8022bac:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8022bb0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022bb4:	433d      	orrs	r5, r7
 8022bb6:	1c47      	adds	r7, r0, #1
 8022bb8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022bbc:	097f      	lsrs	r7, r7, #5
 8022bbe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022bc2:	433d      	orrs	r5, r7
 8022bc4:	f8ae 5000 	strh.w	r5, [lr]
 8022bc8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022bca:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8022bcc:	4413      	add	r3, r2
 8022bce:	9321      	str	r3, [sp, #132]	; 0x84
 8022bd0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8022bd2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022bd4:	441a      	add	r2, r3
 8022bd6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022bd8:	9222      	str	r2, [sp, #136]	; 0x88
 8022bda:	3b01      	subs	r3, #1
 8022bdc:	f10e 0e02 	add.w	lr, lr, #2
 8022be0:	9313      	str	r3, [sp, #76]	; 0x4c
 8022be2:	e61c      	b.n	802281e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8022be4:	fb08 f000 	mul.w	r0, r8, r0
 8022be8:	fb09 0303 	mla	r3, r9, r3, r0
 8022bec:	e6dc      	b.n	80229a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8022bee:	46b9      	mov	r9, r7
 8022bf0:	e704      	b.n	80229fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8022bf2:	f1c2 0110 	rsb	r1, r2, #16
 8022bf6:	437a      	muls	r2, r7
 8022bf8:	fb09 2901 	mla	r9, r9, r1, r2
 8022bfc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8022c00:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022c04:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022c08:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022c0c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022c10:	4302      	orrs	r2, r0
 8022c12:	e795      	b.n	8022b40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8022c14:	f8ae 2000 	strh.w	r2, [lr]
 8022c18:	e7d6      	b.n	8022bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8022c1a:	b017      	add	sp, #92	; 0x5c
 8022c1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022c20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c24:	b085      	sub	sp, #20
 8022c26:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8022c2a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8022c2e:	9103      	str	r1, [sp, #12]
 8022c30:	fb00 7406 	mla	r4, r0, r6, r7
 8022c34:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8022c38:	2800      	cmp	r0, #0
 8022c3a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8022c3e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022c42:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022c46:	9501      	str	r5, [sp, #4]
 8022c48:	eb02 0904 	add.w	r9, r2, r4
 8022c4c:	f2c0 8141 	blt.w	8022ed2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022c50:	4583      	cmp	fp, r0
 8022c52:	f340 813e 	ble.w	8022ed2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8022c56:	2f00      	cmp	r7, #0
 8022c58:	f2c0 8137 	blt.w	8022eca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022c5c:	42be      	cmp	r6, r7
 8022c5e:	f340 8134 	ble.w	8022eca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8022c62:	f812 c004 	ldrb.w	ip, [r2, r4]
 8022c66:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8022c6a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022c6e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022c72:	4355      	muls	r5, r2
 8022c74:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022c78:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022c7c:	fb0c f203 	mul.w	r2, ip, r3
 8022c80:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022c84:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022c88:	441d      	add	r5, r3
 8022c8a:	f102 0320 	add.w	r3, r2, #32
 8022c8e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022c92:	0a1b      	lsrs	r3, r3, #8
 8022c94:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022c98:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022c9c:	431c      	orrs	r4, r3
 8022c9e:	1c7b      	adds	r3, r7, #1
 8022ca0:	f100 811c 	bmi.w	8022edc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022ca4:	429e      	cmp	r6, r3
 8022ca6:	f340 8119 	ble.w	8022edc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8022caa:	2900      	cmp	r1, #0
 8022cac:	f000 8119 	beq.w	8022ee2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8022cb0:	9a01      	ldr	r2, [sp, #4]
 8022cb2:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022cb6:	8855      	ldrh	r5, [r2, #2]
 8022cb8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022cbc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022cc0:	fb08 f802 	mul.w	r8, r8, r2
 8022cc4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022cc8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022ccc:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022cd0:	435d      	muls	r5, r3
 8022cd2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022cd6:	44d0      	add	r8, sl
 8022cd8:	f105 0a20 	add.w	sl, r5, #32
 8022cdc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022ce0:	0a2d      	lsrs	r5, r5, #8
 8022ce2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022ce6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022cea:	432a      	orrs	r2, r5
 8022cec:	3001      	adds	r0, #1
 8022cee:	f100 80fe 	bmi.w	8022eee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022cf2:	4583      	cmp	fp, r0
 8022cf4:	f340 80fb 	ble.w	8022eee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022cf8:	f1be 0f00 	cmp.w	lr, #0
 8022cfc:	f000 80fc 	beq.w	8022ef8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8022d00:	2f00      	cmp	r7, #0
 8022d02:	f2c0 80f1 	blt.w	8022ee8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022d06:	42be      	cmp	r6, r7
 8022d08:	f340 80ee 	ble.w	8022ee8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022d0c:	9801      	ldr	r0, [sp, #4]
 8022d0e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022d12:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022d16:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022d1a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022d1e:	fb0a fa00 	mul.w	sl, sl, r0
 8022d22:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022d26:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022d2a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022d2e:	fb05 f808 	mul.w	r8, r5, r8
 8022d32:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022d36:	4482      	add	sl, r0
 8022d38:	f108 0020 	add.w	r0, r8, #32
 8022d3c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022d40:	0a00      	lsrs	r0, r0, #8
 8022d42:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022d46:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022d4a:	ea4b 0b00 	orr.w	fp, fp, r0
 8022d4e:	3701      	adds	r7, #1
 8022d50:	f100 80d7 	bmi.w	8022f02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022d54:	42be      	cmp	r6, r7
 8022d56:	f340 80d4 	ble.w	8022f02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022d5a:	2900      	cmp	r1, #0
 8022d5c:	f000 80d4 	beq.w	8022f08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022d60:	3601      	adds	r6, #1
 8022d62:	9801      	ldr	r0, [sp, #4]
 8022d64:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022d68:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022d6c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022d70:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022d74:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022d78:	fb09 f906 	mul.w	r9, r9, r6
 8022d7c:	fb07 f800 	mul.w	r8, r7, r0
 8022d80:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022d84:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022d88:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8022d8c:	44d1      	add	r9, sl
 8022d8e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022d92:	f108 0020 	add.w	r0, r8, #32
 8022d96:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022d9a:	0a00      	lsrs	r0, r0, #8
 8022d9c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022da0:	4330      	orrs	r0, r6
 8022da2:	b28e      	uxth	r6, r1
 8022da4:	fa1f f98e 	uxth.w	r9, lr
 8022da8:	fb06 f809 	mul.w	r8, r6, r9
 8022dac:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022db0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022db4:	0136      	lsls	r6, r6, #4
 8022db6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022dba:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022dbe:	9601      	str	r6, [sp, #4]
 8022dc0:	ea4a 0404 	orr.w	r4, sl, r4
 8022dc4:	fa1f f689 	uxth.w	r6, r9
 8022dc8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022dcc:	fb11 f90e 	smulbb	r9, r1, lr
 8022dd0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022dd4:	9602      	str	r6, [sp, #8]
 8022dd6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022dda:	4626      	mov	r6, r4
 8022ddc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022de0:	f1ce 0410 	rsb	r4, lr, #16
 8022de4:	1a64      	subs	r4, r4, r1
 8022de6:	ea4a 0202 	orr.w	r2, sl, r2
 8022dea:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022dee:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022df2:	434a      	muls	r2, r1
 8022df4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022df8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022dfc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022e00:	fb04 2406 	mla	r4, r4, r6, r2
 8022e04:	ea4a 0000 	orr.w	r0, sl, r0
 8022e08:	fb09 4200 	mla	r2, r9, r0, r4
 8022e0c:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022e10:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022e14:	9801      	ldr	r0, [sp, #4]
 8022e16:	9903      	ldr	r1, [sp, #12]
 8022e18:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022e1c:	ea44 0b0b 	orr.w	fp, r4, fp
 8022e20:	9c02      	ldr	r4, [sp, #8]
 8022e22:	8809      	ldrh	r1, [r1, #0]
 8022e24:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8022e28:	1b00      	subs	r0, r0, r4
 8022e2a:	9c01      	ldr	r4, [sp, #4]
 8022e2c:	eba4 0608 	sub.w	r6, r4, r8
 8022e30:	b2b6      	uxth	r6, r6
 8022e32:	b280      	uxth	r0, r0
 8022e34:	4373      	muls	r3, r6
 8022e36:	fb0c 3300 	mla	r3, ip, r0, r3
 8022e3a:	9802      	ldr	r0, [sp, #8]
 8022e3c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022e40:	fb00 3505 	mla	r5, r0, r5, r3
 8022e44:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022e48:	fb08 5707 	mla	r7, r8, r7, r5
 8022e4c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022e50:	120b      	asrs	r3, r1, #8
 8022e52:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022e56:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8022e5a:	b2ff      	uxtb	r7, r7
 8022e5c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022e60:	10c8      	asrs	r0, r1, #3
 8022e62:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022e66:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022e6a:	00c9      	lsls	r1, r1, #3
 8022e6c:	437b      	muls	r3, r7
 8022e6e:	ea42 0e0e 	orr.w	lr, r2, lr
 8022e72:	b2c9      	uxtb	r1, r1
 8022e74:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022e78:	fa1f f28e 	uxth.w	r2, lr
 8022e7c:	4378      	muls	r0, r7
 8022e7e:	434f      	muls	r7, r1
 8022e80:	1c59      	adds	r1, r3, #1
 8022e82:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022e86:	1213      	asrs	r3, r2, #8
 8022e88:	f023 0307 	bic.w	r3, r3, #7
 8022e8c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022e90:	1c41      	adds	r1, r0, #1
 8022e92:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022e96:	10d1      	asrs	r1, r2, #3
 8022e98:	f021 0103 	bic.w	r1, r1, #3
 8022e9c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022ea0:	021b      	lsls	r3, r3, #8
 8022ea2:	00c9      	lsls	r1, r1, #3
 8022ea4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022ea8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8022eac:	430b      	orrs	r3, r1
 8022eae:	1c79      	adds	r1, r7, #1
 8022eb0:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8022eb4:	00d2      	lsls	r2, r2, #3
 8022eb6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8022eba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022ebe:	431a      	orrs	r2, r3
 8022ec0:	9b03      	ldr	r3, [sp, #12]
 8022ec2:	801a      	strh	r2, [r3, #0]
 8022ec4:	b005      	add	sp, #20
 8022ec6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022eca:	f04f 0c00 	mov.w	ip, #0
 8022ece:	4664      	mov	r4, ip
 8022ed0:	e6e5      	b.n	8022c9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8022ed2:	2300      	movs	r3, #0
 8022ed4:	469c      	mov	ip, r3
 8022ed6:	461a      	mov	r2, r3
 8022ed8:	461c      	mov	r4, r3
 8022eda:	e707      	b.n	8022cec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022edc:	2300      	movs	r3, #0
 8022ede:	461a      	mov	r2, r3
 8022ee0:	e704      	b.n	8022cec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022ee2:	460b      	mov	r3, r1
 8022ee4:	460a      	mov	r2, r1
 8022ee6:	e701      	b.n	8022cec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022ee8:	2500      	movs	r5, #0
 8022eea:	46ab      	mov	fp, r5
 8022eec:	e72f      	b.n	8022d4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8022eee:	2700      	movs	r7, #0
 8022ef0:	463d      	mov	r5, r7
 8022ef2:	4638      	mov	r0, r7
 8022ef4:	46bb      	mov	fp, r7
 8022ef6:	e754      	b.n	8022da2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022ef8:	4677      	mov	r7, lr
 8022efa:	4675      	mov	r5, lr
 8022efc:	4670      	mov	r0, lr
 8022efe:	46f3      	mov	fp, lr
 8022f00:	e74f      	b.n	8022da2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022f02:	2700      	movs	r7, #0
 8022f04:	4638      	mov	r0, r7
 8022f06:	e74c      	b.n	8022da2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022f08:	460f      	mov	r7, r1
 8022f0a:	4608      	mov	r0, r1
 8022f0c:	e749      	b.n	8022da2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08022f10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022f10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f14:	b093      	sub	sp, #76	; 0x4c
 8022f16:	9210      	str	r2, [sp, #64]	; 0x40
 8022f18:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8022f1a:	910e      	str	r1, [sp, #56]	; 0x38
 8022f1c:	9306      	str	r3, [sp, #24]
 8022f1e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022f22:	9011      	str	r0, [sp, #68]	; 0x44
 8022f24:	6850      	ldr	r0, [r2, #4]
 8022f26:	6812      	ldr	r2, [r2, #0]
 8022f28:	fb00 1303 	mla	r3, r0, r3, r1
 8022f2c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022f30:	9307      	str	r3, [sp, #28]
 8022f32:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022f34:	681b      	ldr	r3, [r3, #0]
 8022f36:	9308      	str	r3, [sp, #32]
 8022f38:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022f3a:	685b      	ldr	r3, [r3, #4]
 8022f3c:	9309      	str	r3, [sp, #36]	; 0x24
 8022f3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022f40:	2b00      	cmp	r3, #0
 8022f42:	dc03      	bgt.n	8022f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022f44:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022f46:	2b00      	cmp	r3, #0
 8022f48:	f340 83b4 	ble.w	80236b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022f4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022f4e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022f52:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022f56:	1e48      	subs	r0, r1, #1
 8022f58:	1e55      	subs	r5, r2, #1
 8022f5a:	9b06      	ldr	r3, [sp, #24]
 8022f5c:	2b00      	cmp	r3, #0
 8022f5e:	f340 8163 	ble.w	8023228 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8022f62:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8022f64:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022f66:	1436      	asrs	r6, r6, #16
 8022f68:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022f6c:	d406      	bmi.n	8022f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022f6e:	4286      	cmp	r6, r0
 8022f70:	da04      	bge.n	8022f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022f72:	2b00      	cmp	r3, #0
 8022f74:	db02      	blt.n	8022f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022f76:	42ab      	cmp	r3, r5
 8022f78:	f2c0 8157 	blt.w	802322a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8022f7c:	3601      	adds	r6, #1
 8022f7e:	f100 8144 	bmi.w	802320a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022f82:	42b1      	cmp	r1, r6
 8022f84:	f2c0 8141 	blt.w	802320a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022f88:	3301      	adds	r3, #1
 8022f8a:	f100 813e 	bmi.w	802320a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022f8e:	429a      	cmp	r2, r3
 8022f90:	f2c0 813b 	blt.w	802320a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022f94:	9b06      	ldr	r3, [sp, #24]
 8022f96:	9f07      	ldr	r7, [sp, #28]
 8022f98:	930f      	str	r3, [sp, #60]	; 0x3c
 8022f9a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022f9e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022fa0:	2b00      	cmp	r3, #0
 8022fa2:	f340 8164 	ble.w	802326e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8022fa6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022fa8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8022faa:	1418      	asrs	r0, r3, #16
 8022fac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022fae:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8022fb2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022fb4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022fb8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022fba:	142d      	asrs	r5, r5, #16
 8022fbc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022fc0:	f100 81ee 	bmi.w	80233a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022fc4:	f102 3eff 	add.w	lr, r2, #4294967295
 8022fc8:	4575      	cmp	r5, lr
 8022fca:	f280 81e9 	bge.w	80233a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022fce:	2800      	cmp	r0, #0
 8022fd0:	f2c0 81e6 	blt.w	80233a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022fd4:	f103 3eff 	add.w	lr, r3, #4294967295
 8022fd8:	4570      	cmp	r0, lr
 8022fda:	f280 81e1 	bge.w	80233a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022fde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022fe0:	b212      	sxth	r2, r2
 8022fe2:	fb00 5002 	mla	r0, r0, r2, r5
 8022fe6:	fa1f fe81 	uxth.w	lr, r1
 8022fea:	eb03 0a00 	add.w	sl, r3, r0
 8022fee:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8022ff2:	f813 9000 	ldrb.w	r9, [r3, r0]
 8022ff6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022ffa:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8022ffe:	b29b      	uxth	r3, r3
 8023000:	f1bc 0f00 	cmp.w	ip, #0
 8023004:	f000 8179 	beq.w	80232fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8023008:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802300c:	940a      	str	r4, [sp, #40]	; 0x28
 802300e:	eb0a 0b02 	add.w	fp, sl, r2
 8023012:	fa1f fa8c 	uxth.w	sl, ip
 8023016:	fb0a fe0e 	mul.w	lr, sl, lr
 802301a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802301e:	fa1f fa8a 	uxth.w	sl, sl
 8023022:	eba5 050e 	sub.w	r5, r5, lr
 8023026:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802302a:	940b      	str	r4, [sp, #44]	; 0x2c
 802302c:	eba3 030a 	sub.w	r3, r3, sl
 8023030:	b2ad      	uxth	r5, r5
 8023032:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023034:	b29b      	uxth	r3, r3
 8023036:	fb08 f505 	mul.w	r5, r8, r5
 802303a:	fb09 5303 	mla	r3, r9, r3, r5
 802303e:	fb0a 3304 	mla	r3, sl, r4, r3
 8023042:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023044:	fb0e 3304 	mla	r3, lr, r4, r3
 8023048:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802304c:	2b00      	cmp	r3, #0
 802304e:	f000 80cf 	beq.w	80231f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023052:	9c08      	ldr	r4, [sp, #32]
 8023054:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023058:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802305c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023060:	f000 8150 	beq.w	8023304 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8023064:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023068:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802306c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023070:	fb09 f000 	mul.w	r0, r9, r0
 8023074:	fb0a fe0e 	mul.w	lr, sl, lr
 8023078:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802307c:	f100 0b20 	add.w	fp, r0, #32
 8023080:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023084:	44ce      	add	lr, r9
 8023086:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802308a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802308e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023092:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023096:	ea4e 0909 	orr.w	r9, lr, r9
 802309a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802309e:	8868      	ldrh	r0, [r5, #2]
 80230a0:	d019      	beq.n	80230d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80230a2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80230a6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80230aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80230ae:	fb08 f800 	mul.w	r8, r8, r0
 80230b2:	fb0a fe0e 	mul.w	lr, sl, lr
 80230b6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80230ba:	f108 0b20 	add.w	fp, r8, #32
 80230be:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80230c2:	4486      	add	lr, r0
 80230c4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80230c8:	0a00      	lsrs	r0, r0, #8
 80230ca:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80230ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80230d2:	ea4e 0000 	orr.w	r0, lr, r0
 80230d6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80230da:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80230de:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80230e2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80230e6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80230ea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80230ee:	ea4e 0909 	orr.w	r9, lr, r9
 80230f2:	ea4a 0000 	orr.w	r0, sl, r0
 80230f6:	f1bc 0f00 	cmp.w	ip, #0
 80230fa:	f000 8105 	beq.w	8023308 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80230fe:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023102:	3a01      	subs	r2, #1
 8023104:	0052      	lsls	r2, r2, #1
 8023106:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023108:	3202      	adds	r2, #2
 802310a:	2cff      	cmp	r4, #255	; 0xff
 802310c:	eb05 0e02 	add.w	lr, r5, r2
 8023110:	5aaa      	ldrh	r2, [r5, r2]
 8023112:	d018      	beq.n	8023146 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8023114:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8023118:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802311c:	fb04 fa02 	mul.w	sl, r4, r2
 8023120:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023124:	fb08 f805 	mul.w	r8, r8, r5
 8023128:	f10a 0520 	add.w	r5, sl, #32
 802312c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023130:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023134:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023138:	4442      	add	r2, r8
 802313a:	0a2d      	lsrs	r5, r5, #8
 802313c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023140:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023144:	432a      	orrs	r2, r5
 8023146:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023148:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802314c:	2cff      	cmp	r4, #255	; 0xff
 802314e:	d01a      	beq.n	8023186 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8023150:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023154:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023158:	fb04 fa05 	mul.w	sl, r4, r5
 802315c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023160:	fb08 f80e 	mul.w	r8, r8, lr
 8023164:	f10a 0e20 	add.w	lr, sl, #32
 8023168:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802316c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023170:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023174:	4445      	add	r5, r8
 8023176:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802317a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802317e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023182:	ea45 050e 	orr.w	r5, r5, lr
 8023186:	fb1c fe01 	smulbb	lr, ip, r1
 802318a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802318e:	f1cc 0810 	rsb	r8, ip, #16
 8023192:	eba8 0801 	sub.w	r8, r8, r1
 8023196:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802319a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802319e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80231a2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80231a6:	4341      	muls	r1, r0
 80231a8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80231ac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80231b0:	ea4a 0202 	orr.w	r2, sl, r2
 80231b4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80231b8:	fb09 1108 	mla	r1, r9, r8, r1
 80231bc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80231c0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80231c4:	fb0c 1102 	mla	r1, ip, r2, r1
 80231c8:	ea4b 0505 	orr.w	r5, fp, r5
 80231cc:	fb0e 1e05 	mla	lr, lr, r5, r1
 80231d0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80231d4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80231d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80231dc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80231e0:	ea42 0e0e 	orr.w	lr, r2, lr
 80231e4:	fa1f f28e 	uxth.w	r2, lr
 80231e8:	2bff      	cmp	r3, #255	; 0xff
 80231ea:	f040 80a1 	bne.w	8023330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80231ee:	803a      	strh	r2, [r7, #0]
 80231f0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80231f2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80231f4:	4413      	add	r3, r2
 80231f6:	931d      	str	r3, [sp, #116]	; 0x74
 80231f8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80231fa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80231fc:	441a      	add	r2, r3
 80231fe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023200:	921e      	str	r2, [sp, #120]	; 0x78
 8023202:	3b01      	subs	r3, #1
 8023204:	3702      	adds	r7, #2
 8023206:	930f      	str	r3, [sp, #60]	; 0x3c
 8023208:	e6c9      	b.n	8022f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802320a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802320c:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802320e:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8023210:	4433      	add	r3, r6
 8023212:	931d      	str	r3, [sp, #116]	; 0x74
 8023214:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023216:	441c      	add	r4, r3
 8023218:	9b06      	ldr	r3, [sp, #24]
 802321a:	941e      	str	r4, [sp, #120]	; 0x78
 802321c:	3b01      	subs	r3, #1
 802321e:	9306      	str	r3, [sp, #24]
 8023220:	9b07      	ldr	r3, [sp, #28]
 8023222:	3302      	adds	r3, #2
 8023224:	9307      	str	r3, [sp, #28]
 8023226:	e698      	b.n	8022f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023228:	d028      	beq.n	802327c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802322a:	9b06      	ldr	r3, [sp, #24]
 802322c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802322e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8023230:	3b01      	subs	r3, #1
 8023232:	fb00 5003 	mla	r0, r0, r3, r5
 8023236:	1400      	asrs	r0, r0, #16
 8023238:	f53f aeac 	bmi.w	8022f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802323c:	3901      	subs	r1, #1
 802323e:	4288      	cmp	r0, r1
 8023240:	f6bf aea8 	bge.w	8022f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023244:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023246:	981e      	ldr	r0, [sp, #120]	; 0x78
 8023248:	fb01 0303 	mla	r3, r1, r3, r0
 802324c:	141b      	asrs	r3, r3, #16
 802324e:	f53f aea1 	bmi.w	8022f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023252:	3a01      	subs	r2, #1
 8023254:	4293      	cmp	r3, r2
 8023256:	f6bf ae9d 	bge.w	8022f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802325a:	9b06      	ldr	r3, [sp, #24]
 802325c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8023260:	930f      	str	r3, [sp, #60]	; 0x3c
 8023262:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023266:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023268:	2b00      	cmp	r3, #0
 802326a:	f300 80b6 	bgt.w	80233da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802326e:	9b06      	ldr	r3, [sp, #24]
 8023270:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023274:	9b07      	ldr	r3, [sp, #28]
 8023276:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802327a:	9307      	str	r3, [sp, #28]
 802327c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802327e:	2b00      	cmp	r3, #0
 8023280:	f340 8218 	ble.w	80236b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023284:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023288:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802328c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023290:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023292:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023296:	ee31 1a05 	vadd.f32	s2, s2, s10
 802329a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802329e:	eef0 6a62 	vmov.f32	s13, s5
 80232a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80232a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80232aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80232ae:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80232b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80232b6:	eef0 6a43 	vmov.f32	s13, s6
 80232ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80232be:	ee12 2a90 	vmov	r2, s5
 80232c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80232c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80232ca:	ee13 2a10 	vmov	r2, s6
 80232ce:	931f      	str	r3, [sp, #124]	; 0x7c
 80232d0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80232d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80232d6:	9320      	str	r3, [sp, #128]	; 0x80
 80232d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80232da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80232dc:	3b01      	subs	r3, #1
 80232de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80232e2:	930e      	str	r3, [sp, #56]	; 0x38
 80232e4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80232e6:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80232ea:	bf08      	it	eq
 80232ec:	4613      	moveq	r3, r2
 80232ee:	9306      	str	r3, [sp, #24]
 80232f0:	eeb0 3a67 	vmov.f32	s6, s15
 80232f4:	eef0 2a47 	vmov.f32	s5, s14
 80232f8:	e621      	b.n	8022f3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80232fa:	fb08 f505 	mul.w	r5, r8, r5
 80232fe:	fb09 5303 	mla	r3, r9, r3, r5
 8023302:	e6a1      	b.n	8023048 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8023304:	4681      	mov	r9, r0
 8023306:	e6c8      	b.n	802309a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8023308:	f1c1 0210 	rsb	r2, r1, #16
 802330c:	4341      	muls	r1, r0
 802330e:	fb09 1902 	mla	r9, r9, r2, r1
 8023312:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023316:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802331a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802331e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023322:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023326:	ea42 0909 	orr.w	r9, r2, r9
 802332a:	fa1f f289 	uxth.w	r2, r9
 802332e:	e75b      	b.n	80231e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023330:	f8b7 c000 	ldrh.w	ip, [r7]
 8023334:	43db      	mvns	r3, r3
 8023336:	ea4f 202c 	mov.w	r0, ip, asr #8
 802333a:	fa5f fe83 	uxtb.w	lr, r3
 802333e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023342:	fb00 f00e 	mul.w	r0, r0, lr
 8023346:	1c41      	adds	r1, r0, #1
 8023348:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802334c:	1211      	asrs	r1, r2, #8
 802334e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8023352:	f021 0107 	bic.w	r1, r1, #7
 8023356:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802335a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802335e:	48d7      	ldr	r0, [pc, #860]	; (80236bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8023360:	fb05 f50e 	mul.w	r5, r5, lr
 8023364:	b2c9      	uxtb	r1, r1
 8023366:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802336a:	1c69      	adds	r1, r5, #1
 802336c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8023370:	10d1      	asrs	r1, r2, #3
 8023372:	f021 0103 	bic.w	r1, r1, #3
 8023376:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802337a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802337e:	b2db      	uxtb	r3, r3
 8023380:	00c9      	lsls	r1, r1, #3
 8023382:	fb03 f30e 	mul.w	r3, r3, lr
 8023386:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802338a:	4301      	orrs	r1, r0
 802338c:	1c58      	adds	r0, r3, #1
 802338e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8023392:	00d2      	lsls	r2, r2, #3
 8023394:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023398:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802339c:	430a      	orrs	r2, r1
 802339e:	e726      	b.n	80231ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80233a0:	f115 0e01 	adds.w	lr, r5, #1
 80233a4:	f53f af24 	bmi.w	80231f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80233a8:	4572      	cmp	r2, lr
 80233aa:	f6ff af21 	blt.w	80231f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80233ae:	f110 0e01 	adds.w	lr, r0, #1
 80233b2:	f53f af1d 	bmi.w	80231f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80233b6:	4573      	cmp	r3, lr
 80233b8:	f6ff af1a 	blt.w	80231f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80233bc:	b21b      	sxth	r3, r3
 80233be:	b212      	sxth	r2, r2
 80233c0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80233c4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80233c8:	9301      	str	r3, [sp, #4]
 80233ca:	9200      	str	r2, [sp, #0]
 80233cc:	4639      	mov	r1, r7
 80233ce:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80233d2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80233d4:	f7ff fc24 	bl	8022c20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80233d8:	e70a      	b.n	80231f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80233da:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80233dc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80233e0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80233e2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80233e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80233e8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80233ec:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80233ee:	141f      	asrs	r7, r3, #16
 80233f0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80233f2:	141b      	asrs	r3, r3, #16
 80233f4:	fb01 3707 	mla	r7, r1, r7, r3
 80233f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80233fa:	fa1f fc82 	uxth.w	ip, r2
 80233fe:	eb03 0a07 	add.w	sl, r3, r7
 8023402:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023406:	f813 9007 	ldrb.w	r9, [r3, r7]
 802340a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802340e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023412:	b29b      	uxth	r3, r3
 8023414:	2d00      	cmp	r5, #0
 8023416:	f000 80fe 	beq.w	8023616 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 802341a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802341e:	940c      	str	r4, [sp, #48]	; 0x30
 8023420:	eb0a 0b01 	add.w	fp, sl, r1
 8023424:	fa1f fa85 	uxth.w	sl, r5
 8023428:	fb0a fc0c 	mul.w	ip, sl, ip
 802342c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8023430:	fa1f fa8a 	uxth.w	sl, sl
 8023434:	eba0 000c 	sub.w	r0, r0, ip
 8023438:	eba3 030a 	sub.w	r3, r3, sl
 802343c:	b280      	uxth	r0, r0
 802343e:	fb08 f000 	mul.w	r0, r8, r0
 8023442:	b29b      	uxth	r3, r3
 8023444:	fb09 0303 	mla	r3, r9, r3, r0
 8023448:	980c      	ldr	r0, [sp, #48]	; 0x30
 802344a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802344e:	940d      	str	r4, [sp, #52]	; 0x34
 8023450:	fb0a 3300 	mla	r3, sl, r0, r3
 8023454:	fb0c 3304 	mla	r3, ip, r4, r3
 8023458:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802345c:	2b00      	cmp	r3, #0
 802345e:	f000 80cc 	beq.w	80235fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8023462:	9808      	ldr	r0, [sp, #32]
 8023464:	9c08      	ldr	r4, [sp, #32]
 8023466:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802346a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802346e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8023472:	f000 80d5 	beq.w	8023620 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023476:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802347a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802347e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023482:	fb09 f707 	mul.w	r7, r9, r7
 8023486:	fb0a fc0c 	mul.w	ip, sl, ip
 802348a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802348e:	f107 0b20 	add.w	fp, r7, #32
 8023492:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023496:	44cc      	add	ip, r9
 8023498:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802349c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80234a0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80234a4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80234a8:	ea4c 0909 	orr.w	r9, ip, r9
 80234ac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80234b0:	8847      	ldrh	r7, [r0, #2]
 80234b2:	d019      	beq.n	80234e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80234b4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80234b8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80234bc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80234c0:	fb08 f807 	mul.w	r8, r8, r7
 80234c4:	fb0a fc0c 	mul.w	ip, sl, ip
 80234c8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80234cc:	f108 0b20 	add.w	fp, r8, #32
 80234d0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80234d4:	44bc      	add	ip, r7
 80234d6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80234da:	0a3f      	lsrs	r7, r7, #8
 80234dc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80234e0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80234e4:	ea4c 0707 	orr.w	r7, ip, r7
 80234e8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80234ec:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80234f0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80234f4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80234f8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80234fc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023500:	ea4c 0909 	orr.w	r9, ip, r9
 8023504:	ea4a 0707 	orr.w	r7, sl, r7
 8023508:	2d00      	cmp	r5, #0
 802350a:	f000 808b 	beq.w	8023624 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802350e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023512:	3901      	subs	r1, #1
 8023514:	0049      	lsls	r1, r1, #1
 8023516:	3102      	adds	r1, #2
 8023518:	eb00 0c01 	add.w	ip, r0, r1
 802351c:	5a41      	ldrh	r1, [r0, r1]
 802351e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8023520:	28ff      	cmp	r0, #255	; 0xff
 8023522:	d019      	beq.n	8023558 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8023524:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8023526:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802352a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802352e:	fb04 fa01 	mul.w	sl, r4, r1
 8023532:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023536:	fb08 f800 	mul.w	r8, r8, r0
 802353a:	f10a 0020 	add.w	r0, sl, #32
 802353e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8023542:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023546:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802354a:	4441      	add	r1, r8
 802354c:	0a00      	lsrs	r0, r0, #8
 802354e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8023552:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023556:	4301      	orrs	r1, r0
 8023558:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802355a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802355e:	2cff      	cmp	r4, #255	; 0xff
 8023560:	d01a      	beq.n	8023598 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8023562:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023566:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802356a:	fb04 fa00 	mul.w	sl, r4, r0
 802356e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023572:	fb08 f80c 	mul.w	r8, r8, ip
 8023576:	f10a 0c20 	add.w	ip, sl, #32
 802357a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802357e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8023582:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023586:	4440      	add	r0, r8
 8023588:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802358c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8023590:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023594:	ea40 000c 	orr.w	r0, r0, ip
 8023598:	fb15 fc02 	smulbb	ip, r5, r2
 802359c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80235a0:	f1c5 0810 	rsb	r8, r5, #16
 80235a4:	eba8 0802 	sub.w	r8, r8, r2
 80235a8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80235ac:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80235b0:	437a      	muls	r2, r7
 80235b2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80235b6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80235ba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80235be:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80235c2:	fb09 2208 	mla	r2, r9, r8, r2
 80235c6:	ea4a 0101 	orr.w	r1, sl, r1
 80235ca:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80235ce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80235d2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80235d6:	fb05 2201 	mla	r2, r5, r1, r2
 80235da:	ea4b 0000 	orr.w	r0, fp, r0
 80235de:	fb0c 2200 	mla	r2, ip, r0, r2
 80235e2:	0d57      	lsrs	r7, r2, #21
 80235e4:	0952      	lsrs	r2, r2, #5
 80235e6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80235ea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80235ee:	433a      	orrs	r2, r7
 80235f0:	2bff      	cmp	r3, #255	; 0xff
 80235f2:	b292      	uxth	r2, r2
 80235f4:	d127      	bne.n	8023646 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80235f6:	f8ae 2000 	strh.w	r2, [lr]
 80235fa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80235fc:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80235fe:	4413      	add	r3, r2
 8023600:	931d      	str	r3, [sp, #116]	; 0x74
 8023602:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023604:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023606:	441a      	add	r2, r3
 8023608:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802360a:	921e      	str	r2, [sp, #120]	; 0x78
 802360c:	3b01      	subs	r3, #1
 802360e:	f10e 0e02 	add.w	lr, lr, #2
 8023612:	930f      	str	r3, [sp, #60]	; 0x3c
 8023614:	e627      	b.n	8023266 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8023616:	fb08 f000 	mul.w	r0, r8, r0
 802361a:	fb09 0303 	mla	r3, r9, r3, r0
 802361e:	e71b      	b.n	8023458 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8023620:	46b9      	mov	r9, r7
 8023622:	e743      	b.n	80234ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8023624:	f1c2 0110 	rsb	r1, r2, #16
 8023628:	437a      	muls	r2, r7
 802362a:	fb09 2901 	mla	r9, r9, r1, r2
 802362e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023632:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023636:	ea4f 1259 	mov.w	r2, r9, lsr #5
 802363a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802363e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023642:	4302      	orrs	r2, r0
 8023644:	e7d4      	b.n	80235f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8023646:	f8be 7000 	ldrh.w	r7, [lr]
 802364a:	4c1c      	ldr	r4, [pc, #112]	; (80236bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802364c:	43db      	mvns	r3, r3
 802364e:	1238      	asrs	r0, r7, #8
 8023650:	fa5f fc83 	uxtb.w	ip, r3
 8023654:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023658:	10fd      	asrs	r5, r7, #3
 802365a:	fb00 f00c 	mul.w	r0, r0, ip
 802365e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8023662:	fb05 f10c 	mul.w	r1, r5, ip
 8023666:	1c45      	adds	r5, r0, #1
 8023668:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802366c:	1215      	asrs	r5, r2, #8
 802366e:	f025 0507 	bic.w	r5, r5, #7
 8023672:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8023676:	1c4d      	adds	r5, r1, #1
 8023678:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802367c:	10d1      	asrs	r1, r2, #3
 802367e:	f021 0103 	bic.w	r1, r1, #3
 8023682:	00fb      	lsls	r3, r7, #3
 8023684:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8023688:	b2db      	uxtb	r3, r3
 802368a:	b2c0      	uxtb	r0, r0
 802368c:	00c9      	lsls	r1, r1, #3
 802368e:	fb03 f30c 	mul.w	r3, r3, ip
 8023692:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023696:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 802369a:	4308      	orrs	r0, r1
 802369c:	1c59      	adds	r1, r3, #1
 802369e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80236a2:	00d2      	lsls	r2, r2, #3
 80236a4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80236a8:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80236ac:	4318      	orrs	r0, r3
 80236ae:	f8ae 0000 	strh.w	r0, [lr]
 80236b2:	e7a2      	b.n	80235fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80236b4:	b013      	add	sp, #76	; 0x4c
 80236b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80236ba:	bf00      	nop
 80236bc:	fffff800 	.word	0xfffff800

080236c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80236c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80236c4:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 80236c8:	fb05 4c03 	mla	ip, r5, r3, r4
 80236cc:	2d00      	cmp	r5, #0
 80236ce:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80236d2:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80236d6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80236da:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80236de:	8808      	ldrh	r0, [r1, #0]
 80236e0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80236e4:	f2c0 80a7 	blt.w	8023836 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80236e8:	45aa      	cmp	sl, r5
 80236ea:	f340 80a4 	ble.w	8023836 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80236ee:	2c00      	cmp	r4, #0
 80236f0:	f2c0 809f 	blt.w	8023832 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80236f4:	42a3      	cmp	r3, r4
 80236f6:	f340 809c 	ble.w	8023832 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80236fa:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80236fe:	1c62      	adds	r2, r4, #1
 8023700:	f100 809c 	bmi.w	802383c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023704:	4293      	cmp	r3, r2
 8023706:	f340 8099 	ble.w	802383c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802370a:	f1b9 0f00 	cmp.w	r9, #0
 802370e:	f000 8095 	beq.w	802383c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023712:	f8be c002 	ldrh.w	ip, [lr, #2]
 8023716:	3501      	adds	r5, #1
 8023718:	f100 8094 	bmi.w	8023844 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802371c:	45aa      	cmp	sl, r5
 802371e:	f340 8091 	ble.w	8023844 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023722:	2f00      	cmp	r7, #0
 8023724:	f000 808e 	beq.w	8023844 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023728:	2c00      	cmp	r4, #0
 802372a:	f2c0 8089 	blt.w	8023840 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802372e:	42a3      	cmp	r3, r4
 8023730:	f340 8086 	ble.w	8023840 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8023734:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8023738:	3401      	adds	r4, #1
 802373a:	f100 8086 	bmi.w	802384a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802373e:	42a3      	cmp	r3, r4
 8023740:	f340 8083 	ble.w	802384a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023744:	f1b9 0f00 	cmp.w	r9, #0
 8023748:	d07f      	beq.n	802384a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802374a:	3301      	adds	r3, #1
 802374c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8023750:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8023754:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023758:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 802375c:	fb19 fe07 	smulbb	lr, r9, r7
 8023760:	ea44 0808 	orr.w	r8, r4, r8
 8023764:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8023768:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802376c:	f1c7 0210 	rsb	r2, r7, #16
 8023770:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023774:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023778:	ea44 0c0c 	orr.w	ip, r4, ip
 802377c:	eba2 0209 	sub.w	r2, r2, r9
 8023780:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8023784:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8023788:	fb04 f40c 	mul.w	r4, r4, ip
 802378c:	fb02 4808 	mla	r8, r2, r8, r4
 8023790:	041a      	lsls	r2, r3, #16
 8023792:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023796:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802379a:	4313      	orrs	r3, r2
 802379c:	042a      	lsls	r2, r5, #16
 802379e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80237a2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80237a6:	fb0e 8303 	mla	r3, lr, r3, r8
 80237aa:	432a      	orrs	r2, r5
 80237ac:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80237b0:	fb07 3202 	mla	r2, r7, r2, r3
 80237b4:	0d53      	lsrs	r3, r2, #21
 80237b6:	0952      	lsrs	r2, r2, #5
 80237b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80237bc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80237c0:	431a      	orrs	r2, r3
 80237c2:	b293      	uxth	r3, r2
 80237c4:	b2b4      	uxth	r4, r6
 80237c6:	1202      	asrs	r2, r0, #8
 80237c8:	43f6      	mvns	r6, r6
 80237ca:	b2f6      	uxtb	r6, r6
 80237cc:	121d      	asrs	r5, r3, #8
 80237ce:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80237d2:	fb12 f206 	smulbb	r2, r2, r6
 80237d6:	10c7      	asrs	r7, r0, #3
 80237d8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80237dc:	00c0      	lsls	r0, r0, #3
 80237de:	fb05 2504 	mla	r5, r5, r4, r2
 80237e2:	b2c0      	uxtb	r0, r0
 80237e4:	10da      	asrs	r2, r3, #3
 80237e6:	00db      	lsls	r3, r3, #3
 80237e8:	b2db      	uxtb	r3, r3
 80237ea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80237ee:	fb10 f006 	smulbb	r0, r0, r6
 80237f2:	b2ad      	uxth	r5, r5
 80237f4:	fb03 0004 	mla	r0, r3, r4, r0
 80237f8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80237fc:	fb17 f706 	smulbb	r7, r7, r6
 8023800:	b280      	uxth	r0, r0
 8023802:	1c6b      	adds	r3, r5, #1
 8023804:	fb02 7204 	mla	r2, r2, r4, r7
 8023808:	b292      	uxth	r2, r2
 802380a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802380e:	1c43      	adds	r3, r0, #1
 8023810:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8023814:	1c50      	adds	r0, r2, #1
 8023816:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802381a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802381e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023822:	0952      	lsrs	r2, r2, #5
 8023824:	432b      	orrs	r3, r5
 8023826:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802382a:	4313      	orrs	r3, r2
 802382c:	800b      	strh	r3, [r1, #0]
 802382e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023832:	4680      	mov	r8, r0
 8023834:	e763      	b.n	80236fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8023836:	4684      	mov	ip, r0
 8023838:	4680      	mov	r8, r0
 802383a:	e76c      	b.n	8023716 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802383c:	4684      	mov	ip, r0
 802383e:	e76a      	b.n	8023716 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8023840:	4605      	mov	r5, r0
 8023842:	e779      	b.n	8023738 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8023844:	4603      	mov	r3, r0
 8023846:	4605      	mov	r5, r0
 8023848:	e782      	b.n	8023750 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 802384a:	4603      	mov	r3, r0
 802384c:	e780      	b.n	8023750 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802384e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802384e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023852:	b093      	sub	sp, #76	; 0x4c
 8023854:	461d      	mov	r5, r3
 8023856:	9210      	str	r2, [sp, #64]	; 0x40
 8023858:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802385a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802385e:	920b      	str	r2, [sp, #44]	; 0x2c
 8023860:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8023864:	910a      	str	r1, [sp, #40]	; 0x28
 8023866:	6859      	ldr	r1, [r3, #4]
 8023868:	681b      	ldr	r3, [r3, #0]
 802386a:	9011      	str	r0, [sp, #68]	; 0x44
 802386c:	fb01 2707 	mla	r7, r1, r7, r2
 8023870:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8023874:	9307      	str	r3, [sp, #28]
 8023876:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023878:	681b      	ldr	r3, [r3, #0]
 802387a:	9309      	str	r3, [sp, #36]	; 0x24
 802387c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802387e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8023882:	43db      	mvns	r3, r3
 8023884:	b2db      	uxtb	r3, r3
 8023886:	9308      	str	r3, [sp, #32]
 8023888:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802388a:	2b00      	cmp	r3, #0
 802388c:	dc03      	bgt.n	8023896 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802388e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023890:	2b00      	cmp	r3, #0
 8023892:	f340 8203 	ble.w	8023c9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023896:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023898:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802389c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80238a0:	1e48      	subs	r0, r1, #1
 80238a2:	f102 3cff 	add.w	ip, r2, #4294967295
 80238a6:	2d00      	cmp	r5, #0
 80238a8:	f340 80da 	ble.w	8023a60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80238ac:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80238b0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80238b4:	d406      	bmi.n	80238c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80238b6:	4586      	cmp	lr, r0
 80238b8:	da04      	bge.n	80238c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80238ba:	2b00      	cmp	r3, #0
 80238bc:	db02      	blt.n	80238c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80238be:	4563      	cmp	r3, ip
 80238c0:	f2c0 80cf 	blt.w	8023a62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80238c4:	f11e 0e01 	adds.w	lr, lr, #1
 80238c8:	f100 80c1 	bmi.w	8023a4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80238cc:	4571      	cmp	r1, lr
 80238ce:	f2c0 80be 	blt.w	8023a4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80238d2:	3301      	adds	r3, #1
 80238d4:	f100 80bb 	bmi.w	8023a4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80238d8:	429a      	cmp	r2, r3
 80238da:	f2c0 80b8 	blt.w	8023a4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80238de:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80238e2:	46a9      	mov	r9, r5
 80238e4:	f1b9 0f00 	cmp.w	r9, #0
 80238e8:	f340 80d8 	ble.w	8023a9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80238ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80238ee:	1421      	asrs	r1, r4, #16
 80238f0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80238f4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80238f8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80238fc:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023900:	f100 8111 	bmi.w	8023b26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023904:	f10e 3aff 	add.w	sl, lr, #4294967295
 8023908:	4551      	cmp	r1, sl
 802390a:	f280 810c 	bge.w	8023b26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802390e:	2800      	cmp	r0, #0
 8023910:	f2c0 8109 	blt.w	8023b26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023914:	f103 3aff 	add.w	sl, r3, #4294967295
 8023918:	4550      	cmp	r0, sl
 802391a:	f280 8104 	bge.w	8023b26 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802391e:	fa0f f38e 	sxth.w	r3, lr
 8023922:	fb00 1103 	mla	r1, r0, r3, r1
 8023926:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023928:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 802392c:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8023930:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8023934:	f1bc 0f00 	cmp.w	ip, #0
 8023938:	d007      	beq.n	802394a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 802393a:	005b      	lsls	r3, r3, #1
 802393c:	eb0a 0003 	add.w	r0, sl, r3
 8023940:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8023944:	930c      	str	r3, [sp, #48]	; 0x30
 8023946:	8843      	ldrh	r3, [r0, #2]
 8023948:	930d      	str	r3, [sp, #52]	; 0x34
 802394a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802394e:	fb12 f30c 	smulbb	r3, r2, ip
 8023952:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023956:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802395a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802395e:	10db      	asrs	r3, r3, #3
 8023960:	ea40 000e 	orr.w	r0, r0, lr
 8023964:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023968:	f1cc 0e10 	rsb	lr, ip, #16
 802396c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023970:	ebae 0e02 	sub.w	lr, lr, r2
 8023974:	ea4a 0101 	orr.w	r1, sl, r1
 8023978:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802397c:	4351      	muls	r1, r2
 802397e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8023980:	9f08      	ldr	r7, [sp, #32]
 8023982:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023986:	fb0e 1e00 	mla	lr, lr, r0, r1
 802398a:	0410      	lsls	r0, r2, #16
 802398c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023990:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023994:	4310      	orrs	r0, r2
 8023996:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023998:	990c      	ldr	r1, [sp, #48]	; 0x30
 802399a:	0412      	lsls	r2, r2, #16
 802399c:	fb03 e000 	mla	r0, r3, r0, lr
 80239a0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80239a4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80239a8:	ea42 020e 	orr.w	r2, r2, lr
 80239ac:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80239b0:	fb03 0302 	mla	r3, r3, r2, r0
 80239b4:	0d5a      	lsrs	r2, r3, #21
 80239b6:	095b      	lsrs	r3, r3, #5
 80239b8:	f8b8 0000 	ldrh.w	r0, [r8]
 80239bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80239c0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80239c4:	4313      	orrs	r3, r2
 80239c6:	b29b      	uxth	r3, r3
 80239c8:	1201      	asrs	r1, r0, #8
 80239ca:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80239ce:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80239d2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80239d6:	fb11 f107 	smulbb	r1, r1, r7
 80239da:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80239de:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80239e2:	00c0      	lsls	r0, r0, #3
 80239e4:	fb0c 1c02 	mla	ip, ip, r2, r1
 80239e8:	b2c0      	uxtb	r0, r0
 80239ea:	10d9      	asrs	r1, r3, #3
 80239ec:	00db      	lsls	r3, r3, #3
 80239ee:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80239f2:	b2db      	uxtb	r3, r3
 80239f4:	fb10 f007 	smulbb	r0, r0, r7
 80239f8:	fa1f fc8c 	uxth.w	ip, ip
 80239fc:	fb03 0302 	mla	r3, r3, r2, r0
 8023a00:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023a04:	fb1e fe07 	smulbb	lr, lr, r7
 8023a08:	fb01 e102 	mla	r1, r1, r2, lr
 8023a0c:	b29a      	uxth	r2, r3
 8023a0e:	f10c 0301 	add.w	r3, ip, #1
 8023a12:	b289      	uxth	r1, r1
 8023a14:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8023a18:	1c53      	adds	r3, r2, #1
 8023a1a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023a1e:	1c4a      	adds	r2, r1, #1
 8023a20:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023a24:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023a28:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023a2c:	0949      	lsrs	r1, r1, #5
 8023a2e:	ea43 030c 	orr.w	r3, r3, ip
 8023a32:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023a36:	430b      	orrs	r3, r1
 8023a38:	f8a8 3000 	strh.w	r3, [r8]
 8023a3c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023a3e:	441c      	add	r4, r3
 8023a40:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023a42:	f108 0802 	add.w	r8, r8, #2
 8023a46:	441e      	add	r6, r3
 8023a48:	f109 39ff 	add.w	r9, r9, #4294967295
 8023a4c:	e74a      	b.n	80238e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8023a4e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023a50:	441c      	add	r4, r3
 8023a52:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023a54:	441e      	add	r6, r3
 8023a56:	9b07      	ldr	r3, [sp, #28]
 8023a58:	3302      	adds	r3, #2
 8023a5a:	3d01      	subs	r5, #1
 8023a5c:	9307      	str	r3, [sp, #28]
 8023a5e:	e722      	b.n	80238a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023a60:	d022      	beq.n	8023aa8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8023a62:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023a64:	1e6b      	subs	r3, r5, #1
 8023a66:	fb00 4003 	mla	r0, r0, r3, r4
 8023a6a:	1400      	asrs	r0, r0, #16
 8023a6c:	f53f af37 	bmi.w	80238de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023a70:	3901      	subs	r1, #1
 8023a72:	4288      	cmp	r0, r1
 8023a74:	f6bf af33 	bge.w	80238de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023a78:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023a7a:	fb01 6303 	mla	r3, r1, r3, r6
 8023a7e:	141b      	asrs	r3, r3, #16
 8023a80:	f53f af2d 	bmi.w	80238de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023a84:	3a01      	subs	r2, #1
 8023a86:	4293      	cmp	r3, r2
 8023a88:	f6bf af29 	bge.w	80238de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023a8c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8023a90:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8023a94:	46a8      	mov	r8, r5
 8023a96:	f1b8 0f00 	cmp.w	r8, #0
 8023a9a:	dc5e      	bgt.n	8023b5a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8023a9c:	9b07      	ldr	r3, [sp, #28]
 8023a9e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023aa2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023aa6:	9307      	str	r3, [sp, #28]
 8023aa8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023aaa:	2b00      	cmp	r3, #0
 8023aac:	f340 80f6 	ble.w	8023c9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8023ab0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023ab4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023ab8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023abc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023abe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023ac2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023ac6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023aca:	eef0 6a62 	vmov.f32	s13, s5
 8023ace:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023ad2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023ad6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023ada:	ee16 4a90 	vmov	r4, s13
 8023ade:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023ae2:	eef0 6a43 	vmov.f32	s13, s6
 8023ae6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023aea:	ee12 2a90 	vmov	r2, s5
 8023aee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023af2:	fb92 f3f3 	sdiv	r3, r2, r3
 8023af6:	ee13 2a10 	vmov	r2, s6
 8023afa:	931f      	str	r3, [sp, #124]	; 0x7c
 8023afc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023afe:	fb92 f3f3 	sdiv	r3, r2, r3
 8023b02:	9320      	str	r3, [sp, #128]	; 0x80
 8023b04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023b06:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023b08:	3b01      	subs	r3, #1
 8023b0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023b0e:	930a      	str	r3, [sp, #40]	; 0x28
 8023b10:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023b12:	ee16 6a90 	vmov	r6, s13
 8023b16:	bf14      	ite	ne
 8023b18:	461d      	movne	r5, r3
 8023b1a:	4615      	moveq	r5, r2
 8023b1c:	eeb0 3a67 	vmov.f32	s6, s15
 8023b20:	eef0 2a47 	vmov.f32	s5, s14
 8023b24:	e6b0      	b.n	8023888 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023b26:	f111 0a01 	adds.w	sl, r1, #1
 8023b2a:	d487      	bmi.n	8023a3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023b2c:	45d6      	cmp	lr, sl
 8023b2e:	db85      	blt.n	8023a3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023b30:	f110 0a01 	adds.w	sl, r0, #1
 8023b34:	d482      	bmi.n	8023a3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023b36:	4553      	cmp	r3, sl
 8023b38:	db80      	blt.n	8023a3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023b3a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8023b3c:	9101      	str	r1, [sp, #4]
 8023b3e:	b21b      	sxth	r3, r3
 8023b40:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8023b44:	9300      	str	r3, [sp, #0]
 8023b46:	e9cd c704 	strd	ip, r7, [sp, #16]
 8023b4a:	fa0f f38e 	sxth.w	r3, lr
 8023b4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023b50:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023b52:	4641      	mov	r1, r8
 8023b54:	f7ff fdb4 	bl	80236c0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8023b58:	e770      	b.n	8023a3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023b5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023b5c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8023b5e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023b62:	1430      	asrs	r0, r6, #16
 8023b64:	1423      	asrs	r3, r4, #16
 8023b66:	fb01 3000 	mla	r0, r1, r0, r3
 8023b6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023b6c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8023b70:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8023b74:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023b78:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023b7c:	8858      	ldrh	r0, [r3, #2]
 8023b7e:	f1be 0f00 	cmp.w	lr, #0
 8023b82:	d00b      	beq.n	8023b9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8023b84:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023b88:	3901      	subs	r1, #1
 8023b8a:	0049      	lsls	r1, r1, #1
 8023b8c:	3102      	adds	r1, #2
 8023b8e:	eb03 0b01 	add.w	fp, r3, r1
 8023b92:	5a5b      	ldrh	r3, [r3, r1]
 8023b94:	930e      	str	r3, [sp, #56]	; 0x38
 8023b96:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023b9a:	930f      	str	r3, [sp, #60]	; 0x3c
 8023b9c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8023ba0:	fb12 f30e 	smulbb	r3, r2, lr
 8023ba4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023ba8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023bac:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8023bb0:	10db      	asrs	r3, r3, #3
 8023bb2:	ea41 010c 	orr.w	r1, r1, ip
 8023bb6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023bba:	f1ce 0c10 	rsb	ip, lr, #16
 8023bbe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023bc2:	ebac 0c02 	sub.w	ip, ip, r2
 8023bc6:	ea4b 0000 	orr.w	r0, fp, r0
 8023bca:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023bce:	4350      	muls	r0, r2
 8023bd0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023bd2:	9f08      	ldr	r7, [sp, #32]
 8023bd4:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023bd8:	fb0c 0c01 	mla	ip, ip, r1, r0
 8023bdc:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023be0:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8023be4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8023be6:	980e      	ldr	r0, [sp, #56]	; 0x38
 8023be8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023bec:	0412      	lsls	r2, r2, #16
 8023bee:	ea4b 0101 	orr.w	r1, fp, r1
 8023bf2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023bf6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023bfa:	fb03 c101 	mla	r1, r3, r1, ip
 8023bfe:	4302      	orrs	r2, r0
 8023c00:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023c04:	fb03 1202 	mla	r2, r3, r2, r1
 8023c08:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8023c0c:	0952      	lsrs	r2, r2, #5
 8023c0e:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8023c12:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8023c16:	f8b9 2000 	ldrh.w	r2, [r9]
 8023c1a:	ea4b 0303 	orr.w	r3, fp, r3
 8023c1e:	b29b      	uxth	r3, r3
 8023c20:	1211      	asrs	r1, r2, #8
 8023c22:	1218      	asrs	r0, r3, #8
 8023c24:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023c28:	fb11 f107 	smulbb	r1, r1, r7
 8023c2c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8023c30:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023c34:	00d2      	lsls	r2, r2, #3
 8023c36:	fb00 100a 	mla	r0, r0, sl, r1
 8023c3a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8023c3e:	10d9      	asrs	r1, r3, #3
 8023c40:	b2d2      	uxtb	r2, r2
 8023c42:	00db      	lsls	r3, r3, #3
 8023c44:	fb1c fc07 	smulbb	ip, ip, r7
 8023c48:	fb12 f207 	smulbb	r2, r2, r7
 8023c4c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023c50:	b2db      	uxtb	r3, r3
 8023c52:	b280      	uxth	r0, r0
 8023c54:	fb01 c10a 	mla	r1, r1, sl, ip
 8023c58:	fb03 230a 	mla	r3, r3, sl, r2
 8023c5c:	b29b      	uxth	r3, r3
 8023c5e:	b289      	uxth	r1, r1
 8023c60:	1c42      	adds	r2, r0, #1
 8023c62:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023c66:	f101 0c01 	add.w	ip, r1, #1
 8023c6a:	1c5a      	adds	r2, r3, #1
 8023c6c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023c70:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023c74:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023c76:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8023c7a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023c7e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023c82:	4310      	orrs	r0, r2
 8023c84:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023c88:	441c      	add	r4, r3
 8023c8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023c8c:	ea40 000c 	orr.w	r0, r0, ip
 8023c90:	f829 0b02 	strh.w	r0, [r9], #2
 8023c94:	441e      	add	r6, r3
 8023c96:	f108 38ff 	add.w	r8, r8, #4294967295
 8023c9a:	e6fc      	b.n	8023a96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8023c9c:	b013      	add	sp, #76	; 0x4c
 8023c9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023ca2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8023ca2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8023ca6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8023caa:	fb0e 4703 	mla	r7, lr, r3, r4
 8023cae:	f1be 0f00 	cmp.w	lr, #0
 8023cb2:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8023cb6:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8023cba:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8023cbe:	8808      	ldrh	r0, [r1, #0]
 8023cc0:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8023cc4:	db60      	blt.n	8023d88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023cc6:	45f1      	cmp	r9, lr
 8023cc8:	dd5e      	ble.n	8023d88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8023cca:	2c00      	cmp	r4, #0
 8023ccc:	db5a      	blt.n	8023d84 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023cce:	42a3      	cmp	r3, r4
 8023cd0:	dd58      	ble.n	8023d84 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8023cd2:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8023cd6:	1c62      	adds	r2, r4, #1
 8023cd8:	d459      	bmi.n	8023d8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023cda:	4293      	cmp	r3, r2
 8023cdc:	dd57      	ble.n	8023d8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023cde:	2d00      	cmp	r5, #0
 8023ce0:	d055      	beq.n	8023d8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023ce2:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8023ce6:	f11e 0e01 	adds.w	lr, lr, #1
 8023cea:	d454      	bmi.n	8023d96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023cec:	45f1      	cmp	r9, lr
 8023cee:	dd52      	ble.n	8023d96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023cf0:	2e00      	cmp	r6, #0
 8023cf2:	d050      	beq.n	8023d96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023cf4:	2c00      	cmp	r4, #0
 8023cf6:	db4c      	blt.n	8023d92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023cf8:	42a3      	cmp	r3, r4
 8023cfa:	dd4a      	ble.n	8023d92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023cfc:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8023d00:	3401      	adds	r4, #1
 8023d02:	d405      	bmi.n	8023d10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023d04:	42a3      	cmp	r3, r4
 8023d06:	dd03      	ble.n	8023d10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023d08:	b115      	cbz	r5, 8023d10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023d0a:	3301      	adds	r3, #1
 8023d0c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8023d10:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8023d14:	fb15 f406 	smulbb	r4, r5, r6
 8023d18:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023d1c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8023d20:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023d24:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8023d28:	ea43 0c0c 	orr.w	ip, r3, ip
 8023d2c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023d30:	f1c6 0310 	rsb	r3, r6, #16
 8023d34:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023d38:	1b5b      	subs	r3, r3, r5
 8023d3a:	ea4e 0707 	orr.w	r7, lr, r7
 8023d3e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8023d42:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8023d46:	437d      	muls	r5, r7
 8023d48:	fb03 5c0c 	mla	ip, r3, ip, r5
 8023d4c:	0403      	lsls	r3, r0, #16
 8023d4e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023d52:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023d56:	4318      	orrs	r0, r3
 8023d58:	0413      	lsls	r3, r2, #16
 8023d5a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023d5e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023d62:	4313      	orrs	r3, r2
 8023d64:	fb04 c000 	mla	r0, r4, r0, ip
 8023d68:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8023d6c:	fb06 0003 	mla	r0, r6, r3, r0
 8023d70:	0d43      	lsrs	r3, r0, #21
 8023d72:	0940      	lsrs	r0, r0, #5
 8023d74:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023d78:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023d7c:	4318      	orrs	r0, r3
 8023d7e:	8008      	strh	r0, [r1, #0]
 8023d80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8023d84:	4684      	mov	ip, r0
 8023d86:	e7a6      	b.n	8023cd6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8023d88:	4607      	mov	r7, r0
 8023d8a:	4684      	mov	ip, r0
 8023d8c:	e7ab      	b.n	8023ce6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023d8e:	4607      	mov	r7, r0
 8023d90:	e7a9      	b.n	8023ce6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8023d92:	4602      	mov	r2, r0
 8023d94:	e7b4      	b.n	8023d00 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8023d96:	4602      	mov	r2, r0
 8023d98:	e7ba      	b.n	8023d10 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08023d9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023d9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023d9e:	b08f      	sub	sp, #60	; 0x3c
 8023da0:	461d      	mov	r5, r3
 8023da2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023da4:	920c      	str	r2, [sp, #48]	; 0x30
 8023da6:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8023daa:	9107      	str	r1, [sp, #28]
 8023dac:	6859      	ldr	r1, [r3, #4]
 8023dae:	681b      	ldr	r3, [r3, #0]
 8023db0:	900d      	str	r0, [sp, #52]	; 0x34
 8023db2:	fb01 2707 	mla	r7, r1, r7, r2
 8023db6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8023dba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023dbc:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8023dc0:	f8d3 8000 	ldr.w	r8, [r3]
 8023dc4:	9b07      	ldr	r3, [sp, #28]
 8023dc6:	2b00      	cmp	r3, #0
 8023dc8:	dc03      	bgt.n	8023dd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023dca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023dcc:	2b00      	cmp	r3, #0
 8023dce:	f340 8181 	ble.w	80240d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023dd2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023dd4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023dd8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023ddc:	1e48      	subs	r0, r1, #1
 8023dde:	f102 3cff 	add.w	ip, r2, #4294967295
 8023de2:	2d00      	cmp	r5, #0
 8023de4:	f340 809b 	ble.w	8023f1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8023de8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023dec:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023df0:	d406      	bmi.n	8023e00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023df2:	4586      	cmp	lr, r0
 8023df4:	da04      	bge.n	8023e00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023df6:	2b00      	cmp	r3, #0
 8023df8:	db02      	blt.n	8023e00 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023dfa:	4563      	cmp	r3, ip
 8023dfc:	f2c0 8090 	blt.w	8023f20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023e00:	f11e 0e01 	adds.w	lr, lr, #1
 8023e04:	f100 8084 	bmi.w	8023f10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023e08:	4571      	cmp	r1, lr
 8023e0a:	f2c0 8081 	blt.w	8023f10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023e0e:	3301      	adds	r3, #1
 8023e10:	d47e      	bmi.n	8023f10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023e12:	429a      	cmp	r2, r3
 8023e14:	db7c      	blt.n	8023f10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023e16:	46aa      	mov	sl, r5
 8023e18:	46b9      	mov	r9, r7
 8023e1a:	f1ba 0f00 	cmp.w	sl, #0
 8023e1e:	f340 8099 	ble.w	8023f54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8023e22:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023e24:	1421      	asrs	r1, r4, #16
 8023e26:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023e2a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023e2e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023e32:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8023e36:	f100 80d0 	bmi.w	8023fda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023e3a:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023e3e:	4559      	cmp	r1, fp
 8023e40:	f280 80cb 	bge.w	8023fda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023e44:	2800      	cmp	r0, #0
 8023e46:	f2c0 80c8 	blt.w	8023fda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023e4a:	f103 3bff 	add.w	fp, r3, #4294967295
 8023e4e:	4558      	cmp	r0, fp
 8023e50:	f280 80c3 	bge.w	8023fda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023e54:	fa0f fe8e 	sxth.w	lr, lr
 8023e58:	fb00 110e 	mla	r1, r0, lr, r1
 8023e5c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023e60:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8023e64:	8841      	ldrh	r1, [r0, #2]
 8023e66:	f1bc 0f00 	cmp.w	ip, #0
 8023e6a:	d00b      	beq.n	8023e84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8023e6c:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8023e70:	3b01      	subs	r3, #1
 8023e72:	005b      	lsls	r3, r3, #1
 8023e74:	3302      	adds	r3, #2
 8023e76:	eb00 0e03 	add.w	lr, r0, r3
 8023e7a:	5ac3      	ldrh	r3, [r0, r3]
 8023e7c:	9308      	str	r3, [sp, #32]
 8023e7e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8023e82:	9309      	str	r3, [sp, #36]	; 0x24
 8023e84:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8023e88:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023e8c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023e90:	ea40 000b 	orr.w	r0, r0, fp
 8023e94:	fb12 f30c 	smulbb	r3, r2, ip
 8023e98:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023e9c:	10db      	asrs	r3, r3, #3
 8023e9e:	f1cc 0e10 	rsb	lr, ip, #16
 8023ea2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023ea6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023eaa:	ebae 0e02 	sub.w	lr, lr, r2
 8023eae:	ea4b 0101 	orr.w	r1, fp, r1
 8023eb2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023eb6:	4351      	muls	r1, r2
 8023eb8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023eba:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8023ebe:	fb0e 1e00 	mla	lr, lr, r0, r1
 8023ec2:	0410      	lsls	r0, r2, #16
 8023ec4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023ec8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023ecc:	4310      	orrs	r0, r2
 8023ece:	9a08      	ldr	r2, [sp, #32]
 8023ed0:	9908      	ldr	r1, [sp, #32]
 8023ed2:	0412      	lsls	r2, r2, #16
 8023ed4:	fb03 e000 	mla	r0, r3, r0, lr
 8023ed8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023edc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023ee0:	ea42 020e 	orr.w	r2, r2, lr
 8023ee4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023ee8:	fb03 0302 	mla	r3, r3, r2, r0
 8023eec:	0d5a      	lsrs	r2, r3, #21
 8023eee:	095b      	lsrs	r3, r3, #5
 8023ef0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023ef4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023ef8:	4313      	orrs	r3, r2
 8023efa:	f8a9 3000 	strh.w	r3, [r9]
 8023efe:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023f00:	441c      	add	r4, r3
 8023f02:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023f04:	f109 0902 	add.w	r9, r9, #2
 8023f08:	441e      	add	r6, r3
 8023f0a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8023f0e:	e784      	b.n	8023e1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8023f10:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023f12:	441c      	add	r4, r3
 8023f14:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023f16:	3d01      	subs	r5, #1
 8023f18:	441e      	add	r6, r3
 8023f1a:	3702      	adds	r7, #2
 8023f1c:	e761      	b.n	8023de2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023f1e:	d01d      	beq.n	8023f5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8023f20:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023f22:	1e6b      	subs	r3, r5, #1
 8023f24:	fb00 4003 	mla	r0, r0, r3, r4
 8023f28:	1400      	asrs	r0, r0, #16
 8023f2a:	f53f af74 	bmi.w	8023e16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023f2e:	3901      	subs	r1, #1
 8023f30:	4288      	cmp	r0, r1
 8023f32:	f6bf af70 	bge.w	8023e16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023f36:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023f38:	fb01 6303 	mla	r3, r1, r3, r6
 8023f3c:	141b      	asrs	r3, r3, #16
 8023f3e:	f53f af6a 	bmi.w	8023e16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023f42:	3a01      	subs	r2, #1
 8023f44:	4293      	cmp	r3, r2
 8023f46:	f6bf af66 	bge.w	8023e16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023f4a:	46a9      	mov	r9, r5
 8023f4c:	46ba      	mov	sl, r7
 8023f4e:	f1b9 0f00 	cmp.w	r9, #0
 8023f52:	dc5a      	bgt.n	802400a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8023f54:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023f58:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8023f5c:	9b07      	ldr	r3, [sp, #28]
 8023f5e:	2b00      	cmp	r3, #0
 8023f60:	f340 80b8 	ble.w	80240d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023f64:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023f68:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023f6c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023f70:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023f72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023f76:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023f7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023f7e:	eef0 6a62 	vmov.f32	s13, s5
 8023f82:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023f86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023f8a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023f8e:	ee16 4a90 	vmov	r4, s13
 8023f92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023f96:	eef0 6a43 	vmov.f32	s13, s6
 8023f9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023f9e:	ee12 2a90 	vmov	r2, s5
 8023fa2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023fa6:	fb92 f3f3 	sdiv	r3, r2, r3
 8023faa:	ee13 2a10 	vmov	r2, s6
 8023fae:	931b      	str	r3, [sp, #108]	; 0x6c
 8023fb0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023fb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8023fb6:	931c      	str	r3, [sp, #112]	; 0x70
 8023fb8:	9b07      	ldr	r3, [sp, #28]
 8023fba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023fbc:	3b01      	subs	r3, #1
 8023fbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023fc2:	9307      	str	r3, [sp, #28]
 8023fc4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023fc6:	ee16 6a90 	vmov	r6, s13
 8023fca:	bf14      	ite	ne
 8023fcc:	461d      	movne	r5, r3
 8023fce:	4615      	moveq	r5, r2
 8023fd0:	eeb0 3a67 	vmov.f32	s6, s15
 8023fd4:	eef0 2a47 	vmov.f32	s5, s14
 8023fd8:	e6f4      	b.n	8023dc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8023fda:	f111 0b01 	adds.w	fp, r1, #1
 8023fde:	d48e      	bmi.n	8023efe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023fe0:	45de      	cmp	lr, fp
 8023fe2:	db8c      	blt.n	8023efe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023fe4:	f110 0b01 	adds.w	fp, r0, #1
 8023fe8:	d489      	bmi.n	8023efe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023fea:	455b      	cmp	r3, fp
 8023fec:	db87      	blt.n	8023efe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023fee:	b21b      	sxth	r3, r3
 8023ff0:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8023ff4:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8023ff8:	9300      	str	r3, [sp, #0]
 8023ffa:	4642      	mov	r2, r8
 8023ffc:	fa0f f38e 	sxth.w	r3, lr
 8024000:	4649      	mov	r1, r9
 8024002:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024004:	f7ff fe4d 	bl	8023ca2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8024008:	e779      	b.n	8023efe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802400a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802400c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8024010:	1420      	asrs	r0, r4, #16
 8024012:	1431      	asrs	r1, r6, #16
 8024014:	fb03 0101 	mla	r1, r3, r1, r0
 8024018:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802401c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024020:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8024024:	8841      	ldrh	r1, [r0, #2]
 8024026:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802402a:	f1be 0f00 	cmp.w	lr, #0
 802402e:	d00b      	beq.n	8024048 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024030:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8024034:	3b01      	subs	r3, #1
 8024036:	005b      	lsls	r3, r3, #1
 8024038:	3302      	adds	r3, #2
 802403a:	eb00 0b03 	add.w	fp, r0, r3
 802403e:	5ac3      	ldrh	r3, [r0, r3]
 8024040:	930a      	str	r3, [sp, #40]	; 0x28
 8024042:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024046:	930b      	str	r3, [sp, #44]	; 0x2c
 8024048:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802404c:	fb12 f30e 	smulbb	r3, r2, lr
 8024050:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024054:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8024058:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802405c:	10db      	asrs	r3, r3, #3
 802405e:	ea40 000c 	orr.w	r0, r0, ip
 8024062:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024066:	f1ce 0c10 	rsb	ip, lr, #16
 802406a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802406e:	ebac 0c02 	sub.w	ip, ip, r2
 8024072:	ea4b 0101 	orr.w	r1, fp, r1
 8024076:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802407a:	4351      	muls	r1, r2
 802407c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802407e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8024082:	fb0c 1c00 	mla	ip, ip, r0, r1
 8024086:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802408a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802408e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024090:	990a      	ldr	r1, [sp, #40]	; 0x28
 8024092:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024096:	0412      	lsls	r2, r2, #16
 8024098:	ea4b 0000 	orr.w	r0, fp, r0
 802409c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80240a0:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80240a4:	fb03 c000 	mla	r0, r3, r0, ip
 80240a8:	ea42 0b0b 	orr.w	fp, r2, fp
 80240ac:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80240b0:	fb03 000b 	mla	r0, r3, fp, r0
 80240b4:	0d43      	lsrs	r3, r0, #21
 80240b6:	0940      	lsrs	r0, r0, #5
 80240b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80240bc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80240c0:	4318      	orrs	r0, r3
 80240c2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80240c4:	f82a 0b02 	strh.w	r0, [sl], #2
 80240c8:	441c      	add	r4, r3
 80240ca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80240cc:	f109 39ff 	add.w	r9, r9, #4294967295
 80240d0:	441e      	add	r6, r3
 80240d2:	e73c      	b.n	8023f4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80240d4:	b00f      	add	sp, #60	; 0x3c
 80240d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080240da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80240da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80240de:	b085      	sub	sp, #20
 80240e0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80240e4:	9102      	str	r1, [sp, #8]
 80240e6:	2c00      	cmp	r4, #0
 80240e8:	fb04 7103 	mla	r1, r4, r3, r7
 80240ec:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80240f0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80240f4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80240f8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80240fc:	f2c0 811b 	blt.w	8024336 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024100:	45a6      	cmp	lr, r4
 8024102:	f340 8118 	ble.w	8024336 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024106:	2f00      	cmp	r7, #0
 8024108:	f2c0 8113 	blt.w	8024332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802410c:	42bb      	cmp	r3, r7
 802410e:	f340 8110 	ble.w	8024332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024112:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024116:	1c7a      	adds	r2, r7, #1
 8024118:	f100 8110 	bmi.w	802433c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802411c:	4293      	cmp	r3, r2
 802411e:	f340 810d 	ble.w	802433c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024122:	2e00      	cmp	r6, #0
 8024124:	f000 810c 	beq.w	8024340 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8024128:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802412c:	3401      	adds	r4, #1
 802412e:	f100 810b 	bmi.w	8024348 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024132:	45a6      	cmp	lr, r4
 8024134:	f340 8108 	ble.w	8024348 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024138:	2800      	cmp	r0, #0
 802413a:	f000 8108 	beq.w	802434e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802413e:	2f00      	cmp	r7, #0
 8024140:	f2c0 8100 	blt.w	8024344 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024144:	42bb      	cmp	r3, r7
 8024146:	f340 80fd 	ble.w	8024344 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802414a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802414e:	3701      	adds	r7, #1
 8024150:	f100 8100 	bmi.w	8024354 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024154:	42bb      	cmp	r3, r7
 8024156:	f340 80fd 	ble.w	8024354 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802415a:	2e00      	cmp	r6, #0
 802415c:	f000 80fc 	beq.w	8024358 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8024160:	3301      	adds	r3, #1
 8024162:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8024166:	b2b6      	uxth	r6, r6
 8024168:	b280      	uxth	r0, r0
 802416a:	fb00 fe06 	mul.w	lr, r0, r6
 802416e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024172:	0136      	lsls	r6, r6, #4
 8024174:	eba6 070e 	sub.w	r7, r6, lr
 8024178:	b280      	uxth	r0, r0
 802417a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802417e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024182:	b2bf      	uxth	r7, r7
 8024184:	1a1b      	subs	r3, r3, r0
 8024186:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802418a:	b29b      	uxth	r3, r3
 802418c:	fb0a f607 	mul.w	r6, sl, r7
 8024190:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024194:	fb0b 6603 	mla	r6, fp, r3, r6
 8024198:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802419c:	fb00 6609 	mla	r6, r0, r9, r6
 80241a0:	fb0e 6608 	mla	r6, lr, r8, r6
 80241a4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80241a8:	9600      	str	r6, [sp, #0]
 80241aa:	2e00      	cmp	r6, #0
 80241ac:	f000 80be 	beq.w	802432c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80241b0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80241b4:	fb0b fc0c 	mul.w	ip, fp, ip
 80241b8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80241bc:	fb0b f505 	mul.w	r5, fp, r5
 80241c0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80241c4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80241c8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80241cc:	44dc      	add	ip, fp
 80241ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80241d2:	9501      	str	r5, [sp, #4]
 80241d4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80241d8:	9503      	str	r5, [sp, #12]
 80241da:	9d01      	ldr	r5, [sp, #4]
 80241dc:	9e02      	ldr	r6, [sp, #8]
 80241de:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80241e2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80241e6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80241ea:	fb0a fc0c 	mul.w	ip, sl, ip
 80241ee:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80241f2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80241f6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80241fa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80241fe:	4465      	add	r5, ip
 8024200:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024204:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024208:	fb09 fc0c 	mul.w	ip, r9, ip
 802420c:	fb09 f904 	mul.w	r9, r9, r4
 8024210:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024214:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024218:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802421c:	fb08 f404 	mul.w	r4, r8, r4
 8024220:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024224:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024228:	fb08 f802 	mul.w	r8, r8, r2
 802422c:	fb0a fa01 	mul.w	sl, sl, r1
 8024230:	0a22      	lsrs	r2, r4, #8
 8024232:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024236:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802423a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802423e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024242:	4414      	add	r4, r2
 8024244:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024248:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802424c:	0a2d      	lsrs	r5, r5, #8
 802424e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024252:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024256:	9a03      	ldr	r2, [sp, #12]
 8024258:	8836      	ldrh	r6, [r6, #0]
 802425a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802425e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024262:	437d      	muls	r5, r7
 8024264:	4461      	add	r1, ip
 8024266:	0a24      	lsrs	r4, r4, #8
 8024268:	fb02 5503 	mla	r5, r2, r3, r5
 802426c:	0a09      	lsrs	r1, r1, #8
 802426e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024272:	fb04 540e 	mla	r4, r4, lr, r5
 8024276:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802427a:	fb01 4100 	mla	r1, r1, r0, r4
 802427e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024282:	0a09      	lsrs	r1, r1, #8
 8024284:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024288:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802428c:	fb07 f70a 	mul.w	r7, r7, sl
 8024290:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024294:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024298:	fb03 7101 	mla	r1, r3, r1, r7
 802429c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80242a0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80242a4:	fb0e 1e08 	mla	lr, lr, r8, r1
 80242a8:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80242ac:	fb00 e101 	mla	r1, r0, r1, lr
 80242b0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80242b4:	9a00      	ldr	r2, [sp, #0]
 80242b6:	b287      	uxth	r7, r0
 80242b8:	437a      	muls	r2, r7
 80242ba:	0a09      	lsrs	r1, r1, #8
 80242bc:	1c53      	adds	r3, r2, #1
 80242be:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80242c2:	4321      	orrs	r1, r4
 80242c4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80242c8:	1235      	asrs	r5, r6, #8
 80242ca:	0c0a      	lsrs	r2, r1, #16
 80242cc:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80242d0:	b2db      	uxtb	r3, r3
 80242d2:	fb12 f207 	smulbb	r2, r2, r7
 80242d6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80242da:	fb05 2503 	mla	r5, r5, r3, r2
 80242de:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80242e2:	10f2      	asrs	r2, r6, #3
 80242e4:	b2c8      	uxtb	r0, r1
 80242e6:	00f6      	lsls	r6, r6, #3
 80242e8:	fb14 f407 	smulbb	r4, r4, r7
 80242ec:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80242f0:	b2f6      	uxtb	r6, r6
 80242f2:	fb10 f007 	smulbb	r0, r0, r7
 80242f6:	fb02 4203 	mla	r2, r2, r3, r4
 80242fa:	b2ad      	uxth	r5, r5
 80242fc:	fb06 0303 	mla	r3, r6, r3, r0
 8024300:	b299      	uxth	r1, r3
 8024302:	b294      	uxth	r4, r2
 8024304:	1c6b      	adds	r3, r5, #1
 8024306:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802430a:	1c62      	adds	r2, r4, #1
 802430c:	1c4b      	adds	r3, r1, #1
 802430e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024312:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8024316:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802431a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802431e:	0952      	lsrs	r2, r2, #5
 8024320:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024324:	432b      	orrs	r3, r5
 8024326:	4313      	orrs	r3, r2
 8024328:	9a02      	ldr	r2, [sp, #8]
 802432a:	8013      	strh	r3, [r2, #0]
 802432c:	b005      	add	sp, #20
 802432e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024332:	2500      	movs	r5, #0
 8024334:	e6ef      	b.n	8024116 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8024336:	2100      	movs	r1, #0
 8024338:	460d      	mov	r5, r1
 802433a:	e6f7      	b.n	802412c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802433c:	2100      	movs	r1, #0
 802433e:	e6f5      	b.n	802412c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024340:	4631      	mov	r1, r6
 8024342:	e6f3      	b.n	802412c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024344:	2400      	movs	r4, #0
 8024346:	e702      	b.n	802414e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8024348:	2200      	movs	r2, #0
 802434a:	4614      	mov	r4, r2
 802434c:	e70b      	b.n	8024166 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802434e:	4602      	mov	r2, r0
 8024350:	4604      	mov	r4, r0
 8024352:	e708      	b.n	8024166 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024354:	2200      	movs	r2, #0
 8024356:	e706      	b.n	8024166 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024358:	4632      	mov	r2, r6
 802435a:	e704      	b.n	8024166 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0802435c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802435c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024360:	b09d      	sub	sp, #116	; 0x74
 8024362:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8024366:	9219      	str	r2, [sp, #100]	; 0x64
 8024368:	9307      	str	r3, [sp, #28]
 802436a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 802436c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8024370:	931a      	str	r3, [sp, #104]	; 0x68
 8024372:	9117      	str	r1, [sp, #92]	; 0x5c
 8024374:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8024378:	901b      	str	r0, [sp, #108]	; 0x6c
 802437a:	6850      	ldr	r0, [r2, #4]
 802437c:	6812      	ldr	r2, [r2, #0]
 802437e:	fb00 1303 	mla	r3, r0, r3, r1
 8024382:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024386:	930a      	str	r3, [sp, #40]	; 0x28
 8024388:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802438a:	681b      	ldr	r3, [r3, #0]
 802438c:	9310      	str	r3, [sp, #64]	; 0x40
 802438e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8024392:	930b      	str	r3, [sp, #44]	; 0x2c
 8024394:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024396:	2b00      	cmp	r3, #0
 8024398:	dc03      	bgt.n	80243a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802439a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802439c:	2b00      	cmp	r3, #0
 802439e:	f340 8375 	ble.w	8024a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80243a2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80243a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80243a8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80243ac:	1e48      	subs	r0, r1, #1
 80243ae:	1e57      	subs	r7, r2, #1
 80243b0:	9b07      	ldr	r3, [sp, #28]
 80243b2:	2b00      	cmp	r3, #0
 80243b4:	f340 818e 	ble.w	80246d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80243b8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80243bc:	ea4f 4326 	mov.w	r3, r6, asr #16
 80243c0:	d406      	bmi.n	80243d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80243c2:	4584      	cmp	ip, r0
 80243c4:	da04      	bge.n	80243d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80243c6:	2b00      	cmp	r3, #0
 80243c8:	db02      	blt.n	80243d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80243ca:	42bb      	cmp	r3, r7
 80243cc:	f2c0 8183 	blt.w	80246d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80243d0:	f11c 0c01 	adds.w	ip, ip, #1
 80243d4:	f100 8173 	bmi.w	80246be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80243d8:	4561      	cmp	r1, ip
 80243da:	f2c0 8170 	blt.w	80246be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80243de:	3301      	adds	r3, #1
 80243e0:	f100 816d 	bmi.w	80246be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80243e4:	429a      	cmp	r2, r3
 80243e6:	f2c0 816a 	blt.w	80246be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80243ea:	9b07      	ldr	r3, [sp, #28]
 80243ec:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80243ee:	9318      	str	r3, [sp, #96]	; 0x60
 80243f0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80243f2:	2b00      	cmp	r3, #0
 80243f4:	f340 818c 	ble.w	8024710 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80243f8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80243fa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80243fc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024400:	689b      	ldr	r3, [r3, #8]
 8024402:	1422      	asrs	r2, r4, #16
 8024404:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024408:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802440c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024410:	f100 81cd 	bmi.w	80247ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024414:	f103 38ff 	add.w	r8, r3, #4294967295
 8024418:	4542      	cmp	r2, r8
 802441a:	f280 81c8 	bge.w	80247ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802441e:	f1bc 0f00 	cmp.w	ip, #0
 8024422:	f2c0 81c4 	blt.w	80247ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024426:	f10e 38ff 	add.w	r8, lr, #4294967295
 802442a:	45c4      	cmp	ip, r8
 802442c:	f280 81bf 	bge.w	80247ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024430:	b21b      	sxth	r3, r3
 8024432:	fb0c 2203 	mla	r2, ip, r3, r2
 8024436:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024438:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802443c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024440:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024444:	2800      	cmp	r0, #0
 8024446:	f000 81a9 	beq.w	802479c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 802444a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802444e:	950c      	str	r5, [sp, #48]	; 0x30
 8024450:	0e2d      	lsrs	r5, r5, #24
 8024452:	9513      	str	r5, [sp, #76]	; 0x4c
 8024454:	b181      	cbz	r1, 8024478 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024456:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802445a:	3b01      	subs	r3, #1
 802445c:	009b      	lsls	r3, r3, #2
 802445e:	3304      	adds	r3, #4
 8024460:	eb08 0c03 	add.w	ip, r8, r3
 8024464:	f858 3003 	ldr.w	r3, [r8, r3]
 8024468:	9308      	str	r3, [sp, #32]
 802446a:	0e1b      	lsrs	r3, r3, #24
 802446c:	9311      	str	r3, [sp, #68]	; 0x44
 802446e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024472:	930d      	str	r3, [sp, #52]	; 0x34
 8024474:	0e1b      	lsrs	r3, r3, #24
 8024476:	9314      	str	r3, [sp, #80]	; 0x50
 8024478:	b280      	uxth	r0, r0
 802447a:	b289      	uxth	r1, r1
 802447c:	fb00 f901 	mul.w	r9, r0, r1
 8024480:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024484:	0100      	lsls	r0, r0, #4
 8024486:	eba0 0809 	sub.w	r8, r0, r9
 802448a:	b289      	uxth	r1, r1
 802448c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8024490:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8024492:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024494:	fa1f f888 	uxth.w	r8, r8
 8024498:	1a5b      	subs	r3, r3, r1
 802449a:	b29b      	uxth	r3, r3
 802449c:	fb08 f000 	mul.w	r0, r8, r0
 80244a0:	fb03 000e 	mla	r0, r3, lr, r0
 80244a4:	fb01 0005 	mla	r0, r1, r5, r0
 80244a8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80244aa:	fb09 0005 	mla	r0, r9, r5, r0
 80244ae:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80244b2:	2800      	cmp	r0, #0
 80244b4:	f000 80fa 	beq.w	80246ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80244b8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80244bc:	d01b      	beq.n	80244f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80244be:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80244c2:	fb0e fa0a 	mul.w	sl, lr, sl
 80244c6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80244ca:	fb0e fe02 	mul.w	lr, lr, r2
 80244ce:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80244d2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80244d6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80244da:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80244de:	4452      	add	r2, sl
 80244e0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80244e4:	0a12      	lsrs	r2, r2, #8
 80244e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80244ea:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80244ee:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80244f2:	ea42 020c 	orr.w	r2, r2, ip
 80244f6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80244f8:	2dff      	cmp	r5, #255	; 0xff
 80244fa:	d021      	beq.n	8024540 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80244fc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80244fe:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024502:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024504:	fb05 fb0b 	mul.w	fp, r5, fp
 8024508:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802450a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802450e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024510:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024514:	fb05 fa0a 	mul.w	sl, r5, sl
 8024518:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802451c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024520:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024524:	44de      	add	lr, fp
 8024526:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802452a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802452e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024532:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024536:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802453a:	ea4e 050a 	orr.w	r5, lr, sl
 802453e:	950c      	str	r5, [sp, #48]	; 0x30
 8024540:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024542:	2dff      	cmp	r5, #255	; 0xff
 8024544:	d021      	beq.n	802458a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8024546:	9d08      	ldr	r5, [sp, #32]
 8024548:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802454c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802454e:	fb05 fb0b 	mul.w	fp, r5, fp
 8024552:	9d08      	ldr	r5, [sp, #32]
 8024554:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024558:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802455a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802455e:	fb05 fa0a 	mul.w	sl, r5, sl
 8024562:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024566:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802456a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802456e:	44de      	add	lr, fp
 8024570:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024574:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024578:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802457c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024580:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024584:	ea4e 050a 	orr.w	r5, lr, sl
 8024588:	9508      	str	r5, [sp, #32]
 802458a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802458c:	2dff      	cmp	r5, #255	; 0xff
 802458e:	d021      	beq.n	80245d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8024590:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024592:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024596:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024598:	fb05 fb0b 	mul.w	fp, r5, fp
 802459c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802459e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80245a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80245a4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80245a8:	fb05 fa0a 	mul.w	sl, r5, sl
 80245ac:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80245b0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80245b4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80245b8:	44de      	add	lr, fp
 80245ba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80245be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80245c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80245c6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80245ca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80245ce:	ea4e 050a 	orr.w	r5, lr, sl
 80245d2:	950d      	str	r5, [sp, #52]	; 0x34
 80245d4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80245d6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80245da:	9d08      	ldr	r5, [sp, #32]
 80245dc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80245e0:	fb08 fc0c 	mul.w	ip, r8, ip
 80245e4:	fb03 cc0e 	mla	ip, r3, lr, ip
 80245e8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80245ec:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80245ee:	fb01 cc0e 	mla	ip, r1, lr, ip
 80245f2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80245f6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80245f8:	fb09 cc0e 	mla	ip, r9, lr, ip
 80245fc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024600:	fb08 f80e 	mul.w	r8, r8, lr
 8024604:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024608:	fb03 8202 	mla	r2, r3, r2, r8
 802460c:	9b08      	ldr	r3, [sp, #32]
 802460e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024610:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8024614:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024616:	fb01 220a 	mla	r2, r1, sl, r2
 802461a:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 802461e:	fb09 2901 	mla	r9, r9, r1, r2
 8024622:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024624:	883b      	ldrh	r3, [r7, #0]
 8024626:	4342      	muls	r2, r0
 8024628:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802462c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024630:	1c50      	adds	r0, r2, #1
 8024632:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024636:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802463a:	ea4c 0c09 	orr.w	ip, ip, r9
 802463e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8024642:	1219      	asrs	r1, r3, #8
 8024644:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8024648:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802464c:	b2c0      	uxtb	r0, r0
 802464e:	fb12 f205 	smulbb	r2, r2, r5
 8024652:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024656:	fb01 2100 	mla	r1, r1, r0, r2
 802465a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802465e:	10da      	asrs	r2, r3, #3
 8024660:	fa5f fc8c 	uxtb.w	ip, ip
 8024664:	00db      	lsls	r3, r3, #3
 8024666:	fb1c fc05 	smulbb	ip, ip, r5
 802466a:	b2db      	uxtb	r3, r3
 802466c:	b289      	uxth	r1, r1
 802466e:	fb03 c300 	mla	r3, r3, r0, ip
 8024672:	fa1f fc83 	uxth.w	ip, r3
 8024676:	1c4b      	adds	r3, r1, #1
 8024678:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802467c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024680:	fb1e fe05 	smulbb	lr, lr, r5
 8024684:	f10c 0301 	add.w	r3, ip, #1
 8024688:	fb02 e200 	mla	r2, r2, r0, lr
 802468c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8024690:	b292      	uxth	r2, r2
 8024692:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024696:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802469a:	430b      	orrs	r3, r1
 802469c:	1c51      	adds	r1, r2, #1
 802469e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80246a2:	0952      	lsrs	r2, r2, #5
 80246a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80246a8:	4313      	orrs	r3, r2
 80246aa:	803b      	strh	r3, [r7, #0]
 80246ac:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80246ae:	441c      	add	r4, r3
 80246b0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80246b2:	441e      	add	r6, r3
 80246b4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80246b6:	3b01      	subs	r3, #1
 80246b8:	3702      	adds	r7, #2
 80246ba:	9318      	str	r3, [sp, #96]	; 0x60
 80246bc:	e698      	b.n	80243f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80246be:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80246c0:	441c      	add	r4, r3
 80246c2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80246c4:	441e      	add	r6, r3
 80246c6:	9b07      	ldr	r3, [sp, #28]
 80246c8:	3b01      	subs	r3, #1
 80246ca:	9307      	str	r3, [sp, #28]
 80246cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80246ce:	3302      	adds	r3, #2
 80246d0:	930a      	str	r3, [sp, #40]	; 0x28
 80246d2:	e66d      	b.n	80243b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80246d4:	d023      	beq.n	802471e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80246d6:	9b07      	ldr	r3, [sp, #28]
 80246d8:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80246da:	3b01      	subs	r3, #1
 80246dc:	fb00 4003 	mla	r0, r0, r3, r4
 80246e0:	1400      	asrs	r0, r0, #16
 80246e2:	f53f ae82 	bmi.w	80243ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80246e6:	3901      	subs	r1, #1
 80246e8:	4288      	cmp	r0, r1
 80246ea:	f6bf ae7e 	bge.w	80243ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80246ee:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80246f0:	fb01 6303 	mla	r3, r1, r3, r6
 80246f4:	141b      	asrs	r3, r3, #16
 80246f6:	f53f ae78 	bmi.w	80243ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80246fa:	3a01      	subs	r2, #1
 80246fc:	4293      	cmp	r3, r2
 80246fe:	f6bf ae74 	bge.w	80243ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024702:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024706:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 802470a:	f1bb 0f00 	cmp.w	fp, #0
 802470e:	dc6c      	bgt.n	80247ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024710:	9b07      	ldr	r3, [sp, #28]
 8024712:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024716:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024718:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802471c:	930a      	str	r3, [sp, #40]	; 0x28
 802471e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024720:	2b00      	cmp	r3, #0
 8024722:	f340 81b3 	ble.w	8024a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024726:	ee30 0a04 	vadd.f32	s0, s0, s8
 802472a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802472e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024732:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024734:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024738:	ee31 1a05 	vadd.f32	s2, s2, s10
 802473c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024740:	eef0 6a62 	vmov.f32	s13, s5
 8024744:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024748:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802474c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024750:	ee16 4a90 	vmov	r4, s13
 8024754:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024758:	eef0 6a43 	vmov.f32	s13, s6
 802475c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024760:	ee12 2a90 	vmov	r2, s5
 8024764:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024768:	fb92 f3f3 	sdiv	r3, r2, r3
 802476c:	ee13 2a10 	vmov	r2, s6
 8024770:	9329      	str	r3, [sp, #164]	; 0xa4
 8024772:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024774:	fb92 f3f3 	sdiv	r3, r2, r3
 8024778:	932a      	str	r3, [sp, #168]	; 0xa8
 802477a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802477c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802477e:	3b01      	subs	r3, #1
 8024780:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024784:	9317      	str	r3, [sp, #92]	; 0x5c
 8024786:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024788:	bf08      	it	eq
 802478a:	4613      	moveq	r3, r2
 802478c:	ee16 6a90 	vmov	r6, s13
 8024790:	9307      	str	r3, [sp, #28]
 8024792:	eeb0 3a67 	vmov.f32	s6, s15
 8024796:	eef0 2a47 	vmov.f32	s5, s14
 802479a:	e5fb      	b.n	8024394 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802479c:	2900      	cmp	r1, #0
 802479e:	f43f ae6b 	beq.w	8024478 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80247a2:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80247a6:	9308      	str	r3, [sp, #32]
 80247a8:	0e1b      	lsrs	r3, r3, #24
 80247aa:	9311      	str	r3, [sp, #68]	; 0x44
 80247ac:	e664      	b.n	8024478 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80247ae:	f112 0801 	adds.w	r8, r2, #1
 80247b2:	f53f af7b 	bmi.w	80246ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80247b6:	4543      	cmp	r3, r8
 80247b8:	f6ff af78 	blt.w	80246ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80247bc:	f11c 0801 	adds.w	r8, ip, #1
 80247c0:	f53f af74 	bmi.w	80246ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80247c4:	45c6      	cmp	lr, r8
 80247c6:	f6ff af71 	blt.w	80246ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80247ca:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80247cc:	9201      	str	r2, [sp, #4]
 80247ce:	fa0f f28e 	sxth.w	r2, lr
 80247d2:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80247d6:	e9cd c002 	strd	ip, r0, [sp, #8]
 80247da:	9200      	str	r2, [sp, #0]
 80247dc:	b21b      	sxth	r3, r3
 80247de:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80247e0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80247e2:	4639      	mov	r1, r7
 80247e4:	f7ff fc79 	bl	80240da <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80247e8:	e760      	b.n	80246ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80247ea:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80247ec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80247ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80247f2:	1427      	asrs	r7, r4, #16
 80247f4:	1433      	asrs	r3, r6, #16
 80247f6:	fb01 7303 	mla	r3, r1, r3, r7
 80247fa:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80247fe:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024802:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024806:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802480a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802480e:	2a00      	cmp	r2, #0
 8024810:	f000 8133 	beq.w	8024a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8024814:	687d      	ldr	r5, [r7, #4]
 8024816:	950e      	str	r5, [sp, #56]	; 0x38
 8024818:	0e2d      	lsrs	r5, r5, #24
 802481a:	9515      	str	r5, [sp, #84]	; 0x54
 802481c:	b178      	cbz	r0, 802483e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802481e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8024822:	3901      	subs	r1, #1
 8024824:	0089      	lsls	r1, r1, #2
 8024826:	3104      	adds	r1, #4
 8024828:	eb07 0e01 	add.w	lr, r7, r1
 802482c:	5879      	ldr	r1, [r7, r1]
 802482e:	9109      	str	r1, [sp, #36]	; 0x24
 8024830:	0e09      	lsrs	r1, r1, #24
 8024832:	9112      	str	r1, [sp, #72]	; 0x48
 8024834:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024838:	910f      	str	r1, [sp, #60]	; 0x3c
 802483a:	0e09      	lsrs	r1, r1, #24
 802483c:	9116      	str	r1, [sp, #88]	; 0x58
 802483e:	b292      	uxth	r2, r2
 8024840:	b280      	uxth	r0, r0
 8024842:	fb02 f800 	mul.w	r8, r2, r0
 8024846:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802484a:	0112      	lsls	r2, r2, #4
 802484c:	eba2 0e08 	sub.w	lr, r2, r8
 8024850:	b280      	uxth	r0, r0
 8024852:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024856:	9915      	ldr	r1, [sp, #84]	; 0x54
 8024858:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802485a:	fa1f fe8e 	uxth.w	lr, lr
 802485e:	1a12      	subs	r2, r2, r0
 8024860:	b292      	uxth	r2, r2
 8024862:	fb0e f101 	mul.w	r1, lr, r1
 8024866:	fb02 110c 	mla	r1, r2, ip, r1
 802486a:	fb00 1105 	mla	r1, r0, r5, r1
 802486e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024870:	fb08 1105 	mla	r1, r8, r5, r1
 8024874:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024878:	2900      	cmp	r1, #0
 802487a:	f000 80f5 	beq.w	8024a68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802487e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024882:	d019      	beq.n	80248b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8024884:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024888:	fb0c fa0a 	mul.w	sl, ip, sl
 802488c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024890:	fb0c fc03 	mul.w	ip, ip, r3
 8024894:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024898:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802489c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80248a0:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80248a4:	4453      	add	r3, sl
 80248a6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80248aa:	0a1b      	lsrs	r3, r3, #8
 80248ac:	0a3f      	lsrs	r7, r7, #8
 80248ae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80248b2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80248b6:	433b      	orrs	r3, r7
 80248b8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80248ba:	2dff      	cmp	r5, #255	; 0xff
 80248bc:	d020      	beq.n	8024900 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80248be:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80248c0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80248c4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80248c6:	436f      	muls	r7, r5
 80248c8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80248ca:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80248ce:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80248d0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80248d4:	fb05 fa0a 	mul.w	sl, r5, sl
 80248d8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80248dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80248e0:	44bc      	add	ip, r7
 80248e2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80248e6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80248ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80248ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80248f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80248f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80248fa:	ea4c 050a 	orr.w	r5, ip, sl
 80248fe:	950e      	str	r5, [sp, #56]	; 0x38
 8024900:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024902:	2dff      	cmp	r5, #255	; 0xff
 8024904:	d020      	beq.n	8024948 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8024906:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024908:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802490c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802490e:	436f      	muls	r7, r5
 8024910:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024912:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024916:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024918:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802491c:	fb05 fa0a 	mul.w	sl, r5, sl
 8024920:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024924:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024928:	44bc      	add	ip, r7
 802492a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802492e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024932:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024936:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802493a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802493e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024942:	ea4c 050a 	orr.w	r5, ip, sl
 8024946:	9509      	str	r5, [sp, #36]	; 0x24
 8024948:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802494a:	2dff      	cmp	r5, #255	; 0xff
 802494c:	d020      	beq.n	8024990 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802494e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024950:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024954:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024956:	436f      	muls	r7, r5
 8024958:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802495a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802495e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8024960:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024964:	fb05 fa0a 	mul.w	sl, r5, sl
 8024968:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802496c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024970:	44bc      	add	ip, r7
 8024972:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024976:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802497a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802497e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024982:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024986:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802498a:	ea4c 050a 	orr.w	r5, ip, sl
 802498e:	950f      	str	r5, [sp, #60]	; 0x3c
 8024990:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024992:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024996:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024998:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802499c:	fb0e f707 	mul.w	r7, lr, r7
 80249a0:	fb02 770c 	mla	r7, r2, ip, r7
 80249a4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80249a8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80249aa:	fb00 770c 	mla	r7, r0, ip, r7
 80249ae:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80249b2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80249b4:	fb08 770c 	mla	r7, r8, ip, r7
 80249b8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80249bc:	fb0e fe0c 	mul.w	lr, lr, ip
 80249c0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80249c4:	fb02 e303 	mla	r3, r2, r3, lr
 80249c8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80249ca:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80249cc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80249d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80249d2:	fb00 330a 	mla	r3, r0, sl, r3
 80249d6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80249da:	fb08 3c0c 	mla	ip, r8, ip, r3
 80249de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80249e0:	f8b9 0000 	ldrh.w	r0, [r9]
 80249e4:	4359      	muls	r1, r3
 80249e6:	0a3f      	lsrs	r7, r7, #8
 80249e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80249ec:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80249f0:	1c4b      	adds	r3, r1, #1
 80249f2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80249f6:	ea47 070c 	orr.w	r7, r7, ip
 80249fa:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80249fe:	1202      	asrs	r2, r0, #8
 8024a00:	0c3b      	lsrs	r3, r7, #16
 8024a02:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8024a06:	b2c9      	uxtb	r1, r1
 8024a08:	fb13 f305 	smulbb	r3, r3, r5
 8024a0c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024a10:	fb02 3201 	mla	r2, r2, r1, r3
 8024a14:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8024a18:	10c3      	asrs	r3, r0, #3
 8024a1a:	b2ff      	uxtb	r7, r7
 8024a1c:	00c0      	lsls	r0, r0, #3
 8024a1e:	b2c0      	uxtb	r0, r0
 8024a20:	fb17 f705 	smulbb	r7, r7, r5
 8024a24:	fb00 7001 	mla	r0, r0, r1, r7
 8024a28:	b292      	uxth	r2, r2
 8024a2a:	fb1c fc05 	smulbb	ip, ip, r5
 8024a2e:	b280      	uxth	r0, r0
 8024a30:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8024a34:	fb03 c301 	mla	r3, r3, r1, ip
 8024a38:	1c51      	adds	r1, r2, #1
 8024a3a:	f100 0c01 	add.w	ip, r0, #1
 8024a3e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024a42:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8024a46:	b29b      	uxth	r3, r3
 8024a48:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024a4c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024a50:	ea4c 0202 	orr.w	r2, ip, r2
 8024a54:	f103 0c01 	add.w	ip, r3, #1
 8024a58:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024a5c:	095b      	lsrs	r3, r3, #5
 8024a5e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024a62:	431a      	orrs	r2, r3
 8024a64:	f8a9 2000 	strh.w	r2, [r9]
 8024a68:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8024a6a:	441c      	add	r4, r3
 8024a6c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8024a6e:	f109 0902 	add.w	r9, r9, #2
 8024a72:	441e      	add	r6, r3
 8024a74:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024a78:	e647      	b.n	802470a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8024a7a:	2800      	cmp	r0, #0
 8024a7c:	f43f aedf 	beq.w	802483e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024a80:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8024a84:	9109      	str	r1, [sp, #36]	; 0x24
 8024a86:	0e09      	lsrs	r1, r1, #24
 8024a88:	9112      	str	r1, [sp, #72]	; 0x48
 8024a8a:	e6d8      	b.n	802483e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8024a8c:	b01d      	add	sp, #116	; 0x74
 8024a8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024a92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8024a92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024a96:	b085      	sub	sp, #20
 8024a98:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024a9c:	9102      	str	r1, [sp, #8]
 8024a9e:	2c00      	cmp	r4, #0
 8024aa0:	fb04 7103 	mla	r1, r4, r3, r7
 8024aa4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024aa8:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024aac:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024ab0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024ab4:	f2c0 810c 	blt.w	8024cd0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024ab8:	45a6      	cmp	lr, r4
 8024aba:	f340 8109 	ble.w	8024cd0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8024abe:	2f00      	cmp	r7, #0
 8024ac0:	f2c0 8104 	blt.w	8024ccc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024ac4:	42bb      	cmp	r3, r7
 8024ac6:	f340 8101 	ble.w	8024ccc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8024aca:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024ace:	1c7a      	adds	r2, r7, #1
 8024ad0:	f100 8101 	bmi.w	8024cd6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024ad4:	4293      	cmp	r3, r2
 8024ad6:	f340 80fe 	ble.w	8024cd6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8024ada:	2e00      	cmp	r6, #0
 8024adc:	f000 80fd 	beq.w	8024cda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8024ae0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024ae4:	3401      	adds	r4, #1
 8024ae6:	f100 80fc 	bmi.w	8024ce2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024aea:	45a6      	cmp	lr, r4
 8024aec:	f340 80f9 	ble.w	8024ce2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8024af0:	2800      	cmp	r0, #0
 8024af2:	f000 80f9 	beq.w	8024ce8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8024af6:	2f00      	cmp	r7, #0
 8024af8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8024afc:	f2c0 80ef 	blt.w	8024cde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024b00:	42bb      	cmp	r3, r7
 8024b02:	f340 80ec 	ble.w	8024cde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8024b06:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024b0a:	3701      	adds	r7, #1
 8024b0c:	f100 80ef 	bmi.w	8024cee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024b10:	42bb      	cmp	r3, r7
 8024b12:	f340 80ec 	ble.w	8024cee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8024b16:	2e00      	cmp	r6, #0
 8024b18:	f000 80eb 	beq.w	8024cf2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8024b1c:	6852      	ldr	r2, [r2, #4]
 8024b1e:	b2b6      	uxth	r6, r6
 8024b20:	b280      	uxth	r0, r0
 8024b22:	fb00 fe06 	mul.w	lr, r0, r6
 8024b26:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024b2a:	0136      	lsls	r6, r6, #4
 8024b2c:	eba6 070e 	sub.w	r7, r6, lr
 8024b30:	b280      	uxth	r0, r0
 8024b32:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024b36:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024b3a:	b2bf      	uxth	r7, r7
 8024b3c:	1a1b      	subs	r3, r3, r0
 8024b3e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024b42:	b29b      	uxth	r3, r3
 8024b44:	fb07 f60a 	mul.w	r6, r7, sl
 8024b48:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024b4c:	fb0b 6603 	mla	r6, fp, r3, r6
 8024b50:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024b54:	fb00 6609 	mla	r6, r0, r9, r6
 8024b58:	fb0e 6608 	mla	r6, lr, r8, r6
 8024b5c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024b60:	9600      	str	r6, [sp, #0]
 8024b62:	2e00      	cmp	r6, #0
 8024b64:	f000 80af 	beq.w	8024cc6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8024b68:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024b6c:	fb0b fc0c 	mul.w	ip, fp, ip
 8024b70:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024b74:	fb0b f505 	mul.w	r5, fp, r5
 8024b78:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024b7c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024b80:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024b84:	44dc      	add	ip, fp
 8024b86:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b8a:	9501      	str	r5, [sp, #4]
 8024b8c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024b90:	9503      	str	r5, [sp, #12]
 8024b92:	9d01      	ldr	r5, [sp, #4]
 8024b94:	9e02      	ldr	r6, [sp, #8]
 8024b96:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024b9a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024b9e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024ba2:	fb0a fc0c 	mul.w	ip, sl, ip
 8024ba6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024baa:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024bae:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024bb2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024bb6:	4465      	add	r5, ip
 8024bb8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024bbc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024bc0:	fb09 fc0c 	mul.w	ip, r9, ip
 8024bc4:	fb09 f904 	mul.w	r9, r9, r4
 8024bc8:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024bcc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024bd0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024bd4:	fb08 f404 	mul.w	r4, r8, r4
 8024bd8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024bdc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024be0:	fb08 f802 	mul.w	r8, r8, r2
 8024be4:	fb0a fa01 	mul.w	sl, sl, r1
 8024be8:	0a22      	lsrs	r2, r4, #8
 8024bea:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024bee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024bf2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024bf6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024bfa:	4414      	add	r4, r2
 8024bfc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024c00:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024c04:	0a2d      	lsrs	r5, r5, #8
 8024c06:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024c0a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024c0e:	9a03      	ldr	r2, [sp, #12]
 8024c10:	8836      	ldrh	r6, [r6, #0]
 8024c12:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024c16:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024c1a:	437d      	muls	r5, r7
 8024c1c:	4461      	add	r1, ip
 8024c1e:	0a24      	lsrs	r4, r4, #8
 8024c20:	fb02 5503 	mla	r5, r2, r3, r5
 8024c24:	0a09      	lsrs	r1, r1, #8
 8024c26:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024c2a:	fb04 540e 	mla	r4, r4, lr, r5
 8024c2e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024c32:	fb01 4100 	mla	r1, r1, r0, r4
 8024c36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024c3a:	0a09      	lsrs	r1, r1, #8
 8024c3c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024c40:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024c44:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024c48:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024c4c:	fb07 f70a 	mul.w	r7, r7, sl
 8024c50:	fb03 7101 	mla	r1, r3, r1, r7
 8024c54:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024c58:	9b00      	ldr	r3, [sp, #0]
 8024c5a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024c5e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024c62:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024c66:	fb00 e101 	mla	r1, r0, r1, lr
 8024c6a:	43da      	mvns	r2, r3
 8024c6c:	1233      	asrs	r3, r6, #8
 8024c6e:	b2d2      	uxtb	r2, r2
 8024c70:	10f0      	asrs	r0, r6, #3
 8024c72:	0a09      	lsrs	r1, r1, #8
 8024c74:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024c78:	00f6      	lsls	r6, r6, #3
 8024c7a:	4353      	muls	r3, r2
 8024c7c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024c80:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024c84:	b2f6      	uxtb	r6, r6
 8024c86:	4321      	orrs	r1, r4
 8024c88:	4350      	muls	r0, r2
 8024c8a:	4356      	muls	r6, r2
 8024c8c:	1c5a      	adds	r2, r3, #1
 8024c8e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024c92:	0c0b      	lsrs	r3, r1, #16
 8024c94:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024c98:	1c42      	adds	r2, r0, #1
 8024c9a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024c9e:	0a0a      	lsrs	r2, r1, #8
 8024ca0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024ca4:	021b      	lsls	r3, r3, #8
 8024ca6:	00d2      	lsls	r2, r2, #3
 8024ca8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024cac:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024cb0:	4313      	orrs	r3, r2
 8024cb2:	1c72      	adds	r2, r6, #1
 8024cb4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8024cb8:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8024cbc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8024cc0:	4319      	orrs	r1, r3
 8024cc2:	9b02      	ldr	r3, [sp, #8]
 8024cc4:	8019      	strh	r1, [r3, #0]
 8024cc6:	b005      	add	sp, #20
 8024cc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024ccc:	2500      	movs	r5, #0
 8024cce:	e6fe      	b.n	8024ace <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8024cd0:	2100      	movs	r1, #0
 8024cd2:	460d      	mov	r5, r1
 8024cd4:	e706      	b.n	8024ae4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024cd6:	2100      	movs	r1, #0
 8024cd8:	e704      	b.n	8024ae4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024cda:	4631      	mov	r1, r6
 8024cdc:	e702      	b.n	8024ae4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024cde:	2400      	movs	r4, #0
 8024ce0:	e713      	b.n	8024b0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8024ce2:	2200      	movs	r2, #0
 8024ce4:	4614      	mov	r4, r2
 8024ce6:	e71a      	b.n	8024b1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024ce8:	4602      	mov	r2, r0
 8024cea:	4604      	mov	r4, r0
 8024cec:	e717      	b.n	8024b1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024cee:	2200      	movs	r2, #0
 8024cf0:	e715      	b.n	8024b1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024cf2:	4632      	mov	r2, r6
 8024cf4:	e713      	b.n	8024b1e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08024cf8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024cf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024cfc:	b09b      	sub	sp, #108	; 0x6c
 8024cfe:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8024d02:	9218      	str	r2, [sp, #96]	; 0x60
 8024d04:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024d06:	9116      	str	r1, [sp, #88]	; 0x58
 8024d08:	9307      	str	r3, [sp, #28]
 8024d0a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8024d0e:	9019      	str	r0, [sp, #100]	; 0x64
 8024d10:	6850      	ldr	r0, [r2, #4]
 8024d12:	6812      	ldr	r2, [r2, #0]
 8024d14:	fb00 1303 	mla	r3, r0, r3, r1
 8024d18:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024d1c:	930a      	str	r3, [sp, #40]	; 0x28
 8024d1e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024d20:	681b      	ldr	r3, [r3, #0]
 8024d22:	930f      	str	r3, [sp, #60]	; 0x3c
 8024d24:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024d26:	2b00      	cmp	r3, #0
 8024d28:	dc03      	bgt.n	8024d32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024d2a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024d2c:	2b00      	cmp	r3, #0
 8024d2e:	f340 8386 	ble.w	802543e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024d32:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024d34:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024d38:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024d3c:	1e48      	subs	r0, r1, #1
 8024d3e:	1e57      	subs	r7, r2, #1
 8024d40:	9b07      	ldr	r3, [sp, #28]
 8024d42:	2b00      	cmp	r3, #0
 8024d44:	f340 8166 	ble.w	8025014 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024d48:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024d4c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024d50:	d406      	bmi.n	8024d60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024d52:	4584      	cmp	ip, r0
 8024d54:	da04      	bge.n	8024d60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024d56:	2b00      	cmp	r3, #0
 8024d58:	db02      	blt.n	8024d60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024d5a:	42bb      	cmp	r3, r7
 8024d5c:	f2c0 815b 	blt.w	8025016 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024d60:	f11c 0c01 	adds.w	ip, ip, #1
 8024d64:	f100 814b 	bmi.w	8024ffe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024d68:	4561      	cmp	r1, ip
 8024d6a:	f2c0 8148 	blt.w	8024ffe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024d6e:	3301      	adds	r3, #1
 8024d70:	f100 8145 	bmi.w	8024ffe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024d74:	429a      	cmp	r2, r3
 8024d76:	f2c0 8142 	blt.w	8024ffe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024d7a:	9b07      	ldr	r3, [sp, #28]
 8024d7c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024d7e:	9317      	str	r3, [sp, #92]	; 0x5c
 8024d80:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024d82:	2b00      	cmp	r3, #0
 8024d84:	f340 8165 	ble.w	8025052 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024d88:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8024d8a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024d8c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024d90:	689b      	ldr	r3, [r3, #8]
 8024d92:	1422      	asrs	r2, r4, #16
 8024d94:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024d98:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024d9c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024da0:	f100 81d5 	bmi.w	802514e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024da4:	f103 38ff 	add.w	r8, r3, #4294967295
 8024da8:	4542      	cmp	r2, r8
 8024daa:	f280 81d0 	bge.w	802514e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024dae:	f1bc 0f00 	cmp.w	ip, #0
 8024db2:	f2c0 81cc 	blt.w	802514e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024db6:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024dba:	45c4      	cmp	ip, r8
 8024dbc:	f280 81c7 	bge.w	802514e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8024dc0:	b21b      	sxth	r3, r3
 8024dc2:	fb0c 2203 	mla	r2, ip, r3, r2
 8024dc6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024dc8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024dcc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024dd0:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024dd4:	2900      	cmp	r1, #0
 8024dd6:	f000 8182 	beq.w	80250de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8024dda:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8024dde:	950b      	str	r5, [sp, #44]	; 0x2c
 8024de0:	0e2d      	lsrs	r5, r5, #24
 8024de2:	9512      	str	r5, [sp, #72]	; 0x48
 8024de4:	b180      	cbz	r0, 8024e08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024de6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8024dea:	3b01      	subs	r3, #1
 8024dec:	009b      	lsls	r3, r3, #2
 8024dee:	3304      	adds	r3, #4
 8024df0:	eb08 0c03 	add.w	ip, r8, r3
 8024df4:	f858 3003 	ldr.w	r3, [r8, r3]
 8024df8:	9308      	str	r3, [sp, #32]
 8024dfa:	0e1b      	lsrs	r3, r3, #24
 8024dfc:	9310      	str	r3, [sp, #64]	; 0x40
 8024dfe:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024e02:	930c      	str	r3, [sp, #48]	; 0x30
 8024e04:	0e1b      	lsrs	r3, r3, #24
 8024e06:	9313      	str	r3, [sp, #76]	; 0x4c
 8024e08:	b289      	uxth	r1, r1
 8024e0a:	b280      	uxth	r0, r0
 8024e0c:	fb01 f900 	mul.w	r9, r1, r0
 8024e10:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024e14:	0109      	lsls	r1, r1, #4
 8024e16:	eba1 0809 	sub.w	r8, r1, r9
 8024e1a:	b280      	uxth	r0, r0
 8024e1c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8024e20:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8024e22:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024e24:	fa1f f888 	uxth.w	r8, r8
 8024e28:	1a09      	subs	r1, r1, r0
 8024e2a:	b289      	uxth	r1, r1
 8024e2c:	fb08 f303 	mul.w	r3, r8, r3
 8024e30:	fb01 330e 	mla	r3, r1, lr, r3
 8024e34:	fb00 3305 	mla	r3, r0, r5, r3
 8024e38:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024e3a:	fb09 3305 	mla	r3, r9, r5, r3
 8024e3e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024e42:	2b00      	cmp	r3, #0
 8024e44:	f000 80d2 	beq.w	8024fec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024e48:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024e4c:	d01b      	beq.n	8024e86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8024e4e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8024e52:	fb0e fa0a 	mul.w	sl, lr, sl
 8024e56:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024e5a:	fb0e fe02 	mul.w	lr, lr, r2
 8024e5e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024e62:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024e66:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024e6a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024e6e:	4452      	add	r2, sl
 8024e70:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024e74:	0a12      	lsrs	r2, r2, #8
 8024e76:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e7a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024e7e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024e82:	ea42 020c 	orr.w	r2, r2, ip
 8024e86:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024e88:	2dff      	cmp	r5, #255	; 0xff
 8024e8a:	d021      	beq.n	8024ed0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8024e8c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024e8e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024e92:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024e94:	fb05 fb0b 	mul.w	fp, r5, fp
 8024e98:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024e9a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024e9e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024ea0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024ea4:	fb05 fa0a 	mul.w	sl, r5, sl
 8024ea8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024eac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024eb0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024eb4:	44de      	add	lr, fp
 8024eb6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024eba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024ebe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024ec2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024ec6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024eca:	ea4e 050a 	orr.w	r5, lr, sl
 8024ece:	950b      	str	r5, [sp, #44]	; 0x2c
 8024ed0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024ed2:	2dff      	cmp	r5, #255	; 0xff
 8024ed4:	d021      	beq.n	8024f1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024ed6:	9d08      	ldr	r5, [sp, #32]
 8024ed8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024edc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024ede:	fb05 fb0b 	mul.w	fp, r5, fp
 8024ee2:	9d08      	ldr	r5, [sp, #32]
 8024ee4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024ee8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024eea:	fb05 fa0e 	mul.w	sl, r5, lr
 8024eee:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024ef2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024ef6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024efa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024efe:	44de      	add	lr, fp
 8024f00:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024f04:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024f08:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024f0c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024f10:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024f14:	ea4e 050a 	orr.w	r5, lr, sl
 8024f18:	9508      	str	r5, [sp, #32]
 8024f1a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024f1c:	2dff      	cmp	r5, #255	; 0xff
 8024f1e:	d021      	beq.n	8024f64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8024f20:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024f22:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024f26:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024f28:	fb05 fb0b 	mul.w	fp, r5, fp
 8024f2c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024f2e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024f32:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024f34:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024f38:	fb05 fa0a 	mul.w	sl, r5, sl
 8024f3c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024f40:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024f44:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024f48:	44de      	add	lr, fp
 8024f4a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024f4e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024f52:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024f56:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024f5a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024f5e:	ea4e 050a 	orr.w	r5, lr, sl
 8024f62:	950c      	str	r5, [sp, #48]	; 0x30
 8024f64:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024f66:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024f6a:	9d08      	ldr	r5, [sp, #32]
 8024f6c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024f70:	fb08 fc0c 	mul.w	ip, r8, ip
 8024f74:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024f78:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024f7c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024f7e:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024f82:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024f86:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024f88:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024f8c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024f90:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024f94:	fb08 f80e 	mul.w	r8, r8, lr
 8024f98:	fb01 8202 	mla	r2, r1, r2, r8
 8024f9c:	9908      	ldr	r1, [sp, #32]
 8024f9e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024fa2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024fa4:	fb00 220a 	mla	r2, r0, sl, r2
 8024fa8:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8024fac:	fb09 2900 	mla	r9, r9, r0, r2
 8024fb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024fb4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024fb8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024fbc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024fc0:	ea4c 0c09 	orr.w	ip, ip, r9
 8024fc4:	2bff      	cmp	r3, #255	; 0xff
 8024fc6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8024fca:	f040 8091 	bne.w	80250f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8024fce:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8024fd2:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8024fd6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024fda:	f022 0207 	bic.w	r2, r2, #7
 8024fde:	431a      	orrs	r2, r3
 8024fe0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8024fe4:	ea4c 0c02 	orr.w	ip, ip, r2
 8024fe8:	f8a7 c000 	strh.w	ip, [r7]
 8024fec:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024fee:	441c      	add	r4, r3
 8024ff0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024ff2:	441e      	add	r6, r3
 8024ff4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024ff6:	3b01      	subs	r3, #1
 8024ff8:	3702      	adds	r7, #2
 8024ffa:	9317      	str	r3, [sp, #92]	; 0x5c
 8024ffc:	e6c0      	b.n	8024d80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024ffe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025000:	441c      	add	r4, r3
 8025002:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025004:	441e      	add	r6, r3
 8025006:	9b07      	ldr	r3, [sp, #28]
 8025008:	3b01      	subs	r3, #1
 802500a:	9307      	str	r3, [sp, #28]
 802500c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802500e:	3302      	adds	r3, #2
 8025010:	930a      	str	r3, [sp, #40]	; 0x28
 8025012:	e695      	b.n	8024d40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025014:	d024      	beq.n	8025060 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8025016:	9b07      	ldr	r3, [sp, #28]
 8025018:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802501a:	3b01      	subs	r3, #1
 802501c:	fb00 4003 	mla	r0, r0, r3, r4
 8025020:	1400      	asrs	r0, r0, #16
 8025022:	f53f aeaa 	bmi.w	8024d7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025026:	3901      	subs	r1, #1
 8025028:	4288      	cmp	r0, r1
 802502a:	f6bf aea6 	bge.w	8024d7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802502e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8025030:	fb01 6303 	mla	r3, r1, r3, r6
 8025034:	141b      	asrs	r3, r3, #16
 8025036:	f53f aea0 	bmi.w	8024d7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802503a:	3a01      	subs	r2, #1
 802503c:	4293      	cmp	r3, r2
 802503e:	f6bf ae9c 	bge.w	8024d7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025042:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8025046:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 802504a:	f1bb 0f00 	cmp.w	fp, #0
 802504e:	f300 809a 	bgt.w	8025186 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8025052:	9b07      	ldr	r3, [sp, #28]
 8025054:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025058:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802505a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802505e:	930a      	str	r3, [sp, #40]	; 0x28
 8025060:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025062:	2b00      	cmp	r3, #0
 8025064:	f340 81eb 	ble.w	802543e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8025068:	ee30 0a04 	vadd.f32	s0, s0, s8
 802506c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025070:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025074:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025076:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802507a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802507e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025082:	eef0 6a62 	vmov.f32	s13, s5
 8025086:	ee61 7a27 	vmul.f32	s15, s2, s15
 802508a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802508e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025092:	ee16 4a90 	vmov	r4, s13
 8025096:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802509a:	eef0 6a43 	vmov.f32	s13, s6
 802509e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80250a2:	ee12 2a90 	vmov	r2, s5
 80250a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80250aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80250ae:	ee13 2a10 	vmov	r2, s6
 80250b2:	9327      	str	r3, [sp, #156]	; 0x9c
 80250b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80250b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80250ba:	9328      	str	r3, [sp, #160]	; 0xa0
 80250bc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80250be:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80250c0:	3b01      	subs	r3, #1
 80250c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80250c6:	9316      	str	r3, [sp, #88]	; 0x58
 80250c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80250ca:	bf08      	it	eq
 80250cc:	4613      	moveq	r3, r2
 80250ce:	ee16 6a90 	vmov	r6, s13
 80250d2:	9307      	str	r3, [sp, #28]
 80250d4:	eeb0 3a67 	vmov.f32	s6, s15
 80250d8:	eef0 2a47 	vmov.f32	s5, s14
 80250dc:	e622      	b.n	8024d24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80250de:	2800      	cmp	r0, #0
 80250e0:	f43f ae92 	beq.w	8024e08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80250e4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80250e8:	9308      	str	r3, [sp, #32]
 80250ea:	0e1b      	lsrs	r3, r3, #24
 80250ec:	9310      	str	r3, [sp, #64]	; 0x40
 80250ee:	e68b      	b.n	8024e08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80250f0:	8839      	ldrh	r1, [r7, #0]
 80250f2:	4dd4      	ldr	r5, [pc, #848]	; (8025444 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80250f4:	43db      	mvns	r3, r3
 80250f6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80250fa:	fa5f f883 	uxtb.w	r8, r3
 80250fe:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8025102:	fb0e fe08 	mul.w	lr, lr, r8
 8025106:	10c8      	asrs	r0, r1, #3
 8025108:	00cb      	lsls	r3, r1, #3
 802510a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802510e:	f10e 0101 	add.w	r1, lr, #1
 8025112:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8025116:	fb00 f008 	mul.w	r0, r0, r8
 802511a:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802511e:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8025122:	f100 0e01 	add.w	lr, r0, #1
 8025126:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802512a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802512e:	b2db      	uxtb	r3, r3
 8025130:	b2c9      	uxtb	r1, r1
 8025132:	00d2      	lsls	r2, r2, #3
 8025134:	fb03 f308 	mul.w	r3, r3, r8
 8025138:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802513c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025140:	430a      	orrs	r2, r1
 8025142:	1c59      	adds	r1, r3, #1
 8025144:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025148:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802514c:	e748      	b.n	8024fe0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802514e:	f112 0801 	adds.w	r8, r2, #1
 8025152:	f53f af4b 	bmi.w	8024fec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025156:	4543      	cmp	r3, r8
 8025158:	f6ff af48 	blt.w	8024fec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802515c:	f11c 0801 	adds.w	r8, ip, #1
 8025160:	f53f af44 	bmi.w	8024fec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025164:	45c6      	cmp	lr, r8
 8025166:	f6ff af41 	blt.w	8024fec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802516a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802516e:	fa0f f28e 	sxth.w	r2, lr
 8025172:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8025176:	9200      	str	r2, [sp, #0]
 8025178:	b21b      	sxth	r3, r3
 802517a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802517c:	9819      	ldr	r0, [sp, #100]	; 0x64
 802517e:	4639      	mov	r1, r7
 8025180:	f7ff fc87 	bl	8024a92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8025184:	e732      	b.n	8024fec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025186:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025188:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802518a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802518e:	1421      	asrs	r1, r4, #16
 8025190:	1433      	asrs	r3, r6, #16
 8025192:	fb07 1303 	mla	r3, r7, r3, r1
 8025196:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025198:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 802519c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80251a0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80251a4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80251a8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80251ac:	2a00      	cmp	r2, #0
 80251ae:	f000 8107 	beq.w	80253c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80251b2:	684d      	ldr	r5, [r1, #4]
 80251b4:	950d      	str	r5, [sp, #52]	; 0x34
 80251b6:	0e2d      	lsrs	r5, r5, #24
 80251b8:	9514      	str	r5, [sp, #80]	; 0x50
 80251ba:	b178      	cbz	r0, 80251dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80251bc:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80251c0:	3f01      	subs	r7, #1
 80251c2:	00bf      	lsls	r7, r7, #2
 80251c4:	3704      	adds	r7, #4
 80251c6:	eb01 0e07 	add.w	lr, r1, r7
 80251ca:	59c9      	ldr	r1, [r1, r7]
 80251cc:	9109      	str	r1, [sp, #36]	; 0x24
 80251ce:	0e09      	lsrs	r1, r1, #24
 80251d0:	9111      	str	r1, [sp, #68]	; 0x44
 80251d2:	f8de 1004 	ldr.w	r1, [lr, #4]
 80251d6:	910e      	str	r1, [sp, #56]	; 0x38
 80251d8:	0e09      	lsrs	r1, r1, #24
 80251da:	9115      	str	r1, [sp, #84]	; 0x54
 80251dc:	b292      	uxth	r2, r2
 80251de:	b280      	uxth	r0, r0
 80251e0:	fb02 f900 	mul.w	r9, r2, r0
 80251e4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80251e8:	0112      	lsls	r2, r2, #4
 80251ea:	eba2 0e09 	sub.w	lr, r2, r9
 80251ee:	b280      	uxth	r0, r0
 80251f0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80251f4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80251f6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80251f8:	fa1f fe8e 	uxth.w	lr, lr
 80251fc:	1a09      	subs	r1, r1, r0
 80251fe:	b289      	uxth	r1, r1
 8025200:	fb0e f202 	mul.w	r2, lr, r2
 8025204:	fb01 220c 	mla	r2, r1, ip, r2
 8025208:	fb00 2205 	mla	r2, r0, r5, r2
 802520c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802520e:	fb09 2205 	mla	r2, r9, r5, r2
 8025212:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025216:	2a00      	cmp	r2, #0
 8025218:	f000 80c9 	beq.w	80253ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802521c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025220:	d019      	beq.n	8025256 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8025222:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025226:	fb0c fa0a 	mul.w	sl, ip, sl
 802522a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802522e:	fb0c fc03 	mul.w	ip, ip, r3
 8025232:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025236:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802523a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802523e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025242:	4453      	add	r3, sl
 8025244:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025248:	0a1b      	lsrs	r3, r3, #8
 802524a:	0a3f      	lsrs	r7, r7, #8
 802524c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025250:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025254:	433b      	orrs	r3, r7
 8025256:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025258:	2dff      	cmp	r5, #255	; 0xff
 802525a:	d020      	beq.n	802529e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 802525c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802525e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025262:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025264:	436f      	muls	r7, r5
 8025266:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025268:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802526c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802526e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025272:	fb05 fa0a 	mul.w	sl, r5, sl
 8025276:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802527a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802527e:	44bc      	add	ip, r7
 8025280:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025284:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025288:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802528c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025290:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025294:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025298:	ea4c 050a 	orr.w	r5, ip, sl
 802529c:	950d      	str	r5, [sp, #52]	; 0x34
 802529e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80252a0:	2dff      	cmp	r5, #255	; 0xff
 80252a2:	d020      	beq.n	80252e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80252a4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80252a6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80252aa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80252ac:	436f      	muls	r7, r5
 80252ae:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80252b0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80252b4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80252b6:	fb05 fa0c 	mul.w	sl, r5, ip
 80252ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80252be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80252c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80252c6:	44bc      	add	ip, r7
 80252c8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80252cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80252d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80252d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80252d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80252dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80252e0:	ea4c 050a 	orr.w	r5, ip, sl
 80252e4:	9509      	str	r5, [sp, #36]	; 0x24
 80252e6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80252e8:	2dff      	cmp	r5, #255	; 0xff
 80252ea:	d020      	beq.n	802532e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80252ec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80252ee:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80252f2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80252f4:	436f      	muls	r7, r5
 80252f6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80252f8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80252fc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80252fe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025302:	fb05 fa0a 	mul.w	sl, r5, sl
 8025306:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802530a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802530e:	44bc      	add	ip, r7
 8025310:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025314:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025318:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802531c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025320:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025324:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025328:	ea4c 050a 	orr.w	r5, ip, sl
 802532c:	950e      	str	r5, [sp, #56]	; 0x38
 802532e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025330:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025334:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025336:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802533a:	fb0e f707 	mul.w	r7, lr, r7
 802533e:	fb01 770c 	mla	r7, r1, ip, r7
 8025342:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025346:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025348:	fb00 770c 	mla	r7, r0, ip, r7
 802534c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025350:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025352:	fb09 770c 	mla	r7, r9, ip, r7
 8025356:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802535a:	fb0e fe0c 	mul.w	lr, lr, ip
 802535e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025362:	fb01 e303 	mla	r3, r1, r3, lr
 8025366:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025368:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802536c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802536e:	fb00 330a 	mla	r3, r0, sl, r3
 8025372:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8025376:	fb09 3c0c 	mla	ip, r9, ip, r3
 802537a:	0a3f      	lsrs	r7, r7, #8
 802537c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025380:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025384:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025388:	ea47 070c 	orr.w	r7, r7, ip
 802538c:	2aff      	cmp	r2, #255	; 0xff
 802538e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8025392:	d11e      	bne.n	80253d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8025394:	097a      	lsrs	r2, r7, #5
 8025396:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 802539a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802539e:	f023 0307 	bic.w	r3, r3, #7
 80253a2:	4313      	orrs	r3, r2
 80253a4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80253a8:	431f      	orrs	r7, r3
 80253aa:	f8a8 7000 	strh.w	r7, [r8]
 80253ae:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80253b0:	441c      	add	r4, r3
 80253b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80253b4:	f108 0802 	add.w	r8, r8, #2
 80253b8:	441e      	add	r6, r3
 80253ba:	f10b 3bff 	add.w	fp, fp, #4294967295
 80253be:	e644      	b.n	802504a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80253c0:	2800      	cmp	r0, #0
 80253c2:	f43f af0b 	beq.w	80251dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80253c6:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80253ca:	9109      	str	r1, [sp, #36]	; 0x24
 80253cc:	0e09      	lsrs	r1, r1, #24
 80253ce:	9111      	str	r1, [sp, #68]	; 0x44
 80253d0:	e704      	b.n	80251dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80253d2:	f8b8 1000 	ldrh.w	r1, [r8]
 80253d6:	43d2      	mvns	r2, r2
 80253d8:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80253dc:	fa5f fe82 	uxtb.w	lr, r2
 80253e0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80253e4:	fb0c fc0e 	mul.w	ip, ip, lr
 80253e8:	10c8      	asrs	r0, r1, #3
 80253ea:	00ca      	lsls	r2, r1, #3
 80253ec:	f10c 0101 	add.w	r1, ip, #1
 80253f0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80253f4:	0c39      	lsrs	r1, r7, #16
 80253f6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80253fa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80253fe:	4911      	ldr	r1, [pc, #68]	; (8025444 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025400:	fb00 f00e 	mul.w	r0, r0, lr
 8025404:	fa5f fc8c 	uxtb.w	ip, ip
 8025408:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 802540c:	b2d2      	uxtb	r2, r2
 802540e:	1c41      	adds	r1, r0, #1
 8025410:	fb02 f20e 	mul.w	r2, r2, lr
 8025414:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025418:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802541c:	1c51      	adds	r1, r2, #1
 802541e:	00c0      	lsls	r0, r0, #3
 8025420:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025424:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025428:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802542c:	ea4c 0c00 	orr.w	ip, ip, r0
 8025430:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025434:	ea47 0c0c 	orr.w	ip, r7, ip
 8025438:	f8a8 c000 	strh.w	ip, [r8]
 802543c:	e7b7      	b.n	80253ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802543e:	b01b      	add	sp, #108	; 0x6c
 8025440:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025444:	fffff800 	.word	0xfffff800

08025448 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8025448:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802544c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025450:	2d00      	cmp	r5, #0
 8025452:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025456:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802545a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802545e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025462:	fb05 0e03 	mla	lr, r5, r3, r0
 8025466:	f2c0 808c 	blt.w	8025582 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802546a:	45a9      	cmp	r9, r5
 802546c:	f340 8089 	ble.w	8025582 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8025470:	2800      	cmp	r0, #0
 8025472:	f2c0 8084 	blt.w	802557e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8025476:	4580      	cmp	r8, r0
 8025478:	f340 8081 	ble.w	802557e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802547c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025480:	f01e 0f01 	tst.w	lr, #1
 8025484:	5d16      	ldrb	r6, [r2, r4]
 8025486:	bf0c      	ite	eq
 8025488:	f006 060f 	andeq.w	r6, r6, #15
 802548c:	1136      	asrne	r6, r6, #4
 802548e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025492:	b2f6      	uxtb	r6, r6
 8025494:	1c44      	adds	r4, r0, #1
 8025496:	d477      	bmi.n	8025588 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8025498:	45a0      	cmp	r8, r4
 802549a:	dd75      	ble.n	8025588 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802549c:	2f00      	cmp	r7, #0
 802549e:	d075      	beq.n	802558c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80254a0:	f10e 0a01 	add.w	sl, lr, #1
 80254a4:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80254a8:	f01a 0f01 	tst.w	sl, #1
 80254ac:	5d14      	ldrb	r4, [r2, r4]
 80254ae:	bf0c      	ite	eq
 80254b0:	f004 040f 	andeq.w	r4, r4, #15
 80254b4:	1124      	asrne	r4, r4, #4
 80254b6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80254ba:	b2e4      	uxtb	r4, r4
 80254bc:	3501      	adds	r5, #1
 80254be:	d469      	bmi.n	8025594 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80254c0:	45a9      	cmp	r9, r5
 80254c2:	dd67      	ble.n	8025594 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80254c4:	f1bc 0f00 	cmp.w	ip, #0
 80254c8:	d067      	beq.n	802559a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80254ca:	2800      	cmp	r0, #0
 80254cc:	db60      	blt.n	8025590 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80254ce:	4580      	cmp	r8, r0
 80254d0:	dd5e      	ble.n	8025590 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80254d2:	eb03 090e 	add.w	r9, r3, lr
 80254d6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80254da:	f019 0f01 	tst.w	r9, #1
 80254de:	5d55      	ldrb	r5, [r2, r5]
 80254e0:	bf0c      	ite	eq
 80254e2:	f005 050f 	andeq.w	r5, r5, #15
 80254e6:	112d      	asrne	r5, r5, #4
 80254e8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80254ec:	b2ed      	uxtb	r5, r5
 80254ee:	3001      	adds	r0, #1
 80254f0:	d456      	bmi.n	80255a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80254f2:	4580      	cmp	r8, r0
 80254f4:	dd54      	ble.n	80255a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80254f6:	2f00      	cmp	r7, #0
 80254f8:	d054      	beq.n	80255a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80254fa:	3301      	adds	r3, #1
 80254fc:	449e      	add	lr, r3
 80254fe:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025502:	f01e 0f01 	tst.w	lr, #1
 8025506:	5cd0      	ldrb	r0, [r2, r3]
 8025508:	bf0c      	ite	eq
 802550a:	f000 000f 	andeq.w	r0, r0, #15
 802550e:	1100      	asrne	r0, r0, #4
 8025510:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025514:	b2c3      	uxtb	r3, r0
 8025516:	b2ba      	uxth	r2, r7
 8025518:	fa1f fc8c 	uxth.w	ip, ip
 802551c:	fb02 f00c 	mul.w	r0, r2, ip
 8025520:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025524:	0112      	lsls	r2, r2, #4
 8025526:	fa1f fc8c 	uxth.w	ip, ip
 802552a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802552e:	1a12      	subs	r2, r2, r0
 8025530:	eba7 070c 	sub.w	r7, r7, ip
 8025534:	b292      	uxth	r2, r2
 8025536:	b2bf      	uxth	r7, r7
 8025538:	4362      	muls	r2, r4
 802553a:	fb06 2207 	mla	r2, r6, r7, r2
 802553e:	fb0c 2505 	mla	r5, ip, r5, r2
 8025542:	fb00 5303 	mla	r3, r0, r3, r5
 8025546:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802554a:	b1b3      	cbz	r3, 802557a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802554c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8025550:	435a      	muls	r2, r3
 8025552:	1c53      	adds	r3, r2, #1
 8025554:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025558:	4a2d      	ldr	r2, [pc, #180]	; (8025610 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802555a:	121b      	asrs	r3, r3, #8
 802555c:	6812      	ldr	r2, [r2, #0]
 802555e:	2bff      	cmp	r3, #255	; 0xff
 8025560:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8025564:	d120      	bne.n	80255a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8025566:	4b2b      	ldr	r3, [pc, #172]	; (8025614 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8025568:	0950      	lsrs	r0, r2, #5
 802556a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802556e:	4033      	ands	r3, r6
 8025570:	4318      	orrs	r0, r3
 8025572:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025576:	4302      	orrs	r2, r0
 8025578:	800a      	strh	r2, [r1, #0]
 802557a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802557e:	2600      	movs	r6, #0
 8025580:	e788      	b.n	8025494 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8025582:	2400      	movs	r4, #0
 8025584:	4626      	mov	r6, r4
 8025586:	e799      	b.n	80254bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025588:	2400      	movs	r4, #0
 802558a:	e797      	b.n	80254bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802558c:	463c      	mov	r4, r7
 802558e:	e795      	b.n	80254bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025590:	2500      	movs	r5, #0
 8025592:	e7ac      	b.n	80254ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8025594:	2300      	movs	r3, #0
 8025596:	461d      	mov	r5, r3
 8025598:	e7bd      	b.n	8025516 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802559a:	4663      	mov	r3, ip
 802559c:	4665      	mov	r5, ip
 802559e:	e7ba      	b.n	8025516 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80255a0:	2300      	movs	r3, #0
 80255a2:	e7b8      	b.n	8025516 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80255a4:	463b      	mov	r3, r7
 80255a6:	e7b6      	b.n	8025516 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80255a8:	880d      	ldrh	r5, [r1, #0]
 80255aa:	b29f      	uxth	r7, r3
 80255ac:	122c      	asrs	r4, r5, #8
 80255ae:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80255b2:	43db      	mvns	r3, r3
 80255b4:	b2db      	uxtb	r3, r3
 80255b6:	fb10 f007 	smulbb	r0, r0, r7
 80255ba:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80255be:	fb04 0403 	mla	r4, r4, r3, r0
 80255c2:	b2f6      	uxtb	r6, r6
 80255c4:	10e8      	asrs	r0, r5, #3
 80255c6:	b2d2      	uxtb	r2, r2
 80255c8:	00ed      	lsls	r5, r5, #3
 80255ca:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80255ce:	fb12 f207 	smulbb	r2, r2, r7
 80255d2:	fb16 f607 	smulbb	r6, r6, r7
 80255d6:	b2ed      	uxtb	r5, r5
 80255d8:	b2a4      	uxth	r4, r4
 80255da:	fb00 6603 	mla	r6, r0, r3, r6
 80255de:	fb05 2303 	mla	r3, r5, r3, r2
 80255e2:	b29a      	uxth	r2, r3
 80255e4:	1c63      	adds	r3, r4, #1
 80255e6:	b2b0      	uxth	r0, r6
 80255e8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80255ec:	1c53      	adds	r3, r2, #1
 80255ee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80255f2:	1c42      	adds	r2, r0, #1
 80255f4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80255f8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80255fc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025600:	0940      	lsrs	r0, r0, #5
 8025602:	4323      	orrs	r3, r4
 8025604:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025608:	4303      	orrs	r3, r0
 802560a:	800b      	strh	r3, [r1, #0]
 802560c:	e7b5      	b.n	802557a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802560e:	bf00      	nop
 8025610:	20012dc4 	.word	0x20012dc4
 8025614:	00fff800 	.word	0x00fff800

08025618 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802561c:	b097      	sub	sp, #92	; 0x5c
 802561e:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8025622:	9214      	str	r2, [sp, #80]	; 0x50
 8025624:	9309      	str	r3, [sp, #36]	; 0x24
 8025626:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8025628:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 802562c:	910d      	str	r1, [sp, #52]	; 0x34
 802562e:	930f      	str	r3, [sp, #60]	; 0x3c
 8025630:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8025634:	9015      	str	r0, [sp, #84]	; 0x54
 8025636:	6850      	ldr	r0, [r2, #4]
 8025638:	6812      	ldr	r2, [r2, #0]
 802563a:	fb00 1303 	mla	r3, r0, r3, r1
 802563e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025642:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025644:	689b      	ldr	r3, [r3, #8]
 8025646:	3301      	adds	r3, #1
 8025648:	f023 0301 	bic.w	r3, r3, #1
 802564c:	930a      	str	r3, [sp, #40]	; 0x28
 802564e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025650:	681f      	ldr	r7, [r3, #0]
 8025652:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025654:	2b00      	cmp	r3, #0
 8025656:	dc03      	bgt.n	8025660 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025658:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802565a:	2b00      	cmp	r3, #0
 802565c:	f340 8287 	ble.w	8025b6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025660:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025662:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025666:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802566a:	1e48      	subs	r0, r1, #1
 802566c:	f102 3cff 	add.w	ip, r2, #4294967295
 8025670:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025672:	2b00      	cmp	r3, #0
 8025674:	f340 80c4 	ble.w	8025800 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8025678:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802567c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025680:	d406      	bmi.n	8025690 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025682:	4586      	cmp	lr, r0
 8025684:	da04      	bge.n	8025690 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025686:	2b00      	cmp	r3, #0
 8025688:	db02      	blt.n	8025690 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802568a:	4563      	cmp	r3, ip
 802568c:	f2c0 80b9 	blt.w	8025802 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8025690:	f11e 0e01 	adds.w	lr, lr, #1
 8025694:	f100 80aa 	bmi.w	80257ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8025698:	4571      	cmp	r1, lr
 802569a:	f2c0 80a7 	blt.w	80257ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802569e:	3301      	adds	r3, #1
 80256a0:	f100 80a4 	bmi.w	80257ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80256a4:	429a      	cmp	r2, r3
 80256a6:	f2c0 80a1 	blt.w	80257ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80256aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80256ac:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80256b0:	930e      	str	r3, [sp, #56]	; 0x38
 80256b2:	46c8      	mov	r8, r9
 80256b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80256b6:	2b00      	cmp	r3, #0
 80256b8:	f340 80c3 	ble.w	8025842 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80256bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80256be:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80256c2:	1423      	asrs	r3, r4, #16
 80256c4:	ea4f 4026 	mov.w	r0, r6, asr #16
 80256c8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80256cc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80256d0:	f100 814d 	bmi.w	802596e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80256d4:	f10c 3bff 	add.w	fp, ip, #4294967295
 80256d8:	455b      	cmp	r3, fp
 80256da:	f280 8148 	bge.w	802596e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80256de:	2800      	cmp	r0, #0
 80256e0:	f2c0 8145 	blt.w	802596e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80256e4:	f10e 3bff 	add.w	fp, lr, #4294967295
 80256e8:	4558      	cmp	r0, fp
 80256ea:	f280 8140 	bge.w	802596e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80256ee:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80256f0:	fb00 3305 	mla	r3, r0, r5, r3
 80256f4:	0858      	lsrs	r0, r3, #1
 80256f6:	07dd      	lsls	r5, r3, #31
 80256f8:	f817 c000 	ldrb.w	ip, [r7, r0]
 80256fc:	bf54      	ite	pl
 80256fe:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025702:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025706:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802570a:	fa5f fc8c 	uxtb.w	ip, ip
 802570e:	2a00      	cmp	r2, #0
 8025710:	f000 80db 	beq.w	80258ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8025714:	1c58      	adds	r0, r3, #1
 8025716:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802571a:	07c0      	lsls	r0, r0, #31
 802571c:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025720:	bf54      	ite	pl
 8025722:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025726:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802572a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802572e:	fa5f f08e 	uxtb.w	r0, lr
 8025732:	9010      	str	r0, [sp, #64]	; 0x40
 8025734:	b1c9      	cbz	r1, 802576a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8025736:	4453      	add	r3, sl
 8025738:	0858      	lsrs	r0, r3, #1
 802573a:	07dd      	lsls	r5, r3, #31
 802573c:	5c38      	ldrb	r0, [r7, r0]
 802573e:	bf54      	ite	pl
 8025740:	f000 000f 	andpl.w	r0, r0, #15
 8025744:	1100      	asrmi	r0, r0, #4
 8025746:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802574a:	3301      	adds	r3, #1
 802574c:	b2c0      	uxtb	r0, r0
 802574e:	900b      	str	r0, [sp, #44]	; 0x2c
 8025750:	0858      	lsrs	r0, r3, #1
 8025752:	07dd      	lsls	r5, r3, #31
 8025754:	f817 e000 	ldrb.w	lr, [r7, r0]
 8025758:	bf54      	ite	pl
 802575a:	f00e 030f 	andpl.w	r3, lr, #15
 802575e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8025762:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025766:	b2db      	uxtb	r3, r3
 8025768:	9311      	str	r3, [sp, #68]	; 0x44
 802576a:	b292      	uxth	r2, r2
 802576c:	b289      	uxth	r1, r1
 802576e:	fb02 f301 	mul.w	r3, r2, r1
 8025772:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025776:	0112      	lsls	r2, r2, #4
 8025778:	b289      	uxth	r1, r1
 802577a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802577e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025780:	1ad2      	subs	r2, r2, r3
 8025782:	1a40      	subs	r0, r0, r1
 8025784:	b292      	uxth	r2, r2
 8025786:	436a      	muls	r2, r5
 8025788:	b280      	uxth	r0, r0
 802578a:	fb0c 2c00 	mla	ip, ip, r0, r2
 802578e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8025790:	fb01 c102 	mla	r1, r1, r2, ip
 8025794:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8025796:	fb03 1302 	mla	r3, r3, r2, r1
 802579a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802579e:	b1db      	cbz	r3, 80257d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80257a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80257a2:	4353      	muls	r3, r2
 80257a4:	1c5a      	adds	r2, r3, #1
 80257a6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80257aa:	4ac6      	ldr	r2, [pc, #792]	; (8025ac4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80257ac:	121b      	asrs	r3, r3, #8
 80257ae:	6812      	ldr	r2, [r2, #0]
 80257b0:	2bff      	cmp	r3, #255	; 0xff
 80257b2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80257b6:	f040 8099 	bne.w	80258ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80257ba:	0953      	lsrs	r3, r2, #5
 80257bc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80257c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80257c4:	f02c 0c07 	bic.w	ip, ip, #7
 80257c8:	ea43 0c0c 	orr.w	ip, r3, ip
 80257cc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80257d0:	ea4c 0202 	orr.w	r2, ip, r2
 80257d4:	f8a8 2000 	strh.w	r2, [r8]
 80257d8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80257da:	441c      	add	r4, r3
 80257dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80257de:	441e      	add	r6, r3
 80257e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80257e2:	3b01      	subs	r3, #1
 80257e4:	f108 0802 	add.w	r8, r8, #2
 80257e8:	930e      	str	r3, [sp, #56]	; 0x38
 80257ea:	e763      	b.n	80256b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80257ec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80257ee:	441c      	add	r4, r3
 80257f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80257f2:	441e      	add	r6, r3
 80257f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80257f6:	3b01      	subs	r3, #1
 80257f8:	9309      	str	r3, [sp, #36]	; 0x24
 80257fa:	f109 0902 	add.w	r9, r9, #2
 80257fe:	e737      	b.n	8025670 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8025800:	d024      	beq.n	802584c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8025802:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025804:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025806:	3b01      	subs	r3, #1
 8025808:	fb00 4003 	mla	r0, r0, r3, r4
 802580c:	1400      	asrs	r0, r0, #16
 802580e:	f53f af4c 	bmi.w	80256aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025812:	3901      	subs	r1, #1
 8025814:	4288      	cmp	r0, r1
 8025816:	f6bf af48 	bge.w	80256aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802581a:	9924      	ldr	r1, [sp, #144]	; 0x90
 802581c:	fb01 6303 	mla	r3, r1, r3, r6
 8025820:	141b      	asrs	r3, r3, #16
 8025822:	f53f af42 	bmi.w	80256aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025826:	3a01      	subs	r2, #1
 8025828:	4293      	cmp	r3, r2
 802582a:	f6bf af3e 	bge.w	80256aa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802582e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8025832:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8025836:	930e      	str	r3, [sp, #56]	; 0x38
 8025838:	46c8      	mov	r8, r9
 802583a:	f1bb 0f00 	cmp.w	fp, #0
 802583e:	f300 80b7 	bgt.w	80259b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8025842:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025844:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025848:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802584c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802584e:	2b00      	cmp	r3, #0
 8025850:	f340 818d 	ble.w	8025b6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8025854:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025858:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802585c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025860:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025862:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025866:	ee31 1a05 	vadd.f32	s2, s2, s10
 802586a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802586e:	eef0 6a62 	vmov.f32	s13, s5
 8025872:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025876:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802587a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802587e:	ee16 4a90 	vmov	r4, s13
 8025882:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025886:	eef0 6a43 	vmov.f32	s13, s6
 802588a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802588e:	ee12 2a90 	vmov	r2, s5
 8025892:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025896:	fb92 f3f3 	sdiv	r3, r2, r3
 802589a:	ee13 2a10 	vmov	r2, s6
 802589e:	9323      	str	r3, [sp, #140]	; 0x8c
 80258a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80258a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80258a6:	9324      	str	r3, [sp, #144]	; 0x90
 80258a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80258aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80258ac:	3b01      	subs	r3, #1
 80258ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80258b2:	930d      	str	r3, [sp, #52]	; 0x34
 80258b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80258b6:	bf08      	it	eq
 80258b8:	4613      	moveq	r3, r2
 80258ba:	ee16 6a90 	vmov	r6, s13
 80258be:	9309      	str	r3, [sp, #36]	; 0x24
 80258c0:	eeb0 3a67 	vmov.f32	s6, s15
 80258c4:	eef0 2a47 	vmov.f32	s5, s14
 80258c8:	e6c3      	b.n	8025652 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80258ca:	2900      	cmp	r1, #0
 80258cc:	f43f af4d 	beq.w	802576a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80258d0:	eb0a 0003 	add.w	r0, sl, r3
 80258d4:	0843      	lsrs	r3, r0, #1
 80258d6:	07c0      	lsls	r0, r0, #31
 80258d8:	5cfb      	ldrb	r3, [r7, r3]
 80258da:	bf54      	ite	pl
 80258dc:	f003 030f 	andpl.w	r3, r3, #15
 80258e0:	111b      	asrmi	r3, r3, #4
 80258e2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80258e6:	b2db      	uxtb	r3, r3
 80258e8:	930b      	str	r3, [sp, #44]	; 0x2c
 80258ea:	e73e      	b.n	802576a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80258ec:	f8b8 e000 	ldrh.w	lr, [r8]
 80258f0:	fa1f fb83 	uxth.w	fp, r3
 80258f4:	ea4f 202e 	mov.w	r0, lr, asr #8
 80258f8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80258fc:	43db      	mvns	r3, r3
 80258fe:	b2db      	uxtb	r3, r3
 8025900:	fb11 f10b 	smulbb	r1, r1, fp
 8025904:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025908:	fb00 1003 	mla	r0, r0, r3, r1
 802590c:	fa5f fc8c 	uxtb.w	ip, ip
 8025910:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025914:	b2d2      	uxtb	r2, r2
 8025916:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802591a:	b280      	uxth	r0, r0
 802591c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025920:	fb1c fc0b 	smulbb	ip, ip, fp
 8025924:	fa5f fe8e 	uxtb.w	lr, lr
 8025928:	fb12 fb0b 	smulbb	fp, r2, fp
 802592c:	fb01 cc03 	mla	ip, r1, r3, ip
 8025930:	fb0e bb03 	mla	fp, lr, r3, fp
 8025934:	1c43      	adds	r3, r0, #1
 8025936:	fa1f fc8c 	uxth.w	ip, ip
 802593a:	fa1f fb8b 	uxth.w	fp, fp
 802593e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025942:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8025946:	f10c 0101 	add.w	r1, ip, #1
 802594a:	f10b 0001 	add.w	r0, fp, #1
 802594e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8025952:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025956:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802595a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802595e:	4318      	orrs	r0, r3
 8025960:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025964:	ea40 000c 	orr.w	r0, r0, ip
 8025968:	f8a8 0000 	strh.w	r0, [r8]
 802596c:	e734      	b.n	80257d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802596e:	f113 0b01 	adds.w	fp, r3, #1
 8025972:	f53f af31 	bmi.w	80257d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025976:	45dc      	cmp	ip, fp
 8025978:	f6ff af2e 	blt.w	80257d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802597c:	f110 0b01 	adds.w	fp, r0, #1
 8025980:	f53f af2a 	bmi.w	80257d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8025984:	45de      	cmp	lr, fp
 8025986:	f6ff af27 	blt.w	80257d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802598a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802598c:	9302      	str	r3, [sp, #8]
 802598e:	fa0f f38e 	sxth.w	r3, lr
 8025992:	9301      	str	r3, [sp, #4]
 8025994:	fa0f f38c 	sxth.w	r3, ip
 8025998:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802599c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80259a0:	9300      	str	r3, [sp, #0]
 80259a2:	463a      	mov	r2, r7
 80259a4:	4653      	mov	r3, sl
 80259a6:	4641      	mov	r1, r8
 80259a8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80259aa:	f7ff fd4d 	bl	8025448 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80259ae:	e713      	b.n	80257d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80259b0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80259b2:	1422      	asrs	r2, r4, #16
 80259b4:	1433      	asrs	r3, r6, #16
 80259b6:	fb05 2303 	mla	r3, r5, r3, r2
 80259ba:	085a      	lsrs	r2, r3, #1
 80259bc:	07dd      	lsls	r5, r3, #31
 80259be:	5cba      	ldrb	r2, [r7, r2]
 80259c0:	bf54      	ite	pl
 80259c2:	f002 020f 	andpl.w	r2, r2, #15
 80259c6:	1112      	asrmi	r2, r2, #4
 80259c8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80259cc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80259d0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80259d4:	b2d2      	uxtb	r2, r2
 80259d6:	2900      	cmp	r1, #0
 80259d8:	d076      	beq.n	8025ac8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80259da:	f103 0e01 	add.w	lr, r3, #1
 80259de:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80259e2:	f01e 0f01 	tst.w	lr, #1
 80259e6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80259ea:	bf0c      	ite	eq
 80259ec:	f00c 0c0f 	andeq.w	ip, ip, #15
 80259f0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80259f4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80259f8:	fa5f f58c 	uxtb.w	r5, ip
 80259fc:	9512      	str	r5, [sp, #72]	; 0x48
 80259fe:	b300      	cbz	r0, 8025a42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025a00:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025a02:	442b      	add	r3, r5
 8025a04:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025a08:	07dd      	lsls	r5, r3, #31
 8025a0a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025a0e:	bf54      	ite	pl
 8025a10:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025a14:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025a18:	3301      	adds	r3, #1
 8025a1a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025a1e:	fa5f f58c 	uxtb.w	r5, ip
 8025a22:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025a26:	950c      	str	r5, [sp, #48]	; 0x30
 8025a28:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025a2c:	07dd      	lsls	r5, r3, #31
 8025a2e:	bf54      	ite	pl
 8025a30:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025a34:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025a38:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025a3c:	fa5f f38c 	uxtb.w	r3, ip
 8025a40:	9313      	str	r3, [sp, #76]	; 0x4c
 8025a42:	b289      	uxth	r1, r1
 8025a44:	b280      	uxth	r0, r0
 8025a46:	fb01 f300 	mul.w	r3, r1, r0
 8025a4a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8025a4e:	0109      	lsls	r1, r1, #4
 8025a50:	b280      	uxth	r0, r0
 8025a52:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8025a56:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025a58:	1ac9      	subs	r1, r1, r3
 8025a5a:	ebac 0c00 	sub.w	ip, ip, r0
 8025a5e:	b289      	uxth	r1, r1
 8025a60:	4369      	muls	r1, r5
 8025a62:	fa1f fc8c 	uxth.w	ip, ip
 8025a66:	fb02 120c 	mla	r2, r2, ip, r1
 8025a6a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025a6c:	fb00 2001 	mla	r0, r0, r1, r2
 8025a70:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8025a72:	fb03 0302 	mla	r3, r3, r2, r0
 8025a76:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025a7a:	b1d3      	cbz	r3, 8025ab2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025a7c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025a7e:	4353      	muls	r3, r2
 8025a80:	1c5a      	adds	r2, r3, #1
 8025a82:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025a86:	4a0f      	ldr	r2, [pc, #60]	; (8025ac4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8025a88:	121b      	asrs	r3, r3, #8
 8025a8a:	6812      	ldr	r2, [r2, #0]
 8025a8c:	2bff      	cmp	r3, #255	; 0xff
 8025a8e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025a92:	d12d      	bne.n	8025af0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8025a94:	0953      	lsrs	r3, r2, #5
 8025a96:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8025a9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025a9e:	f02c 0c07 	bic.w	ip, ip, #7
 8025aa2:	ea43 0c0c 	orr.w	ip, r3, ip
 8025aa6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025aaa:	ea4c 0202 	orr.w	r2, ip, r2
 8025aae:	f8a8 2000 	strh.w	r2, [r8]
 8025ab2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8025ab4:	441c      	add	r4, r3
 8025ab6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025ab8:	f108 0802 	add.w	r8, r8, #2
 8025abc:	441e      	add	r6, r3
 8025abe:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025ac2:	e6ba      	b.n	802583a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025ac4:	20012dc4 	.word	0x20012dc4
 8025ac8:	2800      	cmp	r0, #0
 8025aca:	d0ba      	beq.n	8025a42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025acc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025ace:	442b      	add	r3, r5
 8025ad0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8025ad4:	07db      	lsls	r3, r3, #31
 8025ad6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8025ada:	bf54      	ite	pl
 8025adc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025ae0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025ae4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025ae8:	fa5f f38c 	uxtb.w	r3, ip
 8025aec:	930c      	str	r3, [sp, #48]	; 0x30
 8025aee:	e7a8      	b.n	8025a42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8025af0:	f8b8 e000 	ldrh.w	lr, [r8]
 8025af4:	fa1f fa83 	uxth.w	sl, r3
 8025af8:	ea4f 202e 	mov.w	r0, lr, asr #8
 8025afc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8025b00:	43db      	mvns	r3, r3
 8025b02:	b2db      	uxtb	r3, r3
 8025b04:	fb11 f10a 	smulbb	r1, r1, sl
 8025b08:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025b0c:	fb00 1003 	mla	r0, r0, r3, r1
 8025b10:	b2d2      	uxtb	r2, r2
 8025b12:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8025b16:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025b1a:	fa5f fe8e 	uxtb.w	lr, lr
 8025b1e:	fb12 f20a 	smulbb	r2, r2, sl
 8025b22:	fb0e 2203 	mla	r2, lr, r3, r2
 8025b26:	fa5f fc8c 	uxtb.w	ip, ip
 8025b2a:	b280      	uxth	r0, r0
 8025b2c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025b30:	b292      	uxth	r2, r2
 8025b32:	fb1c fc0a 	smulbb	ip, ip, sl
 8025b36:	fb01 cc03 	mla	ip, r1, r3, ip
 8025b3a:	1c43      	adds	r3, r0, #1
 8025b3c:	1c51      	adds	r1, r2, #1
 8025b3e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025b42:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8025b46:	fa1f fc8c 	uxth.w	ip, ip
 8025b4a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025b4e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8025b52:	4308      	orrs	r0, r1
 8025b54:	f10c 0101 	add.w	r1, ip, #1
 8025b58:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025b5c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8025b60:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025b64:	ea40 000c 	orr.w	r0, r0, ip
 8025b68:	f8a8 0000 	strh.w	r0, [r8]
 8025b6c:	e7a1      	b.n	8025ab2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8025b6e:	b017      	add	sp, #92	; 0x5c
 8025b70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025b74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8025b74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025b78:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8025b7c:	2d00      	cmp	r5, #0
 8025b7e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025b82:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8025b86:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8025b8a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8025b8e:	fb05 0e03 	mla	lr, r5, r3, r0
 8025b92:	f2c0 80b0 	blt.w	8025cf6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025b96:	45a9      	cmp	r9, r5
 8025b98:	f340 80ad 	ble.w	8025cf6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8025b9c:	2800      	cmp	r0, #0
 8025b9e:	f2c0 80a8 	blt.w	8025cf2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025ba2:	4580      	cmp	r8, r0
 8025ba4:	f340 80a5 	ble.w	8025cf2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8025ba8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025bac:	f01e 0f01 	tst.w	lr, #1
 8025bb0:	5d16      	ldrb	r6, [r2, r4]
 8025bb2:	bf0c      	ite	eq
 8025bb4:	f006 060f 	andeq.w	r6, r6, #15
 8025bb8:	1136      	asrne	r6, r6, #4
 8025bba:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025bbe:	b2f6      	uxtb	r6, r6
 8025bc0:	1c44      	adds	r4, r0, #1
 8025bc2:	f100 809b 	bmi.w	8025cfc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025bc6:	45a0      	cmp	r8, r4
 8025bc8:	f340 8098 	ble.w	8025cfc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8025bcc:	2f00      	cmp	r7, #0
 8025bce:	f000 8097 	beq.w	8025d00 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8025bd2:	f10e 0a01 	add.w	sl, lr, #1
 8025bd6:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025bda:	f01a 0f01 	tst.w	sl, #1
 8025bde:	5d14      	ldrb	r4, [r2, r4]
 8025be0:	bf0c      	ite	eq
 8025be2:	f004 040f 	andeq.w	r4, r4, #15
 8025be6:	1124      	asrne	r4, r4, #4
 8025be8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8025bec:	b2e4      	uxtb	r4, r4
 8025bee:	3501      	adds	r5, #1
 8025bf0:	f100 808a 	bmi.w	8025d08 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025bf4:	45a9      	cmp	r9, r5
 8025bf6:	f340 8087 	ble.w	8025d08 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8025bfa:	f1bc 0f00 	cmp.w	ip, #0
 8025bfe:	f000 8086 	beq.w	8025d0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8025c02:	2800      	cmp	r0, #0
 8025c04:	db7e      	blt.n	8025d04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025c06:	4580      	cmp	r8, r0
 8025c08:	dd7c      	ble.n	8025d04 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8025c0a:	eb03 090e 	add.w	r9, r3, lr
 8025c0e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025c12:	f019 0f01 	tst.w	r9, #1
 8025c16:	5d55      	ldrb	r5, [r2, r5]
 8025c18:	bf0c      	ite	eq
 8025c1a:	f005 050f 	andeq.w	r5, r5, #15
 8025c1e:	112d      	asrne	r5, r5, #4
 8025c20:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025c24:	b2ed      	uxtb	r5, r5
 8025c26:	3001      	adds	r0, #1
 8025c28:	d474      	bmi.n	8025d14 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025c2a:	4580      	cmp	r8, r0
 8025c2c:	dd72      	ble.n	8025d14 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8025c2e:	2f00      	cmp	r7, #0
 8025c30:	d072      	beq.n	8025d18 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8025c32:	3301      	adds	r3, #1
 8025c34:	449e      	add	lr, r3
 8025c36:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025c3a:	f01e 0f01 	tst.w	lr, #1
 8025c3e:	5cd0      	ldrb	r0, [r2, r3]
 8025c40:	bf0c      	ite	eq
 8025c42:	f000 000f 	andeq.w	r0, r0, #15
 8025c46:	1100      	asrne	r0, r0, #4
 8025c48:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025c4c:	b2c3      	uxtb	r3, r0
 8025c4e:	b2ba      	uxth	r2, r7
 8025c50:	fa1f fc8c 	uxth.w	ip, ip
 8025c54:	fb02 f00c 	mul.w	r0, r2, ip
 8025c58:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025c5c:	0112      	lsls	r2, r2, #4
 8025c5e:	fa1f fc8c 	uxth.w	ip, ip
 8025c62:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8025c66:	1a12      	subs	r2, r2, r0
 8025c68:	eba7 070c 	sub.w	r7, r7, ip
 8025c6c:	b292      	uxth	r2, r2
 8025c6e:	b2bf      	uxth	r7, r7
 8025c70:	4362      	muls	r2, r4
 8025c72:	fb06 2207 	mla	r2, r6, r7, r2
 8025c76:	fb0c 2505 	mla	r5, ip, r5, r2
 8025c7a:	fb00 5303 	mla	r3, r0, r3, r5
 8025c7e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025c82:	b3a3      	cbz	r3, 8025cee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8025c84:	4a25      	ldr	r2, [pc, #148]	; (8025d1c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8025c86:	880e      	ldrh	r6, [r1, #0]
 8025c88:	6815      	ldr	r5, [r2, #0]
 8025c8a:	1234      	asrs	r4, r6, #8
 8025c8c:	b29a      	uxth	r2, r3
 8025c8e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8025c92:	43db      	mvns	r3, r3
 8025c94:	b2db      	uxtb	r3, r3
 8025c96:	fb10 f002 	smulbb	r0, r0, r2
 8025c9a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025c9e:	fb04 0403 	mla	r4, r4, r3, r0
 8025ca2:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8025ca6:	10f0      	asrs	r0, r6, #3
 8025ca8:	b2ed      	uxtb	r5, r5
 8025caa:	00f6      	lsls	r6, r6, #3
 8025cac:	fb17 f702 	smulbb	r7, r7, r2
 8025cb0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025cb4:	fb15 f202 	smulbb	r2, r5, r2
 8025cb8:	b2f6      	uxtb	r6, r6
 8025cba:	b2a4      	uxth	r4, r4
 8025cbc:	fb00 7003 	mla	r0, r0, r3, r7
 8025cc0:	fb06 2303 	mla	r3, r6, r3, r2
 8025cc4:	b29a      	uxth	r2, r3
 8025cc6:	1c63      	adds	r3, r4, #1
 8025cc8:	b280      	uxth	r0, r0
 8025cca:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025cce:	1c53      	adds	r3, r2, #1
 8025cd0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025cd4:	1c42      	adds	r2, r0, #1
 8025cd6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025cda:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025cde:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025ce2:	0940      	lsrs	r0, r0, #5
 8025ce4:	4323      	orrs	r3, r4
 8025ce6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025cea:	4303      	orrs	r3, r0
 8025cec:	800b      	strh	r3, [r1, #0]
 8025cee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025cf2:	2600      	movs	r6, #0
 8025cf4:	e764      	b.n	8025bc0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8025cf6:	2400      	movs	r4, #0
 8025cf8:	4626      	mov	r6, r4
 8025cfa:	e778      	b.n	8025bee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025cfc:	2400      	movs	r4, #0
 8025cfe:	e776      	b.n	8025bee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025d00:	463c      	mov	r4, r7
 8025d02:	e774      	b.n	8025bee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025d04:	2500      	movs	r5, #0
 8025d06:	e78e      	b.n	8025c26 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8025d08:	2300      	movs	r3, #0
 8025d0a:	461d      	mov	r5, r3
 8025d0c:	e79f      	b.n	8025c4e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025d0e:	4663      	mov	r3, ip
 8025d10:	4665      	mov	r5, ip
 8025d12:	e79c      	b.n	8025c4e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025d14:	2300      	movs	r3, #0
 8025d16:	e79a      	b.n	8025c4e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025d18:	463b      	mov	r3, r7
 8025d1a:	e798      	b.n	8025c4e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025d1c:	20012dc4 	.word	0x20012dc4

08025d20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025d24:	b093      	sub	sp, #76	; 0x4c
 8025d26:	461d      	mov	r5, r3
 8025d28:	920c      	str	r2, [sp, #48]	; 0x30
 8025d2a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025d2c:	9107      	str	r1, [sp, #28]
 8025d2e:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025d32:	9011      	str	r0, [sp, #68]	; 0x44
 8025d34:	6850      	ldr	r0, [r2, #4]
 8025d36:	6812      	ldr	r2, [r2, #0]
 8025d38:	fb00 1303 	mla	r3, r0, r3, r1
 8025d3c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025d40:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025d42:	689b      	ldr	r3, [r3, #8]
 8025d44:	3301      	adds	r3, #1
 8025d46:	f023 0301 	bic.w	r3, r3, #1
 8025d4a:	9306      	str	r3, [sp, #24]
 8025d4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025d4e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8025d52:	681f      	ldr	r7, [r3, #0]
 8025d54:	9b07      	ldr	r3, [sp, #28]
 8025d56:	2b00      	cmp	r3, #0
 8025d58:	dc03      	bgt.n	8025d62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8025d5a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025d5c:	2b00      	cmp	r3, #0
 8025d5e:	f340 8267 	ble.w	8026230 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025d62:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025d64:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025d68:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025d6c:	1e48      	subs	r0, r1, #1
 8025d6e:	f102 3cff 	add.w	ip, r2, #4294967295
 8025d72:	2d00      	cmp	r5, #0
 8025d74:	f340 80b8 	ble.w	8025ee8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025d78:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025d7c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025d80:	d406      	bmi.n	8025d90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025d82:	4586      	cmp	lr, r0
 8025d84:	da04      	bge.n	8025d90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025d86:	2b00      	cmp	r3, #0
 8025d88:	db02      	blt.n	8025d90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025d8a:	4563      	cmp	r3, ip
 8025d8c:	f2c0 80ad 	blt.w	8025eea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8025d90:	f11e 0e01 	adds.w	lr, lr, #1
 8025d94:	f100 80a0 	bmi.w	8025ed8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025d98:	4571      	cmp	r1, lr
 8025d9a:	f2c0 809d 	blt.w	8025ed8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025d9e:	3301      	adds	r3, #1
 8025da0:	f100 809a 	bmi.w	8025ed8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025da4:	429a      	cmp	r2, r3
 8025da6:	f2c0 8097 	blt.w	8025ed8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8025daa:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8025dae:	9509      	str	r5, [sp, #36]	; 0x24
 8025db0:	46c8      	mov	r8, r9
 8025db2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025db4:	2b00      	cmp	r3, #0
 8025db6:	f340 80b6 	ble.w	8025f26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8025dba:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8025dbe:	9308      	str	r3, [sp, #32]
 8025dc0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025dc2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025dc6:	1423      	asrs	r3, r4, #16
 8025dc8:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025dcc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025dd0:	f100 813e 	bmi.w	8026050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025dd4:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025dd8:	455b      	cmp	r3, fp
 8025dda:	f280 8139 	bge.w	8026050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025dde:	2800      	cmp	r0, #0
 8025de0:	f2c0 8136 	blt.w	8026050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025de4:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025de8:	4558      	cmp	r0, fp
 8025dea:	f280 8131 	bge.w	8026050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025dee:	9a06      	ldr	r2, [sp, #24]
 8025df0:	fb00 3302 	mla	r3, r0, r2, r3
 8025df4:	0858      	lsrs	r0, r3, #1
 8025df6:	07da      	lsls	r2, r3, #31
 8025df8:	f817 c000 	ldrb.w	ip, [r7, r0]
 8025dfc:	9a08      	ldr	r2, [sp, #32]
 8025dfe:	bf54      	ite	pl
 8025e00:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025e04:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025e08:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025e0c:	fa5f fc8c 	uxtb.w	ip, ip
 8025e10:	2a00      	cmp	r2, #0
 8025e12:	f000 80cb 	beq.w	8025fac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8025e16:	1c58      	adds	r0, r3, #1
 8025e18:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8025e1c:	07c0      	lsls	r0, r0, #31
 8025e1e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025e22:	bf54      	ite	pl
 8025e24:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025e28:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8025e2c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025e30:	fa5f fe8e 	uxtb.w	lr, lr
 8025e34:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8025e38:	b1b9      	cbz	r1, 8025e6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025e3a:	4453      	add	r3, sl
 8025e3c:	0858      	lsrs	r0, r3, #1
 8025e3e:	07da      	lsls	r2, r3, #31
 8025e40:	5c38      	ldrb	r0, [r7, r0]
 8025e42:	bf54      	ite	pl
 8025e44:	f000 000f 	andpl.w	r0, r0, #15
 8025e48:	1100      	asrmi	r0, r0, #4
 8025e4a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025e4e:	b2c0      	uxtb	r0, r0
 8025e50:	900a      	str	r0, [sp, #40]	; 0x28
 8025e52:	1c58      	adds	r0, r3, #1
 8025e54:	0843      	lsrs	r3, r0, #1
 8025e56:	07c2      	lsls	r2, r0, #31
 8025e58:	5cfb      	ldrb	r3, [r7, r3]
 8025e5a:	bf54      	ite	pl
 8025e5c:	f003 030f 	andpl.w	r3, r3, #15
 8025e60:	111b      	asrmi	r3, r3, #4
 8025e62:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025e66:	b2db      	uxtb	r3, r3
 8025e68:	930e      	str	r3, [sp, #56]	; 0x38
 8025e6a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8025e6e:	b289      	uxth	r1, r1
 8025e70:	fb02 f301 	mul.w	r3, r2, r1
 8025e74:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025e78:	0112      	lsls	r2, r2, #4
 8025e7a:	b289      	uxth	r1, r1
 8025e7c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8025e80:	1a40      	subs	r0, r0, r1
 8025e82:	fa1f fe80 	uxth.w	lr, r0
 8025e86:	1ad2      	subs	r2, r2, r3
 8025e88:	980d      	ldr	r0, [sp, #52]	; 0x34
 8025e8a:	b292      	uxth	r2, r2
 8025e8c:	4342      	muls	r2, r0
 8025e8e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8025e92:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8025e94:	fb01 c102 	mla	r1, r1, r2, ip
 8025e98:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8025e9a:	fb03 1302 	mla	r3, r3, r2, r1
 8025e9e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025ea2:	2bff      	cmp	r3, #255	; 0xff
 8025ea4:	f040 8093 	bne.w	8025fce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8025ea8:	4bbe      	ldr	r3, [pc, #760]	; (80261a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025eaa:	681a      	ldr	r2, [r3, #0]
 8025eac:	4bbe      	ldr	r3, [pc, #760]	; (80261a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025eae:	0951      	lsrs	r1, r2, #5
 8025eb0:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025eb4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025eb8:	430b      	orrs	r3, r1
 8025eba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025ebe:	4313      	orrs	r3, r2
 8025ec0:	f8a8 3000 	strh.w	r3, [r8]
 8025ec4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025ec6:	441c      	add	r4, r3
 8025ec8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025eca:	441e      	add	r6, r3
 8025ecc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025ece:	3b01      	subs	r3, #1
 8025ed0:	f108 0802 	add.w	r8, r8, #2
 8025ed4:	9309      	str	r3, [sp, #36]	; 0x24
 8025ed6:	e76c      	b.n	8025db2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025ed8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025eda:	441c      	add	r4, r3
 8025edc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025ede:	3d01      	subs	r5, #1
 8025ee0:	441e      	add	r6, r3
 8025ee2:	f109 0902 	add.w	r9, r9, #2
 8025ee6:	e744      	b.n	8025d72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8025ee8:	d021      	beq.n	8025f2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8025eea:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8025eec:	1e6b      	subs	r3, r5, #1
 8025eee:	fb00 4003 	mla	r0, r0, r3, r4
 8025ef2:	1400      	asrs	r0, r0, #16
 8025ef4:	f53f af59 	bmi.w	8025daa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025ef8:	3901      	subs	r1, #1
 8025efa:	4288      	cmp	r0, r1
 8025efc:	f6bf af55 	bge.w	8025daa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025f00:	9920      	ldr	r1, [sp, #128]	; 0x80
 8025f02:	fb01 6303 	mla	r3, r1, r3, r6
 8025f06:	141b      	asrs	r3, r3, #16
 8025f08:	f53f af4f 	bmi.w	8025daa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025f0c:	3a01      	subs	r2, #1
 8025f0e:	4293      	cmp	r3, r2
 8025f10:	f6bf af4b 	bge.w	8025daa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025f14:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8025f18:	9308      	str	r3, [sp, #32]
 8025f1a:	46a8      	mov	r8, r5
 8025f1c:	46ce      	mov	lr, r9
 8025f1e:	f1b8 0f00 	cmp.w	r8, #0
 8025f22:	f300 80b5 	bgt.w	8026090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8025f26:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025f2a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8025f2e:	9b07      	ldr	r3, [sp, #28]
 8025f30:	2b00      	cmp	r3, #0
 8025f32:	f340 817d 	ble.w	8026230 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8025f36:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025f3a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025f3e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025f42:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025f44:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025f48:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025f4c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025f50:	eef0 6a62 	vmov.f32	s13, s5
 8025f54:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025f58:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025f5c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025f60:	ee16 4a90 	vmov	r4, s13
 8025f64:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025f68:	eef0 6a43 	vmov.f32	s13, s6
 8025f6c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025f70:	ee12 2a90 	vmov	r2, s5
 8025f74:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025f78:	fb92 f3f3 	sdiv	r3, r2, r3
 8025f7c:	ee13 2a10 	vmov	r2, s6
 8025f80:	931f      	str	r3, [sp, #124]	; 0x7c
 8025f82:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025f84:	fb92 f3f3 	sdiv	r3, r2, r3
 8025f88:	9320      	str	r3, [sp, #128]	; 0x80
 8025f8a:	9b07      	ldr	r3, [sp, #28]
 8025f8c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8025f8e:	3b01      	subs	r3, #1
 8025f90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025f94:	9307      	str	r3, [sp, #28]
 8025f96:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025f98:	ee16 6a90 	vmov	r6, s13
 8025f9c:	bf14      	ite	ne
 8025f9e:	461d      	movne	r5, r3
 8025fa0:	4615      	moveq	r5, r2
 8025fa2:	eeb0 3a67 	vmov.f32	s6, s15
 8025fa6:	eef0 2a47 	vmov.f32	s5, s14
 8025faa:	e6d3      	b.n	8025d54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8025fac:	2900      	cmp	r1, #0
 8025fae:	f43f af5c 	beq.w	8025e6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025fb2:	eb0a 0003 	add.w	r0, sl, r3
 8025fb6:	0843      	lsrs	r3, r0, #1
 8025fb8:	07c0      	lsls	r0, r0, #31
 8025fba:	5cfb      	ldrb	r3, [r7, r3]
 8025fbc:	bf54      	ite	pl
 8025fbe:	f003 030f 	andpl.w	r3, r3, #15
 8025fc2:	111b      	asrmi	r3, r3, #4
 8025fc4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025fc8:	b2db      	uxtb	r3, r3
 8025fca:	930a      	str	r3, [sp, #40]	; 0x28
 8025fcc:	e74d      	b.n	8025e6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025fce:	2b00      	cmp	r3, #0
 8025fd0:	f43f af78 	beq.w	8025ec4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025fd4:	4a73      	ldr	r2, [pc, #460]	; (80261a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025fd6:	f8b8 c000 	ldrh.w	ip, [r8]
 8025fda:	6810      	ldr	r0, [r2, #0]
 8025fdc:	fa1f fe83 	uxth.w	lr, r3
 8025fe0:	ea4f 212c 	mov.w	r1, ip, asr #8
 8025fe4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025fe8:	43db      	mvns	r3, r3
 8025fea:	b2db      	uxtb	r3, r3
 8025fec:	fb12 f20e 	smulbb	r2, r2, lr
 8025ff0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025ff4:	fb01 2103 	mla	r1, r1, r3, r2
 8025ff8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025ffc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026000:	b2c0      	uxtb	r0, r0
 8026002:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026006:	fb1b fb0e 	smulbb	fp, fp, lr
 802600a:	b289      	uxth	r1, r1
 802600c:	fb10 fe0e 	smulbb	lr, r0, lr
 8026010:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026014:	fa5f fc8c 	uxtb.w	ip, ip
 8026018:	fb02 b203 	mla	r2, r2, r3, fp
 802601c:	1c48      	adds	r0, r1, #1
 802601e:	fb0c e303 	mla	r3, ip, r3, lr
 8026022:	b292      	uxth	r2, r2
 8026024:	b29b      	uxth	r3, r3
 8026026:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802602a:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 802602e:	f102 0b01 	add.w	fp, r2, #1
 8026032:	1c59      	adds	r1, r3, #1
 8026034:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8026038:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802603c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026040:	0952      	lsrs	r2, r2, #5
 8026042:	4301      	orrs	r1, r0
 8026044:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026048:	4311      	orrs	r1, r2
 802604a:	f8a8 1000 	strh.w	r1, [r8]
 802604e:	e739      	b.n	8025ec4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026050:	f113 0b01 	adds.w	fp, r3, #1
 8026054:	f53f af36 	bmi.w	8025ec4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026058:	45dc      	cmp	ip, fp
 802605a:	f6ff af33 	blt.w	8025ec4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802605e:	f110 0b01 	adds.w	fp, r0, #1
 8026062:	f53f af2f 	bmi.w	8025ec4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026066:	45de      	cmp	lr, fp
 8026068:	f6ff af2c 	blt.w	8025ec4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802606c:	9a08      	ldr	r2, [sp, #32]
 802606e:	9302      	str	r3, [sp, #8]
 8026070:	fa0f f38e 	sxth.w	r3, lr
 8026074:	9301      	str	r3, [sp, #4]
 8026076:	fa0f f38c 	sxth.w	r3, ip
 802607a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802607e:	9105      	str	r1, [sp, #20]
 8026080:	9300      	str	r3, [sp, #0]
 8026082:	463a      	mov	r2, r7
 8026084:	4653      	mov	r3, sl
 8026086:	4641      	mov	r1, r8
 8026088:	9811      	ldr	r0, [sp, #68]	; 0x44
 802608a:	f7ff fd73 	bl	8025b74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802608e:	e719      	b.n	8025ec4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026090:	9906      	ldr	r1, [sp, #24]
 8026092:	1422      	asrs	r2, r4, #16
 8026094:	1433      	asrs	r3, r6, #16
 8026096:	fb01 2303 	mla	r3, r1, r3, r2
 802609a:	085a      	lsrs	r2, r3, #1
 802609c:	07d9      	lsls	r1, r3, #31
 802609e:	5cba      	ldrb	r2, [r7, r2]
 80260a0:	bf54      	ite	pl
 80260a2:	f002 020f 	andpl.w	r2, r2, #15
 80260a6:	1112      	asrmi	r2, r2, #4
 80260a8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80260ac:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80260b0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80260b4:	b2d2      	uxtb	r2, r2
 80260b6:	2800      	cmp	r0, #0
 80260b8:	d062      	beq.n	8026180 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80260ba:	f103 0a01 	add.w	sl, r3, #1
 80260be:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80260c2:	f01a 0f01 	tst.w	sl, #1
 80260c6:	5c79      	ldrb	r1, [r7, r1]
 80260c8:	bf0c      	ite	eq
 80260ca:	f001 010f 	andeq.w	r1, r1, #15
 80260ce:	1109      	asrne	r1, r1, #4
 80260d0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80260d4:	b2c9      	uxtb	r1, r1
 80260d6:	910f      	str	r1, [sp, #60]	; 0x3c
 80260d8:	f1bc 0f00 	cmp.w	ip, #0
 80260dc:	d019      	beq.n	8026112 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80260de:	9908      	ldr	r1, [sp, #32]
 80260e0:	440b      	add	r3, r1
 80260e2:	0859      	lsrs	r1, r3, #1
 80260e4:	f013 0f01 	tst.w	r3, #1
 80260e8:	5c79      	ldrb	r1, [r7, r1]
 80260ea:	bf0c      	ite	eq
 80260ec:	f001 010f 	andeq.w	r1, r1, #15
 80260f0:	1109      	asrne	r1, r1, #4
 80260f2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80260f6:	b2c9      	uxtb	r1, r1
 80260f8:	3301      	adds	r3, #1
 80260fa:	910b      	str	r1, [sp, #44]	; 0x2c
 80260fc:	0859      	lsrs	r1, r3, #1
 80260fe:	07db      	lsls	r3, r3, #31
 8026100:	5c79      	ldrb	r1, [r7, r1]
 8026102:	bf54      	ite	pl
 8026104:	f001 010f 	andpl.w	r1, r1, #15
 8026108:	1109      	asrmi	r1, r1, #4
 802610a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802610e:	b2c9      	uxtb	r1, r1
 8026110:	9110      	str	r1, [sp, #64]	; 0x40
 8026112:	b280      	uxth	r0, r0
 8026114:	fa1f fc8c 	uxth.w	ip, ip
 8026118:	fb00 f30c 	mul.w	r3, r0, ip
 802611c:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8026120:	0100      	lsls	r0, r0, #4
 8026122:	fa1f fc8c 	uxth.w	ip, ip
 8026126:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 802612a:	eba1 010c 	sub.w	r1, r1, ip
 802612e:	fa1f fa81 	uxth.w	sl, r1
 8026132:	1ac0      	subs	r0, r0, r3
 8026134:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8026136:	b280      	uxth	r0, r0
 8026138:	4348      	muls	r0, r1
 802613a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 802613c:	fb02 020a 	mla	r2, r2, sl, r0
 8026140:	fb0c 2c01 	mla	ip, ip, r1, r2
 8026144:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026146:	fb03 c302 	mla	r3, r3, r2, ip
 802614a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802614e:	2bff      	cmp	r3, #255	; 0xff
 8026150:	d12c      	bne.n	80261ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8026152:	4b14      	ldr	r3, [pc, #80]	; (80261a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026154:	681a      	ldr	r2, [r3, #0]
 8026156:	4b14      	ldr	r3, [pc, #80]	; (80261a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8026158:	0951      	lsrs	r1, r2, #5
 802615a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802615e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026162:	430b      	orrs	r3, r1
 8026164:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026168:	4313      	orrs	r3, r2
 802616a:	f8ae 3000 	strh.w	r3, [lr]
 802616e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026170:	441c      	add	r4, r3
 8026172:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026174:	f10e 0e02 	add.w	lr, lr, #2
 8026178:	441e      	add	r6, r3
 802617a:	f108 38ff 	add.w	r8, r8, #4294967295
 802617e:	e6ce      	b.n	8025f1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8026180:	f1bc 0f00 	cmp.w	ip, #0
 8026184:	d0c5      	beq.n	8026112 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026186:	9908      	ldr	r1, [sp, #32]
 8026188:	440b      	add	r3, r1
 802618a:	0859      	lsrs	r1, r3, #1
 802618c:	07db      	lsls	r3, r3, #31
 802618e:	5c79      	ldrb	r1, [r7, r1]
 8026190:	bf54      	ite	pl
 8026192:	f001 010f 	andpl.w	r1, r1, #15
 8026196:	1109      	asrmi	r1, r1, #4
 8026198:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802619c:	b2c9      	uxtb	r1, r1
 802619e:	910b      	str	r1, [sp, #44]	; 0x2c
 80261a0:	e7b7      	b.n	8026112 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80261a2:	bf00      	nop
 80261a4:	20012dc4 	.word	0x20012dc4
 80261a8:	fffff800 	.word	0xfffff800
 80261ac:	2b00      	cmp	r3, #0
 80261ae:	d0de      	beq.n	802616e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80261b0:	4a21      	ldr	r2, [pc, #132]	; (8026238 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80261b2:	f8be c000 	ldrh.w	ip, [lr]
 80261b6:	6810      	ldr	r0, [r2, #0]
 80261b8:	fa1f fa83 	uxth.w	sl, r3
 80261bc:	ea4f 212c 	mov.w	r1, ip, asr #8
 80261c0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80261c4:	43db      	mvns	r3, r3
 80261c6:	b2db      	uxtb	r3, r3
 80261c8:	fb12 f20a 	smulbb	r2, r2, sl
 80261cc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80261d0:	fb01 2103 	mla	r1, r1, r3, r2
 80261d4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80261d8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80261dc:	b2c0      	uxtb	r0, r0
 80261de:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80261e2:	fa5f fc8c 	uxtb.w	ip, ip
 80261e6:	fb10 f00a 	smulbb	r0, r0, sl
 80261ea:	fb0c 0003 	mla	r0, ip, r3, r0
 80261ee:	b289      	uxth	r1, r1
 80261f0:	fb1b fb0a 	smulbb	fp, fp, sl
 80261f4:	b280      	uxth	r0, r0
 80261f6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80261fa:	fb02 b203 	mla	r2, r2, r3, fp
 80261fe:	1c4b      	adds	r3, r1, #1
 8026200:	f100 0b01 	add.w	fp, r0, #1
 8026204:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026208:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 802620c:	b292      	uxth	r2, r2
 802620e:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8026212:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8026216:	ea4b 0101 	orr.w	r1, fp, r1
 802621a:	f102 0b01 	add.w	fp, r2, #1
 802621e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026222:	0952      	lsrs	r2, r2, #5
 8026224:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026228:	4311      	orrs	r1, r2
 802622a:	f8ae 1000 	strh.w	r1, [lr]
 802622e:	e79e      	b.n	802616e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026230:	b013      	add	sp, #76	; 0x4c
 8026232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026236:	bf00      	nop
 8026238:	20012dc4 	.word	0x20012dc4

0802623c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 802623c:	b570      	push	{r4, r5, r6, lr}
 802623e:	1208      	asrs	r0, r1, #8
 8026240:	b29e      	uxth	r6, r3
 8026242:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8026246:	1213      	asrs	r3, r2, #8
 8026248:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802624c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8026250:	fb13 f305 	smulbb	r3, r3, r5
 8026254:	fb10 f006 	smulbb	r0, r0, r6
 8026258:	4418      	add	r0, r3
 802625a:	10cc      	asrs	r4, r1, #3
 802625c:	10d3      	asrs	r3, r2, #3
 802625e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8026262:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8026266:	fb13 f305 	smulbb	r3, r3, r5
 802626a:	fb14 f406 	smulbb	r4, r4, r6
 802626e:	00c9      	lsls	r1, r1, #3
 8026270:	00d2      	lsls	r2, r2, #3
 8026272:	441c      	add	r4, r3
 8026274:	b2d2      	uxtb	r2, r2
 8026276:	b2cb      	uxtb	r3, r1
 8026278:	fb12 f205 	smulbb	r2, r2, r5
 802627c:	b280      	uxth	r0, r0
 802627e:	fb13 f306 	smulbb	r3, r3, r6
 8026282:	4413      	add	r3, r2
 8026284:	1c42      	adds	r2, r0, #1
 8026286:	b29b      	uxth	r3, r3
 8026288:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802628c:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8026290:	1c58      	adds	r0, r3, #1
 8026292:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026296:	b2a4      	uxth	r4, r4
 8026298:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802629c:	4310      	orrs	r0, r2
 802629e:	1c62      	adds	r2, r4, #1
 80262a0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80262a4:	0964      	lsrs	r4, r4, #5
 80262a6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80262aa:	4320      	orrs	r0, r4
 80262ac:	bd70      	pop	{r4, r5, r6, pc}
	...

080262b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80262b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80262b4:	b08f      	sub	sp, #60	; 0x3c
 80262b6:	461c      	mov	r4, r3
 80262b8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80262bc:	9004      	str	r0, [sp, #16]
 80262be:	460d      	mov	r5, r1
 80262c0:	4616      	mov	r6, r2
 80262c2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80262c4:	2f00      	cmp	r7, #0
 80262c6:	f000 80f6 	beq.w	80264b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80262ca:	6820      	ldr	r0, [r4, #0]
 80262cc:	6861      	ldr	r1, [r4, #4]
 80262ce:	aa0a      	add	r2, sp, #40	; 0x28
 80262d0:	c203      	stmia	r2!, {r0, r1}
 80262d2:	6818      	ldr	r0, [r3, #0]
 80262d4:	6859      	ldr	r1, [r3, #4]
 80262d6:	aa0c      	add	r2, sp, #48	; 0x30
 80262d8:	c203      	stmia	r2!, {r0, r1}
 80262da:	a80a      	add	r0, sp, #40	; 0x28
 80262dc:	f7ef fa9c 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80262e0:	4621      	mov	r1, r4
 80262e2:	a80c      	add	r0, sp, #48	; 0x30
 80262e4:	f7ef fadc 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80262e8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80262ec:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80262f0:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80262f4:	f002 0301 	and.w	r3, r2, #1
 80262f8:	9306      	str	r3, [sp, #24]
 80262fa:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80262fe:	f003 0101 	and.w	r1, r3, #1
 8026302:	9105      	str	r1, [sp, #20]
 8026304:	9805      	ldr	r0, [sp, #20]
 8026306:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 802630a:	4403      	add	r3, r0
 802630c:	fb01 2303 	mla	r3, r1, r3, r2
 8026310:	f04f 0802 	mov.w	r8, #2
 8026314:	fb93 f3f8 	sdiv	r3, r3, r8
 8026318:	441d      	add	r5, r3
 802631a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802631e:	441a      	add	r2, r3
 8026320:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026324:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026328:	4419      	add	r1, r3
 802632a:	4b64      	ldr	r3, [pc, #400]	; (80264bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802632c:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026330:	6818      	ldr	r0, [r3, #0]
 8026332:	6803      	ldr	r3, [r0, #0]
 8026334:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8026336:	4798      	blx	r3
 8026338:	4a61      	ldr	r2, [pc, #388]	; (80264c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 802633a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802633e:	8813      	ldrh	r3, [r2, #0]
 8026340:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8026344:	2fff      	cmp	r7, #255	; 0xff
 8026346:	fb03 a404 	mla	r4, r3, r4, sl
 802634a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802634e:	f106 0604 	add.w	r6, r6, #4
 8026352:	4611      	mov	r1, r2
 8026354:	fb03 fb0b 	mul.w	fp, r3, fp
 8026358:	d06b      	beq.n	8026432 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 802635a:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802635e:	9303      	str	r3, [sp, #12]
 8026360:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8026364:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8026368:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802636c:	9b07      	ldr	r3, [sp, #28]
 802636e:	42a3      	cmp	r3, r4
 8026370:	f240 809c 	bls.w	80264ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026374:	9b06      	ldr	r3, [sp, #24]
 8026376:	2b00      	cmp	r3, #0
 8026378:	d039      	beq.n	80263ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 802637a:	782b      	ldrb	r3, [r5, #0]
 802637c:	8822      	ldrh	r2, [r4, #0]
 802637e:	9804      	ldr	r0, [sp, #16]
 8026380:	f003 030f 	and.w	r3, r3, #15
 8026384:	f105 0801 	add.w	r8, r5, #1
 8026388:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802638c:	9b03      	ldr	r3, [sp, #12]
 802638e:	9300      	str	r3, [sp, #0]
 8026390:	463b      	mov	r3, r7
 8026392:	f7ff ff53 	bl	802623c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026396:	f824 0b02 	strh.w	r0, [r4], #2
 802639a:	f109 3bff 	add.w	fp, r9, #4294967295
 802639e:	f1bb 0f01 	cmp.w	fp, #1
 80263a2:	46a2      	mov	sl, r4
 80263a4:	f104 0404 	add.w	r4, r4, #4
 80263a8:	dd24      	ble.n	80263f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80263aa:	f898 3000 	ldrb.w	r3, [r8]
 80263ae:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80263b2:	9804      	ldr	r0, [sp, #16]
 80263b4:	091b      	lsrs	r3, r3, #4
 80263b6:	f1ab 0b02 	sub.w	fp, fp, #2
 80263ba:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80263be:	9b03      	ldr	r3, [sp, #12]
 80263c0:	9300      	str	r3, [sp, #0]
 80263c2:	463b      	mov	r3, r7
 80263c4:	f7ff ff3a 	bl	802623c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80263c8:	f824 0c04 	strh.w	r0, [r4, #-4]
 80263cc:	f818 3b01 	ldrb.w	r3, [r8], #1
 80263d0:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80263d4:	9804      	ldr	r0, [sp, #16]
 80263d6:	f003 030f 	and.w	r3, r3, #15
 80263da:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80263de:	9b03      	ldr	r3, [sp, #12]
 80263e0:	9300      	str	r3, [sp, #0]
 80263e2:	463b      	mov	r3, r7
 80263e4:	f7ff ff2a 	bl	802623c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80263e8:	f824 0c02 	strh.w	r0, [r4, #-2]
 80263ec:	e7d7      	b.n	802639e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80263ee:	46a8      	mov	r8, r5
 80263f0:	46cb      	mov	fp, r9
 80263f2:	e7d4      	b.n	802639e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80263f4:	d10e      	bne.n	8026414 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80263f6:	f898 3000 	ldrb.w	r3, [r8]
 80263fa:	f8ba 2000 	ldrh.w	r2, [sl]
 80263fe:	9804      	ldr	r0, [sp, #16]
 8026400:	091b      	lsrs	r3, r3, #4
 8026402:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026406:	9b03      	ldr	r3, [sp, #12]
 8026408:	9300      	str	r3, [sp, #0]
 802640a:	463b      	mov	r3, r7
 802640c:	f7ff ff16 	bl	802623c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026410:	f82a 0b02 	strh.w	r0, [sl], #2
 8026414:	9b08      	ldr	r3, [sp, #32]
 8026416:	9a05      	ldr	r2, [sp, #20]
 8026418:	881c      	ldrh	r4, [r3, #0]
 802641a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802641e:	eba4 0409 	sub.w	r4, r4, r9
 8026422:	4413      	add	r3, r2
 8026424:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8026428:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802642a:	fb93 f3f2 	sdiv	r3, r3, r2
 802642e:	441d      	add	r5, r3
 8026430:	e79c      	b.n	802636c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 8026432:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8026436:	45a3      	cmp	fp, r4
 8026438:	d938      	bls.n	80264ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802643a:	9b06      	ldr	r3, [sp, #24]
 802643c:	b1f3      	cbz	r3, 802647c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802643e:	782b      	ldrb	r3, [r5, #0]
 8026440:	f003 030f 	and.w	r3, r3, #15
 8026444:	1c6a      	adds	r2, r5, #1
 8026446:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802644a:	8023      	strh	r3, [r4, #0]
 802644c:	f109 30ff 	add.w	r0, r9, #4294967295
 8026450:	3402      	adds	r4, #2
 8026452:	2801      	cmp	r0, #1
 8026454:	4623      	mov	r3, r4
 8026456:	f104 0404 	add.w	r4, r4, #4
 802645a:	dd12      	ble.n	8026482 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 802645c:	7813      	ldrb	r3, [r2, #0]
 802645e:	091b      	lsrs	r3, r3, #4
 8026460:	3802      	subs	r0, #2
 8026462:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026466:	f824 3c04 	strh.w	r3, [r4, #-4]
 802646a:	f812 3b01 	ldrb.w	r3, [r2], #1
 802646e:	f003 030f 	and.w	r3, r3, #15
 8026472:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026476:	f824 3c02 	strh.w	r3, [r4, #-2]
 802647a:	e7ea      	b.n	8026452 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802647c:	462a      	mov	r2, r5
 802647e:	4648      	mov	r0, r9
 8026480:	e7e7      	b.n	8026452 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8026482:	d106      	bne.n	8026492 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8026484:	7812      	ldrb	r2, [r2, #0]
 8026486:	0912      	lsrs	r2, r2, #4
 8026488:	3302      	adds	r3, #2
 802648a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802648e:	f823 2c02 	strh.w	r2, [r3, #-2]
 8026492:	880c      	ldrh	r4, [r1, #0]
 8026494:	9a05      	ldr	r2, [sp, #20]
 8026496:	eba4 0409 	sub.w	r4, r4, r9
 802649a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802649e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80264a2:	4413      	add	r3, r2
 80264a4:	fb93 f3f8 	sdiv	r3, r3, r8
 80264a8:	441d      	add	r5, r3
 80264aa:	e7c4      	b.n	8026436 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80264ac:	4b03      	ldr	r3, [pc, #12]	; (80264bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80264ae:	6818      	ldr	r0, [r3, #0]
 80264b0:	6803      	ldr	r3, [r0, #0]
 80264b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80264b4:	4798      	blx	r3
 80264b6:	b00f      	add	sp, #60	; 0x3c
 80264b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80264bc:	20012db4 	.word	0x20012db4
 80264c0:	20012dae 	.word	0x20012dae

080264c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80264c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80264c6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80264ca:	2dff      	cmp	r5, #255	; 0xff
 80264cc:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80264d0:	d10c      	bne.n	80264ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80264d2:	2bff      	cmp	r3, #255	; 0xff
 80264d4:	d10a      	bne.n	80264ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80264d6:	4b25      	ldr	r3, [pc, #148]	; (802656c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80264d8:	0948      	lsrs	r0, r1, #5
 80264da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80264de:	403b      	ands	r3, r7
 80264e0:	4318      	orrs	r0, r3
 80264e2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80264e6:	4308      	orrs	r0, r1
 80264e8:	b280      	uxth	r0, r0
 80264ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80264ec:	fb15 f503 	smulbb	r5, r5, r3
 80264f0:	b2ab      	uxth	r3, r5
 80264f2:	1c5d      	adds	r5, r3, #1
 80264f4:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80264f8:	1214      	asrs	r4, r2, #8
 80264fa:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80264fe:	fa1f fc85 	uxth.w	ip, r5
 8026502:	10d6      	asrs	r6, r2, #3
 8026504:	00d0      	lsls	r0, r2, #3
 8026506:	43ed      	mvns	r5, r5
 8026508:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802650c:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8026510:	b2eb      	uxtb	r3, r5
 8026512:	b2c0      	uxtb	r0, r0
 8026514:	fb12 f20c 	smulbb	r2, r2, ip
 8026518:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802651c:	fb04 2403 	mla	r4, r4, r3, r2
 8026520:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8026524:	b2c8      	uxtb	r0, r1
 8026526:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802652a:	b2fd      	uxtb	r5, r7
 802652c:	fb10 f00c 	smulbb	r0, r0, ip
 8026530:	b2a4      	uxth	r4, r4
 8026532:	fb02 0003 	mla	r0, r2, r3, r0
 8026536:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802653a:	fb15 f50c 	smulbb	r5, r5, ip
 802653e:	fb06 5503 	mla	r5, r6, r3, r5
 8026542:	b283      	uxth	r3, r0
 8026544:	1c60      	adds	r0, r4, #1
 8026546:	b2ad      	uxth	r5, r5
 8026548:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802654c:	1c58      	adds	r0, r3, #1
 802654e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026552:	1c6b      	adds	r3, r5, #1
 8026554:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8026558:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802655c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026560:	096d      	lsrs	r5, r5, #5
 8026562:	4320      	orrs	r0, r4
 8026564:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8026568:	4328      	orrs	r0, r5
 802656a:	e7be      	b.n	80264ea <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 802656c:	00fff800 	.word	0x00fff800

08026570 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8026570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026574:	461c      	mov	r4, r3
 8026576:	b08d      	sub	sp, #52	; 0x34
 8026578:	460d      	mov	r5, r1
 802657a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802657c:	6861      	ldr	r1, [r4, #4]
 802657e:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8026582:	4680      	mov	r8, r0
 8026584:	6820      	ldr	r0, [r4, #0]
 8026586:	4616      	mov	r6, r2
 8026588:	aa08      	add	r2, sp, #32
 802658a:	c203      	stmia	r2!, {r0, r1}
 802658c:	6818      	ldr	r0, [r3, #0]
 802658e:	6859      	ldr	r1, [r3, #4]
 8026590:	aa0a      	add	r2, sp, #40	; 0x28
 8026592:	c203      	stmia	r2!, {r0, r1}
 8026594:	a808      	add	r0, sp, #32
 8026596:	f7ef f93f 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802659a:	4621      	mov	r1, r4
 802659c:	a80a      	add	r0, sp, #40	; 0x28
 802659e:	f7ef f97f 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80265a2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80265a6:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80265aa:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80265ae:	f002 0301 	and.w	r3, r2, #1
 80265b2:	9303      	str	r3, [sp, #12]
 80265b4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80265b8:	f003 0101 	and.w	r1, r3, #1
 80265bc:	9102      	str	r1, [sp, #8]
 80265be:	9802      	ldr	r0, [sp, #8]
 80265c0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80265c4:	4403      	add	r3, r0
 80265c6:	fb01 2303 	mla	r3, r1, r3, r2
 80265ca:	f04f 0a02 	mov.w	sl, #2
 80265ce:	fb93 f3fa 	sdiv	r3, r3, sl
 80265d2:	441d      	add	r5, r3
 80265d4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80265d8:	441a      	add	r2, r3
 80265da:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80265de:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80265e2:	4a3f      	ldr	r2, [pc, #252]	; (80266e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80265e4:	9205      	str	r2, [sp, #20]
 80265e6:	4419      	add	r1, r3
 80265e8:	6810      	ldr	r0, [r2, #0]
 80265ea:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80265ee:	6803      	ldr	r3, [r0, #0]
 80265f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80265f2:	4798      	blx	r3
 80265f4:	4b3b      	ldr	r3, [pc, #236]	; (80266e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80265f6:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80265fa:	8819      	ldrh	r1, [r3, #0]
 80265fc:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8026600:	fb01 c404 	mla	r4, r1, r4, ip
 8026604:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026608:	434f      	muls	r7, r1
 802660a:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802660e:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8026612:	3604      	adds	r6, #4
 8026614:	9204      	str	r2, [sp, #16]
 8026616:	9b04      	ldr	r3, [sp, #16]
 8026618:	429c      	cmp	r4, r3
 802661a:	d258      	bcs.n	80266ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 802661c:	9b03      	ldr	r3, [sp, #12]
 802661e:	2b00      	cmp	r3, #0
 8026620:	d034      	beq.n	802668c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8026622:	782b      	ldrb	r3, [r5, #0]
 8026624:	f003 030f 	and.w	r3, r3, #15
 8026628:	1c6f      	adds	r7, r5, #1
 802662a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802662e:	0e0b      	lsrs	r3, r1, #24
 8026630:	d006      	beq.n	8026640 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8026632:	8822      	ldrh	r2, [r4, #0]
 8026634:	9300      	str	r3, [sp, #0]
 8026636:	4640      	mov	r0, r8
 8026638:	464b      	mov	r3, r9
 802663a:	f7ff ff43 	bl	80264c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802663e:	8020      	strh	r0, [r4, #0]
 8026640:	3402      	adds	r4, #2
 8026642:	f10b 3aff 	add.w	sl, fp, #4294967295
 8026646:	f1ba 0f01 	cmp.w	sl, #1
 802664a:	dd22      	ble.n	8026692 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 802664c:	783b      	ldrb	r3, [r7, #0]
 802664e:	091b      	lsrs	r3, r3, #4
 8026650:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026654:	0e0b      	lsrs	r3, r1, #24
 8026656:	d006      	beq.n	8026666 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8026658:	8822      	ldrh	r2, [r4, #0]
 802665a:	9300      	str	r3, [sp, #0]
 802665c:	4640      	mov	r0, r8
 802665e:	464b      	mov	r3, r9
 8026660:	f7ff ff30 	bl	80264c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026664:	8020      	strh	r0, [r4, #0]
 8026666:	f817 3b01 	ldrb.w	r3, [r7], #1
 802666a:	f003 030f 	and.w	r3, r3, #15
 802666e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026672:	0e0b      	lsrs	r3, r1, #24
 8026674:	d006      	beq.n	8026684 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8026676:	8862      	ldrh	r2, [r4, #2]
 8026678:	9300      	str	r3, [sp, #0]
 802667a:	4640      	mov	r0, r8
 802667c:	464b      	mov	r3, r9
 802667e:	f7ff ff21 	bl	80264c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026682:	8060      	strh	r0, [r4, #2]
 8026684:	3404      	adds	r4, #4
 8026686:	f1aa 0a02 	sub.w	sl, sl, #2
 802668a:	e7dc      	b.n	8026646 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802668c:	462f      	mov	r7, r5
 802668e:	46da      	mov	sl, fp
 8026690:	e7d9      	b.n	8026646 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8026692:	d10d      	bne.n	80266b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8026694:	783b      	ldrb	r3, [r7, #0]
 8026696:	091b      	lsrs	r3, r3, #4
 8026698:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802669c:	0e0b      	lsrs	r3, r1, #24
 802669e:	d006      	beq.n	80266ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80266a0:	8822      	ldrh	r2, [r4, #0]
 80266a2:	9300      	str	r3, [sp, #0]
 80266a4:	4640      	mov	r0, r8
 80266a6:	464b      	mov	r3, r9
 80266a8:	f7ff ff0c 	bl	80264c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80266ac:	8020      	strh	r0, [r4, #0]
 80266ae:	3402      	adds	r4, #2
 80266b0:	9b06      	ldr	r3, [sp, #24]
 80266b2:	9a02      	ldr	r2, [sp, #8]
 80266b4:	881b      	ldrh	r3, [r3, #0]
 80266b6:	eba3 030b 	sub.w	r3, r3, fp
 80266ba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80266be:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80266c2:	4413      	add	r3, r2
 80266c4:	9a07      	ldr	r2, [sp, #28]
 80266c6:	fb93 f3f2 	sdiv	r3, r3, r2
 80266ca:	441d      	add	r5, r3
 80266cc:	e7a3      	b.n	8026616 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80266ce:	9b05      	ldr	r3, [sp, #20]
 80266d0:	6818      	ldr	r0, [r3, #0]
 80266d2:	6803      	ldr	r3, [r0, #0]
 80266d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80266d6:	4798      	blx	r3
 80266d8:	b00d      	add	sp, #52	; 0x34
 80266da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80266de:	bf00      	nop
 80266e0:	20012db4 	.word	0x20012db4
 80266e4:	20012dae 	.word	0x20012dae

080266e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80266e8:	b570      	push	{r4, r5, r6, lr}
 80266ea:	1214      	asrs	r4, r2, #8
 80266ec:	788d      	ldrb	r5, [r1, #2]
 80266ee:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80266f2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80266f6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80266fa:	fb15 f503 	smulbb	r5, r5, r3
 80266fe:	fb04 5506 	mla	r5, r4, r6, r5
 8026702:	10d0      	asrs	r0, r2, #3
 8026704:	784c      	ldrb	r4, [r1, #1]
 8026706:	7809      	ldrb	r1, [r1, #0]
 8026708:	00d2      	lsls	r2, r2, #3
 802670a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802670e:	b2d2      	uxtb	r2, r2
 8026710:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8026714:	fb14 f403 	smulbb	r4, r4, r3
 8026718:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802671c:	fb11 f303 	smulbb	r3, r1, r3
 8026720:	fb00 4406 	mla	r4, r0, r6, r4
 8026724:	fb02 3306 	mla	r3, r2, r6, r3
 8026728:	b2ad      	uxth	r5, r5
 802672a:	b29b      	uxth	r3, r3
 802672c:	b2a4      	uxth	r4, r4
 802672e:	1c68      	adds	r0, r5, #1
 8026730:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8026734:	1c62      	adds	r2, r4, #1
 8026736:	1c58      	adds	r0, r3, #1
 8026738:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802673c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026740:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8026744:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026748:	0964      	lsrs	r4, r4, #5
 802674a:	4328      	orrs	r0, r5
 802674c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026750:	4320      	orrs	r0, r4
 8026752:	bd70      	pop	{r4, r5, r6, pc}

08026754 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8026754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026758:	b08f      	sub	sp, #60	; 0x3c
 802675a:	461c      	mov	r4, r3
 802675c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8026760:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026762:	4682      	mov	sl, r0
 8026764:	460e      	mov	r6, r1
 8026766:	4615      	mov	r5, r2
 8026768:	2f00      	cmp	r7, #0
 802676a:	f000 8142 	beq.w	80269f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802676e:	6820      	ldr	r0, [r4, #0]
 8026770:	6861      	ldr	r1, [r4, #4]
 8026772:	aa0a      	add	r2, sp, #40	; 0x28
 8026774:	c203      	stmia	r2!, {r0, r1}
 8026776:	6818      	ldr	r0, [r3, #0]
 8026778:	6859      	ldr	r1, [r3, #4]
 802677a:	aa0c      	add	r2, sp, #48	; 0x30
 802677c:	c203      	stmia	r2!, {r0, r1}
 802677e:	a80a      	add	r0, sp, #40	; 0x28
 8026780:	f7ef f84a 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026784:	4621      	mov	r1, r4
 8026786:	a80c      	add	r0, sp, #48	; 0x30
 8026788:	f7ef f88a 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802678c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026790:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026794:	f002 0301 	and.w	r3, r2, #1
 8026798:	9306      	str	r3, [sp, #24]
 802679a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802679e:	f003 0101 	and.w	r1, r3, #1
 80267a2:	9105      	str	r1, [sp, #20]
 80267a4:	9805      	ldr	r0, [sp, #20]
 80267a6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80267aa:	4403      	add	r3, r0
 80267ac:	fb01 2303 	mla	r3, r1, r3, r2
 80267b0:	f04f 0802 	mov.w	r8, #2
 80267b4:	fb93 f3f8 	sdiv	r3, r3, r8
 80267b8:	441e      	add	r6, r3
 80267ba:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80267be:	441a      	add	r2, r3
 80267c0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80267c4:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80267c8:	4419      	add	r1, r3
 80267ca:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80267ce:	9303      	str	r3, [sp, #12]
 80267d0:	4b89      	ldr	r3, [pc, #548]	; (80269f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80267d2:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80267d6:	6818      	ldr	r0, [r3, #0]
 80267d8:	6803      	ldr	r3, [r0, #0]
 80267da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80267dc:	4798      	blx	r3
 80267de:	4a87      	ldr	r2, [pc, #540]	; (80269fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80267e0:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80267e4:	8813      	ldrh	r3, [r2, #0]
 80267e6:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 80267ea:	2fff      	cmp	r7, #255	; 0xff
 80267ec:	fb03 9404 	mla	r4, r3, r4, r9
 80267f0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80267f4:	f105 0504 	add.w	r5, r5, #4
 80267f8:	4694      	mov	ip, r2
 80267fa:	fb03 f30b 	mul.w	r3, r3, fp
 80267fe:	d071      	beq.n	80268e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8026800:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026804:	43f9      	mvns	r1, r7
 8026806:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802680a:	b2c9      	uxtb	r1, r1
 802680c:	9104      	str	r1, [sp, #16]
 802680e:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8026812:	9b07      	ldr	r3, [sp, #28]
 8026814:	42a3      	cmp	r3, r4
 8026816:	f240 80e7 	bls.w	80269e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802681a:	9b06      	ldr	r3, [sp, #24]
 802681c:	2b00      	cmp	r3, #0
 802681e:	d03d      	beq.n	802689c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8026820:	7831      	ldrb	r1, [r6, #0]
 8026822:	9b04      	ldr	r3, [sp, #16]
 8026824:	8822      	ldrh	r2, [r4, #0]
 8026826:	9300      	str	r3, [sp, #0]
 8026828:	f001 010f 	and.w	r1, r1, #15
 802682c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026830:	463b      	mov	r3, r7
 8026832:	4429      	add	r1, r5
 8026834:	4650      	mov	r0, sl
 8026836:	f7ff ff57 	bl	80266e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802683a:	9b03      	ldr	r3, [sp, #12]
 802683c:	f824 0b02 	strh.w	r0, [r4], #2
 8026840:	f106 0801 	add.w	r8, r6, #1
 8026844:	f103 3bff 	add.w	fp, r3, #4294967295
 8026848:	f1bb 0f01 	cmp.w	fp, #1
 802684c:	46a1      	mov	r9, r4
 802684e:	f104 0404 	add.w	r4, r4, #4
 8026852:	dd27      	ble.n	80268a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8026854:	f898 1000 	ldrb.w	r1, [r8]
 8026858:	9b04      	ldr	r3, [sp, #16]
 802685a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802685e:	9300      	str	r3, [sp, #0]
 8026860:	0909      	lsrs	r1, r1, #4
 8026862:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026866:	463b      	mov	r3, r7
 8026868:	4429      	add	r1, r5
 802686a:	4650      	mov	r0, sl
 802686c:	f7ff ff3c 	bl	80266e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026870:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026874:	f818 1b01 	ldrb.w	r1, [r8], #1
 8026878:	9b04      	ldr	r3, [sp, #16]
 802687a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802687e:	9300      	str	r3, [sp, #0]
 8026880:	f001 010f 	and.w	r1, r1, #15
 8026884:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8026888:	463b      	mov	r3, r7
 802688a:	4429      	add	r1, r5
 802688c:	4650      	mov	r0, sl
 802688e:	f7ff ff2b 	bl	80266e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8026892:	f1ab 0b02 	sub.w	fp, fp, #2
 8026896:	f824 0c02 	strh.w	r0, [r4, #-2]
 802689a:	e7d5      	b.n	8026848 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802689c:	46b0      	mov	r8, r6
 802689e:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80268a2:	e7d1      	b.n	8026848 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80268a4:	d10f      	bne.n	80268c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80268a6:	f898 1000 	ldrb.w	r1, [r8]
 80268aa:	9b04      	ldr	r3, [sp, #16]
 80268ac:	f8b9 2000 	ldrh.w	r2, [r9]
 80268b0:	9300      	str	r3, [sp, #0]
 80268b2:	0909      	lsrs	r1, r1, #4
 80268b4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80268b8:	463b      	mov	r3, r7
 80268ba:	4429      	add	r1, r5
 80268bc:	4650      	mov	r0, sl
 80268be:	f7ff ff13 	bl	80266e8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80268c2:	f829 0b02 	strh.w	r0, [r9], #2
 80268c6:	9b08      	ldr	r3, [sp, #32]
 80268c8:	9a05      	ldr	r2, [sp, #20]
 80268ca:	881c      	ldrh	r4, [r3, #0]
 80268cc:	9b03      	ldr	r3, [sp, #12]
 80268ce:	1ae4      	subs	r4, r4, r3
 80268d0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80268d4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80268d8:	4413      	add	r3, r2
 80268da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80268dc:	fb93 f3f2 	sdiv	r3, r3, r2
 80268e0:	441e      	add	r6, r3
 80268e2:	e796      	b.n	8026812 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 80268e4:	4f46      	ldr	r7, [pc, #280]	; (8026a00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80268e6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80268ea:	42a3      	cmp	r3, r4
 80268ec:	d97c      	bls.n	80269e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80268ee:	9a06      	ldr	r2, [sp, #24]
 80268f0:	2a00      	cmp	r2, #0
 80268f2:	d054      	beq.n	802699e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80268f4:	7830      	ldrb	r0, [r6, #0]
 80268f6:	f000 000f 	and.w	r0, r0, #15
 80268fa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80268fe:	eb05 0e00 	add.w	lr, r5, r0
 8026902:	5c28      	ldrb	r0, [r5, r0]
 8026904:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8026908:	f89e e001 	ldrb.w	lr, [lr, #1]
 802690c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026910:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8026914:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8026918:	ea42 020e 	orr.w	r2, r2, lr
 802691c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8026920:	f824 2b02 	strh.w	r2, [r4], #2
 8026924:	9a03      	ldr	r2, [sp, #12]
 8026926:	1c71      	adds	r1, r6, #1
 8026928:	f102 3eff 	add.w	lr, r2, #4294967295
 802692c:	f1be 0f01 	cmp.w	lr, #1
 8026930:	4620      	mov	r0, r4
 8026932:	f104 0404 	add.w	r4, r4, #4
 8026936:	dd36      	ble.n	80269a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8026938:	7808      	ldrb	r0, [r1, #0]
 802693a:	0900      	lsrs	r0, r0, #4
 802693c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026940:	eb05 0a00 	add.w	sl, r5, r0
 8026944:	f1ae 0e02 	sub.w	lr, lr, #2
 8026948:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802694c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026950:	00d2      	lsls	r2, r2, #3
 8026952:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026956:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802695a:	ea49 0202 	orr.w	r2, r9, r2
 802695e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026962:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026966:	f824 2c04 	strh.w	r2, [r4, #-4]
 802696a:	f811 0b01 	ldrb.w	r0, [r1], #1
 802696e:	f000 000f 	and.w	r0, r0, #15
 8026972:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8026976:	eb05 0a00 	add.w	sl, r5, r0
 802697a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802697e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8026982:	00d2      	lsls	r2, r2, #3
 8026984:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8026988:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802698c:	ea49 0202 	orr.w	r2, r9, r2
 8026990:	f815 9000 	ldrb.w	r9, [r5, r0]
 8026994:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8026998:	f824 2c02 	strh.w	r2, [r4, #-2]
 802699c:	e7c6      	b.n	802692c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802699e:	4631      	mov	r1, r6
 80269a0:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80269a4:	e7c2      	b.n	802692c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80269a6:	d111      	bne.n	80269cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 80269a8:	7809      	ldrb	r1, [r1, #0]
 80269aa:	0909      	lsrs	r1, r1, #4
 80269ac:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80269b0:	186c      	adds	r4, r5, r1
 80269b2:	5c69      	ldrb	r1, [r5, r1]
 80269b4:	78a2      	ldrb	r2, [r4, #2]
 80269b6:	7864      	ldrb	r4, [r4, #1]
 80269b8:	00e4      	lsls	r4, r4, #3
 80269ba:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80269be:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80269c2:	4322      	orrs	r2, r4
 80269c4:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80269c8:	f820 2b02 	strh.w	r2, [r0], #2
 80269cc:	9a03      	ldr	r2, [sp, #12]
 80269ce:	f8bc 4000 	ldrh.w	r4, [ip]
 80269d2:	9905      	ldr	r1, [sp, #20]
 80269d4:	1aa4      	subs	r4, r4, r2
 80269d6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80269da:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80269de:	440a      	add	r2, r1
 80269e0:	fb92 f2f8 	sdiv	r2, r2, r8
 80269e4:	4416      	add	r6, r2
 80269e6:	e780      	b.n	80268ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 80269e8:	4b03      	ldr	r3, [pc, #12]	; (80269f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80269ea:	6818      	ldr	r0, [r3, #0]
 80269ec:	6803      	ldr	r3, [r0, #0]
 80269ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80269f0:	4798      	blx	r3
 80269f2:	b00f      	add	sp, #60	; 0x3c
 80269f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80269f8:	20012db4 	.word	0x20012db4
 80269fc:	20012dae 	.word	0x20012dae
 8026a00:	fffff800 	.word	0xfffff800

08026a04 <CRC_Lock>:
 8026a04:	b530      	push	{r4, r5, lr}
 8026a06:	4a20      	ldr	r2, [pc, #128]	; (8026a88 <CRC_Lock+0x84>)
 8026a08:	6813      	ldr	r3, [r2, #0]
 8026a0a:	f023 0301 	bic.w	r3, r3, #1
 8026a0e:	6013      	str	r3, [r2, #0]
 8026a10:	4b1e      	ldr	r3, [pc, #120]	; (8026a8c <CRC_Lock+0x88>)
 8026a12:	681a      	ldr	r2, [r3, #0]
 8026a14:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8026a18:	4022      	ands	r2, r4
 8026a1a:	f24c 2540 	movw	r5, #49728	; 0xc240
 8026a1e:	42aa      	cmp	r2, r5
 8026a20:	d005      	beq.n	8026a2e <CRC_Lock+0x2a>
 8026a22:	681b      	ldr	r3, [r3, #0]
 8026a24:	f24c 2270 	movw	r2, #49776	; 0xc270
 8026a28:	4023      	ands	r3, r4
 8026a2a:	4293      	cmp	r3, r2
 8026a2c:	d124      	bne.n	8026a78 <CRC_Lock+0x74>
 8026a2e:	4b18      	ldr	r3, [pc, #96]	; (8026a90 <CRC_Lock+0x8c>)
 8026a30:	681b      	ldr	r3, [r3, #0]
 8026a32:	bb0b      	cbnz	r3, 8026a78 <CRC_Lock+0x74>
 8026a34:	4b17      	ldr	r3, [pc, #92]	; (8026a94 <CRC_Lock+0x90>)
 8026a36:	681a      	ldr	r2, [r3, #0]
 8026a38:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026a3c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8026a40:	d00d      	beq.n	8026a5e <CRC_Lock+0x5a>
 8026a42:	681a      	ldr	r2, [r3, #0]
 8026a44:	f240 4483 	movw	r4, #1155	; 0x483
 8026a48:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8026a4c:	42a2      	cmp	r2, r4
 8026a4e:	d006      	beq.n	8026a5e <CRC_Lock+0x5a>
 8026a50:	681b      	ldr	r3, [r3, #0]
 8026a52:	f240 4285 	movw	r2, #1157	; 0x485
 8026a56:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8026a5a:	4293      	cmp	r3, r2
 8026a5c:	d10c      	bne.n	8026a78 <CRC_Lock+0x74>
 8026a5e:	4b0e      	ldr	r3, [pc, #56]	; (8026a98 <CRC_Lock+0x94>)
 8026a60:	2201      	movs	r2, #1
 8026a62:	601a      	str	r2, [r3, #0]
 8026a64:	681a      	ldr	r2, [r3, #0]
 8026a66:	2a00      	cmp	r2, #0
 8026a68:	d1fc      	bne.n	8026a64 <CRC_Lock+0x60>
 8026a6a:	4b0c      	ldr	r3, [pc, #48]	; (8026a9c <CRC_Lock+0x98>)
 8026a6c:	6018      	str	r0, [r3, #0]
 8026a6e:	6818      	ldr	r0, [r3, #0]
 8026a70:	1a43      	subs	r3, r0, r1
 8026a72:	4258      	negs	r0, r3
 8026a74:	4158      	adcs	r0, r3
 8026a76:	bd30      	pop	{r4, r5, pc}
 8026a78:	4b09      	ldr	r3, [pc, #36]	; (8026aa0 <CRC_Lock+0x9c>)
 8026a7a:	2201      	movs	r2, #1
 8026a7c:	601a      	str	r2, [r3, #0]
 8026a7e:	681a      	ldr	r2, [r3, #0]
 8026a80:	2a00      	cmp	r2, #0
 8026a82:	d1fc      	bne.n	8026a7e <CRC_Lock+0x7a>
 8026a84:	4b07      	ldr	r3, [pc, #28]	; (8026aa4 <CRC_Lock+0xa0>)
 8026a86:	e7f1      	b.n	8026a6c <CRC_Lock+0x68>
 8026a88:	e0002000 	.word	0xe0002000
 8026a8c:	e000ed00 	.word	0xe000ed00
 8026a90:	e0042000 	.word	0xe0042000
 8026a94:	5c001000 	.word	0x5c001000
 8026a98:	58024c08 	.word	0x58024c08
 8026a9c:	58024c00 	.word	0x58024c00
 8026aa0:	40023008 	.word	0x40023008
 8026aa4:	40023000 	.word	0x40023000

08026aa8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8026aa8:	6101      	str	r1, [r0, #16]
 8026aaa:	4770      	bx	lr

08026aac <_ZN8touchgfx8Gestures4tickEv>:
 8026aac:	7b83      	ldrb	r3, [r0, #14]
 8026aae:	b14b      	cbz	r3, 8026ac4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8026ab0:	8903      	ldrh	r3, [r0, #8]
 8026ab2:	3301      	adds	r3, #1
 8026ab4:	b29b      	uxth	r3, r3
 8026ab6:	2b07      	cmp	r3, #7
 8026ab8:	8103      	strh	r3, [r0, #8]
 8026aba:	bf81      	itttt	hi
 8026abc:	2300      	movhi	r3, #0
 8026abe:	8143      	strhhi	r3, [r0, #10]
 8026ac0:	8183      	strhhi	r3, [r0, #12]
 8026ac2:	7383      	strbhi	r3, [r0, #14]
 8026ac4:	4770      	bx	lr
	...

08026ac8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8026ac8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8026acc:	4698      	mov	r8, r3
 8026ace:	8883      	ldrh	r3, [r0, #4]
 8026ad0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026ad4:	eba8 0303 	sub.w	r3, r8, r3
 8026ad8:	b21b      	sxth	r3, r3
 8026ada:	4604      	mov	r4, r0
 8026adc:	2b00      	cmp	r3, #0
 8026ade:	4617      	mov	r7, r2
 8026ae0:	4a18      	ldr	r2, [pc, #96]	; (8026b44 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8026ae2:	9200      	str	r2, [sp, #0]
 8026ae4:	bfb8      	it	lt
 8026ae6:	425b      	neglt	r3, r3
 8026ae8:	8aa2      	ldrh	r2, [r4, #20]
 8026aea:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8026aee:	f8ad 800a 	strh.w	r8, [sp, #10]
 8026af2:	b21b      	sxth	r3, r3
 8026af4:	460e      	mov	r6, r1
 8026af6:	4293      	cmp	r3, r2
 8026af8:	88c1      	ldrh	r1, [r0, #6]
 8026afa:	f8ad 1008 	strh.w	r1, [sp, #8]
 8026afe:	f04f 0000 	mov.w	r0, #0
 8026b02:	f88d 0004 	strb.w	r0, [sp, #4]
 8026b06:	f8ad 500c 	strh.w	r5, [sp, #12]
 8026b0a:	dc07      	bgt.n	8026b1c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8026b0c:	1a69      	subs	r1, r5, r1
 8026b0e:	b209      	sxth	r1, r1
 8026b10:	2900      	cmp	r1, #0
 8026b12:	bfb8      	it	lt
 8026b14:	4249      	neglt	r1, r1
 8026b16:	b209      	sxth	r1, r1
 8026b18:	428a      	cmp	r2, r1
 8026b1a:	da10      	bge.n	8026b3e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8026b1c:	6920      	ldr	r0, [r4, #16]
 8026b1e:	6803      	ldr	r3, [r0, #0]
 8026b20:	4669      	mov	r1, sp
 8026b22:	685b      	ldr	r3, [r3, #4]
 8026b24:	4798      	blx	r3
 8026b26:	eba8 0606 	sub.w	r6, r8, r6
 8026b2a:	2300      	movs	r3, #0
 8026b2c:	1bef      	subs	r7, r5, r7
 8026b2e:	2001      	movs	r0, #1
 8026b30:	8123      	strh	r3, [r4, #8]
 8026b32:	8166      	strh	r6, [r4, #10]
 8026b34:	81a7      	strh	r7, [r4, #12]
 8026b36:	f8a4 8004 	strh.w	r8, [r4, #4]
 8026b3a:	80e5      	strh	r5, [r4, #6]
 8026b3c:	73a0      	strb	r0, [r4, #14]
 8026b3e:	b004      	add	sp, #16
 8026b40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026b44:	0802f378 	.word	0x0802f378

08026b48 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8026b48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026b4a:	461e      	mov	r6, r3
 8026b4c:	1e4b      	subs	r3, r1, #1
 8026b4e:	2b01      	cmp	r3, #1
 8026b50:	b085      	sub	sp, #20
 8026b52:	4604      	mov	r4, r0
 8026b54:	460d      	mov	r5, r1
 8026b56:	4617      	mov	r7, r2
 8026b58:	d84b      	bhi.n	8026bf2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8026b5a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8026b5e:	1cd3      	adds	r3, r2, #3
 8026b60:	b29b      	uxth	r3, r3
 8026b62:	2b06      	cmp	r3, #6
 8026b64:	d916      	bls.n	8026b94 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8026b66:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8026c08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026b6a:	f8cd c004 	str.w	ip, [sp, #4]
 8026b6e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026b72:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026b76:	6900      	ldr	r0, [r0, #16]
 8026b78:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026b7c:	f04f 0c00 	mov.w	ip, #0
 8026b80:	f88d c008 	strb.w	ip, [sp, #8]
 8026b84:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026b88:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026b8c:	6803      	ldr	r3, [r0, #0]
 8026b8e:	a901      	add	r1, sp, #4
 8026b90:	689b      	ldr	r3, [r3, #8]
 8026b92:	4798      	blx	r3
 8026b94:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026b98:	1cd3      	adds	r3, r2, #3
 8026b9a:	b29b      	uxth	r3, r3
 8026b9c:	2b06      	cmp	r3, #6
 8026b9e:	d916      	bls.n	8026bce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026ba0:	f8df c064 	ldr.w	ip, [pc, #100]	; 8026c08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8026ba4:	f8cd c004 	str.w	ip, [sp, #4]
 8026ba8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8026bac:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8026bb0:	6920      	ldr	r0, [r4, #16]
 8026bb2:	f8ad 100c 	strh.w	r1, [sp, #12]
 8026bb6:	f04f 0c01 	mov.w	ip, #1
 8026bba:	f88d c008 	strb.w	ip, [sp, #8]
 8026bbe:	f8ad 200a 	strh.w	r2, [sp, #10]
 8026bc2:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026bc6:	6803      	ldr	r3, [r0, #0]
 8026bc8:	a901      	add	r1, sp, #4
 8026bca:	689b      	ldr	r3, [r3, #8]
 8026bcc:	4798      	blx	r3
 8026bce:	4b0d      	ldr	r3, [pc, #52]	; (8026c04 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8026bd0:	9301      	str	r3, [sp, #4]
 8026bd2:	6920      	ldr	r0, [r4, #16]
 8026bd4:	f88d 5008 	strb.w	r5, [sp, #8]
 8026bd8:	2300      	movs	r3, #0
 8026bda:	f8ad 700a 	strh.w	r7, [sp, #10]
 8026bde:	f8ad 600c 	strh.w	r6, [sp, #12]
 8026be2:	f8ad 300e 	strh.w	r3, [sp, #14]
 8026be6:	6803      	ldr	r3, [r0, #0]
 8026be8:	a901      	add	r1, sp, #4
 8026bea:	681b      	ldr	r3, [r3, #0]
 8026bec:	4798      	blx	r3
 8026bee:	b005      	add	sp, #20
 8026bf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026bf2:	2900      	cmp	r1, #0
 8026bf4:	d1eb      	bne.n	8026bce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026bf6:	80a2      	strh	r2, [r4, #4]
 8026bf8:	80c6      	strh	r6, [r0, #6]
 8026bfa:	60a1      	str	r1, [r4, #8]
 8026bfc:	81a1      	strh	r1, [r4, #12]
 8026bfe:	73a1      	strb	r1, [r4, #14]
 8026c00:	e7e5      	b.n	8026bce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8026c02:	bf00      	nop
 8026c04:	0802f364 	.word	0x0802f364
 8026c08:	0802f38c 	.word	0x0802f38c

08026c0c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8026c0c:	10c9      	asrs	r1, r1, #3
 8026c0e:	2900      	cmp	r1, #0
 8026c10:	bfb8      	it	lt
 8026c12:	4249      	neglt	r1, r1
 8026c14:	2801      	cmp	r0, #1
 8026c16:	d108      	bne.n	8026c2a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026c18:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8026c1c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8026c20:	4601      	mov	r1, r0
 8026c22:	dd02      	ble.n	8026c2a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8026c24:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8026c28:	4770      	bx	lr
 8026c2a:	29ff      	cmp	r1, #255	; 0xff
 8026c2c:	bfa8      	it	ge
 8026c2e:	21ff      	movge	r1, #255	; 0xff
 8026c30:	4608      	mov	r0, r1
 8026c32:	4770      	bx	lr

08026c34 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8026c34:	b410      	push	{r4}
 8026c36:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8026c3a:	429c      	cmp	r4, r3
 8026c3c:	d803      	bhi.n	8026c46 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8026c3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026c42:	f7ed b8ef 	b.w	8013e24 <_ZN8touchgfx7Outline6lineToEii>
 8026c46:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026c4a:	4770      	bx	lr

08026c4c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8026c4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026c50:	b08b      	sub	sp, #44	; 0x2c
 8026c52:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8026c56:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8026c5a:	9308      	str	r3, [sp, #32]
 8026c5c:	4606      	mov	r6, r0
 8026c5e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8026c62:	9309      	str	r3, [sp, #36]	; 0x24
 8026c64:	468a      	mov	sl, r1
 8026c66:	f7ed fa4a 	bl	80140fe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8026c6a:	68b5      	ldr	r5, [r6, #8]
 8026c6c:	4604      	mov	r4, r0
 8026c6e:	2d00      	cmp	r5, #0
 8026c70:	d044      	beq.n	8026cfc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026c72:	6873      	ldr	r3, [r6, #4]
 8026c74:	42ab      	cmp	r3, r5
 8026c76:	d33d      	bcc.n	8026cf4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8026c78:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8026c7c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8026c80:	eb02 0b03 	add.w	fp, r2, r3
 8026c84:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8026c88:	fb02 1203 	mla	r2, r2, r3, r1
 8026c8c:	9205      	str	r2, [sp, #20]
 8026c8e:	1e6a      	subs	r2, r5, #1
 8026c90:	9204      	str	r2, [sp, #16]
 8026c92:	f04f 0800 	mov.w	r8, #0
 8026c96:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8026c9a:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026c9e:	454b      	cmp	r3, r9
 8026ca0:	463a      	mov	r2, r7
 8026ca2:	d008      	beq.n	8026cb6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8026ca4:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8026ca8:	eb03 0b09 	add.w	fp, r3, r9
 8026cac:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8026cb0:	fb03 1309 	mla	r3, r3, r9, r1
 8026cb4:	9305      	str	r3, [sp, #20]
 8026cb6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8026cba:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8026cbe:	4498      	add	r8, r3
 8026cc0:	9b04      	ldr	r3, [sp, #16]
 8026cc2:	3b01      	subs	r3, #1
 8026cc4:	9304      	str	r3, [sp, #16]
 8026cc6:	9b04      	ldr	r3, [sp, #16]
 8026cc8:	3301      	adds	r3, #1
 8026cca:	d015      	beq.n	8026cf8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8026ccc:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8026cd0:	42bb      	cmp	r3, r7
 8026cd2:	d117      	bne.n	8026d04 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8026cd4:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8026cd8:	9b04      	ldr	r3, [sp, #16]
 8026cda:	4548      	cmp	r0, r9
 8026cdc:	f103 33ff 	add.w	r3, r3, #4294967295
 8026ce0:	d17f      	bne.n	8026de2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8026ce2:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8026ce6:	4401      	add	r1, r0
 8026ce8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8026cec:	4480      	add	r8, r0
 8026cee:	e7e9      	b.n	8026cc4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8026cf0:	461f      	mov	r7, r3
 8026cf2:	e044      	b.n	8026d7e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8026cf4:	2000      	movs	r0, #0
 8026cf6:	e002      	b.n	8026cfe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8026cf8:	2900      	cmp	r1, #0
 8026cfa:	d16f      	bne.n	8026ddc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8026cfc:	2001      	movs	r0, #1
 8026cfe:	b00b      	add	sp, #44	; 0x2c
 8026d00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026d04:	2900      	cmp	r1, #0
 8026d06:	d030      	beq.n	8026d6a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8026d08:	2f00      	cmp	r7, #0
 8026d0a:	db29      	blt.n	8026d60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026d0c:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026d10:	42bb      	cmp	r3, r7
 8026d12:	dd25      	ble.n	8026d60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026d14:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8026d18:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026d1c:	f7ff ff76 	bl	8026c0c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026d20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026d22:	fb10 f003 	smulbb	r0, r0, r3
 8026d26:	b280      	uxth	r0, r0
 8026d28:	1c41      	adds	r1, r0, #1
 8026d2a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026d2e:	1209      	asrs	r1, r1, #8
 8026d30:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026d34:	d014      	beq.n	8026d60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026d36:	9808      	ldr	r0, [sp, #32]
 8026d38:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026d3a:	b2c9      	uxtb	r1, r1
 8026d3c:	b2ba      	uxth	r2, r7
 8026d3e:	9102      	str	r1, [sp, #8]
 8026d40:	2101      	movs	r1, #1
 8026d42:	4413      	add	r3, r2
 8026d44:	9101      	str	r1, [sp, #4]
 8026d46:	4402      	add	r2, r0
 8026d48:	fa0f f18b 	sxth.w	r1, fp
 8026d4c:	f8da 0000 	ldr.w	r0, [sl]
 8026d50:	9100      	str	r1, [sp, #0]
 8026d52:	6941      	ldr	r1, [r0, #20]
 8026d54:	b21b      	sxth	r3, r3
 8026d56:	460d      	mov	r5, r1
 8026d58:	b212      	sxth	r2, r2
 8026d5a:	9905      	ldr	r1, [sp, #20]
 8026d5c:	4650      	mov	r0, sl
 8026d5e:	47a8      	blx	r5
 8026d60:	9b04      	ldr	r3, [sp, #16]
 8026d62:	3301      	adds	r3, #1
 8026d64:	f107 0201 	add.w	r2, r7, #1
 8026d68:	d0c8      	beq.n	8026cfc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026d6a:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026d6e:	1abb      	subs	r3, r7, r2
 8026d70:	2b00      	cmp	r3, #0
 8026d72:	dd31      	ble.n	8026dd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026d74:	2a00      	cmp	r2, #0
 8026d76:	dabb      	bge.n	8026cf0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8026d78:	2f00      	cmp	r7, #0
 8026d7a:	dd2d      	ble.n	8026dd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026d7c:	2200      	movs	r2, #0
 8026d7e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026d82:	19d1      	adds	r1, r2, r7
 8026d84:	4299      	cmp	r1, r3
 8026d86:	db02      	blt.n	8026d8e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8026d88:	1a9f      	subs	r7, r3, r2
 8026d8a:	2f00      	cmp	r7, #0
 8026d8c:	dd24      	ble.n	8026dd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026d8e:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8026d92:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026d96:	f7ff ff39 	bl	8026c0c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026d9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026d9c:	fb10 f003 	smulbb	r0, r0, r3
 8026da0:	b280      	uxth	r0, r0
 8026da2:	1c41      	adds	r1, r0, #1
 8026da4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026da8:	1209      	asrs	r1, r1, #8
 8026daa:	f011 0fff 	tst.w	r1, #255	; 0xff
 8026dae:	d013      	beq.n	8026dd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026db0:	9808      	ldr	r0, [sp, #32]
 8026db2:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026db4:	b292      	uxth	r2, r2
 8026db6:	b2c9      	uxtb	r1, r1
 8026db8:	4413      	add	r3, r2
 8026dba:	9102      	str	r1, [sp, #8]
 8026dbc:	4402      	add	r2, r0
 8026dbe:	b23f      	sxth	r7, r7
 8026dc0:	f8da 0000 	ldr.w	r0, [sl]
 8026dc4:	9701      	str	r7, [sp, #4]
 8026dc6:	fa0f f18b 	sxth.w	r1, fp
 8026dca:	9100      	str	r1, [sp, #0]
 8026dcc:	6947      	ldr	r7, [r0, #20]
 8026dce:	9905      	ldr	r1, [sp, #20]
 8026dd0:	b21b      	sxth	r3, r3
 8026dd2:	b212      	sxth	r2, r2
 8026dd4:	4650      	mov	r0, sl
 8026dd6:	47b8      	blx	r7
 8026dd8:	464b      	mov	r3, r9
 8026dda:	e75c      	b.n	8026c96 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8026ddc:	2f00      	cmp	r7, #0
 8026dde:	da95      	bge.n	8026d0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8026de0:	e78c      	b.n	8026cfc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026de2:	2900      	cmp	r1, #0
 8026de4:	d0f8      	beq.n	8026dd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026de6:	e78f      	b.n	8026d08 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08026de8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8026de8:	4b4b      	ldr	r3, [pc, #300]	; (8026f18 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8026dea:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8026dee:	2500      	movs	r5, #0
 8026df0:	f100 0620 	add.w	r6, r0, #32
 8026df4:	4604      	mov	r4, r0
 8026df6:	e9c0 3100 	strd	r3, r1, [r0]
 8026dfa:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8026dfe:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8026e02:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8026e06:	f100 0718 	add.w	r7, r0, #24
 8026e0a:	4630      	mov	r0, r6
 8026e0c:	4690      	mov	r8, r2
 8026e0e:	f7ec fb41 	bl	8013494 <_ZN8touchgfx7OutlineC1Ev>
 8026e12:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8026e16:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8026e1a:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8026e1e:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8026e22:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8026e26:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8026e2a:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8026e2e:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8026e32:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8026e36:	f9b8 2000 	ldrsh.w	r2, [r8]
 8026e3a:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8026e3e:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8026e42:	9500      	str	r5, [sp, #0]
 8026e44:	4410      	add	r0, r2
 8026e46:	b280      	uxth	r0, r0
 8026e48:	fa0f fa80 	sxth.w	sl, r0
 8026e4c:	45aa      	cmp	sl, r5
 8026e4e:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8026e52:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8026e56:	dd5c      	ble.n	8026f12 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026e58:	4591      	cmp	r9, r2
 8026e5a:	dd5a      	ble.n	8026f12 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026e5c:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8026e60:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8026e64:	440b      	add	r3, r1
 8026e66:	b29b      	uxth	r3, r3
 8026e68:	b21d      	sxth	r5, r3
 8026e6a:	2d00      	cmp	r5, #0
 8026e6c:	dd51      	ble.n	8026f12 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026e6e:	458e      	cmp	lr, r1
 8026e70:	dd4f      	ble.n	8026f12 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026e72:	45d1      	cmp	r9, sl
 8026e74:	bfb8      	it	lt
 8026e76:	fa1f f089 	uxthlt.w	r0, r9
 8026e7a:	45ae      	cmp	lr, r5
 8026e7c:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8026e80:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8026e84:	bfb8      	it	lt
 8026e86:	fa1f f38e 	uxthlt.w	r3, lr
 8026e8a:	1a80      	subs	r0, r0, r2
 8026e8c:	1a5b      	subs	r3, r3, r1
 8026e8e:	f8ad 0004 	strh.w	r0, [sp, #4]
 8026e92:	f8ad 3006 	strh.w	r3, [sp, #6]
 8026e96:	f8ad 2000 	strh.w	r2, [sp]
 8026e9a:	f8ad 1002 	strh.w	r1, [sp, #2]
 8026e9e:	466d      	mov	r5, sp
 8026ea0:	e895 0003 	ldmia.w	r5, {r0, r1}
 8026ea4:	e887 0003 	stmia.w	r7, {r0, r1}
 8026ea8:	f8dc 3000 	ldr.w	r3, [ip]
 8026eac:	4660      	mov	r0, ip
 8026eae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026eb0:	4639      	mov	r1, r7
 8026eb2:	4798      	blx	r3
 8026eb4:	6861      	ldr	r1, [r4, #4]
 8026eb6:	4628      	mov	r0, r5
 8026eb8:	3104      	adds	r1, #4
 8026eba:	f7ee fcf1 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026ebe:	4638      	mov	r0, r7
 8026ec0:	f7ee fcaa 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026ec4:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8026ec8:	f8bd 2000 	ldrh.w	r2, [sp]
 8026ecc:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8026ed0:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8026ed4:	4630      	mov	r0, r6
 8026ed6:	f7ec fac1 	bl	801345c <_ZN8touchgfx7Outline5resetEv>
 8026eda:	f9bd 3000 	ldrsh.w	r3, [sp]
 8026ede:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8026ee2:	015b      	lsls	r3, r3, #5
 8026ee4:	60a3      	str	r3, [r4, #8]
 8026ee6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8026eea:	015b      	lsls	r3, r3, #5
 8026eec:	60e3      	str	r3, [r4, #12]
 8026eee:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8026ef2:	015b      	lsls	r3, r3, #5
 8026ef4:	6123      	str	r3, [r4, #16]
 8026ef6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8026efa:	015b      	lsls	r3, r3, #5
 8026efc:	6163      	str	r3, [r4, #20]
 8026efe:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8026f02:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8026f06:	4620      	mov	r0, r4
 8026f08:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8026f0c:	b002      	add	sp, #8
 8026f0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026f12:	2300      	movs	r3, #0
 8026f14:	9301      	str	r3, [sp, #4]
 8026f16:	e7c2      	b.n	8026e9e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8026f18:	0802f6b0 	.word	0x0802f6b0

08026f1c <_ZN8touchgfx6Canvas5closeEv>:
 8026f1c:	b538      	push	{r3, r4, r5, lr}
 8026f1e:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8026f22:	4604      	mov	r4, r0
 8026f24:	b193      	cbz	r3, 8026f4c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8026f26:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8026f2a:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8026f2e:	4213      	tst	r3, r2
 8026f30:	d10c      	bne.n	8026f4c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8026f32:	f100 0520 	add.w	r5, r0, #32
 8026f36:	b123      	cbz	r3, 8026f42 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8026f38:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8026f3c:	4628      	mov	r0, r5
 8026f3e:	f7ff fe79 	bl	8026c34 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026f42:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8026f46:	4628      	mov	r0, r5
 8026f48:	f7ff fe74 	bl	8026c34 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026f4c:	2300      	movs	r3, #0
 8026f4e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026f52:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8026f56:	4298      	cmp	r0, r3
 8026f58:	bf34      	ite	cc
 8026f5a:	2000      	movcc	r0, #0
 8026f5c:	2001      	movcs	r0, #1
 8026f5e:	bd38      	pop	{r3, r4, r5, pc}

08026f60 <_ZN8touchgfx6Canvas6renderEh>:
 8026f60:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8026f64:	4604      	mov	r4, r0
 8026f66:	6840      	ldr	r0, [r0, #4]
 8026f68:	6803      	ldr	r3, [r0, #0]
 8026f6a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8026f6c:	460d      	mov	r5, r1
 8026f6e:	4798      	blx	r3
 8026f70:	fb10 f105 	smulbb	r1, r0, r5
 8026f74:	b289      	uxth	r1, r1
 8026f76:	1c4d      	adds	r5, r1, #1
 8026f78:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8026f7c:	122d      	asrs	r5, r5, #8
 8026f7e:	f000 809d 	beq.w	80270bc <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8026f82:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8026f86:	2b00      	cmp	r3, #0
 8026f88:	f000 8098 	beq.w	80270bc <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8026f8c:	4620      	mov	r0, r4
 8026f8e:	f7ff ffc5 	bl	8026f1c <_ZN8touchgfx6Canvas5closeEv>
 8026f92:	4607      	mov	r7, r0
 8026f94:	2800      	cmp	r0, #0
 8026f96:	d048      	beq.n	802702a <_ZN8touchgfx6Canvas6renderEh+0xca>
 8026f98:	6863      	ldr	r3, [r4, #4]
 8026f9a:	4e49      	ldr	r6, [pc, #292]	; (80270c0 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8026f9c:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8026f9e:	6837      	ldr	r7, [r6, #0]
 8026fa0:	6803      	ldr	r3, [r0, #0]
 8026fa2:	689b      	ldr	r3, [r3, #8]
 8026fa4:	4798      	blx	r3
 8026fa6:	4601      	mov	r1, r0
 8026fa8:	4638      	mov	r0, r7
 8026faa:	f7ea fbc5 	bl	8011738 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8026fae:	4607      	mov	r7, r0
 8026fb0:	f7dd fb84 	bl	80046bc <_ZN8touchgfx3HAL3lcdEv>
 8026fb4:	6803      	ldr	r3, [r0, #0]
 8026fb6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8026fb8:	4798      	blx	r3
 8026fba:	4680      	mov	r8, r0
 8026fbc:	f7dd fb7e 	bl	80046bc <_ZN8touchgfx3HAL3lcdEv>
 8026fc0:	6803      	ldr	r3, [r0, #0]
 8026fc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026fc4:	4798      	blx	r3
 8026fc6:	280b      	cmp	r0, #11
 8026fc8:	d85d      	bhi.n	8027086 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8026fca:	e8df f000 	tbb	[pc, r0]
 8026fce:	5e53      	.short	0x5e53
 8026fd0:	325c066e 	.word	0x325c066e
 8026fd4:	67676742 	.word	0x67676742
 8026fd8:	6767      	.short	0x6767
 8026fda:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026fde:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026fe2:	2208      	movs	r2, #8
 8026fe4:	fb91 f2f2 	sdiv	r2, r1, r2
 8026fe8:	fb08 2303 	mla	r3, r8, r3, r2
 8026fec:	441f      	add	r7, r3
 8026fee:	424b      	negs	r3, r1
 8026ff0:	f003 0307 	and.w	r3, r3, #7
 8026ff4:	f001 0107 	and.w	r1, r1, #7
 8026ff8:	bf58      	it	pl
 8026ffa:	4259      	negpl	r1, r3
 8026ffc:	b2c9      	uxtb	r1, r1
 8026ffe:	b2ed      	uxtb	r5, r5
 8027000:	e9cd 1500 	strd	r1, r5, [sp]
 8027004:	6860      	ldr	r0, [r4, #4]
 8027006:	463a      	mov	r2, r7
 8027008:	6a81      	ldr	r1, [r0, #40]	; 0x28
 802700a:	fa0f f388 	sxth.w	r3, r8
 802700e:	f104 0020 	add.w	r0, r4, #32
 8027012:	f7ff fe1b 	bl	8026c4c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8027016:	6863      	ldr	r3, [r4, #4]
 8027018:	4607      	mov	r7, r0
 802701a:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802701c:	6803      	ldr	r3, [r0, #0]
 802701e:	691b      	ldr	r3, [r3, #16]
 8027020:	4798      	blx	r3
 8027022:	6830      	ldr	r0, [r6, #0]
 8027024:	6803      	ldr	r3, [r0, #0]
 8027026:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027028:	4798      	blx	r3
 802702a:	4638      	mov	r0, r7
 802702c:	b002      	add	sp, #8
 802702e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027032:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027036:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802703a:	2204      	movs	r2, #4
 802703c:	fb91 f2f2 	sdiv	r2, r1, r2
 8027040:	fb08 2303 	mla	r3, r8, r3, r2
 8027044:	441f      	add	r7, r3
 8027046:	424b      	negs	r3, r1
 8027048:	f003 0303 	and.w	r3, r3, #3
 802704c:	f001 0103 	and.w	r1, r1, #3
 8027050:	e7d2      	b.n	8026ff8 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8027052:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027056:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802705a:	2900      	cmp	r1, #0
 802705c:	f04f 0202 	mov.w	r2, #2
 8027060:	fb91 f2f2 	sdiv	r2, r1, r2
 8027064:	f001 0101 	and.w	r1, r1, #1
 8027068:	fb08 2303 	mla	r3, r8, r3, r2
 802706c:	441f      	add	r7, r3
 802706e:	bfb8      	it	lt
 8027070:	4249      	neglt	r1, r1
 8027072:	e7c3      	b.n	8026ffc <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8027074:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027078:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802707c:	fb08 f303 	mul.w	r3, r8, r3
 8027080:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027084:	441f      	add	r7, r3
 8027086:	2100      	movs	r1, #0
 8027088:	e7b9      	b.n	8026ffe <_ZN8touchgfx6Canvas6renderEh+0x9e>
 802708a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802708e:	fb08 f203 	mul.w	r2, r8, r3
 8027092:	8b23      	ldrh	r3, [r4, #24]
 8027094:	2103      	movs	r1, #3
 8027096:	fb13 2301 	smlabb	r3, r3, r1, r2
 802709a:	e7f3      	b.n	8027084 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802709c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80270a0:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80270a4:	fb08 2303 	mla	r3, r8, r3, r2
 80270a8:	e7ec      	b.n	8027084 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80270aa:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80270ae:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80270b2:	fb08 f303 	mul.w	r3, r8, r3
 80270b6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80270ba:	e7e3      	b.n	8027084 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80270bc:	2701      	movs	r7, #1
 80270be:	e7b4      	b.n	802702a <_ZN8touchgfx6Canvas6renderEh+0xca>
 80270c0:	20012db4 	.word	0x20012db4

080270c4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80270c4:	b510      	push	{r4, lr}
 80270c6:	4b07      	ldr	r3, [pc, #28]	; (80270e4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80270c8:	781b      	ldrb	r3, [r3, #0]
 80270ca:	2b01      	cmp	r3, #1
 80270cc:	d108      	bne.n	80270e0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80270ce:	6843      	ldr	r3, [r0, #4]
 80270d0:	6814      	ldr	r4, [r2, #0]
 80270d2:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80270d6:	680b      	ldr	r3, [r1, #0]
 80270d8:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80270dc:	6013      	str	r3, [r2, #0]
 80270de:	600c      	str	r4, [r1, #0]
 80270e0:	bd10      	pop	{r4, pc}
 80270e2:	bf00      	nop
 80270e4:	20012dac 	.word	0x20012dac

080270e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80270e8:	b513      	push	{r0, r1, r4, lr}
 80270ea:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80270ee:	4604      	mov	r4, r0
 80270f0:	e9cd 2100 	strd	r2, r1, [sp]
 80270f4:	b9a3      	cbnz	r3, 8027120 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80270f6:	466a      	mov	r2, sp
 80270f8:	a901      	add	r1, sp, #4
 80270fa:	4620      	mov	r0, r4
 80270fc:	f7ff ffe2 	bl	80270c4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027100:	68a3      	ldr	r3, [r4, #8]
 8027102:	9901      	ldr	r1, [sp, #4]
 8027104:	9a00      	ldr	r2, [sp, #0]
 8027106:	1ac9      	subs	r1, r1, r3
 8027108:	68e3      	ldr	r3, [r4, #12]
 802710a:	9101      	str	r1, [sp, #4]
 802710c:	1ad2      	subs	r2, r2, r3
 802710e:	2a00      	cmp	r2, #0
 8027110:	9200      	str	r2, [sp, #0]
 8027112:	da0b      	bge.n	802712c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8027114:	2301      	movs	r3, #1
 8027116:	2900      	cmp	r1, #0
 8027118:	da0e      	bge.n	8027138 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802711a:	f043 0304 	orr.w	r3, r3, #4
 802711e:	e013      	b.n	8027148 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8027120:	f7ff fefc 	bl	8026f1c <_ZN8touchgfx6Canvas5closeEv>
 8027124:	2800      	cmp	r0, #0
 8027126:	d1e6      	bne.n	80270f6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8027128:	b002      	add	sp, #8
 802712a:	bd10      	pop	{r4, pc}
 802712c:	6963      	ldr	r3, [r4, #20]
 802712e:	429a      	cmp	r2, r3
 8027130:	bfac      	ite	ge
 8027132:	2302      	movge	r3, #2
 8027134:	2300      	movlt	r3, #0
 8027136:	e7ee      	b.n	8027116 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8027138:	6920      	ldr	r0, [r4, #16]
 802713a:	4281      	cmp	r1, r0
 802713c:	bfac      	ite	ge
 802713e:	2008      	movge	r0, #8
 8027140:	2000      	movlt	r0, #0
 8027142:	4318      	orrs	r0, r3
 8027144:	b2c3      	uxtb	r3, r0
 8027146:	b158      	cbz	r0, 8027160 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8027148:	2200      	movs	r2, #0
 802714a:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802714e:	9901      	ldr	r1, [sp, #4]
 8027150:	9a00      	ldr	r2, [sp, #0]
 8027152:	66a1      	str	r1, [r4, #104]	; 0x68
 8027154:	66e2      	str	r2, [r4, #108]	; 0x6c
 8027156:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802715a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802715e:	e7e3      	b.n	8027128 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8027160:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027164:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027168:	4298      	cmp	r0, r3
 802716a:	d803      	bhi.n	8027174 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802716c:	f104 0020 	add.w	r0, r4, #32
 8027170:	f7ec fe72 	bl	8013e58 <_ZN8touchgfx7Outline6moveToEii>
 8027174:	2301      	movs	r3, #1
 8027176:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802717a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802717e:	2300      	movs	r3, #0
 8027180:	e7e5      	b.n	802714e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8027182:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8027184:	ab02      	add	r3, sp, #8
 8027186:	4604      	mov	r4, r0
 8027188:	f843 2d08 	str.w	r2, [r3, #-8]!
 802718c:	9101      	str	r1, [sp, #4]
 802718e:	461a      	mov	r2, r3
 8027190:	a901      	add	r1, sp, #4
 8027192:	f7ff ff97 	bl	80270c4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027196:	68a3      	ldr	r3, [r4, #8]
 8027198:	9901      	ldr	r1, [sp, #4]
 802719a:	9a00      	ldr	r2, [sp, #0]
 802719c:	1ac9      	subs	r1, r1, r3
 802719e:	68e3      	ldr	r3, [r4, #12]
 80271a0:	9101      	str	r1, [sp, #4]
 80271a2:	1ad2      	subs	r2, r2, r3
 80271a4:	2a00      	cmp	r2, #0
 80271a6:	9200      	str	r2, [sp, #0]
 80271a8:	db1c      	blt.n	80271e4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80271aa:	6963      	ldr	r3, [r4, #20]
 80271ac:	429a      	cmp	r2, r3
 80271ae:	bfac      	ite	ge
 80271b0:	2002      	movge	r0, #2
 80271b2:	2000      	movlt	r0, #0
 80271b4:	2900      	cmp	r1, #0
 80271b6:	db17      	blt.n	80271e8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80271b8:	6923      	ldr	r3, [r4, #16]
 80271ba:	4299      	cmp	r1, r3
 80271bc:	bfac      	ite	ge
 80271be:	2308      	movge	r3, #8
 80271c0:	2300      	movlt	r3, #0
 80271c2:	4303      	orrs	r3, r0
 80271c4:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80271c8:	b2dd      	uxtb	r5, r3
 80271ca:	b978      	cbnz	r0, 80271ec <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80271cc:	f104 0020 	add.w	r0, r4, #32
 80271d0:	f7ff fd30 	bl	8026c34 <_ZN8touchgfx10Rasterizer6lineToEii>
 80271d4:	9b01      	ldr	r3, [sp, #4]
 80271d6:	65e3      	str	r3, [r4, #92]	; 0x5c
 80271d8:	9b00      	ldr	r3, [sp, #0]
 80271da:	6623      	str	r3, [r4, #96]	; 0x60
 80271dc:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 80271e0:	b002      	add	sp, #8
 80271e2:	bd70      	pop	{r4, r5, r6, pc}
 80271e4:	2001      	movs	r0, #1
 80271e6:	e7e5      	b.n	80271b4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80271e8:	2304      	movs	r3, #4
 80271ea:	e7ea      	b.n	80271c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80271ec:	b113      	cbz	r3, 80271f4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80271ee:	ea10 0305 	ands.w	r3, r0, r5
 80271f2:	d11c      	bne.n	802722e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80271f4:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 80271f8:	f104 0620 	add.w	r6, r4, #32
 80271fc:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8027200:	b98b      	cbnz	r3, 8027226 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8027202:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027206:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802720a:	4298      	cmp	r0, r3
 802720c:	d802      	bhi.n	8027214 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802720e:	4630      	mov	r0, r6
 8027210:	f7ec fe22 	bl	8013e58 <_ZN8touchgfx7Outline6moveToEii>
 8027214:	2301      	movs	r3, #1
 8027216:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802721a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802721e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8027222:	4630      	mov	r0, r6
 8027224:	e7d4      	b.n	80271d0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8027226:	4630      	mov	r0, r6
 8027228:	f7ff fd04 	bl	8026c34 <_ZN8touchgfx10Rasterizer6lineToEii>
 802722c:	e7f7      	b.n	802721e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802722e:	461d      	mov	r5, r3
 8027230:	e7d0      	b.n	80271d4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08027234 <_ZN8touchgfx6CanvasD1Ev>:
 8027234:	b510      	push	{r4, lr}
 8027236:	4b04      	ldr	r3, [pc, #16]	; (8027248 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8027238:	4604      	mov	r4, r0
 802723a:	f840 3b20 	str.w	r3, [r0], #32
 802723e:	f7ec f905 	bl	801344c <_ZN8touchgfx7OutlineD1Ev>
 8027242:	4620      	mov	r0, r4
 8027244:	bd10      	pop	{r4, pc}
 8027246:	bf00      	nop
 8027248:	0802f6b0 	.word	0x0802f6b0

0802724c <_ZN8touchgfx6CanvasD0Ev>:
 802724c:	b510      	push	{r4, lr}
 802724e:	4604      	mov	r4, r0
 8027250:	f7ff fff0 	bl	8027234 <_ZN8touchgfx6CanvasD1Ev>
 8027254:	4620      	mov	r0, r4
 8027256:	2170      	movs	r1, #112	; 0x70
 8027258:	f002 fd09 	bl	8029c6e <_ZdlPvj>
 802725c:	4620      	mov	r0, r4
 802725e:	bd10      	pop	{r4, pc}

08027260 <_ZN8touchgfx6CircleD1Ev>:
 8027260:	4770      	bx	lr

08027262 <_ZN8touchgfx6CircleD0Ev>:
 8027262:	b510      	push	{r4, lr}
 8027264:	2148      	movs	r1, #72	; 0x48
 8027266:	4604      	mov	r4, r0
 8027268:	f002 fd01 	bl	8029c6e <_ZdlPvj>
 802726c:	4620      	mov	r0, r4
 802726e:	bd10      	pop	{r4, pc}

08027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8027270:	b508      	push	{r3, lr}
 8027272:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8027276:	f7ea fdb5 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802727a:	bd08      	pop	{r3, pc}

0802727c <_ZN8touchgfx6CircleC1Ev>:
 802727c:	b510      	push	{r4, lr}
 802727e:	4604      	mov	r4, r0
 8027280:	f7ea fc4c 	bl	8011b1c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8027284:	4b08      	ldr	r3, [pc, #32]	; (80272a8 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8027286:	6023      	str	r3, [r4, #0]
 8027288:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 802728c:	2300      	movs	r3, #0
 802728e:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8027292:	f24b 4205 	movw	r2, #46085	; 0xb405
 8027296:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802729a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802729e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 80272a2:	60a3      	str	r3, [r4, #8]
 80272a4:	4620      	mov	r0, r4
 80272a6:	bd10      	pop	{r4, pc}
 80272a8:	0802f6c4 	.word	0x0802f6c4

080272ac <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 80272ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80272b0:	428a      	cmp	r2, r1
 80272b2:	4680      	mov	r8, r0
 80272b4:	4610      	mov	r0, r2
 80272b6:	4699      	mov	r9, r3
 80272b8:	bfa6      	itte	ge
 80272ba:	460a      	movge	r2, r1
 80272bc:	4603      	movge	r3, r0
 80272be:	460b      	movlt	r3, r1
 80272c0:	1a99      	subs	r1, r3, r2
 80272c2:	b085      	sub	sp, #20
 80272c4:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 80272c8:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 80272cc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80272ce:	bfa4      	itt	ge
 80272d0:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 80272d4:	2200      	movge	r2, #0
 80272d6:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 80272da:	9300      	str	r3, [sp, #0]
 80272dc:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 80272e0:	f102 0b01 	add.w	fp, r2, #1
 80272e4:	2c00      	cmp	r4, #0
 80272e6:	f040 80af 	bne.w	8027448 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 80272ea:	4610      	mov	r0, r2
 80272ec:	9201      	str	r2, [sp, #4]
 80272ee:	f7ea fd79 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80272f2:	a903      	add	r1, sp, #12
 80272f4:	9003      	str	r0, [sp, #12]
 80272f6:	4650      	mov	r0, sl
 80272f8:	f7ea fc3c 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80272fc:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027300:	9a01      	ldr	r2, [sp, #4]
 8027302:	4408      	add	r0, r1
 8027304:	f8d9 1000 	ldr.w	r1, [r9]
 8027308:	4281      	cmp	r1, r0
 802730a:	bfc8      	it	gt
 802730c:	f8c9 0000 	strgt.w	r0, [r9]
 8027310:	6839      	ldr	r1, [r7, #0]
 8027312:	4288      	cmp	r0, r1
 8027314:	bfc8      	it	gt
 8027316:	6038      	strgt	r0, [r7, #0]
 8027318:	4610      	mov	r0, r2
 802731a:	f7ff ffa9 	bl	8027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802731e:	a903      	add	r1, sp, #12
 8027320:	9003      	str	r0, [sp, #12]
 8027322:	4650      	mov	r0, sl
 8027324:	f7ea fc26 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027328:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802732c:	1a10      	subs	r0, r2, r0
 802732e:	6832      	ldr	r2, [r6, #0]
 8027330:	4282      	cmp	r2, r0
 8027332:	bfc8      	it	gt
 8027334:	6030      	strgt	r0, [r6, #0]
 8027336:	682a      	ldr	r2, [r5, #0]
 8027338:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802733c:	4290      	cmp	r0, r2
 802733e:	fb9b f2f1 	sdiv	r2, fp, r1
 8027342:	fb01 b212 	mls	r2, r1, r2, fp
 8027346:	eba1 0202 	sub.w	r2, r1, r2
 802734a:	bfc8      	it	gt
 802734c:	6028      	strgt	r0, [r5, #0]
 802734e:	fb92 f0f1 	sdiv	r0, r2, r1
 8027352:	fb01 2210 	mls	r2, r1, r0, r2
 8027356:	4493      	add	fp, r2
 8027358:	9b00      	ldr	r3, [sp, #0]
 802735a:	455b      	cmp	r3, fp
 802735c:	db2a      	blt.n	80273b4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802735e:	4658      	mov	r0, fp
 8027360:	f7ea fd40 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027364:	a903      	add	r1, sp, #12
 8027366:	9003      	str	r0, [sp, #12]
 8027368:	4650      	mov	r0, sl
 802736a:	f7ea fc03 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802736e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027372:	4410      	add	r0, r2
 8027374:	f8d9 2000 	ldr.w	r2, [r9]
 8027378:	4282      	cmp	r2, r0
 802737a:	bfc8      	it	gt
 802737c:	f8c9 0000 	strgt.w	r0, [r9]
 8027380:	683a      	ldr	r2, [r7, #0]
 8027382:	4290      	cmp	r0, r2
 8027384:	bfc8      	it	gt
 8027386:	6038      	strgt	r0, [r7, #0]
 8027388:	4658      	mov	r0, fp
 802738a:	f7ff ff71 	bl	8027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802738e:	a903      	add	r1, sp, #12
 8027390:	9003      	str	r0, [sp, #12]
 8027392:	4650      	mov	r0, sl
 8027394:	f7ea fbee 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027398:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802739c:	1a10      	subs	r0, r2, r0
 802739e:	6832      	ldr	r2, [r6, #0]
 80273a0:	4282      	cmp	r2, r0
 80273a2:	bfc8      	it	gt
 80273a4:	6030      	strgt	r0, [r6, #0]
 80273a6:	682a      	ldr	r2, [r5, #0]
 80273a8:	4290      	cmp	r0, r2
 80273aa:	bfc8      	it	gt
 80273ac:	6028      	strgt	r0, [r5, #0]
 80273ae:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80273b2:	e7d1      	b.n	8027358 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 80273b4:	9b00      	ldr	r3, [sp, #0]
 80273b6:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80273ba:	455b      	cmp	r3, fp
 80273bc:	dd27      	ble.n	802740e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 80273be:	4618      	mov	r0, r3
 80273c0:	f7ea fd10 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80273c4:	a903      	add	r1, sp, #12
 80273c6:	9003      	str	r0, [sp, #12]
 80273c8:	4650      	mov	r0, sl
 80273ca:	f7ea fbd3 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80273ce:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80273d2:	4410      	add	r0, r2
 80273d4:	f8d9 2000 	ldr.w	r2, [r9]
 80273d8:	4282      	cmp	r2, r0
 80273da:	bfc8      	it	gt
 80273dc:	f8c9 0000 	strgt.w	r0, [r9]
 80273e0:	683a      	ldr	r2, [r7, #0]
 80273e2:	4290      	cmp	r0, r2
 80273e4:	bfc8      	it	gt
 80273e6:	6038      	strgt	r0, [r7, #0]
 80273e8:	9800      	ldr	r0, [sp, #0]
 80273ea:	f7ff ff41 	bl	8027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80273ee:	a903      	add	r1, sp, #12
 80273f0:	9003      	str	r0, [sp, #12]
 80273f2:	4650      	mov	r0, sl
 80273f4:	f7ea fbbe 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80273f8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80273fc:	1a10      	subs	r0, r2, r0
 80273fe:	6832      	ldr	r2, [r6, #0]
 8027400:	4282      	cmp	r2, r0
 8027402:	bfc8      	it	gt
 8027404:	6030      	strgt	r0, [r6, #0]
 8027406:	682a      	ldr	r2, [r5, #0]
 8027408:	4290      	cmp	r0, r2
 802740a:	bfc8      	it	gt
 802740c:	6028      	strgt	r0, [r5, #0]
 802740e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027412:	f8d9 1000 	ldr.w	r1, [r9]
 8027416:	4291      	cmp	r1, r2
 8027418:	bfc8      	it	gt
 802741a:	f8c9 2000 	strgt.w	r2, [r9]
 802741e:	683a      	ldr	r2, [r7, #0]
 8027420:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8027424:	429a      	cmp	r2, r3
 8027426:	bfb8      	it	lt
 8027428:	603b      	strlt	r3, [r7, #0]
 802742a:	6832      	ldr	r2, [r6, #0]
 802742c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8027430:	429a      	cmp	r2, r3
 8027432:	bfc8      	it	gt
 8027434:	6033      	strgt	r3, [r6, #0]
 8027436:	682a      	ldr	r2, [r5, #0]
 8027438:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802743c:	429a      	cmp	r2, r3
 802743e:	da00      	bge.n	8027442 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8027440:	602b      	str	r3, [r5, #0]
 8027442:	b005      	add	sp, #20
 8027444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027448:	2002      	movs	r0, #2
 802744a:	3401      	adds	r4, #1
 802744c:	fb94 f4f0 	sdiv	r4, r4, r0
 8027450:	4610      	mov	r0, r2
 8027452:	9201      	str	r2, [sp, #4]
 8027454:	f7ea fcc6 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027458:	a903      	add	r1, sp, #12
 802745a:	9003      	str	r0, [sp, #12]
 802745c:	4650      	mov	r0, sl
 802745e:	f7ea fb89 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027462:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027466:	9a01      	ldr	r2, [sp, #4]
 8027468:	4408      	add	r0, r1
 802746a:	f8d9 1000 	ldr.w	r1, [r9]
 802746e:	1b03      	subs	r3, r0, r4
 8027470:	4299      	cmp	r1, r3
 8027472:	bfc8      	it	gt
 8027474:	f8c9 3000 	strgt.w	r3, [r9]
 8027478:	6839      	ldr	r1, [r7, #0]
 802747a:	428b      	cmp	r3, r1
 802747c:	bfc8      	it	gt
 802747e:	603b      	strgt	r3, [r7, #0]
 8027480:	f8d9 1000 	ldr.w	r1, [r9]
 8027484:	4420      	add	r0, r4
 8027486:	4281      	cmp	r1, r0
 8027488:	bfc8      	it	gt
 802748a:	f8c9 0000 	strgt.w	r0, [r9]
 802748e:	6839      	ldr	r1, [r7, #0]
 8027490:	4288      	cmp	r0, r1
 8027492:	bfc8      	it	gt
 8027494:	6038      	strgt	r0, [r7, #0]
 8027496:	4610      	mov	r0, r2
 8027498:	f7ff feea 	bl	8027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802749c:	a903      	add	r1, sp, #12
 802749e:	9003      	str	r0, [sp, #12]
 80274a0:	4650      	mov	r0, sl
 80274a2:	f7ea fb67 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80274a6:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80274aa:	1a10      	subs	r0, r2, r0
 80274ac:	6832      	ldr	r2, [r6, #0]
 80274ae:	1b01      	subs	r1, r0, r4
 80274b0:	428a      	cmp	r2, r1
 80274b2:	bfc8      	it	gt
 80274b4:	6031      	strgt	r1, [r6, #0]
 80274b6:	682a      	ldr	r2, [r5, #0]
 80274b8:	4291      	cmp	r1, r2
 80274ba:	bfc8      	it	gt
 80274bc:	6029      	strgt	r1, [r5, #0]
 80274be:	6832      	ldr	r2, [r6, #0]
 80274c0:	4420      	add	r0, r4
 80274c2:	4282      	cmp	r2, r0
 80274c4:	bfc8      	it	gt
 80274c6:	6030      	strgt	r0, [r6, #0]
 80274c8:	682a      	ldr	r2, [r5, #0]
 80274ca:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80274ce:	4290      	cmp	r0, r2
 80274d0:	fb9b f2f1 	sdiv	r2, fp, r1
 80274d4:	fb01 b212 	mls	r2, r1, r2, fp
 80274d8:	eba1 0202 	sub.w	r2, r1, r2
 80274dc:	bfc8      	it	gt
 80274de:	6028      	strgt	r0, [r5, #0]
 80274e0:	fb92 f0f1 	sdiv	r0, r2, r1
 80274e4:	fb01 2210 	mls	r2, r1, r0, r2
 80274e8:	4493      	add	fp, r2
 80274ea:	9b00      	ldr	r3, [sp, #0]
 80274ec:	455b      	cmp	r3, fp
 80274ee:	db40      	blt.n	8027572 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 80274f0:	4658      	mov	r0, fp
 80274f2:	f7ea fc77 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80274f6:	a903      	add	r1, sp, #12
 80274f8:	9003      	str	r0, [sp, #12]
 80274fa:	4650      	mov	r0, sl
 80274fc:	f7ea fb3a 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027500:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027504:	4410      	add	r0, r2
 8027506:	f8d9 2000 	ldr.w	r2, [r9]
 802750a:	1b01      	subs	r1, r0, r4
 802750c:	428a      	cmp	r2, r1
 802750e:	bfc8      	it	gt
 8027510:	f8c9 1000 	strgt.w	r1, [r9]
 8027514:	683a      	ldr	r2, [r7, #0]
 8027516:	4291      	cmp	r1, r2
 8027518:	bfc8      	it	gt
 802751a:	6039      	strgt	r1, [r7, #0]
 802751c:	f8d9 2000 	ldr.w	r2, [r9]
 8027520:	4420      	add	r0, r4
 8027522:	4282      	cmp	r2, r0
 8027524:	bfc8      	it	gt
 8027526:	f8c9 0000 	strgt.w	r0, [r9]
 802752a:	683a      	ldr	r2, [r7, #0]
 802752c:	4290      	cmp	r0, r2
 802752e:	bfc8      	it	gt
 8027530:	6038      	strgt	r0, [r7, #0]
 8027532:	4658      	mov	r0, fp
 8027534:	f7ff fe9c 	bl	8027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027538:	a903      	add	r1, sp, #12
 802753a:	9003      	str	r0, [sp, #12]
 802753c:	4650      	mov	r0, sl
 802753e:	f7ea fb19 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027542:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027546:	1a10      	subs	r0, r2, r0
 8027548:	6832      	ldr	r2, [r6, #0]
 802754a:	1b01      	subs	r1, r0, r4
 802754c:	428a      	cmp	r2, r1
 802754e:	bfc8      	it	gt
 8027550:	6031      	strgt	r1, [r6, #0]
 8027552:	682a      	ldr	r2, [r5, #0]
 8027554:	4291      	cmp	r1, r2
 8027556:	bfc8      	it	gt
 8027558:	6029      	strgt	r1, [r5, #0]
 802755a:	6832      	ldr	r2, [r6, #0]
 802755c:	4420      	add	r0, r4
 802755e:	4282      	cmp	r2, r0
 8027560:	bfc8      	it	gt
 8027562:	6030      	strgt	r0, [r6, #0]
 8027564:	682a      	ldr	r2, [r5, #0]
 8027566:	4290      	cmp	r0, r2
 8027568:	bfc8      	it	gt
 802756a:	6028      	strgt	r0, [r5, #0]
 802756c:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8027570:	e7bb      	b.n	80274ea <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8027572:	9b00      	ldr	r3, [sp, #0]
 8027574:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8027578:	455b      	cmp	r3, fp
 802757a:	f77f af62 	ble.w	8027442 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802757e:	4618      	mov	r0, r3
 8027580:	f7ea fc30 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027584:	a903      	add	r1, sp, #12
 8027586:	9003      	str	r0, [sp, #12]
 8027588:	4650      	mov	r0, sl
 802758a:	f7ea faf3 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802758e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8027592:	4410      	add	r0, r2
 8027594:	f8d9 2000 	ldr.w	r2, [r9]
 8027598:	1b01      	subs	r1, r0, r4
 802759a:	428a      	cmp	r2, r1
 802759c:	bfc8      	it	gt
 802759e:	f8c9 1000 	strgt.w	r1, [r9]
 80275a2:	683a      	ldr	r2, [r7, #0]
 80275a4:	4291      	cmp	r1, r2
 80275a6:	bfc8      	it	gt
 80275a8:	6039      	strgt	r1, [r7, #0]
 80275aa:	f8d9 2000 	ldr.w	r2, [r9]
 80275ae:	4420      	add	r0, r4
 80275b0:	4282      	cmp	r2, r0
 80275b2:	bfc8      	it	gt
 80275b4:	f8c9 0000 	strgt.w	r0, [r9]
 80275b8:	683b      	ldr	r3, [r7, #0]
 80275ba:	4298      	cmp	r0, r3
 80275bc:	bfc8      	it	gt
 80275be:	6038      	strgt	r0, [r7, #0]
 80275c0:	9800      	ldr	r0, [sp, #0]
 80275c2:	f7ff fe55 	bl	8027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80275c6:	a903      	add	r1, sp, #12
 80275c8:	9003      	str	r0, [sp, #12]
 80275ca:	4650      	mov	r0, sl
 80275cc:	f7ea fad2 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80275d0:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80275d4:	6832      	ldr	r2, [r6, #0]
 80275d6:	1a18      	subs	r0, r3, r0
 80275d8:	1b03      	subs	r3, r0, r4
 80275da:	429a      	cmp	r2, r3
 80275dc:	bfc8      	it	gt
 80275de:	6033      	strgt	r3, [r6, #0]
 80275e0:	682a      	ldr	r2, [r5, #0]
 80275e2:	4293      	cmp	r3, r2
 80275e4:	bfc8      	it	gt
 80275e6:	602b      	strgt	r3, [r5, #0]
 80275e8:	6833      	ldr	r3, [r6, #0]
 80275ea:	4404      	add	r4, r0
 80275ec:	42a3      	cmp	r3, r4
 80275ee:	bfc8      	it	gt
 80275f0:	6034      	strgt	r4, [r6, #0]
 80275f2:	682b      	ldr	r3, [r5, #0]
 80275f4:	429c      	cmp	r4, r3
 80275f6:	bfc8      	it	gt
 80275f8:	602c      	strgt	r4, [r5, #0]
 80275fa:	e722      	b.n	8027442 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

080275fc <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 80275fc:	b530      	push	{r4, r5, lr}
 80275fe:	4604      	mov	r4, r0
 8027600:	4608      	mov	r0, r1
 8027602:	4611      	mov	r1, r2
 8027604:	461a      	mov	r2, r3
 8027606:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 802760a:	b089      	sub	sp, #36	; 0x24
 802760c:	015b      	lsls	r3, r3, #5
 802760e:	9304      	str	r3, [sp, #16]
 8027610:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027614:	2500      	movs	r5, #0
 8027616:	015b      	lsls	r3, r3, #5
 8027618:	e9cd 3506 	strd	r3, r5, [sp, #24]
 802761c:	ab07      	add	r3, sp, #28
 802761e:	9302      	str	r3, [sp, #8]
 8027620:	ab06      	add	r3, sp, #24
 8027622:	9301      	str	r3, [sp, #4]
 8027624:	ab05      	add	r3, sp, #20
 8027626:	9300      	str	r3, [sp, #0]
 8027628:	ab04      	add	r3, sp, #16
 802762a:	9505      	str	r5, [sp, #20]
 802762c:	f7ff fe3e 	bl	80272ac <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8027630:	2520      	movs	r5, #32
 8027632:	9a04      	ldr	r2, [sp, #16]
 8027634:	9805      	ldr	r0, [sp, #20]
 8027636:	fb92 f2f5 	sdiv	r2, r2, r5
 802763a:	fb90 f0f5 	sdiv	r0, r0, r5
 802763e:	b292      	uxth	r2, r2
 8027640:	3002      	adds	r0, #2
 8027642:	1a80      	subs	r0, r0, r2
 8027644:	9b06      	ldr	r3, [sp, #24]
 8027646:	9907      	ldr	r1, [sp, #28]
 8027648:	fb93 f3f5 	sdiv	r3, r3, r5
 802764c:	fb91 f1f5 	sdiv	r1, r1, r5
 8027650:	b29b      	uxth	r3, r3
 8027652:	3102      	adds	r1, #2
 8027654:	1ac9      	subs	r1, r1, r3
 8027656:	3a01      	subs	r2, #1
 8027658:	3b01      	subs	r3, #1
 802765a:	80a0      	strh	r0, [r4, #4]
 802765c:	4620      	mov	r0, r4
 802765e:	8022      	strh	r2, [r4, #0]
 8027660:	8063      	strh	r3, [r4, #2]
 8027662:	80e1      	strh	r1, [r4, #6]
 8027664:	b009      	add	sp, #36	; 0x24
 8027666:	bd30      	pop	{r4, r5, pc}

08027668 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8027668:	b510      	push	{r4, lr}
 802766a:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802766e:	4604      	mov	r4, r0
 8027670:	f7ff ffc4 	bl	80275fc <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8027674:	4620      	mov	r0, r4
 8027676:	bd10      	pop	{r4, pc}

08027678 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8027678:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802767a:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802767e:	4606      	mov	r6, r0
 8027680:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8027684:	6813      	ldr	r3, [r2, #0]
 8027686:	42a5      	cmp	r5, r4
 8027688:	ea4f 1040 	mov.w	r0, r0, lsl #5
 802768c:	da2b      	bge.n	80276e6 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802768e:	42a3      	cmp	r3, r4
 8027690:	dd14      	ble.n	80276bc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8027692:	b168      	cbz	r0, 80276b0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027694:	4267      	negs	r7, r4
 8027696:	fb97 f2f0 	sdiv	r2, r7, r0
 802769a:	fb00 7212 	mls	r2, r0, r2, r7
 802769e:	1a82      	subs	r2, r0, r2
 80276a0:	fb92 f7f0 	sdiv	r7, r2, r0
 80276a4:	fb00 2017 	mls	r0, r0, r7, r2
 80276a8:	1a24      	subs	r4, r4, r0
 80276aa:	42ac      	cmp	r4, r5
 80276ac:	bfb8      	it	lt
 80276ae:	462c      	movlt	r4, r5
 80276b0:	4630      	mov	r0, r6
 80276b2:	4622      	mov	r2, r4
 80276b4:	f7ff ffa2 	bl	80275fc <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80276b8:	4630      	mov	r0, r6
 80276ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80276bc:	42ab      	cmp	r3, r5
 80276be:	dd0e      	ble.n	80276de <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80276c0:	b168      	cbz	r0, 80276de <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80276c2:	425f      	negs	r7, r3
 80276c4:	fb97 f2f0 	sdiv	r2, r7, r0
 80276c8:	fb00 7212 	mls	r2, r0, r2, r7
 80276cc:	1a82      	subs	r2, r0, r2
 80276ce:	fb92 f7f0 	sdiv	r7, r2, r0
 80276d2:	fb00 2017 	mls	r0, r0, r7, r2
 80276d6:	1a1b      	subs	r3, r3, r0
 80276d8:	42ab      	cmp	r3, r5
 80276da:	bfb8      	it	lt
 80276dc:	462b      	movlt	r3, r5
 80276de:	4622      	mov	r2, r4
 80276e0:	461c      	mov	r4, r3
 80276e2:	4613      	mov	r3, r2
 80276e4:	e7e4      	b.n	80276b0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80276e6:	42a3      	cmp	r3, r4
 80276e8:	da10      	bge.n	802770c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 80276ea:	b148      	cbz	r0, 8027700 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 80276ec:	fb94 f2f0 	sdiv	r2, r4, r0
 80276f0:	fb00 4212 	mls	r2, r0, r2, r4
 80276f4:	1a82      	subs	r2, r0, r2
 80276f6:	fb92 f7f0 	sdiv	r7, r2, r0
 80276fa:	fb00 2017 	mls	r0, r0, r7, r2
 80276fe:	4404      	add	r4, r0
 8027700:	42a5      	cmp	r5, r4
 8027702:	bfa8      	it	ge
 8027704:	4625      	movge	r5, r4
 8027706:	461c      	mov	r4, r3
 8027708:	462b      	mov	r3, r5
 802770a:	e7d1      	b.n	80276b0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802770c:	42ab      	cmp	r3, r5
 802770e:	dacf      	bge.n	80276b0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027710:	2800      	cmp	r0, #0
 8027712:	d0cd      	beq.n	80276b0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8027714:	fb93 f2f0 	sdiv	r2, r3, r0
 8027718:	fb00 3212 	mls	r2, r0, r2, r3
 802771c:	1a82      	subs	r2, r0, r2
 802771e:	fb92 f7f0 	sdiv	r7, r2, r0
 8027722:	fb00 2017 	mls	r0, r0, r7, r2
 8027726:	4403      	add	r3, r0
 8027728:	42ab      	cmp	r3, r5
 802772a:	bfa8      	it	ge
 802772c:	462b      	movge	r3, r5
 802772e:	e7bf      	b.n	80276b0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08027730 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8027730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027734:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8027738:	42ae      	cmp	r6, r5
 802773a:	bfa2      	ittt	ge
 802773c:	4633      	movge	r3, r6
 802773e:	462e      	movge	r6, r5
 8027740:	461d      	movge	r5, r3
 8027742:	1bab      	subs	r3, r5, r6
 8027744:	468b      	mov	fp, r1
 8027746:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8027748:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 802774c:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8027750:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027754:	f04f 0220 	mov.w	r2, #32
 8027758:	b0ab      	sub	sp, #172	; 0xac
 802775a:	4604      	mov	r4, r0
 802775c:	bfa4      	itt	ge
 802775e:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8027762:	2600      	movge	r6, #0
 8027764:	fb99 f9f2 	sdiv	r9, r9, r2
 8027768:	fb9a faf2 	sdiv	sl, sl, r2
 802776c:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802776e:	2900      	cmp	r1, #0
 8027770:	f000 80f5 	beq.w	802795e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8027774:	f9bb 0000 	ldrsh.w	r0, [fp]
 8027778:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 802777c:	eba9 0700 	sub.w	r7, r9, r0
 8027780:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8027784:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8027788:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 802778c:	ebaa 0802 	sub.w	r8, sl, r2
 8027790:	4407      	add	r7, r0
 8027792:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8027796:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 802779a:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802779e:	b23f      	sxth	r7, r7
 80277a0:	4490      	add	r8, r2
 80277a2:	eba9 0707 	sub.w	r7, r9, r7
 80277a6:	fa0f f888 	sxth.w	r8, r8
 80277aa:	ebaa 0808 	sub.w	r8, sl, r8
 80277ae:	2f00      	cmp	r7, #0
 80277b0:	bfb8      	it	lt
 80277b2:	427f      	neglt	r7, r7
 80277b4:	f1b8 0f00 	cmp.w	r8, #0
 80277b8:	bfb8      	it	lt
 80277ba:	f1c8 0800 	rsblt	r8, r8, #0
 80277be:	45bc      	cmp	ip, r7
 80277c0:	bfcc      	ite	gt
 80277c2:	f10c 0701 	addgt.w	r7, ip, #1
 80277c6:	3701      	addle	r7, #1
 80277c8:	4540      	cmp	r0, r8
 80277ca:	bfc8      	it	gt
 80277cc:	f100 0801 	addgt.w	r8, r0, #1
 80277d0:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 80277d4:	f100 0001 	add.w	r0, r0, #1
 80277d8:	ea4f 0060 	mov.w	r0, r0, asr #1
 80277dc:	f04f 0202 	mov.w	r2, #2
 80277e0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80277e4:	fb91 f1f2 	sdiv	r1, r1, r2
 80277e8:	eba3 0301 	sub.w	r3, r3, r1
 80277ec:	bfd8      	it	le
 80277ee:	f108 0801 	addle.w	r8, r8, #1
 80277f2:	9201      	str	r2, [sp, #4]
 80277f4:	930d      	str	r3, [sp, #52]	; 0x34
 80277f6:	f7ea fad5 	bl	8011da4 <_ZN8touchgfx7CWRUtil4sineEi>
 80277fa:	a92a      	add	r1, sp, #168	; 0xa8
 80277fc:	fb08 f808 	mul.w	r8, r8, r8
 8027800:	f841 0d70 	str.w	r0, [r1, #-112]!
 8027804:	a80d      	add	r0, sp, #52	; 0x34
 8027806:	f7ea f9b5 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802780a:	fb07 8707 	mla	r7, r7, r7, r8
 802780e:	f04f 0c20 	mov.w	ip, #32
 8027812:	fb90 f0fc 	sdiv	r0, r0, ip
 8027816:	4340      	muls	r0, r0
 8027818:	4287      	cmp	r7, r0
 802781a:	9a01      	ldr	r2, [sp, #4]
 802781c:	da04      	bge.n	8027828 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 802781e:	2401      	movs	r4, #1
 8027820:	4620      	mov	r0, r4
 8027822:	b02b      	add	sp, #172	; 0xac
 8027824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027828:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802782a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802782c:	fb91 f3f2 	sdiv	r3, r1, r2
 8027830:	4403      	add	r3, r0
 8027832:	fb93 f3fc 	sdiv	r3, r3, ip
 8027836:	f9bb 1000 	ldrsh.w	r1, [fp]
 802783a:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 802783e:	440a      	add	r2, r1
 8027840:	b212      	sxth	r2, r2
 8027842:	454a      	cmp	r2, r9
 8027844:	bfa8      	it	ge
 8027846:	464a      	movge	r2, r9
 8027848:	428a      	cmp	r2, r1
 802784a:	bfac      	ite	ge
 802784c:	eba9 0902 	subge.w	r9, r9, r2
 8027850:	eba9 0901 	sublt.w	r9, r9, r1
 8027854:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8027858:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 802785c:	440a      	add	r2, r1
 802785e:	b212      	sxth	r2, r2
 8027860:	4552      	cmp	r2, sl
 8027862:	bfa8      	it	ge
 8027864:	4652      	movge	r2, sl
 8027866:	428a      	cmp	r2, r1
 8027868:	bfac      	ite	ge
 802786a:	ebaa 0a02 	subge.w	sl, sl, r2
 802786e:	ebaa 0a01 	sublt.w	sl, sl, r1
 8027872:	3301      	adds	r3, #1
 8027874:	fb0a fa0a 	mul.w	sl, sl, sl
 8027878:	fb09 a909 	mla	r9, r9, r9, sl
 802787c:	435b      	muls	r3, r3
 802787e:	4599      	cmp	r9, r3
 8027880:	dccd      	bgt.n	802781e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8027882:	465a      	mov	r2, fp
 8027884:	4621      	mov	r1, r4
 8027886:	a80e      	add	r0, sp, #56	; 0x38
 8027888:	f7ff faae 	bl	8026de8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 802788c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802788e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8027890:	9209      	str	r2, [sp, #36]	; 0x24
 8027892:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8027896:	930a      	str	r3, [sp, #40]	; 0x28
 8027898:	dd07      	ble.n	80278aa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 802789a:	2102      	movs	r1, #2
 802789c:	fb93 f3f1 	sdiv	r3, r3, r1
 80278a0:	4413      	add	r3, r2
 80278a2:	930a      	str	r3, [sp, #40]	; 0x28
 80278a4:	fb93 f3f1 	sdiv	r3, r3, r1
 80278a8:	9309      	str	r3, [sp, #36]	; 0x24
 80278aa:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80278ae:	4630      	mov	r0, r6
 80278b0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80278b4:	930b      	str	r3, [sp, #44]	; 0x2c
 80278b6:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 80278ba:	f7ea fa93 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80278be:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 80278c2:	f04f 0a02 	mov.w	sl, #2
 80278c6:	f849 0d74 	str.w	r0, [r9, #-116]!
 80278ca:	a80b      	add	r0, sp, #44	; 0x2c
 80278cc:	4649      	mov	r1, r9
 80278ce:	f7ea f951 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80278d2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80278d4:	fb90 f0fa 	sdiv	r0, r0, sl
 80278d8:	eb00 0b03 	add.w	fp, r0, r3
 80278dc:	4630      	mov	r0, r6
 80278de:	f7ff fcc7 	bl	8027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80278e2:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 80278e6:	017f      	lsls	r7, r7, #5
 80278e8:	f848 0d78 	str.w	r0, [r8, #-120]!
 80278ec:	a80b      	add	r0, sp, #44	; 0x2c
 80278ee:	4641      	mov	r1, r8
 80278f0:	f7ea f940 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80278f4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80278f6:	fb90 f0fa 	sdiv	r0, r0, sl
 80278fa:	4659      	mov	r1, fp
 80278fc:	1a12      	subs	r2, r2, r0
 80278fe:	a80e      	add	r0, sp, #56	; 0x38
 8027900:	f7ff fbf2 	bl	80270e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8027904:	f106 0a20 	add.w	sl, r6, #32
 8027908:	bb67      	cbnz	r7, 8027964 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 802790a:	46b3      	mov	fp, r6
 802790c:	45aa      	cmp	sl, r5
 802790e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027910:	dc33      	bgt.n	802797a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8027912:	9909      	ldr	r1, [sp, #36]	; 0x24
 8027914:	4650      	mov	r0, sl
 8027916:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 802791a:	920b      	str	r2, [sp, #44]	; 0x2c
 802791c:	f7ea fa62 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027920:	4641      	mov	r1, r8
 8027922:	900c      	str	r0, [sp, #48]	; 0x30
 8027924:	a80b      	add	r0, sp, #44	; 0x2c
 8027926:	f7ea f925 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802792a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 802792c:	2302      	movs	r3, #2
 802792e:	fb90 f0f3 	sdiv	r0, r0, r3
 8027932:	eb00 0b02 	add.w	fp, r0, r2
 8027936:	4650      	mov	r0, sl
 8027938:	f7ff fc9a 	bl	8027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802793c:	4649      	mov	r1, r9
 802793e:	900d      	str	r0, [sp, #52]	; 0x34
 8027940:	a80b      	add	r0, sp, #44	; 0x2c
 8027942:	f7ea f917 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027946:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027948:	2302      	movs	r3, #2
 802794a:	4659      	mov	r1, fp
 802794c:	fb90 f0f3 	sdiv	r0, r0, r3
 8027950:	1a12      	subs	r2, r2, r0
 8027952:	a80e      	add	r0, sp, #56	; 0x38
 8027954:	46d3      	mov	fp, sl
 8027956:	f7ff fc14 	bl	8027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802795a:	44ba      	add	sl, r7
 802795c:	e7d6      	b.n	802790c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 802795e:	fb93 f3f2 	sdiv	r3, r3, r2
 8027962:	e768      	b.n	8027836 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8027964:	fb9a f2f7 	sdiv	r2, sl, r7
 8027968:	fb07 a212 	mls	r2, r7, r2, sl
 802796c:	1aba      	subs	r2, r7, r2
 802796e:	fb92 f1f7 	sdiv	r1, r2, r7
 8027972:	fb07 2211 	mls	r2, r7, r1, r2
 8027976:	4492      	add	sl, r2
 8027978:	e7c7      	b.n	802790a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 802797a:	45ab      	cmp	fp, r5
 802797c:	da23      	bge.n	80279c6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 802797e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027980:	4628      	mov	r0, r5
 8027982:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8027986:	920b      	str	r2, [sp, #44]	; 0x2c
 8027988:	f7ea fa2c 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802798c:	4641      	mov	r1, r8
 802798e:	900c      	str	r0, [sp, #48]	; 0x30
 8027990:	a80b      	add	r0, sp, #44	; 0x2c
 8027992:	f7ea f8ef 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027996:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027998:	f04f 0a02 	mov.w	sl, #2
 802799c:	fb90 f0fa 	sdiv	r0, r0, sl
 80279a0:	4403      	add	r3, r0
 80279a2:	4628      	mov	r0, r5
 80279a4:	9301      	str	r3, [sp, #4]
 80279a6:	f7ff fc63 	bl	8027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80279aa:	4649      	mov	r1, r9
 80279ac:	900d      	str	r0, [sp, #52]	; 0x34
 80279ae:	a80b      	add	r0, sp, #44	; 0x2c
 80279b0:	f7ea f8e0 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80279b4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80279b6:	9b01      	ldr	r3, [sp, #4]
 80279b8:	fb90 f0fa 	sdiv	r0, r0, sl
 80279bc:	4619      	mov	r1, r3
 80279be:	1a12      	subs	r2, r2, r0
 80279c0:	a80e      	add	r0, sp, #56	; 0x38
 80279c2:	f7ff fbde 	bl	8027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80279c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80279c8:	b99b      	cbnz	r3, 80279f2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 80279ca:	1bad      	subs	r5, r5, r6
 80279cc:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 80279d0:	da04      	bge.n	80279dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 80279d2:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 80279d6:	a80e      	add	r0, sp, #56	; 0x38
 80279d8:	f7ff fbd3 	bl	8027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80279dc:	21ff      	movs	r1, #255	; 0xff
 80279de:	a80e      	add	r0, sp, #56	; 0x38
 80279e0:	f7ff fabe 	bl	8026f60 <_ZN8touchgfx6Canvas6renderEh>
 80279e4:	4604      	mov	r4, r0
 80279e6:	4b8a      	ldr	r3, [pc, #552]	; (8027c10 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 80279e8:	930e      	str	r3, [sp, #56]	; 0x38
 80279ea:	a816      	add	r0, sp, #88	; 0x58
 80279ec:	f7eb fd2e 	bl	801344c <_ZN8touchgfx7OutlineD1Ev>
 80279f0:	e716      	b.n	8027820 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 80279f2:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 80279f6:	429a      	cmp	r2, r3
 80279f8:	f0c0 8107 	bcc.w	8027c0a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 80279fc:	1bab      	subs	r3, r5, r6
 80279fe:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8027a02:	9301      	str	r3, [sp, #4]
 8027a04:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027a08:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8027a0c:	da43      	bge.n	8027a96 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027a0e:	4628      	mov	r0, r5
 8027a10:	f7ea f9e8 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027a14:	4649      	mov	r1, r9
 8027a16:	900d      	str	r0, [sp, #52]	; 0x34
 8027a18:	a809      	add	r0, sp, #36	; 0x24
 8027a1a:	f7ea f8ab 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a1e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027a20:	18c3      	adds	r3, r0, r3
 8027a22:	4628      	mov	r0, r5
 8027a24:	9303      	str	r3, [sp, #12]
 8027a26:	f7ff fc23 	bl	8027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027a2a:	4649      	mov	r1, r9
 8027a2c:	900d      	str	r0, [sp, #52]	; 0x34
 8027a2e:	a809      	add	r0, sp, #36	; 0x24
 8027a30:	f7ea f8a0 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a34:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027a36:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8027a3a:	1a1b      	subs	r3, r3, r0
 8027a3c:	9302      	str	r3, [sp, #8]
 8027a3e:	9204      	str	r2, [sp, #16]
 8027a40:	eb0a 0305 	add.w	r3, sl, r5
 8027a44:	9a04      	ldr	r2, [sp, #16]
 8027a46:	4293      	cmp	r3, r2
 8027a48:	da25      	bge.n	8027a96 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8027a4a:	4618      	mov	r0, r3
 8027a4c:	9306      	str	r3, [sp, #24]
 8027a4e:	f7ea f9c9 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027a52:	4649      	mov	r1, r9
 8027a54:	900d      	str	r0, [sp, #52]	; 0x34
 8027a56:	a80a      	add	r0, sp, #40	; 0x28
 8027a58:	f7ea f88c 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a5c:	9b03      	ldr	r3, [sp, #12]
 8027a5e:	2202      	movs	r2, #2
 8027a60:	fb90 f0f2 	sdiv	r0, r0, r2
 8027a64:	18c3      	adds	r3, r0, r3
 8027a66:	9305      	str	r3, [sp, #20]
 8027a68:	9b06      	ldr	r3, [sp, #24]
 8027a6a:	9207      	str	r2, [sp, #28]
 8027a6c:	4618      	mov	r0, r3
 8027a6e:	f7ff fbff 	bl	8027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027a72:	a92a      	add	r1, sp, #168	; 0xa8
 8027a74:	f841 0d78 	str.w	r0, [r1, #-120]!
 8027a78:	a80a      	add	r0, sp, #40	; 0x28
 8027a7a:	f7ea f87b 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027a7e:	9b02      	ldr	r3, [sp, #8]
 8027a80:	9a07      	ldr	r2, [sp, #28]
 8027a82:	9905      	ldr	r1, [sp, #20]
 8027a84:	fb90 f2f2 	sdiv	r2, r0, r2
 8027a88:	a80e      	add	r0, sp, #56	; 0x38
 8027a8a:	1a9a      	subs	r2, r3, r2
 8027a8c:	f7ff fb79 	bl	8027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027a90:	9b06      	ldr	r3, [sp, #24]
 8027a92:	4453      	add	r3, sl
 8027a94:	e7d6      	b.n	8027a44 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8027a96:	45ab      	cmp	fp, r5
 8027a98:	da25      	bge.n	8027ae6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8027a9a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027a9e:	4628      	mov	r0, r5
 8027aa0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027aa4:	930b      	str	r3, [sp, #44]	; 0x2c
 8027aa6:	f7ea f99d 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027aaa:	4641      	mov	r1, r8
 8027aac:	900c      	str	r0, [sp, #48]	; 0x30
 8027aae:	a80b      	add	r0, sp, #44	; 0x2c
 8027ab0:	f7ea f860 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ab4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027ab6:	2202      	movs	r2, #2
 8027ab8:	fb90 f0f2 	sdiv	r0, r0, r2
 8027abc:	eb00 0903 	add.w	r9, r0, r3
 8027ac0:	4628      	mov	r0, r5
 8027ac2:	9202      	str	r2, [sp, #8]
 8027ac4:	f7ff fbd4 	bl	8027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027ac8:	a92a      	add	r1, sp, #168	; 0xa8
 8027aca:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027ace:	a80b      	add	r0, sp, #44	; 0x2c
 8027ad0:	f7ea f850 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ad4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027ad6:	9a02      	ldr	r2, [sp, #8]
 8027ad8:	fb90 f2f2 	sdiv	r2, r0, r2
 8027adc:	4649      	mov	r1, r9
 8027ade:	1a9a      	subs	r2, r3, r2
 8027ae0:	a80e      	add	r0, sp, #56	; 0x38
 8027ae2:	f7ff fb4e 	bl	8027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027ae6:	46d9      	mov	r9, fp
 8027ae8:	2502      	movs	r5, #2
 8027aea:	45b1      	cmp	r9, r6
 8027aec:	db25      	blt.n	8027b3a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8027aee:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027af2:	4648      	mov	r0, r9
 8027af4:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027af8:	930b      	str	r3, [sp, #44]	; 0x2c
 8027afa:	f7ea f973 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027afe:	4641      	mov	r1, r8
 8027b00:	900c      	str	r0, [sp, #48]	; 0x30
 8027b02:	a80b      	add	r0, sp, #44	; 0x2c
 8027b04:	f7ea f836 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b08:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027b0a:	fb90 f0f5 	sdiv	r0, r0, r5
 8027b0e:	eb00 0b03 	add.w	fp, r0, r3
 8027b12:	4648      	mov	r0, r9
 8027b14:	f7ff fbac 	bl	8027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027b18:	a90d      	add	r1, sp, #52	; 0x34
 8027b1a:	900d      	str	r0, [sp, #52]	; 0x34
 8027b1c:	a80b      	add	r0, sp, #44	; 0x2c
 8027b1e:	f7ea f829 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b22:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027b24:	fb90 f0f5 	sdiv	r0, r0, r5
 8027b28:	4659      	mov	r1, fp
 8027b2a:	1a12      	subs	r2, r2, r0
 8027b2c:	a80e      	add	r0, sp, #56	; 0x38
 8027b2e:	46cb      	mov	fp, r9
 8027b30:	f7ff fb27 	bl	8027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027b34:	eba9 0907 	sub.w	r9, r9, r7
 8027b38:	e7d7      	b.n	8027aea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8027b3a:	455e      	cmp	r6, fp
 8027b3c:	da22      	bge.n	8027b84 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8027b3e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8027b42:	4630      	mov	r0, r6
 8027b44:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8027b48:	930b      	str	r3, [sp, #44]	; 0x2c
 8027b4a:	f7ea f94b 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027b4e:	4641      	mov	r1, r8
 8027b50:	900c      	str	r0, [sp, #48]	; 0x30
 8027b52:	a80b      	add	r0, sp, #44	; 0x2c
 8027b54:	f7ea f80e 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b58:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8027b5a:	2502      	movs	r5, #2
 8027b5c:	fb90 f0f5 	sdiv	r0, r0, r5
 8027b60:	4407      	add	r7, r0
 8027b62:	4630      	mov	r0, r6
 8027b64:	f7ff fb84 	bl	8027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027b68:	a92a      	add	r1, sp, #168	; 0xa8
 8027b6a:	f841 0d74 	str.w	r0, [r1, #-116]!
 8027b6e:	a80b      	add	r0, sp, #44	; 0x2c
 8027b70:	f7ea f800 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027b74:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8027b76:	fb90 f0f5 	sdiv	r0, r0, r5
 8027b7a:	4639      	mov	r1, r7
 8027b7c:	1a12      	subs	r2, r2, r0
 8027b7e:	a80e      	add	r0, sp, #56	; 0x38
 8027b80:	f7ff faff 	bl	8027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027b84:	9b01      	ldr	r3, [sp, #4]
 8027b86:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8027b8a:	f6bf af27 	bge.w	80279dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027b8e:	4630      	mov	r0, r6
 8027b90:	f7ea f928 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027b94:	ad2a      	add	r5, sp, #168	; 0xa8
 8027b96:	f04f 0b02 	mov.w	fp, #2
 8027b9a:	f845 0d74 	str.w	r0, [r5, #-116]!
 8027b9e:	a809      	add	r0, sp, #36	; 0x24
 8027ba0:	4629      	mov	r1, r5
 8027ba2:	f7e9 ffe7 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ba6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8027ba8:	eb00 0903 	add.w	r9, r0, r3
 8027bac:	4630      	mov	r0, r6
 8027bae:	f7ff fb5f 	bl	8027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027bb2:	4629      	mov	r1, r5
 8027bb4:	900d      	str	r0, [sp, #52]	; 0x34
 8027bb6:	a809      	add	r0, sp, #36	; 0x24
 8027bb8:	f7e9 ffdc 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027bbc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8027bbe:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8027bc2:	eba3 0800 	sub.w	r8, r3, r0
 8027bc6:	4454      	add	r4, sl
 8027bc8:	42a6      	cmp	r6, r4
 8027bca:	f77f af07 	ble.w	80279dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8027bce:	4620      	mov	r0, r4
 8027bd0:	f7ea f908 	bl	8011de4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027bd4:	4629      	mov	r1, r5
 8027bd6:	900d      	str	r0, [sp, #52]	; 0x34
 8027bd8:	a80a      	add	r0, sp, #40	; 0x28
 8027bda:	f7e9 ffcb 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027bde:	fb90 f0fb 	sdiv	r0, r0, fp
 8027be2:	eb00 0709 	add.w	r7, r0, r9
 8027be6:	4620      	mov	r0, r4
 8027be8:	f7ff fb42 	bl	8027270 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027bec:	a90c      	add	r1, sp, #48	; 0x30
 8027bee:	900c      	str	r0, [sp, #48]	; 0x30
 8027bf0:	a80a      	add	r0, sp, #40	; 0x28
 8027bf2:	f7e9 ffbf 	bl	8011b74 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027bf6:	4639      	mov	r1, r7
 8027bf8:	fb90 f2fb 	sdiv	r2, r0, fp
 8027bfc:	a80e      	add	r0, sp, #56	; 0x38
 8027bfe:	eba8 0202 	sub.w	r2, r8, r2
 8027c02:	f7ff fabe 	bl	8027182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8027c06:	4454      	add	r4, sl
 8027c08:	e7de      	b.n	8027bc8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8027c0a:	2400      	movs	r4, #0
 8027c0c:	e6eb      	b.n	80279e6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8027c0e:	bf00      	nop
 8027c10:	0802f6b0 	.word	0x0802f6b0

08027c14 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8027c14:	b570      	push	{r4, r5, r6, lr}
 8027c16:	790b      	ldrb	r3, [r1, #4]
 8027c18:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8027c1c:	2b00      	cmp	r3, #0
 8027c1e:	bf0c      	ite	eq
 8027c20:	2301      	moveq	r3, #1
 8027c22:	2300      	movne	r3, #0
 8027c24:	4604      	mov	r4, r0
 8027c26:	460e      	mov	r6, r1
 8027c28:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8027c2c:	d109      	bne.n	8027c42 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8027c2e:	b14d      	cbz	r5, 8027c44 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8027c30:	7933      	ldrb	r3, [r6, #4]
 8027c32:	2b01      	cmp	r3, #1
 8027c34:	d10c      	bne.n	8027c50 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027c36:	6823      	ldr	r3, [r4, #0]
 8027c38:	4620      	mov	r0, r4
 8027c3a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8027c3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8027c40:	4718      	bx	r3
 8027c42:	b12d      	cbz	r5, 8027c50 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8027c44:	6823      	ldr	r3, [r4, #0]
 8027c46:	4620      	mov	r0, r4
 8027c48:	695b      	ldr	r3, [r3, #20]
 8027c4a:	4798      	blx	r3
 8027c4c:	2d00      	cmp	r5, #0
 8027c4e:	d1ef      	bne.n	8027c30 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8027c50:	bd70      	pop	{r4, r5, r6, pc}

08027c52 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8027c52:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8027c56:	4770      	bx	lr

08027c58 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8027c58:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8027c5c:	4770      	bx	lr

08027c5e <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8027c5e:	6802      	ldr	r2, [r0, #0]
 8027c60:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027c64:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027c66:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027c6a:	4710      	bx	r2

08027c6c <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8027c6c:	6802      	ldr	r2, [r0, #0]
 8027c6e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027c72:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027c74:	eef0 0a40 	vmov.f32	s1, s0
 8027c78:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027c7c:	4710      	bx	r2

08027c7e <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8027c7e:	6802      	ldr	r2, [r0, #0]
 8027c80:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027c84:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8027c86:	eeb0 1a40 	vmov.f32	s2, s0
 8027c8a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027c8e:	4710      	bx	r2

08027c90 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8027c90:	6802      	ldr	r2, [r0, #0]
 8027c92:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027c96:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027c98:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027c9c:	4710      	bx	r2

08027c9e <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8027c9e:	6802      	ldr	r2, [r0, #0]
 8027ca0:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8027ca4:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027ca6:	eef0 0a40 	vmov.f32	s1, s0
 8027caa:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027cae:	4710      	bx	r2

08027cb0 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8027cb0:	6802      	ldr	r2, [r0, #0]
 8027cb2:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8027cb6:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8027cb8:	eeb0 1a40 	vmov.f32	s2, s0
 8027cbc:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027cc0:	4710      	bx	r2

08027cc2 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8027cc2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8027cc6:	4770      	bx	lr

08027cc8 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8027cc8:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8027ccc:	4770      	bx	lr

08027cce <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8027cce:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8027cd2:	4770      	bx	lr

08027cd4 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8027cd4:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8027cd8:	4770      	bx	lr

08027cda <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8027cda:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8027cde:	4770      	bx	lr

08027ce0 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8027ce0:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8027ce4:	4770      	bx	lr

08027ce6 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8027ce6:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8027cea:	4770      	bx	lr

08027cec <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8027cec:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8027cf0:	4770      	bx	lr

08027cf2 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8027cf2:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8027cf6:	4770      	bx	lr

08027cf8 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8027cf8:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8027cfc:	4770      	bx	lr

08027cfe <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8027cfe:	ee07 2a90 	vmov	s15, r2
 8027d02:	6803      	ldr	r3, [r0, #0]
 8027d04:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8027d08:	ee07 1a90 	vmov	s15, r1
 8027d0c:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8027d10:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8027d14:	4718      	bx	r3

08027d16 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8027d16:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8027d1a:	4770      	bx	lr

08027d1c <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8027d1c:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8027d20:	4770      	bx	lr

08027d22 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8027d22:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8027d26:	4770      	bx	lr

08027d28 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8027d28:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8027d2c:	4770      	bx	lr

08027d2e <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8027d2e:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8027d32:	4770      	bx	lr

08027d34 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8027d34:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8027d38:	4770      	bx	lr

08027d3a <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8027d3a:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8027d3e:	4770      	bx	lr

08027d40 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8027d40:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8027d44:	4770      	bx	lr

08027d46 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8027d46:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8027d4a:	4770      	bx	lr

08027d4c <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8027d4c:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8027d50:	4770      	bx	lr

08027d52 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8027d52:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8027d56:	4770      	bx	lr

08027d58 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8027d58:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8027d5c:	4770      	bx	lr

08027d5e <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8027d5e:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8027d62:	4770      	bx	lr

08027d64 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8027d64:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8027d68:	4770      	bx	lr

08027d6a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8027d6a:	b510      	push	{r4, lr}
 8027d6c:	ed2d 8b04 	vpush	{d8-d9}
 8027d70:	6803      	ldr	r3, [r0, #0]
 8027d72:	4604      	mov	r4, r0
 8027d74:	699b      	ldr	r3, [r3, #24]
 8027d76:	eeb0 8a40 	vmov.f32	s16, s0
 8027d7a:	eef0 8a60 	vmov.f32	s17, s1
 8027d7e:	eeb0 9a41 	vmov.f32	s18, s2
 8027d82:	4798      	blx	r3
 8027d84:	6823      	ldr	r3, [r4, #0]
 8027d86:	4620      	mov	r0, r4
 8027d88:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8027d8a:	eeb0 1a49 	vmov.f32	s2, s18
 8027d8e:	eef0 0a68 	vmov.f32	s1, s17
 8027d92:	eeb0 0a48 	vmov.f32	s0, s16
 8027d96:	4798      	blx	r3
 8027d98:	ecbd 8b04 	vpop	{d8-d9}
 8027d9c:	6823      	ldr	r3, [r4, #0]
 8027d9e:	4620      	mov	r0, r4
 8027da0:	699b      	ldr	r3, [r3, #24]
 8027da2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027da6:	4718      	bx	r3

08027da8 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8027da8:	b510      	push	{r4, lr}
 8027daa:	ed2d 8b02 	vpush	{d8}
 8027dae:	6803      	ldr	r3, [r0, #0]
 8027db0:	4604      	mov	r4, r0
 8027db2:	699b      	ldr	r3, [r3, #24]
 8027db4:	eeb0 8a40 	vmov.f32	s16, s0
 8027db8:	4798      	blx	r3
 8027dba:	6823      	ldr	r3, [r4, #0]
 8027dbc:	4620      	mov	r0, r4
 8027dbe:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8027dc2:	eeb0 0a48 	vmov.f32	s0, s16
 8027dc6:	4798      	blx	r3
 8027dc8:	ecbd 8b02 	vpop	{d8}
 8027dcc:	6823      	ldr	r3, [r4, #0]
 8027dce:	4620      	mov	r0, r4
 8027dd0:	699b      	ldr	r3, [r3, #24]
 8027dd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027dd6:	4718      	bx	r3

08027dd8 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8027dd8:	2200      	movs	r2, #0
 8027dda:	8002      	strh	r2, [r0, #0]
 8027ddc:	8042      	strh	r2, [r0, #2]
 8027dde:	8082      	strh	r2, [r0, #4]
 8027de0:	80c2      	strh	r2, [r0, #6]
 8027de2:	4770      	bx	lr

08027de4 <_ZN8touchgfx13TextureMapperD1Ev>:
 8027de4:	4770      	bx	lr

08027de6 <_ZN8touchgfx13TextureMapperD0Ev>:
 8027de6:	b510      	push	{r4, lr}
 8027de8:	2190      	movs	r1, #144	; 0x90
 8027dea:	4604      	mov	r4, r0
 8027dec:	f001 ff3f 	bl	8029c6e <_ZdlPvj>
 8027df0:	4620      	mov	r0, r4
 8027df2:	bd10      	pop	{r4, pc}

08027df4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8027df4:	b538      	push	{r3, r4, r5, lr}
 8027df6:	2500      	movs	r5, #0
 8027df8:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8027dfc:	2301      	movs	r3, #1
 8027dfe:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8027e02:	4b1f      	ldr	r3, [pc, #124]	; (8027e80 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8027e04:	8085      	strh	r5, [r0, #4]
 8027e06:	80c5      	strh	r5, [r0, #6]
 8027e08:	8105      	strh	r5, [r0, #8]
 8027e0a:	8145      	strh	r5, [r0, #10]
 8027e0c:	8185      	strh	r5, [r0, #12]
 8027e0e:	81c5      	strh	r5, [r0, #14]
 8027e10:	8205      	strh	r5, [r0, #16]
 8027e12:	8245      	strh	r5, [r0, #18]
 8027e14:	61c5      	str	r5, [r0, #28]
 8027e16:	8405      	strh	r5, [r0, #32]
 8027e18:	8445      	strh	r5, [r0, #34]	; 0x22
 8027e1a:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8027e1e:	6003      	str	r3, [r0, #0]
 8027e20:	880b      	ldrh	r3, [r1, #0]
 8027e22:	84c3      	strh	r3, [r0, #38]	; 0x26
 8027e24:	23ff      	movs	r3, #255	; 0xff
 8027e26:	4604      	mov	r4, r0
 8027e28:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8027e2c:	f7eb f99f 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027e30:	4b14      	ldr	r3, [pc, #80]	; (8027e84 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8027e32:	6023      	str	r3, [r4, #0]
 8027e34:	2300      	movs	r3, #0
 8027e36:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8027e3a:	4913      	ldr	r1, [pc, #76]	; (8027e88 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8027e3c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8027e3e:	6323      	str	r3, [r4, #48]	; 0x30
 8027e40:	6363      	str	r3, [r4, #52]	; 0x34
 8027e42:	63a3      	str	r3, [r4, #56]	; 0x38
 8027e44:	63e3      	str	r3, [r4, #60]	; 0x3c
 8027e46:	6463      	str	r3, [r4, #68]	; 0x44
 8027e48:	64a3      	str	r3, [r4, #72]	; 0x48
 8027e4a:	6523      	str	r3, [r4, #80]	; 0x50
 8027e4c:	6563      	str	r3, [r4, #84]	; 0x54
 8027e4e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027e50:	6623      	str	r3, [r4, #96]	; 0x60
 8027e52:	66a3      	str	r3, [r4, #104]	; 0x68
 8027e54:	66e3      	str	r3, [r4, #108]	; 0x6c
 8027e56:	6763      	str	r3, [r4, #116]	; 0x74
 8027e58:	67a3      	str	r3, [r4, #120]	; 0x78
 8027e5a:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8027e5e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8027e62:	230c      	movs	r3, #12
 8027e64:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8027e68:	6422      	str	r2, [r4, #64]	; 0x40
 8027e6a:	64e1      	str	r1, [r4, #76]	; 0x4c
 8027e6c:	65a1      	str	r1, [r4, #88]	; 0x58
 8027e6e:	6662      	str	r2, [r4, #100]	; 0x64
 8027e70:	6722      	str	r2, [r4, #112]	; 0x70
 8027e72:	67e2      	str	r2, [r4, #124]	; 0x7c
 8027e74:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8027e78:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8027e7c:	4620      	mov	r0, r4
 8027e7e:	bd38      	pop	{r3, r4, r5, pc}
 8027e80:	0802f158 	.word	0x0802f158
 8027e84:	0802f73c 	.word	0x0802f73c
 8027e88:	447a0000 	.word	0x447a0000

08027e8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8027e8c:	b570      	push	{r4, r5, r6, lr}
 8027e8e:	ed2d 8b04 	vpush	{d8-d9}
 8027e92:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8027e96:	add0      	add	r5, sp, #832	; 0x340
 8027e98:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8027e9a:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8027e9e:	4604      	mov	r4, r0
 8027ea0:	4628      	mov	r0, r5
 8027ea2:	f7f1 fa7f 	bl	80193a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027ea6:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8027ea8:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8027eac:	4606      	mov	r6, r0
 8027eae:	4628      	mov	r0, r5
 8027eb0:	f7f1 faac 	bl	801940c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8027eb4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8027eb8:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8027ebc:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8027ebe:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8027ec2:	9312      	str	r3, [sp, #72]	; 0x48
 8027ec4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027ec8:	1c72      	adds	r2, r6, #1
 8027eca:	3001      	adds	r0, #1
 8027ecc:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8027ed0:	ee07 2a90 	vmov	s15, r2
 8027ed4:	ee06 0a90 	vmov	s13, r0
 8027ed8:	ee36 6a47 	vsub.f32	s12, s12, s14
 8027edc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027ee0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8027ee4:	ee77 7a86 	vadd.f32	s15, s15, s12
 8027ee8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8027eec:	9316      	str	r3, [sp, #88]	; 0x58
 8027eee:	931a      	str	r3, [sp, #104]	; 0x68
 8027ef0:	931e      	str	r3, [sp, #120]	; 0x78
 8027ef2:	2300      	movs	r3, #0
 8027ef4:	9320      	str	r3, [sp, #128]	; 0x80
 8027ef6:	9321      	str	r3, [sp, #132]	; 0x84
 8027ef8:	9322      	str	r3, [sp, #136]	; 0x88
 8027efa:	9324      	str	r3, [sp, #144]	; 0x90
 8027efc:	9325      	str	r3, [sp, #148]	; 0x94
 8027efe:	9326      	str	r3, [sp, #152]	; 0x98
 8027f00:	9328      	str	r3, [sp, #160]	; 0xa0
 8027f02:	9329      	str	r3, [sp, #164]	; 0xa4
 8027f04:	932a      	str	r3, [sp, #168]	; 0xa8
 8027f06:	932c      	str	r3, [sp, #176]	; 0xb0
 8027f08:	932d      	str	r3, [sp, #180]	; 0xb4
 8027f0a:	932e      	str	r3, [sp, #184]	; 0xb8
 8027f0c:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8027f10:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8027f14:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8027f18:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8027f1c:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8027f20:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8027f24:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8027f28:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8027f2c:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8027f30:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8027f34:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8027f38:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8027f3c:	a830      	add	r0, sp, #192	; 0xc0
 8027f3e:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8027f42:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8027f46:	f000 fc43 	bl	80287d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027f4a:	eeb1 0a49 	vneg.f32	s0, s18
 8027f4e:	a830      	add	r0, sp, #192	; 0xc0
 8027f50:	f000 fd12 	bl	8028978 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027f54:	eeb1 0a68 	vneg.f32	s0, s17
 8027f58:	f000 fd1c 	bl	8028994 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8027f5c:	eeb1 0a48 	vneg.f32	s0, s16
 8027f60:	f000 fd27 	bl	80289b2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8027f64:	a840      	add	r0, sp, #256	; 0x100
 8027f66:	f000 fc33 	bl	80287d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027f6a:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8027f6e:	a840      	add	r0, sp, #256	; 0x100
 8027f70:	f000 fc86 	bl	8028880 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8027f74:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8027f78:	f000 fcac 	bl	80288d4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8027f7c:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8027f80:	f000 fcd1 	bl	8028926 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8027f84:	a850      	add	r0, sp, #320	; 0x140
 8027f86:	f000 fc23 	bl	80287d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027f8a:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8027f8e:	a850      	add	r0, sp, #320	; 0x140
 8027f90:	f000 fd1e 	bl	80289d0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8027f94:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8027f98:	f000 fd26 	bl	80289e8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8027f9c:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8027fa0:	f000 fd2f 	bl	8028a02 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8027fa4:	a860      	add	r0, sp, #384	; 0x180
 8027fa6:	f000 fc13 	bl	80287d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027faa:	eeb0 0a49 	vmov.f32	s0, s18
 8027fae:	a860      	add	r0, sp, #384	; 0x180
 8027fb0:	f000 fce2 	bl	8028978 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027fb4:	eeb0 0a68 	vmov.f32	s0, s17
 8027fb8:	f000 fcec 	bl	8028994 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8027fbc:	eeb0 0a48 	vmov.f32	s0, s16
 8027fc0:	f000 fcf7 	bl	80289b2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8027fc4:	aa50      	add	r2, sp, #320	; 0x140
 8027fc6:	a960      	add	r1, sp, #384	; 0x180
 8027fc8:	a8b0      	add	r0, sp, #704	; 0x2c0
 8027fca:	f000 fc1b 	bl	8028804 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027fce:	4628      	mov	r0, r5
 8027fd0:	aa40      	add	r2, sp, #256	; 0x100
 8027fd2:	a9b0      	add	r1, sp, #704	; 0x2c0
 8027fd4:	f000 fc16 	bl	8028804 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027fd8:	4629      	mov	r1, r5
 8027fda:	aa30      	add	r2, sp, #192	; 0xc0
 8027fdc:	a870      	add	r0, sp, #448	; 0x1c0
 8027fde:	f000 fc11 	bl	8028804 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027fe2:	a880      	add	r0, sp, #512	; 0x200
 8027fe4:	f000 fbf4 	bl	80287d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027fe8:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8027fec:	a880      	add	r0, sp, #512	; 0x200
 8027fee:	eeb1 0a40 	vneg.f32	s0, s0
 8027ff2:	f000 fcc1 	bl	8028978 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027ff6:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8027ffa:	a880      	add	r0, sp, #512	; 0x200
 8027ffc:	eeb1 0a40 	vneg.f32	s0, s0
 8028000:	f000 fcc8 	bl	8028994 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028004:	a890      	add	r0, sp, #576	; 0x240
 8028006:	f000 fbe3 	bl	80287d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802800a:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802800e:	a890      	add	r0, sp, #576	; 0x240
 8028010:	f000 fc26 	bl	8028860 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8028014:	a8a0      	add	r0, sp, #640	; 0x280
 8028016:	f000 fbdb 	bl	80287d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 802801a:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802801e:	a8a0      	add	r0, sp, #640	; 0x280
 8028020:	f000 fcaa 	bl	8028978 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028024:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028028:	f000 fcb4 	bl	8028994 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802802c:	aa90      	add	r2, sp, #576	; 0x240
 802802e:	a9a0      	add	r1, sp, #640	; 0x280
 8028030:	a8b0      	add	r0, sp, #704	; 0x2c0
 8028032:	f000 fbe7 	bl	8028804 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028036:	4628      	mov	r0, r5
 8028038:	aa80      	add	r2, sp, #512	; 0x200
 802803a:	a9b0      	add	r1, sp, #704	; 0x2c0
 802803c:	f000 fbe2 	bl	8028804 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028040:	4629      	mov	r1, r5
 8028042:	aa70      	add	r2, sp, #448	; 0x1c0
 8028044:	4668      	mov	r0, sp
 8028046:	466d      	mov	r5, sp
 8028048:	f000 fbdc 	bl	8028804 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802804c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802804e:	ae70      	add	r6, sp, #448	; 0x1c0
 8028050:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028052:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028054:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028056:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028058:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802805a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802805e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8028062:	2500      	movs	r5, #0
 8028064:	0129      	lsls	r1, r5, #4
 8028066:	ab20      	add	r3, sp, #128	; 0x80
 8028068:	185e      	adds	r6, r3, r1
 802806a:	ab10      	add	r3, sp, #64	; 0x40
 802806c:	4419      	add	r1, r3
 802806e:	a870      	add	r0, sp, #448	; 0x1c0
 8028070:	f000 fb7e 	bl	8028770 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8028074:	3501      	adds	r5, #1
 8028076:	2d04      	cmp	r5, #4
 8028078:	ed86 0a00 	vstr	s0, [r6]
 802807c:	edc6 0a01 	vstr	s1, [r6, #4]
 8028080:	ed86 1a02 	vstr	s2, [r6, #8]
 8028084:	edc6 1a03 	vstr	s3, [r6, #12]
 8028088:	d1ec      	bne.n	8028064 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802808a:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802808e:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8028092:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8028096:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802809a:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802809e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80280a2:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 80280a6:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 80280aa:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80280ae:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80280b2:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 80280b6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80280ba:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 80280be:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80280c2:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 80280c6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80280ca:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 80280ce:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 80280d2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80280d6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80280da:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 80280de:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 80280e2:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 80280e6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80280ea:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 80280ee:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80280f2:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 80280f6:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 80280fa:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80280fe:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028102:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8028106:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802810a:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802810e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028112:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8028116:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802811a:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802811e:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8028122:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8028126:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802812a:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802812e:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8028132:	ecbd 8b04 	vpop	{d8-d9}
 8028136:	bd70      	pop	{r4, r5, r6, pc}

08028138 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8028138:	b510      	push	{r4, lr}
 802813a:	4604      	mov	r4, r0
 802813c:	f7eb f817 	bl	801316e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028140:	4620      	mov	r0, r4
 8028142:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028146:	f7ff bea1 	b.w	8027e8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802814a <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802814a:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802814e:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8028152:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8028156:	f7ff be99 	b.w	8027e8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802815a <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802815a:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802815e:	f7ff be95 	b.w	8027e8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028162 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8028162:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8028166:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802816a:	f7ff be8f 	b.w	8027e8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802816e <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802816e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028172:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028176:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802817a:	bfd8      	it	le
 802817c:	eeb0 0a67 	vmovle.f32	s0, s15
 8028180:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8028184:	f7ff be82 	b.w	8027e8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028188 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8028188:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 802818c:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8028190:	f7ff be7c 	b.w	8027e8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028194 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8028194:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028198:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802819c:	f7ff be76 	b.w	8027e8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080281a0 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 80281a0:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80281a4:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80281a8:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 80281ac:	f7ff be6e 	b.w	8027e8c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080281b0 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 80281b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80281b4:	ed2d 8b04 	vpush	{d8-d9}
 80281b8:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 80281bc:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 80281c0:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 80281c4:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 80281c8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80281cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80281d0:	bf54      	ite	pl
 80281d2:	eeb0 0a69 	vmovpl.f32	s0, s19
 80281d6:	eeb0 0a48 	vmovmi.f32	s0, s16
 80281da:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80281de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80281e2:	bfd8      	it	le
 80281e4:	eeb0 0a49 	vmovle.f32	s0, s18
 80281e8:	eef4 8ac0 	vcmpe.f32	s17, s0
 80281ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80281f0:	bfd8      	it	le
 80281f2:	eeb0 0a68 	vmovle.f32	s0, s17
 80281f6:	460c      	mov	r4, r1
 80281f8:	4607      	mov	r7, r0
 80281fa:	f001 ff2b 	bl	802a054 <floorf>
 80281fe:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028202:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028206:	bf58      	it	pl
 8028208:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802820c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028210:	bf56      	itet	pl
 8028212:	ee10 3a10 	vmovpl	r3, s0
 8028216:	2600      	movmi	r6, #0
 8028218:	b21e      	sxthpl	r6, r3
 802821a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802821e:	bfd8      	it	le
 8028220:	eeb0 8a69 	vmovle.f32	s16, s19
 8028224:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028228:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802822c:	bf58      	it	pl
 802822e:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028232:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028236:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802823a:	bf54      	ite	pl
 802823c:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028240:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028244:	f001 fec4 	bl	8029fd0 <ceilf>
 8028248:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 802824c:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8028250:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8028254:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8028258:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 802825c:	ee07 8a90 	vmov	s15, r8
 8028260:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028264:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028268:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802826c:	bfd8      	it	le
 802826e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028272:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028276:	bfdc      	itt	le
 8028278:	ee10 3a10 	vmovle	r3, s0
 802827c:	fa0f f883 	sxthle.w	r8, r3
 8028280:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028284:	bf54      	ite	pl
 8028286:	eeb0 0a69 	vmovpl.f32	s0, s19
 802828a:	eeb0 0a48 	vmovmi.f32	s0, s16
 802828e:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8028292:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028296:	bfd8      	it	le
 8028298:	eeb0 0a49 	vmovle.f32	s0, s18
 802829c:	eef4 8ac0 	vcmpe.f32	s17, s0
 80282a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80282a4:	bfd8      	it	le
 80282a6:	eeb0 0a68 	vmovle.f32	s0, s17
 80282aa:	f001 fed3 	bl	802a054 <floorf>
 80282ae:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80282b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80282b6:	bf58      	it	pl
 80282b8:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80282bc:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80282c0:	bf56      	itet	pl
 80282c2:	ee10 3a10 	vmovpl	r3, s0
 80282c6:	2500      	movmi	r5, #0
 80282c8:	b21d      	sxthpl	r5, r3
 80282ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80282ce:	bfd8      	it	le
 80282d0:	eeb0 8a69 	vmovle.f32	s16, s19
 80282d4:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80282d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80282dc:	bf58      	it	pl
 80282de:	eeb0 8a49 	vmovpl.f32	s16, s18
 80282e2:	eef4 8ac8 	vcmpe.f32	s17, s16
 80282e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80282ea:	bf54      	ite	pl
 80282ec:	eeb0 0a68 	vmovpl.f32	s0, s17
 80282f0:	eeb0 0a48 	vmovmi.f32	s0, s16
 80282f4:	f001 fe6c 	bl	8029fd0 <ceilf>
 80282f8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80282fc:	803e      	strh	r6, [r7, #0]
 80282fe:	ee07 3a90 	vmov	s15, r3
 8028302:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028306:	807d      	strh	r5, [r7, #2]
 8028308:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802830c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028310:	bfd8      	it	le
 8028312:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028316:	eba8 0606 	sub.w	r6, r8, r6
 802831a:	bfdc      	itt	le
 802831c:	ee10 3a10 	vmovle	r3, s0
 8028320:	b21b      	sxthle	r3, r3
 8028322:	1b5d      	subs	r5, r3, r5
 8028324:	80be      	strh	r6, [r7, #4]
 8028326:	80fd      	strh	r5, [r7, #6]
 8028328:	ecbd 8b04 	vpop	{d8-d9}
 802832c:	4638      	mov	r0, r7
 802832e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08028332 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8028332:	b513      	push	{r0, r1, r4, lr}
 8028334:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8028338:	4604      	mov	r4, r0
 802833a:	b143      	cbz	r3, 802834e <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 802833c:	4601      	mov	r1, r0
 802833e:	4668      	mov	r0, sp
 8028340:	f7ff ff36 	bl	80281b0 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8028344:	6823      	ldr	r3, [r4, #0]
 8028346:	4669      	mov	r1, sp
 8028348:	691b      	ldr	r3, [r3, #16]
 802834a:	4620      	mov	r0, r4
 802834c:	4798      	blx	r3
 802834e:	b002      	add	sp, #8
 8028350:	bd10      	pop	{r4, pc}

08028352 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8028352:	4603      	mov	r3, r0
 8028354:	3026      	adds	r0, #38	; 0x26
 8028356:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 802835a:	b90b      	cbnz	r3, 8028360 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 802835c:	f7ee be38 	b.w	8016fd0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8028360:	f7ee be46 	b.w	8016ff0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08028364 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8028364:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028368:	ed2d 8b04 	vpush	{d8-d9}
 802836c:	4604      	mov	r4, r0
 802836e:	469b      	mov	fp, r3
 8028370:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8028374:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8028378:	f9b1 6000 	ldrsh.w	r6, [r1]
 802837c:	8888      	ldrh	r0, [r1, #4]
 802837e:	b0b3      	sub	sp, #204	; 0xcc
 8028380:	4430      	add	r0, r6
 8028382:	b280      	uxth	r0, r0
 8028384:	9206      	str	r2, [sp, #24]
 8028386:	fa0f fe80 	sxth.w	lr, r0
 802838a:	2200      	movs	r2, #0
 802838c:	4596      	cmp	lr, r2
 802838e:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8028392:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8028396:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802839a:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 802839c:	9211      	str	r2, [sp, #68]	; 0x44
 802839e:	f340 8129 	ble.w	80285f4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80283a2:	45b4      	cmp	ip, r6
 80283a4:	f340 8126 	ble.w	80285f4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80283a8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80283ac:	88ca      	ldrh	r2, [r1, #6]
 80283ae:	442a      	add	r2, r5
 80283b0:	b292      	uxth	r2, r2
 80283b2:	b211      	sxth	r1, r2
 80283b4:	2900      	cmp	r1, #0
 80283b6:	f340 811d 	ble.w	80285f4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80283ba:	42ab      	cmp	r3, r5
 80283bc:	f340 811a 	ble.w	80285f4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80283c0:	45f4      	cmp	ip, lr
 80283c2:	bfb8      	it	lt
 80283c4:	fa1f f08c 	uxthlt.w	r0, ip
 80283c8:	428b      	cmp	r3, r1
 80283ca:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80283ce:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80283d2:	bfb8      	it	lt
 80283d4:	b29a      	uxthlt	r2, r3
 80283d6:	1b80      	subs	r0, r0, r6
 80283d8:	1b52      	subs	r2, r2, r5
 80283da:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 80283de:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 80283e2:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80283e6:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 80283ea:	ab11      	add	r3, sp, #68	; 0x44
 80283ec:	e893 0003 	ldmia.w	r3, {r0, r1}
 80283f0:	6822      	ldr	r2, [r4, #0]
 80283f2:	9307      	str	r3, [sp, #28]
 80283f4:	ad13      	add	r5, sp, #76	; 0x4c
 80283f6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80283f8:	e885 0003 	stmia.w	r5, {r0, r1}
 80283fc:	4629      	mov	r1, r5
 80283fe:	4620      	mov	r0, r4
 8028400:	4790      	blx	r2
 8028402:	4621      	mov	r1, r4
 8028404:	a815      	add	r0, sp, #84	; 0x54
 8028406:	f7ee fd3f 	bl	8016e88 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802840a:	a815      	add	r0, sp, #84	; 0x54
 802840c:	f7ed fa04 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028410:	9b07      	ldr	r3, [sp, #28]
 8028412:	1d26      	adds	r6, r4, #4
 8028414:	4618      	mov	r0, r3
 8028416:	4631      	mov	r1, r6
 8028418:	f7ed fa42 	bl	80158a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802841c:	4628      	mov	r0, r5
 802841e:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8028422:	f7ed f9f9 	bl	8015818 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028426:	4628      	mov	r0, r5
 8028428:	f7f1 f8a8 	bl	801957c <_ZNK8touchgfx6Bitmap7getDataEv>
 802842c:	9007      	str	r0, [sp, #28]
 802842e:	2800      	cmp	r0, #0
 8028430:	f000 80db 	beq.w	80285ea <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8028434:	f8db 2000 	ldr.w	r2, [fp]
 8028438:	9209      	str	r2, [sp, #36]	; 0x24
 802843a:	f8db 2004 	ldr.w	r2, [fp, #4]
 802843e:	920a      	str	r2, [sp, #40]	; 0x28
 8028440:	f8db 2008 	ldr.w	r2, [fp, #8]
 8028444:	920b      	str	r2, [sp, #44]	; 0x2c
 8028446:	f8db 200c 	ldr.w	r2, [fp, #12]
 802844a:	920c      	str	r2, [sp, #48]	; 0x30
 802844c:	f8da 2000 	ldr.w	r2, [sl]
 8028450:	920d      	str	r2, [sp, #52]	; 0x34
 8028452:	f8da 2004 	ldr.w	r2, [sl, #4]
 8028456:	920e      	str	r2, [sp, #56]	; 0x38
 8028458:	f8da 2008 	ldr.w	r2, [sl, #8]
 802845c:	920f      	str	r2, [sp, #60]	; 0x3c
 802845e:	f8da 200c 	ldr.w	r2, [sl, #12]
 8028462:	9210      	str	r2, [sp, #64]	; 0x40
 8028464:	a90d      	add	r1, sp, #52	; 0x34
 8028466:	4632      	mov	r2, r6
 8028468:	a809      	add	r0, sp, #36	; 0x24
 802846a:	f7ed f9fd 	bl	8015868 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802846e:	4632      	mov	r2, r6
 8028470:	a90e      	add	r1, sp, #56	; 0x38
 8028472:	a80a      	add	r0, sp, #40	; 0x28
 8028474:	f7ed f9f8 	bl	8015868 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028478:	4632      	mov	r2, r6
 802847a:	a90f      	add	r1, sp, #60	; 0x3c
 802847c:	a80b      	add	r0, sp, #44	; 0x2c
 802847e:	f7ed f9f3 	bl	8015868 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8028482:	4632      	mov	r2, r6
 8028484:	a910      	add	r1, sp, #64	; 0x40
 8028486:	a80c      	add	r0, sp, #48	; 0x30
 8028488:	f7ed f9ee 	bl	8015868 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802848c:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8028490:	edd7 4a00 	vldr	s9, [r7]
 8028494:	edd7 5a01 	vldr	s11, [r7, #4]
 8028498:	ed98 4a00 	vldr	s8, [r8]
 802849c:	ed98 5a01 	vldr	s10, [r8, #4]
 80284a0:	ed99 9a00 	vldr	s18, [r9]
 80284a4:	ed99 8a01 	vldr	s16, [r9, #4]
 80284a8:	edd9 8a02 	vldr	s17, [r9, #8]
 80284ac:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 80284b0:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 80284b4:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 80284b8:	eef0 6a67 	vmov.f32	s13, s15
 80284bc:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 80284c0:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 80284c4:	eeb0 7a67 	vmov.f32	s14, s15
 80284c8:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 80284cc:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 80284d0:	eeb0 6a67 	vmov.f32	s12, s15
 80284d4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80284d8:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 80284dc:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 80284e0:	ee16 6a10 	vmov	r6, s12
 80284e4:	eeb0 6a67 	vmov.f32	s12, s15
 80284e8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80284ec:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 80284f0:	f8d7 a008 	ldr.w	sl, [r7, #8]
 80284f4:	f8d8 b008 	ldr.w	fp, [r8, #8]
 80284f8:	68ff      	ldr	r7, [r7, #12]
 80284fa:	9624      	str	r6, [sp, #144]	; 0x90
 80284fc:	ee16 0a10 	vmov	r0, s12
 8028500:	eeb0 6a67 	vmov.f32	s12, s15
 8028504:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028508:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 802850c:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8028510:	ee16 1a10 	vmov	r1, s12
 8028514:	eeb0 6a67 	vmov.f32	s12, s15
 8028518:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802851c:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8028520:	ee16 2a10 	vmov	r2, s12
 8028524:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8028528:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 802852c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8028530:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8028534:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8028538:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 802853c:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8028540:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8028544:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8028548:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 802854c:	922d      	str	r2, [sp, #180]	; 0xb4
 802854e:	4a2b      	ldr	r2, [pc, #172]	; (80285fc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8028550:	9b06      	ldr	r3, [sp, #24]
 8028552:	8812      	ldrh	r2, [r2, #0]
 8028554:	9317      	str	r3, [sp, #92]	; 0x5c
 8028556:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 802855a:	9b07      	ldr	r3, [sp, #28]
 802855c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8028560:	4628      	mov	r0, r5
 8028562:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8028566:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802856a:	9218      	str	r2, [sp, #96]	; 0x60
 802856c:	9319      	str	r3, [sp, #100]	; 0x64
 802856e:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8028572:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8028576:	9731      	str	r7, [sp, #196]	; 0xc4
 8028578:	f7f1 f830 	bl	80195dc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802857c:	901a      	str	r0, [sp, #104]	; 0x68
 802857e:	4628      	mov	r0, r5
 8028580:	f7f0 ff10 	bl	80193a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028584:	901b      	str	r0, [sp, #108]	; 0x6c
 8028586:	4628      	mov	r0, r5
 8028588:	f7f0 ff40 	bl	801940c <_ZNK8touchgfx6Bitmap9getHeightEv>
 802858c:	901c      	str	r0, [sp, #112]	; 0x70
 802858e:	4628      	mov	r0, r5
 8028590:	f7f0 ff08 	bl	80193a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028594:	eeb4 9a48 	vcmp.f32	s18, s16
 8028598:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802859c:	901d      	str	r0, [sp, #116]	; 0x74
 802859e:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 80285a2:	d107      	bne.n	80285b4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 80285a4:	eeb4 8a68 	vcmp.f32	s16, s17
 80285a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80285ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80285b0:	bf08      	it	eq
 80285b2:	461e      	moveq	r6, r3
 80285b4:	4b12      	ldr	r3, [pc, #72]	; (8028600 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 80285b6:	681b      	ldr	r3, [r3, #0]
 80285b8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80285bc:	b10a      	cbz	r2, 80285c2 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 80285be:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80285c0:	b905      	cbnz	r5, 80285c4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 80285c2:	689d      	ldr	r5, [r3, #8]
 80285c4:	682b      	ldr	r3, [r5, #0]
 80285c6:	4620      	mov	r0, r4
 80285c8:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 80285ca:	f7ff fec2 	bl	8028352 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 80285ce:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80285d2:	9604      	str	r6, [sp, #16]
 80285d4:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80285d8:	ab13      	add	r3, sp, #76	; 0x4c
 80285da:	9301      	str	r3, [sp, #4]
 80285dc:	ab15      	add	r3, sp, #84	; 0x54
 80285de:	9300      	str	r3, [sp, #0]
 80285e0:	aa1e      	add	r2, sp, #120	; 0x78
 80285e2:	ab19      	add	r3, sp, #100	; 0x64
 80285e4:	a917      	add	r1, sp, #92	; 0x5c
 80285e6:	4628      	mov	r0, r5
 80285e8:	47b8      	blx	r7
 80285ea:	b033      	add	sp, #204	; 0xcc
 80285ec:	ecbd 8b04 	vpop	{d8-d9}
 80285f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80285f4:	2300      	movs	r3, #0
 80285f6:	9312      	str	r3, [sp, #72]	; 0x48
 80285f8:	e6f7      	b.n	80283ea <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 80285fa:	bf00      	nop
 80285fc:	20012dae 	.word	0x20012dae
 8028600:	20012db4 	.word	0x20012db4

08028604 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8028604:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028608:	ed2d 8b02 	vpush	{d8}
 802860c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8028610:	b098      	sub	sp, #96	; 0x60
 8028612:	4604      	mov	r4, r0
 8028614:	4688      	mov	r8, r1
 8028616:	2b00      	cmp	r3, #0
 8028618:	d077      	beq.n	802870a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 802861a:	f100 0526 	add.w	r5, r0, #38	; 0x26
 802861e:	4628      	mov	r0, r5
 8028620:	f7f0 fec0 	bl	80193a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028624:	ee07 0a90 	vmov	s15, r0
 8028628:	4628      	mov	r0, r5
 802862a:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 802862e:	f7f0 feed 	bl	801940c <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028632:	4b4e      	ldr	r3, [pc, #312]	; (802876c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8028634:	781b      	ldrb	r3, [r3, #0]
 8028636:	ee07 0a90 	vmov	s15, r0
 802863a:	2b01      	cmp	r3, #1
 802863c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8028640:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8028644:	d066      	beq.n	8028714 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8028646:	eeb0 6a47 	vmov.f32	s12, s14
 802864a:	ee17 3a10 	vmov	r3, s14
 802864e:	eeb0 4a48 	vmov.f32	s8, s16
 8028652:	eeb0 7a48 	vmov.f32	s14, s16
 8028656:	eef0 4a67 	vmov.f32	s9, s15
 802865a:	eeb0 8a67 	vmov.f32	s16, s15
 802865e:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8028662:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8028666:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 802866a:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802866e:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8028672:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8028676:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8028678:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802867a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 802867c:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8028680:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8028684:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8028688:	ee73 1a65 	vsub.f32	s3, s6, s11
 802868c:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8028690:	ee32 1a45 	vsub.f32	s2, s4, s10
 8028694:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8028698:	ee73 1ae5 	vsub.f32	s3, s7, s11
 802869c:	eee1 6a21 	vfma.f32	s13, s2, s3
 80286a0:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80286a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80286a8:	dd3d      	ble.n	8028726 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 80286aa:	ed8d 5a04 	vstr	s10, [sp, #16]
 80286ae:	ed8d 2a05 	vstr	s4, [sp, #20]
 80286b2:	edcd 2a06 	vstr	s5, [sp, #24]
 80286b6:	f8cd c01c 	str.w	ip, [sp, #28]
 80286ba:	edcd 5a08 	vstr	s11, [sp, #32]
 80286be:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 80286c2:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 80286c6:	970b      	str	r7, [sp, #44]	; 0x2c
 80286c8:	960c      	str	r6, [sp, #48]	; 0x30
 80286ca:	950d      	str	r5, [sp, #52]	; 0x34
 80286cc:	920e      	str	r2, [sp, #56]	; 0x38
 80286ce:	900f      	str	r0, [sp, #60]	; 0x3c
 80286d0:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 80286d4:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 80286d8:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 80286dc:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 80286e0:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 80286e4:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 80286e8:	9316      	str	r3, [sp, #88]	; 0x58
 80286ea:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 80286ee:	ab14      	add	r3, sp, #80	; 0x50
 80286f0:	9303      	str	r3, [sp, #12]
 80286f2:	ab10      	add	r3, sp, #64	; 0x40
 80286f4:	9302      	str	r3, [sp, #8]
 80286f6:	ab0c      	add	r3, sp, #48	; 0x30
 80286f8:	9301      	str	r3, [sp, #4]
 80286fa:	ab08      	add	r3, sp, #32
 80286fc:	9300      	str	r3, [sp, #0]
 80286fe:	2200      	movs	r2, #0
 8028700:	ab04      	add	r3, sp, #16
 8028702:	4641      	mov	r1, r8
 8028704:	4620      	mov	r0, r4
 8028706:	f7ff fe2d 	bl	8028364 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 802870a:	b018      	add	sp, #96	; 0x60
 802870c:	ecbd 8b02 	vpop	{d8}
 8028710:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028714:	eeb0 6a48 	vmov.f32	s12, s16
 8028718:	eef0 4a47 	vmov.f32	s9, s14
 802871c:	ee17 3a90 	vmov	r3, s15
 8028720:	eeb0 4a67 	vmov.f32	s8, s15
 8028724:	e79b      	b.n	802865e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8028726:	ed8d 5a05 	vstr	s10, [sp, #20]
 802872a:	ed8d 2a04 	vstr	s4, [sp, #16]
 802872e:	f8cd c018 	str.w	ip, [sp, #24]
 8028732:	edcd 2a07 	vstr	s5, [sp, #28]
 8028736:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 802873a:	ed8d 3a08 	vstr	s6, [sp, #32]
 802873e:	970a      	str	r7, [sp, #40]	; 0x28
 8028740:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8028744:	960d      	str	r6, [sp, #52]	; 0x34
 8028746:	950c      	str	r5, [sp, #48]	; 0x30
 8028748:	900e      	str	r0, [sp, #56]	; 0x38
 802874a:	920f      	str	r2, [sp, #60]	; 0x3c
 802874c:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8028750:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8028754:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8028758:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802875c:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8028760:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8028764:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8028768:	9317      	str	r3, [sp, #92]	; 0x5c
 802876a:	e7c0      	b.n	80286ee <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 802876c:	20012dac 	.word	0x20012dac

08028770 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8028770:	b5f0      	push	{r4, r5, r6, r7, lr}
 8028772:	b08d      	sub	sp, #52	; 0x34
 8028774:	2300      	movs	r3, #0
 8028776:	9304      	str	r3, [sp, #16]
 8028778:	9305      	str	r3, [sp, #20]
 802877a:	9306      	str	r3, [sp, #24]
 802877c:	aa04      	add	r2, sp, #16
 802877e:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8028782:	9307      	str	r3, [sp, #28]
 8028784:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8028788:	4613      	mov	r3, r2
 802878a:	f101 0710 	add.w	r7, r1, #16
 802878e:	eddf 7a0f 	vldr	s15, [pc, #60]	; 80287cc <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8028792:	460c      	mov	r4, r1
 8028794:	4605      	mov	r5, r0
 8028796:	ecb4 7a01 	vldmia	r4!, {s14}
 802879a:	ecf5 6a01 	vldmia	r5!, {s13}
 802879e:	42bc      	cmp	r4, r7
 80287a0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80287a4:	d1f7      	bne.n	8028796 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 80287a6:	3010      	adds	r0, #16
 80287a8:	42b0      	cmp	r0, r6
 80287aa:	ece2 7a01 	vstmia	r2!, {s15}
 80287ae:	d1ee      	bne.n	802878e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 80287b0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80287b2:	ac0c      	add	r4, sp, #48	; 0x30
 80287b4:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 80287b8:	ed9d 0a08 	vldr	s0, [sp, #32]
 80287bc:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 80287c0:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 80287c4:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 80287c8:	b00d      	add	sp, #52	; 0x34
 80287ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80287cc:	00000000 	.word	0x00000000

080287d0 <_ZN8touchgfx9Matrix4x4C1Ev>:
 80287d0:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8028800 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 80287d4:	2300      	movs	r3, #0
 80287d6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80287da:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 80287de:	2200      	movs	r2, #0
 80287e0:	4293      	cmp	r3, r2
 80287e2:	f102 0201 	add.w	r2, r2, #1
 80287e6:	bf14      	ite	ne
 80287e8:	eef0 6a47 	vmovne.f32	s13, s14
 80287ec:	eef0 6a67 	vmoveq.f32	s13, s15
 80287f0:	2a04      	cmp	r2, #4
 80287f2:	ece1 6a01 	vstmia	r1!, {s13}
 80287f6:	d1f3      	bne.n	80287e0 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 80287f8:	3301      	adds	r3, #1
 80287fa:	2b04      	cmp	r3, #4
 80287fc:	d1ed      	bne.n	80287da <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 80287fe:	4770      	bx	lr
 8028800:	00000000 	.word	0x00000000

08028804 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8028804:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028808:	460c      	mov	r4, r1
 802880a:	4605      	mov	r5, r0
 802880c:	4690      	mov	r8, r2
 802880e:	f7ff ffdf 	bl	80287d0 <_ZN8touchgfx9Matrix4x4C1Ev>
 8028812:	4628      	mov	r0, r5
 8028814:	4621      	mov	r1, r4
 8028816:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 802881a:	2300      	movs	r3, #0
 802881c:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802885c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8028820:	eb08 0603 	add.w	r6, r8, r3
 8028824:	460f      	mov	r7, r1
 8028826:	2400      	movs	r4, #0
 8028828:	4632      	mov	r2, r6
 802882a:	ecf7 6a01 	vldmia	r7!, {s13}
 802882e:	ed92 7a00 	vldr	s14, [r2]
 8028832:	3401      	adds	r4, #1
 8028834:	2c04      	cmp	r4, #4
 8028836:	f106 0610 	add.w	r6, r6, #16
 802883a:	eee6 7a87 	vfma.f32	s15, s13, s14
 802883e:	d1f3      	bne.n	8028828 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8028840:	18c2      	adds	r2, r0, r3
 8028842:	3304      	adds	r3, #4
 8028844:	2b10      	cmp	r3, #16
 8028846:	edc2 7a00 	vstr	s15, [r2]
 802884a:	d1e7      	bne.n	802881c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 802884c:	3110      	adds	r1, #16
 802884e:	4561      	cmp	r1, ip
 8028850:	f100 0010 	add.w	r0, r0, #16
 8028854:	d1e1      	bne.n	802881a <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8028856:	4628      	mov	r0, r5
 8028858:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802885c:	00000000 	.word	0x00000000

08028860 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8028860:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028864:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8028868:	f100 0320 	add.w	r3, r0, #32
 802886c:	3030      	adds	r0, #48	; 0x30
 802886e:	ecf3 7a01 	vldmia	r3!, {s15}
 8028872:	ee60 7a27 	vmul.f32	s15, s0, s15
 8028876:	4283      	cmp	r3, r0
 8028878:	edc3 7a03 	vstr	s15, [r3, #12]
 802887c:	d1f7      	bne.n	802886e <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802887e:	4770      	bx	lr

08028880 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8028880:	b510      	push	{r4, lr}
 8028882:	ed2d 8b02 	vpush	{d8}
 8028886:	4604      	mov	r4, r0
 8028888:	eef0 8a40 	vmov.f32	s17, s0
 802888c:	f001 fb56 	bl	8029f3c <sinf>
 8028890:	eeb0 8a40 	vmov.f32	s16, s0
 8028894:	eeb0 0a68 	vmov.f32	s0, s17
 8028898:	f001 fb04 	bl	8029ea4 <cosf>
 802889c:	f104 0310 	add.w	r3, r4, #16
 80288a0:	f104 0220 	add.w	r2, r4, #32
 80288a4:	eeb1 6a48 	vneg.f32	s12, s16
 80288a8:	edd3 7a04 	vldr	s15, [r3, #16]
 80288ac:	edd3 6a00 	vldr	s13, [r3]
 80288b0:	ee26 7a27 	vmul.f32	s14, s12, s15
 80288b4:	ee67 7a80 	vmul.f32	s15, s15, s0
 80288b8:	eea6 7a80 	vfma.f32	s14, s13, s0
 80288bc:	eee6 7a88 	vfma.f32	s15, s13, s16
 80288c0:	eca3 7a01 	vstmia	r3!, {s14}
 80288c4:	429a      	cmp	r2, r3
 80288c6:	edc3 7a03 	vstr	s15, [r3, #12]
 80288ca:	d1ed      	bne.n	80288a8 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 80288cc:	ecbd 8b02 	vpop	{d8}
 80288d0:	4620      	mov	r0, r4
 80288d2:	bd10      	pop	{r4, pc}

080288d4 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 80288d4:	b510      	push	{r4, lr}
 80288d6:	ed2d 8b02 	vpush	{d8}
 80288da:	4604      	mov	r4, r0
 80288dc:	eef0 8a40 	vmov.f32	s17, s0
 80288e0:	f001 fb2c 	bl	8029f3c <sinf>
 80288e4:	eeb0 8a40 	vmov.f32	s16, s0
 80288e8:	eeb0 0a68 	vmov.f32	s0, s17
 80288ec:	f001 fada 	bl	8029ea4 <cosf>
 80288f0:	4623      	mov	r3, r4
 80288f2:	f104 0210 	add.w	r2, r4, #16
 80288f6:	eeb1 6a48 	vneg.f32	s12, s16
 80288fa:	edd3 7a08 	vldr	s15, [r3, #32]
 80288fe:	edd3 6a00 	vldr	s13, [r3]
 8028902:	ee27 7a88 	vmul.f32	s14, s15, s16
 8028906:	ee67 7a80 	vmul.f32	s15, s15, s0
 802890a:	eea6 7a80 	vfma.f32	s14, s13, s0
 802890e:	eee6 7a26 	vfma.f32	s15, s12, s13
 8028912:	eca3 7a01 	vstmia	r3!, {s14}
 8028916:	429a      	cmp	r2, r3
 8028918:	edc3 7a07 	vstr	s15, [r3, #28]
 802891c:	d1ed      	bne.n	80288fa <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 802891e:	ecbd 8b02 	vpop	{d8}
 8028922:	4620      	mov	r0, r4
 8028924:	bd10      	pop	{r4, pc}

08028926 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8028926:	b510      	push	{r4, lr}
 8028928:	ed2d 8b02 	vpush	{d8}
 802892c:	4604      	mov	r4, r0
 802892e:	eef0 8a40 	vmov.f32	s17, s0
 8028932:	f001 fb03 	bl	8029f3c <sinf>
 8028936:	eeb0 8a40 	vmov.f32	s16, s0
 802893a:	eeb0 0a68 	vmov.f32	s0, s17
 802893e:	f001 fab1 	bl	8029ea4 <cosf>
 8028942:	4623      	mov	r3, r4
 8028944:	f104 0210 	add.w	r2, r4, #16
 8028948:	eeb1 6a48 	vneg.f32	s12, s16
 802894c:	edd3 7a04 	vldr	s15, [r3, #16]
 8028950:	edd3 6a00 	vldr	s13, [r3]
 8028954:	ee26 7a27 	vmul.f32	s14, s12, s15
 8028958:	ee67 7a80 	vmul.f32	s15, s15, s0
 802895c:	eea6 7a80 	vfma.f32	s14, s13, s0
 8028960:	eee6 7a88 	vfma.f32	s15, s13, s16
 8028964:	eca3 7a01 	vstmia	r3!, {s14}
 8028968:	429a      	cmp	r2, r3
 802896a:	edc3 7a03 	vstr	s15, [r3, #12]
 802896e:	d1ed      	bne.n	802894c <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8028970:	ecbd 8b02 	vpop	{d8}
 8028974:	4620      	mov	r0, r4
 8028976:	bd10      	pop	{r4, pc}

08028978 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8028978:	4603      	mov	r3, r0
 802897a:	f100 0210 	add.w	r2, r0, #16
 802897e:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8028982:	edd3 7a00 	vldr	s15, [r3]
 8028986:	eee7 7a00 	vfma.f32	s15, s14, s0
 802898a:	ece3 7a01 	vstmia	r3!, {s15}
 802898e:	4293      	cmp	r3, r2
 8028990:	d1f5      	bne.n	802897e <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8028992:	4770      	bx	lr

08028994 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8028994:	f100 0310 	add.w	r3, r0, #16
 8028998:	f100 0220 	add.w	r2, r0, #32
 802899c:	ed93 7a08 	vldr	s14, [r3, #32]
 80289a0:	edd3 7a00 	vldr	s15, [r3]
 80289a4:	eee7 7a00 	vfma.f32	s15, s14, s0
 80289a8:	ece3 7a01 	vstmia	r3!, {s15}
 80289ac:	4293      	cmp	r3, r2
 80289ae:	d1f5      	bne.n	802899c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 80289b0:	4770      	bx	lr

080289b2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 80289b2:	f100 0320 	add.w	r3, r0, #32
 80289b6:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80289ba:	ed93 7a04 	vldr	s14, [r3, #16]
 80289be:	edd3 7a00 	vldr	s15, [r3]
 80289c2:	eee7 7a00 	vfma.f32	s15, s14, s0
 80289c6:	ece3 7a01 	vstmia	r3!, {s15}
 80289ca:	4293      	cmp	r3, r2
 80289cc:	d1f5      	bne.n	80289ba <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 80289ce:	4770      	bx	lr

080289d0 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 80289d0:	4603      	mov	r3, r0
 80289d2:	f100 0210 	add.w	r2, r0, #16
 80289d6:	edd3 7a00 	vldr	s15, [r3]
 80289da:	ee67 7a80 	vmul.f32	s15, s15, s0
 80289de:	ece3 7a01 	vstmia	r3!, {s15}
 80289e2:	4293      	cmp	r3, r2
 80289e4:	d1f7      	bne.n	80289d6 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 80289e6:	4770      	bx	lr

080289e8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 80289e8:	f100 0310 	add.w	r3, r0, #16
 80289ec:	f100 0220 	add.w	r2, r0, #32
 80289f0:	edd3 7a00 	vldr	s15, [r3]
 80289f4:	ee67 7a80 	vmul.f32	s15, s15, s0
 80289f8:	ece3 7a01 	vstmia	r3!, {s15}
 80289fc:	4293      	cmp	r3, r2
 80289fe:	d1f7      	bne.n	80289f0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8028a00:	4770      	bx	lr

08028a02 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8028a02:	f100 0320 	add.w	r3, r0, #32
 8028a06:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8028a0a:	edd3 7a00 	vldr	s15, [r3]
 8028a0e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8028a12:	ece3 7a01 	vstmia	r3!, {s15}
 8028a16:	4293      	cmp	r3, r2
 8028a18:	d1f7      	bne.n	8028a0a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8028a1a:	4770      	bx	lr

08028a1c <arm_max_f32>:
 8028a1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028a20:	1e4f      	subs	r7, r1, #1
 8028a22:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8028a26:	f100 0e04 	add.w	lr, r0, #4
 8028a2a:	edd0 7a00 	vldr	s15, [r0]
 8028a2e:	d058      	beq.n	8028ae2 <arm_max_f32+0xc6>
 8028a30:	3014      	adds	r0, #20
 8028a32:	46c4      	mov	ip, r8
 8028a34:	2604      	movs	r6, #4
 8028a36:	2400      	movs	r4, #0
 8028a38:	ed10 6a04 	vldr	s12, [r0, #-16]
 8028a3c:	ed50 6a03 	vldr	s13, [r0, #-12]
 8028a40:	ed10 7a02 	vldr	s14, [r0, #-8]
 8028a44:	ed50 5a01 	vldr	s11, [r0, #-4]
 8028a48:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8028a4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028a50:	bfc8      	it	gt
 8028a52:	eef0 7a46 	vmovgt.f32	s15, s12
 8028a56:	f1a6 0503 	sub.w	r5, r6, #3
 8028a5a:	eef4 7ae6 	vcmpe.f32	s15, s13
 8028a5e:	bfc8      	it	gt
 8028a60:	462c      	movgt	r4, r5
 8028a62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028a66:	bf48      	it	mi
 8028a68:	eef0 7a66 	vmovmi.f32	s15, s13
 8028a6c:	f1a6 0502 	sub.w	r5, r6, #2
 8028a70:	eef4 7ac7 	vcmpe.f32	s15, s14
 8028a74:	bf48      	it	mi
 8028a76:	462c      	movmi	r4, r5
 8028a78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028a7c:	bf48      	it	mi
 8028a7e:	eef0 7a47 	vmovmi.f32	s15, s14
 8028a82:	f106 35ff 	add.w	r5, r6, #4294967295
 8028a86:	eef4 7ae5 	vcmpe.f32	s15, s11
 8028a8a:	bf48      	it	mi
 8028a8c:	462c      	movmi	r4, r5
 8028a8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028a92:	bf48      	it	mi
 8028a94:	4634      	movmi	r4, r6
 8028a96:	bf48      	it	mi
 8028a98:	eef0 7a65 	vmovmi.f32	s15, s11
 8028a9c:	f1bc 0c01 	subs.w	ip, ip, #1
 8028aa0:	f106 0604 	add.w	r6, r6, #4
 8028aa4:	f100 0010 	add.w	r0, r0, #16
 8028aa8:	d1c6      	bne.n	8028a38 <arm_max_f32+0x1c>
 8028aaa:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8028aae:	f017 0003 	ands.w	r0, r7, #3
 8028ab2:	d018      	beq.n	8028ae6 <arm_max_f32+0xca>
 8028ab4:	1a08      	subs	r0, r1, r0
 8028ab6:	ecbe 7a01 	vldmia	lr!, {s14}
 8028aba:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8028abe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ac2:	bfc8      	it	gt
 8028ac4:	4604      	movgt	r4, r0
 8028ac6:	f100 0001 	add.w	r0, r0, #1
 8028aca:	bfd8      	it	le
 8028acc:	eeb0 7a67 	vmovle.f32	s14, s15
 8028ad0:	4288      	cmp	r0, r1
 8028ad2:	eef0 7a47 	vmov.f32	s15, s14
 8028ad6:	d1ee      	bne.n	8028ab6 <arm_max_f32+0x9a>
 8028ad8:	ed82 7a00 	vstr	s14, [r2]
 8028adc:	601c      	str	r4, [r3, #0]
 8028ade:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028ae2:	4644      	mov	r4, r8
 8028ae4:	e7e3      	b.n	8028aae <arm_max_f32+0x92>
 8028ae6:	eeb0 7a67 	vmov.f32	s14, s15
 8028aea:	e7f5      	b.n	8028ad8 <arm_max_f32+0xbc>

08028aec <arm_rfft_fast_init_f32>:
 8028aec:	084b      	lsrs	r3, r1, #1
 8028aee:	2b80      	cmp	r3, #128	; 0x80
 8028af0:	b410      	push	{r4}
 8028af2:	8201      	strh	r1, [r0, #16]
 8028af4:	8003      	strh	r3, [r0, #0]
 8028af6:	d047      	beq.n	8028b88 <arm_rfft_fast_init_f32+0x9c>
 8028af8:	d917      	bls.n	8028b2a <arm_rfft_fast_init_f32+0x3e>
 8028afa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8028afe:	d03d      	beq.n	8028b7c <arm_rfft_fast_init_f32+0x90>
 8028b00:	d929      	bls.n	8028b56 <arm_rfft_fast_init_f32+0x6a>
 8028b02:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8028b06:	d020      	beq.n	8028b4a <arm_rfft_fast_init_f32+0x5e>
 8028b08:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8028b0c:	d113      	bne.n	8028b36 <arm_rfft_fast_init_f32+0x4a>
 8028b0e:	4921      	ldr	r1, [pc, #132]	; (8028b94 <arm_rfft_fast_init_f32+0xa8>)
 8028b10:	4a21      	ldr	r2, [pc, #132]	; (8028b98 <arm_rfft_fast_init_f32+0xac>)
 8028b12:	4b22      	ldr	r3, [pc, #136]	; (8028b9c <arm_rfft_fast_init_f32+0xb0>)
 8028b14:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8028b18:	8184      	strh	r4, [r0, #12]
 8028b1a:	6081      	str	r1, [r0, #8]
 8028b1c:	6042      	str	r2, [r0, #4]
 8028b1e:	6143      	str	r3, [r0, #20]
 8028b20:	2000      	movs	r0, #0
 8028b22:	b240      	sxtb	r0, r0
 8028b24:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028b28:	4770      	bx	lr
 8028b2a:	2b20      	cmp	r3, #32
 8028b2c:	d01c      	beq.n	8028b68 <arm_rfft_fast_init_f32+0x7c>
 8028b2e:	2b40      	cmp	r3, #64	; 0x40
 8028b30:	d006      	beq.n	8028b40 <arm_rfft_fast_init_f32+0x54>
 8028b32:	2b10      	cmp	r3, #16
 8028b34:	d01d      	beq.n	8028b72 <arm_rfft_fast_init_f32+0x86>
 8028b36:	20ff      	movs	r0, #255	; 0xff
 8028b38:	b240      	sxtb	r0, r0
 8028b3a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028b3e:	4770      	bx	lr
 8028b40:	2438      	movs	r4, #56	; 0x38
 8028b42:	4917      	ldr	r1, [pc, #92]	; (8028ba0 <arm_rfft_fast_init_f32+0xb4>)
 8028b44:	4a17      	ldr	r2, [pc, #92]	; (8028ba4 <arm_rfft_fast_init_f32+0xb8>)
 8028b46:	4b18      	ldr	r3, [pc, #96]	; (8028ba8 <arm_rfft_fast_init_f32+0xbc>)
 8028b48:	e7e6      	b.n	8028b18 <arm_rfft_fast_init_f32+0x2c>
 8028b4a:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8028b4e:	4917      	ldr	r1, [pc, #92]	; (8028bac <arm_rfft_fast_init_f32+0xc0>)
 8028b50:	4a17      	ldr	r2, [pc, #92]	; (8028bb0 <arm_rfft_fast_init_f32+0xc4>)
 8028b52:	4b18      	ldr	r3, [pc, #96]	; (8028bb4 <arm_rfft_fast_init_f32+0xc8>)
 8028b54:	e7e0      	b.n	8028b18 <arm_rfft_fast_init_f32+0x2c>
 8028b56:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8028b5a:	d1ec      	bne.n	8028b36 <arm_rfft_fast_init_f32+0x4a>
 8028b5c:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8028b60:	4915      	ldr	r1, [pc, #84]	; (8028bb8 <arm_rfft_fast_init_f32+0xcc>)
 8028b62:	4a16      	ldr	r2, [pc, #88]	; (8028bbc <arm_rfft_fast_init_f32+0xd0>)
 8028b64:	4b16      	ldr	r3, [pc, #88]	; (8028bc0 <arm_rfft_fast_init_f32+0xd4>)
 8028b66:	e7d7      	b.n	8028b18 <arm_rfft_fast_init_f32+0x2c>
 8028b68:	2430      	movs	r4, #48	; 0x30
 8028b6a:	4916      	ldr	r1, [pc, #88]	; (8028bc4 <arm_rfft_fast_init_f32+0xd8>)
 8028b6c:	4a16      	ldr	r2, [pc, #88]	; (8028bc8 <arm_rfft_fast_init_f32+0xdc>)
 8028b6e:	4b17      	ldr	r3, [pc, #92]	; (8028bcc <arm_rfft_fast_init_f32+0xe0>)
 8028b70:	e7d2      	b.n	8028b18 <arm_rfft_fast_init_f32+0x2c>
 8028b72:	2414      	movs	r4, #20
 8028b74:	4916      	ldr	r1, [pc, #88]	; (8028bd0 <arm_rfft_fast_init_f32+0xe4>)
 8028b76:	4a17      	ldr	r2, [pc, #92]	; (8028bd4 <arm_rfft_fast_init_f32+0xe8>)
 8028b78:	4b17      	ldr	r3, [pc, #92]	; (8028bd8 <arm_rfft_fast_init_f32+0xec>)
 8028b7a:	e7cd      	b.n	8028b18 <arm_rfft_fast_init_f32+0x2c>
 8028b7c:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8028b80:	4916      	ldr	r1, [pc, #88]	; (8028bdc <arm_rfft_fast_init_f32+0xf0>)
 8028b82:	4a17      	ldr	r2, [pc, #92]	; (8028be0 <arm_rfft_fast_init_f32+0xf4>)
 8028b84:	4b17      	ldr	r3, [pc, #92]	; (8028be4 <arm_rfft_fast_init_f32+0xf8>)
 8028b86:	e7c7      	b.n	8028b18 <arm_rfft_fast_init_f32+0x2c>
 8028b88:	24d0      	movs	r4, #208	; 0xd0
 8028b8a:	4917      	ldr	r1, [pc, #92]	; (8028be8 <arm_rfft_fast_init_f32+0xfc>)
 8028b8c:	4a17      	ldr	r2, [pc, #92]	; (8028bec <arm_rfft_fast_init_f32+0x100>)
 8028b8e:	4b18      	ldr	r3, [pc, #96]	; (8028bf0 <arm_rfft_fast_init_f32+0x104>)
 8028b90:	e7c2      	b.n	8028b18 <arm_rfft_fast_init_f32+0x2c>
 8028b92:	bf00      	nop
 8028b94:	0803e650 	.word	0x0803e650
 8028b98:	0802f848 	.word	0x0802f848
 8028b9c:	080359b8 	.word	0x080359b8
 8028ba0:	08033948 	.word	0x08033948
 8028ba4:	08040410 	.word	0x08040410
 8028ba8:	08042900 	.word	0x08042900
 8028bac:	0803c338 	.word	0x0803c338
 8028bb0:	0803a238 	.word	0x0803a238
 8028bb4:	080339b8 	.word	0x080339b8
 8028bb8:	08042590 	.word	0x08042590
 8028bbc:	080399b8 	.word	0x080399b8
 8028bc0:	08040610 	.word	0x08040610
 8028bc4:	0803d1f0 	.word	0x0803d1f0
 8028bc8:	0803c238 	.word	0x0803c238
 8028bcc:	08033848 	.word	0x08033848
 8028bd0:	0803d148 	.word	0x0803d148
 8028bd4:	0803a1b8 	.word	0x0803a1b8
 8028bd8:	0803d170 	.word	0x0803d170
 8028bdc:	08040e10 	.word	0x08040e10
 8028be0:	0803d650 	.word	0x0803d650
 8028be4:	08041190 	.word	0x08041190
 8028be8:	08042b00 	.word	0x08042b00
 8028bec:	0803d250 	.word	0x0803d250
 8028bf0:	08042190 	.word	0x08042190

08028bf4 <arm_rfft_fast_f32>:
 8028bf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028bf8:	8a06      	ldrh	r6, [r0, #16]
 8028bfa:	0876      	lsrs	r6, r6, #1
 8028bfc:	4607      	mov	r7, r0
 8028bfe:	4615      	mov	r5, r2
 8028c00:	8006      	strh	r6, [r0, #0]
 8028c02:	460c      	mov	r4, r1
 8028c04:	2b00      	cmp	r3, #0
 8028c06:	d15c      	bne.n	8028cc2 <arm_rfft_fast_f32+0xce>
 8028c08:	461a      	mov	r2, r3
 8028c0a:	2301      	movs	r3, #1
 8028c0c:	f000 fbe6 	bl	80293dc <arm_cfft_f32>
 8028c10:	edd4 7a00 	vldr	s15, [r4]
 8028c14:	ed94 7a01 	vldr	s14, [r4, #4]
 8028c18:	883e      	ldrh	r6, [r7, #0]
 8028c1a:	6978      	ldr	r0, [r7, #20]
 8028c1c:	ee37 7a07 	vadd.f32	s14, s14, s14
 8028c20:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8028c24:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028c28:	ee77 6a87 	vadd.f32	s13, s15, s14
 8028c2c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028c30:	3e01      	subs	r6, #1
 8028c32:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8028c36:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028c3a:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8028c3e:	ed85 7a00 	vstr	s14, [r5]
 8028c42:	edc5 7a01 	vstr	s15, [r5, #4]
 8028c46:	3010      	adds	r0, #16
 8028c48:	f105 0210 	add.w	r2, r5, #16
 8028c4c:	3b08      	subs	r3, #8
 8028c4e:	f104 0110 	add.w	r1, r4, #16
 8028c52:	ed51 4a02 	vldr	s9, [r1, #-8]
 8028c56:	ed93 5a02 	vldr	s10, [r3, #8]
 8028c5a:	ed11 7a01 	vldr	s14, [r1, #-4]
 8028c5e:	ed10 6a02 	vldr	s12, [r0, #-8]
 8028c62:	edd3 5a03 	vldr	s11, [r3, #12]
 8028c66:	ed50 6a01 	vldr	s13, [r0, #-4]
 8028c6a:	ee75 7a64 	vsub.f32	s15, s10, s9
 8028c6e:	ee35 4a87 	vadd.f32	s8, s11, s14
 8028c72:	ee35 5a24 	vadd.f32	s10, s10, s9
 8028c76:	ee77 5a65 	vsub.f32	s11, s14, s11
 8028c7a:	ee66 4a27 	vmul.f32	s9, s12, s15
 8028c7e:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8028c82:	ee34 5a85 	vadd.f32	s10, s9, s10
 8028c86:	ee26 6a04 	vmul.f32	s12, s12, s8
 8028c8a:	ee66 6a84 	vmul.f32	s13, s13, s8
 8028c8e:	ee77 7a25 	vadd.f32	s15, s14, s11
 8028c92:	ee76 6a85 	vadd.f32	s13, s13, s10
 8028c96:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028c9a:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8028c9e:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028ca2:	3e01      	subs	r6, #1
 8028ca4:	ed42 6a02 	vstr	s13, [r2, #-8]
 8028ca8:	ed42 7a01 	vstr	s15, [r2, #-4]
 8028cac:	f1a3 0308 	sub.w	r3, r3, #8
 8028cb0:	f101 0108 	add.w	r1, r1, #8
 8028cb4:	f100 0008 	add.w	r0, r0, #8
 8028cb8:	f102 0208 	add.w	r2, r2, #8
 8028cbc:	d1c9      	bne.n	8028c52 <arm_rfft_fast_f32+0x5e>
 8028cbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028cc2:	edd1 7a00 	vldr	s15, [r1]
 8028cc6:	edd1 6a01 	vldr	s13, [r1, #4]
 8028cca:	6941      	ldr	r1, [r0, #20]
 8028ccc:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8028cd0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8028cd4:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8028cd8:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028cdc:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028ce0:	3e01      	subs	r6, #1
 8028ce2:	ed82 7a00 	vstr	s14, [r2]
 8028ce6:	edc2 7a01 	vstr	s15, [r2, #4]
 8028cea:	00f0      	lsls	r0, r6, #3
 8028cec:	b3ee      	cbz	r6, 8028d6a <arm_rfft_fast_f32+0x176>
 8028cee:	3808      	subs	r0, #8
 8028cf0:	f101 0e10 	add.w	lr, r1, #16
 8028cf4:	4420      	add	r0, r4
 8028cf6:	f104 0110 	add.w	r1, r4, #16
 8028cfa:	f102 0c10 	add.w	ip, r2, #16
 8028cfe:	ed90 7a02 	vldr	s14, [r0, #8]
 8028d02:	ed51 6a02 	vldr	s13, [r1, #-8]
 8028d06:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8028d0a:	ed90 4a03 	vldr	s8, [r0, #12]
 8028d0e:	ed11 5a01 	vldr	s10, [r1, #-4]
 8028d12:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8028d16:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8028d1a:	ee74 4a05 	vadd.f32	s9, s8, s10
 8028d1e:	ee26 3a27 	vmul.f32	s6, s12, s15
 8028d22:	ee77 6a26 	vadd.f32	s13, s14, s13
 8028d26:	ee35 5a44 	vsub.f32	s10, s10, s8
 8028d2a:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8028d2e:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028d32:	ee77 7a05 	vadd.f32	s15, s14, s10
 8028d36:	ee26 6a24 	vmul.f32	s12, s12, s9
 8028d3a:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8028d3e:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8028d42:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8028d46:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028d4a:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028d4e:	3e01      	subs	r6, #1
 8028d50:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8028d54:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8028d58:	f1a0 0008 	sub.w	r0, r0, #8
 8028d5c:	f101 0108 	add.w	r1, r1, #8
 8028d60:	f10e 0e08 	add.w	lr, lr, #8
 8028d64:	f10c 0c08 	add.w	ip, ip, #8
 8028d68:	d1c9      	bne.n	8028cfe <arm_rfft_fast_f32+0x10a>
 8028d6a:	4638      	mov	r0, r7
 8028d6c:	4629      	mov	r1, r5
 8028d6e:	461a      	mov	r2, r3
 8028d70:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028d74:	2301      	movs	r3, #1
 8028d76:	f000 bb31 	b.w	80293dc <arm_cfft_f32>
 8028d7a:	bf00      	nop

08028d7c <arm_cfft_radix8by2_f32>:
 8028d7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028d80:	ed2d 8b08 	vpush	{d8-d11}
 8028d84:	f8b0 e000 	ldrh.w	lr, [r0]
 8028d88:	6842      	ldr	r2, [r0, #4]
 8028d8a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8028d8e:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8028d92:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8028d96:	4607      	mov	r7, r0
 8028d98:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8028d9c:	f000 80af 	beq.w	8028efe <arm_cfft_radix8by2_f32+0x182>
 8028da0:	3310      	adds	r3, #16
 8028da2:	18ce      	adds	r6, r1, r3
 8028da4:	3210      	adds	r2, #16
 8028da6:	4443      	add	r3, r8
 8028da8:	f101 0510 	add.w	r5, r1, #16
 8028dac:	f108 0410 	add.w	r4, r8, #16
 8028db0:	ed54 1a04 	vldr	s3, [r4, #-16]
 8028db4:	ed13 4a04 	vldr	s8, [r3, #-16]
 8028db8:	ed53 3a03 	vldr	s7, [r3, #-12]
 8028dbc:	ed53 5a02 	vldr	s11, [r3, #-8]
 8028dc0:	ed13 5a01 	vldr	s10, [r3, #-4]
 8028dc4:	ed54 6a03 	vldr	s13, [r4, #-12]
 8028dc8:	ed14 0a02 	vldr	s0, [r4, #-8]
 8028dcc:	ed16 2a04 	vldr	s4, [r6, #-16]
 8028dd0:	ed56 2a03 	vldr	s5, [r6, #-12]
 8028dd4:	ed15 6a03 	vldr	s12, [r5, #-12]
 8028dd8:	ed15 7a01 	vldr	s14, [r5, #-4]
 8028ddc:	ed15 3a04 	vldr	s6, [r5, #-16]
 8028de0:	ed54 7a01 	vldr	s15, [r4, #-4]
 8028de4:	ed56 0a02 	vldr	s1, [r6, #-8]
 8028de8:	ed16 1a01 	vldr	s2, [r6, #-4]
 8028dec:	ed55 4a02 	vldr	s9, [r5, #-8]
 8028df0:	ee73 ba21 	vadd.f32	s23, s6, s3
 8028df4:	ee36 ba26 	vadd.f32	s22, s12, s13
 8028df8:	ee37 aa27 	vadd.f32	s20, s14, s15
 8028dfc:	ee72 9a04 	vadd.f32	s19, s4, s8
 8028e00:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8028e04:	ee31 8a05 	vadd.f32	s16, s2, s10
 8028e08:	ee74 aa80 	vadd.f32	s21, s9, s0
 8028e0c:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8028e10:	ed45 ba04 	vstr	s23, [r5, #-16]
 8028e14:	ed05 ba03 	vstr	s22, [r5, #-12]
 8028e18:	ed45 aa02 	vstr	s21, [r5, #-8]
 8028e1c:	ed05 aa01 	vstr	s20, [r5, #-4]
 8028e20:	ed06 8a01 	vstr	s16, [r6, #-4]
 8028e24:	ed46 9a04 	vstr	s19, [r6, #-16]
 8028e28:	ed06 9a03 	vstr	s18, [r6, #-12]
 8028e2c:	ed46 8a02 	vstr	s17, [r6, #-8]
 8028e30:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028e34:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8028e38:	ed12 6a03 	vldr	s12, [r2, #-12]
 8028e3c:	ed52 2a04 	vldr	s5, [r2, #-16]
 8028e40:	ee33 3a61 	vsub.f32	s6, s6, s3
 8028e44:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028e48:	ee26 8a86 	vmul.f32	s16, s13, s12
 8028e4c:	ee24 2a06 	vmul.f32	s4, s8, s12
 8028e50:	ee63 1a22 	vmul.f32	s3, s6, s5
 8028e54:	ee24 4a22 	vmul.f32	s8, s8, s5
 8028e58:	ee23 3a06 	vmul.f32	s6, s6, s12
 8028e5c:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8028e60:	ee23 6a86 	vmul.f32	s12, s7, s12
 8028e64:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8028e68:	ee36 6a04 	vadd.f32	s12, s12, s8
 8028e6c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028e70:	ee72 3a63 	vsub.f32	s7, s4, s7
 8028e74:	ee71 2a88 	vadd.f32	s5, s3, s16
 8028e78:	ed44 6a03 	vstr	s13, [r4, #-12]
 8028e7c:	ed44 2a04 	vstr	s5, [r4, #-16]
 8028e80:	ed43 3a04 	vstr	s7, [r3, #-16]
 8028e84:	ed03 6a03 	vstr	s12, [r3, #-12]
 8028e88:	ee77 7a67 	vsub.f32	s15, s14, s15
 8028e8c:	ee75 6ae0 	vsub.f32	s13, s11, s1
 8028e90:	ed12 7a01 	vldr	s14, [r2, #-4]
 8028e94:	ed52 5a02 	vldr	s11, [r2, #-8]
 8028e98:	ee35 6a41 	vsub.f32	s12, s10, s2
 8028e9c:	ee74 4ac0 	vsub.f32	s9, s9, s0
 8028ea0:	ee67 3a87 	vmul.f32	s7, s15, s14
 8028ea4:	ee26 5a87 	vmul.f32	s10, s13, s14
 8028ea8:	ee24 4aa5 	vmul.f32	s8, s9, s11
 8028eac:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8028eb0:	ee64 4a87 	vmul.f32	s9, s9, s14
 8028eb4:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8028eb8:	ee26 7a07 	vmul.f32	s14, s12, s14
 8028ebc:	ee26 6a25 	vmul.f32	s12, s12, s11
 8028ec0:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8028ec4:	ee74 5a23 	vadd.f32	s11, s8, s7
 8028ec8:	ee35 6a46 	vsub.f32	s12, s10, s12
 8028ecc:	ee37 7a26 	vadd.f32	s14, s14, s13
 8028ed0:	f1be 0e01 	subs.w	lr, lr, #1
 8028ed4:	ed44 5a02 	vstr	s11, [r4, #-8]
 8028ed8:	f105 0510 	add.w	r5, r5, #16
 8028edc:	ed44 7a01 	vstr	s15, [r4, #-4]
 8028ee0:	f106 0610 	add.w	r6, r6, #16
 8028ee4:	ed03 6a02 	vstr	s12, [r3, #-8]
 8028ee8:	ed03 7a01 	vstr	s14, [r3, #-4]
 8028eec:	f102 0210 	add.w	r2, r2, #16
 8028ef0:	f104 0410 	add.w	r4, r4, #16
 8028ef4:	f103 0310 	add.w	r3, r3, #16
 8028ef8:	f47f af5a 	bne.w	8028db0 <arm_cfft_radix8by2_f32+0x34>
 8028efc:	687a      	ldr	r2, [r7, #4]
 8028efe:	fa1f f48c 	uxth.w	r4, ip
 8028f02:	4608      	mov	r0, r1
 8028f04:	2302      	movs	r3, #2
 8028f06:	4621      	mov	r1, r4
 8028f08:	f000 fbca 	bl	80296a0 <arm_radix8_butterfly_f32>
 8028f0c:	ecbd 8b08 	vpop	{d8-d11}
 8028f10:	4640      	mov	r0, r8
 8028f12:	4621      	mov	r1, r4
 8028f14:	687a      	ldr	r2, [r7, #4]
 8028f16:	2302      	movs	r3, #2
 8028f18:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028f1c:	f000 bbc0 	b.w	80296a0 <arm_radix8_butterfly_f32>

08028f20 <arm_cfft_radix8by4_f32>:
 8028f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028f24:	ed2d 8b0a 	vpush	{d8-d12}
 8028f28:	8802      	ldrh	r2, [r0, #0]
 8028f2a:	ed91 6a00 	vldr	s12, [r1]
 8028f2e:	b08f      	sub	sp, #60	; 0x3c
 8028f30:	460f      	mov	r7, r1
 8028f32:	0852      	lsrs	r2, r2, #1
 8028f34:	0093      	lsls	r3, r2, #2
 8028f36:	900c      	str	r0, [sp, #48]	; 0x30
 8028f38:	9103      	str	r1, [sp, #12]
 8028f3a:	6841      	ldr	r1, [r0, #4]
 8028f3c:	ed97 7a01 	vldr	s14, [r7, #4]
 8028f40:	4638      	mov	r0, r7
 8028f42:	4418      	add	r0, r3
 8028f44:	4606      	mov	r6, r0
 8028f46:	9009      	str	r0, [sp, #36]	; 0x24
 8028f48:	4418      	add	r0, r3
 8028f4a:	edd0 6a00 	vldr	s13, [r0]
 8028f4e:	edd6 3a00 	vldr	s7, [r6]
 8028f52:	edd6 2a01 	vldr	s5, [r6, #4]
 8028f56:	edd0 7a01 	vldr	s15, [r0, #4]
 8028f5a:	900a      	str	r0, [sp, #40]	; 0x28
 8028f5c:	ee76 5a26 	vadd.f32	s11, s12, s13
 8028f60:	4604      	mov	r4, r0
 8028f62:	4625      	mov	r5, r4
 8028f64:	441c      	add	r4, r3
 8028f66:	ed94 4a00 	vldr	s8, [r4]
 8028f6a:	ed94 5a01 	vldr	s10, [r4, #4]
 8028f6e:	9401      	str	r4, [sp, #4]
 8028f70:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8028f74:	4630      	mov	r0, r6
 8028f76:	ee74 4a24 	vadd.f32	s9, s8, s9
 8028f7a:	463e      	mov	r6, r7
 8028f7c:	ee14 ea90 	vmov	lr, s9
 8028f80:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028f84:	f846 eb08 	str.w	lr, [r6], #8
 8028f88:	ee37 6a27 	vadd.f32	s12, s14, s15
 8028f8c:	edd0 4a01 	vldr	s9, [r0, #4]
 8028f90:	9604      	str	r6, [sp, #16]
 8028f92:	ee77 7a67 	vsub.f32	s15, s14, s15
 8028f96:	9e01      	ldr	r6, [sp, #4]
 8028f98:	ee32 3aa6 	vadd.f32	s6, s5, s13
 8028f9c:	ed96 2a01 	vldr	s4, [r6, #4]
 8028fa0:	ee36 7a24 	vadd.f32	s14, s12, s9
 8028fa4:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8028fa8:	ee77 4ae3 	vsub.f32	s9, s15, s7
 8028fac:	ee36 6a62 	vsub.f32	s12, s12, s5
 8028fb0:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8028fb4:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8028fb8:	ee73 3a45 	vsub.f32	s7, s6, s10
 8028fbc:	4604      	mov	r4, r0
 8028fbe:	ee36 6a45 	vsub.f32	s12, s12, s10
 8028fc2:	ee75 6a26 	vadd.f32	s13, s10, s13
 8028fc6:	46a3      	mov	fp, r4
 8028fc8:	ee37 7a02 	vadd.f32	s14, s14, s4
 8028fcc:	ee34 5a84 	vadd.f32	s10, s9, s8
 8028fd0:	ee13 8a90 	vmov	r8, s7
 8028fd4:	46a4      	mov	ip, r4
 8028fd6:	ee75 5ac4 	vsub.f32	s11, s11, s8
 8028fda:	ed87 7a01 	vstr	s14, [r7, #4]
 8028fde:	f84b 8b08 	str.w	r8, [fp], #8
 8028fe2:	f1ac 0704 	sub.w	r7, ip, #4
 8028fe6:	ed8c 5a01 	vstr	s10, [ip, #4]
 8028fea:	f101 0c08 	add.w	ip, r1, #8
 8028fee:	462c      	mov	r4, r5
 8028ff0:	f8cd c014 	str.w	ip, [sp, #20]
 8028ff4:	ee15 ca90 	vmov	ip, s11
 8028ff8:	f844 cb08 	str.w	ip, [r4], #8
 8028ffc:	9407      	str	r4, [sp, #28]
 8028ffe:	f101 0410 	add.w	r4, r1, #16
 8029002:	ed85 6a01 	vstr	s12, [r5, #4]
 8029006:	0852      	lsrs	r2, r2, #1
 8029008:	9402      	str	r4, [sp, #8]
 802900a:	462c      	mov	r4, r5
 802900c:	f101 0518 	add.w	r5, r1, #24
 8029010:	920b      	str	r2, [sp, #44]	; 0x2c
 8029012:	46b2      	mov	sl, r6
 8029014:	9506      	str	r5, [sp, #24]
 8029016:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802901a:	3a02      	subs	r2, #2
 802901c:	ee16 5a90 	vmov	r5, s13
 8029020:	46b6      	mov	lr, r6
 8029022:	4630      	mov	r0, r6
 8029024:	0852      	lsrs	r2, r2, #1
 8029026:	f84a 5b08 	str.w	r5, [sl], #8
 802902a:	f1a0 0604 	sub.w	r6, r0, #4
 802902e:	edce 7a01 	vstr	s15, [lr, #4]
 8029032:	9208      	str	r2, [sp, #32]
 8029034:	f000 8130 	beq.w	8029298 <arm_cfft_radix8by4_f32+0x378>
 8029038:	4691      	mov	r9, r2
 802903a:	9a03      	ldr	r2, [sp, #12]
 802903c:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8029040:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8029044:	3b08      	subs	r3, #8
 8029046:	f102 0510 	add.w	r5, r2, #16
 802904a:	f101 0c20 	add.w	ip, r1, #32
 802904e:	f1a4 020c 	sub.w	r2, r4, #12
 8029052:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 8029056:	4433      	add	r3, r6
 8029058:	3410      	adds	r4, #16
 802905a:	4650      	mov	r0, sl
 802905c:	4659      	mov	r1, fp
 802905e:	ed55 3a02 	vldr	s7, [r5, #-8]
 8029062:	ed14 5a02 	vldr	s10, [r4, #-8]
 8029066:	ed91 7a00 	vldr	s14, [r1]
 802906a:	edd0 7a00 	vldr	s15, [r0]
 802906e:	ed15 4a01 	vldr	s8, [r5, #-4]
 8029072:	ed54 5a01 	vldr	s11, [r4, #-4]
 8029076:	edd0 6a01 	vldr	s13, [r0, #4]
 802907a:	ed91 6a01 	vldr	s12, [r1, #4]
 802907e:	ee33 8a85 	vadd.f32	s16, s7, s10
 8029082:	ee34 0a25 	vadd.f32	s0, s8, s11
 8029086:	ee78 4a07 	vadd.f32	s9, s16, s14
 802908a:	ee74 5a65 	vsub.f32	s11, s8, s11
 802908e:	ee77 4aa4 	vadd.f32	s9, s15, s9
 8029092:	ee33 5ac5 	vsub.f32	s10, s7, s10
 8029096:	ed45 4a02 	vstr	s9, [r5, #-8]
 802909a:	edd1 4a01 	vldr	s9, [r1, #4]
 802909e:	ed90 4a01 	vldr	s8, [r0, #4]
 80290a2:	ee70 4a24 	vadd.f32	s9, s0, s9
 80290a6:	ee76 aa05 	vadd.f32	s21, s12, s10
 80290aa:	ee74 4a84 	vadd.f32	s9, s9, s8
 80290ae:	ee35 aac7 	vsub.f32	s20, s11, s14
 80290b2:	ed45 4a01 	vstr	s9, [r5, #-4]
 80290b6:	edd6 1a00 	vldr	s3, [r6]
 80290ba:	edd7 0a00 	vldr	s1, [r7]
 80290be:	ed92 4a02 	vldr	s8, [r2, #8]
 80290c2:	edd3 3a02 	vldr	s7, [r3, #8]
 80290c6:	ed93 2a01 	vldr	s4, [r3, #4]
 80290ca:	ed16 1a01 	vldr	s2, [r6, #-4]
 80290ce:	edd2 2a01 	vldr	s5, [r2, #4]
 80290d2:	ed57 9a01 	vldr	s19, [r7, #-4]
 80290d6:	ee70 4aa1 	vadd.f32	s9, s1, s3
 80290da:	ee39 3a81 	vadd.f32	s6, s19, s2
 80290de:	ee74 8a84 	vadd.f32	s17, s9, s8
 80290e2:	ee70 1ae1 	vsub.f32	s3, s1, s3
 80290e6:	ee73 8aa8 	vadd.f32	s17, s7, s17
 80290ea:	ee7a aae6 	vsub.f32	s21, s21, s13
 80290ee:	ee18 aa90 	vmov	sl, s17
 80290f2:	f847 a908 	str.w	sl, [r7], #-8
 80290f6:	edd2 8a01 	vldr	s17, [r2, #4]
 80290fa:	ed93 9a01 	vldr	s18, [r3, #4]
 80290fe:	ee73 8a28 	vadd.f32	s17, s6, s17
 8029102:	ee3a aa27 	vadd.f32	s20, s20, s15
 8029106:	ee78 8a89 	vadd.f32	s17, s17, s18
 802910a:	ee74 0a63 	vsub.f32	s1, s8, s7
 802910e:	edc7 8a01 	vstr	s17, [r7, #4]
 8029112:	ed18 ba02 	vldr	s22, [r8, #-8]
 8029116:	ed58 8a01 	vldr	s17, [r8, #-4]
 802911a:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802911e:	ee6a ba28 	vmul.f32	s23, s20, s17
 8029122:	ee2a ca8b 	vmul.f32	s24, s21, s22
 8029126:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802912a:	ee30 9a81 	vadd.f32	s18, s1, s2
 802912e:	ee79 9a82 	vadd.f32	s19, s19, s4
 8029132:	ee3c ca2b 	vadd.f32	s24, s24, s23
 8029136:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802913a:	ee69 baa8 	vmul.f32	s23, s19, s17
 802913e:	ee2a aa0b 	vmul.f32	s20, s20, s22
 8029142:	ee69 9a8b 	vmul.f32	s19, s19, s22
 8029146:	ee69 8a28 	vmul.f32	s17, s18, s17
 802914a:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802914e:	ee1c aa10 	vmov	sl, s24
 8029152:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8029156:	f841 ab08 	str.w	sl, [r1], #8
 802915a:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802915e:	ee3b bacb 	vsub.f32	s22, s23, s22
 8029162:	ee34 4ac4 	vsub.f32	s8, s9, s8
 8029166:	ee33 3a62 	vsub.f32	s6, s6, s5
 802916a:	ed01 aa01 	vstr	s20, [r1, #-4]
 802916e:	edc2 8a01 	vstr	s17, [r2, #4]
 8029172:	ed82 ba02 	vstr	s22, [r2, #8]
 8029176:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802917a:	ee74 3a63 	vsub.f32	s7, s8, s7
 802917e:	ee38 8a47 	vsub.f32	s16, s16, s14
 8029182:	ed1c 4a03 	vldr	s8, [ip, #-12]
 8029186:	ee30 0a46 	vsub.f32	s0, s0, s12
 802918a:	ee33 3a42 	vsub.f32	s6, s6, s4
 802918e:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029192:	ee30 0a66 	vsub.f32	s0, s0, s13
 8029196:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802919a:	ee63 8a04 	vmul.f32	s17, s6, s8
 802919e:	ee28 aa24 	vmul.f32	s20, s16, s9
 80291a2:	ee60 9a04 	vmul.f32	s19, s0, s8
 80291a6:	ee28 8a04 	vmul.f32	s16, s16, s8
 80291aa:	ee20 0a24 	vmul.f32	s0, s0, s9
 80291ae:	ee63 3a84 	vmul.f32	s7, s7, s8
 80291b2:	ee39 4a68 	vsub.f32	s8, s18, s17
 80291b6:	ee7a 9a29 	vadd.f32	s19, s20, s19
 80291ba:	ee14 aa10 	vmov	sl, s8
 80291be:	ee30 0a48 	vsub.f32	s0, s0, s16
 80291c2:	ee63 4a24 	vmul.f32	s9, s6, s9
 80291c6:	ed44 9a02 	vstr	s19, [r4, #-8]
 80291ca:	ee73 3ae4 	vsub.f32	s7, s7, s9
 80291ce:	ed04 0a01 	vstr	s0, [r4, #-4]
 80291d2:	f846 a908 	str.w	sl, [r6], #-8
 80291d6:	ee35 6a46 	vsub.f32	s12, s10, s12
 80291da:	ee35 7a87 	vadd.f32	s14, s11, s14
 80291de:	edc6 3a01 	vstr	s7, [r6, #4]
 80291e2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80291e6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80291ea:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 80291ee:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 80291f2:	ee67 5a86 	vmul.f32	s11, s15, s12
 80291f6:	ee26 5a87 	vmul.f32	s10, s13, s14
 80291fa:	ee72 2a62 	vsub.f32	s5, s4, s5
 80291fe:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029202:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8029206:	ee75 5a25 	vadd.f32	s11, s10, s11
 802920a:	ee62 0a86 	vmul.f32	s1, s5, s12
 802920e:	ee66 6a86 	vmul.f32	s13, s13, s12
 8029212:	ee67 7a87 	vmul.f32	s15, s15, s14
 8029216:	ee21 6a06 	vmul.f32	s12, s2, s12
 802921a:	ee62 2a87 	vmul.f32	s5, s5, s14
 802921e:	ee21 1a07 	vmul.f32	s2, s2, s14
 8029222:	ee15 aa90 	vmov	sl, s11
 8029226:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802922a:	f840 ab08 	str.w	sl, [r0], #8
 802922e:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029232:	ee76 2a22 	vadd.f32	s5, s12, s5
 8029236:	f1b9 0901 	subs.w	r9, r9, #1
 802923a:	ed40 7a01 	vstr	s15, [r0, #-4]
 802923e:	f105 0508 	add.w	r5, r5, #8
 8029242:	ed83 1a02 	vstr	s2, [r3, #8]
 8029246:	edc3 2a01 	vstr	s5, [r3, #4]
 802924a:	f108 0808 	add.w	r8, r8, #8
 802924e:	f1a2 0208 	sub.w	r2, r2, #8
 8029252:	f10c 0c10 	add.w	ip, ip, #16
 8029256:	f104 0408 	add.w	r4, r4, #8
 802925a:	f10e 0e18 	add.w	lr, lr, #24
 802925e:	f1a3 0308 	sub.w	r3, r3, #8
 8029262:	f47f aefc 	bne.w	802905e <arm_cfft_radix8by4_f32+0x13e>
 8029266:	9908      	ldr	r1, [sp, #32]
 8029268:	9802      	ldr	r0, [sp, #8]
 802926a:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802926e:	00cb      	lsls	r3, r1, #3
 8029270:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8029274:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8029278:	9102      	str	r1, [sp, #8]
 802927a:	9904      	ldr	r1, [sp, #16]
 802927c:	4419      	add	r1, r3
 802927e:	9104      	str	r1, [sp, #16]
 8029280:	9905      	ldr	r1, [sp, #20]
 8029282:	4419      	add	r1, r3
 8029284:	9105      	str	r1, [sp, #20]
 8029286:	9907      	ldr	r1, [sp, #28]
 8029288:	449b      	add	fp, r3
 802928a:	4419      	add	r1, r3
 802928c:	449a      	add	sl, r3
 802928e:	9b06      	ldr	r3, [sp, #24]
 8029290:	9107      	str	r1, [sp, #28]
 8029292:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8029296:	9306      	str	r3, [sp, #24]
 8029298:	9a04      	ldr	r2, [sp, #16]
 802929a:	9807      	ldr	r0, [sp, #28]
 802929c:	edd2 3a00 	vldr	s7, [r2]
 80292a0:	ed90 4a00 	vldr	s8, [r0]
 80292a4:	eddb 7a00 	vldr	s15, [fp]
 80292a8:	ed9a 3a00 	vldr	s6, [sl]
 80292ac:	edd2 4a01 	vldr	s9, [r2, #4]
 80292b0:	ed90 7a01 	vldr	s14, [r0, #4]
 80292b4:	ed9b 2a01 	vldr	s4, [fp, #4]
 80292b8:	edda 5a01 	vldr	s11, [sl, #4]
 80292bc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 80292c0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80292c2:	ee73 6a84 	vadd.f32	s13, s7, s8
 80292c6:	ee34 6a87 	vadd.f32	s12, s9, s14
 80292ca:	ee36 5aa7 	vadd.f32	s10, s13, s15
 80292ce:	ee34 7ac7 	vsub.f32	s14, s9, s14
 80292d2:	ee33 5a05 	vadd.f32	s10, s6, s10
 80292d6:	ee33 4ac4 	vsub.f32	s8, s7, s8
 80292da:	ed82 5a00 	vstr	s10, [r2]
 80292de:	ed9b 5a01 	vldr	s10, [fp, #4]
 80292e2:	edda 4a01 	vldr	s9, [sl, #4]
 80292e6:	ee36 5a05 	vadd.f32	s10, s12, s10
 80292ea:	ee72 3a04 	vadd.f32	s7, s4, s8
 80292ee:	ee35 5a24 	vadd.f32	s10, s10, s9
 80292f2:	ee77 4a67 	vsub.f32	s9, s14, s15
 80292f6:	ed82 5a01 	vstr	s10, [r2, #4]
 80292fa:	9a05      	ldr	r2, [sp, #20]
 80292fc:	ee34 5a83 	vadd.f32	s10, s9, s6
 8029300:	edd2 1a00 	vldr	s3, [r2]
 8029304:	edd2 2a01 	vldr	s5, [r2, #4]
 8029308:	9a02      	ldr	r2, [sp, #8]
 802930a:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802930e:	ee36 6a42 	vsub.f32	s12, s12, s4
 8029312:	ee63 4aa1 	vmul.f32	s9, s7, s3
 8029316:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802931a:	ee65 2a22 	vmul.f32	s5, s10, s5
 802931e:	ee25 5a21 	vmul.f32	s10, s10, s3
 8029322:	ee74 2aa2 	vadd.f32	s5, s9, s5
 8029326:	ee35 5a63 	vsub.f32	s10, s10, s7
 802932a:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802932e:	edcb 2a00 	vstr	s5, [fp]
 8029332:	ed8b 5a01 	vstr	s10, [fp, #4]
 8029336:	edd2 3a01 	vldr	s7, [r2, #4]
 802933a:	ed92 5a00 	vldr	s10, [r2]
 802933e:	9a06      	ldr	r2, [sp, #24]
 8029340:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029344:	ee36 6a65 	vsub.f32	s12, s12, s11
 8029348:	ee66 4a85 	vmul.f32	s9, s13, s10
 802934c:	ee26 5a05 	vmul.f32	s10, s12, s10
 8029350:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8029354:	ee26 6a23 	vmul.f32	s12, s12, s7
 8029358:	ee75 6a66 	vsub.f32	s13, s10, s13
 802935c:	ee34 6a86 	vadd.f32	s12, s9, s12
 8029360:	ee34 4a42 	vsub.f32	s8, s8, s4
 8029364:	ee37 7a27 	vadd.f32	s14, s14, s15
 8029368:	edc0 6a01 	vstr	s13, [r0, #4]
 802936c:	ed80 6a00 	vstr	s12, [r0]
 8029370:	ed92 6a01 	vldr	s12, [r2, #4]
 8029374:	9803      	ldr	r0, [sp, #12]
 8029376:	ee77 7a43 	vsub.f32	s15, s14, s6
 802937a:	ee75 5a84 	vadd.f32	s11, s11, s8
 802937e:	ed92 7a00 	vldr	s14, [r2]
 8029382:	ee65 6a87 	vmul.f32	s13, s11, s14
 8029386:	ee27 7a87 	vmul.f32	s14, s15, s14
 802938a:	ee65 5a86 	vmul.f32	s11, s11, s12
 802938e:	ee67 7a86 	vmul.f32	s15, s15, s12
 8029392:	ee77 5a65 	vsub.f32	s11, s14, s11
 8029396:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802939a:	edca 5a01 	vstr	s11, [sl, #4]
 802939e:	edca 7a00 	vstr	s15, [sl]
 80293a2:	6872      	ldr	r2, [r6, #4]
 80293a4:	4621      	mov	r1, r4
 80293a6:	2304      	movs	r3, #4
 80293a8:	f000 f97a 	bl	80296a0 <arm_radix8_butterfly_f32>
 80293ac:	9809      	ldr	r0, [sp, #36]	; 0x24
 80293ae:	6872      	ldr	r2, [r6, #4]
 80293b0:	4621      	mov	r1, r4
 80293b2:	2304      	movs	r3, #4
 80293b4:	f000 f974 	bl	80296a0 <arm_radix8_butterfly_f32>
 80293b8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80293ba:	6872      	ldr	r2, [r6, #4]
 80293bc:	4621      	mov	r1, r4
 80293be:	2304      	movs	r3, #4
 80293c0:	f000 f96e 	bl	80296a0 <arm_radix8_butterfly_f32>
 80293c4:	9801      	ldr	r0, [sp, #4]
 80293c6:	6872      	ldr	r2, [r6, #4]
 80293c8:	4621      	mov	r1, r4
 80293ca:	2304      	movs	r3, #4
 80293cc:	b00f      	add	sp, #60	; 0x3c
 80293ce:	ecbd 8b0a 	vpop	{d8-d12}
 80293d2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80293d6:	f000 b963 	b.w	80296a0 <arm_radix8_butterfly_f32>
 80293da:	bf00      	nop

080293dc <arm_cfft_f32>:
 80293dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80293e0:	2a01      	cmp	r2, #1
 80293e2:	4606      	mov	r6, r0
 80293e4:	4617      	mov	r7, r2
 80293e6:	460c      	mov	r4, r1
 80293e8:	4698      	mov	r8, r3
 80293ea:	8805      	ldrh	r5, [r0, #0]
 80293ec:	d054      	beq.n	8029498 <arm_cfft_f32+0xbc>
 80293ee:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 80293f2:	d04c      	beq.n	802948e <arm_cfft_f32+0xb2>
 80293f4:	d916      	bls.n	8029424 <arm_cfft_f32+0x48>
 80293f6:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 80293fa:	d01a      	beq.n	8029432 <arm_cfft_f32+0x56>
 80293fc:	d95c      	bls.n	80294b8 <arm_cfft_f32+0xdc>
 80293fe:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 8029402:	d044      	beq.n	802948e <arm_cfft_f32+0xb2>
 8029404:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 8029408:	d105      	bne.n	8029416 <arm_cfft_f32+0x3a>
 802940a:	4620      	mov	r0, r4
 802940c:	4629      	mov	r1, r5
 802940e:	6872      	ldr	r2, [r6, #4]
 8029410:	2301      	movs	r3, #1
 8029412:	f000 f945 	bl	80296a0 <arm_radix8_butterfly_f32>
 8029416:	f1b8 0f00 	cmp.w	r8, #0
 802941a:	d111      	bne.n	8029440 <arm_cfft_f32+0x64>
 802941c:	2f01      	cmp	r7, #1
 802941e:	d016      	beq.n	802944e <arm_cfft_f32+0x72>
 8029420:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029424:	2d20      	cmp	r5, #32
 8029426:	d032      	beq.n	802948e <arm_cfft_f32+0xb2>
 8029428:	d94a      	bls.n	80294c0 <arm_cfft_f32+0xe4>
 802942a:	2d40      	cmp	r5, #64	; 0x40
 802942c:	d0ed      	beq.n	802940a <arm_cfft_f32+0x2e>
 802942e:	2d80      	cmp	r5, #128	; 0x80
 8029430:	d1f1      	bne.n	8029416 <arm_cfft_f32+0x3a>
 8029432:	4630      	mov	r0, r6
 8029434:	4621      	mov	r1, r4
 8029436:	f7ff fca1 	bl	8028d7c <arm_cfft_radix8by2_f32>
 802943a:	f1b8 0f00 	cmp.w	r8, #0
 802943e:	d0ed      	beq.n	802941c <arm_cfft_f32+0x40>
 8029440:	4620      	mov	r0, r4
 8029442:	89b1      	ldrh	r1, [r6, #12]
 8029444:	68b2      	ldr	r2, [r6, #8]
 8029446:	f7d6 fed3 	bl	80001f0 <arm_bitreversal_32>
 802944a:	2f01      	cmp	r7, #1
 802944c:	d1e8      	bne.n	8029420 <arm_cfft_f32+0x44>
 802944e:	ee07 5a90 	vmov	s15, r5
 8029452:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8029456:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802945a:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802945e:	2d00      	cmp	r5, #0
 8029460:	d0de      	beq.n	8029420 <arm_cfft_f32+0x44>
 8029462:	f104 0108 	add.w	r1, r4, #8
 8029466:	2300      	movs	r3, #0
 8029468:	3301      	adds	r3, #1
 802946a:	429d      	cmp	r5, r3
 802946c:	f101 0108 	add.w	r1, r1, #8
 8029470:	ed11 7a04 	vldr	s14, [r1, #-16]
 8029474:	ed51 7a03 	vldr	s15, [r1, #-12]
 8029478:	ee27 7a26 	vmul.f32	s14, s14, s13
 802947c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8029480:	ed01 7a04 	vstr	s14, [r1, #-16]
 8029484:	ed41 7a03 	vstr	s15, [r1, #-12]
 8029488:	d1ee      	bne.n	8029468 <arm_cfft_f32+0x8c>
 802948a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802948e:	4630      	mov	r0, r6
 8029490:	4621      	mov	r1, r4
 8029492:	f7ff fd45 	bl	8028f20 <arm_cfft_radix8by4_f32>
 8029496:	e7be      	b.n	8029416 <arm_cfft_f32+0x3a>
 8029498:	b1ad      	cbz	r5, 80294c6 <arm_cfft_f32+0xea>
 802949a:	f101 030c 	add.w	r3, r1, #12
 802949e:	2200      	movs	r2, #0
 80294a0:	ed53 7a02 	vldr	s15, [r3, #-8]
 80294a4:	3201      	adds	r2, #1
 80294a6:	eef1 7a67 	vneg.f32	s15, s15
 80294aa:	4295      	cmp	r5, r2
 80294ac:	ed43 7a02 	vstr	s15, [r3, #-8]
 80294b0:	f103 0308 	add.w	r3, r3, #8
 80294b4:	d1f4      	bne.n	80294a0 <arm_cfft_f32+0xc4>
 80294b6:	e79a      	b.n	80293ee <arm_cfft_f32+0x12>
 80294b8:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 80294bc:	d0a5      	beq.n	802940a <arm_cfft_f32+0x2e>
 80294be:	e7aa      	b.n	8029416 <arm_cfft_f32+0x3a>
 80294c0:	2d10      	cmp	r5, #16
 80294c2:	d0b6      	beq.n	8029432 <arm_cfft_f32+0x56>
 80294c4:	e7a7      	b.n	8029416 <arm_cfft_f32+0x3a>
 80294c6:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 80294ca:	d894      	bhi.n	80293f6 <arm_cfft_f32+0x1a>
 80294cc:	e7aa      	b.n	8029424 <arm_cfft_f32+0x48>
 80294ce:	bf00      	nop

080294d0 <arm_cmplx_mag_f32>:
 80294d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80294d4:	ea5f 0892 	movs.w	r8, r2, lsr #2
 80294d8:	b084      	sub	sp, #16
 80294da:	d07f      	beq.n	80295dc <arm_cmplx_mag_f32+0x10c>
 80294dc:	2700      	movs	r7, #0
 80294de:	f100 0420 	add.w	r4, r0, #32
 80294e2:	f101 0510 	add.w	r5, r1, #16
 80294e6:	4646      	mov	r6, r8
 80294e8:	e05a      	b.n	80295a0 <arm_cmplx_mag_f32+0xd0>
 80294ea:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80294ee:	eeb4 0a40 	vcmp.f32	s0, s0
 80294f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294f6:	f040 80a4 	bne.w	8029642 <arm_cmplx_mag_f32+0x172>
 80294fa:	ed05 0a04 	vstr	s0, [r5, #-16]
 80294fe:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 8029502:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 8029506:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802950a:	ee20 0a00 	vmul.f32	s0, s0, s0
 802950e:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029512:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8029516:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802951a:	f2c0 808f 	blt.w	802963c <arm_cmplx_mag_f32+0x16c>
 802951e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029522:	eeb4 0a40 	vcmp.f32	s0, s0
 8029526:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802952a:	f040 80af 	bne.w	802968c <arm_cmplx_mag_f32+0x1bc>
 802952e:	ed05 0a03 	vstr	s0, [r5, #-12]
 8029532:	ed54 7a04 	vldr	s15, [r4, #-16]
 8029536:	ed14 0a03 	vldr	s0, [r4, #-12]
 802953a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802953e:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029542:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029546:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802954a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802954e:	db72      	blt.n	8029636 <arm_cmplx_mag_f32+0x166>
 8029550:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029554:	eeb4 0a40 	vcmp.f32	s0, s0
 8029558:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802955c:	f040 808c 	bne.w	8029678 <arm_cmplx_mag_f32+0x1a8>
 8029560:	ed05 0a02 	vstr	s0, [r5, #-8]
 8029564:	ed54 7a02 	vldr	s15, [r4, #-8]
 8029568:	ed14 0a01 	vldr	s0, [r4, #-4]
 802956c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029570:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029574:	ee77 7a80 	vadd.f32	s15, s15, s0
 8029578:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802957c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029580:	db20      	blt.n	80295c4 <arm_cmplx_mag_f32+0xf4>
 8029582:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8029586:	eeb4 0a40 	vcmp.f32	s0, s0
 802958a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802958e:	d169      	bne.n	8029664 <arm_cmplx_mag_f32+0x194>
 8029590:	3e01      	subs	r6, #1
 8029592:	ed05 0a01 	vstr	s0, [r5, #-4]
 8029596:	f104 0420 	add.w	r4, r4, #32
 802959a:	f105 0510 	add.w	r5, r5, #16
 802959e:	d019      	beq.n	80295d4 <arm_cmplx_mag_f32+0x104>
 80295a0:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 80295a4:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 80295a8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80295ac:	ee20 0a00 	vmul.f32	s0, s0, s0
 80295b0:	ee77 7a80 	vadd.f32	s15, s15, s0
 80295b4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80295b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295bc:	da95      	bge.n	80294ea <arm_cmplx_mag_f32+0x1a>
 80295be:	f845 7c10 	str.w	r7, [r5, #-16]
 80295c2:	e79c      	b.n	80294fe <arm_cmplx_mag_f32+0x2e>
 80295c4:	3e01      	subs	r6, #1
 80295c6:	f845 7c04 	str.w	r7, [r5, #-4]
 80295ca:	f104 0420 	add.w	r4, r4, #32
 80295ce:	f105 0510 	add.w	r5, r5, #16
 80295d2:	d1e5      	bne.n	80295a0 <arm_cmplx_mag_f32+0xd0>
 80295d4:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 80295d8:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 80295dc:	f012 0503 	ands.w	r5, r2, #3
 80295e0:	d026      	beq.n	8029630 <arm_cmplx_mag_f32+0x160>
 80295e2:	2600      	movs	r6, #0
 80295e4:	f100 0408 	add.w	r4, r0, #8
 80295e8:	e00c      	b.n	8029604 <arm_cmplx_mag_f32+0x134>
 80295ea:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80295ee:	eeb4 0a40 	vcmp.f32	s0, s0
 80295f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295f6:	d12e      	bne.n	8029656 <arm_cmplx_mag_f32+0x186>
 80295f8:	3d01      	subs	r5, #1
 80295fa:	ed01 0a01 	vstr	s0, [r1, #-4]
 80295fe:	f104 0408 	add.w	r4, r4, #8
 8029602:	d015      	beq.n	8029630 <arm_cmplx_mag_f32+0x160>
 8029604:	ed54 7a02 	vldr	s15, [r4, #-8]
 8029608:	ed14 0a01 	vldr	s0, [r4, #-4]
 802960c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8029610:	ee20 0a00 	vmul.f32	s0, s0, s0
 8029614:	3104      	adds	r1, #4
 8029616:	ee77 7a80 	vadd.f32	s15, s15, s0
 802961a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802961e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029622:	dae2      	bge.n	80295ea <arm_cmplx_mag_f32+0x11a>
 8029624:	3d01      	subs	r5, #1
 8029626:	f841 6c04 	str.w	r6, [r1, #-4]
 802962a:	f104 0408 	add.w	r4, r4, #8
 802962e:	d1e9      	bne.n	8029604 <arm_cmplx_mag_f32+0x134>
 8029630:	b004      	add	sp, #16
 8029632:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029636:	f845 7c08 	str.w	r7, [r5, #-8]
 802963a:	e793      	b.n	8029564 <arm_cmplx_mag_f32+0x94>
 802963c:	f845 7c0c 	str.w	r7, [r5, #-12]
 8029640:	e777      	b.n	8029532 <arm_cmplx_mag_f32+0x62>
 8029642:	eeb0 0a67 	vmov.f32	s0, s15
 8029646:	9203      	str	r2, [sp, #12]
 8029648:	9102      	str	r1, [sp, #8]
 802964a:	9001      	str	r0, [sp, #4]
 802964c:	f000 fb38 	bl	8029cc0 <sqrtf>
 8029650:	a801      	add	r0, sp, #4
 8029652:	c807      	ldmia	r0, {r0, r1, r2}
 8029654:	e751      	b.n	80294fa <arm_cmplx_mag_f32+0x2a>
 8029656:	eeb0 0a67 	vmov.f32	s0, s15
 802965a:	9101      	str	r1, [sp, #4]
 802965c:	f000 fb30 	bl	8029cc0 <sqrtf>
 8029660:	9901      	ldr	r1, [sp, #4]
 8029662:	e7c9      	b.n	80295f8 <arm_cmplx_mag_f32+0x128>
 8029664:	eeb0 0a67 	vmov.f32	s0, s15
 8029668:	9203      	str	r2, [sp, #12]
 802966a:	9102      	str	r1, [sp, #8]
 802966c:	9001      	str	r0, [sp, #4]
 802966e:	f000 fb27 	bl	8029cc0 <sqrtf>
 8029672:	a801      	add	r0, sp, #4
 8029674:	c807      	ldmia	r0, {r0, r1, r2}
 8029676:	e78b      	b.n	8029590 <arm_cmplx_mag_f32+0xc0>
 8029678:	eeb0 0a67 	vmov.f32	s0, s15
 802967c:	9203      	str	r2, [sp, #12]
 802967e:	9102      	str	r1, [sp, #8]
 8029680:	9001      	str	r0, [sp, #4]
 8029682:	f000 fb1d 	bl	8029cc0 <sqrtf>
 8029686:	a801      	add	r0, sp, #4
 8029688:	c807      	ldmia	r0, {r0, r1, r2}
 802968a:	e769      	b.n	8029560 <arm_cmplx_mag_f32+0x90>
 802968c:	eeb0 0a67 	vmov.f32	s0, s15
 8029690:	9203      	str	r2, [sp, #12]
 8029692:	9102      	str	r1, [sp, #8]
 8029694:	9001      	str	r0, [sp, #4]
 8029696:	f000 fb13 	bl	8029cc0 <sqrtf>
 802969a:	a801      	add	r0, sp, #4
 802969c:	c807      	ldmia	r0, {r0, r1, r2}
 802969e:	e746      	b.n	802952e <arm_cmplx_mag_f32+0x5e>

080296a0 <arm_radix8_butterfly_f32>:
 80296a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80296a4:	ed2d 8b10 	vpush	{d8-d15}
 80296a8:	b09d      	sub	sp, #116	; 0x74
 80296aa:	461c      	mov	r4, r3
 80296ac:	ed9f bac8 	vldr	s22, [pc, #800]	; 80299d0 <arm_radix8_butterfly_f32+0x330>
 80296b0:	921a      	str	r2, [sp, #104]	; 0x68
 80296b2:	1d03      	adds	r3, r0, #4
 80296b4:	4682      	mov	sl, r0
 80296b6:	4689      	mov	r9, r1
 80296b8:	468b      	mov	fp, r1
 80296ba:	931b      	str	r3, [sp, #108]	; 0x6c
 80296bc:	9400      	str	r4, [sp, #0]
 80296be:	469e      	mov	lr, r3
 80296c0:	ea4f 03db 	mov.w	r3, fp, lsr #3
 80296c4:	005a      	lsls	r2, r3, #1
 80296c6:	18d6      	adds	r6, r2, r3
 80296c8:	18f5      	adds	r5, r6, r3
 80296ca:	9203      	str	r2, [sp, #12]
 80296cc:	195a      	adds	r2, r3, r5
 80296ce:	18d0      	adds	r0, r2, r3
 80296d0:	00df      	lsls	r7, r3, #3
 80296d2:	1819      	adds	r1, r3, r0
 80296d4:	463c      	mov	r4, r7
 80296d6:	9701      	str	r7, [sp, #4]
 80296d8:	4457      	add	r7, sl
 80296da:	930c      	str	r3, [sp, #48]	; 0x30
 80296dc:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 80296e0:	011b      	lsls	r3, r3, #4
 80296e2:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 80296e6:	eb07 0c04 	add.w	ip, r7, r4
 80296ea:	9c00      	ldr	r4, [sp, #0]
 80296ec:	9302      	str	r3, [sp, #8]
 80296ee:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 80296f2:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 80296f6:	3204      	adds	r2, #4
 80296f8:	3104      	adds	r1, #4
 80296fa:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 80296fe:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8029702:	f04f 0800 	mov.w	r8, #0
 8029706:	eddc 7a00 	vldr	s15, [ip]
 802970a:	edd7 6a00 	vldr	s13, [r7]
 802970e:	edd6 3a00 	vldr	s7, [r6]
 8029712:	ed5e aa01 	vldr	s21, [lr, #-4]
 8029716:	edd5 4a00 	vldr	s9, [r5]
 802971a:	ed90 2a00 	vldr	s4, [r0]
 802971e:	ed12 7a01 	vldr	s14, [r2, #-4]
 8029722:	ed51 0a01 	vldr	s1, [r1, #-4]
 8029726:	ee77 8a82 	vadd.f32	s17, s15, s4
 802972a:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802972e:	ee76 1a87 	vadd.f32	s3, s13, s14
 8029732:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 8029736:	ee31 6a84 	vadd.f32	s12, s3, s8
 802973a:	ee33 5a28 	vadd.f32	s10, s6, s17
 802973e:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8029742:	ee75 6a06 	vadd.f32	s13, s10, s12
 8029746:	ee35 5a46 	vsub.f32	s10, s10, s12
 802974a:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802974e:	ed85 5a00 	vstr	s10, [r5]
 8029752:	ed96 1a01 	vldr	s2, [r6, #4]
 8029756:	edd7 5a01 	vldr	s11, [r7, #4]
 802975a:	ed92 aa00 	vldr	s20, [r2]
 802975e:	ed91 6a00 	vldr	s12, [r1]
 8029762:	ed9e 9a00 	vldr	s18, [lr]
 8029766:	ed95 5a01 	vldr	s10, [r5, #4]
 802976a:	eddc 6a01 	vldr	s13, [ip, #4]
 802976e:	edd0 9a01 	vldr	s19, [r0, #4]
 8029772:	ee73 0ae0 	vsub.f32	s1, s7, s1
 8029776:	ee71 2a46 	vsub.f32	s5, s2, s12
 802977a:	ee75 3aca 	vsub.f32	s7, s11, s20
 802977e:	ee37 0a60 	vsub.f32	s0, s14, s1
 8029782:	ee33 8aa2 	vadd.f32	s16, s7, s5
 8029786:	ee37 7a20 	vadd.f32	s14, s14, s1
 802978a:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802978e:	ee37 2ac2 	vsub.f32	s4, s15, s4
 8029792:	ee79 3a05 	vadd.f32	s7, s18, s10
 8029796:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802979a:	ee39 5a45 	vsub.f32	s10, s18, s10
 802979e:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 80297a2:	ee36 9aa9 	vadd.f32	s18, s13, s19
 80297a6:	ee75 5a8a 	vadd.f32	s11, s11, s20
 80297aa:	ee31 6a06 	vadd.f32	s12, s2, s12
 80297ae:	ee76 6ae9 	vsub.f32	s13, s13, s19
 80297b2:	ee28 8a0b 	vmul.f32	s16, s16, s22
 80297b6:	ee62 2a8b 	vmul.f32	s5, s5, s22
 80297ba:	ee67 7a0b 	vmul.f32	s15, s14, s22
 80297be:	ee33 3a68 	vsub.f32	s6, s6, s17
 80297c2:	ee36 0a88 	vadd.f32	s0, s13, s16
 80297c6:	ee75 8a86 	vadd.f32	s17, s11, s12
 80297ca:	ee36 7ac8 	vsub.f32	s14, s13, s16
 80297ce:	ee71 1ac4 	vsub.f32	s3, s3, s8
 80297d2:	ee75 6a62 	vsub.f32	s13, s10, s5
 80297d6:	ee33 4ac9 	vsub.f32	s8, s7, s18
 80297da:	ee35 6ac6 	vsub.f32	s12, s11, s12
 80297de:	ee33 1a89 	vadd.f32	s2, s7, s18
 80297e2:	ee74 5ae0 	vsub.f32	s11, s9, s1
 80297e6:	ee74 3aa0 	vadd.f32	s7, s9, s1
 80297ea:	ee75 4a22 	vadd.f32	s9, s10, s5
 80297ee:	ee32 5a27 	vadd.f32	s10, s4, s15
 80297f2:	ee72 7a67 	vsub.f32	s15, s4, s15
 80297f6:	ee33 8a06 	vadd.f32	s16, s6, s12
 80297fa:	ee75 2a87 	vadd.f32	s5, s11, s14
 80297fe:	ee31 9a28 	vadd.f32	s18, s2, s17
 8029802:	ee33 6a46 	vsub.f32	s12, s6, s12
 8029806:	ee74 0a61 	vsub.f32	s1, s8, s3
 802980a:	ee33 2a80 	vadd.f32	s4, s7, s0
 802980e:	ee35 7ac7 	vsub.f32	s14, s11, s14
 8029812:	ee34 3ac5 	vsub.f32	s6, s9, s10
 8029816:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802981a:	ee31 1a68 	vsub.f32	s2, s2, s17
 802981e:	ee34 4a21 	vadd.f32	s8, s8, s3
 8029822:	ee73 3ac0 	vsub.f32	s7, s7, s0
 8029826:	ee74 4a85 	vadd.f32	s9, s9, s10
 802982a:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802982e:	44d8      	add	r8, fp
 8029830:	45c1      	cmp	r9, r8
 8029832:	ed8e 9a00 	vstr	s18, [lr]
 8029836:	ed85 1a01 	vstr	s2, [r5, #4]
 802983a:	449e      	add	lr, r3
 802983c:	ed8c 8a00 	vstr	s16, [ip]
 8029840:	441d      	add	r5, r3
 8029842:	ed80 6a00 	vstr	s12, [r0]
 8029846:	edcc 0a01 	vstr	s1, [ip, #4]
 802984a:	ed80 4a01 	vstr	s8, [r0, #4]
 802984e:	449c      	add	ip, r3
 8029850:	ed87 2a00 	vstr	s4, [r7]
 8029854:	4418      	add	r0, r3
 8029856:	ed41 3a01 	vstr	s7, [r1, #-4]
 802985a:	ed42 2a01 	vstr	s5, [r2, #-4]
 802985e:	ed86 7a00 	vstr	s14, [r6]
 8029862:	ed87 3a01 	vstr	s6, [r7, #4]
 8029866:	edc1 4a00 	vstr	s9, [r1]
 802986a:	441f      	add	r7, r3
 802986c:	edc2 5a00 	vstr	s11, [r2]
 8029870:	4419      	add	r1, r3
 8029872:	edc6 6a01 	vstr	s13, [r6, #4]
 8029876:	441a      	add	r2, r3
 8029878:	441e      	add	r6, r3
 802987a:	f63f af44 	bhi.w	8029706 <arm_radix8_butterfly_f32+0x66>
 802987e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029880:	2907      	cmp	r1, #7
 8029882:	4620      	mov	r0, r4
 8029884:	f240 81e9 	bls.w	8029c5a <arm_radix8_butterfly_f32+0x5ba>
 8029888:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802988c:	193e      	adds	r6, r7, r4
 802988e:	1935      	adds	r5, r6, r4
 8029890:	9c03      	ldr	r4, [sp, #12]
 8029892:	9000      	str	r0, [sp, #0]
 8029894:	4622      	mov	r2, r4
 8029896:	3201      	adds	r2, #1
 8029898:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802989c:	9900      	ldr	r1, [sp, #0]
 802989e:	1828      	adds	r0, r5, r0
 80298a0:	eb00 0e01 	add.w	lr, r0, r1
 80298a4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80298a6:	440a      	add	r2, r1
 80298a8:	eb04 0c01 	add.w	ip, r4, r1
 80298ac:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 80298b0:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 80298b4:	9a00      	ldr	r2, [sp, #0]
 80298b6:	940f      	str	r4, [sp, #60]	; 0x3c
 80298b8:	00ed      	lsls	r5, r5, #3
 80298ba:	9511      	str	r5, [sp, #68]	; 0x44
 80298bc:	00d5      	lsls	r5, r2, #3
 80298be:	950d      	str	r5, [sp, #52]	; 0x34
 80298c0:	9d01      	ldr	r5, [sp, #4]
 80298c2:	3508      	adds	r5, #8
 80298c4:	9516      	str	r5, [sp, #88]	; 0x58
 80298c6:	9d02      	ldr	r5, [sp, #8]
 80298c8:	3508      	adds	r5, #8
 80298ca:	0114      	lsls	r4, r2, #4
 80298cc:	9517      	str	r5, [sp, #92]	; 0x5c
 80298ce:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80298d0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80298d2:	940e      	str	r4, [sp, #56]	; 0x38
 80298d4:	00c0      	lsls	r0, r0, #3
 80298d6:	9010      	str	r0, [sp, #64]	; 0x40
 80298d8:	18aa      	adds	r2, r5, r2
 80298da:	9207      	str	r2, [sp, #28]
 80298dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80298de:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80298e0:	18aa      	adds	r2, r5, r2
 80298e2:	9208      	str	r2, [sp, #32]
 80298e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80298e6:	18aa      	adds	r2, r5, r2
 80298e8:	9209      	str	r2, [sp, #36]	; 0x24
 80298ea:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80298ee:	f10e 0204 	add.w	r2, lr, #4
 80298f2:	920a      	str	r2, [sp, #40]	; 0x28
 80298f4:	00c9      	lsls	r1, r1, #3
 80298f6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80298f8:	310c      	adds	r1, #12
 80298fa:	00f6      	lsls	r6, r6, #3
 80298fc:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8029900:	9114      	str	r1, [sp, #80]	; 0x50
 8029902:	18a9      	adds	r1, r5, r2
 8029904:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8029906:	9612      	str	r6, [sp, #72]	; 0x48
 8029908:	00ff      	lsls	r7, r7, #3
 802990a:	19ae      	adds	r6, r5, r6
 802990c:	3008      	adds	r0, #8
 802990e:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8029912:	9606      	str	r6, [sp, #24]
 8029914:	9019      	str	r0, [sp, #100]	; 0x64
 8029916:	18aa      	adds	r2, r5, r2
 8029918:	0164      	lsls	r4, r4, #5
 802991a:	19ee      	adds	r6, r5, r7
 802991c:	f10c 000c 	add.w	r0, ip, #12
 8029920:	9713      	str	r7, [sp, #76]	; 0x4c
 8029922:	9604      	str	r6, [sp, #16]
 8029924:	9015      	str	r0, [sp, #84]	; 0x54
 8029926:	9103      	str	r1, [sp, #12]
 8029928:	9205      	str	r2, [sp, #20]
 802992a:	f104 0208 	add.w	r2, r4, #8
 802992e:	9218      	str	r2, [sp, #96]	; 0x60
 8029930:	f04f 0801 	mov.w	r8, #1
 8029934:	2200      	movs	r2, #0
 8029936:	f102 0108 	add.w	r1, r2, #8
 802993a:	460f      	mov	r7, r1
 802993c:	910b      	str	r1, [sp, #44]	; 0x2c
 802993e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8029940:	188e      	adds	r6, r1, r2
 8029942:	9916      	ldr	r1, [sp, #88]	; 0x58
 8029944:	188d      	adds	r5, r1, r2
 8029946:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8029948:	188c      	adds	r4, r1, r2
 802994a:	9919      	ldr	r1, [sp, #100]	; 0x64
 802994c:	1888      	adds	r0, r1, r2
 802994e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8029950:	eb01 0c02 	add.w	ip, r1, r2
 8029954:	9915      	ldr	r1, [sp, #84]	; 0x54
 8029956:	440a      	add	r2, r1
 8029958:	9903      	ldr	r1, [sp, #12]
 802995a:	edd1 fa00 	vldr	s31, [r1]
 802995e:	9905      	ldr	r1, [sp, #20]
 8029960:	ed91 fa00 	vldr	s30, [r1]
 8029964:	9904      	ldr	r1, [sp, #16]
 8029966:	edd1 ea00 	vldr	s29, [r1]
 802996a:	9906      	ldr	r1, [sp, #24]
 802996c:	ed91 ea00 	vldr	s28, [r1]
 8029970:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029972:	edd1 da00 	vldr	s27, [r1]
 8029976:	9908      	ldr	r1, [sp, #32]
 8029978:	ed91 da00 	vldr	s26, [r1]
 802997c:	9907      	ldr	r1, [sp, #28]
 802997e:	edd1 ca00 	vldr	s25, [r1]
 8029982:	9903      	ldr	r1, [sp, #12]
 8029984:	ed91 ca01 	vldr	s24, [r1, #4]
 8029988:	9905      	ldr	r1, [sp, #20]
 802998a:	edd1 ba01 	vldr	s23, [r1, #4]
 802998e:	9904      	ldr	r1, [sp, #16]
 8029990:	edd1 aa01 	vldr	s21, [r1, #4]
 8029994:	9906      	ldr	r1, [sp, #24]
 8029996:	ed91 aa01 	vldr	s20, [r1, #4]
 802999a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802999c:	edd1 7a01 	vldr	s15, [r1, #4]
 80299a0:	9908      	ldr	r1, [sp, #32]
 80299a2:	edcd 7a00 	vstr	s15, [sp]
 80299a6:	edd1 7a01 	vldr	s15, [r1, #4]
 80299aa:	9907      	ldr	r1, [sp, #28]
 80299ac:	edcd 7a01 	vstr	s15, [sp, #4]
 80299b0:	edd1 7a01 	vldr	s15, [r1, #4]
 80299b4:	eb0a 0e07 	add.w	lr, sl, r7
 80299b8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80299ba:	edcd 7a02 	vstr	s15, [sp, #8]
 80299be:	eb0c 010a 	add.w	r1, ip, sl
 80299c2:	4456      	add	r6, sl
 80299c4:	4455      	add	r5, sl
 80299c6:	4454      	add	r4, sl
 80299c8:	4450      	add	r0, sl
 80299ca:	4452      	add	r2, sl
 80299cc:	46c4      	mov	ip, r8
 80299ce:	e001      	b.n	80299d4 <arm_radix8_butterfly_f32+0x334>
 80299d0:	3f3504f3 	.word	0x3f3504f3
 80299d4:	ed96 5a00 	vldr	s10, [r6]
 80299d8:	ed52 9a01 	vldr	s19, [r2, #-4]
 80299dc:	ed11 6a01 	vldr	s12, [r1, #-4]
 80299e0:	edd0 7a00 	vldr	s15, [r0]
 80299e4:	ed17 7a01 	vldr	s14, [r7, #-4]
 80299e8:	edde 3a00 	vldr	s7, [lr]
 80299ec:	ed94 3a00 	vldr	s6, [r4]
 80299f0:	ed95 2a00 	vldr	s4, [r5]
 80299f4:	ed9e 0a01 	vldr	s0, [lr, #4]
 80299f8:	ee33 8a85 	vadd.f32	s16, s7, s10
 80299fc:	ee32 1a06 	vadd.f32	s2, s4, s12
 8029a00:	ee33 4a29 	vadd.f32	s8, s6, s19
 8029a04:	ee77 4a87 	vadd.f32	s9, s15, s14
 8029a08:	ee78 1a04 	vadd.f32	s3, s16, s8
 8029a0c:	ee71 6a24 	vadd.f32	s13, s2, s9
 8029a10:	ee32 2a46 	vsub.f32	s4, s4, s12
 8029a14:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8029a18:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029a1c:	ed8e 6a00 	vstr	s12, [lr]
 8029a20:	edd0 8a01 	vldr	s17, [r0, #4]
 8029a24:	ed95 9a01 	vldr	s18, [r5, #4]
 8029a28:	edd1 2a00 	vldr	s5, [r1]
 8029a2c:	ed97 7a00 	vldr	s14, [r7]
 8029a30:	edd4 0a01 	vldr	s1, [r4, #4]
 8029a34:	ed96 6a01 	vldr	s12, [r6, #4]
 8029a38:	edd2 5a00 	vldr	s11, [r2]
 8029a3c:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8029a40:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029a44:	ee39 5a62 	vsub.f32	s10, s18, s5
 8029a48:	ee78 9ac7 	vsub.f32	s19, s17, s14
 8029a4c:	ee38 4a44 	vsub.f32	s8, s16, s8
 8029a50:	ee38 7a87 	vadd.f32	s14, s17, s14
 8029a54:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8029a58:	ee79 2a22 	vadd.f32	s5, s18, s5
 8029a5c:	ee75 8a69 	vsub.f32	s17, s10, s19
 8029a60:	ee32 9a27 	vadd.f32	s18, s4, s15
 8029a64:	ee35 5a29 	vadd.f32	s10, s10, s19
 8029a68:	ee72 7a67 	vsub.f32	s15, s4, s15
 8029a6c:	ee30 2a06 	vadd.f32	s4, s0, s12
 8029a70:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8029a74:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8029a78:	ee32 9a08 	vadd.f32	s18, s4, s16
 8029a7c:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8029a80:	ee32 2a48 	vsub.f32	s4, s4, s16
 8029a84:	ee71 4a64 	vsub.f32	s9, s2, s9
 8029a88:	ee25 5a0b 	vmul.f32	s10, s10, s22
 8029a8c:	ee32 1a87 	vadd.f32	s2, s5, s14
 8029a90:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8029a94:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8029a98:	ee30 6a46 	vsub.f32	s12, s0, s12
 8029a9c:	ee73 0a29 	vadd.f32	s1, s6, s19
 8029aa0:	ee36 0a28 	vadd.f32	s0, s12, s17
 8029aa4:	ee33 3a69 	vsub.f32	s6, s6, s19
 8029aa8:	ee32 7a64 	vsub.f32	s14, s4, s9
 8029aac:	ee73 9aa7 	vadd.f32	s19, s7, s15
 8029ab0:	ee36 6a68 	vsub.f32	s12, s12, s17
 8029ab4:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8029ab8:	ee75 8a85 	vadd.f32	s17, s11, s10
 8029abc:	ee74 3a22 	vadd.f32	s7, s8, s5
 8029ac0:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8029ac4:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8029ac8:	ee79 1a41 	vsub.f32	s3, s18, s2
 8029acc:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8029ad0:	ee76 5a43 	vsub.f32	s11, s12, s6
 8029ad4:	ee74 2a62 	vsub.f32	s5, s8, s5
 8029ad8:	ee72 4a24 	vadd.f32	s9, s4, s9
 8029adc:	ee30 4a60 	vsub.f32	s8, s0, s1
 8029ae0:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8029ae4:	ee30 0a20 	vadd.f32	s0, s0, s1
 8029ae8:	ee77 9a85 	vadd.f32	s19, s15, s10
 8029aec:	ee36 6a03 	vadd.f32	s12, s12, s6
 8029af0:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8029af4:	ee2e 2a21 	vmul.f32	s4, s28, s3
 8029af8:	ee2e 5a26 	vmul.f32	s10, s28, s13
 8029afc:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8029b00:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8029b04:	ee39 1a01 	vadd.f32	s2, s18, s2
 8029b08:	ee6a 6a26 	vmul.f32	s13, s20, s13
 8029b0c:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8029b10:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8029b14:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8029b18:	ee6f 1a84 	vmul.f32	s3, s31, s8
 8029b1c:	ee35 3a03 	vadd.f32	s6, s10, s6
 8029b20:	ee72 6a66 	vsub.f32	s13, s4, s13
 8029b24:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8029b28:	ee2f 2a88 	vmul.f32	s4, s31, s16
 8029b2c:	ed9d 4a02 	vldr	s8, [sp, #8]
 8029b30:	ed8e 1a01 	vstr	s2, [lr, #4]
 8029b34:	ee77 3a63 	vsub.f32	s7, s14, s7
 8029b38:	ee2c 8a08 	vmul.f32	s16, s24, s16
 8029b3c:	ed9d 7a01 	vldr	s14, [sp, #4]
 8029b40:	ed86 3a00 	vstr	s6, [r6]
 8029b44:	ee30 9a89 	vadd.f32	s18, s1, s18
 8029b48:	ee32 2a05 	vadd.f32	s4, s4, s10
 8029b4c:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8029b50:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8029b54:	ee67 2a22 	vmul.f32	s5, s14, s5
 8029b58:	ee64 1a00 	vmul.f32	s3, s8, s0
 8029b5c:	ee27 7a24 	vmul.f32	s14, s14, s9
 8029b60:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8029b64:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8029b68:	ee64 8a28 	vmul.f32	s17, s8, s17
 8029b6c:	ed9d 4a00 	vldr	s8, [sp]
 8029b70:	edc6 6a01 	vstr	s13, [r6, #4]
 8029b74:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8029b78:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 8029b7c:	ee64 9a29 	vmul.f32	s19, s8, s19
 8029b80:	ee24 4a25 	vmul.f32	s8, s8, s11
 8029b84:	ee30 7a87 	vadd.f32	s14, s1, s14
 8029b88:	ee74 4a84 	vadd.f32	s9, s9, s8
 8029b8c:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8029b90:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8029b94:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8029b98:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 8029b9c:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 8029ba0:	ee2e 6a86 	vmul.f32	s12, s29, s12
 8029ba4:	ee75 1a21 	vadd.f32	s3, s10, s3
 8029ba8:	ee30 0a68 	vsub.f32	s0, s0, s17
 8029bac:	ee75 9ae9 	vsub.f32	s19, s11, s19
 8029bb0:	ee70 0a84 	vadd.f32	s1, s1, s8
 8029bb4:	ee36 6a67 	vsub.f32	s12, s12, s15
 8029bb8:	44dc      	add	ip, fp
 8029bba:	45e1      	cmp	r9, ip
 8029bbc:	ed84 9a00 	vstr	s18, [r4]
 8029bc0:	edc4 3a01 	vstr	s7, [r4, #4]
 8029bc4:	449e      	add	lr, r3
 8029bc6:	ed02 7a01 	vstr	s14, [r2, #-4]
 8029bca:	edc2 2a00 	vstr	s5, [r2]
 8029bce:	441e      	add	r6, r3
 8029bd0:	ed85 2a00 	vstr	s4, [r5]
 8029bd4:	ed85 8a01 	vstr	s16, [r5, #4]
 8029bd8:	441c      	add	r4, r3
 8029bda:	ed47 1a01 	vstr	s3, [r7, #-4]
 8029bde:	ed87 0a00 	vstr	s0, [r7]
 8029be2:	441a      	add	r2, r3
 8029be4:	ed41 4a01 	vstr	s9, [r1, #-4]
 8029be8:	edc1 9a00 	vstr	s19, [r1]
 8029bec:	441d      	add	r5, r3
 8029bee:	edc0 0a00 	vstr	s1, [r0]
 8029bf2:	441f      	add	r7, r3
 8029bf4:	ed80 6a01 	vstr	s12, [r0, #4]
 8029bf8:	4419      	add	r1, r3
 8029bfa:	4418      	add	r0, r3
 8029bfc:	f63f aeea 	bhi.w	80299d4 <arm_radix8_butterfly_f32+0x334>
 8029c00:	9a03      	ldr	r2, [sp, #12]
 8029c02:	990d      	ldr	r1, [sp, #52]	; 0x34
 8029c04:	440a      	add	r2, r1
 8029c06:	9203      	str	r2, [sp, #12]
 8029c08:	990e      	ldr	r1, [sp, #56]	; 0x38
 8029c0a:	9a05      	ldr	r2, [sp, #20]
 8029c0c:	440a      	add	r2, r1
 8029c0e:	9205      	str	r2, [sp, #20]
 8029c10:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8029c12:	9a04      	ldr	r2, [sp, #16]
 8029c14:	440a      	add	r2, r1
 8029c16:	9204      	str	r2, [sp, #16]
 8029c18:	9912      	ldr	r1, [sp, #72]	; 0x48
 8029c1a:	9a06      	ldr	r2, [sp, #24]
 8029c1c:	440a      	add	r2, r1
 8029c1e:	9206      	str	r2, [sp, #24]
 8029c20:	9911      	ldr	r1, [sp, #68]	; 0x44
 8029c22:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029c24:	440a      	add	r2, r1
 8029c26:	9209      	str	r2, [sp, #36]	; 0x24
 8029c28:	9910      	ldr	r1, [sp, #64]	; 0x40
 8029c2a:	9a08      	ldr	r2, [sp, #32]
 8029c2c:	440a      	add	r2, r1
 8029c2e:	9208      	str	r2, [sp, #32]
 8029c30:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8029c32:	9a07      	ldr	r2, [sp, #28]
 8029c34:	440a      	add	r2, r1
 8029c36:	9207      	str	r2, [sp, #28]
 8029c38:	990c      	ldr	r1, [sp, #48]	; 0x30
 8029c3a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8029c3c:	f108 0801 	add.w	r8, r8, #1
 8029c40:	3208      	adds	r2, #8
 8029c42:	4588      	cmp	r8, r1
 8029c44:	920a      	str	r2, [sp, #40]	; 0x28
 8029c46:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8029c48:	f47f ae75 	bne.w	8029936 <arm_radix8_butterfly_f32+0x296>
 8029c4c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8029c50:	9300      	str	r3, [sp, #0]
 8029c52:	46c3      	mov	fp, r8
 8029c54:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8029c58:	e532      	b.n	80296c0 <arm_radix8_butterfly_f32+0x20>
 8029c5a:	b01d      	add	sp, #116	; 0x74
 8029c5c:	ecbd 8b10 	vpop	{d8-d15}
 8029c60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029c64 <__aeabi_atexit>:
 8029c64:	460b      	mov	r3, r1
 8029c66:	4601      	mov	r1, r0
 8029c68:	4618      	mov	r0, r3
 8029c6a:	f000 bfc7 	b.w	802abfc <__cxa_atexit>

08029c6e <_ZdlPvj>:
 8029c6e:	f000 b812 	b.w	8029c96 <_ZdlPv>

08029c72 <__cxa_guard_acquire>:
 8029c72:	6803      	ldr	r3, [r0, #0]
 8029c74:	07db      	lsls	r3, r3, #31
 8029c76:	d406      	bmi.n	8029c86 <__cxa_guard_acquire+0x14>
 8029c78:	7843      	ldrb	r3, [r0, #1]
 8029c7a:	b103      	cbz	r3, 8029c7e <__cxa_guard_acquire+0xc>
 8029c7c:	deff      	udf	#255	; 0xff
 8029c7e:	2301      	movs	r3, #1
 8029c80:	7043      	strb	r3, [r0, #1]
 8029c82:	4618      	mov	r0, r3
 8029c84:	4770      	bx	lr
 8029c86:	2000      	movs	r0, #0
 8029c88:	4770      	bx	lr

08029c8a <__cxa_guard_release>:
 8029c8a:	2301      	movs	r3, #1
 8029c8c:	6003      	str	r3, [r0, #0]
 8029c8e:	4770      	bx	lr

08029c90 <__cxa_pure_virtual>:
 8029c90:	b508      	push	{r3, lr}
 8029c92:	f000 f80f 	bl	8029cb4 <_ZSt9terminatev>

08029c96 <_ZdlPv>:
 8029c96:	f000 befd 	b.w	802aa94 <free>

08029c9a <_ZN10__cxxabiv111__terminateEPFvvE>:
 8029c9a:	b508      	push	{r3, lr}
 8029c9c:	4780      	blx	r0
 8029c9e:	f000 fec5 	bl	802aa2c <abort>
	...

08029ca4 <_ZSt13get_terminatev>:
 8029ca4:	4b02      	ldr	r3, [pc, #8]	; (8029cb0 <_ZSt13get_terminatev+0xc>)
 8029ca6:	6818      	ldr	r0, [r3, #0]
 8029ca8:	f3bf 8f5b 	dmb	ish
 8029cac:	4770      	bx	lr
 8029cae:	bf00      	nop
 8029cb0:	20000104 	.word	0x20000104

08029cb4 <_ZSt9terminatev>:
 8029cb4:	b508      	push	{r3, lr}
 8029cb6:	f7ff fff5 	bl	8029ca4 <_ZSt13get_terminatev>
 8029cba:	f7ff ffee 	bl	8029c9a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08029cc0 <sqrtf>:
 8029cc0:	b508      	push	{r3, lr}
 8029cc2:	ed2d 8b02 	vpush	{d8}
 8029cc6:	eeb0 8a40 	vmov.f32	s16, s0
 8029cca:	f000 f97d 	bl	8029fc8 <__ieee754_sqrtf>
 8029cce:	eeb4 8a48 	vcmp.f32	s16, s16
 8029cd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029cd6:	d60c      	bvs.n	8029cf2 <sqrtf+0x32>
 8029cd8:	eddf 8a07 	vldr	s17, [pc, #28]	; 8029cf8 <sqrtf+0x38>
 8029cdc:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8029ce0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029ce4:	d505      	bpl.n	8029cf2 <sqrtf+0x32>
 8029ce6:	f001 f9a7 	bl	802b038 <__errno>
 8029cea:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8029cee:	2321      	movs	r3, #33	; 0x21
 8029cf0:	6003      	str	r3, [r0, #0]
 8029cf2:	ecbd 8b02 	vpop	{d8}
 8029cf6:	bd08      	pop	{r3, pc}
 8029cf8:	00000000 	.word	0x00000000

08029cfc <atanf>:
 8029cfc:	b538      	push	{r3, r4, r5, lr}
 8029cfe:	ee10 5a10 	vmov	r5, s0
 8029d02:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 8029d06:	f1b4 4fa1 	cmp.w	r4, #1350565888	; 0x50800000
 8029d0a:	eef0 7a40 	vmov.f32	s15, s0
 8029d0e:	db10      	blt.n	8029d32 <atanf+0x36>
 8029d10:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 8029d14:	dd04      	ble.n	8029d20 <atanf+0x24>
 8029d16:	ee70 7a00 	vadd.f32	s15, s0, s0
 8029d1a:	eeb0 0a67 	vmov.f32	s0, s15
 8029d1e:	bd38      	pop	{r3, r4, r5, pc}
 8029d20:	eddf 7a4d 	vldr	s15, [pc, #308]	; 8029e58 <atanf+0x15c>
 8029d24:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 8029e5c <atanf+0x160>
 8029d28:	2d00      	cmp	r5, #0
 8029d2a:	bfd8      	it	le
 8029d2c:	eef0 7a47 	vmovle.f32	s15, s14
 8029d30:	e7f3      	b.n	8029d1a <atanf+0x1e>
 8029d32:	4b4b      	ldr	r3, [pc, #300]	; (8029e60 <atanf+0x164>)
 8029d34:	429c      	cmp	r4, r3
 8029d36:	dc10      	bgt.n	8029d5a <atanf+0x5e>
 8029d38:	f1b4 5f44 	cmp.w	r4, #822083584	; 0x31000000
 8029d3c:	da0a      	bge.n	8029d54 <atanf+0x58>
 8029d3e:	ed9f 7a49 	vldr	s14, [pc, #292]	; 8029e64 <atanf+0x168>
 8029d42:	ee30 7a07 	vadd.f32	s14, s0, s14
 8029d46:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8029d4a:	eeb4 7ae6 	vcmpe.f32	s14, s13
 8029d4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029d52:	dce2      	bgt.n	8029d1a <atanf+0x1e>
 8029d54:	f04f 33ff 	mov.w	r3, #4294967295
 8029d58:	e013      	b.n	8029d82 <atanf+0x86>
 8029d5a:	f000 f8e7 	bl	8029f2c <fabsf>
 8029d5e:	4b42      	ldr	r3, [pc, #264]	; (8029e68 <atanf+0x16c>)
 8029d60:	429c      	cmp	r4, r3
 8029d62:	dc4f      	bgt.n	8029e04 <atanf+0x108>
 8029d64:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 8029d68:	429c      	cmp	r4, r3
 8029d6a:	dc41      	bgt.n	8029df0 <atanf+0xf4>
 8029d6c:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 8029d70:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 8029d74:	eea0 7a27 	vfma.f32	s14, s0, s15
 8029d78:	2300      	movs	r3, #0
 8029d7a:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029d7e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029d82:	1c5a      	adds	r2, r3, #1
 8029d84:	ee27 6aa7 	vmul.f32	s12, s15, s15
 8029d88:	ed9f 7a38 	vldr	s14, [pc, #224]	; 8029e6c <atanf+0x170>
 8029d8c:	eddf 5a38 	vldr	s11, [pc, #224]	; 8029e70 <atanf+0x174>
 8029d90:	ed9f 5a38 	vldr	s10, [pc, #224]	; 8029e74 <atanf+0x178>
 8029d94:	ee66 6a06 	vmul.f32	s13, s12, s12
 8029d98:	eee6 5a87 	vfma.f32	s11, s13, s14
 8029d9c:	ed9f 7a36 	vldr	s14, [pc, #216]	; 8029e78 <atanf+0x17c>
 8029da0:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8029da4:	eddf 5a35 	vldr	s11, [pc, #212]	; 8029e7c <atanf+0x180>
 8029da8:	eee7 5a26 	vfma.f32	s11, s14, s13
 8029dac:	ed9f 7a34 	vldr	s14, [pc, #208]	; 8029e80 <atanf+0x184>
 8029db0:	eea5 7aa6 	vfma.f32	s14, s11, s13
 8029db4:	eddf 5a33 	vldr	s11, [pc, #204]	; 8029e84 <atanf+0x188>
 8029db8:	eee7 5a26 	vfma.f32	s11, s14, s13
 8029dbc:	ed9f 7a32 	vldr	s14, [pc, #200]	; 8029e88 <atanf+0x18c>
 8029dc0:	eea6 5a87 	vfma.f32	s10, s13, s14
 8029dc4:	ed9f 7a31 	vldr	s14, [pc, #196]	; 8029e8c <atanf+0x190>
 8029dc8:	eea5 7a26 	vfma.f32	s14, s10, s13
 8029dcc:	ed9f 5a30 	vldr	s10, [pc, #192]	; 8029e90 <atanf+0x194>
 8029dd0:	eea7 5a26 	vfma.f32	s10, s14, s13
 8029dd4:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 8029e94 <atanf+0x198>
 8029dd8:	eea5 7a26 	vfma.f32	s14, s10, s13
 8029ddc:	ee27 7a26 	vmul.f32	s14, s14, s13
 8029de0:	eea5 7a86 	vfma.f32	s14, s11, s12
 8029de4:	ee27 7a87 	vmul.f32	s14, s15, s14
 8029de8:	d121      	bne.n	8029e2e <atanf+0x132>
 8029dea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029dee:	e794      	b.n	8029d1a <atanf+0x1e>
 8029df0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029df4:	ee30 7a67 	vsub.f32	s14, s0, s15
 8029df8:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029dfc:	2301      	movs	r3, #1
 8029dfe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029e02:	e7be      	b.n	8029d82 <atanf+0x86>
 8029e04:	4b24      	ldr	r3, [pc, #144]	; (8029e98 <atanf+0x19c>)
 8029e06:	429c      	cmp	r4, r3
 8029e08:	dc0b      	bgt.n	8029e22 <atanf+0x126>
 8029e0a:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8029e0e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8029e12:	eea0 7a27 	vfma.f32	s14, s0, s15
 8029e16:	2302      	movs	r3, #2
 8029e18:	ee70 6a67 	vsub.f32	s13, s0, s15
 8029e1c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8029e20:	e7af      	b.n	8029d82 <atanf+0x86>
 8029e22:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 8029e26:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029e2a:	2303      	movs	r3, #3
 8029e2c:	e7a9      	b.n	8029d82 <atanf+0x86>
 8029e2e:	4a1b      	ldr	r2, [pc, #108]	; (8029e9c <atanf+0x1a0>)
 8029e30:	491b      	ldr	r1, [pc, #108]	; (8029ea0 <atanf+0x1a4>)
 8029e32:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8029e36:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8029e3a:	edd3 6a00 	vldr	s13, [r3]
 8029e3e:	ee37 7a66 	vsub.f32	s14, s14, s13
 8029e42:	2d00      	cmp	r5, #0
 8029e44:	ee37 7a67 	vsub.f32	s14, s14, s15
 8029e48:	edd2 7a00 	vldr	s15, [r2]
 8029e4c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029e50:	bfb8      	it	lt
 8029e52:	eef1 7a67 	vneglt.f32	s15, s15
 8029e56:	e760      	b.n	8029d1a <atanf+0x1e>
 8029e58:	3fc90fdb 	.word	0x3fc90fdb
 8029e5c:	bfc90fdb 	.word	0xbfc90fdb
 8029e60:	3edfffff 	.word	0x3edfffff
 8029e64:	7149f2ca 	.word	0x7149f2ca
 8029e68:	3f97ffff 	.word	0x3f97ffff
 8029e6c:	3c8569d7 	.word	0x3c8569d7
 8029e70:	3d4bda59 	.word	0x3d4bda59
 8029e74:	bd6ef16b 	.word	0xbd6ef16b
 8029e78:	3d886b35 	.word	0x3d886b35
 8029e7c:	3dba2e6e 	.word	0x3dba2e6e
 8029e80:	3e124925 	.word	0x3e124925
 8029e84:	3eaaaaab 	.word	0x3eaaaaab
 8029e88:	bd15a221 	.word	0xbd15a221
 8029e8c:	bd9d8795 	.word	0xbd9d8795
 8029e90:	bde38e38 	.word	0xbde38e38
 8029e94:	be4ccccd 	.word	0xbe4ccccd
 8029e98:	401bffff 	.word	0x401bffff
 8029e9c:	08042ca0 	.word	0x08042ca0
 8029ea0:	08042cb0 	.word	0x08042cb0

08029ea4 <cosf>:
 8029ea4:	ee10 3a10 	vmov	r3, s0
 8029ea8:	b507      	push	{r0, r1, r2, lr}
 8029eaa:	4a1e      	ldr	r2, [pc, #120]	; (8029f24 <cosf+0x80>)
 8029eac:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029eb0:	4293      	cmp	r3, r2
 8029eb2:	dc06      	bgt.n	8029ec2 <cosf+0x1e>
 8029eb4:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8029f28 <cosf+0x84>
 8029eb8:	b003      	add	sp, #12
 8029eba:	f85d eb04 	ldr.w	lr, [sp], #4
 8029ebe:	f000 b90b 	b.w	802a0d8 <__kernel_cosf>
 8029ec2:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8029ec6:	db04      	blt.n	8029ed2 <cosf+0x2e>
 8029ec8:	ee30 0a40 	vsub.f32	s0, s0, s0
 8029ecc:	b003      	add	sp, #12
 8029ece:	f85d fb04 	ldr.w	pc, [sp], #4
 8029ed2:	4668      	mov	r0, sp
 8029ed4:	f000 f9a6 	bl	802a224 <__ieee754_rem_pio2f>
 8029ed8:	f000 0003 	and.w	r0, r0, #3
 8029edc:	2801      	cmp	r0, #1
 8029ede:	d009      	beq.n	8029ef4 <cosf+0x50>
 8029ee0:	2802      	cmp	r0, #2
 8029ee2:	d010      	beq.n	8029f06 <cosf+0x62>
 8029ee4:	b9b0      	cbnz	r0, 8029f14 <cosf+0x70>
 8029ee6:	eddd 0a01 	vldr	s1, [sp, #4]
 8029eea:	ed9d 0a00 	vldr	s0, [sp]
 8029eee:	f000 f8f3 	bl	802a0d8 <__kernel_cosf>
 8029ef2:	e7eb      	b.n	8029ecc <cosf+0x28>
 8029ef4:	eddd 0a01 	vldr	s1, [sp, #4]
 8029ef8:	ed9d 0a00 	vldr	s0, [sp]
 8029efc:	f000 f94a 	bl	802a194 <__kernel_sinf>
 8029f00:	eeb1 0a40 	vneg.f32	s0, s0
 8029f04:	e7e2      	b.n	8029ecc <cosf+0x28>
 8029f06:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f0a:	ed9d 0a00 	vldr	s0, [sp]
 8029f0e:	f000 f8e3 	bl	802a0d8 <__kernel_cosf>
 8029f12:	e7f5      	b.n	8029f00 <cosf+0x5c>
 8029f14:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f18:	ed9d 0a00 	vldr	s0, [sp]
 8029f1c:	2001      	movs	r0, #1
 8029f1e:	f000 f939 	bl	802a194 <__kernel_sinf>
 8029f22:	e7d3      	b.n	8029ecc <cosf+0x28>
 8029f24:	3f490fd8 	.word	0x3f490fd8
 8029f28:	00000000 	.word	0x00000000

08029f2c <fabsf>:
 8029f2c:	ee10 3a10 	vmov	r3, s0
 8029f30:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029f34:	ee00 3a10 	vmov	s0, r3
 8029f38:	4770      	bx	lr
	...

08029f3c <sinf>:
 8029f3c:	ee10 3a10 	vmov	r3, s0
 8029f40:	b507      	push	{r0, r1, r2, lr}
 8029f42:	4a1f      	ldr	r2, [pc, #124]	; (8029fc0 <sinf+0x84>)
 8029f44:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029f48:	4293      	cmp	r3, r2
 8029f4a:	dc07      	bgt.n	8029f5c <sinf+0x20>
 8029f4c:	eddf 0a1d 	vldr	s1, [pc, #116]	; 8029fc4 <sinf+0x88>
 8029f50:	2000      	movs	r0, #0
 8029f52:	b003      	add	sp, #12
 8029f54:	f85d eb04 	ldr.w	lr, [sp], #4
 8029f58:	f000 b91c 	b.w	802a194 <__kernel_sinf>
 8029f5c:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8029f60:	db04      	blt.n	8029f6c <sinf+0x30>
 8029f62:	ee30 0a40 	vsub.f32	s0, s0, s0
 8029f66:	b003      	add	sp, #12
 8029f68:	f85d fb04 	ldr.w	pc, [sp], #4
 8029f6c:	4668      	mov	r0, sp
 8029f6e:	f000 f959 	bl	802a224 <__ieee754_rem_pio2f>
 8029f72:	f000 0003 	and.w	r0, r0, #3
 8029f76:	2801      	cmp	r0, #1
 8029f78:	d00a      	beq.n	8029f90 <sinf+0x54>
 8029f7a:	2802      	cmp	r0, #2
 8029f7c:	d00f      	beq.n	8029f9e <sinf+0x62>
 8029f7e:	b9c0      	cbnz	r0, 8029fb2 <sinf+0x76>
 8029f80:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f84:	ed9d 0a00 	vldr	s0, [sp]
 8029f88:	2001      	movs	r0, #1
 8029f8a:	f000 f903 	bl	802a194 <__kernel_sinf>
 8029f8e:	e7ea      	b.n	8029f66 <sinf+0x2a>
 8029f90:	eddd 0a01 	vldr	s1, [sp, #4]
 8029f94:	ed9d 0a00 	vldr	s0, [sp]
 8029f98:	f000 f89e 	bl	802a0d8 <__kernel_cosf>
 8029f9c:	e7e3      	b.n	8029f66 <sinf+0x2a>
 8029f9e:	eddd 0a01 	vldr	s1, [sp, #4]
 8029fa2:	ed9d 0a00 	vldr	s0, [sp]
 8029fa6:	2001      	movs	r0, #1
 8029fa8:	f000 f8f4 	bl	802a194 <__kernel_sinf>
 8029fac:	eeb1 0a40 	vneg.f32	s0, s0
 8029fb0:	e7d9      	b.n	8029f66 <sinf+0x2a>
 8029fb2:	eddd 0a01 	vldr	s1, [sp, #4]
 8029fb6:	ed9d 0a00 	vldr	s0, [sp]
 8029fba:	f000 f88d 	bl	802a0d8 <__kernel_cosf>
 8029fbe:	e7f5      	b.n	8029fac <sinf+0x70>
 8029fc0:	3f490fd8 	.word	0x3f490fd8
 8029fc4:	00000000 	.word	0x00000000

08029fc8 <__ieee754_sqrtf>:
 8029fc8:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8029fcc:	4770      	bx	lr
	...

08029fd0 <ceilf>:
 8029fd0:	ee10 3a10 	vmov	r3, s0
 8029fd4:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029fd8:	3a7f      	subs	r2, #127	; 0x7f
 8029fda:	2a16      	cmp	r2, #22
 8029fdc:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8029fe0:	dc2a      	bgt.n	802a038 <ceilf+0x68>
 8029fe2:	2a00      	cmp	r2, #0
 8029fe4:	da11      	bge.n	802a00a <ceilf+0x3a>
 8029fe6:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a04c <ceilf+0x7c>
 8029fea:	ee30 0a27 	vadd.f32	s0, s0, s15
 8029fee:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8029ff2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029ff6:	dd05      	ble.n	802a004 <ceilf+0x34>
 8029ff8:	2b00      	cmp	r3, #0
 8029ffa:	db23      	blt.n	802a044 <ceilf+0x74>
 8029ffc:	2900      	cmp	r1, #0
 8029ffe:	bf18      	it	ne
 802a000:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802a004:	ee00 3a10 	vmov	s0, r3
 802a008:	4770      	bx	lr
 802a00a:	4911      	ldr	r1, [pc, #68]	; (802a050 <ceilf+0x80>)
 802a00c:	4111      	asrs	r1, r2
 802a00e:	420b      	tst	r3, r1
 802a010:	d0fa      	beq.n	802a008 <ceilf+0x38>
 802a012:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a04c <ceilf+0x7c>
 802a016:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a01a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a01e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a022:	ddef      	ble.n	802a004 <ceilf+0x34>
 802a024:	2b00      	cmp	r3, #0
 802a026:	bfc2      	ittt	gt
 802a028:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802a02c:	fa40 f202 	asrgt.w	r2, r0, r2
 802a030:	189b      	addgt	r3, r3, r2
 802a032:	ea23 0301 	bic.w	r3, r3, r1
 802a036:	e7e5      	b.n	802a004 <ceilf+0x34>
 802a038:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a03c:	d3e4      	bcc.n	802a008 <ceilf+0x38>
 802a03e:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a042:	4770      	bx	lr
 802a044:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802a048:	e7dc      	b.n	802a004 <ceilf+0x34>
 802a04a:	bf00      	nop
 802a04c:	7149f2ca 	.word	0x7149f2ca
 802a050:	007fffff 	.word	0x007fffff

0802a054 <floorf>:
 802a054:	ee10 3a10 	vmov	r3, s0
 802a058:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a05c:	3a7f      	subs	r2, #127	; 0x7f
 802a05e:	2a16      	cmp	r2, #22
 802a060:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802a064:	dc2a      	bgt.n	802a0bc <floorf+0x68>
 802a066:	2a00      	cmp	r2, #0
 802a068:	da11      	bge.n	802a08e <floorf+0x3a>
 802a06a:	eddf 7a18 	vldr	s15, [pc, #96]	; 802a0cc <floorf+0x78>
 802a06e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a072:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a076:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a07a:	dd05      	ble.n	802a088 <floorf+0x34>
 802a07c:	2b00      	cmp	r3, #0
 802a07e:	da23      	bge.n	802a0c8 <floorf+0x74>
 802a080:	4a13      	ldr	r2, [pc, #76]	; (802a0d0 <floorf+0x7c>)
 802a082:	2900      	cmp	r1, #0
 802a084:	bf18      	it	ne
 802a086:	4613      	movne	r3, r2
 802a088:	ee00 3a10 	vmov	s0, r3
 802a08c:	4770      	bx	lr
 802a08e:	4911      	ldr	r1, [pc, #68]	; (802a0d4 <floorf+0x80>)
 802a090:	4111      	asrs	r1, r2
 802a092:	420b      	tst	r3, r1
 802a094:	d0fa      	beq.n	802a08c <floorf+0x38>
 802a096:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802a0cc <floorf+0x78>
 802a09a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802a09e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802a0a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a0a6:	ddef      	ble.n	802a088 <floorf+0x34>
 802a0a8:	2b00      	cmp	r3, #0
 802a0aa:	bfbe      	ittt	lt
 802a0ac:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802a0b0:	fa40 f202 	asrlt.w	r2, r0, r2
 802a0b4:	189b      	addlt	r3, r3, r2
 802a0b6:	ea23 0301 	bic.w	r3, r3, r1
 802a0ba:	e7e5      	b.n	802a088 <floorf+0x34>
 802a0bc:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802a0c0:	d3e4      	bcc.n	802a08c <floorf+0x38>
 802a0c2:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a0c6:	4770      	bx	lr
 802a0c8:	2300      	movs	r3, #0
 802a0ca:	e7dd      	b.n	802a088 <floorf+0x34>
 802a0cc:	7149f2ca 	.word	0x7149f2ca
 802a0d0:	bf800000 	.word	0xbf800000
 802a0d4:	007fffff 	.word	0x007fffff

0802a0d8 <__kernel_cosf>:
 802a0d8:	ee10 3a10 	vmov	r3, s0
 802a0dc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a0e0:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a0e4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802a0e8:	da05      	bge.n	802a0f6 <__kernel_cosf+0x1e>
 802a0ea:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a0ee:	ee17 2a90 	vmov	r2, s15
 802a0f2:	2a00      	cmp	r2, #0
 802a0f4:	d03b      	beq.n	802a16e <__kernel_cosf+0x96>
 802a0f6:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a0fa:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a174 <__kernel_cosf+0x9c>
 802a0fe:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802a178 <__kernel_cosf+0xa0>
 802a102:	4a1e      	ldr	r2, [pc, #120]	; (802a17c <__kernel_cosf+0xa4>)
 802a104:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a108:	4293      	cmp	r3, r2
 802a10a:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802a180 <__kernel_cosf+0xa8>
 802a10e:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a112:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802a184 <__kernel_cosf+0xac>
 802a116:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a11a:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802a188 <__kernel_cosf+0xb0>
 802a11e:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a122:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802a18c <__kernel_cosf+0xb4>
 802a126:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a12a:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802a12e:	ee26 6a07 	vmul.f32	s12, s12, s14
 802a132:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a136:	eee7 0a06 	vfma.f32	s1, s14, s12
 802a13a:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a13e:	dc04      	bgt.n	802a14a <__kernel_cosf+0x72>
 802a140:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a144:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802a148:	4770      	bx	lr
 802a14a:	4a11      	ldr	r2, [pc, #68]	; (802a190 <__kernel_cosf+0xb8>)
 802a14c:	4293      	cmp	r3, r2
 802a14e:	bfda      	itte	le
 802a150:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802a154:	ee07 3a10 	vmovle	s14, r3
 802a158:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802a15c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a160:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802a164:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802a168:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a16c:	4770      	bx	lr
 802a16e:	eeb0 0a66 	vmov.f32	s0, s13
 802a172:	4770      	bx	lr
 802a174:	ad47d74e 	.word	0xad47d74e
 802a178:	310f74f6 	.word	0x310f74f6
 802a17c:	3e999999 	.word	0x3e999999
 802a180:	b493f27c 	.word	0xb493f27c
 802a184:	37d00d01 	.word	0x37d00d01
 802a188:	bab60b61 	.word	0xbab60b61
 802a18c:	3d2aaaab 	.word	0x3d2aaaab
 802a190:	3f480000 	.word	0x3f480000

0802a194 <__kernel_sinf>:
 802a194:	ee10 3a10 	vmov	r3, s0
 802a198:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a19c:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802a1a0:	da04      	bge.n	802a1ac <__kernel_sinf+0x18>
 802a1a2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802a1a6:	ee17 3a90 	vmov	r3, s15
 802a1aa:	b35b      	cbz	r3, 802a204 <__kernel_sinf+0x70>
 802a1ac:	ee20 7a00 	vmul.f32	s14, s0, s0
 802a1b0:	eddf 7a15 	vldr	s15, [pc, #84]	; 802a208 <__kernel_sinf+0x74>
 802a1b4:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802a20c <__kernel_sinf+0x78>
 802a1b8:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a1bc:	eddf 7a14 	vldr	s15, [pc, #80]	; 802a210 <__kernel_sinf+0x7c>
 802a1c0:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a1c4:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802a214 <__kernel_sinf+0x80>
 802a1c8:	eea7 6a87 	vfma.f32	s12, s15, s14
 802a1cc:	eddf 7a12 	vldr	s15, [pc, #72]	; 802a218 <__kernel_sinf+0x84>
 802a1d0:	ee60 6a07 	vmul.f32	s13, s0, s14
 802a1d4:	eee6 7a07 	vfma.f32	s15, s12, s14
 802a1d8:	b930      	cbnz	r0, 802a1e8 <__kernel_sinf+0x54>
 802a1da:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802a21c <__kernel_sinf+0x88>
 802a1de:	eea7 6a27 	vfma.f32	s12, s14, s15
 802a1e2:	eea6 0a26 	vfma.f32	s0, s12, s13
 802a1e6:	4770      	bx	lr
 802a1e8:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a1ec:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802a1f0:	eee0 7a86 	vfma.f32	s15, s1, s12
 802a1f4:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802a1f8:	eddf 7a09 	vldr	s15, [pc, #36]	; 802a220 <__kernel_sinf+0x8c>
 802a1fc:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802a200:	ee30 0a60 	vsub.f32	s0, s0, s1
 802a204:	4770      	bx	lr
 802a206:	bf00      	nop
 802a208:	2f2ec9d3 	.word	0x2f2ec9d3
 802a20c:	b2d72f34 	.word	0xb2d72f34
 802a210:	3638ef1b 	.word	0x3638ef1b
 802a214:	b9500d01 	.word	0xb9500d01
 802a218:	3c088889 	.word	0x3c088889
 802a21c:	be2aaaab 	.word	0xbe2aaaab
 802a220:	3e2aaaab 	.word	0x3e2aaaab

0802a224 <__ieee754_rem_pio2f>:
 802a224:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a226:	ee10 6a10 	vmov	r6, s0
 802a22a:	4b86      	ldr	r3, [pc, #536]	; (802a444 <__ieee754_rem_pio2f+0x220>)
 802a22c:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802a230:	429d      	cmp	r5, r3
 802a232:	b087      	sub	sp, #28
 802a234:	4604      	mov	r4, r0
 802a236:	dc05      	bgt.n	802a244 <__ieee754_rem_pio2f+0x20>
 802a238:	2300      	movs	r3, #0
 802a23a:	ed80 0a00 	vstr	s0, [r0]
 802a23e:	6043      	str	r3, [r0, #4]
 802a240:	2000      	movs	r0, #0
 802a242:	e020      	b.n	802a286 <__ieee754_rem_pio2f+0x62>
 802a244:	4b80      	ldr	r3, [pc, #512]	; (802a448 <__ieee754_rem_pio2f+0x224>)
 802a246:	429d      	cmp	r5, r3
 802a248:	dc38      	bgt.n	802a2bc <__ieee754_rem_pio2f+0x98>
 802a24a:	2e00      	cmp	r6, #0
 802a24c:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802a44c <__ieee754_rem_pio2f+0x228>
 802a250:	4b7f      	ldr	r3, [pc, #508]	; (802a450 <__ieee754_rem_pio2f+0x22c>)
 802a252:	f025 050f 	bic.w	r5, r5, #15
 802a256:	dd18      	ble.n	802a28a <__ieee754_rem_pio2f+0x66>
 802a258:	429d      	cmp	r5, r3
 802a25a:	ee70 7a47 	vsub.f32	s15, s0, s14
 802a25e:	bf09      	itett	eq
 802a260:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802a454 <__ieee754_rem_pio2f+0x230>
 802a264:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802a458 <__ieee754_rem_pio2f+0x234>
 802a268:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802a26c:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802a45c <__ieee754_rem_pio2f+0x238>
 802a270:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802a274:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a278:	edc0 6a00 	vstr	s13, [r0]
 802a27c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a280:	edc0 7a01 	vstr	s15, [r0, #4]
 802a284:	2001      	movs	r0, #1
 802a286:	b007      	add	sp, #28
 802a288:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a28a:	429d      	cmp	r5, r3
 802a28c:	ee70 7a07 	vadd.f32	s15, s0, s14
 802a290:	bf09      	itett	eq
 802a292:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802a454 <__ieee754_rem_pio2f+0x230>
 802a296:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802a458 <__ieee754_rem_pio2f+0x234>
 802a29a:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802a29e:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802a45c <__ieee754_rem_pio2f+0x238>
 802a2a2:	ee77 6a87 	vadd.f32	s13, s15, s14
 802a2a6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a2aa:	edc0 6a00 	vstr	s13, [r0]
 802a2ae:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a2b2:	edc0 7a01 	vstr	s15, [r0, #4]
 802a2b6:	f04f 30ff 	mov.w	r0, #4294967295
 802a2ba:	e7e4      	b.n	802a286 <__ieee754_rem_pio2f+0x62>
 802a2bc:	4b68      	ldr	r3, [pc, #416]	; (802a460 <__ieee754_rem_pio2f+0x23c>)
 802a2be:	429d      	cmp	r5, r3
 802a2c0:	dc71      	bgt.n	802a3a6 <__ieee754_rem_pio2f+0x182>
 802a2c2:	f7ff fe33 	bl	8029f2c <fabsf>
 802a2c6:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802a464 <__ieee754_rem_pio2f+0x240>
 802a2ca:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a2ce:	eee0 7a07 	vfma.f32	s15, s0, s14
 802a2d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a2d6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802a2da:	ee17 0a90 	vmov	r0, s15
 802a2de:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a44c <__ieee754_rem_pio2f+0x228>
 802a2e2:	eea7 0a67 	vfms.f32	s0, s14, s15
 802a2e6:	281f      	cmp	r0, #31
 802a2e8:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802a458 <__ieee754_rem_pio2f+0x234>
 802a2ec:	ee67 7a27 	vmul.f32	s15, s14, s15
 802a2f0:	eeb1 6a47 	vneg.f32	s12, s14
 802a2f4:	ee70 6a67 	vsub.f32	s13, s0, s15
 802a2f8:	ee16 2a90 	vmov	r2, s13
 802a2fc:	dc1c      	bgt.n	802a338 <__ieee754_rem_pio2f+0x114>
 802a2fe:	495a      	ldr	r1, [pc, #360]	; (802a468 <__ieee754_rem_pio2f+0x244>)
 802a300:	1e47      	subs	r7, r0, #1
 802a302:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802a306:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802a30a:	428b      	cmp	r3, r1
 802a30c:	d014      	beq.n	802a338 <__ieee754_rem_pio2f+0x114>
 802a30e:	6022      	str	r2, [r4, #0]
 802a310:	ed94 7a00 	vldr	s14, [r4]
 802a314:	ee30 0a47 	vsub.f32	s0, s0, s14
 802a318:	2e00      	cmp	r6, #0
 802a31a:	ee30 0a67 	vsub.f32	s0, s0, s15
 802a31e:	ed84 0a01 	vstr	s0, [r4, #4]
 802a322:	dab0      	bge.n	802a286 <__ieee754_rem_pio2f+0x62>
 802a324:	eeb1 7a47 	vneg.f32	s14, s14
 802a328:	eeb1 0a40 	vneg.f32	s0, s0
 802a32c:	ed84 7a00 	vstr	s14, [r4]
 802a330:	ed84 0a01 	vstr	s0, [r4, #4]
 802a334:	4240      	negs	r0, r0
 802a336:	e7a6      	b.n	802a286 <__ieee754_rem_pio2f+0x62>
 802a338:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a33c:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802a340:	2908      	cmp	r1, #8
 802a342:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802a346:	dde2      	ble.n	802a30e <__ieee754_rem_pio2f+0xea>
 802a348:	eddf 5a42 	vldr	s11, [pc, #264]	; 802a454 <__ieee754_rem_pio2f+0x230>
 802a34c:	eef0 6a40 	vmov.f32	s13, s0
 802a350:	eee6 6a25 	vfma.f32	s13, s12, s11
 802a354:	ee70 7a66 	vsub.f32	s15, s0, s13
 802a358:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a35c:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802a45c <__ieee754_rem_pio2f+0x238>
 802a360:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802a364:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a368:	ee15 2a90 	vmov	r2, s11
 802a36c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802a370:	1a5b      	subs	r3, r3, r1
 802a372:	2b19      	cmp	r3, #25
 802a374:	dc04      	bgt.n	802a380 <__ieee754_rem_pio2f+0x15c>
 802a376:	edc4 5a00 	vstr	s11, [r4]
 802a37a:	eeb0 0a66 	vmov.f32	s0, s13
 802a37e:	e7c7      	b.n	802a310 <__ieee754_rem_pio2f+0xec>
 802a380:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802a46c <__ieee754_rem_pio2f+0x248>
 802a384:	eeb0 0a66 	vmov.f32	s0, s13
 802a388:	eea6 0a25 	vfma.f32	s0, s12, s11
 802a38c:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802a390:	eddf 6a37 	vldr	s13, [pc, #220]	; 802a470 <__ieee754_rem_pio2f+0x24c>
 802a394:	eee6 7a25 	vfma.f32	s15, s12, s11
 802a398:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802a39c:	ee30 7a67 	vsub.f32	s14, s0, s15
 802a3a0:	ed84 7a00 	vstr	s14, [r4]
 802a3a4:	e7b4      	b.n	802a310 <__ieee754_rem_pio2f+0xec>
 802a3a6:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802a3aa:	db06      	blt.n	802a3ba <__ieee754_rem_pio2f+0x196>
 802a3ac:	ee70 7a40 	vsub.f32	s15, s0, s0
 802a3b0:	edc0 7a01 	vstr	s15, [r0, #4]
 802a3b4:	edc0 7a00 	vstr	s15, [r0]
 802a3b8:	e742      	b.n	802a240 <__ieee754_rem_pio2f+0x1c>
 802a3ba:	15ea      	asrs	r2, r5, #23
 802a3bc:	3a86      	subs	r2, #134	; 0x86
 802a3be:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802a3c2:	ee07 3a90 	vmov	s15, r3
 802a3c6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a3ca:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802a474 <__ieee754_rem_pio2f+0x250>
 802a3ce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a3d2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a3d6:	ed8d 7a03 	vstr	s14, [sp, #12]
 802a3da:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a3de:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802a3e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802a3e6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a3ea:	ed8d 7a04 	vstr	s14, [sp, #16]
 802a3ee:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802a3f2:	eef5 7a40 	vcmp.f32	s15, #0.0
 802a3f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a3fa:	edcd 7a05 	vstr	s15, [sp, #20]
 802a3fe:	d11e      	bne.n	802a43e <__ieee754_rem_pio2f+0x21a>
 802a400:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802a404:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a408:	bf14      	ite	ne
 802a40a:	2302      	movne	r3, #2
 802a40c:	2301      	moveq	r3, #1
 802a40e:	491a      	ldr	r1, [pc, #104]	; (802a478 <__ieee754_rem_pio2f+0x254>)
 802a410:	9101      	str	r1, [sp, #4]
 802a412:	2102      	movs	r1, #2
 802a414:	9100      	str	r1, [sp, #0]
 802a416:	a803      	add	r0, sp, #12
 802a418:	4621      	mov	r1, r4
 802a41a:	f000 f895 	bl	802a548 <__kernel_rem_pio2f>
 802a41e:	2e00      	cmp	r6, #0
 802a420:	f6bf af31 	bge.w	802a286 <__ieee754_rem_pio2f+0x62>
 802a424:	edd4 7a00 	vldr	s15, [r4]
 802a428:	eef1 7a67 	vneg.f32	s15, s15
 802a42c:	edc4 7a00 	vstr	s15, [r4]
 802a430:	edd4 7a01 	vldr	s15, [r4, #4]
 802a434:	eef1 7a67 	vneg.f32	s15, s15
 802a438:	edc4 7a01 	vstr	s15, [r4, #4]
 802a43c:	e77a      	b.n	802a334 <__ieee754_rem_pio2f+0x110>
 802a43e:	2303      	movs	r3, #3
 802a440:	e7e5      	b.n	802a40e <__ieee754_rem_pio2f+0x1ea>
 802a442:	bf00      	nop
 802a444:	3f490fd8 	.word	0x3f490fd8
 802a448:	4016cbe3 	.word	0x4016cbe3
 802a44c:	3fc90f80 	.word	0x3fc90f80
 802a450:	3fc90fd0 	.word	0x3fc90fd0
 802a454:	37354400 	.word	0x37354400
 802a458:	37354443 	.word	0x37354443
 802a45c:	2e85a308 	.word	0x2e85a308
 802a460:	43490f80 	.word	0x43490f80
 802a464:	3f22f984 	.word	0x3f22f984
 802a468:	08042cc0 	.word	0x08042cc0
 802a46c:	2e85a300 	.word	0x2e85a300
 802a470:	248d3132 	.word	0x248d3132
 802a474:	43800000 	.word	0x43800000
 802a478:	08042d40 	.word	0x08042d40

0802a47c <scalbnf>:
 802a47c:	ee10 3a10 	vmov	r3, s0
 802a480:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802a484:	d02b      	beq.n	802a4de <scalbnf+0x62>
 802a486:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802a48a:	d302      	bcc.n	802a492 <scalbnf+0x16>
 802a48c:	ee30 0a00 	vadd.f32	s0, s0, s0
 802a490:	4770      	bx	lr
 802a492:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802a496:	d123      	bne.n	802a4e0 <scalbnf+0x64>
 802a498:	4b24      	ldr	r3, [pc, #144]	; (802a52c <scalbnf+0xb0>)
 802a49a:	eddf 7a25 	vldr	s15, [pc, #148]	; 802a530 <scalbnf+0xb4>
 802a49e:	4298      	cmp	r0, r3
 802a4a0:	ee20 0a27 	vmul.f32	s0, s0, s15
 802a4a4:	db17      	blt.n	802a4d6 <scalbnf+0x5a>
 802a4a6:	ee10 3a10 	vmov	r3, s0
 802a4aa:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802a4ae:	3a19      	subs	r2, #25
 802a4b0:	f24c 3150 	movw	r1, #50000	; 0xc350
 802a4b4:	4288      	cmp	r0, r1
 802a4b6:	dd15      	ble.n	802a4e4 <scalbnf+0x68>
 802a4b8:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802a534 <scalbnf+0xb8>
 802a4bc:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802a538 <scalbnf+0xbc>
 802a4c0:	ee10 3a10 	vmov	r3, s0
 802a4c4:	eeb0 7a67 	vmov.f32	s14, s15
 802a4c8:	2b00      	cmp	r3, #0
 802a4ca:	bfb8      	it	lt
 802a4cc:	eef0 7a66 	vmovlt.f32	s15, s13
 802a4d0:	ee27 0a87 	vmul.f32	s0, s15, s14
 802a4d4:	4770      	bx	lr
 802a4d6:	eddf 7a19 	vldr	s15, [pc, #100]	; 802a53c <scalbnf+0xc0>
 802a4da:	ee27 0a80 	vmul.f32	s0, s15, s0
 802a4de:	4770      	bx	lr
 802a4e0:	0dd2      	lsrs	r2, r2, #23
 802a4e2:	e7e5      	b.n	802a4b0 <scalbnf+0x34>
 802a4e4:	4410      	add	r0, r2
 802a4e6:	28fe      	cmp	r0, #254	; 0xfe
 802a4e8:	dce6      	bgt.n	802a4b8 <scalbnf+0x3c>
 802a4ea:	2800      	cmp	r0, #0
 802a4ec:	dd06      	ble.n	802a4fc <scalbnf+0x80>
 802a4ee:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a4f2:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a4f6:	ee00 3a10 	vmov	s0, r3
 802a4fa:	4770      	bx	lr
 802a4fc:	f110 0f16 	cmn.w	r0, #22
 802a500:	da09      	bge.n	802a516 <scalbnf+0x9a>
 802a502:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a53c <scalbnf+0xc0>
 802a506:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802a540 <scalbnf+0xc4>
 802a50a:	ee10 3a10 	vmov	r3, s0
 802a50e:	eeb0 7a67 	vmov.f32	s14, s15
 802a512:	2b00      	cmp	r3, #0
 802a514:	e7d9      	b.n	802a4ca <scalbnf+0x4e>
 802a516:	3019      	adds	r0, #25
 802a518:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802a51c:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802a520:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802a544 <scalbnf+0xc8>
 802a524:	ee07 3a90 	vmov	s15, r3
 802a528:	e7d7      	b.n	802a4da <scalbnf+0x5e>
 802a52a:	bf00      	nop
 802a52c:	ffff3cb0 	.word	0xffff3cb0
 802a530:	4c000000 	.word	0x4c000000
 802a534:	7149f2ca 	.word	0x7149f2ca
 802a538:	f149f2ca 	.word	0xf149f2ca
 802a53c:	0da24260 	.word	0x0da24260
 802a540:	8da24260 	.word	0x8da24260
 802a544:	33000000 	.word	0x33000000

0802a548 <__kernel_rem_pio2f>:
 802a548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a54c:	ed2d 8b04 	vpush	{d8-d9}
 802a550:	b0d9      	sub	sp, #356	; 0x164
 802a552:	4688      	mov	r8, r1
 802a554:	9002      	str	r0, [sp, #8]
 802a556:	49b8      	ldr	r1, [pc, #736]	; (802a838 <__kernel_rem_pio2f+0x2f0>)
 802a558:	9866      	ldr	r0, [sp, #408]	; 0x198
 802a55a:	9301      	str	r3, [sp, #4]
 802a55c:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802a560:	9901      	ldr	r1, [sp, #4]
 802a562:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802a564:	f101 3bff 	add.w	fp, r1, #4294967295
 802a568:	1d11      	adds	r1, r2, #4
 802a56a:	db25      	blt.n	802a5b8 <__kernel_rem_pio2f+0x70>
 802a56c:	1ed0      	subs	r0, r2, #3
 802a56e:	bf48      	it	mi
 802a570:	1d10      	addmi	r0, r2, #4
 802a572:	10c0      	asrs	r0, r0, #3
 802a574:	1c45      	adds	r5, r0, #1
 802a576:	00e9      	lsls	r1, r5, #3
 802a578:	eba0 070b 	sub.w	r7, r0, fp
 802a57c:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802a848 <__kernel_rem_pio2f+0x300>
 802a580:	9103      	str	r1, [sp, #12]
 802a582:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802a586:	eb0a 0c0b 	add.w	ip, sl, fp
 802a58a:	ae1c      	add	r6, sp, #112	; 0x70
 802a58c:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802a590:	2400      	movs	r4, #0
 802a592:	4564      	cmp	r4, ip
 802a594:	dd12      	ble.n	802a5bc <__kernel_rem_pio2f+0x74>
 802a596:	9901      	ldr	r1, [sp, #4]
 802a598:	ac1c      	add	r4, sp, #112	; 0x70
 802a59a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802a59e:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802a5a2:	f04f 0c00 	mov.w	ip, #0
 802a5a6:	45d4      	cmp	ip, sl
 802a5a8:	dc27      	bgt.n	802a5fa <__kernel_rem_pio2f+0xb2>
 802a5aa:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a5ae:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802a848 <__kernel_rem_pio2f+0x300>
 802a5b2:	4627      	mov	r7, r4
 802a5b4:	2600      	movs	r6, #0
 802a5b6:	e016      	b.n	802a5e6 <__kernel_rem_pio2f+0x9e>
 802a5b8:	2000      	movs	r0, #0
 802a5ba:	e7db      	b.n	802a574 <__kernel_rem_pio2f+0x2c>
 802a5bc:	42e7      	cmn	r7, r4
 802a5be:	bf5d      	ittte	pl
 802a5c0:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802a5c4:	ee07 1a90 	vmovpl	s15, r1
 802a5c8:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802a5cc:	eef0 7a47 	vmovmi.f32	s15, s14
 802a5d0:	ece6 7a01 	vstmia	r6!, {s15}
 802a5d4:	3401      	adds	r4, #1
 802a5d6:	e7dc      	b.n	802a592 <__kernel_rem_pio2f+0x4a>
 802a5d8:	ecfe 6a01 	vldmia	lr!, {s13}
 802a5dc:	ed97 7a00 	vldr	s14, [r7]
 802a5e0:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a5e4:	3601      	adds	r6, #1
 802a5e6:	455e      	cmp	r6, fp
 802a5e8:	f1a7 0704 	sub.w	r7, r7, #4
 802a5ec:	ddf4      	ble.n	802a5d8 <__kernel_rem_pio2f+0x90>
 802a5ee:	ece9 7a01 	vstmia	r9!, {s15}
 802a5f2:	f10c 0c01 	add.w	ip, ip, #1
 802a5f6:	3404      	adds	r4, #4
 802a5f8:	e7d5      	b.n	802a5a6 <__kernel_rem_pio2f+0x5e>
 802a5fa:	a908      	add	r1, sp, #32
 802a5fc:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802a600:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802a604:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802a844 <__kernel_rem_pio2f+0x2fc>
 802a608:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802a840 <__kernel_rem_pio2f+0x2f8>
 802a60c:	9105      	str	r1, [sp, #20]
 802a60e:	9304      	str	r3, [sp, #16]
 802a610:	4656      	mov	r6, sl
 802a612:	00b3      	lsls	r3, r6, #2
 802a614:	9306      	str	r3, [sp, #24]
 802a616:	ab58      	add	r3, sp, #352	; 0x160
 802a618:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a61c:	ac08      	add	r4, sp, #32
 802a61e:	ab44      	add	r3, sp, #272	; 0x110
 802a620:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802a624:	46a4      	mov	ip, r4
 802a626:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802a62a:	4637      	mov	r7, r6
 802a62c:	2f00      	cmp	r7, #0
 802a62e:	f1a0 0004 	sub.w	r0, r0, #4
 802a632:	dc4a      	bgt.n	802a6ca <__kernel_rem_pio2f+0x182>
 802a634:	4628      	mov	r0, r5
 802a636:	9207      	str	r2, [sp, #28]
 802a638:	f7ff ff20 	bl	802a47c <scalbnf>
 802a63c:	eeb0 8a40 	vmov.f32	s16, s0
 802a640:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802a644:	ee28 0a00 	vmul.f32	s0, s16, s0
 802a648:	f7ff fd04 	bl	802a054 <floorf>
 802a64c:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802a650:	eea0 8a67 	vfms.f32	s16, s0, s15
 802a654:	2d00      	cmp	r5, #0
 802a656:	9a07      	ldr	r2, [sp, #28]
 802a658:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802a65c:	ee17 9a90 	vmov	r9, s15
 802a660:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a664:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a668:	dd41      	ble.n	802a6ee <__kernel_rem_pio2f+0x1a6>
 802a66a:	f106 3cff 	add.w	ip, r6, #4294967295
 802a66e:	ab08      	add	r3, sp, #32
 802a670:	f1c5 0e08 	rsb	lr, r5, #8
 802a674:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802a678:	fa47 f00e 	asr.w	r0, r7, lr
 802a67c:	4481      	add	r9, r0
 802a67e:	fa00 f00e 	lsl.w	r0, r0, lr
 802a682:	1a3f      	subs	r7, r7, r0
 802a684:	f1c5 0007 	rsb	r0, r5, #7
 802a688:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802a68c:	4107      	asrs	r7, r0
 802a68e:	2f00      	cmp	r7, #0
 802a690:	dd3c      	ble.n	802a70c <__kernel_rem_pio2f+0x1c4>
 802a692:	f04f 0e00 	mov.w	lr, #0
 802a696:	f109 0901 	add.w	r9, r9, #1
 802a69a:	4671      	mov	r1, lr
 802a69c:	4576      	cmp	r6, lr
 802a69e:	dc67      	bgt.n	802a770 <__kernel_rem_pio2f+0x228>
 802a6a0:	2d00      	cmp	r5, #0
 802a6a2:	dd03      	ble.n	802a6ac <__kernel_rem_pio2f+0x164>
 802a6a4:	2d01      	cmp	r5, #1
 802a6a6:	d074      	beq.n	802a792 <__kernel_rem_pio2f+0x24a>
 802a6a8:	2d02      	cmp	r5, #2
 802a6aa:	d07b      	beq.n	802a7a4 <__kernel_rem_pio2f+0x25c>
 802a6ac:	2f02      	cmp	r7, #2
 802a6ae:	d12d      	bne.n	802a70c <__kernel_rem_pio2f+0x1c4>
 802a6b0:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a6b4:	ee30 8a48 	vsub.f32	s16, s0, s16
 802a6b8:	b341      	cbz	r1, 802a70c <__kernel_rem_pio2f+0x1c4>
 802a6ba:	4628      	mov	r0, r5
 802a6bc:	9207      	str	r2, [sp, #28]
 802a6be:	f7ff fedd 	bl	802a47c <scalbnf>
 802a6c2:	9a07      	ldr	r2, [sp, #28]
 802a6c4:	ee38 8a40 	vsub.f32	s16, s16, s0
 802a6c8:	e020      	b.n	802a70c <__kernel_rem_pio2f+0x1c4>
 802a6ca:	ee60 7a28 	vmul.f32	s15, s0, s17
 802a6ce:	3f01      	subs	r7, #1
 802a6d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a6d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a6d8:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802a6dc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a6e0:	ecac 0a01 	vstmia	ip!, {s0}
 802a6e4:	ed90 0a00 	vldr	s0, [r0]
 802a6e8:	ee37 0a80 	vadd.f32	s0, s15, s0
 802a6ec:	e79e      	b.n	802a62c <__kernel_rem_pio2f+0xe4>
 802a6ee:	d105      	bne.n	802a6fc <__kernel_rem_pio2f+0x1b4>
 802a6f0:	1e70      	subs	r0, r6, #1
 802a6f2:	ab08      	add	r3, sp, #32
 802a6f4:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802a6f8:	11ff      	asrs	r7, r7, #7
 802a6fa:	e7c8      	b.n	802a68e <__kernel_rem_pio2f+0x146>
 802a6fc:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802a700:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802a704:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a708:	da30      	bge.n	802a76c <__kernel_rem_pio2f+0x224>
 802a70a:	2700      	movs	r7, #0
 802a70c:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802a710:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a714:	f040 809a 	bne.w	802a84c <__kernel_rem_pio2f+0x304>
 802a718:	1e74      	subs	r4, r6, #1
 802a71a:	46a4      	mov	ip, r4
 802a71c:	2100      	movs	r1, #0
 802a71e:	45d4      	cmp	ip, sl
 802a720:	da47      	bge.n	802a7b2 <__kernel_rem_pio2f+0x26a>
 802a722:	2900      	cmp	r1, #0
 802a724:	d063      	beq.n	802a7ee <__kernel_rem_pio2f+0x2a6>
 802a726:	ab08      	add	r3, sp, #32
 802a728:	3d08      	subs	r5, #8
 802a72a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802a72e:	2b00      	cmp	r3, #0
 802a730:	d07f      	beq.n	802a832 <__kernel_rem_pio2f+0x2ea>
 802a732:	4628      	mov	r0, r5
 802a734:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802a738:	f7ff fea0 	bl	802a47c <scalbnf>
 802a73c:	1c63      	adds	r3, r4, #1
 802a73e:	aa44      	add	r2, sp, #272	; 0x110
 802a740:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802a844 <__kernel_rem_pio2f+0x2fc>
 802a744:	0099      	lsls	r1, r3, #2
 802a746:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802a74a:	4623      	mov	r3, r4
 802a74c:	2b00      	cmp	r3, #0
 802a74e:	f280 80ad 	bge.w	802a8ac <__kernel_rem_pio2f+0x364>
 802a752:	4623      	mov	r3, r4
 802a754:	2b00      	cmp	r3, #0
 802a756:	f2c0 80cb 	blt.w	802a8f0 <__kernel_rem_pio2f+0x3a8>
 802a75a:	aa44      	add	r2, sp, #272	; 0x110
 802a75c:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802a760:	4e36      	ldr	r6, [pc, #216]	; (802a83c <__kernel_rem_pio2f+0x2f4>)
 802a762:	eddf 7a39 	vldr	s15, [pc, #228]	; 802a848 <__kernel_rem_pio2f+0x300>
 802a766:	2000      	movs	r0, #0
 802a768:	1ae2      	subs	r2, r4, r3
 802a76a:	e0b6      	b.n	802a8da <__kernel_rem_pio2f+0x392>
 802a76c:	2702      	movs	r7, #2
 802a76e:	e790      	b.n	802a692 <__kernel_rem_pio2f+0x14a>
 802a770:	6820      	ldr	r0, [r4, #0]
 802a772:	b949      	cbnz	r1, 802a788 <__kernel_rem_pio2f+0x240>
 802a774:	b118      	cbz	r0, 802a77e <__kernel_rem_pio2f+0x236>
 802a776:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802a77a:	6020      	str	r0, [r4, #0]
 802a77c:	2001      	movs	r0, #1
 802a77e:	f10e 0e01 	add.w	lr, lr, #1
 802a782:	3404      	adds	r4, #4
 802a784:	4601      	mov	r1, r0
 802a786:	e789      	b.n	802a69c <__kernel_rem_pio2f+0x154>
 802a788:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802a78c:	6020      	str	r0, [r4, #0]
 802a78e:	4608      	mov	r0, r1
 802a790:	e7f5      	b.n	802a77e <__kernel_rem_pio2f+0x236>
 802a792:	1e74      	subs	r4, r6, #1
 802a794:	ab08      	add	r3, sp, #32
 802a796:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802a79a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802a79e:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802a7a2:	e783      	b.n	802a6ac <__kernel_rem_pio2f+0x164>
 802a7a4:	1e74      	subs	r4, r6, #1
 802a7a6:	ab08      	add	r3, sp, #32
 802a7a8:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802a7ac:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802a7b0:	e7f5      	b.n	802a79e <__kernel_rem_pio2f+0x256>
 802a7b2:	ab08      	add	r3, sp, #32
 802a7b4:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802a7b8:	f10c 3cff 	add.w	ip, ip, #4294967295
 802a7bc:	4301      	orrs	r1, r0
 802a7be:	e7ae      	b.n	802a71e <__kernel_rem_pio2f+0x1d6>
 802a7c0:	3001      	adds	r0, #1
 802a7c2:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802a7c6:	2f00      	cmp	r7, #0
 802a7c8:	d0fa      	beq.n	802a7c0 <__kernel_rem_pio2f+0x278>
 802a7ca:	9b06      	ldr	r3, [sp, #24]
 802a7cc:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802a7d0:	eb0d 0403 	add.w	r4, sp, r3
 802a7d4:	9b01      	ldr	r3, [sp, #4]
 802a7d6:	18f7      	adds	r7, r6, r3
 802a7d8:	ab1c      	add	r3, sp, #112	; 0x70
 802a7da:	f106 0c01 	add.w	ip, r6, #1
 802a7de:	3c4c      	subs	r4, #76	; 0x4c
 802a7e0:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802a7e4:	4430      	add	r0, r6
 802a7e6:	4560      	cmp	r0, ip
 802a7e8:	da04      	bge.n	802a7f4 <__kernel_rem_pio2f+0x2ac>
 802a7ea:	4606      	mov	r6, r0
 802a7ec:	e711      	b.n	802a612 <__kernel_rem_pio2f+0xca>
 802a7ee:	9c05      	ldr	r4, [sp, #20]
 802a7f0:	2001      	movs	r0, #1
 802a7f2:	e7e6      	b.n	802a7c2 <__kernel_rem_pio2f+0x27a>
 802a7f4:	9b04      	ldr	r3, [sp, #16]
 802a7f6:	f8dd e008 	ldr.w	lr, [sp, #8]
 802a7fa:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802a7fe:	9306      	str	r3, [sp, #24]
 802a800:	ee07 3a90 	vmov	s15, r3
 802a804:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a808:	2600      	movs	r6, #0
 802a80a:	ece7 7a01 	vstmia	r7!, {s15}
 802a80e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802a848 <__kernel_rem_pio2f+0x300>
 802a812:	46b9      	mov	r9, r7
 802a814:	455e      	cmp	r6, fp
 802a816:	dd04      	ble.n	802a822 <__kernel_rem_pio2f+0x2da>
 802a818:	ece4 7a01 	vstmia	r4!, {s15}
 802a81c:	f10c 0c01 	add.w	ip, ip, #1
 802a820:	e7e1      	b.n	802a7e6 <__kernel_rem_pio2f+0x29e>
 802a822:	ecfe 6a01 	vldmia	lr!, {s13}
 802a826:	ed39 7a01 	vldmdb	r9!, {s14}
 802a82a:	3601      	adds	r6, #1
 802a82c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a830:	e7f0      	b.n	802a814 <__kernel_rem_pio2f+0x2cc>
 802a832:	3c01      	subs	r4, #1
 802a834:	e777      	b.n	802a726 <__kernel_rem_pio2f+0x1de>
 802a836:	bf00      	nop
 802a838:	08043084 	.word	0x08043084
 802a83c:	08043058 	.word	0x08043058
 802a840:	43800000 	.word	0x43800000
 802a844:	3b800000 	.word	0x3b800000
 802a848:	00000000 	.word	0x00000000
 802a84c:	9b03      	ldr	r3, [sp, #12]
 802a84e:	eeb0 0a48 	vmov.f32	s0, s16
 802a852:	1a98      	subs	r0, r3, r2
 802a854:	f7ff fe12 	bl	802a47c <scalbnf>
 802a858:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802a840 <__kernel_rem_pio2f+0x2f8>
 802a85c:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802a860:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a864:	db19      	blt.n	802a89a <__kernel_rem_pio2f+0x352>
 802a866:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802a844 <__kernel_rem_pio2f+0x2fc>
 802a86a:	ee60 7a27 	vmul.f32	s15, s0, s15
 802a86e:	aa08      	add	r2, sp, #32
 802a870:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a874:	1c74      	adds	r4, r6, #1
 802a876:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a87a:	3508      	adds	r5, #8
 802a87c:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802a880:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802a884:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a888:	ee10 3a10 	vmov	r3, s0
 802a88c:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802a890:	ee17 3a90 	vmov	r3, s15
 802a894:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802a898:	e74b      	b.n	802a732 <__kernel_rem_pio2f+0x1ea>
 802a89a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802a89e:	aa08      	add	r2, sp, #32
 802a8a0:	ee10 3a10 	vmov	r3, s0
 802a8a4:	4634      	mov	r4, r6
 802a8a6:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802a8aa:	e742      	b.n	802a732 <__kernel_rem_pio2f+0x1ea>
 802a8ac:	a808      	add	r0, sp, #32
 802a8ae:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802a8b2:	9001      	str	r0, [sp, #4]
 802a8b4:	ee07 0a90 	vmov	s15, r0
 802a8b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802a8bc:	3b01      	subs	r3, #1
 802a8be:	ee67 7a80 	vmul.f32	s15, s15, s0
 802a8c2:	ee20 0a07 	vmul.f32	s0, s0, s14
 802a8c6:	ed62 7a01 	vstmdb	r2!, {s15}
 802a8ca:	e73f      	b.n	802a74c <__kernel_rem_pio2f+0x204>
 802a8cc:	ecf6 6a01 	vldmia	r6!, {s13}
 802a8d0:	ecb5 7a01 	vldmia	r5!, {s14}
 802a8d4:	eee6 7a87 	vfma.f32	s15, s13, s14
 802a8d8:	3001      	adds	r0, #1
 802a8da:	4550      	cmp	r0, sl
 802a8dc:	dc01      	bgt.n	802a8e2 <__kernel_rem_pio2f+0x39a>
 802a8de:	4290      	cmp	r0, r2
 802a8e0:	ddf4      	ble.n	802a8cc <__kernel_rem_pio2f+0x384>
 802a8e2:	a858      	add	r0, sp, #352	; 0x160
 802a8e4:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802a8e8:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802a8ec:	3b01      	subs	r3, #1
 802a8ee:	e731      	b.n	802a754 <__kernel_rem_pio2f+0x20c>
 802a8f0:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802a8f2:	2b02      	cmp	r3, #2
 802a8f4:	dc09      	bgt.n	802a90a <__kernel_rem_pio2f+0x3c2>
 802a8f6:	2b00      	cmp	r3, #0
 802a8f8:	dc2b      	bgt.n	802a952 <__kernel_rem_pio2f+0x40a>
 802a8fa:	d044      	beq.n	802a986 <__kernel_rem_pio2f+0x43e>
 802a8fc:	f009 0007 	and.w	r0, r9, #7
 802a900:	b059      	add	sp, #356	; 0x164
 802a902:	ecbd 8b04 	vpop	{d8-d9}
 802a906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a90a:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802a90c:	2b03      	cmp	r3, #3
 802a90e:	d1f5      	bne.n	802a8fc <__kernel_rem_pio2f+0x3b4>
 802a910:	aa30      	add	r2, sp, #192	; 0xc0
 802a912:	1f0b      	subs	r3, r1, #4
 802a914:	4413      	add	r3, r2
 802a916:	461a      	mov	r2, r3
 802a918:	4620      	mov	r0, r4
 802a91a:	2800      	cmp	r0, #0
 802a91c:	f1a2 0204 	sub.w	r2, r2, #4
 802a920:	dc52      	bgt.n	802a9c8 <__kernel_rem_pio2f+0x480>
 802a922:	4622      	mov	r2, r4
 802a924:	2a01      	cmp	r2, #1
 802a926:	f1a3 0304 	sub.w	r3, r3, #4
 802a92a:	dc5d      	bgt.n	802a9e8 <__kernel_rem_pio2f+0x4a0>
 802a92c:	ab30      	add	r3, sp, #192	; 0xc0
 802a92e:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802a848 <__kernel_rem_pio2f+0x300>
 802a932:	440b      	add	r3, r1
 802a934:	2c01      	cmp	r4, #1
 802a936:	dc67      	bgt.n	802aa08 <__kernel_rem_pio2f+0x4c0>
 802a938:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802a93c:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802a940:	2f00      	cmp	r7, #0
 802a942:	d167      	bne.n	802aa14 <__kernel_rem_pio2f+0x4cc>
 802a944:	edc8 6a00 	vstr	s13, [r8]
 802a948:	ed88 7a01 	vstr	s14, [r8, #4]
 802a94c:	edc8 7a02 	vstr	s15, [r8, #8]
 802a950:	e7d4      	b.n	802a8fc <__kernel_rem_pio2f+0x3b4>
 802a952:	ab30      	add	r3, sp, #192	; 0xc0
 802a954:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802a848 <__kernel_rem_pio2f+0x300>
 802a958:	440b      	add	r3, r1
 802a95a:	4622      	mov	r2, r4
 802a95c:	2a00      	cmp	r2, #0
 802a95e:	da24      	bge.n	802a9aa <__kernel_rem_pio2f+0x462>
 802a960:	b34f      	cbz	r7, 802a9b6 <__kernel_rem_pio2f+0x46e>
 802a962:	eef1 7a47 	vneg.f32	s15, s14
 802a966:	edc8 7a00 	vstr	s15, [r8]
 802a96a:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802a96e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a972:	aa31      	add	r2, sp, #196	; 0xc4
 802a974:	2301      	movs	r3, #1
 802a976:	429c      	cmp	r4, r3
 802a978:	da20      	bge.n	802a9bc <__kernel_rem_pio2f+0x474>
 802a97a:	b10f      	cbz	r7, 802a980 <__kernel_rem_pio2f+0x438>
 802a97c:	eef1 7a67 	vneg.f32	s15, s15
 802a980:	edc8 7a01 	vstr	s15, [r8, #4]
 802a984:	e7ba      	b.n	802a8fc <__kernel_rem_pio2f+0x3b4>
 802a986:	ab30      	add	r3, sp, #192	; 0xc0
 802a988:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802a848 <__kernel_rem_pio2f+0x300>
 802a98c:	440b      	add	r3, r1
 802a98e:	2c00      	cmp	r4, #0
 802a990:	da05      	bge.n	802a99e <__kernel_rem_pio2f+0x456>
 802a992:	b10f      	cbz	r7, 802a998 <__kernel_rem_pio2f+0x450>
 802a994:	eef1 7a67 	vneg.f32	s15, s15
 802a998:	edc8 7a00 	vstr	s15, [r8]
 802a99c:	e7ae      	b.n	802a8fc <__kernel_rem_pio2f+0x3b4>
 802a99e:	ed33 7a01 	vldmdb	r3!, {s14}
 802a9a2:	3c01      	subs	r4, #1
 802a9a4:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a9a8:	e7f1      	b.n	802a98e <__kernel_rem_pio2f+0x446>
 802a9aa:	ed73 7a01 	vldmdb	r3!, {s15}
 802a9ae:	3a01      	subs	r2, #1
 802a9b0:	ee37 7a27 	vadd.f32	s14, s14, s15
 802a9b4:	e7d2      	b.n	802a95c <__kernel_rem_pio2f+0x414>
 802a9b6:	eef0 7a47 	vmov.f32	s15, s14
 802a9ba:	e7d4      	b.n	802a966 <__kernel_rem_pio2f+0x41e>
 802a9bc:	ecb2 7a01 	vldmia	r2!, {s14}
 802a9c0:	3301      	adds	r3, #1
 802a9c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802a9c6:	e7d6      	b.n	802a976 <__kernel_rem_pio2f+0x42e>
 802a9c8:	edd2 7a00 	vldr	s15, [r2]
 802a9cc:	edd2 6a01 	vldr	s13, [r2, #4]
 802a9d0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802a9d4:	3801      	subs	r0, #1
 802a9d6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a9da:	ed82 7a00 	vstr	s14, [r2]
 802a9de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802a9e2:	edc2 7a01 	vstr	s15, [r2, #4]
 802a9e6:	e798      	b.n	802a91a <__kernel_rem_pio2f+0x3d2>
 802a9e8:	edd3 7a00 	vldr	s15, [r3]
 802a9ec:	edd3 6a01 	vldr	s13, [r3, #4]
 802a9f0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802a9f4:	3a01      	subs	r2, #1
 802a9f6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a9fa:	ed83 7a00 	vstr	s14, [r3]
 802a9fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802aa02:	edc3 7a01 	vstr	s15, [r3, #4]
 802aa06:	e78d      	b.n	802a924 <__kernel_rem_pio2f+0x3dc>
 802aa08:	ed33 7a01 	vldmdb	r3!, {s14}
 802aa0c:	3c01      	subs	r4, #1
 802aa0e:	ee77 7a87 	vadd.f32	s15, s15, s14
 802aa12:	e78f      	b.n	802a934 <__kernel_rem_pio2f+0x3ec>
 802aa14:	eef1 6a66 	vneg.f32	s13, s13
 802aa18:	eeb1 7a47 	vneg.f32	s14, s14
 802aa1c:	edc8 6a00 	vstr	s13, [r8]
 802aa20:	ed88 7a01 	vstr	s14, [r8, #4]
 802aa24:	eef1 7a67 	vneg.f32	s15, s15
 802aa28:	e790      	b.n	802a94c <__kernel_rem_pio2f+0x404>
 802aa2a:	bf00      	nop

0802aa2c <abort>:
 802aa2c:	b508      	push	{r3, lr}
 802aa2e:	2006      	movs	r0, #6
 802aa30:	f000 fa3a 	bl	802aea8 <raise>
 802aa34:	2001      	movs	r0, #1
 802aa36:	f7d7 fbb9 	bl	80021ac <_exit>
	...

0802aa3c <__assert_func>:
 802aa3c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802aa3e:	4614      	mov	r4, r2
 802aa40:	461a      	mov	r2, r3
 802aa42:	4b09      	ldr	r3, [pc, #36]	; (802aa68 <__assert_func+0x2c>)
 802aa44:	681b      	ldr	r3, [r3, #0]
 802aa46:	4605      	mov	r5, r0
 802aa48:	68d8      	ldr	r0, [r3, #12]
 802aa4a:	b14c      	cbz	r4, 802aa60 <__assert_func+0x24>
 802aa4c:	4b07      	ldr	r3, [pc, #28]	; (802aa6c <__assert_func+0x30>)
 802aa4e:	9100      	str	r1, [sp, #0]
 802aa50:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802aa54:	4906      	ldr	r1, [pc, #24]	; (802aa70 <__assert_func+0x34>)
 802aa56:	462b      	mov	r3, r5
 802aa58:	f000 f982 	bl	802ad60 <fiprintf>
 802aa5c:	f7ff ffe6 	bl	802aa2c <abort>
 802aa60:	4b04      	ldr	r3, [pc, #16]	; (802aa74 <__assert_func+0x38>)
 802aa62:	461c      	mov	r4, r3
 802aa64:	e7f3      	b.n	802aa4e <__assert_func+0x12>
 802aa66:	bf00      	nop
 802aa68:	20000160 	.word	0x20000160
 802aa6c:	08043090 	.word	0x08043090
 802aa70:	0804309d 	.word	0x0804309d
 802aa74:	080430cb 	.word	0x080430cb

0802aa78 <atexit>:
 802aa78:	2300      	movs	r3, #0
 802aa7a:	4601      	mov	r1, r0
 802aa7c:	461a      	mov	r2, r3
 802aa7e:	4618      	mov	r0, r3
 802aa80:	f000 bb16 	b.w	802b0b0 <__register_exitproc>

0802aa84 <malloc>:
 802aa84:	4b02      	ldr	r3, [pc, #8]	; (802aa90 <malloc+0xc>)
 802aa86:	4601      	mov	r1, r0
 802aa88:	6818      	ldr	r0, [r3, #0]
 802aa8a:	f000 b82b 	b.w	802aae4 <_malloc_r>
 802aa8e:	bf00      	nop
 802aa90:	20000160 	.word	0x20000160

0802aa94 <free>:
 802aa94:	4b02      	ldr	r3, [pc, #8]	; (802aaa0 <free+0xc>)
 802aa96:	4601      	mov	r1, r0
 802aa98:	6818      	ldr	r0, [r3, #0]
 802aa9a:	f000 bb67 	b.w	802b16c <_free_r>
 802aa9e:	bf00      	nop
 802aaa0:	20000160 	.word	0x20000160

0802aaa4 <sbrk_aligned>:
 802aaa4:	b570      	push	{r4, r5, r6, lr}
 802aaa6:	4e0e      	ldr	r6, [pc, #56]	; (802aae0 <sbrk_aligned+0x3c>)
 802aaa8:	460c      	mov	r4, r1
 802aaaa:	6831      	ldr	r1, [r6, #0]
 802aaac:	4605      	mov	r5, r0
 802aaae:	b911      	cbnz	r1, 802aab6 <sbrk_aligned+0x12>
 802aab0:	f000 faa0 	bl	802aff4 <_sbrk_r>
 802aab4:	6030      	str	r0, [r6, #0]
 802aab6:	4621      	mov	r1, r4
 802aab8:	4628      	mov	r0, r5
 802aaba:	f000 fa9b 	bl	802aff4 <_sbrk_r>
 802aabe:	1c43      	adds	r3, r0, #1
 802aac0:	d00a      	beq.n	802aad8 <sbrk_aligned+0x34>
 802aac2:	1cc4      	adds	r4, r0, #3
 802aac4:	f024 0403 	bic.w	r4, r4, #3
 802aac8:	42a0      	cmp	r0, r4
 802aaca:	d007      	beq.n	802aadc <sbrk_aligned+0x38>
 802aacc:	1a21      	subs	r1, r4, r0
 802aace:	4628      	mov	r0, r5
 802aad0:	f000 fa90 	bl	802aff4 <_sbrk_r>
 802aad4:	3001      	adds	r0, #1
 802aad6:	d101      	bne.n	802aadc <sbrk_aligned+0x38>
 802aad8:	f04f 34ff 	mov.w	r4, #4294967295
 802aadc:	4620      	mov	r0, r4
 802aade:	bd70      	pop	{r4, r5, r6, pc}
 802aae0:	2001370c 	.word	0x2001370c

0802aae4 <_malloc_r>:
 802aae4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802aae8:	1ccd      	adds	r5, r1, #3
 802aaea:	f025 0503 	bic.w	r5, r5, #3
 802aaee:	3508      	adds	r5, #8
 802aaf0:	2d0c      	cmp	r5, #12
 802aaf2:	bf38      	it	cc
 802aaf4:	250c      	movcc	r5, #12
 802aaf6:	2d00      	cmp	r5, #0
 802aaf8:	4607      	mov	r7, r0
 802aafa:	db01      	blt.n	802ab00 <_malloc_r+0x1c>
 802aafc:	42a9      	cmp	r1, r5
 802aafe:	d905      	bls.n	802ab0c <_malloc_r+0x28>
 802ab00:	230c      	movs	r3, #12
 802ab02:	603b      	str	r3, [r7, #0]
 802ab04:	2600      	movs	r6, #0
 802ab06:	4630      	mov	r0, r6
 802ab08:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ab0c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802abe0 <_malloc_r+0xfc>
 802ab10:	f000 f868 	bl	802abe4 <__malloc_lock>
 802ab14:	f8d8 3000 	ldr.w	r3, [r8]
 802ab18:	461c      	mov	r4, r3
 802ab1a:	bb5c      	cbnz	r4, 802ab74 <_malloc_r+0x90>
 802ab1c:	4629      	mov	r1, r5
 802ab1e:	4638      	mov	r0, r7
 802ab20:	f7ff ffc0 	bl	802aaa4 <sbrk_aligned>
 802ab24:	1c43      	adds	r3, r0, #1
 802ab26:	4604      	mov	r4, r0
 802ab28:	d155      	bne.n	802abd6 <_malloc_r+0xf2>
 802ab2a:	f8d8 4000 	ldr.w	r4, [r8]
 802ab2e:	4626      	mov	r6, r4
 802ab30:	2e00      	cmp	r6, #0
 802ab32:	d145      	bne.n	802abc0 <_malloc_r+0xdc>
 802ab34:	2c00      	cmp	r4, #0
 802ab36:	d048      	beq.n	802abca <_malloc_r+0xe6>
 802ab38:	6823      	ldr	r3, [r4, #0]
 802ab3a:	4631      	mov	r1, r6
 802ab3c:	4638      	mov	r0, r7
 802ab3e:	eb04 0903 	add.w	r9, r4, r3
 802ab42:	f000 fa57 	bl	802aff4 <_sbrk_r>
 802ab46:	4581      	cmp	r9, r0
 802ab48:	d13f      	bne.n	802abca <_malloc_r+0xe6>
 802ab4a:	6821      	ldr	r1, [r4, #0]
 802ab4c:	1a6d      	subs	r5, r5, r1
 802ab4e:	4629      	mov	r1, r5
 802ab50:	4638      	mov	r0, r7
 802ab52:	f7ff ffa7 	bl	802aaa4 <sbrk_aligned>
 802ab56:	3001      	adds	r0, #1
 802ab58:	d037      	beq.n	802abca <_malloc_r+0xe6>
 802ab5a:	6823      	ldr	r3, [r4, #0]
 802ab5c:	442b      	add	r3, r5
 802ab5e:	6023      	str	r3, [r4, #0]
 802ab60:	f8d8 3000 	ldr.w	r3, [r8]
 802ab64:	2b00      	cmp	r3, #0
 802ab66:	d038      	beq.n	802abda <_malloc_r+0xf6>
 802ab68:	685a      	ldr	r2, [r3, #4]
 802ab6a:	42a2      	cmp	r2, r4
 802ab6c:	d12b      	bne.n	802abc6 <_malloc_r+0xe2>
 802ab6e:	2200      	movs	r2, #0
 802ab70:	605a      	str	r2, [r3, #4]
 802ab72:	e00f      	b.n	802ab94 <_malloc_r+0xb0>
 802ab74:	6822      	ldr	r2, [r4, #0]
 802ab76:	1b52      	subs	r2, r2, r5
 802ab78:	d41f      	bmi.n	802abba <_malloc_r+0xd6>
 802ab7a:	2a0b      	cmp	r2, #11
 802ab7c:	d917      	bls.n	802abae <_malloc_r+0xca>
 802ab7e:	1961      	adds	r1, r4, r5
 802ab80:	42a3      	cmp	r3, r4
 802ab82:	6025      	str	r5, [r4, #0]
 802ab84:	bf18      	it	ne
 802ab86:	6059      	strne	r1, [r3, #4]
 802ab88:	6863      	ldr	r3, [r4, #4]
 802ab8a:	bf08      	it	eq
 802ab8c:	f8c8 1000 	streq.w	r1, [r8]
 802ab90:	5162      	str	r2, [r4, r5]
 802ab92:	604b      	str	r3, [r1, #4]
 802ab94:	4638      	mov	r0, r7
 802ab96:	f104 060b 	add.w	r6, r4, #11
 802ab9a:	f000 f829 	bl	802abf0 <__malloc_unlock>
 802ab9e:	f026 0607 	bic.w	r6, r6, #7
 802aba2:	1d23      	adds	r3, r4, #4
 802aba4:	1af2      	subs	r2, r6, r3
 802aba6:	d0ae      	beq.n	802ab06 <_malloc_r+0x22>
 802aba8:	1b9b      	subs	r3, r3, r6
 802abaa:	50a3      	str	r3, [r4, r2]
 802abac:	e7ab      	b.n	802ab06 <_malloc_r+0x22>
 802abae:	42a3      	cmp	r3, r4
 802abb0:	6862      	ldr	r2, [r4, #4]
 802abb2:	d1dd      	bne.n	802ab70 <_malloc_r+0x8c>
 802abb4:	f8c8 2000 	str.w	r2, [r8]
 802abb8:	e7ec      	b.n	802ab94 <_malloc_r+0xb0>
 802abba:	4623      	mov	r3, r4
 802abbc:	6864      	ldr	r4, [r4, #4]
 802abbe:	e7ac      	b.n	802ab1a <_malloc_r+0x36>
 802abc0:	4634      	mov	r4, r6
 802abc2:	6876      	ldr	r6, [r6, #4]
 802abc4:	e7b4      	b.n	802ab30 <_malloc_r+0x4c>
 802abc6:	4613      	mov	r3, r2
 802abc8:	e7cc      	b.n	802ab64 <_malloc_r+0x80>
 802abca:	230c      	movs	r3, #12
 802abcc:	603b      	str	r3, [r7, #0]
 802abce:	4638      	mov	r0, r7
 802abd0:	f000 f80e 	bl	802abf0 <__malloc_unlock>
 802abd4:	e797      	b.n	802ab06 <_malloc_r+0x22>
 802abd6:	6025      	str	r5, [r4, #0]
 802abd8:	e7dc      	b.n	802ab94 <_malloc_r+0xb0>
 802abda:	605b      	str	r3, [r3, #4]
 802abdc:	deff      	udf	#255	; 0xff
 802abde:	bf00      	nop
 802abe0:	20013708 	.word	0x20013708

0802abe4 <__malloc_lock>:
 802abe4:	4801      	ldr	r0, [pc, #4]	; (802abec <__malloc_lock+0x8>)
 802abe6:	f000 ba52 	b.w	802b08e <__retarget_lock_acquire_recursive>
 802abea:	bf00      	nop
 802abec:	20013851 	.word	0x20013851

0802abf0 <__malloc_unlock>:
 802abf0:	4801      	ldr	r0, [pc, #4]	; (802abf8 <__malloc_unlock+0x8>)
 802abf2:	f000 ba4d 	b.w	802b090 <__retarget_lock_release_recursive>
 802abf6:	bf00      	nop
 802abf8:	20013851 	.word	0x20013851

0802abfc <__cxa_atexit>:
 802abfc:	b510      	push	{r4, lr}
 802abfe:	4c05      	ldr	r4, [pc, #20]	; (802ac14 <__cxa_atexit+0x18>)
 802ac00:	4613      	mov	r3, r2
 802ac02:	b12c      	cbz	r4, 802ac10 <__cxa_atexit+0x14>
 802ac04:	460a      	mov	r2, r1
 802ac06:	4601      	mov	r1, r0
 802ac08:	2002      	movs	r0, #2
 802ac0a:	f000 fa51 	bl	802b0b0 <__register_exitproc>
 802ac0e:	bd10      	pop	{r4, pc}
 802ac10:	4620      	mov	r0, r4
 802ac12:	e7fc      	b.n	802ac0e <__cxa_atexit+0x12>
 802ac14:	0802b0b1 	.word	0x0802b0b1

0802ac18 <std>:
 802ac18:	2300      	movs	r3, #0
 802ac1a:	b510      	push	{r4, lr}
 802ac1c:	4604      	mov	r4, r0
 802ac1e:	e9c0 3300 	strd	r3, r3, [r0]
 802ac22:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802ac26:	6083      	str	r3, [r0, #8]
 802ac28:	8181      	strh	r1, [r0, #12]
 802ac2a:	6643      	str	r3, [r0, #100]	; 0x64
 802ac2c:	81c2      	strh	r2, [r0, #14]
 802ac2e:	6183      	str	r3, [r0, #24]
 802ac30:	4619      	mov	r1, r3
 802ac32:	2208      	movs	r2, #8
 802ac34:	305c      	adds	r0, #92	; 0x5c
 802ac36:	f000 f906 	bl	802ae46 <memset>
 802ac3a:	4b0d      	ldr	r3, [pc, #52]	; (802ac70 <std+0x58>)
 802ac3c:	6263      	str	r3, [r4, #36]	; 0x24
 802ac3e:	4b0d      	ldr	r3, [pc, #52]	; (802ac74 <std+0x5c>)
 802ac40:	62a3      	str	r3, [r4, #40]	; 0x28
 802ac42:	4b0d      	ldr	r3, [pc, #52]	; (802ac78 <std+0x60>)
 802ac44:	62e3      	str	r3, [r4, #44]	; 0x2c
 802ac46:	4b0d      	ldr	r3, [pc, #52]	; (802ac7c <std+0x64>)
 802ac48:	6323      	str	r3, [r4, #48]	; 0x30
 802ac4a:	4b0d      	ldr	r3, [pc, #52]	; (802ac80 <std+0x68>)
 802ac4c:	6224      	str	r4, [r4, #32]
 802ac4e:	429c      	cmp	r4, r3
 802ac50:	d006      	beq.n	802ac60 <std+0x48>
 802ac52:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802ac56:	4294      	cmp	r4, r2
 802ac58:	d002      	beq.n	802ac60 <std+0x48>
 802ac5a:	33d0      	adds	r3, #208	; 0xd0
 802ac5c:	429c      	cmp	r4, r3
 802ac5e:	d105      	bne.n	802ac6c <std+0x54>
 802ac60:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802ac64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ac68:	f000 ba10 	b.w	802b08c <__retarget_lock_init_recursive>
 802ac6c:	bd10      	pop	{r4, pc}
 802ac6e:	bf00      	nop
 802ac70:	0802adc1 	.word	0x0802adc1
 802ac74:	0802ade3 	.word	0x0802ade3
 802ac78:	0802ae1b 	.word	0x0802ae1b
 802ac7c:	0802ae3f 	.word	0x0802ae3f
 802ac80:	20013710 	.word	0x20013710

0802ac84 <stdio_exit_handler>:
 802ac84:	4a02      	ldr	r2, [pc, #8]	; (802ac90 <stdio_exit_handler+0xc>)
 802ac86:	4903      	ldr	r1, [pc, #12]	; (802ac94 <stdio_exit_handler+0x10>)
 802ac88:	4803      	ldr	r0, [pc, #12]	; (802ac98 <stdio_exit_handler+0x14>)
 802ac8a:	f000 b87b 	b.w	802ad84 <_fwalk_sglue>
 802ac8e:	bf00      	nop
 802ac90:	20000108 	.word	0x20000108
 802ac94:	0802b8b9 	.word	0x0802b8b9
 802ac98:	20000114 	.word	0x20000114

0802ac9c <cleanup_stdio>:
 802ac9c:	6841      	ldr	r1, [r0, #4]
 802ac9e:	4b0c      	ldr	r3, [pc, #48]	; (802acd0 <cleanup_stdio+0x34>)
 802aca0:	4299      	cmp	r1, r3
 802aca2:	b510      	push	{r4, lr}
 802aca4:	4604      	mov	r4, r0
 802aca6:	d001      	beq.n	802acac <cleanup_stdio+0x10>
 802aca8:	f000 fe06 	bl	802b8b8 <_fflush_r>
 802acac:	68a1      	ldr	r1, [r4, #8]
 802acae:	4b09      	ldr	r3, [pc, #36]	; (802acd4 <cleanup_stdio+0x38>)
 802acb0:	4299      	cmp	r1, r3
 802acb2:	d002      	beq.n	802acba <cleanup_stdio+0x1e>
 802acb4:	4620      	mov	r0, r4
 802acb6:	f000 fdff 	bl	802b8b8 <_fflush_r>
 802acba:	68e1      	ldr	r1, [r4, #12]
 802acbc:	4b06      	ldr	r3, [pc, #24]	; (802acd8 <cleanup_stdio+0x3c>)
 802acbe:	4299      	cmp	r1, r3
 802acc0:	d004      	beq.n	802accc <cleanup_stdio+0x30>
 802acc2:	4620      	mov	r0, r4
 802acc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802acc8:	f000 bdf6 	b.w	802b8b8 <_fflush_r>
 802accc:	bd10      	pop	{r4, pc}
 802acce:	bf00      	nop
 802acd0:	20013710 	.word	0x20013710
 802acd4:	20013778 	.word	0x20013778
 802acd8:	200137e0 	.word	0x200137e0

0802acdc <global_stdio_init.part.0>:
 802acdc:	b510      	push	{r4, lr}
 802acde:	4b0b      	ldr	r3, [pc, #44]	; (802ad0c <global_stdio_init.part.0+0x30>)
 802ace0:	4c0b      	ldr	r4, [pc, #44]	; (802ad10 <global_stdio_init.part.0+0x34>)
 802ace2:	4a0c      	ldr	r2, [pc, #48]	; (802ad14 <global_stdio_init.part.0+0x38>)
 802ace4:	601a      	str	r2, [r3, #0]
 802ace6:	4620      	mov	r0, r4
 802ace8:	2200      	movs	r2, #0
 802acea:	2104      	movs	r1, #4
 802acec:	f7ff ff94 	bl	802ac18 <std>
 802acf0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802acf4:	2201      	movs	r2, #1
 802acf6:	2109      	movs	r1, #9
 802acf8:	f7ff ff8e 	bl	802ac18 <std>
 802acfc:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802ad00:	2202      	movs	r2, #2
 802ad02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ad06:	2112      	movs	r1, #18
 802ad08:	f7ff bf86 	b.w	802ac18 <std>
 802ad0c:	20013848 	.word	0x20013848
 802ad10:	20013710 	.word	0x20013710
 802ad14:	0802ac85 	.word	0x0802ac85

0802ad18 <__sfp_lock_acquire>:
 802ad18:	4801      	ldr	r0, [pc, #4]	; (802ad20 <__sfp_lock_acquire+0x8>)
 802ad1a:	f000 b9b8 	b.w	802b08e <__retarget_lock_acquire_recursive>
 802ad1e:	bf00      	nop
 802ad20:	20013852 	.word	0x20013852

0802ad24 <__sfp_lock_release>:
 802ad24:	4801      	ldr	r0, [pc, #4]	; (802ad2c <__sfp_lock_release+0x8>)
 802ad26:	f000 b9b3 	b.w	802b090 <__retarget_lock_release_recursive>
 802ad2a:	bf00      	nop
 802ad2c:	20013852 	.word	0x20013852

0802ad30 <__sinit>:
 802ad30:	b510      	push	{r4, lr}
 802ad32:	4604      	mov	r4, r0
 802ad34:	f7ff fff0 	bl	802ad18 <__sfp_lock_acquire>
 802ad38:	6a23      	ldr	r3, [r4, #32]
 802ad3a:	b11b      	cbz	r3, 802ad44 <__sinit+0x14>
 802ad3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ad40:	f7ff bff0 	b.w	802ad24 <__sfp_lock_release>
 802ad44:	4b04      	ldr	r3, [pc, #16]	; (802ad58 <__sinit+0x28>)
 802ad46:	6223      	str	r3, [r4, #32]
 802ad48:	4b04      	ldr	r3, [pc, #16]	; (802ad5c <__sinit+0x2c>)
 802ad4a:	681b      	ldr	r3, [r3, #0]
 802ad4c:	2b00      	cmp	r3, #0
 802ad4e:	d1f5      	bne.n	802ad3c <__sinit+0xc>
 802ad50:	f7ff ffc4 	bl	802acdc <global_stdio_init.part.0>
 802ad54:	e7f2      	b.n	802ad3c <__sinit+0xc>
 802ad56:	bf00      	nop
 802ad58:	0802ac9d 	.word	0x0802ac9d
 802ad5c:	20013848 	.word	0x20013848

0802ad60 <fiprintf>:
 802ad60:	b40e      	push	{r1, r2, r3}
 802ad62:	b503      	push	{r0, r1, lr}
 802ad64:	4601      	mov	r1, r0
 802ad66:	ab03      	add	r3, sp, #12
 802ad68:	4805      	ldr	r0, [pc, #20]	; (802ad80 <fiprintf+0x20>)
 802ad6a:	f853 2b04 	ldr.w	r2, [r3], #4
 802ad6e:	6800      	ldr	r0, [r0, #0]
 802ad70:	9301      	str	r3, [sp, #4]
 802ad72:	f000 fa71 	bl	802b258 <_vfiprintf_r>
 802ad76:	b002      	add	sp, #8
 802ad78:	f85d eb04 	ldr.w	lr, [sp], #4
 802ad7c:	b003      	add	sp, #12
 802ad7e:	4770      	bx	lr
 802ad80:	20000160 	.word	0x20000160

0802ad84 <_fwalk_sglue>:
 802ad84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ad88:	4607      	mov	r7, r0
 802ad8a:	4688      	mov	r8, r1
 802ad8c:	4614      	mov	r4, r2
 802ad8e:	2600      	movs	r6, #0
 802ad90:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802ad94:	f1b9 0901 	subs.w	r9, r9, #1
 802ad98:	d505      	bpl.n	802ada6 <_fwalk_sglue+0x22>
 802ad9a:	6824      	ldr	r4, [r4, #0]
 802ad9c:	2c00      	cmp	r4, #0
 802ad9e:	d1f7      	bne.n	802ad90 <_fwalk_sglue+0xc>
 802ada0:	4630      	mov	r0, r6
 802ada2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ada6:	89ab      	ldrh	r3, [r5, #12]
 802ada8:	2b01      	cmp	r3, #1
 802adaa:	d907      	bls.n	802adbc <_fwalk_sglue+0x38>
 802adac:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802adb0:	3301      	adds	r3, #1
 802adb2:	d003      	beq.n	802adbc <_fwalk_sglue+0x38>
 802adb4:	4629      	mov	r1, r5
 802adb6:	4638      	mov	r0, r7
 802adb8:	47c0      	blx	r8
 802adba:	4306      	orrs	r6, r0
 802adbc:	3568      	adds	r5, #104	; 0x68
 802adbe:	e7e9      	b.n	802ad94 <_fwalk_sglue+0x10>

0802adc0 <__sread>:
 802adc0:	b510      	push	{r4, lr}
 802adc2:	460c      	mov	r4, r1
 802adc4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802adc8:	f000 f8ee 	bl	802afa8 <_read_r>
 802adcc:	2800      	cmp	r0, #0
 802adce:	bfab      	itete	ge
 802add0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802add2:	89a3      	ldrhlt	r3, [r4, #12]
 802add4:	181b      	addge	r3, r3, r0
 802add6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802adda:	bfac      	ite	ge
 802addc:	6563      	strge	r3, [r4, #84]	; 0x54
 802adde:	81a3      	strhlt	r3, [r4, #12]
 802ade0:	bd10      	pop	{r4, pc}

0802ade2 <__swrite>:
 802ade2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802ade6:	461f      	mov	r7, r3
 802ade8:	898b      	ldrh	r3, [r1, #12]
 802adea:	05db      	lsls	r3, r3, #23
 802adec:	4605      	mov	r5, r0
 802adee:	460c      	mov	r4, r1
 802adf0:	4616      	mov	r6, r2
 802adf2:	d505      	bpl.n	802ae00 <__swrite+0x1e>
 802adf4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802adf8:	2302      	movs	r3, #2
 802adfa:	2200      	movs	r2, #0
 802adfc:	f000 f8c2 	bl	802af84 <_lseek_r>
 802ae00:	89a3      	ldrh	r3, [r4, #12]
 802ae02:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802ae06:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802ae0a:	81a3      	strh	r3, [r4, #12]
 802ae0c:	4632      	mov	r2, r6
 802ae0e:	463b      	mov	r3, r7
 802ae10:	4628      	mov	r0, r5
 802ae12:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802ae16:	f000 b8fd 	b.w	802b014 <_write_r>

0802ae1a <__sseek>:
 802ae1a:	b510      	push	{r4, lr}
 802ae1c:	460c      	mov	r4, r1
 802ae1e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ae22:	f000 f8af 	bl	802af84 <_lseek_r>
 802ae26:	1c43      	adds	r3, r0, #1
 802ae28:	89a3      	ldrh	r3, [r4, #12]
 802ae2a:	bf15      	itete	ne
 802ae2c:	6560      	strne	r0, [r4, #84]	; 0x54
 802ae2e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802ae32:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802ae36:	81a3      	strheq	r3, [r4, #12]
 802ae38:	bf18      	it	ne
 802ae3a:	81a3      	strhne	r3, [r4, #12]
 802ae3c:	bd10      	pop	{r4, pc}

0802ae3e <__sclose>:
 802ae3e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ae42:	f000 b839 	b.w	802aeb8 <_close_r>

0802ae46 <memset>:
 802ae46:	4402      	add	r2, r0
 802ae48:	4603      	mov	r3, r0
 802ae4a:	4293      	cmp	r3, r2
 802ae4c:	d100      	bne.n	802ae50 <memset+0xa>
 802ae4e:	4770      	bx	lr
 802ae50:	f803 1b01 	strb.w	r1, [r3], #1
 802ae54:	e7f9      	b.n	802ae4a <memset+0x4>

0802ae56 <_raise_r>:
 802ae56:	291f      	cmp	r1, #31
 802ae58:	b538      	push	{r3, r4, r5, lr}
 802ae5a:	4604      	mov	r4, r0
 802ae5c:	460d      	mov	r5, r1
 802ae5e:	d904      	bls.n	802ae6a <_raise_r+0x14>
 802ae60:	2316      	movs	r3, #22
 802ae62:	6003      	str	r3, [r0, #0]
 802ae64:	f04f 30ff 	mov.w	r0, #4294967295
 802ae68:	bd38      	pop	{r3, r4, r5, pc}
 802ae6a:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802ae6c:	b112      	cbz	r2, 802ae74 <_raise_r+0x1e>
 802ae6e:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802ae72:	b94b      	cbnz	r3, 802ae88 <_raise_r+0x32>
 802ae74:	4620      	mov	r0, r4
 802ae76:	f000 f8bb 	bl	802aff0 <_getpid_r>
 802ae7a:	462a      	mov	r2, r5
 802ae7c:	4601      	mov	r1, r0
 802ae7e:	4620      	mov	r0, r4
 802ae80:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802ae84:	f000 b8a2 	b.w	802afcc <_kill_r>
 802ae88:	2b01      	cmp	r3, #1
 802ae8a:	d00a      	beq.n	802aea2 <_raise_r+0x4c>
 802ae8c:	1c59      	adds	r1, r3, #1
 802ae8e:	d103      	bne.n	802ae98 <_raise_r+0x42>
 802ae90:	2316      	movs	r3, #22
 802ae92:	6003      	str	r3, [r0, #0]
 802ae94:	2001      	movs	r0, #1
 802ae96:	e7e7      	b.n	802ae68 <_raise_r+0x12>
 802ae98:	2400      	movs	r4, #0
 802ae9a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802ae9e:	4628      	mov	r0, r5
 802aea0:	4798      	blx	r3
 802aea2:	2000      	movs	r0, #0
 802aea4:	e7e0      	b.n	802ae68 <_raise_r+0x12>
	...

0802aea8 <raise>:
 802aea8:	4b02      	ldr	r3, [pc, #8]	; (802aeb4 <raise+0xc>)
 802aeaa:	4601      	mov	r1, r0
 802aeac:	6818      	ldr	r0, [r3, #0]
 802aeae:	f7ff bfd2 	b.w	802ae56 <_raise_r>
 802aeb2:	bf00      	nop
 802aeb4:	20000160 	.word	0x20000160

0802aeb8 <_close_r>:
 802aeb8:	b538      	push	{r3, r4, r5, lr}
 802aeba:	4d06      	ldr	r5, [pc, #24]	; (802aed4 <_close_r+0x1c>)
 802aebc:	2300      	movs	r3, #0
 802aebe:	4604      	mov	r4, r0
 802aec0:	4608      	mov	r0, r1
 802aec2:	602b      	str	r3, [r5, #0]
 802aec4:	f7d7 f994 	bl	80021f0 <_close>
 802aec8:	1c43      	adds	r3, r0, #1
 802aeca:	d102      	bne.n	802aed2 <_close_r+0x1a>
 802aecc:	682b      	ldr	r3, [r5, #0]
 802aece:	b103      	cbz	r3, 802aed2 <_close_r+0x1a>
 802aed0:	6023      	str	r3, [r4, #0]
 802aed2:	bd38      	pop	{r3, r4, r5, pc}
 802aed4:	2001384c 	.word	0x2001384c

0802aed8 <_reclaim_reent>:
 802aed8:	4b29      	ldr	r3, [pc, #164]	; (802af80 <_reclaim_reent+0xa8>)
 802aeda:	681b      	ldr	r3, [r3, #0]
 802aedc:	4283      	cmp	r3, r0
 802aede:	b570      	push	{r4, r5, r6, lr}
 802aee0:	4604      	mov	r4, r0
 802aee2:	d04b      	beq.n	802af7c <_reclaim_reent+0xa4>
 802aee4:	69c3      	ldr	r3, [r0, #28]
 802aee6:	b143      	cbz	r3, 802aefa <_reclaim_reent+0x22>
 802aee8:	68db      	ldr	r3, [r3, #12]
 802aeea:	2b00      	cmp	r3, #0
 802aeec:	d144      	bne.n	802af78 <_reclaim_reent+0xa0>
 802aeee:	69e3      	ldr	r3, [r4, #28]
 802aef0:	6819      	ldr	r1, [r3, #0]
 802aef2:	b111      	cbz	r1, 802aefa <_reclaim_reent+0x22>
 802aef4:	4620      	mov	r0, r4
 802aef6:	f000 f939 	bl	802b16c <_free_r>
 802aefa:	6961      	ldr	r1, [r4, #20]
 802aefc:	b111      	cbz	r1, 802af04 <_reclaim_reent+0x2c>
 802aefe:	4620      	mov	r0, r4
 802af00:	f000 f934 	bl	802b16c <_free_r>
 802af04:	69e1      	ldr	r1, [r4, #28]
 802af06:	b111      	cbz	r1, 802af0e <_reclaim_reent+0x36>
 802af08:	4620      	mov	r0, r4
 802af0a:	f000 f92f 	bl	802b16c <_free_r>
 802af0e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802af10:	b111      	cbz	r1, 802af18 <_reclaim_reent+0x40>
 802af12:	4620      	mov	r0, r4
 802af14:	f000 f92a 	bl	802b16c <_free_r>
 802af18:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802af1a:	b111      	cbz	r1, 802af22 <_reclaim_reent+0x4a>
 802af1c:	4620      	mov	r0, r4
 802af1e:	f000 f925 	bl	802b16c <_free_r>
 802af22:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802af24:	b111      	cbz	r1, 802af2c <_reclaim_reent+0x54>
 802af26:	4620      	mov	r0, r4
 802af28:	f000 f920 	bl	802b16c <_free_r>
 802af2c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802af2e:	b111      	cbz	r1, 802af36 <_reclaim_reent+0x5e>
 802af30:	4620      	mov	r0, r4
 802af32:	f000 f91b 	bl	802b16c <_free_r>
 802af36:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802af38:	b111      	cbz	r1, 802af40 <_reclaim_reent+0x68>
 802af3a:	4620      	mov	r0, r4
 802af3c:	f000 f916 	bl	802b16c <_free_r>
 802af40:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802af42:	b111      	cbz	r1, 802af4a <_reclaim_reent+0x72>
 802af44:	4620      	mov	r0, r4
 802af46:	f000 f911 	bl	802b16c <_free_r>
 802af4a:	6a23      	ldr	r3, [r4, #32]
 802af4c:	b1b3      	cbz	r3, 802af7c <_reclaim_reent+0xa4>
 802af4e:	4620      	mov	r0, r4
 802af50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802af54:	4718      	bx	r3
 802af56:	5949      	ldr	r1, [r1, r5]
 802af58:	b941      	cbnz	r1, 802af6c <_reclaim_reent+0x94>
 802af5a:	3504      	adds	r5, #4
 802af5c:	69e3      	ldr	r3, [r4, #28]
 802af5e:	2d80      	cmp	r5, #128	; 0x80
 802af60:	68d9      	ldr	r1, [r3, #12]
 802af62:	d1f8      	bne.n	802af56 <_reclaim_reent+0x7e>
 802af64:	4620      	mov	r0, r4
 802af66:	f000 f901 	bl	802b16c <_free_r>
 802af6a:	e7c0      	b.n	802aeee <_reclaim_reent+0x16>
 802af6c:	680e      	ldr	r6, [r1, #0]
 802af6e:	4620      	mov	r0, r4
 802af70:	f000 f8fc 	bl	802b16c <_free_r>
 802af74:	4631      	mov	r1, r6
 802af76:	e7ef      	b.n	802af58 <_reclaim_reent+0x80>
 802af78:	2500      	movs	r5, #0
 802af7a:	e7ef      	b.n	802af5c <_reclaim_reent+0x84>
 802af7c:	bd70      	pop	{r4, r5, r6, pc}
 802af7e:	bf00      	nop
 802af80:	20000160 	.word	0x20000160

0802af84 <_lseek_r>:
 802af84:	b538      	push	{r3, r4, r5, lr}
 802af86:	4d07      	ldr	r5, [pc, #28]	; (802afa4 <_lseek_r+0x20>)
 802af88:	4604      	mov	r4, r0
 802af8a:	4608      	mov	r0, r1
 802af8c:	4611      	mov	r1, r2
 802af8e:	2200      	movs	r2, #0
 802af90:	602a      	str	r2, [r5, #0]
 802af92:	461a      	mov	r2, r3
 802af94:	f7d7 f938 	bl	8002208 <_lseek>
 802af98:	1c43      	adds	r3, r0, #1
 802af9a:	d102      	bne.n	802afa2 <_lseek_r+0x1e>
 802af9c:	682b      	ldr	r3, [r5, #0]
 802af9e:	b103      	cbz	r3, 802afa2 <_lseek_r+0x1e>
 802afa0:	6023      	str	r3, [r4, #0]
 802afa2:	bd38      	pop	{r3, r4, r5, pc}
 802afa4:	2001384c 	.word	0x2001384c

0802afa8 <_read_r>:
 802afa8:	b538      	push	{r3, r4, r5, lr}
 802afaa:	4d07      	ldr	r5, [pc, #28]	; (802afc8 <_read_r+0x20>)
 802afac:	4604      	mov	r4, r0
 802afae:	4608      	mov	r0, r1
 802afb0:	4611      	mov	r1, r2
 802afb2:	2200      	movs	r2, #0
 802afb4:	602a      	str	r2, [r5, #0]
 802afb6:	461a      	mov	r2, r3
 802afb8:	f7d7 f8fe 	bl	80021b8 <_read>
 802afbc:	1c43      	adds	r3, r0, #1
 802afbe:	d102      	bne.n	802afc6 <_read_r+0x1e>
 802afc0:	682b      	ldr	r3, [r5, #0]
 802afc2:	b103      	cbz	r3, 802afc6 <_read_r+0x1e>
 802afc4:	6023      	str	r3, [r4, #0]
 802afc6:	bd38      	pop	{r3, r4, r5, pc}
 802afc8:	2001384c 	.word	0x2001384c

0802afcc <_kill_r>:
 802afcc:	b538      	push	{r3, r4, r5, lr}
 802afce:	4d07      	ldr	r5, [pc, #28]	; (802afec <_kill_r+0x20>)
 802afd0:	2300      	movs	r3, #0
 802afd2:	4604      	mov	r4, r0
 802afd4:	4608      	mov	r0, r1
 802afd6:	4611      	mov	r1, r2
 802afd8:	602b      	str	r3, [r5, #0]
 802afda:	f7d7 f8df 	bl	800219c <_kill>
 802afde:	1c43      	adds	r3, r0, #1
 802afe0:	d102      	bne.n	802afe8 <_kill_r+0x1c>
 802afe2:	682b      	ldr	r3, [r5, #0]
 802afe4:	b103      	cbz	r3, 802afe8 <_kill_r+0x1c>
 802afe6:	6023      	str	r3, [r4, #0]
 802afe8:	bd38      	pop	{r3, r4, r5, pc}
 802afea:	bf00      	nop
 802afec:	2001384c 	.word	0x2001384c

0802aff0 <_getpid_r>:
 802aff0:	f7d7 b8d2 	b.w	8002198 <_getpid>

0802aff4 <_sbrk_r>:
 802aff4:	b538      	push	{r3, r4, r5, lr}
 802aff6:	4d06      	ldr	r5, [pc, #24]	; (802b010 <_sbrk_r+0x1c>)
 802aff8:	2300      	movs	r3, #0
 802affa:	4604      	mov	r4, r0
 802affc:	4608      	mov	r0, r1
 802affe:	602b      	str	r3, [r5, #0]
 802b000:	f7d7 f904 	bl	800220c <_sbrk>
 802b004:	1c43      	adds	r3, r0, #1
 802b006:	d102      	bne.n	802b00e <_sbrk_r+0x1a>
 802b008:	682b      	ldr	r3, [r5, #0]
 802b00a:	b103      	cbz	r3, 802b00e <_sbrk_r+0x1a>
 802b00c:	6023      	str	r3, [r4, #0]
 802b00e:	bd38      	pop	{r3, r4, r5, pc}
 802b010:	2001384c 	.word	0x2001384c

0802b014 <_write_r>:
 802b014:	b538      	push	{r3, r4, r5, lr}
 802b016:	4d07      	ldr	r5, [pc, #28]	; (802b034 <_write_r+0x20>)
 802b018:	4604      	mov	r4, r0
 802b01a:	4608      	mov	r0, r1
 802b01c:	4611      	mov	r1, r2
 802b01e:	2200      	movs	r2, #0
 802b020:	602a      	str	r2, [r5, #0]
 802b022:	461a      	mov	r2, r3
 802b024:	f7d7 f8d6 	bl	80021d4 <_write>
 802b028:	1c43      	adds	r3, r0, #1
 802b02a:	d102      	bne.n	802b032 <_write_r+0x1e>
 802b02c:	682b      	ldr	r3, [r5, #0]
 802b02e:	b103      	cbz	r3, 802b032 <_write_r+0x1e>
 802b030:	6023      	str	r3, [r4, #0]
 802b032:	bd38      	pop	{r3, r4, r5, pc}
 802b034:	2001384c 	.word	0x2001384c

0802b038 <__errno>:
 802b038:	4b01      	ldr	r3, [pc, #4]	; (802b040 <__errno+0x8>)
 802b03a:	6818      	ldr	r0, [r3, #0]
 802b03c:	4770      	bx	lr
 802b03e:	bf00      	nop
 802b040:	20000160 	.word	0x20000160

0802b044 <__libc_init_array>:
 802b044:	b570      	push	{r4, r5, r6, lr}
 802b046:	4d0d      	ldr	r5, [pc, #52]	; (802b07c <__libc_init_array+0x38>)
 802b048:	4c0d      	ldr	r4, [pc, #52]	; (802b080 <__libc_init_array+0x3c>)
 802b04a:	1b64      	subs	r4, r4, r5
 802b04c:	10a4      	asrs	r4, r4, #2
 802b04e:	2600      	movs	r6, #0
 802b050:	42a6      	cmp	r6, r4
 802b052:	d109      	bne.n	802b068 <__libc_init_array+0x24>
 802b054:	4d0b      	ldr	r5, [pc, #44]	; (802b084 <__libc_init_array+0x40>)
 802b056:	4c0c      	ldr	r4, [pc, #48]	; (802b088 <__libc_init_array+0x44>)
 802b058:	f000 fd70 	bl	802bb3c <_init>
 802b05c:	1b64      	subs	r4, r4, r5
 802b05e:	10a4      	asrs	r4, r4, #2
 802b060:	2600      	movs	r6, #0
 802b062:	42a6      	cmp	r6, r4
 802b064:	d105      	bne.n	802b072 <__libc_init_array+0x2e>
 802b066:	bd70      	pop	{r4, r5, r6, pc}
 802b068:	f855 3b04 	ldr.w	r3, [r5], #4
 802b06c:	4798      	blx	r3
 802b06e:	3601      	adds	r6, #1
 802b070:	e7ee      	b.n	802b050 <__libc_init_array+0xc>
 802b072:	f855 3b04 	ldr.w	r3, [r5], #4
 802b076:	4798      	blx	r3
 802b078:	3601      	adds	r6, #1
 802b07a:	e7f2      	b.n	802b062 <__libc_init_array+0x1e>
 802b07c:	08160844 	.word	0x08160844
 802b080:	08160844 	.word	0x08160844
 802b084:	08160844 	.word	0x08160844
 802b088:	08160858 	.word	0x08160858

0802b08c <__retarget_lock_init_recursive>:
 802b08c:	4770      	bx	lr

0802b08e <__retarget_lock_acquire_recursive>:
 802b08e:	4770      	bx	lr

0802b090 <__retarget_lock_release_recursive>:
 802b090:	4770      	bx	lr

0802b092 <memcpy>:
 802b092:	440a      	add	r2, r1
 802b094:	4291      	cmp	r1, r2
 802b096:	f100 33ff 	add.w	r3, r0, #4294967295
 802b09a:	d100      	bne.n	802b09e <memcpy+0xc>
 802b09c:	4770      	bx	lr
 802b09e:	b510      	push	{r4, lr}
 802b0a0:	f811 4b01 	ldrb.w	r4, [r1], #1
 802b0a4:	f803 4f01 	strb.w	r4, [r3, #1]!
 802b0a8:	4291      	cmp	r1, r2
 802b0aa:	d1f9      	bne.n	802b0a0 <memcpy+0xe>
 802b0ac:	bd10      	pop	{r4, pc}
	...

0802b0b0 <__register_exitproc>:
 802b0b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b0b4:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802b168 <__register_exitproc+0xb8>
 802b0b8:	4606      	mov	r6, r0
 802b0ba:	f8d8 0000 	ldr.w	r0, [r8]
 802b0be:	461f      	mov	r7, r3
 802b0c0:	460d      	mov	r5, r1
 802b0c2:	4691      	mov	r9, r2
 802b0c4:	f7ff ffe3 	bl	802b08e <__retarget_lock_acquire_recursive>
 802b0c8:	4b23      	ldr	r3, [pc, #140]	; (802b158 <__register_exitproc+0xa8>)
 802b0ca:	681c      	ldr	r4, [r3, #0]
 802b0cc:	b934      	cbnz	r4, 802b0dc <__register_exitproc+0x2c>
 802b0ce:	4c23      	ldr	r4, [pc, #140]	; (802b15c <__register_exitproc+0xac>)
 802b0d0:	601c      	str	r4, [r3, #0]
 802b0d2:	4b23      	ldr	r3, [pc, #140]	; (802b160 <__register_exitproc+0xb0>)
 802b0d4:	b113      	cbz	r3, 802b0dc <__register_exitproc+0x2c>
 802b0d6:	681b      	ldr	r3, [r3, #0]
 802b0d8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802b0dc:	6863      	ldr	r3, [r4, #4]
 802b0de:	2b1f      	cmp	r3, #31
 802b0e0:	dd07      	ble.n	802b0f2 <__register_exitproc+0x42>
 802b0e2:	f8d8 0000 	ldr.w	r0, [r8]
 802b0e6:	f7ff ffd3 	bl	802b090 <__retarget_lock_release_recursive>
 802b0ea:	f04f 30ff 	mov.w	r0, #4294967295
 802b0ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b0f2:	b32e      	cbz	r6, 802b140 <__register_exitproc+0x90>
 802b0f4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b0f8:	b968      	cbnz	r0, 802b116 <__register_exitproc+0x66>
 802b0fa:	4b1a      	ldr	r3, [pc, #104]	; (802b164 <__register_exitproc+0xb4>)
 802b0fc:	2b00      	cmp	r3, #0
 802b0fe:	d0f0      	beq.n	802b0e2 <__register_exitproc+0x32>
 802b100:	f44f 7084 	mov.w	r0, #264	; 0x108
 802b104:	f7ff fcbe 	bl	802aa84 <malloc>
 802b108:	2800      	cmp	r0, #0
 802b10a:	d0ea      	beq.n	802b0e2 <__register_exitproc+0x32>
 802b10c:	2300      	movs	r3, #0
 802b10e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802b112:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802b116:	6863      	ldr	r3, [r4, #4]
 802b118:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802b11c:	2201      	movs	r2, #1
 802b11e:	409a      	lsls	r2, r3
 802b120:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802b124:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802b128:	4313      	orrs	r3, r2
 802b12a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802b12e:	2e02      	cmp	r6, #2
 802b130:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802b134:	bf02      	ittt	eq
 802b136:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802b13a:	4313      	orreq	r3, r2
 802b13c:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802b140:	6863      	ldr	r3, [r4, #4]
 802b142:	f8d8 0000 	ldr.w	r0, [r8]
 802b146:	1c5a      	adds	r2, r3, #1
 802b148:	3302      	adds	r3, #2
 802b14a:	6062      	str	r2, [r4, #4]
 802b14c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802b150:	f7ff ff9e 	bl	802b090 <__retarget_lock_release_recursive>
 802b154:	2000      	movs	r0, #0
 802b156:	e7ca      	b.n	802b0ee <__register_exitproc+0x3e>
 802b158:	200138e0 	.word	0x200138e0
 802b15c:	20013854 	.word	0x20013854
 802b160:	080430cc 	.word	0x080430cc
 802b164:	0802aa85 	.word	0x0802aa85
 802b168:	20000164 	.word	0x20000164

0802b16c <_free_r>:
 802b16c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802b16e:	2900      	cmp	r1, #0
 802b170:	d044      	beq.n	802b1fc <_free_r+0x90>
 802b172:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802b176:	9001      	str	r0, [sp, #4]
 802b178:	2b00      	cmp	r3, #0
 802b17a:	f1a1 0404 	sub.w	r4, r1, #4
 802b17e:	bfb8      	it	lt
 802b180:	18e4      	addlt	r4, r4, r3
 802b182:	f7ff fd2f 	bl	802abe4 <__malloc_lock>
 802b186:	4a1e      	ldr	r2, [pc, #120]	; (802b200 <_free_r+0x94>)
 802b188:	9801      	ldr	r0, [sp, #4]
 802b18a:	6813      	ldr	r3, [r2, #0]
 802b18c:	b933      	cbnz	r3, 802b19c <_free_r+0x30>
 802b18e:	6063      	str	r3, [r4, #4]
 802b190:	6014      	str	r4, [r2, #0]
 802b192:	b003      	add	sp, #12
 802b194:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802b198:	f7ff bd2a 	b.w	802abf0 <__malloc_unlock>
 802b19c:	42a3      	cmp	r3, r4
 802b19e:	d908      	bls.n	802b1b2 <_free_r+0x46>
 802b1a0:	6825      	ldr	r5, [r4, #0]
 802b1a2:	1961      	adds	r1, r4, r5
 802b1a4:	428b      	cmp	r3, r1
 802b1a6:	bf01      	itttt	eq
 802b1a8:	6819      	ldreq	r1, [r3, #0]
 802b1aa:	685b      	ldreq	r3, [r3, #4]
 802b1ac:	1949      	addeq	r1, r1, r5
 802b1ae:	6021      	streq	r1, [r4, #0]
 802b1b0:	e7ed      	b.n	802b18e <_free_r+0x22>
 802b1b2:	461a      	mov	r2, r3
 802b1b4:	685b      	ldr	r3, [r3, #4]
 802b1b6:	b10b      	cbz	r3, 802b1bc <_free_r+0x50>
 802b1b8:	42a3      	cmp	r3, r4
 802b1ba:	d9fa      	bls.n	802b1b2 <_free_r+0x46>
 802b1bc:	6811      	ldr	r1, [r2, #0]
 802b1be:	1855      	adds	r5, r2, r1
 802b1c0:	42a5      	cmp	r5, r4
 802b1c2:	d10b      	bne.n	802b1dc <_free_r+0x70>
 802b1c4:	6824      	ldr	r4, [r4, #0]
 802b1c6:	4421      	add	r1, r4
 802b1c8:	1854      	adds	r4, r2, r1
 802b1ca:	42a3      	cmp	r3, r4
 802b1cc:	6011      	str	r1, [r2, #0]
 802b1ce:	d1e0      	bne.n	802b192 <_free_r+0x26>
 802b1d0:	681c      	ldr	r4, [r3, #0]
 802b1d2:	685b      	ldr	r3, [r3, #4]
 802b1d4:	6053      	str	r3, [r2, #4]
 802b1d6:	440c      	add	r4, r1
 802b1d8:	6014      	str	r4, [r2, #0]
 802b1da:	e7da      	b.n	802b192 <_free_r+0x26>
 802b1dc:	d902      	bls.n	802b1e4 <_free_r+0x78>
 802b1de:	230c      	movs	r3, #12
 802b1e0:	6003      	str	r3, [r0, #0]
 802b1e2:	e7d6      	b.n	802b192 <_free_r+0x26>
 802b1e4:	6825      	ldr	r5, [r4, #0]
 802b1e6:	1961      	adds	r1, r4, r5
 802b1e8:	428b      	cmp	r3, r1
 802b1ea:	bf04      	itt	eq
 802b1ec:	6819      	ldreq	r1, [r3, #0]
 802b1ee:	685b      	ldreq	r3, [r3, #4]
 802b1f0:	6063      	str	r3, [r4, #4]
 802b1f2:	bf04      	itt	eq
 802b1f4:	1949      	addeq	r1, r1, r5
 802b1f6:	6021      	streq	r1, [r4, #0]
 802b1f8:	6054      	str	r4, [r2, #4]
 802b1fa:	e7ca      	b.n	802b192 <_free_r+0x26>
 802b1fc:	b003      	add	sp, #12
 802b1fe:	bd30      	pop	{r4, r5, pc}
 802b200:	20013708 	.word	0x20013708

0802b204 <__sfputc_r>:
 802b204:	6893      	ldr	r3, [r2, #8]
 802b206:	3b01      	subs	r3, #1
 802b208:	2b00      	cmp	r3, #0
 802b20a:	b410      	push	{r4}
 802b20c:	6093      	str	r3, [r2, #8]
 802b20e:	da08      	bge.n	802b222 <__sfputc_r+0x1e>
 802b210:	6994      	ldr	r4, [r2, #24]
 802b212:	42a3      	cmp	r3, r4
 802b214:	db01      	blt.n	802b21a <__sfputc_r+0x16>
 802b216:	290a      	cmp	r1, #10
 802b218:	d103      	bne.n	802b222 <__sfputc_r+0x1e>
 802b21a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b21e:	f000 bb73 	b.w	802b908 <__swbuf_r>
 802b222:	6813      	ldr	r3, [r2, #0]
 802b224:	1c58      	adds	r0, r3, #1
 802b226:	6010      	str	r0, [r2, #0]
 802b228:	7019      	strb	r1, [r3, #0]
 802b22a:	4608      	mov	r0, r1
 802b22c:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b230:	4770      	bx	lr

0802b232 <__sfputs_r>:
 802b232:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b234:	4606      	mov	r6, r0
 802b236:	460f      	mov	r7, r1
 802b238:	4614      	mov	r4, r2
 802b23a:	18d5      	adds	r5, r2, r3
 802b23c:	42ac      	cmp	r4, r5
 802b23e:	d101      	bne.n	802b244 <__sfputs_r+0x12>
 802b240:	2000      	movs	r0, #0
 802b242:	e007      	b.n	802b254 <__sfputs_r+0x22>
 802b244:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b248:	463a      	mov	r2, r7
 802b24a:	4630      	mov	r0, r6
 802b24c:	f7ff ffda 	bl	802b204 <__sfputc_r>
 802b250:	1c43      	adds	r3, r0, #1
 802b252:	d1f3      	bne.n	802b23c <__sfputs_r+0xa>
 802b254:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802b258 <_vfiprintf_r>:
 802b258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b25c:	460d      	mov	r5, r1
 802b25e:	b09d      	sub	sp, #116	; 0x74
 802b260:	4614      	mov	r4, r2
 802b262:	4698      	mov	r8, r3
 802b264:	4606      	mov	r6, r0
 802b266:	b118      	cbz	r0, 802b270 <_vfiprintf_r+0x18>
 802b268:	6a03      	ldr	r3, [r0, #32]
 802b26a:	b90b      	cbnz	r3, 802b270 <_vfiprintf_r+0x18>
 802b26c:	f7ff fd60 	bl	802ad30 <__sinit>
 802b270:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b272:	07d9      	lsls	r1, r3, #31
 802b274:	d405      	bmi.n	802b282 <_vfiprintf_r+0x2a>
 802b276:	89ab      	ldrh	r3, [r5, #12]
 802b278:	059a      	lsls	r2, r3, #22
 802b27a:	d402      	bmi.n	802b282 <_vfiprintf_r+0x2a>
 802b27c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b27e:	f7ff ff06 	bl	802b08e <__retarget_lock_acquire_recursive>
 802b282:	89ab      	ldrh	r3, [r5, #12]
 802b284:	071b      	lsls	r3, r3, #28
 802b286:	d501      	bpl.n	802b28c <_vfiprintf_r+0x34>
 802b288:	692b      	ldr	r3, [r5, #16]
 802b28a:	b99b      	cbnz	r3, 802b2b4 <_vfiprintf_r+0x5c>
 802b28c:	4629      	mov	r1, r5
 802b28e:	4630      	mov	r0, r6
 802b290:	f000 fb78 	bl	802b984 <__swsetup_r>
 802b294:	b170      	cbz	r0, 802b2b4 <_vfiprintf_r+0x5c>
 802b296:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b298:	07dc      	lsls	r4, r3, #31
 802b29a:	d504      	bpl.n	802b2a6 <_vfiprintf_r+0x4e>
 802b29c:	f04f 30ff 	mov.w	r0, #4294967295
 802b2a0:	b01d      	add	sp, #116	; 0x74
 802b2a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b2a6:	89ab      	ldrh	r3, [r5, #12]
 802b2a8:	0598      	lsls	r0, r3, #22
 802b2aa:	d4f7      	bmi.n	802b29c <_vfiprintf_r+0x44>
 802b2ac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b2ae:	f7ff feef 	bl	802b090 <__retarget_lock_release_recursive>
 802b2b2:	e7f3      	b.n	802b29c <_vfiprintf_r+0x44>
 802b2b4:	2300      	movs	r3, #0
 802b2b6:	9309      	str	r3, [sp, #36]	; 0x24
 802b2b8:	2320      	movs	r3, #32
 802b2ba:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802b2be:	f8cd 800c 	str.w	r8, [sp, #12]
 802b2c2:	2330      	movs	r3, #48	; 0x30
 802b2c4:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802b478 <_vfiprintf_r+0x220>
 802b2c8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802b2cc:	f04f 0901 	mov.w	r9, #1
 802b2d0:	4623      	mov	r3, r4
 802b2d2:	469a      	mov	sl, r3
 802b2d4:	f813 2b01 	ldrb.w	r2, [r3], #1
 802b2d8:	b10a      	cbz	r2, 802b2de <_vfiprintf_r+0x86>
 802b2da:	2a25      	cmp	r2, #37	; 0x25
 802b2dc:	d1f9      	bne.n	802b2d2 <_vfiprintf_r+0x7a>
 802b2de:	ebba 0b04 	subs.w	fp, sl, r4
 802b2e2:	d00b      	beq.n	802b2fc <_vfiprintf_r+0xa4>
 802b2e4:	465b      	mov	r3, fp
 802b2e6:	4622      	mov	r2, r4
 802b2e8:	4629      	mov	r1, r5
 802b2ea:	4630      	mov	r0, r6
 802b2ec:	f7ff ffa1 	bl	802b232 <__sfputs_r>
 802b2f0:	3001      	adds	r0, #1
 802b2f2:	f000 80a9 	beq.w	802b448 <_vfiprintf_r+0x1f0>
 802b2f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802b2f8:	445a      	add	r2, fp
 802b2fa:	9209      	str	r2, [sp, #36]	; 0x24
 802b2fc:	f89a 3000 	ldrb.w	r3, [sl]
 802b300:	2b00      	cmp	r3, #0
 802b302:	f000 80a1 	beq.w	802b448 <_vfiprintf_r+0x1f0>
 802b306:	2300      	movs	r3, #0
 802b308:	f04f 32ff 	mov.w	r2, #4294967295
 802b30c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802b310:	f10a 0a01 	add.w	sl, sl, #1
 802b314:	9304      	str	r3, [sp, #16]
 802b316:	9307      	str	r3, [sp, #28]
 802b318:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802b31c:	931a      	str	r3, [sp, #104]	; 0x68
 802b31e:	4654      	mov	r4, sl
 802b320:	2205      	movs	r2, #5
 802b322:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b326:	4854      	ldr	r0, [pc, #336]	; (802b478 <_vfiprintf_r+0x220>)
 802b328:	f7d4 ffc2 	bl	80002b0 <memchr>
 802b32c:	9a04      	ldr	r2, [sp, #16]
 802b32e:	b9d8      	cbnz	r0, 802b368 <_vfiprintf_r+0x110>
 802b330:	06d1      	lsls	r1, r2, #27
 802b332:	bf44      	itt	mi
 802b334:	2320      	movmi	r3, #32
 802b336:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b33a:	0713      	lsls	r3, r2, #28
 802b33c:	bf44      	itt	mi
 802b33e:	232b      	movmi	r3, #43	; 0x2b
 802b340:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802b344:	f89a 3000 	ldrb.w	r3, [sl]
 802b348:	2b2a      	cmp	r3, #42	; 0x2a
 802b34a:	d015      	beq.n	802b378 <_vfiprintf_r+0x120>
 802b34c:	9a07      	ldr	r2, [sp, #28]
 802b34e:	4654      	mov	r4, sl
 802b350:	2000      	movs	r0, #0
 802b352:	f04f 0c0a 	mov.w	ip, #10
 802b356:	4621      	mov	r1, r4
 802b358:	f811 3b01 	ldrb.w	r3, [r1], #1
 802b35c:	3b30      	subs	r3, #48	; 0x30
 802b35e:	2b09      	cmp	r3, #9
 802b360:	d94d      	bls.n	802b3fe <_vfiprintf_r+0x1a6>
 802b362:	b1b0      	cbz	r0, 802b392 <_vfiprintf_r+0x13a>
 802b364:	9207      	str	r2, [sp, #28]
 802b366:	e014      	b.n	802b392 <_vfiprintf_r+0x13a>
 802b368:	eba0 0308 	sub.w	r3, r0, r8
 802b36c:	fa09 f303 	lsl.w	r3, r9, r3
 802b370:	4313      	orrs	r3, r2
 802b372:	9304      	str	r3, [sp, #16]
 802b374:	46a2      	mov	sl, r4
 802b376:	e7d2      	b.n	802b31e <_vfiprintf_r+0xc6>
 802b378:	9b03      	ldr	r3, [sp, #12]
 802b37a:	1d19      	adds	r1, r3, #4
 802b37c:	681b      	ldr	r3, [r3, #0]
 802b37e:	9103      	str	r1, [sp, #12]
 802b380:	2b00      	cmp	r3, #0
 802b382:	bfbb      	ittet	lt
 802b384:	425b      	neglt	r3, r3
 802b386:	f042 0202 	orrlt.w	r2, r2, #2
 802b38a:	9307      	strge	r3, [sp, #28]
 802b38c:	9307      	strlt	r3, [sp, #28]
 802b38e:	bfb8      	it	lt
 802b390:	9204      	strlt	r2, [sp, #16]
 802b392:	7823      	ldrb	r3, [r4, #0]
 802b394:	2b2e      	cmp	r3, #46	; 0x2e
 802b396:	d10c      	bne.n	802b3b2 <_vfiprintf_r+0x15a>
 802b398:	7863      	ldrb	r3, [r4, #1]
 802b39a:	2b2a      	cmp	r3, #42	; 0x2a
 802b39c:	d134      	bne.n	802b408 <_vfiprintf_r+0x1b0>
 802b39e:	9b03      	ldr	r3, [sp, #12]
 802b3a0:	1d1a      	adds	r2, r3, #4
 802b3a2:	681b      	ldr	r3, [r3, #0]
 802b3a4:	9203      	str	r2, [sp, #12]
 802b3a6:	2b00      	cmp	r3, #0
 802b3a8:	bfb8      	it	lt
 802b3aa:	f04f 33ff 	movlt.w	r3, #4294967295
 802b3ae:	3402      	adds	r4, #2
 802b3b0:	9305      	str	r3, [sp, #20]
 802b3b2:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802b488 <_vfiprintf_r+0x230>
 802b3b6:	7821      	ldrb	r1, [r4, #0]
 802b3b8:	2203      	movs	r2, #3
 802b3ba:	4650      	mov	r0, sl
 802b3bc:	f7d4 ff78 	bl	80002b0 <memchr>
 802b3c0:	b138      	cbz	r0, 802b3d2 <_vfiprintf_r+0x17a>
 802b3c2:	9b04      	ldr	r3, [sp, #16]
 802b3c4:	eba0 000a 	sub.w	r0, r0, sl
 802b3c8:	2240      	movs	r2, #64	; 0x40
 802b3ca:	4082      	lsls	r2, r0
 802b3cc:	4313      	orrs	r3, r2
 802b3ce:	3401      	adds	r4, #1
 802b3d0:	9304      	str	r3, [sp, #16]
 802b3d2:	f814 1b01 	ldrb.w	r1, [r4], #1
 802b3d6:	4829      	ldr	r0, [pc, #164]	; (802b47c <_vfiprintf_r+0x224>)
 802b3d8:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802b3dc:	2206      	movs	r2, #6
 802b3de:	f7d4 ff67 	bl	80002b0 <memchr>
 802b3e2:	2800      	cmp	r0, #0
 802b3e4:	d03f      	beq.n	802b466 <_vfiprintf_r+0x20e>
 802b3e6:	4b26      	ldr	r3, [pc, #152]	; (802b480 <_vfiprintf_r+0x228>)
 802b3e8:	bb1b      	cbnz	r3, 802b432 <_vfiprintf_r+0x1da>
 802b3ea:	9b03      	ldr	r3, [sp, #12]
 802b3ec:	3307      	adds	r3, #7
 802b3ee:	f023 0307 	bic.w	r3, r3, #7
 802b3f2:	3308      	adds	r3, #8
 802b3f4:	9303      	str	r3, [sp, #12]
 802b3f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802b3f8:	443b      	add	r3, r7
 802b3fa:	9309      	str	r3, [sp, #36]	; 0x24
 802b3fc:	e768      	b.n	802b2d0 <_vfiprintf_r+0x78>
 802b3fe:	fb0c 3202 	mla	r2, ip, r2, r3
 802b402:	460c      	mov	r4, r1
 802b404:	2001      	movs	r0, #1
 802b406:	e7a6      	b.n	802b356 <_vfiprintf_r+0xfe>
 802b408:	2300      	movs	r3, #0
 802b40a:	3401      	adds	r4, #1
 802b40c:	9305      	str	r3, [sp, #20]
 802b40e:	4619      	mov	r1, r3
 802b410:	f04f 0c0a 	mov.w	ip, #10
 802b414:	4620      	mov	r0, r4
 802b416:	f810 2b01 	ldrb.w	r2, [r0], #1
 802b41a:	3a30      	subs	r2, #48	; 0x30
 802b41c:	2a09      	cmp	r2, #9
 802b41e:	d903      	bls.n	802b428 <_vfiprintf_r+0x1d0>
 802b420:	2b00      	cmp	r3, #0
 802b422:	d0c6      	beq.n	802b3b2 <_vfiprintf_r+0x15a>
 802b424:	9105      	str	r1, [sp, #20]
 802b426:	e7c4      	b.n	802b3b2 <_vfiprintf_r+0x15a>
 802b428:	fb0c 2101 	mla	r1, ip, r1, r2
 802b42c:	4604      	mov	r4, r0
 802b42e:	2301      	movs	r3, #1
 802b430:	e7f0      	b.n	802b414 <_vfiprintf_r+0x1bc>
 802b432:	ab03      	add	r3, sp, #12
 802b434:	9300      	str	r3, [sp, #0]
 802b436:	462a      	mov	r2, r5
 802b438:	4b12      	ldr	r3, [pc, #72]	; (802b484 <_vfiprintf_r+0x22c>)
 802b43a:	a904      	add	r1, sp, #16
 802b43c:	4630      	mov	r0, r6
 802b43e:	f3af 8000 	nop.w
 802b442:	4607      	mov	r7, r0
 802b444:	1c78      	adds	r0, r7, #1
 802b446:	d1d6      	bne.n	802b3f6 <_vfiprintf_r+0x19e>
 802b448:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802b44a:	07d9      	lsls	r1, r3, #31
 802b44c:	d405      	bmi.n	802b45a <_vfiprintf_r+0x202>
 802b44e:	89ab      	ldrh	r3, [r5, #12]
 802b450:	059a      	lsls	r2, r3, #22
 802b452:	d402      	bmi.n	802b45a <_vfiprintf_r+0x202>
 802b454:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802b456:	f7ff fe1b 	bl	802b090 <__retarget_lock_release_recursive>
 802b45a:	89ab      	ldrh	r3, [r5, #12]
 802b45c:	065b      	lsls	r3, r3, #25
 802b45e:	f53f af1d 	bmi.w	802b29c <_vfiprintf_r+0x44>
 802b462:	9809      	ldr	r0, [sp, #36]	; 0x24
 802b464:	e71c      	b.n	802b2a0 <_vfiprintf_r+0x48>
 802b466:	ab03      	add	r3, sp, #12
 802b468:	9300      	str	r3, [sp, #0]
 802b46a:	462a      	mov	r2, r5
 802b46c:	4b05      	ldr	r3, [pc, #20]	; (802b484 <_vfiprintf_r+0x22c>)
 802b46e:	a904      	add	r1, sp, #16
 802b470:	4630      	mov	r0, r6
 802b472:	f000 f879 	bl	802b568 <_printf_i>
 802b476:	e7e4      	b.n	802b442 <_vfiprintf_r+0x1ea>
 802b478:	080430d0 	.word	0x080430d0
 802b47c:	080430da 	.word	0x080430da
 802b480:	00000000 	.word	0x00000000
 802b484:	0802b233 	.word	0x0802b233
 802b488:	080430d6 	.word	0x080430d6

0802b48c <_printf_common>:
 802b48c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802b490:	4616      	mov	r6, r2
 802b492:	4699      	mov	r9, r3
 802b494:	688a      	ldr	r2, [r1, #8]
 802b496:	690b      	ldr	r3, [r1, #16]
 802b498:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802b49c:	4293      	cmp	r3, r2
 802b49e:	bfb8      	it	lt
 802b4a0:	4613      	movlt	r3, r2
 802b4a2:	6033      	str	r3, [r6, #0]
 802b4a4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802b4a8:	4607      	mov	r7, r0
 802b4aa:	460c      	mov	r4, r1
 802b4ac:	b10a      	cbz	r2, 802b4b2 <_printf_common+0x26>
 802b4ae:	3301      	adds	r3, #1
 802b4b0:	6033      	str	r3, [r6, #0]
 802b4b2:	6823      	ldr	r3, [r4, #0]
 802b4b4:	0699      	lsls	r1, r3, #26
 802b4b6:	bf42      	ittt	mi
 802b4b8:	6833      	ldrmi	r3, [r6, #0]
 802b4ba:	3302      	addmi	r3, #2
 802b4bc:	6033      	strmi	r3, [r6, #0]
 802b4be:	6825      	ldr	r5, [r4, #0]
 802b4c0:	f015 0506 	ands.w	r5, r5, #6
 802b4c4:	d106      	bne.n	802b4d4 <_printf_common+0x48>
 802b4c6:	f104 0a19 	add.w	sl, r4, #25
 802b4ca:	68e3      	ldr	r3, [r4, #12]
 802b4cc:	6832      	ldr	r2, [r6, #0]
 802b4ce:	1a9b      	subs	r3, r3, r2
 802b4d0:	42ab      	cmp	r3, r5
 802b4d2:	dc26      	bgt.n	802b522 <_printf_common+0x96>
 802b4d4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802b4d8:	1e13      	subs	r3, r2, #0
 802b4da:	6822      	ldr	r2, [r4, #0]
 802b4dc:	bf18      	it	ne
 802b4de:	2301      	movne	r3, #1
 802b4e0:	0692      	lsls	r2, r2, #26
 802b4e2:	d42b      	bmi.n	802b53c <_printf_common+0xb0>
 802b4e4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802b4e8:	4649      	mov	r1, r9
 802b4ea:	4638      	mov	r0, r7
 802b4ec:	47c0      	blx	r8
 802b4ee:	3001      	adds	r0, #1
 802b4f0:	d01e      	beq.n	802b530 <_printf_common+0xa4>
 802b4f2:	6823      	ldr	r3, [r4, #0]
 802b4f4:	6922      	ldr	r2, [r4, #16]
 802b4f6:	f003 0306 	and.w	r3, r3, #6
 802b4fa:	2b04      	cmp	r3, #4
 802b4fc:	bf02      	ittt	eq
 802b4fe:	68e5      	ldreq	r5, [r4, #12]
 802b500:	6833      	ldreq	r3, [r6, #0]
 802b502:	1aed      	subeq	r5, r5, r3
 802b504:	68a3      	ldr	r3, [r4, #8]
 802b506:	bf0c      	ite	eq
 802b508:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802b50c:	2500      	movne	r5, #0
 802b50e:	4293      	cmp	r3, r2
 802b510:	bfc4      	itt	gt
 802b512:	1a9b      	subgt	r3, r3, r2
 802b514:	18ed      	addgt	r5, r5, r3
 802b516:	2600      	movs	r6, #0
 802b518:	341a      	adds	r4, #26
 802b51a:	42b5      	cmp	r5, r6
 802b51c:	d11a      	bne.n	802b554 <_printf_common+0xc8>
 802b51e:	2000      	movs	r0, #0
 802b520:	e008      	b.n	802b534 <_printf_common+0xa8>
 802b522:	2301      	movs	r3, #1
 802b524:	4652      	mov	r2, sl
 802b526:	4649      	mov	r1, r9
 802b528:	4638      	mov	r0, r7
 802b52a:	47c0      	blx	r8
 802b52c:	3001      	adds	r0, #1
 802b52e:	d103      	bne.n	802b538 <_printf_common+0xac>
 802b530:	f04f 30ff 	mov.w	r0, #4294967295
 802b534:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b538:	3501      	adds	r5, #1
 802b53a:	e7c6      	b.n	802b4ca <_printf_common+0x3e>
 802b53c:	18e1      	adds	r1, r4, r3
 802b53e:	1c5a      	adds	r2, r3, #1
 802b540:	2030      	movs	r0, #48	; 0x30
 802b542:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802b546:	4422      	add	r2, r4
 802b548:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802b54c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802b550:	3302      	adds	r3, #2
 802b552:	e7c7      	b.n	802b4e4 <_printf_common+0x58>
 802b554:	2301      	movs	r3, #1
 802b556:	4622      	mov	r2, r4
 802b558:	4649      	mov	r1, r9
 802b55a:	4638      	mov	r0, r7
 802b55c:	47c0      	blx	r8
 802b55e:	3001      	adds	r0, #1
 802b560:	d0e6      	beq.n	802b530 <_printf_common+0xa4>
 802b562:	3601      	adds	r6, #1
 802b564:	e7d9      	b.n	802b51a <_printf_common+0x8e>
	...

0802b568 <_printf_i>:
 802b568:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802b56c:	7e0f      	ldrb	r7, [r1, #24]
 802b56e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802b570:	2f78      	cmp	r7, #120	; 0x78
 802b572:	4691      	mov	r9, r2
 802b574:	4680      	mov	r8, r0
 802b576:	460c      	mov	r4, r1
 802b578:	469a      	mov	sl, r3
 802b57a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802b57e:	d807      	bhi.n	802b590 <_printf_i+0x28>
 802b580:	2f62      	cmp	r7, #98	; 0x62
 802b582:	d80a      	bhi.n	802b59a <_printf_i+0x32>
 802b584:	2f00      	cmp	r7, #0
 802b586:	f000 80d4 	beq.w	802b732 <_printf_i+0x1ca>
 802b58a:	2f58      	cmp	r7, #88	; 0x58
 802b58c:	f000 80c0 	beq.w	802b710 <_printf_i+0x1a8>
 802b590:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b594:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802b598:	e03a      	b.n	802b610 <_printf_i+0xa8>
 802b59a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802b59e:	2b15      	cmp	r3, #21
 802b5a0:	d8f6      	bhi.n	802b590 <_printf_i+0x28>
 802b5a2:	a101      	add	r1, pc, #4	; (adr r1, 802b5a8 <_printf_i+0x40>)
 802b5a4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802b5a8:	0802b601 	.word	0x0802b601
 802b5ac:	0802b615 	.word	0x0802b615
 802b5b0:	0802b591 	.word	0x0802b591
 802b5b4:	0802b591 	.word	0x0802b591
 802b5b8:	0802b591 	.word	0x0802b591
 802b5bc:	0802b591 	.word	0x0802b591
 802b5c0:	0802b615 	.word	0x0802b615
 802b5c4:	0802b591 	.word	0x0802b591
 802b5c8:	0802b591 	.word	0x0802b591
 802b5cc:	0802b591 	.word	0x0802b591
 802b5d0:	0802b591 	.word	0x0802b591
 802b5d4:	0802b719 	.word	0x0802b719
 802b5d8:	0802b641 	.word	0x0802b641
 802b5dc:	0802b6d3 	.word	0x0802b6d3
 802b5e0:	0802b591 	.word	0x0802b591
 802b5e4:	0802b591 	.word	0x0802b591
 802b5e8:	0802b73b 	.word	0x0802b73b
 802b5ec:	0802b591 	.word	0x0802b591
 802b5f0:	0802b641 	.word	0x0802b641
 802b5f4:	0802b591 	.word	0x0802b591
 802b5f8:	0802b591 	.word	0x0802b591
 802b5fc:	0802b6db 	.word	0x0802b6db
 802b600:	682b      	ldr	r3, [r5, #0]
 802b602:	1d1a      	adds	r2, r3, #4
 802b604:	681b      	ldr	r3, [r3, #0]
 802b606:	602a      	str	r2, [r5, #0]
 802b608:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802b60c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802b610:	2301      	movs	r3, #1
 802b612:	e09f      	b.n	802b754 <_printf_i+0x1ec>
 802b614:	6820      	ldr	r0, [r4, #0]
 802b616:	682b      	ldr	r3, [r5, #0]
 802b618:	0607      	lsls	r7, r0, #24
 802b61a:	f103 0104 	add.w	r1, r3, #4
 802b61e:	6029      	str	r1, [r5, #0]
 802b620:	d501      	bpl.n	802b626 <_printf_i+0xbe>
 802b622:	681e      	ldr	r6, [r3, #0]
 802b624:	e003      	b.n	802b62e <_printf_i+0xc6>
 802b626:	0646      	lsls	r6, r0, #25
 802b628:	d5fb      	bpl.n	802b622 <_printf_i+0xba>
 802b62a:	f9b3 6000 	ldrsh.w	r6, [r3]
 802b62e:	2e00      	cmp	r6, #0
 802b630:	da03      	bge.n	802b63a <_printf_i+0xd2>
 802b632:	232d      	movs	r3, #45	; 0x2d
 802b634:	4276      	negs	r6, r6
 802b636:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b63a:	485a      	ldr	r0, [pc, #360]	; (802b7a4 <_printf_i+0x23c>)
 802b63c:	230a      	movs	r3, #10
 802b63e:	e012      	b.n	802b666 <_printf_i+0xfe>
 802b640:	682b      	ldr	r3, [r5, #0]
 802b642:	6820      	ldr	r0, [r4, #0]
 802b644:	1d19      	adds	r1, r3, #4
 802b646:	6029      	str	r1, [r5, #0]
 802b648:	0605      	lsls	r5, r0, #24
 802b64a:	d501      	bpl.n	802b650 <_printf_i+0xe8>
 802b64c:	681e      	ldr	r6, [r3, #0]
 802b64e:	e002      	b.n	802b656 <_printf_i+0xee>
 802b650:	0641      	lsls	r1, r0, #25
 802b652:	d5fb      	bpl.n	802b64c <_printf_i+0xe4>
 802b654:	881e      	ldrh	r6, [r3, #0]
 802b656:	4853      	ldr	r0, [pc, #332]	; (802b7a4 <_printf_i+0x23c>)
 802b658:	2f6f      	cmp	r7, #111	; 0x6f
 802b65a:	bf0c      	ite	eq
 802b65c:	2308      	moveq	r3, #8
 802b65e:	230a      	movne	r3, #10
 802b660:	2100      	movs	r1, #0
 802b662:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802b666:	6865      	ldr	r5, [r4, #4]
 802b668:	60a5      	str	r5, [r4, #8]
 802b66a:	2d00      	cmp	r5, #0
 802b66c:	bfa2      	ittt	ge
 802b66e:	6821      	ldrge	r1, [r4, #0]
 802b670:	f021 0104 	bicge.w	r1, r1, #4
 802b674:	6021      	strge	r1, [r4, #0]
 802b676:	b90e      	cbnz	r6, 802b67c <_printf_i+0x114>
 802b678:	2d00      	cmp	r5, #0
 802b67a:	d04b      	beq.n	802b714 <_printf_i+0x1ac>
 802b67c:	4615      	mov	r5, r2
 802b67e:	fbb6 f1f3 	udiv	r1, r6, r3
 802b682:	fb03 6711 	mls	r7, r3, r1, r6
 802b686:	5dc7      	ldrb	r7, [r0, r7]
 802b688:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802b68c:	4637      	mov	r7, r6
 802b68e:	42bb      	cmp	r3, r7
 802b690:	460e      	mov	r6, r1
 802b692:	d9f4      	bls.n	802b67e <_printf_i+0x116>
 802b694:	2b08      	cmp	r3, #8
 802b696:	d10b      	bne.n	802b6b0 <_printf_i+0x148>
 802b698:	6823      	ldr	r3, [r4, #0]
 802b69a:	07de      	lsls	r6, r3, #31
 802b69c:	d508      	bpl.n	802b6b0 <_printf_i+0x148>
 802b69e:	6923      	ldr	r3, [r4, #16]
 802b6a0:	6861      	ldr	r1, [r4, #4]
 802b6a2:	4299      	cmp	r1, r3
 802b6a4:	bfde      	ittt	le
 802b6a6:	2330      	movle	r3, #48	; 0x30
 802b6a8:	f805 3c01 	strble.w	r3, [r5, #-1]
 802b6ac:	f105 35ff 	addle.w	r5, r5, #4294967295
 802b6b0:	1b52      	subs	r2, r2, r5
 802b6b2:	6122      	str	r2, [r4, #16]
 802b6b4:	f8cd a000 	str.w	sl, [sp]
 802b6b8:	464b      	mov	r3, r9
 802b6ba:	aa03      	add	r2, sp, #12
 802b6bc:	4621      	mov	r1, r4
 802b6be:	4640      	mov	r0, r8
 802b6c0:	f7ff fee4 	bl	802b48c <_printf_common>
 802b6c4:	3001      	adds	r0, #1
 802b6c6:	d14a      	bne.n	802b75e <_printf_i+0x1f6>
 802b6c8:	f04f 30ff 	mov.w	r0, #4294967295
 802b6cc:	b004      	add	sp, #16
 802b6ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802b6d2:	6823      	ldr	r3, [r4, #0]
 802b6d4:	f043 0320 	orr.w	r3, r3, #32
 802b6d8:	6023      	str	r3, [r4, #0]
 802b6da:	4833      	ldr	r0, [pc, #204]	; (802b7a8 <_printf_i+0x240>)
 802b6dc:	2778      	movs	r7, #120	; 0x78
 802b6de:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802b6e2:	6823      	ldr	r3, [r4, #0]
 802b6e4:	6829      	ldr	r1, [r5, #0]
 802b6e6:	061f      	lsls	r7, r3, #24
 802b6e8:	f851 6b04 	ldr.w	r6, [r1], #4
 802b6ec:	d402      	bmi.n	802b6f4 <_printf_i+0x18c>
 802b6ee:	065f      	lsls	r7, r3, #25
 802b6f0:	bf48      	it	mi
 802b6f2:	b2b6      	uxthmi	r6, r6
 802b6f4:	07df      	lsls	r7, r3, #31
 802b6f6:	bf48      	it	mi
 802b6f8:	f043 0320 	orrmi.w	r3, r3, #32
 802b6fc:	6029      	str	r1, [r5, #0]
 802b6fe:	bf48      	it	mi
 802b700:	6023      	strmi	r3, [r4, #0]
 802b702:	b91e      	cbnz	r6, 802b70c <_printf_i+0x1a4>
 802b704:	6823      	ldr	r3, [r4, #0]
 802b706:	f023 0320 	bic.w	r3, r3, #32
 802b70a:	6023      	str	r3, [r4, #0]
 802b70c:	2310      	movs	r3, #16
 802b70e:	e7a7      	b.n	802b660 <_printf_i+0xf8>
 802b710:	4824      	ldr	r0, [pc, #144]	; (802b7a4 <_printf_i+0x23c>)
 802b712:	e7e4      	b.n	802b6de <_printf_i+0x176>
 802b714:	4615      	mov	r5, r2
 802b716:	e7bd      	b.n	802b694 <_printf_i+0x12c>
 802b718:	682b      	ldr	r3, [r5, #0]
 802b71a:	6826      	ldr	r6, [r4, #0]
 802b71c:	6961      	ldr	r1, [r4, #20]
 802b71e:	1d18      	adds	r0, r3, #4
 802b720:	6028      	str	r0, [r5, #0]
 802b722:	0635      	lsls	r5, r6, #24
 802b724:	681b      	ldr	r3, [r3, #0]
 802b726:	d501      	bpl.n	802b72c <_printf_i+0x1c4>
 802b728:	6019      	str	r1, [r3, #0]
 802b72a:	e002      	b.n	802b732 <_printf_i+0x1ca>
 802b72c:	0670      	lsls	r0, r6, #25
 802b72e:	d5fb      	bpl.n	802b728 <_printf_i+0x1c0>
 802b730:	8019      	strh	r1, [r3, #0]
 802b732:	2300      	movs	r3, #0
 802b734:	6123      	str	r3, [r4, #16]
 802b736:	4615      	mov	r5, r2
 802b738:	e7bc      	b.n	802b6b4 <_printf_i+0x14c>
 802b73a:	682b      	ldr	r3, [r5, #0]
 802b73c:	1d1a      	adds	r2, r3, #4
 802b73e:	602a      	str	r2, [r5, #0]
 802b740:	681d      	ldr	r5, [r3, #0]
 802b742:	6862      	ldr	r2, [r4, #4]
 802b744:	2100      	movs	r1, #0
 802b746:	4628      	mov	r0, r5
 802b748:	f7d4 fdb2 	bl	80002b0 <memchr>
 802b74c:	b108      	cbz	r0, 802b752 <_printf_i+0x1ea>
 802b74e:	1b40      	subs	r0, r0, r5
 802b750:	6060      	str	r0, [r4, #4]
 802b752:	6863      	ldr	r3, [r4, #4]
 802b754:	6123      	str	r3, [r4, #16]
 802b756:	2300      	movs	r3, #0
 802b758:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802b75c:	e7aa      	b.n	802b6b4 <_printf_i+0x14c>
 802b75e:	6923      	ldr	r3, [r4, #16]
 802b760:	462a      	mov	r2, r5
 802b762:	4649      	mov	r1, r9
 802b764:	4640      	mov	r0, r8
 802b766:	47d0      	blx	sl
 802b768:	3001      	adds	r0, #1
 802b76a:	d0ad      	beq.n	802b6c8 <_printf_i+0x160>
 802b76c:	6823      	ldr	r3, [r4, #0]
 802b76e:	079b      	lsls	r3, r3, #30
 802b770:	d413      	bmi.n	802b79a <_printf_i+0x232>
 802b772:	68e0      	ldr	r0, [r4, #12]
 802b774:	9b03      	ldr	r3, [sp, #12]
 802b776:	4298      	cmp	r0, r3
 802b778:	bfb8      	it	lt
 802b77a:	4618      	movlt	r0, r3
 802b77c:	e7a6      	b.n	802b6cc <_printf_i+0x164>
 802b77e:	2301      	movs	r3, #1
 802b780:	4632      	mov	r2, r6
 802b782:	4649      	mov	r1, r9
 802b784:	4640      	mov	r0, r8
 802b786:	47d0      	blx	sl
 802b788:	3001      	adds	r0, #1
 802b78a:	d09d      	beq.n	802b6c8 <_printf_i+0x160>
 802b78c:	3501      	adds	r5, #1
 802b78e:	68e3      	ldr	r3, [r4, #12]
 802b790:	9903      	ldr	r1, [sp, #12]
 802b792:	1a5b      	subs	r3, r3, r1
 802b794:	42ab      	cmp	r3, r5
 802b796:	dcf2      	bgt.n	802b77e <_printf_i+0x216>
 802b798:	e7eb      	b.n	802b772 <_printf_i+0x20a>
 802b79a:	2500      	movs	r5, #0
 802b79c:	f104 0619 	add.w	r6, r4, #25
 802b7a0:	e7f5      	b.n	802b78e <_printf_i+0x226>
 802b7a2:	bf00      	nop
 802b7a4:	080430e1 	.word	0x080430e1
 802b7a8:	080430f2 	.word	0x080430f2

0802b7ac <__sflush_r>:
 802b7ac:	898a      	ldrh	r2, [r1, #12]
 802b7ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b7b2:	4605      	mov	r5, r0
 802b7b4:	0710      	lsls	r0, r2, #28
 802b7b6:	460c      	mov	r4, r1
 802b7b8:	d458      	bmi.n	802b86c <__sflush_r+0xc0>
 802b7ba:	684b      	ldr	r3, [r1, #4]
 802b7bc:	2b00      	cmp	r3, #0
 802b7be:	dc05      	bgt.n	802b7cc <__sflush_r+0x20>
 802b7c0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802b7c2:	2b00      	cmp	r3, #0
 802b7c4:	dc02      	bgt.n	802b7cc <__sflush_r+0x20>
 802b7c6:	2000      	movs	r0, #0
 802b7c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b7cc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802b7ce:	2e00      	cmp	r6, #0
 802b7d0:	d0f9      	beq.n	802b7c6 <__sflush_r+0x1a>
 802b7d2:	2300      	movs	r3, #0
 802b7d4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802b7d8:	682f      	ldr	r7, [r5, #0]
 802b7da:	6a21      	ldr	r1, [r4, #32]
 802b7dc:	602b      	str	r3, [r5, #0]
 802b7de:	d032      	beq.n	802b846 <__sflush_r+0x9a>
 802b7e0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802b7e2:	89a3      	ldrh	r3, [r4, #12]
 802b7e4:	075a      	lsls	r2, r3, #29
 802b7e6:	d505      	bpl.n	802b7f4 <__sflush_r+0x48>
 802b7e8:	6863      	ldr	r3, [r4, #4]
 802b7ea:	1ac0      	subs	r0, r0, r3
 802b7ec:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802b7ee:	b10b      	cbz	r3, 802b7f4 <__sflush_r+0x48>
 802b7f0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802b7f2:	1ac0      	subs	r0, r0, r3
 802b7f4:	2300      	movs	r3, #0
 802b7f6:	4602      	mov	r2, r0
 802b7f8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802b7fa:	6a21      	ldr	r1, [r4, #32]
 802b7fc:	4628      	mov	r0, r5
 802b7fe:	47b0      	blx	r6
 802b800:	1c43      	adds	r3, r0, #1
 802b802:	89a3      	ldrh	r3, [r4, #12]
 802b804:	d106      	bne.n	802b814 <__sflush_r+0x68>
 802b806:	6829      	ldr	r1, [r5, #0]
 802b808:	291d      	cmp	r1, #29
 802b80a:	d82b      	bhi.n	802b864 <__sflush_r+0xb8>
 802b80c:	4a29      	ldr	r2, [pc, #164]	; (802b8b4 <__sflush_r+0x108>)
 802b80e:	410a      	asrs	r2, r1
 802b810:	07d6      	lsls	r6, r2, #31
 802b812:	d427      	bmi.n	802b864 <__sflush_r+0xb8>
 802b814:	2200      	movs	r2, #0
 802b816:	6062      	str	r2, [r4, #4]
 802b818:	04d9      	lsls	r1, r3, #19
 802b81a:	6922      	ldr	r2, [r4, #16]
 802b81c:	6022      	str	r2, [r4, #0]
 802b81e:	d504      	bpl.n	802b82a <__sflush_r+0x7e>
 802b820:	1c42      	adds	r2, r0, #1
 802b822:	d101      	bne.n	802b828 <__sflush_r+0x7c>
 802b824:	682b      	ldr	r3, [r5, #0]
 802b826:	b903      	cbnz	r3, 802b82a <__sflush_r+0x7e>
 802b828:	6560      	str	r0, [r4, #84]	; 0x54
 802b82a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b82c:	602f      	str	r7, [r5, #0]
 802b82e:	2900      	cmp	r1, #0
 802b830:	d0c9      	beq.n	802b7c6 <__sflush_r+0x1a>
 802b832:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802b836:	4299      	cmp	r1, r3
 802b838:	d002      	beq.n	802b840 <__sflush_r+0x94>
 802b83a:	4628      	mov	r0, r5
 802b83c:	f7ff fc96 	bl	802b16c <_free_r>
 802b840:	2000      	movs	r0, #0
 802b842:	6360      	str	r0, [r4, #52]	; 0x34
 802b844:	e7c0      	b.n	802b7c8 <__sflush_r+0x1c>
 802b846:	2301      	movs	r3, #1
 802b848:	4628      	mov	r0, r5
 802b84a:	47b0      	blx	r6
 802b84c:	1c41      	adds	r1, r0, #1
 802b84e:	d1c8      	bne.n	802b7e2 <__sflush_r+0x36>
 802b850:	682b      	ldr	r3, [r5, #0]
 802b852:	2b00      	cmp	r3, #0
 802b854:	d0c5      	beq.n	802b7e2 <__sflush_r+0x36>
 802b856:	2b1d      	cmp	r3, #29
 802b858:	d001      	beq.n	802b85e <__sflush_r+0xb2>
 802b85a:	2b16      	cmp	r3, #22
 802b85c:	d101      	bne.n	802b862 <__sflush_r+0xb6>
 802b85e:	602f      	str	r7, [r5, #0]
 802b860:	e7b1      	b.n	802b7c6 <__sflush_r+0x1a>
 802b862:	89a3      	ldrh	r3, [r4, #12]
 802b864:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802b868:	81a3      	strh	r3, [r4, #12]
 802b86a:	e7ad      	b.n	802b7c8 <__sflush_r+0x1c>
 802b86c:	690f      	ldr	r7, [r1, #16]
 802b86e:	2f00      	cmp	r7, #0
 802b870:	d0a9      	beq.n	802b7c6 <__sflush_r+0x1a>
 802b872:	0793      	lsls	r3, r2, #30
 802b874:	680e      	ldr	r6, [r1, #0]
 802b876:	bf08      	it	eq
 802b878:	694b      	ldreq	r3, [r1, #20]
 802b87a:	600f      	str	r7, [r1, #0]
 802b87c:	bf18      	it	ne
 802b87e:	2300      	movne	r3, #0
 802b880:	eba6 0807 	sub.w	r8, r6, r7
 802b884:	608b      	str	r3, [r1, #8]
 802b886:	f1b8 0f00 	cmp.w	r8, #0
 802b88a:	dd9c      	ble.n	802b7c6 <__sflush_r+0x1a>
 802b88c:	6a21      	ldr	r1, [r4, #32]
 802b88e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802b890:	4643      	mov	r3, r8
 802b892:	463a      	mov	r2, r7
 802b894:	4628      	mov	r0, r5
 802b896:	47b0      	blx	r6
 802b898:	2800      	cmp	r0, #0
 802b89a:	dc06      	bgt.n	802b8aa <__sflush_r+0xfe>
 802b89c:	89a3      	ldrh	r3, [r4, #12]
 802b89e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802b8a2:	81a3      	strh	r3, [r4, #12]
 802b8a4:	f04f 30ff 	mov.w	r0, #4294967295
 802b8a8:	e78e      	b.n	802b7c8 <__sflush_r+0x1c>
 802b8aa:	4407      	add	r7, r0
 802b8ac:	eba8 0800 	sub.w	r8, r8, r0
 802b8b0:	e7e9      	b.n	802b886 <__sflush_r+0xda>
 802b8b2:	bf00      	nop
 802b8b4:	dfbffffe 	.word	0xdfbffffe

0802b8b8 <_fflush_r>:
 802b8b8:	b538      	push	{r3, r4, r5, lr}
 802b8ba:	690b      	ldr	r3, [r1, #16]
 802b8bc:	4605      	mov	r5, r0
 802b8be:	460c      	mov	r4, r1
 802b8c0:	b913      	cbnz	r3, 802b8c8 <_fflush_r+0x10>
 802b8c2:	2500      	movs	r5, #0
 802b8c4:	4628      	mov	r0, r5
 802b8c6:	bd38      	pop	{r3, r4, r5, pc}
 802b8c8:	b118      	cbz	r0, 802b8d2 <_fflush_r+0x1a>
 802b8ca:	6a03      	ldr	r3, [r0, #32]
 802b8cc:	b90b      	cbnz	r3, 802b8d2 <_fflush_r+0x1a>
 802b8ce:	f7ff fa2f 	bl	802ad30 <__sinit>
 802b8d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802b8d6:	2b00      	cmp	r3, #0
 802b8d8:	d0f3      	beq.n	802b8c2 <_fflush_r+0xa>
 802b8da:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802b8dc:	07d0      	lsls	r0, r2, #31
 802b8de:	d404      	bmi.n	802b8ea <_fflush_r+0x32>
 802b8e0:	0599      	lsls	r1, r3, #22
 802b8e2:	d402      	bmi.n	802b8ea <_fflush_r+0x32>
 802b8e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802b8e6:	f7ff fbd2 	bl	802b08e <__retarget_lock_acquire_recursive>
 802b8ea:	4628      	mov	r0, r5
 802b8ec:	4621      	mov	r1, r4
 802b8ee:	f7ff ff5d 	bl	802b7ac <__sflush_r>
 802b8f2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802b8f4:	07da      	lsls	r2, r3, #31
 802b8f6:	4605      	mov	r5, r0
 802b8f8:	d4e4      	bmi.n	802b8c4 <_fflush_r+0xc>
 802b8fa:	89a3      	ldrh	r3, [r4, #12]
 802b8fc:	059b      	lsls	r3, r3, #22
 802b8fe:	d4e1      	bmi.n	802b8c4 <_fflush_r+0xc>
 802b900:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802b902:	f7ff fbc5 	bl	802b090 <__retarget_lock_release_recursive>
 802b906:	e7dd      	b.n	802b8c4 <_fflush_r+0xc>

0802b908 <__swbuf_r>:
 802b908:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b90a:	460e      	mov	r6, r1
 802b90c:	4614      	mov	r4, r2
 802b90e:	4605      	mov	r5, r0
 802b910:	b118      	cbz	r0, 802b91a <__swbuf_r+0x12>
 802b912:	6a03      	ldr	r3, [r0, #32]
 802b914:	b90b      	cbnz	r3, 802b91a <__swbuf_r+0x12>
 802b916:	f7ff fa0b 	bl	802ad30 <__sinit>
 802b91a:	69a3      	ldr	r3, [r4, #24]
 802b91c:	60a3      	str	r3, [r4, #8]
 802b91e:	89a3      	ldrh	r3, [r4, #12]
 802b920:	071a      	lsls	r2, r3, #28
 802b922:	d525      	bpl.n	802b970 <__swbuf_r+0x68>
 802b924:	6923      	ldr	r3, [r4, #16]
 802b926:	b31b      	cbz	r3, 802b970 <__swbuf_r+0x68>
 802b928:	6823      	ldr	r3, [r4, #0]
 802b92a:	6922      	ldr	r2, [r4, #16]
 802b92c:	1a98      	subs	r0, r3, r2
 802b92e:	6963      	ldr	r3, [r4, #20]
 802b930:	b2f6      	uxtb	r6, r6
 802b932:	4283      	cmp	r3, r0
 802b934:	4637      	mov	r7, r6
 802b936:	dc04      	bgt.n	802b942 <__swbuf_r+0x3a>
 802b938:	4621      	mov	r1, r4
 802b93a:	4628      	mov	r0, r5
 802b93c:	f7ff ffbc 	bl	802b8b8 <_fflush_r>
 802b940:	b9e0      	cbnz	r0, 802b97c <__swbuf_r+0x74>
 802b942:	68a3      	ldr	r3, [r4, #8]
 802b944:	3b01      	subs	r3, #1
 802b946:	60a3      	str	r3, [r4, #8]
 802b948:	6823      	ldr	r3, [r4, #0]
 802b94a:	1c5a      	adds	r2, r3, #1
 802b94c:	6022      	str	r2, [r4, #0]
 802b94e:	701e      	strb	r6, [r3, #0]
 802b950:	6962      	ldr	r2, [r4, #20]
 802b952:	1c43      	adds	r3, r0, #1
 802b954:	429a      	cmp	r2, r3
 802b956:	d004      	beq.n	802b962 <__swbuf_r+0x5a>
 802b958:	89a3      	ldrh	r3, [r4, #12]
 802b95a:	07db      	lsls	r3, r3, #31
 802b95c:	d506      	bpl.n	802b96c <__swbuf_r+0x64>
 802b95e:	2e0a      	cmp	r6, #10
 802b960:	d104      	bne.n	802b96c <__swbuf_r+0x64>
 802b962:	4621      	mov	r1, r4
 802b964:	4628      	mov	r0, r5
 802b966:	f7ff ffa7 	bl	802b8b8 <_fflush_r>
 802b96a:	b938      	cbnz	r0, 802b97c <__swbuf_r+0x74>
 802b96c:	4638      	mov	r0, r7
 802b96e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802b970:	4621      	mov	r1, r4
 802b972:	4628      	mov	r0, r5
 802b974:	f000 f806 	bl	802b984 <__swsetup_r>
 802b978:	2800      	cmp	r0, #0
 802b97a:	d0d5      	beq.n	802b928 <__swbuf_r+0x20>
 802b97c:	f04f 37ff 	mov.w	r7, #4294967295
 802b980:	e7f4      	b.n	802b96c <__swbuf_r+0x64>
	...

0802b984 <__swsetup_r>:
 802b984:	b538      	push	{r3, r4, r5, lr}
 802b986:	4b2a      	ldr	r3, [pc, #168]	; (802ba30 <__swsetup_r+0xac>)
 802b988:	4605      	mov	r5, r0
 802b98a:	6818      	ldr	r0, [r3, #0]
 802b98c:	460c      	mov	r4, r1
 802b98e:	b118      	cbz	r0, 802b998 <__swsetup_r+0x14>
 802b990:	6a03      	ldr	r3, [r0, #32]
 802b992:	b90b      	cbnz	r3, 802b998 <__swsetup_r+0x14>
 802b994:	f7ff f9cc 	bl	802ad30 <__sinit>
 802b998:	89a3      	ldrh	r3, [r4, #12]
 802b99a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802b99e:	0718      	lsls	r0, r3, #28
 802b9a0:	d422      	bmi.n	802b9e8 <__swsetup_r+0x64>
 802b9a2:	06d9      	lsls	r1, r3, #27
 802b9a4:	d407      	bmi.n	802b9b6 <__swsetup_r+0x32>
 802b9a6:	2309      	movs	r3, #9
 802b9a8:	602b      	str	r3, [r5, #0]
 802b9aa:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802b9ae:	81a3      	strh	r3, [r4, #12]
 802b9b0:	f04f 30ff 	mov.w	r0, #4294967295
 802b9b4:	e034      	b.n	802ba20 <__swsetup_r+0x9c>
 802b9b6:	0758      	lsls	r0, r3, #29
 802b9b8:	d512      	bpl.n	802b9e0 <__swsetup_r+0x5c>
 802b9ba:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802b9bc:	b141      	cbz	r1, 802b9d0 <__swsetup_r+0x4c>
 802b9be:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802b9c2:	4299      	cmp	r1, r3
 802b9c4:	d002      	beq.n	802b9cc <__swsetup_r+0x48>
 802b9c6:	4628      	mov	r0, r5
 802b9c8:	f7ff fbd0 	bl	802b16c <_free_r>
 802b9cc:	2300      	movs	r3, #0
 802b9ce:	6363      	str	r3, [r4, #52]	; 0x34
 802b9d0:	89a3      	ldrh	r3, [r4, #12]
 802b9d2:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802b9d6:	81a3      	strh	r3, [r4, #12]
 802b9d8:	2300      	movs	r3, #0
 802b9da:	6063      	str	r3, [r4, #4]
 802b9dc:	6923      	ldr	r3, [r4, #16]
 802b9de:	6023      	str	r3, [r4, #0]
 802b9e0:	89a3      	ldrh	r3, [r4, #12]
 802b9e2:	f043 0308 	orr.w	r3, r3, #8
 802b9e6:	81a3      	strh	r3, [r4, #12]
 802b9e8:	6923      	ldr	r3, [r4, #16]
 802b9ea:	b94b      	cbnz	r3, 802ba00 <__swsetup_r+0x7c>
 802b9ec:	89a3      	ldrh	r3, [r4, #12]
 802b9ee:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802b9f2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802b9f6:	d003      	beq.n	802ba00 <__swsetup_r+0x7c>
 802b9f8:	4621      	mov	r1, r4
 802b9fa:	4628      	mov	r0, r5
 802b9fc:	f000 f840 	bl	802ba80 <__smakebuf_r>
 802ba00:	89a0      	ldrh	r0, [r4, #12]
 802ba02:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802ba06:	f010 0301 	ands.w	r3, r0, #1
 802ba0a:	d00a      	beq.n	802ba22 <__swsetup_r+0x9e>
 802ba0c:	2300      	movs	r3, #0
 802ba0e:	60a3      	str	r3, [r4, #8]
 802ba10:	6963      	ldr	r3, [r4, #20]
 802ba12:	425b      	negs	r3, r3
 802ba14:	61a3      	str	r3, [r4, #24]
 802ba16:	6923      	ldr	r3, [r4, #16]
 802ba18:	b943      	cbnz	r3, 802ba2c <__swsetup_r+0xa8>
 802ba1a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802ba1e:	d1c4      	bne.n	802b9aa <__swsetup_r+0x26>
 802ba20:	bd38      	pop	{r3, r4, r5, pc}
 802ba22:	0781      	lsls	r1, r0, #30
 802ba24:	bf58      	it	pl
 802ba26:	6963      	ldrpl	r3, [r4, #20]
 802ba28:	60a3      	str	r3, [r4, #8]
 802ba2a:	e7f4      	b.n	802ba16 <__swsetup_r+0x92>
 802ba2c:	2000      	movs	r0, #0
 802ba2e:	e7f7      	b.n	802ba20 <__swsetup_r+0x9c>
 802ba30:	20000160 	.word	0x20000160

0802ba34 <__swhatbuf_r>:
 802ba34:	b570      	push	{r4, r5, r6, lr}
 802ba36:	460c      	mov	r4, r1
 802ba38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ba3c:	2900      	cmp	r1, #0
 802ba3e:	b096      	sub	sp, #88	; 0x58
 802ba40:	4615      	mov	r5, r2
 802ba42:	461e      	mov	r6, r3
 802ba44:	da0d      	bge.n	802ba62 <__swhatbuf_r+0x2e>
 802ba46:	89a3      	ldrh	r3, [r4, #12]
 802ba48:	f013 0f80 	tst.w	r3, #128	; 0x80
 802ba4c:	f04f 0100 	mov.w	r1, #0
 802ba50:	bf0c      	ite	eq
 802ba52:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802ba56:	2340      	movne	r3, #64	; 0x40
 802ba58:	2000      	movs	r0, #0
 802ba5a:	6031      	str	r1, [r6, #0]
 802ba5c:	602b      	str	r3, [r5, #0]
 802ba5e:	b016      	add	sp, #88	; 0x58
 802ba60:	bd70      	pop	{r4, r5, r6, pc}
 802ba62:	466a      	mov	r2, sp
 802ba64:	f000 f848 	bl	802baf8 <_fstat_r>
 802ba68:	2800      	cmp	r0, #0
 802ba6a:	dbec      	blt.n	802ba46 <__swhatbuf_r+0x12>
 802ba6c:	9901      	ldr	r1, [sp, #4]
 802ba6e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802ba72:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802ba76:	4259      	negs	r1, r3
 802ba78:	4159      	adcs	r1, r3
 802ba7a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802ba7e:	e7eb      	b.n	802ba58 <__swhatbuf_r+0x24>

0802ba80 <__smakebuf_r>:
 802ba80:	898b      	ldrh	r3, [r1, #12]
 802ba82:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802ba84:	079d      	lsls	r5, r3, #30
 802ba86:	4606      	mov	r6, r0
 802ba88:	460c      	mov	r4, r1
 802ba8a:	d507      	bpl.n	802ba9c <__smakebuf_r+0x1c>
 802ba8c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802ba90:	6023      	str	r3, [r4, #0]
 802ba92:	6123      	str	r3, [r4, #16]
 802ba94:	2301      	movs	r3, #1
 802ba96:	6163      	str	r3, [r4, #20]
 802ba98:	b002      	add	sp, #8
 802ba9a:	bd70      	pop	{r4, r5, r6, pc}
 802ba9c:	ab01      	add	r3, sp, #4
 802ba9e:	466a      	mov	r2, sp
 802baa0:	f7ff ffc8 	bl	802ba34 <__swhatbuf_r>
 802baa4:	9900      	ldr	r1, [sp, #0]
 802baa6:	4605      	mov	r5, r0
 802baa8:	4630      	mov	r0, r6
 802baaa:	f7ff f81b 	bl	802aae4 <_malloc_r>
 802baae:	b948      	cbnz	r0, 802bac4 <__smakebuf_r+0x44>
 802bab0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802bab4:	059a      	lsls	r2, r3, #22
 802bab6:	d4ef      	bmi.n	802ba98 <__smakebuf_r+0x18>
 802bab8:	f023 0303 	bic.w	r3, r3, #3
 802babc:	f043 0302 	orr.w	r3, r3, #2
 802bac0:	81a3      	strh	r3, [r4, #12]
 802bac2:	e7e3      	b.n	802ba8c <__smakebuf_r+0xc>
 802bac4:	89a3      	ldrh	r3, [r4, #12]
 802bac6:	6020      	str	r0, [r4, #0]
 802bac8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802bacc:	81a3      	strh	r3, [r4, #12]
 802bace:	9b00      	ldr	r3, [sp, #0]
 802bad0:	6163      	str	r3, [r4, #20]
 802bad2:	9b01      	ldr	r3, [sp, #4]
 802bad4:	6120      	str	r0, [r4, #16]
 802bad6:	b15b      	cbz	r3, 802baf0 <__smakebuf_r+0x70>
 802bad8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802badc:	4630      	mov	r0, r6
 802bade:	f000 f81d 	bl	802bb1c <_isatty_r>
 802bae2:	b128      	cbz	r0, 802baf0 <__smakebuf_r+0x70>
 802bae4:	89a3      	ldrh	r3, [r4, #12]
 802bae6:	f023 0303 	bic.w	r3, r3, #3
 802baea:	f043 0301 	orr.w	r3, r3, #1
 802baee:	81a3      	strh	r3, [r4, #12]
 802baf0:	89a3      	ldrh	r3, [r4, #12]
 802baf2:	431d      	orrs	r5, r3
 802baf4:	81a5      	strh	r5, [r4, #12]
 802baf6:	e7cf      	b.n	802ba98 <__smakebuf_r+0x18>

0802baf8 <_fstat_r>:
 802baf8:	b538      	push	{r3, r4, r5, lr}
 802bafa:	4d07      	ldr	r5, [pc, #28]	; (802bb18 <_fstat_r+0x20>)
 802bafc:	2300      	movs	r3, #0
 802bafe:	4604      	mov	r4, r0
 802bb00:	4608      	mov	r0, r1
 802bb02:	4611      	mov	r1, r2
 802bb04:	602b      	str	r3, [r5, #0]
 802bb06:	f7d6 fb77 	bl	80021f8 <_fstat>
 802bb0a:	1c43      	adds	r3, r0, #1
 802bb0c:	d102      	bne.n	802bb14 <_fstat_r+0x1c>
 802bb0e:	682b      	ldr	r3, [r5, #0]
 802bb10:	b103      	cbz	r3, 802bb14 <_fstat_r+0x1c>
 802bb12:	6023      	str	r3, [r4, #0]
 802bb14:	bd38      	pop	{r3, r4, r5, pc}
 802bb16:	bf00      	nop
 802bb18:	2001384c 	.word	0x2001384c

0802bb1c <_isatty_r>:
 802bb1c:	b538      	push	{r3, r4, r5, lr}
 802bb1e:	4d06      	ldr	r5, [pc, #24]	; (802bb38 <_isatty_r+0x1c>)
 802bb20:	2300      	movs	r3, #0
 802bb22:	4604      	mov	r4, r0
 802bb24:	4608      	mov	r0, r1
 802bb26:	602b      	str	r3, [r5, #0]
 802bb28:	f7d6 fb6c 	bl	8002204 <_isatty>
 802bb2c:	1c43      	adds	r3, r0, #1
 802bb2e:	d102      	bne.n	802bb36 <_isatty_r+0x1a>
 802bb30:	682b      	ldr	r3, [r5, #0]
 802bb32:	b103      	cbz	r3, 802bb36 <_isatty_r+0x1a>
 802bb34:	6023      	str	r3, [r4, #0]
 802bb36:	bd38      	pop	{r3, r4, r5, pc}
 802bb38:	2001384c 	.word	0x2001384c

0802bb3c <_init>:
 802bb3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bb3e:	bf00      	nop
 802bb40:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bb42:	bc08      	pop	{r3}
 802bb44:	469e      	mov	lr, r3
 802bb46:	4770      	bx	lr

0802bb48 <_fini>:
 802bb48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bb4a:	bf00      	nop
 802bb4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802bb4e:	bc08      	pop	{r3}
 802bb50:	469e      	mov	lr, r3
 802bb52:	4770      	bx	lr

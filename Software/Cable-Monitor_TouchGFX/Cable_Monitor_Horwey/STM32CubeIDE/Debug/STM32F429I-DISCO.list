
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002e728  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171f0  0802e8d8  0802e8d8  0003e8d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08045ac8  08045ac8  00055ac8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  080497c0  080497c0  000597c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000734  08049a0c  08049a0c  00059a0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  0804a140  0804a140  0005a140  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cf230  080cf230  000e016c  2**0
                  CONTENTS
  8 .ARM          00000008  080cf230  080cf230  000df230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cf238  080cf238  000e016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cf238  080cf238  000df238  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080cf24c  080cf24c  000df24c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080cf250  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001431c  20000170  080cf3bc  000e0170  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  2001448c  080cf3bc  000e448c  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e019c  2**0
                  CONTENTS, READONLY
 18 .debug_line   00097d8d  00000000  00000000  000e02ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 000000a9  00000000  00000000  0017805b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00250fa0  00000000  00000000  00178104  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002cb1c  00000000  00000000  003c90a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004490  00000000  00000000  003f5bc0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00121378  00000000  00000000  003fa050  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00008823  00000000  00000000  0051b3c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00035896  00000000  00000000  00523beb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003b885  00000000  00000000  00559481  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000cdc8  00000000  00000000  00594d08  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    0000350f  00000000  00000000  005a1ad0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000150  00000000  00000000  005a4fdf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000170 	.word	0x20000170
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802e8c0 	.word	0x0802e8c0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000174 	.word	0x20000174
 80001ec:	0802e8c0 	.word	0x0802e8c0

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_dmul>:
 8000350:	b570      	push	{r4, r5, r6, lr}
 8000352:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000356:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800035a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800035e:	bf1d      	ittte	ne
 8000360:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000364:	ea94 0f0c 	teqne	r4, ip
 8000368:	ea95 0f0c 	teqne	r5, ip
 800036c:	f000 f8de 	bleq	800052c <__aeabi_dmul+0x1dc>
 8000370:	442c      	add	r4, r5
 8000372:	ea81 0603 	eor.w	r6, r1, r3
 8000376:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800037a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800037e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000382:	bf18      	it	ne
 8000384:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000388:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800038c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000390:	d038      	beq.n	8000404 <__aeabi_dmul+0xb4>
 8000392:	fba0 ce02 	umull	ip, lr, r0, r2
 8000396:	f04f 0500 	mov.w	r5, #0
 800039a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800039e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80003a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80003a6:	f04f 0600 	mov.w	r6, #0
 80003aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80003ae:	f09c 0f00 	teq	ip, #0
 80003b2:	bf18      	it	ne
 80003b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80003b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80003bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80003c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80003c4:	d204      	bcs.n	80003d0 <__aeabi_dmul+0x80>
 80003c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80003ca:	416d      	adcs	r5, r5
 80003cc:	eb46 0606 	adc.w	r6, r6, r6
 80003d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80003d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80003d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80003dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80003e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80003e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80003e8:	bf88      	it	hi
 80003ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80003ee:	d81e      	bhi.n	800042e <__aeabi_dmul+0xde>
 80003f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80003f4:	bf08      	it	eq
 80003f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80003fa:	f150 0000 	adcs.w	r0, r0, #0
 80003fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000402:	bd70      	pop	{r4, r5, r6, pc}
 8000404:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000408:	ea46 0101 	orr.w	r1, r6, r1
 800040c:	ea40 0002 	orr.w	r0, r0, r2
 8000410:	ea81 0103 	eor.w	r1, r1, r3
 8000414:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000418:	bfc2      	ittt	gt
 800041a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800041e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000422:	bd70      	popgt	{r4, r5, r6, pc}
 8000424:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000428:	f04f 0e00 	mov.w	lr, #0
 800042c:	3c01      	subs	r4, #1
 800042e:	f300 80ab 	bgt.w	8000588 <__aeabi_dmul+0x238>
 8000432:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000436:	bfde      	ittt	le
 8000438:	2000      	movle	r0, #0
 800043a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800043e:	bd70      	pople	{r4, r5, r6, pc}
 8000440:	f1c4 0400 	rsb	r4, r4, #0
 8000444:	3c20      	subs	r4, #32
 8000446:	da35      	bge.n	80004b4 <__aeabi_dmul+0x164>
 8000448:	340c      	adds	r4, #12
 800044a:	dc1b      	bgt.n	8000484 <__aeabi_dmul+0x134>
 800044c:	f104 0414 	add.w	r4, r4, #20
 8000450:	f1c4 0520 	rsb	r5, r4, #32
 8000454:	fa00 f305 	lsl.w	r3, r0, r5
 8000458:	fa20 f004 	lsr.w	r0, r0, r4
 800045c:	fa01 f205 	lsl.w	r2, r1, r5
 8000460:	ea40 0002 	orr.w	r0, r0, r2
 8000464:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000468:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800046c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000470:	fa21 f604 	lsr.w	r6, r1, r4
 8000474:	eb42 0106 	adc.w	r1, r2, r6
 8000478:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800047c:	bf08      	it	eq
 800047e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000482:	bd70      	pop	{r4, r5, r6, pc}
 8000484:	f1c4 040c 	rsb	r4, r4, #12
 8000488:	f1c4 0520 	rsb	r5, r4, #32
 800048c:	fa00 f304 	lsl.w	r3, r0, r4
 8000490:	fa20 f005 	lsr.w	r0, r0, r5
 8000494:	fa01 f204 	lsl.w	r2, r1, r4
 8000498:	ea40 0002 	orr.w	r0, r0, r2
 800049c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80004a4:	f141 0100 	adc.w	r1, r1, #0
 80004a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004ac:	bf08      	it	eq
 80004ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004b2:	bd70      	pop	{r4, r5, r6, pc}
 80004b4:	f1c4 0520 	rsb	r5, r4, #32
 80004b8:	fa00 f205 	lsl.w	r2, r0, r5
 80004bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80004c0:	fa20 f304 	lsr.w	r3, r0, r4
 80004c4:	fa01 f205 	lsl.w	r2, r1, r5
 80004c8:	ea43 0302 	orr.w	r3, r3, r2
 80004cc:	fa21 f004 	lsr.w	r0, r1, r4
 80004d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004d4:	fa21 f204 	lsr.w	r2, r1, r4
 80004d8:	ea20 0002 	bic.w	r0, r0, r2
 80004dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80004e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004e4:	bf08      	it	eq
 80004e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004ea:	bd70      	pop	{r4, r5, r6, pc}
 80004ec:	f094 0f00 	teq	r4, #0
 80004f0:	d10f      	bne.n	8000512 <__aeabi_dmul+0x1c2>
 80004f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80004f6:	0040      	lsls	r0, r0, #1
 80004f8:	eb41 0101 	adc.w	r1, r1, r1
 80004fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000500:	bf08      	it	eq
 8000502:	3c01      	subeq	r4, #1
 8000504:	d0f7      	beq.n	80004f6 <__aeabi_dmul+0x1a6>
 8000506:	ea41 0106 	orr.w	r1, r1, r6
 800050a:	f095 0f00 	teq	r5, #0
 800050e:	bf18      	it	ne
 8000510:	4770      	bxne	lr
 8000512:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000516:	0052      	lsls	r2, r2, #1
 8000518:	eb43 0303 	adc.w	r3, r3, r3
 800051c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000520:	bf08      	it	eq
 8000522:	3d01      	subeq	r5, #1
 8000524:	d0f7      	beq.n	8000516 <__aeabi_dmul+0x1c6>
 8000526:	ea43 0306 	orr.w	r3, r3, r6
 800052a:	4770      	bx	lr
 800052c:	ea94 0f0c 	teq	r4, ip
 8000530:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000534:	bf18      	it	ne
 8000536:	ea95 0f0c 	teqne	r5, ip
 800053a:	d00c      	beq.n	8000556 <__aeabi_dmul+0x206>
 800053c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000540:	bf18      	it	ne
 8000542:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000546:	d1d1      	bne.n	80004ec <__aeabi_dmul+0x19c>
 8000548:	ea81 0103 	eor.w	r1, r1, r3
 800054c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000550:	f04f 0000 	mov.w	r0, #0
 8000554:	bd70      	pop	{r4, r5, r6, pc}
 8000556:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800055a:	bf06      	itte	eq
 800055c:	4610      	moveq	r0, r2
 800055e:	4619      	moveq	r1, r3
 8000560:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000564:	d019      	beq.n	800059a <__aeabi_dmul+0x24a>
 8000566:	ea94 0f0c 	teq	r4, ip
 800056a:	d102      	bne.n	8000572 <__aeabi_dmul+0x222>
 800056c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000570:	d113      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000572:	ea95 0f0c 	teq	r5, ip
 8000576:	d105      	bne.n	8000584 <__aeabi_dmul+0x234>
 8000578:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800057c:	bf1c      	itt	ne
 800057e:	4610      	movne	r0, r2
 8000580:	4619      	movne	r1, r3
 8000582:	d10a      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000584:	ea81 0103 	eor.w	r1, r1, r3
 8000588:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800058c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000590:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000594:	f04f 0000 	mov.w	r0, #0
 8000598:	bd70      	pop	{r4, r5, r6, pc}
 800059a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800059e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80005a2:	bd70      	pop	{r4, r5, r6, pc}

080005a4 <__aeabi_drsub>:
 80005a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e002      	b.n	80005b0 <__adddf3>
 80005aa:	bf00      	nop

080005ac <__aeabi_dsub>:
 80005ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080005b0 <__adddf3>:
 80005b0:	b530      	push	{r4, r5, lr}
 80005b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80005b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80005ba:	ea94 0f05 	teq	r4, r5
 80005be:	bf08      	it	eq
 80005c0:	ea90 0f02 	teqeq	r0, r2
 80005c4:	bf1f      	itttt	ne
 80005c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80005ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80005ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80005d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005d6:	f000 80e2 	beq.w	800079e <__adddf3+0x1ee>
 80005da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80005de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80005e2:	bfb8      	it	lt
 80005e4:	426d      	neglt	r5, r5
 80005e6:	dd0c      	ble.n	8000602 <__adddf3+0x52>
 80005e8:	442c      	add	r4, r5
 80005ea:	ea80 0202 	eor.w	r2, r0, r2
 80005ee:	ea81 0303 	eor.w	r3, r1, r3
 80005f2:	ea82 0000 	eor.w	r0, r2, r0
 80005f6:	ea83 0101 	eor.w	r1, r3, r1
 80005fa:	ea80 0202 	eor.w	r2, r0, r2
 80005fe:	ea81 0303 	eor.w	r3, r1, r3
 8000602:	2d36      	cmp	r5, #54	; 0x36
 8000604:	bf88      	it	hi
 8000606:	bd30      	pophi	{r4, r5, pc}
 8000608:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800060c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000610:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000614:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000618:	d002      	beq.n	8000620 <__adddf3+0x70>
 800061a:	4240      	negs	r0, r0
 800061c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000620:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000624:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000628:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800062c:	d002      	beq.n	8000634 <__adddf3+0x84>
 800062e:	4252      	negs	r2, r2
 8000630:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000634:	ea94 0f05 	teq	r4, r5
 8000638:	f000 80a7 	beq.w	800078a <__adddf3+0x1da>
 800063c:	f1a4 0401 	sub.w	r4, r4, #1
 8000640:	f1d5 0e20 	rsbs	lr, r5, #32
 8000644:	db0d      	blt.n	8000662 <__adddf3+0xb2>
 8000646:	fa02 fc0e 	lsl.w	ip, r2, lr
 800064a:	fa22 f205 	lsr.w	r2, r2, r5
 800064e:	1880      	adds	r0, r0, r2
 8000650:	f141 0100 	adc.w	r1, r1, #0
 8000654:	fa03 f20e 	lsl.w	r2, r3, lr
 8000658:	1880      	adds	r0, r0, r2
 800065a:	fa43 f305 	asr.w	r3, r3, r5
 800065e:	4159      	adcs	r1, r3
 8000660:	e00e      	b.n	8000680 <__adddf3+0xd0>
 8000662:	f1a5 0520 	sub.w	r5, r5, #32
 8000666:	f10e 0e20 	add.w	lr, lr, #32
 800066a:	2a01      	cmp	r2, #1
 800066c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000670:	bf28      	it	cs
 8000672:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000676:	fa43 f305 	asr.w	r3, r3, r5
 800067a:	18c0      	adds	r0, r0, r3
 800067c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000680:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000684:	d507      	bpl.n	8000696 <__adddf3+0xe6>
 8000686:	f04f 0e00 	mov.w	lr, #0
 800068a:	f1dc 0c00 	rsbs	ip, ip, #0
 800068e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000692:	eb6e 0101 	sbc.w	r1, lr, r1
 8000696:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800069a:	d31b      	bcc.n	80006d4 <__adddf3+0x124>
 800069c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80006a0:	d30c      	bcc.n	80006bc <__adddf3+0x10c>
 80006a2:	0849      	lsrs	r1, r1, #1
 80006a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80006a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80006ac:	f104 0401 	add.w	r4, r4, #1
 80006b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80006b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80006b8:	f080 809a 	bcs.w	80007f0 <__adddf3+0x240>
 80006bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80006c0:	bf08      	it	eq
 80006c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80006c6:	f150 0000 	adcs.w	r0, r0, #0
 80006ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ce:	ea41 0105 	orr.w	r1, r1, r5
 80006d2:	bd30      	pop	{r4, r5, pc}
 80006d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80006d8:	4140      	adcs	r0, r0
 80006da:	eb41 0101 	adc.w	r1, r1, r1
 80006de:	3c01      	subs	r4, #1
 80006e0:	bf28      	it	cs
 80006e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80006e6:	d2e9      	bcs.n	80006bc <__adddf3+0x10c>
 80006e8:	f091 0f00 	teq	r1, #0
 80006ec:	bf04      	itt	eq
 80006ee:	4601      	moveq	r1, r0
 80006f0:	2000      	moveq	r0, #0
 80006f2:	fab1 f381 	clz	r3, r1
 80006f6:	bf08      	it	eq
 80006f8:	3320      	addeq	r3, #32
 80006fa:	f1a3 030b 	sub.w	r3, r3, #11
 80006fe:	f1b3 0220 	subs.w	r2, r3, #32
 8000702:	da0c      	bge.n	800071e <__adddf3+0x16e>
 8000704:	320c      	adds	r2, #12
 8000706:	dd08      	ble.n	800071a <__adddf3+0x16a>
 8000708:	f102 0c14 	add.w	ip, r2, #20
 800070c:	f1c2 020c 	rsb	r2, r2, #12
 8000710:	fa01 f00c 	lsl.w	r0, r1, ip
 8000714:	fa21 f102 	lsr.w	r1, r1, r2
 8000718:	e00c      	b.n	8000734 <__adddf3+0x184>
 800071a:	f102 0214 	add.w	r2, r2, #20
 800071e:	bfd8      	it	le
 8000720:	f1c2 0c20 	rsble	ip, r2, #32
 8000724:	fa01 f102 	lsl.w	r1, r1, r2
 8000728:	fa20 fc0c 	lsr.w	ip, r0, ip
 800072c:	bfdc      	itt	le
 800072e:	ea41 010c 	orrle.w	r1, r1, ip
 8000732:	4090      	lslle	r0, r2
 8000734:	1ae4      	subs	r4, r4, r3
 8000736:	bfa2      	ittt	ge
 8000738:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800073c:	4329      	orrge	r1, r5
 800073e:	bd30      	popge	{r4, r5, pc}
 8000740:	ea6f 0404 	mvn.w	r4, r4
 8000744:	3c1f      	subs	r4, #31
 8000746:	da1c      	bge.n	8000782 <__adddf3+0x1d2>
 8000748:	340c      	adds	r4, #12
 800074a:	dc0e      	bgt.n	800076a <__adddf3+0x1ba>
 800074c:	f104 0414 	add.w	r4, r4, #20
 8000750:	f1c4 0220 	rsb	r2, r4, #32
 8000754:	fa20 f004 	lsr.w	r0, r0, r4
 8000758:	fa01 f302 	lsl.w	r3, r1, r2
 800075c:	ea40 0003 	orr.w	r0, r0, r3
 8000760:	fa21 f304 	lsr.w	r3, r1, r4
 8000764:	ea45 0103 	orr.w	r1, r5, r3
 8000768:	bd30      	pop	{r4, r5, pc}
 800076a:	f1c4 040c 	rsb	r4, r4, #12
 800076e:	f1c4 0220 	rsb	r2, r4, #32
 8000772:	fa20 f002 	lsr.w	r0, r0, r2
 8000776:	fa01 f304 	lsl.w	r3, r1, r4
 800077a:	ea40 0003 	orr.w	r0, r0, r3
 800077e:	4629      	mov	r1, r5
 8000780:	bd30      	pop	{r4, r5, pc}
 8000782:	fa21 f004 	lsr.w	r0, r1, r4
 8000786:	4629      	mov	r1, r5
 8000788:	bd30      	pop	{r4, r5, pc}
 800078a:	f094 0f00 	teq	r4, #0
 800078e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000792:	bf06      	itte	eq
 8000794:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000798:	3401      	addeq	r4, #1
 800079a:	3d01      	subne	r5, #1
 800079c:	e74e      	b.n	800063c <__adddf3+0x8c>
 800079e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80007a2:	bf18      	it	ne
 80007a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80007a8:	d029      	beq.n	80007fe <__adddf3+0x24e>
 80007aa:	ea94 0f05 	teq	r4, r5
 80007ae:	bf08      	it	eq
 80007b0:	ea90 0f02 	teqeq	r0, r2
 80007b4:	d005      	beq.n	80007c2 <__adddf3+0x212>
 80007b6:	ea54 0c00 	orrs.w	ip, r4, r0
 80007ba:	bf04      	itt	eq
 80007bc:	4619      	moveq	r1, r3
 80007be:	4610      	moveq	r0, r2
 80007c0:	bd30      	pop	{r4, r5, pc}
 80007c2:	ea91 0f03 	teq	r1, r3
 80007c6:	bf1e      	ittt	ne
 80007c8:	2100      	movne	r1, #0
 80007ca:	2000      	movne	r0, #0
 80007cc:	bd30      	popne	{r4, r5, pc}
 80007ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80007d2:	d105      	bne.n	80007e0 <__adddf3+0x230>
 80007d4:	0040      	lsls	r0, r0, #1
 80007d6:	4149      	adcs	r1, r1
 80007d8:	bf28      	it	cs
 80007da:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80007de:	bd30      	pop	{r4, r5, pc}
 80007e0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80007e4:	bf3c      	itt	cc
 80007e6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80007ea:	bd30      	popcc	{r4, r5, pc}
 80007ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007f0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80007f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd30      	pop	{r4, r5, pc}
 80007fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000802:	bf1a      	itte	ne
 8000804:	4619      	movne	r1, r3
 8000806:	4610      	movne	r0, r2
 8000808:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800080c:	bf1c      	itt	ne
 800080e:	460b      	movne	r3, r1
 8000810:	4602      	movne	r2, r0
 8000812:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000816:	bf06      	itte	eq
 8000818:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800081c:	ea91 0f03 	teqeq	r1, r3
 8000820:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop

08000828 <__aeabi_ui2d>:
 8000828:	f090 0f00 	teq	r0, #0
 800082c:	bf04      	itt	eq
 800082e:	2100      	moveq	r1, #0
 8000830:	4770      	bxeq	lr
 8000832:	b530      	push	{r4, r5, lr}
 8000834:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000838:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800083c:	f04f 0500 	mov.w	r5, #0
 8000840:	f04f 0100 	mov.w	r1, #0
 8000844:	e750      	b.n	80006e8 <__adddf3+0x138>
 8000846:	bf00      	nop

08000848 <__aeabi_i2d>:
 8000848:	f090 0f00 	teq	r0, #0
 800084c:	bf04      	itt	eq
 800084e:	2100      	moveq	r1, #0
 8000850:	4770      	bxeq	lr
 8000852:	b530      	push	{r4, r5, lr}
 8000854:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000858:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800085c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000860:	bf48      	it	mi
 8000862:	4240      	negmi	r0, r0
 8000864:	f04f 0100 	mov.w	r1, #0
 8000868:	e73e      	b.n	80006e8 <__adddf3+0x138>
 800086a:	bf00      	nop

0800086c <__aeabi_f2d>:
 800086c:	0042      	lsls	r2, r0, #1
 800086e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000872:	ea4f 0131 	mov.w	r1, r1, rrx
 8000876:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800087a:	bf1f      	itttt	ne
 800087c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000880:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000884:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000888:	4770      	bxne	lr
 800088a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800088e:	bf08      	it	eq
 8000890:	4770      	bxeq	lr
 8000892:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000896:	bf04      	itt	eq
 8000898:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800089c:	4770      	bxeq	lr
 800089e:	b530      	push	{r4, r5, lr}
 80008a0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80008a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80008a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80008ac:	e71c      	b.n	80006e8 <__adddf3+0x138>
 80008ae:	bf00      	nop

080008b0 <__aeabi_ul2d>:
 80008b0:	ea50 0201 	orrs.w	r2, r0, r1
 80008b4:	bf08      	it	eq
 80008b6:	4770      	bxeq	lr
 80008b8:	b530      	push	{r4, r5, lr}
 80008ba:	f04f 0500 	mov.w	r5, #0
 80008be:	e00a      	b.n	80008d6 <__aeabi_l2d+0x16>

080008c0 <__aeabi_l2d>:
 80008c0:	ea50 0201 	orrs.w	r2, r0, r1
 80008c4:	bf08      	it	eq
 80008c6:	4770      	bxeq	lr
 80008c8:	b530      	push	{r4, r5, lr}
 80008ca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80008ce:	d502      	bpl.n	80008d6 <__aeabi_l2d+0x16>
 80008d0:	4240      	negs	r0, r0
 80008d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80008d6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80008da:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80008de:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80008e2:	f43f aed8 	beq.w	8000696 <__adddf3+0xe6>
 80008e6:	f04f 0203 	mov.w	r2, #3
 80008ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008ee:	bf18      	it	ne
 80008f0:	3203      	addne	r2, #3
 80008f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008f6:	bf18      	it	ne
 80008f8:	3203      	addne	r2, #3
 80008fa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80008fe:	f1c2 0320 	rsb	r3, r2, #32
 8000902:	fa00 fc03 	lsl.w	ip, r0, r3
 8000906:	fa20 f002 	lsr.w	r0, r0, r2
 800090a:	fa01 fe03 	lsl.w	lr, r1, r3
 800090e:	ea40 000e 	orr.w	r0, r0, lr
 8000912:	fa21 f102 	lsr.w	r1, r1, r2
 8000916:	4414      	add	r4, r2
 8000918:	e6bd      	b.n	8000696 <__adddf3+0xe6>
 800091a:	bf00      	nop

0800091c <__aeabi_d2f>:
 800091c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000920:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000924:	bf24      	itt	cs
 8000926:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800092a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800092e:	d90d      	bls.n	800094c <__aeabi_d2f+0x30>
 8000930:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000934:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000938:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800093c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000940:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000944:	bf08      	it	eq
 8000946:	f020 0001 	biceq.w	r0, r0, #1
 800094a:	4770      	bx	lr
 800094c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000950:	d121      	bne.n	8000996 <__aeabi_d2f+0x7a>
 8000952:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000956:	bfbc      	itt	lt
 8000958:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 800095c:	4770      	bxlt	lr
 800095e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000962:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000966:	f1c2 0218 	rsb	r2, r2, #24
 800096a:	f1c2 0c20 	rsb	ip, r2, #32
 800096e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000972:	fa20 f002 	lsr.w	r0, r0, r2
 8000976:	bf18      	it	ne
 8000978:	f040 0001 	orrne.w	r0, r0, #1
 800097c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000980:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000984:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000988:	ea40 000c 	orr.w	r0, r0, ip
 800098c:	fa23 f302 	lsr.w	r3, r3, r2
 8000990:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000994:	e7cc      	b.n	8000930 <__aeabi_d2f+0x14>
 8000996:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800099a:	d107      	bne.n	80009ac <__aeabi_d2f+0x90>
 800099c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80009a0:	bf1e      	ittt	ne
 80009a2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80009a6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80009aa:	4770      	bxne	lr
 80009ac:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80009b0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80009b4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80009b8:	4770      	bx	lr
 80009ba:	bf00      	nop

080009bc <__aeabi_uldivmod>:
 80009bc:	b953      	cbnz	r3, 80009d4 <__aeabi_uldivmod+0x18>
 80009be:	b94a      	cbnz	r2, 80009d4 <__aeabi_uldivmod+0x18>
 80009c0:	2900      	cmp	r1, #0
 80009c2:	bf08      	it	eq
 80009c4:	2800      	cmpeq	r0, #0
 80009c6:	bf1c      	itt	ne
 80009c8:	f04f 31ff 	movne.w	r1, #4294967295
 80009cc:	f04f 30ff 	movne.w	r0, #4294967295
 80009d0:	f000 b970 	b.w	8000cb4 <__aeabi_idiv0>
 80009d4:	f1ad 0c08 	sub.w	ip, sp, #8
 80009d8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80009dc:	f000 f806 	bl	80009ec <__udivmoddi4>
 80009e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80009e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80009e8:	b004      	add	sp, #16
 80009ea:	4770      	bx	lr

080009ec <__udivmoddi4>:
 80009ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80009f0:	9e08      	ldr	r6, [sp, #32]
 80009f2:	460d      	mov	r5, r1
 80009f4:	4604      	mov	r4, r0
 80009f6:	460f      	mov	r7, r1
 80009f8:	2b00      	cmp	r3, #0
 80009fa:	d14a      	bne.n	8000a92 <__udivmoddi4+0xa6>
 80009fc:	428a      	cmp	r2, r1
 80009fe:	4694      	mov	ip, r2
 8000a00:	d965      	bls.n	8000ace <__udivmoddi4+0xe2>
 8000a02:	fab2 f382 	clz	r3, r2
 8000a06:	b143      	cbz	r3, 8000a1a <__udivmoddi4+0x2e>
 8000a08:	fa02 fc03 	lsl.w	ip, r2, r3
 8000a0c:	f1c3 0220 	rsb	r2, r3, #32
 8000a10:	409f      	lsls	r7, r3
 8000a12:	fa20 f202 	lsr.w	r2, r0, r2
 8000a16:	4317      	orrs	r7, r2
 8000a18:	409c      	lsls	r4, r3
 8000a1a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000a1e:	fa1f f58c 	uxth.w	r5, ip
 8000a22:	fbb7 f1fe 	udiv	r1, r7, lr
 8000a26:	0c22      	lsrs	r2, r4, #16
 8000a28:	fb0e 7711 	mls	r7, lr, r1, r7
 8000a2c:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000a30:	fb01 f005 	mul.w	r0, r1, r5
 8000a34:	4290      	cmp	r0, r2
 8000a36:	d90a      	bls.n	8000a4e <__udivmoddi4+0x62>
 8000a38:	eb1c 0202 	adds.w	r2, ip, r2
 8000a3c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000a40:	f080 811c 	bcs.w	8000c7c <__udivmoddi4+0x290>
 8000a44:	4290      	cmp	r0, r2
 8000a46:	f240 8119 	bls.w	8000c7c <__udivmoddi4+0x290>
 8000a4a:	3902      	subs	r1, #2
 8000a4c:	4462      	add	r2, ip
 8000a4e:	1a12      	subs	r2, r2, r0
 8000a50:	b2a4      	uxth	r4, r4
 8000a52:	fbb2 f0fe 	udiv	r0, r2, lr
 8000a56:	fb0e 2210 	mls	r2, lr, r0, r2
 8000a5a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000a5e:	fb00 f505 	mul.w	r5, r0, r5
 8000a62:	42a5      	cmp	r5, r4
 8000a64:	d90a      	bls.n	8000a7c <__udivmoddi4+0x90>
 8000a66:	eb1c 0404 	adds.w	r4, ip, r4
 8000a6a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000a6e:	f080 8107 	bcs.w	8000c80 <__udivmoddi4+0x294>
 8000a72:	42a5      	cmp	r5, r4
 8000a74:	f240 8104 	bls.w	8000c80 <__udivmoddi4+0x294>
 8000a78:	4464      	add	r4, ip
 8000a7a:	3802      	subs	r0, #2
 8000a7c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000a80:	1b64      	subs	r4, r4, r5
 8000a82:	2100      	movs	r1, #0
 8000a84:	b11e      	cbz	r6, 8000a8e <__udivmoddi4+0xa2>
 8000a86:	40dc      	lsrs	r4, r3
 8000a88:	2300      	movs	r3, #0
 8000a8a:	e9c6 4300 	strd	r4, r3, [r6]
 8000a8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a92:	428b      	cmp	r3, r1
 8000a94:	d908      	bls.n	8000aa8 <__udivmoddi4+0xbc>
 8000a96:	2e00      	cmp	r6, #0
 8000a98:	f000 80ed 	beq.w	8000c76 <__udivmoddi4+0x28a>
 8000a9c:	2100      	movs	r1, #0
 8000a9e:	e9c6 0500 	strd	r0, r5, [r6]
 8000aa2:	4608      	mov	r0, r1
 8000aa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000aa8:	fab3 f183 	clz	r1, r3
 8000aac:	2900      	cmp	r1, #0
 8000aae:	d149      	bne.n	8000b44 <__udivmoddi4+0x158>
 8000ab0:	42ab      	cmp	r3, r5
 8000ab2:	d302      	bcc.n	8000aba <__udivmoddi4+0xce>
 8000ab4:	4282      	cmp	r2, r0
 8000ab6:	f200 80f8 	bhi.w	8000caa <__udivmoddi4+0x2be>
 8000aba:	1a84      	subs	r4, r0, r2
 8000abc:	eb65 0203 	sbc.w	r2, r5, r3
 8000ac0:	2001      	movs	r0, #1
 8000ac2:	4617      	mov	r7, r2
 8000ac4:	2e00      	cmp	r6, #0
 8000ac6:	d0e2      	beq.n	8000a8e <__udivmoddi4+0xa2>
 8000ac8:	e9c6 4700 	strd	r4, r7, [r6]
 8000acc:	e7df      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000ace:	b902      	cbnz	r2, 8000ad2 <__udivmoddi4+0xe6>
 8000ad0:	deff      	udf	#255	; 0xff
 8000ad2:	fab2 f382 	clz	r3, r2
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	f040 8090 	bne.w	8000bfc <__udivmoddi4+0x210>
 8000adc:	1a8a      	subs	r2, r1, r2
 8000ade:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ae2:	fa1f fe8c 	uxth.w	lr, ip
 8000ae6:	2101      	movs	r1, #1
 8000ae8:	fbb2 f5f7 	udiv	r5, r2, r7
 8000aec:	fb07 2015 	mls	r0, r7, r5, r2
 8000af0:	0c22      	lsrs	r2, r4, #16
 8000af2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000af6:	fb0e f005 	mul.w	r0, lr, r5
 8000afa:	4290      	cmp	r0, r2
 8000afc:	d908      	bls.n	8000b10 <__udivmoddi4+0x124>
 8000afe:	eb1c 0202 	adds.w	r2, ip, r2
 8000b02:	f105 38ff 	add.w	r8, r5, #4294967295
 8000b06:	d202      	bcs.n	8000b0e <__udivmoddi4+0x122>
 8000b08:	4290      	cmp	r0, r2
 8000b0a:	f200 80cb 	bhi.w	8000ca4 <__udivmoddi4+0x2b8>
 8000b0e:	4645      	mov	r5, r8
 8000b10:	1a12      	subs	r2, r2, r0
 8000b12:	b2a4      	uxth	r4, r4
 8000b14:	fbb2 f0f7 	udiv	r0, r2, r7
 8000b18:	fb07 2210 	mls	r2, r7, r0, r2
 8000b1c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000b20:	fb0e fe00 	mul.w	lr, lr, r0
 8000b24:	45a6      	cmp	lr, r4
 8000b26:	d908      	bls.n	8000b3a <__udivmoddi4+0x14e>
 8000b28:	eb1c 0404 	adds.w	r4, ip, r4
 8000b2c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000b30:	d202      	bcs.n	8000b38 <__udivmoddi4+0x14c>
 8000b32:	45a6      	cmp	lr, r4
 8000b34:	f200 80bb 	bhi.w	8000cae <__udivmoddi4+0x2c2>
 8000b38:	4610      	mov	r0, r2
 8000b3a:	eba4 040e 	sub.w	r4, r4, lr
 8000b3e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000b42:	e79f      	b.n	8000a84 <__udivmoddi4+0x98>
 8000b44:	f1c1 0720 	rsb	r7, r1, #32
 8000b48:	408b      	lsls	r3, r1
 8000b4a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000b4e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000b52:	fa05 f401 	lsl.w	r4, r5, r1
 8000b56:	fa20 f307 	lsr.w	r3, r0, r7
 8000b5a:	40fd      	lsrs	r5, r7
 8000b5c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000b60:	4323      	orrs	r3, r4
 8000b62:	fbb5 f8f9 	udiv	r8, r5, r9
 8000b66:	fa1f fe8c 	uxth.w	lr, ip
 8000b6a:	fb09 5518 	mls	r5, r9, r8, r5
 8000b6e:	0c1c      	lsrs	r4, r3, #16
 8000b70:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000b74:	fb08 f50e 	mul.w	r5, r8, lr
 8000b78:	42a5      	cmp	r5, r4
 8000b7a:	fa02 f201 	lsl.w	r2, r2, r1
 8000b7e:	fa00 f001 	lsl.w	r0, r0, r1
 8000b82:	d90b      	bls.n	8000b9c <__udivmoddi4+0x1b0>
 8000b84:	eb1c 0404 	adds.w	r4, ip, r4
 8000b88:	f108 3aff 	add.w	sl, r8, #4294967295
 8000b8c:	f080 8088 	bcs.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b90:	42a5      	cmp	r5, r4
 8000b92:	f240 8085 	bls.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b96:	f1a8 0802 	sub.w	r8, r8, #2
 8000b9a:	4464      	add	r4, ip
 8000b9c:	1b64      	subs	r4, r4, r5
 8000b9e:	b29d      	uxth	r5, r3
 8000ba0:	fbb4 f3f9 	udiv	r3, r4, r9
 8000ba4:	fb09 4413 	mls	r4, r9, r3, r4
 8000ba8:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000bac:	fb03 fe0e 	mul.w	lr, r3, lr
 8000bb0:	45a6      	cmp	lr, r4
 8000bb2:	d908      	bls.n	8000bc6 <__udivmoddi4+0x1da>
 8000bb4:	eb1c 0404 	adds.w	r4, ip, r4
 8000bb8:	f103 35ff 	add.w	r5, r3, #4294967295
 8000bbc:	d26c      	bcs.n	8000c98 <__udivmoddi4+0x2ac>
 8000bbe:	45a6      	cmp	lr, r4
 8000bc0:	d96a      	bls.n	8000c98 <__udivmoddi4+0x2ac>
 8000bc2:	3b02      	subs	r3, #2
 8000bc4:	4464      	add	r4, ip
 8000bc6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000bca:	fba3 9502 	umull	r9, r5, r3, r2
 8000bce:	eba4 040e 	sub.w	r4, r4, lr
 8000bd2:	42ac      	cmp	r4, r5
 8000bd4:	46c8      	mov	r8, r9
 8000bd6:	46ae      	mov	lr, r5
 8000bd8:	d356      	bcc.n	8000c88 <__udivmoddi4+0x29c>
 8000bda:	d053      	beq.n	8000c84 <__udivmoddi4+0x298>
 8000bdc:	b156      	cbz	r6, 8000bf4 <__udivmoddi4+0x208>
 8000bde:	ebb0 0208 	subs.w	r2, r0, r8
 8000be2:	eb64 040e 	sbc.w	r4, r4, lr
 8000be6:	fa04 f707 	lsl.w	r7, r4, r7
 8000bea:	40ca      	lsrs	r2, r1
 8000bec:	40cc      	lsrs	r4, r1
 8000bee:	4317      	orrs	r7, r2
 8000bf0:	e9c6 7400 	strd	r7, r4, [r6]
 8000bf4:	4618      	mov	r0, r3
 8000bf6:	2100      	movs	r1, #0
 8000bf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bfc:	f1c3 0120 	rsb	r1, r3, #32
 8000c00:	fa02 fc03 	lsl.w	ip, r2, r3
 8000c04:	fa20 f201 	lsr.w	r2, r0, r1
 8000c08:	fa25 f101 	lsr.w	r1, r5, r1
 8000c0c:	409d      	lsls	r5, r3
 8000c0e:	432a      	orrs	r2, r5
 8000c10:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c14:	fa1f fe8c 	uxth.w	lr, ip
 8000c18:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c1c:	fb07 1510 	mls	r5, r7, r0, r1
 8000c20:	0c11      	lsrs	r1, r2, #16
 8000c22:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000c26:	fb00 f50e 	mul.w	r5, r0, lr
 8000c2a:	428d      	cmp	r5, r1
 8000c2c:	fa04 f403 	lsl.w	r4, r4, r3
 8000c30:	d908      	bls.n	8000c44 <__udivmoddi4+0x258>
 8000c32:	eb1c 0101 	adds.w	r1, ip, r1
 8000c36:	f100 38ff 	add.w	r8, r0, #4294967295
 8000c3a:	d22f      	bcs.n	8000c9c <__udivmoddi4+0x2b0>
 8000c3c:	428d      	cmp	r5, r1
 8000c3e:	d92d      	bls.n	8000c9c <__udivmoddi4+0x2b0>
 8000c40:	3802      	subs	r0, #2
 8000c42:	4461      	add	r1, ip
 8000c44:	1b49      	subs	r1, r1, r5
 8000c46:	b292      	uxth	r2, r2
 8000c48:	fbb1 f5f7 	udiv	r5, r1, r7
 8000c4c:	fb07 1115 	mls	r1, r7, r5, r1
 8000c50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c54:	fb05 f10e 	mul.w	r1, r5, lr
 8000c58:	4291      	cmp	r1, r2
 8000c5a:	d908      	bls.n	8000c6e <__udivmoddi4+0x282>
 8000c5c:	eb1c 0202 	adds.w	r2, ip, r2
 8000c60:	f105 38ff 	add.w	r8, r5, #4294967295
 8000c64:	d216      	bcs.n	8000c94 <__udivmoddi4+0x2a8>
 8000c66:	4291      	cmp	r1, r2
 8000c68:	d914      	bls.n	8000c94 <__udivmoddi4+0x2a8>
 8000c6a:	3d02      	subs	r5, #2
 8000c6c:	4462      	add	r2, ip
 8000c6e:	1a52      	subs	r2, r2, r1
 8000c70:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000c74:	e738      	b.n	8000ae8 <__udivmoddi4+0xfc>
 8000c76:	4631      	mov	r1, r6
 8000c78:	4630      	mov	r0, r6
 8000c7a:	e708      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000c7c:	4639      	mov	r1, r7
 8000c7e:	e6e6      	b.n	8000a4e <__udivmoddi4+0x62>
 8000c80:	4610      	mov	r0, r2
 8000c82:	e6fb      	b.n	8000a7c <__udivmoddi4+0x90>
 8000c84:	4548      	cmp	r0, r9
 8000c86:	d2a9      	bcs.n	8000bdc <__udivmoddi4+0x1f0>
 8000c88:	ebb9 0802 	subs.w	r8, r9, r2
 8000c8c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000c90:	3b01      	subs	r3, #1
 8000c92:	e7a3      	b.n	8000bdc <__udivmoddi4+0x1f0>
 8000c94:	4645      	mov	r5, r8
 8000c96:	e7ea      	b.n	8000c6e <__udivmoddi4+0x282>
 8000c98:	462b      	mov	r3, r5
 8000c9a:	e794      	b.n	8000bc6 <__udivmoddi4+0x1da>
 8000c9c:	4640      	mov	r0, r8
 8000c9e:	e7d1      	b.n	8000c44 <__udivmoddi4+0x258>
 8000ca0:	46d0      	mov	r8, sl
 8000ca2:	e77b      	b.n	8000b9c <__udivmoddi4+0x1b0>
 8000ca4:	3d02      	subs	r5, #2
 8000ca6:	4462      	add	r2, ip
 8000ca8:	e732      	b.n	8000b10 <__udivmoddi4+0x124>
 8000caa:	4608      	mov	r0, r1
 8000cac:	e70a      	b.n	8000ac4 <__udivmoddi4+0xd8>
 8000cae:	4464      	add	r4, ip
 8000cb0:	3802      	subs	r0, #2
 8000cb2:	e742      	b.n	8000b3a <__udivmoddi4+0x14e>

08000cb4 <__aeabi_idiv0>:
 8000cb4:	4770      	bx	lr
 8000cb6:	bf00      	nop

08000cb8 <Reset_Handler>:
    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 

  ldr   sp, =_estack       /* set stack pointer */
 8000cb8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000cf0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000cbc:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000cbe:	e003      	b.n	8000cc8 <LoopCopyDataInit>

08000cc0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000cc0:	4b0c      	ldr	r3, [pc, #48]	; (8000cf4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000cc2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000cc4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000cc6:	3104      	adds	r1, #4

08000cc8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000cc8:	480b      	ldr	r0, [pc, #44]	; (8000cf8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000ccc:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000cce:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000cd0:	d3f6      	bcc.n	8000cc0 <CopyDataInit>
  ldr  r2, =_sbss
 8000cd2:	4a0b      	ldr	r2, [pc, #44]	; (8000d00 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000cd4:	e002      	b.n	8000cdc <LoopFillZerobss>

08000cd6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000cd6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000cd8:	f842 3b04 	str.w	r3, [r2], #4

08000cdc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000cdc:	4b09      	ldr	r3, [pc, #36]	; (8000d04 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000cde:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000ce0:	d3f9      	bcc.n	8000cd6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000ce2:	f00a fb73 	bl	800b3cc <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ce6:	f02d f86f 	bl	802ddc8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000cea:	f000 fc45 	bl	8001578 <main>
  bx  lr    
 8000cee:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000cf0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000cf4:	080cf250 	.word	0x080cf250
  ldr  r0, =_sdata
 8000cf8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000cfc:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 8000d00:	20000170 	.word	0x20000170
  ldr  r3, = _ebss
 8000d04:	2001448c 	.word	0x2001448c

08000d08 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000d08:	e7fe      	b.n	8000d08 <ADC_IRQHandler>
	...

08000d0c <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 8000d0c:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 8000d10:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 8000d14:	4293      	cmp	r3, r2
 8000d16:	d905      	bls.n	8000d24 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 8000d18:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 8000d1c:	4291      	cmp	r1, r2
 8000d1e:	d803      	bhi.n	8000d28 <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 8000d20:	2001      	movs	r0, #1
 8000d22:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 8000d24:	2000      	movs	r0, #0
 8000d26:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 8000d28:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 8000d2c:	4291      	cmp	r1, r2
 8000d2e:	d960      	bls.n	8000df2 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 8000d30:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 8000d34:	4293      	cmp	r3, r2
 8000d36:	d95e      	bls.n	8000df6 <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 8000d38:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 8000d3c:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 8000d40:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8000d44:	4291      	cmp	r1, r2
 8000d46:	d95a      	bls.n	8000dfe <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 8000d48:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 8000d4c:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 8000d50:	4291      	cmp	r1, r2
 8000d52:	d952      	bls.n	8000dfa <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 8000d54:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 8000d58:	4291      	cmp	r1, r2
 8000d5a:	d952      	bls.n	8000e02 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 8000d5c:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 8000d60:	4291      	cmp	r1, r2
 8000d62:	d950      	bls.n	8000e06 <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 8000d64:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 8000d68:	4291      	cmp	r1, r2
 8000d6a:	d94e      	bls.n	8000e0a <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000d6c:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000d70:	4291      	cmp	r1, r2
 8000d72:	d94c      	bls.n	8000e0e <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000d74:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 8000d78:	4291      	cmp	r1, r2
 8000d7a:	d94a      	bls.n	8000e12 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000d7c:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000d80:	4291      	cmp	r1, r2
 8000d82:	d948      	bls.n	8000e16 <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000d84:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 8000d88:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000d8c:	4288      	cmp	r0, r1
 8000d8e:	d944      	bls.n	8000e1a <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000d90:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000d94:	458c      	cmp	ip, r1
 8000d96:	d942      	bls.n	8000e1e <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 8000d98:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000d9c:	458c      	cmp	ip, r1
 8000d9e:	d940      	bls.n	8000e22 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000da0:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000da4:	4288      	cmp	r0, r1
 8000da6:	d93e      	bls.n	8000e26 <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 8000da8:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000dac:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000db0:	4288      	cmp	r0, r1
 8000db2:	d93a      	bls.n	8000e2a <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000db4:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 8000db8:	4291      	cmp	r1, r2
 8000dba:	d938      	bls.n	8000e2e <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000dbc:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000dc0:	4291      	cmp	r1, r2
 8000dc2:	d938      	bls.n	8000e36 <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000dc4:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 8000dc8:	4291      	cmp	r1, r2
 8000dca:	d932      	bls.n	8000e32 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000dcc:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000dd0:	4291      	cmp	r1, r2
 8000dd2:	d936      	bls.n	8000e42 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000dd4:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 8000dd8:	4291      	cmp	r1, r2
 8000dda:	d930      	bls.n	8000e3e <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000ddc:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000de0:	4291      	cmp	r1, r2
 8000de2:	d92a      	bls.n	8000e3a <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000de4:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 8000de8:	4293      	cmp	r3, r2
 8000dea:	bf94      	ite	ls
 8000dec:	2017      	movls	r0, #23
 8000dee:	2000      	movhi	r0, #0
 8000df0:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000df2:	2002      	movs	r0, #2
 8000df4:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 8000df6:	2003      	movs	r0, #3
 8000df8:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 8000dfa:	2005      	movs	r0, #5
 8000dfc:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000dfe:	2004      	movs	r0, #4
 8000e00:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000e02:	2006      	movs	r0, #6
 8000e04:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 8000e06:	2007      	movs	r0, #7
 8000e08:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 8000e0a:	2008      	movs	r0, #8
 8000e0c:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 8000e0e:	2009      	movs	r0, #9
 8000e10:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 8000e12:	200a      	movs	r0, #10
 8000e14:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 8000e16:	200b      	movs	r0, #11
 8000e18:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 8000e1a:	200c      	movs	r0, #12
 8000e1c:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 8000e1e:	200d      	movs	r0, #13
 8000e20:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 8000e22:	200e      	movs	r0, #14
 8000e24:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 8000e26:	200f      	movs	r0, #15
 8000e28:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 8000e2a:	2010      	movs	r0, #16
 8000e2c:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 8000e2e:	2011      	movs	r0, #17
 8000e30:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 8000e32:	2013      	movs	r0, #19
 8000e34:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 8000e36:	2012      	movs	r0, #18
 8000e38:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 8000e3a:	2016      	movs	r0, #22
  }
  return sector;
}
 8000e3c:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 8000e3e:	2015      	movs	r0, #21
 8000e40:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 8000e42:	2014      	movs	r0, #20
 8000e44:	4770      	bx	lr
 8000e46:	bf00      	nop

08000e48 <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 8000e48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e4a:	4607      	mov	r7, r0
 8000e4c:	b083      	sub	sp, #12
 8000e4e:	4616      	mov	r6, r2
 8000e50:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 8000e52:	f00a fc79 	bl	800b748 <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 8000e56:	4638      	mov	r0, r7
 8000e58:	f7ff ff58 	bl	8000d0c <GetSector>
 8000e5c:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 8000e5e:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 8000e62:	f7ff ff53 	bl	8000d0c <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8000e66:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000e68:	4813      	ldr	r0, [pc, #76]	; (8000eb8 <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8000e6a:	1b1b      	subs	r3, r3, r4
 8000e6c:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000e70:	2300      	movs	r3, #0
 8000e72:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000e74:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 8000e76:	2302      	movs	r3, #2
 8000e78:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000e7a:	f00a fce3 	bl	800b844 <HAL_FLASHEx_Erase>
 8000e7e:	b988      	cbnz	r0, 8000ea4 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000e80:	b1a6      	cbz	r6, 8000eac <Flash_Write_Data+0x64>
 8000e82:	1b7f      	subs	r7, r7, r5
 8000e84:	4604      	mov	r4, r0
 8000e86:	3d04      	subs	r5, #4
 8000e88:	3704      	adds	r7, #4
 8000e8a:	e001      	b.n	8000e90 <Flash_Write_Data+0x48>
 8000e8c:	42a6      	cmp	r6, r4
 8000e8e:	d00d      	beq.n	8000eac <Flash_Write_Data+0x64>
 8000e90:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000e92:	2300      	movs	r3, #0
 8000e94:	f855 2f04 	ldr.w	r2, [r5, #4]!
 8000e98:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 8000e9a:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000e9c:	f00a fbb2 	bl	800b604 <HAL_FLASH_Program>
 8000ea0:	2800      	cmp	r0, #0
 8000ea2:	d0f3      	beq.n	8000e8c <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000ea4:	f00a fc6e 	bl	800b784 <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 8000ea8:	b003      	add	sp, #12
 8000eaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000eac:	f00a fc60 	bl	800b770 <HAL_FLASH_Lock>
	   return 0;
 8000eb0:	2000      	movs	r0, #0
}
 8000eb2:	b003      	add	sp, #12
 8000eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000eb6:	bf00      	nop
 8000eb8:	2000018c 	.word	0x2000018c

08000ebc <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000ebc:	460b      	mov	r3, r1
 8000ebe:	3201      	adds	r2, #1
 8000ec0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000ec4:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 8000ec6:	581a      	ldr	r2, [r3, r0]
 8000ec8:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000ecc:	428b      	cmp	r3, r1
 8000ece:	d1fa      	bne.n	8000ec6 <Flash_Read_Data+0xa>
	}
}
 8000ed0:	4770      	bx	lr
 8000ed2:	bf00      	nop

08000ed4 <calculate_freq_and_signalstrength>:
 *are calculated.
 * @param samples Pointer to the array of input samples.
 * @return FFT structure containing the calculated main frequency and signal
 *strength.
 **/
FFT calculate_freq_and_signalstrength(float32_t input_samples[]) {
 8000ed4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ed8:	ed2d 8b02 	vpush	{d8}
 8000edc:	b088      	sub	sp, #32
 8000ede:	af00      	add	r7, sp, #0
 8000ee0:	4605      	mov	r5, r0
 8000ee2:	460e      	mov	r6, r1
    // Perform FFT using CMSIS-DSP library
    const uint8_t fft_size = MEAS_get_num_of_samples();
 8000ee4:	f001 f8aa 	bl	800203c <MEAS_get_num_of_samples>
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
 8000ee8:	4604      	mov	r4, r0
 8000eea:	2800      	cmp	r0, #0
 8000eec:	f000 8089 	beq.w	8001002 <calculate_freq_and_signalstrength+0x12e>
 8000ef0:	2204      	movs	r2, #4
        input_samples[i] -= 2047.5;
 8000ef2:	ed9f 7a45 	vldr	s14, [pc, #276]	; 8001008 <calculate_freq_and_signalstrength+0x134>
 8000ef6:	4633      	mov	r3, r6
 8000ef8:	fb12 6200 	smlabb	r2, r2, r0, r6
 8000efc:	edd3 7a00 	vldr	s15, [r3]
 8000f00:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000f04:	ece3 7a01 	vstmia	r3!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 8000f08:	429a      	cmp	r2, r3
 8000f0a:	d1f7      	bne.n	8000efc <calculate_freq_and_signalstrength+0x28>
    }
    // Create an array for the FFT output
    float32_t fft_complex_output[2 * fft_size];
 8000f0c:	b223      	sxth	r3, r4
 8000f0e:	00db      	lsls	r3, r3, #3
 8000f10:	ebad 0d03 	sub.w	sp, sp, r3
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
    // Create an instance of the FFT structure
    FFT fft;
    // Calculate the main frequency
    float main_frequency =
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f14:	ee07 4a90 	vmov	s15, r4
    float32_t fft_complex_output[2 * fft_size];
 8000f18:	46e8      	mov	r8, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000f1a:	b2a1      	uxth	r1, r4
 8000f1c:	f107 0008 	add.w	r0, r7, #8
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f20:	eef8 8ae7 	vcvt.f32.s32	s17, s15
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000f24:	f02a fca4 	bl	802b870 <arm_rfft_fast_init_f32>
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000f28:	2300      	movs	r3, #0
 8000f2a:	4631      	mov	r1, r6
 8000f2c:	f107 0008 	add.w	r0, r7, #8
 8000f30:	4642      	mov	r2, r8
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000f32:	f3c4 0647 	ubfx	r6, r4, #1, #8
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000f36:	f02a fd1f 	bl	802b978 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000f3a:	4632      	mov	r2, r6
 8000f3c:	4641      	mov	r1, r8
 8000f3e:	4640      	mov	r0, r8
 8000f40:	f02b f988 	bl	802c254 <arm_cmplx_mag_f32>
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000f44:	463b      	mov	r3, r7
 8000f46:	1d3a      	adds	r2, r7, #4
 8000f48:	4631      	mov	r1, r6
 8000f4a:	4640      	mov	r0, r8
 8000f4c:	f02a fc28 	bl	802b7a0 <arm_max_f32>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f50:	edd7 7a00 	vldr	s15, [r7]
 8000f54:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000f58:	f001 f872 	bl	8002040 <MEAS_get_samp_freq>
 8000f5c:	ee07 0a90 	vmov	s15, r0
 8000f60:	eef8 7a67 	vcvt.f32.u32	s15, s15
    uint8_t given_frequency = 0;
    // Check if the main frequency is in the range of 45-55 Hz
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000f64:	ed9f 7a29 	vldr	s14, [pc, #164]	; 800100c <calculate_freq_and_signalstrength+0x138>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f68:	ee67 7a88 	vmul.f32	s15, s15, s16
    float main_frequency =
 8000f6c:	ee87 8aa8 	vdiv.f32	s16, s15, s17
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000f70:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8000f74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f78:	d817      	bhi.n	8000faa <calculate_freq_and_signalstrength+0xd6>
 8000f7a:	eddf 7a25 	vldr	s15, [pc, #148]	; 8001010 <calculate_freq_and_signalstrength+0x13c>
 8000f7e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000f82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f86:	db28      	blt.n	8000fda <calculate_freq_and_signalstrength+0x106>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
        // If yes, round the given frequency to 60 Hz
        given_frequency = 60;
    } else given_frequency = 0;
    // calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000f88:	f001 f85a 	bl	8002040 <MEAS_get_samp_freq>
 8000f8c:	2332      	movs	r3, #50	; 0x32
 8000f8e:	fb04 f303 	mul.w	r3, r4, r3
 8000f92:	fbb3 f0f0 	udiv	r0, r3, r0
    // set the signal strength to 0
    float signal_strength = 0;
    // check if the given frequency is 50 or 60 Hz
    if (given_frequency != 0) {
        // calculate the signal strength
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000f96:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 8000f9a:	edd0 7a00 	vldr	s15, [r0]
 8000f9e:	ee77 7aa7 	vadd.f32	s15, s15, s15
        fft.error = CALC_ERROR_NONE;
 8000fa2:	2301      	movs	r3, #1
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000fa4:	ee87 7aa8 	vdiv.f32	s14, s15, s17
        fft.error = CALC_ERROR_NONE;
 8000fa8:	e00b      	b.n	8000fc2 <calculate_freq_and_signalstrength+0xee>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000faa:	eddf 7a1a 	vldr	s15, [pc, #104]	; 8001014 <calculate_freq_and_signalstrength+0x140>
 8000fae:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000fb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000fb6:	d91c      	bls.n	8000ff2 <calculate_freq_and_signalstrength+0x11e>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000fb8:	f001 f842 	bl	8002040 <MEAS_get_samp_freq>
    float signal_strength = 0;
 8000fbc:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8001018 <calculate_freq_and_signalstrength+0x144>
    } else fft.error = CALC_ERROR_FREQUENCY;  // if the given frequency is not 50 or 60 Hz
 8000fc0:	2300      	movs	r3, #0
    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
}
 8000fc2:	4628      	mov	r0, r5
 8000fc4:	3720      	adds	r7, #32
    return fft;
 8000fc6:	ed85 8a00 	vstr	s16, [r5]
 8000fca:	ed85 7a01 	vstr	s14, [r5, #4]
 8000fce:	722b      	strb	r3, [r5, #8]
}
 8000fd0:	46bd      	mov	sp, r7
 8000fd2:	ecbd 8b02 	vpop	{d8}
 8000fd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000fda:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8001014 <calculate_freq_and_signalstrength+0x140>
 8000fde:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000fe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000fe6:	d8e7      	bhi.n	8000fb8 <calculate_freq_and_signalstrength+0xe4>
 8000fe8:	eeb4 8a47 	vcmp.f32	s16, s14
 8000fec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000ff0:	d1e2      	bne.n	8000fb8 <calculate_freq_and_signalstrength+0xe4>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000ff2:	f001 f825 	bl	8002040 <MEAS_get_samp_freq>
 8000ff6:	ebc4 1304 	rsb	r3, r4, r4, lsl #4
 8000ffa:	009b      	lsls	r3, r3, #2
 8000ffc:	fbb3 f0f0 	udiv	r0, r3, r0
    if (given_frequency != 0) {
 8001000:	e7c9      	b.n	8000f96 <calculate_freq_and_signalstrength+0xc2>
    for (uint32_t i = 0; i < fft_size; i++) {
 8001002:	4603      	mov	r3, r0
 8001004:	e784      	b.n	8000f10 <calculate_freq_and_signalstrength+0x3c>
 8001006:	bf00      	nop
 8001008:	44fff000 	.word	0x44fff000
 800100c:	425c0000 	.word	0x425c0000
 8001010:	42340000 	.word	0x42340000
 8001014:	42820000 	.word	0x42820000
 8001018:	00000000 	.word	0x00000000

0800101c <accurate_FFT>:
 * to obtain accurate results and returns the calculated values in an instance of the
 * ACCU_FFT structure.
 *
 * @return The calculated signal strength and main frequency for each channel.
 */
ACCU_FFT accurate_FFT(void){
 800101c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001020:	ed2d 8b04 	vpush	{d8-d9}
 8001024:	b0a7      	sub	sp, #156	; 0x9c
 8001026:	af00      	add	r7, sp, #0
 8001028:	6078      	str	r0, [r7, #4]
    float32_t accu_strength_HSR[ACCURATE_MEASUREMENT_LOOPS];
    float32_t accu_strength_HSL[ACCURATE_MEASUREMENT_LOOPS];

    uint32_t* samples;

    uint8_t buffer_size = MEAS_get_num_of_samples();
 800102a:	f001 f807 	bl	800203c <MEAS_get_num_of_samples>
    float32_t samples_PR[buffer_size];
 800102e:	b203      	sxth	r3, r0
 8001030:	009b      	lsls	r3, r3, #2
 8001032:	3307      	adds	r3, #7
 8001034:	f023 0307 	bic.w	r3, r3, #7
 8001038:	ebad 0d03 	sub.w	sp, sp, r3
 800103c:	466a      	mov	r2, sp
    float32_t samples_PL[buffer_size];
 800103e:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PR[buffer_size];
 8001042:	ee08 2a10 	vmov	s16, r2
    float32_t samples_PL[buffer_size];
 8001046:	466a      	mov	r2, sp
    float32_t samples_HSR[buffer_size];
 8001048:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PL[buffer_size];
 800104c:	ee08 2a90 	vmov	s17, r2
    float32_t samples_HSR[buffer_size];
 8001050:	466a      	mov	r2, sp
    float32_t samples_HSL[buffer_size];
 8001052:	ebad 0d03 	sub.w	sp, sp, r3
 8001056:	466b      	mov	r3, sp
 8001058:	ee09 3a90 	vmov	s19, r3
 800105c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001060:	613b      	str	r3, [r7, #16]
 8001062:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001066:	617b      	str	r3, [r7, #20]
 8001068:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800106c:	60fb      	str	r3, [r7, #12]
    float32_t samples_HSR[buffer_size];
 800106e:	ee09 2a10 	vmov	s18, r2
 8001072:	f107 0364 	add.w	r3, r7, #100	; 0x64
    uint8_t buffer_size = MEAS_get_num_of_samples();
 8001076:	4682      	mov	sl, r0

    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 8001078:	60bb      	str	r3, [r7, #8]
        // Start the measurement
        samples = MEAS_start_measure();
 800107a:	f000 ffb1 	bl	8001fe0 <MEAS_start_measure>
 800107e:	4605      	mov	r5, r0

        // Convert the samples to the specific channel
        for (uint32_t j = 0; j < buffer_size; j++) {
 8001080:	f1ba 0f00 	cmp.w	sl, #0
 8001084:	d03e      	beq.n	8001104 <accurate_FFT+0xe8>
 8001086:	ee18 9a10 	vmov	r9, s16
 800108a:	ee18 8a90 	vmov	r8, s17
 800108e:	ee19 6a10 	vmov	r6, s18
 8001092:	ee19 ba90 	vmov	fp, s19
 8001096:	2400      	movs	r4, #0
            samples_PR[j] = (float32_t)samples[j * MEAS_get_num_of_chan()];
 8001098:	f000 ffce 	bl	8002038 <MEAS_get_num_of_chan>
 800109c:	fb04 f000 	mul.w	r0, r4, r0
 80010a0:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010a4:	edd3 7a00 	vldr	s15, [r3]
 80010a8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010ac:	ece9 7a01 	vstmia	r9!, {s15}
            samples_PL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 1];
 80010b0:	f000 ffc2 	bl	8002038 <MEAS_get_num_of_chan>
 80010b4:	fb04 f000 	mul.w	r0, r4, r0
 80010b8:	3001      	adds	r0, #1
 80010ba:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010be:	edd3 7a00 	vldr	s15, [r3]
 80010c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010c6:	ece8 7a01 	vstmia	r8!, {s15}
            samples_HSR[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 2];
 80010ca:	f000 ffb5 	bl	8002038 <MEAS_get_num_of_chan>
 80010ce:	fb04 f000 	mul.w	r0, r4, r0
 80010d2:	3002      	adds	r0, #2
 80010d4:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010d8:	edd3 7a00 	vldr	s15, [r3]
 80010dc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010e0:	ece6 7a01 	vstmia	r6!, {s15}
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010e4:	f000 ffa8 	bl	8002038 <MEAS_get_num_of_chan>
 80010e8:	fb04 f000 	mul.w	r0, r4, r0
 80010ec:	3003      	adds	r0, #3
 80010ee:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010f2:	edd3 7a00 	vldr	s15, [r3]
        for (uint32_t j = 0; j < buffer_size; j++) {
 80010f6:	3401      	adds	r4, #1
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010f8:	eef8 7a67 	vcvt.f32.u32	s15, s15
        for (uint32_t j = 0; j < buffer_size; j++) {
 80010fc:	45a2      	cmp	sl, r4
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010fe:	eceb 7a01 	vstmia	fp!, {s15}
        for (uint32_t j = 0; j < buffer_size; j++) {
 8001102:	d1c9      	bne.n	8001098 <accurate_FFT+0x7c>
        }
        // Calculate the Signal Strength and the main frequency for each channel using FFT

        fft = calculate_freq_and_signalstrength(samples_PR);
 8001104:	ee18 1a10 	vmov	r1, s16
 8001108:	f107 001c 	add.w	r0, r7, #28
 800110c:	f7ff fee2 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_PR[i] = fft.signal_strength;
 8001110:	697c      	ldr	r4, [r7, #20]
 8001112:	6a3b      	ldr	r3, [r7, #32]
 8001114:	f844 3b04 	str.w	r3, [r4], #4
        fft = calculate_freq_and_signalstrength(samples_PL);
 8001118:	ee18 1a90 	vmov	r1, s17
 800111c:	f107 001c 	add.w	r0, r7, #28
        accu_strength_PR[i] = fft.signal_strength;
 8001120:	617c      	str	r4, [r7, #20]
        fft = calculate_freq_and_signalstrength(samples_PL);
 8001122:	f7ff fed7 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_PL[i] = fft.signal_strength;
 8001126:	693a      	ldr	r2, [r7, #16]
 8001128:	6a3b      	ldr	r3, [r7, #32]
 800112a:	f842 3b04 	str.w	r3, [r2], #4
        fft = calculate_freq_and_signalstrength(samples_HSR);
 800112e:	ee19 1a10 	vmov	r1, s18
 8001132:	f107 001c 	add.w	r0, r7, #28
        accu_strength_PL[i] = fft.signal_strength;
 8001136:	613a      	str	r2, [r7, #16]
        fft = calculate_freq_and_signalstrength(samples_HSR);
 8001138:	f7ff fecc 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_HSR[i] = fft.signal_strength;
 800113c:	68fa      	ldr	r2, [r7, #12]
 800113e:	6a3b      	ldr	r3, [r7, #32]
 8001140:	f842 3b04 	str.w	r3, [r2], #4
        fft = calculate_freq_and_signalstrength(samples_HSL);
 8001144:	ee19 1a90 	vmov	r1, s19
 8001148:	f107 001c 	add.w	r0, r7, #28
        accu_strength_HSR[i] = fft.signal_strength;
 800114c:	60fa      	str	r2, [r7, #12]
        fft = calculate_freq_and_signalstrength(samples_HSL);
 800114e:	f7ff fec1 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_HSL[i] = fft.signal_strength;
 8001152:	68ba      	ldr	r2, [r7, #8]
 8001154:	6a3b      	ldr	r3, [r7, #32]
 8001156:	f842 3b04 	str.w	r3, [r2], #4
    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 800115a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800115e:	429c      	cmp	r4, r3
        accu_strength_HSL[i] = fft.signal_strength;
 8001160:	60ba      	str	r2, [r7, #8]
    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 8001162:	d18a      	bne.n	800107a <accurate_FFT+0x5e>
        //current[i] = single_meas.current;
    }
    arm_mean_f32(accu_strength_PR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pr);
 8001164:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8001168:	f107 0278 	add.w	r2, r7, #120	; 0x78
 800116c:	2105      	movs	r1, #5
 800116e:	f02a fae3 	bl	802b738 <arm_mean_f32>
    //arm_std_f32(accu_strength_PR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pr_std_dev);
    arm_mean_f32(accu_strength_PL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pl);
 8001172:	f107 0280 	add.w	r2, r7, #128	; 0x80
 8001176:	f107 003c 	add.w	r0, r7, #60	; 0x3c
 800117a:	2105      	movs	r1, #5
 800117c:	f02a fadc 	bl	802b738 <arm_mean_f32>
    //arm_std_f32(accu_strength_PL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pl_std_dev);
    arm_mean_f32(accu_strength_HSR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsr);
 8001180:	f107 0288 	add.w	r2, r7, #136	; 0x88
 8001184:	f107 0050 	add.w	r0, r7, #80	; 0x50
 8001188:	2105      	movs	r1, #5
 800118a:	f02a fad5 	bl	802b738 <arm_mean_f32>
    //arm_std_f32(accu_strength_HSR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsr_std_dev);
    arm_mean_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl);
    //arm_std_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl_std_dev);

    return accu_fft;
 800118e:	f107 0478 	add.w	r4, r7, #120	; 0x78
    arm_mean_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl);
 8001192:	f107 0290 	add.w	r2, r7, #144	; 0x90
 8001196:	f107 0064 	add.w	r0, r7, #100	; 0x64
 800119a:	2105      	movs	r1, #5
 800119c:	f02a facc 	bl	802b738 <arm_mean_f32>
    return accu_fft;
 80011a0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80011a2:	687e      	ldr	r6, [r7, #4]
 80011a4:	4635      	mov	r5, r6
 80011a6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80011a8:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
}
 80011ac:	379c      	adds	r7, #156	; 0x9c
    return accu_fft;
 80011ae:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
}
 80011b2:	4630      	mov	r0, r6
 80011b4:	46bd      	mov	sp, r7
 80011b6:	ecbd 8b04 	vpop	{d8-d9}
 80011ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80011be:	bf00      	nop

080011c0 <single_measurement>:
 * calculate the distance and angle. The current is currently not calculated and is set to 0.
 *
 * @param samples Pointer to the array of samples.
 * @return The SINGLE_MEAS structure containing the calculated values.
 */
SINGLE_MEAS single_measurement(uint32_t* samples) {
 80011c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80011c4:	ed2d 8b08 	vpush	{d8-d11}
 80011c8:	b08d      	sub	sp, #52	; 0x34
 80011ca:	af00      	add	r7, sp, #0
 80011cc:	4605      	mov	r5, r0
    // Create an instance of the SINGLE_MEAS structure
    SINGLE_MEAS single_meas;
    // Create an instance of the FFT structure
    FFT fft;

    uint8_t buffer_size = MEAS_get_num_of_samples();
 80011ce:	f000 ff35 	bl	800203c <MEAS_get_num_of_samples>
    float32_t samples_PR[buffer_size];
 80011d2:	b203      	sxth	r3, r0
 80011d4:	009b      	lsls	r3, r3, #2
 80011d6:	3307      	adds	r3, #7
 80011d8:	f023 0307 	bic.w	r3, r3, #7
 80011dc:	ebad 0d03 	sub.w	sp, sp, r3
 80011e0:	466a      	mov	r2, sp
    float32_t samples_PL[buffer_size];
 80011e2:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PR[buffer_size];
 80011e6:	ee08 2a10 	vmov	s16, r2
    float32_t samples_PL[buffer_size];
 80011ea:	466a      	mov	r2, sp
    float32_t samples_HSR[buffer_size];
 80011ec:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PL[buffer_size];
 80011f0:	ee08 2a90 	vmov	s17, r2
    float32_t samples_HSR[buffer_size];
 80011f4:	466a      	mov	r2, sp
    float32_t samples_HSL[buffer_size];
 80011f6:	ebad 0d03 	sub.w	sp, sp, r3
 80011fa:	466b      	mov	r3, sp
    float32_t samples_HSR[buffer_size];
 80011fc:	ee09 2a90 	vmov	s19, r2
    float32_t samples_HSL[buffer_size];
 8001200:	ee0b 3a10 	vmov	s22, r3

    // Convert the samples to the specific channel
    for (uint32_t i = 0; i < buffer_size; i++) {
 8001204:	b3e8      	cbz	r0, 8001282 <single_measurement+0xc2>
 8001206:	ee18 9a10 	vmov	r9, s16
 800120a:	ee18 8a90 	vmov	r8, s17
 800120e:	4682      	mov	sl, r0
 8001210:	4616      	mov	r6, r2
 8001212:	469b      	mov	fp, r3
 8001214:	2400      	movs	r4, #0
        samples_PR[i] = (float32_t)samples[i * MEAS_get_num_of_chan()];
 8001216:	f000 ff0f 	bl	8002038 <MEAS_get_num_of_chan>
 800121a:	fb04 f000 	mul.w	r0, r4, r0
 800121e:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001222:	edd3 7a00 	vldr	s15, [r3]
 8001226:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800122a:	ece9 7a01 	vstmia	r9!, {s15}
        samples_PL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 1];
 800122e:	f000 ff03 	bl	8002038 <MEAS_get_num_of_chan>
 8001232:	fb04 f000 	mul.w	r0, r4, r0
 8001236:	3001      	adds	r0, #1
 8001238:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 800123c:	edd3 7a00 	vldr	s15, [r3]
 8001240:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001244:	ece8 7a01 	vstmia	r8!, {s15}
        samples_HSR[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 2];
 8001248:	f000 fef6 	bl	8002038 <MEAS_get_num_of_chan>
 800124c:	fb04 f000 	mul.w	r0, r4, r0
 8001250:	3002      	adds	r0, #2
 8001252:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001256:	edd3 7a00 	vldr	s15, [r3]
 800125a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800125e:	ece6 7a01 	vstmia	r6!, {s15}
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 8001262:	f000 fee9 	bl	8002038 <MEAS_get_num_of_chan>
 8001266:	fb04 f000 	mul.w	r0, r4, r0
 800126a:	3003      	adds	r0, #3
 800126c:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001270:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < buffer_size; i++) {
 8001274:	3401      	adds	r4, #1
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 8001276:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < buffer_size; i++) {
 800127a:	45a2      	cmp	sl, r4
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 800127c:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < buffer_size; i++) {
 8001280:	d1c9      	bne.n	8001216 <single_measurement+0x56>
    }
    // Calculate the Signal Strength and the main frequency for each channel using FFT
    fft = calculate_freq_and_signalstrength(samples_PR);
 8001282:	ee18 1a10 	vmov	r1, s16
 8001286:	f107 0014 	add.w	r0, r7, #20
 800128a:	f7ff fe23 	bl	8000ed4 <calculate_freq_and_signalstrength>
    float32_t signal_strength_PR = fft.signal_strength;
    float32_t main_frequency_PR = fft.main_freq;
    fft = calculate_freq_and_signalstrength(samples_PL);
 800128e:	ee18 1a90 	vmov	r1, s17
 8001292:	f107 0014 	add.w	r0, r7, #20
    fft = calculate_freq_and_signalstrength(samples_PR);
 8001296:	ed97 aa06 	vldr	s20, [r7, #24]
 800129a:	ed97 9a05 	vldr	s18, [r7, #20]
    fft = calculate_freq_and_signalstrength(samples_PL);
 800129e:	f7ff fe19 	bl	8000ed4 <calculate_freq_and_signalstrength>
    float32_t signal_strength_PL = fft.signal_strength;
    float32_t main_frequency_PL = fft.main_freq;
    fft = calculate_freq_and_signalstrength(samples_HSR);
 80012a2:	ee19 1a90 	vmov	r1, s19
 80012a6:	f107 0014 	add.w	r0, r7, #20
    fft = calculate_freq_and_signalstrength(samples_PL);
 80012aa:	edd7 9a06 	vldr	s19, [r7, #24]
 80012ae:	edd7 aa05 	vldr	s21, [r7, #20]
    fft = calculate_freq_and_signalstrength(samples_HSR);
 80012b2:	f7ff fe0f 	bl	8000ed4 <calculate_freq_and_signalstrength>
    float32_t signal_strength_HSR = fft.signal_strength;
    fft = calculate_freq_and_signalstrength(samples_HSL);
 80012b6:	ee1b 1a10 	vmov	r1, s22
 80012ba:	f107 0014 	add.w	r0, r7, #20
 80012be:	f7ff fe09 	bl	8000ed4 <calculate_freq_and_signalstrength>
    
    // Create an instance of the DISTANCE_ANGLE structure
    DISTANCE_ANGLE dist_angle;

    // Calculate the distance using the coefficients and the actual signal strength
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 80012c2:	4a29      	ldr	r2, [pc, #164]	; (8001368 <single_measurement+0x1a8>)
    // Set the calculated values
    dist_angle.distance_r = calc_distance;

    // Calculate the distance using the coefficients and the actual signal strength
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 80012c4:	4b29      	ldr	r3, [pc, #164]	; (800136c <single_measurement+0x1ac>)
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 80012c6:	ed92 7a00 	vldr	s14, [r2]
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 80012ca:	edd3 7a00 	vldr	s15, [r3]
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 80012ce:	4a28      	ldr	r2, [pc, #160]	; (8001370 <single_measurement+0x1b0>)
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 80012d0:	4b28      	ldr	r3, [pc, #160]	; (8001374 <single_measurement+0x1b4>)
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 80012d2:	ee87 8a0a 	vdiv.f32	s16, s14, s20
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 80012d6:	edd3 6a00 	vldr	s13, [r3]
 80012da:	4b27      	ldr	r3, [pc, #156]	; (8001378 <single_measurement+0x1b8>)
 80012dc:	eec7 8aa9 	vdiv.f32	s17, s15, s19
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 80012e0:	ee2a aa0a 	vmul.f32	s20, s20, s20
 80012e4:	edd2 7a00 	vldr	s15, [r2]
 80012e8:	4a24      	ldr	r2, [pc, #144]	; (800137c <single_measurement+0x1bc>)
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 80012ea:	ee69 9aa9 	vmul.f32	s19, s19, s19
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 80012ee:	ee87 7a8a 	vdiv.f32	s14, s15, s20
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 80012f2:	eec6 7aa9 	vdiv.f32	s15, s13, s19
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 80012f6:	ed92 6a00 	vldr	s12, [r2]
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 80012fa:	edd3 6a00 	vldr	s13, [r3]
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 80012fe:	ee38 8a06 	vadd.f32	s16, s16, s12
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 8001302:	ee78 8aa6 	vadd.f32	s17, s17, s13
    float32_t calc_distance = a_r + (b_r / signal_strength_r) + (c_r / POW2(signal_strength_r));
 8001306:	ee38 8a07 	vadd.f32	s16, s16, s14
    calc_distance = a_l + (b_l / signal_strength_l) + (c_l / POW2(signal_strength_l));
 800130a:	ee78 8aa7 	vadd.f32	s17, s17, s15

    // Calculate the distance
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;

    // Calculate the angle using the trigonometry
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 800130e:	ee78 7ac8 	vsub.f32	s15, s17, s16
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 8001312:	ee38 8a28 	vadd.f32	s16, s16, s17
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 8001316:	ee17 0a90 	vmov	r0, s15
 800131a:	f7ff faa7 	bl	800086c <__aeabi_f2d>
 800131e:	a310      	add	r3, pc, #64	; (adr r3, 8001360 <single_measurement+0x1a0>)
 8001320:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001324:	f7ff f814 	bl	8000350 <__aeabi_dmul>
 8001328:	f7ff faf8 	bl	800091c <__aeabi_d2f>
 800132c:	ee00 0a10 	vmov	s0, r0
 8001330:	f02b fba6 	bl	802ca80 <atanf>
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 8001334:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 8001338:	ed9f 7a11 	vldr	s14, [pc, #68]	; 8001380 <single_measurement+0x1c0>
    return single_meas;
 800133c:	eddf 1a11 	vldr	s3, [pc, #68]	; 8001384 <single_measurement+0x1c4>
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 8001340:	ee39 1a2a 	vadd.f32	s2, s18, s21
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 8001344:	ee28 8a27 	vmul.f32	s16, s16, s15
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 8001348:	ee60 0a07 	vmul.f32	s1, s0, s14
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 800134c:	ee21 1a27 	vmul.f32	s2, s2, s15
}
 8001350:	eeb0 0a48 	vmov.f32	s0, s16
 8001354:	3734      	adds	r7, #52	; 0x34
 8001356:	46bd      	mov	sp, r7
 8001358:	ecbd 8b08 	vpop	{d8-d11}
 800135c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001360:	a8ef1b4a 	.word	0xa8ef1b4a
 8001364:	3f99fd66 	.word	0x3f99fd66
 8001368:	200001ac 	.word	0x200001ac
 800136c:	200001a8 	.word	0x200001a8
 8001370:	200001b4 	.word	0x200001b4
 8001374:	200001b0 	.word	0x200001b0
 8001378:	200001a0 	.word	0x200001a0
 800137c:	200001a4 	.word	0x200001a4
 8001380:	42652ee0 	.word	0x42652ee0
 8001384:	00000000 	.word	0x00000000

08001388 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001388:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800138a:	2064      	movs	r0, #100	; 0x64
 800138c:	f00e fa04 	bl	800f798 <osDelay>
  for(;;)
 8001390:	e7fb      	b.n	800138a <StartDefaultTask+0x2>
 8001392:	bf00      	nop

08001394 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001394:	b580      	push	{r7, lr}
 8001396:	4c19      	ldr	r4, [pc, #100]	; (80013fc <StartTimeoutTask+0x68>)
 8001398:	f8df 8074 	ldr.w	r8, [pc, #116]	; 8001410 <StartTimeoutTask+0x7c>
 800139c:	4e18      	ldr	r6, [pc, #96]	; (8001400 <StartTimeoutTask+0x6c>)
 800139e:	4d19      	ldr	r5, [pc, #100]	; (8001404 <StartTimeoutTask+0x70>)
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013a0:	4f19      	ldr	r7, [pc, #100]	; (8001408 <StartTimeoutTask+0x74>)
	  sleep_timeout_value--;
 80013a2:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013a4:	4915      	ldr	r1, [pc, #84]	; (80013fc <StartTimeoutTask+0x68>)
 80013a6:	2300      	movs	r3, #0
 80013a8:	461a      	mov	r2, r3
	  sleep_timeout_value--;
 80013aa:	f100 3cff 	add.w	ip, r0, #4294967295
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013ae:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80013b2:	f8c4 c000 	str.w	ip, [r4]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80013b6:	f00e faeb 	bl	800f990 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80013ba:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80013bc:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013be:	4638      	mov	r0, r7
 80013c0:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80013c2:	b912      	cbnz	r2, 80013ca <StartTimeoutTask+0x36>
		  sleep_timeout_value = 60;
 80013c4:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80013c6:	f00a fc11 	bl	800bbec <HAL_GPIO_WritePin>
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80013ca:	4810      	ldr	r0, [pc, #64]	; (800140c <StartTimeoutTask+0x78>)
 80013cc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80013d0:	f00a fc10 	bl	800bbf4 <HAL_GPIO_TogglePin>

	  //pwm test
	  static uint8_t prescaler = 140;
	  HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 80013d4:	2100      	movs	r1, #0
 80013d6:	4630      	mov	r0, r6
 80013d8:	f00d fd06 	bl	800ede8 <HAL_TIM_PWM_Stop>
	  htim14.Init.Prescaler = prescaler-1;
 80013dc:	782b      	ldrb	r3, [r5, #0]
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 80013de:	2100      	movs	r1, #0
	  htim14.Init.Prescaler = prescaler-1;
 80013e0:	3b01      	subs	r3, #1
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 80013e2:	4630      	mov	r0, r6
	  htim14.Init.Prescaler = prescaler-1;
 80013e4:	6073      	str	r3, [r6, #4]
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 80013e6:	f00d fc8f 	bl	800ed08 <HAL_TIM_PWM_Start>
	  prescaler = prescaler + 10;
 80013ea:	782b      	ldrb	r3, [r5, #0]
	  if(prescaler > 420)
	  {
		  prescaler = 140;
	  }

	  osDelay(1000);
 80013ec:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
	  prescaler = prescaler + 10;
 80013f0:	330a      	adds	r3, #10
 80013f2:	702b      	strb	r3, [r5, #0]
	  osDelay(1000);
 80013f4:	f00e f9d0 	bl	800f798 <osDelay>
  {
 80013f8:	e7d3      	b.n	80013a2 <StartTimeoutTask+0xe>
 80013fa:	bf00      	nop
 80013fc:	20000010 	.word	0x20000010
 8001400:	2000038c 	.word	0x2000038c
 8001404:	2000000c 	.word	0x2000000c
 8001408:	40021000 	.word	0x40021000
 800140c:	40021800 	.word	0x40021800
 8001410:	200001f0 	.word	0x200001f0

08001414 <gyro_disable>:
{
 8001414:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001416:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001418:	4e1f      	ldr	r6, [pc, #124]	; (8001498 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 800141a:	4d20      	ldr	r5, [pc, #128]	; (800149c <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800141c:	4c20      	ldr	r4, [pc, #128]	; (80014a0 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 800141e:	2700      	movs	r7, #0
 8001420:	9700      	str	r7, [sp, #0]
 8001422:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001424:	f043 0304 	orr.w	r3, r3, #4
 8001428:	6333      	str	r3, [r6, #48]	; 0x30
 800142a:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800142c:	f003 0304 	and.w	r3, r3, #4
 8001430:	9300      	str	r3, [sp, #0]
 8001432:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001434:	682b      	ldr	r3, [r5, #0]
 8001436:	f023 030c 	bic.w	r3, r3, #12
 800143a:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 800143c:	682b      	ldr	r3, [r5, #0]
 800143e:	f043 0304 	orr.w	r3, r3, #4
 8001442:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8001444:	69ab      	ldr	r3, [r5, #24]
 8001446:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800144a:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 800144c:	200a      	movs	r0, #10
 800144e:	f009 fff7 	bl	800b440 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8001452:	682b      	ldr	r3, [r5, #0]
 8001454:	f043 030c 	orr.w	r3, r3, #12
 8001458:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 800145a:	9701      	str	r7, [sp, #4]
 800145c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800145e:	f043 0320 	orr.w	r3, r3, #32
 8001462:	6333      	str	r3, [r6, #48]	; 0x30
 8001464:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001466:	f003 0320 	and.w	r3, r3, #32
 800146a:	9301      	str	r3, [sp, #4]
 800146c:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800146e:	68a3      	ldr	r3, [r4, #8]
 8001470:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001474:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8001476:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001478:	f023 030f 	bic.w	r3, r3, #15
 800147c:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 800147e:	68e3      	ldr	r3, [r4, #12]
 8001480:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001484:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8001486:	200a      	movs	r0, #10
 8001488:	f009 ffda 	bl	800b440 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 800148c:	6823      	ldr	r3, [r4, #0]
 800148e:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8001492:	6023      	str	r3, [r4, #0]
}
 8001494:	b003      	add	sp, #12
 8001496:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001498:	40023800 	.word	0x40023800
 800149c:	40020800 	.word	0x40020800
 80014a0:	40021400 	.word	0x40021400

080014a4 <setCalibrationFlashValues>:
{
 80014a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80014a8:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 80014aa:	009b      	lsls	r3, r3, #2
 80014ac:	3307      	adds	r3, #7
 80014ae:	466d      	mov	r5, sp
 80014b0:	08db      	lsrs	r3, r3, #3
 80014b2:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 80014b6:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 80014b8:	469d      	mov	sp, r3
 80014ba:	466d      	mov	r5, sp
{
 80014bc:	4616      	mov	r6, r2
 80014be:	4681      	mov	r9, r0
 80014c0:	4688      	mov	r8, r1
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 80014c2:	4622      	mov	r2, r4
 80014c4:	4629      	mov	r1, r5
 80014c6:	f7ff fcf9 	bl	8000ebc <Flash_Read_Data>
	Rx_Data[index] = value;
 80014ca:	f845 8026 	str.w	r8, [r5, r6, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 80014ce:	4622      	mov	r2, r4
 80014d0:	4629      	mov	r1, r5
 80014d2:	4648      	mov	r0, r9
 80014d4:	f7ff fcb8 	bl	8000e48 <Flash_Write_Data>
}
 80014d8:	46bd      	mov	sp, r7
 80014da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80014de:	bf00      	nop

080014e0 <SystemClock_Config>:
{
 80014e0:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80014e2:	2400      	movs	r4, #0
{
 80014e4:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80014e6:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 80014ea:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80014ee:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80014f2:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 80014f6:	4a1e      	ldr	r2, [pc, #120]	; (8001570 <SystemClock_Config+0x90>)
 80014f8:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80014fa:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 80014fc:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80014fe:	4b1d      	ldr	r3, [pc, #116]	; (8001574 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8001500:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001504:	6411      	str	r1, [r2, #64]	; 0x40
 8001506:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8001508:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 800150c:	9201      	str	r2, [sp, #4]
 800150e:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001510:	9402      	str	r4, [sp, #8]
 8001512:	681a      	ldr	r2, [r3, #0]
 8001514:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001518:	601a      	str	r2, [r3, #0]
 800151a:	681b      	ldr	r3, [r3, #0]
 800151c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001520:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001522:	2201      	movs	r2, #1
 8001524:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001528:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 800152c:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800152e:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001530:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001532:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001536:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800153a:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 800153e:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001540:	2202      	movs	r2, #2
 8001542:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001544:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001546:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800154a:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800154c:	f00c f98c 	bl	800d868 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001550:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001552:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001556:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800155a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800155e:	a803      	add	r0, sp, #12
 8001560:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001562:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001566:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001568:	f00c fb96 	bl	800dc98 <HAL_RCC_ClockConfig>
}
 800156c:	b015      	add	sp, #84	; 0x54
 800156e:	bd30      	pop	{r4, r5, pc}
 8001570:	40023800 	.word	0x40023800
 8001574:	40007000 	.word	0x40007000

08001578 <main>:
{
 8001578:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800157c:	2400      	movs	r4, #0
{
 800157e:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001580:	f009 ff32 	bl	800b3e8 <HAL_Init>
  SystemClock_Config();
 8001584:	f7ff ffac 	bl	80014e0 <SystemClock_Config>
  gyro_disable();
 8001588:	f7ff ff44 	bl	8001414 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800158c:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001590:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001594:	4bc3      	ldr	r3, [pc, #780]	; (80018a4 <main+0x32c>)
 8001596:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001598:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800159a:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800159c:	48c2      	ldr	r0, [pc, #776]	; (80018a8 <main+0x330>)
  hi2c3.Instance = I2C3;
 800159e:	f8df a33c 	ldr.w	sl, [pc, #828]	; 80018dc <main+0x364>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80015a2:	f041 0110 	orr.w	r1, r1, #16
 80015a6:	6319      	str	r1, [r3, #48]	; 0x30
 80015a8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80015aa:	f001 0110 	and.w	r1, r1, #16
 80015ae:	9100      	str	r1, [sp, #0]
 80015b0:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80015b2:	9401      	str	r4, [sp, #4]
 80015b4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80015b6:	f041 0120 	orr.w	r1, r1, #32
 80015ba:	6319      	str	r1, [r3, #48]	; 0x30
 80015bc:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80015be:	f001 0120 	and.w	r1, r1, #32
 80015c2:	9101      	str	r1, [sp, #4]
 80015c4:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80015c6:	9402      	str	r4, [sp, #8]
 80015c8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80015ca:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80015ce:	6319      	str	r1, [r3, #48]	; 0x30
 80015d0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80015d2:	f001 0180 	and.w	r1, r1, #128	; 0x80
 80015d6:	9102      	str	r1, [sp, #8]
 80015d8:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80015da:	9403      	str	r4, [sp, #12]
 80015dc:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80015de:	f041 0104 	orr.w	r1, r1, #4
 80015e2:	6319      	str	r1, [r3, #48]	; 0x30
 80015e4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80015e6:	f001 0104 	and.w	r1, r1, #4
 80015ea:	9103      	str	r1, [sp, #12]
 80015ec:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80015ee:	9404      	str	r4, [sp, #16]
 80015f0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80015f2:	f041 0101 	orr.w	r1, r1, #1
 80015f6:	6319      	str	r1, [r3, #48]	; 0x30
 80015f8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80015fa:	f001 0101 	and.w	r1, r1, #1
 80015fe:	9104      	str	r1, [sp, #16]
 8001600:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001602:	9405      	str	r4, [sp, #20]
 8001604:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001606:	f041 0102 	orr.w	r1, r1, #2
 800160a:	6319      	str	r1, [r3, #48]	; 0x30
 800160c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800160e:	f001 0102 	and.w	r1, r1, #2
 8001612:	9105      	str	r1, [sp, #20]
 8001614:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001616:	9406      	str	r4, [sp, #24]
 8001618:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800161a:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800161e:	6319      	str	r1, [r3, #48]	; 0x30
 8001620:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001622:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8001626:	9106      	str	r1, [sp, #24]
 8001628:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800162a:	9407      	str	r4, [sp, #28]
 800162c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800162e:	f041 0108 	orr.w	r1, r1, #8
 8001632:	6319      	str	r1, [r3, #48]	; 0x30
 8001634:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001636:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800163a:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800163c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 800163e:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001640:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001642:	f00a fad3 	bl	800bbec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8001646:	4898      	ldr	r0, [pc, #608]	; (80018a8 <main+0x330>)
 8001648:	2120      	movs	r1, #32
 800164a:	2201      	movs	r2, #1
 800164c:	f00a face 	bl	800bbec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8001650:	4896      	ldr	r0, [pc, #600]	; (80018ac <main+0x334>)
 8001652:	4622      	mov	r2, r4
 8001654:	2114      	movs	r1, #20
 8001656:	f00a fac9 	bl	800bbec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 800165a:	4895      	ldr	r0, [pc, #596]	; (80018b0 <main+0x338>)
 800165c:	4622      	mov	r2, r4
 800165e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001662:	f00a fac3 	bl	800bbec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001666:	4893      	ldr	r0, [pc, #588]	; (80018b4 <main+0x33c>)
 8001668:	4622      	mov	r2, r4
 800166a:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 800166e:	f00a fabd 	bl	800bbec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8001672:	4891      	ldr	r0, [pc, #580]	; (80018b8 <main+0x340>)
 8001674:	4622      	mov	r2, r4
 8001676:	2104      	movs	r1, #4
 8001678:	f00a fab8 	bl	800bbec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 800167c:	2201      	movs	r2, #1
 800167e:	488e      	ldr	r0, [pc, #568]	; (80018b8 <main+0x340>)
 8001680:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001684:	f00a fab2 	bl	800bbec <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001688:	f04f 0801 	mov.w	r8, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800168c:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8001690:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001692:	4885      	ldr	r0, [pc, #532]	; (80018a8 <main+0x330>)
 8001694:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001696:	2608      	movs	r6, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001698:	e9cd 380f 	strd	r3, r8, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800169c:	e9cd 4b11 	strd	r4, fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80016a0:	f00a f960 	bl	800b964 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80016a4:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80016a8:	487f      	ldr	r0, [pc, #508]	; (80018a8 <main+0x330>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 80016aa:	960f      	str	r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80016ac:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80016ae:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016b0:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 80016b2:	f00a f957 	bl	800b964 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80016b6:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80016b8:	487b      	ldr	r0, [pc, #492]	; (80018a8 <main+0x330>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 80016ba:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80016bc:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80016be:	2502      	movs	r5, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80016c0:	2704      	movs	r7, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016c2:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016c6:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 80016c8:	f00a f94c 	bl	800b964 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016cc:	4877      	ldr	r0, [pc, #476]	; (80018ac <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80016ce:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016d0:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80016d2:	f04f 0910 	mov.w	r9, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016d6:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80016da:	970f      	str	r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016dc:	f00a f942 	bl	800b964 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80016e0:	4872      	ldr	r0, [pc, #456]	; (80018ac <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016e2:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80016e4:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016e6:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80016ea:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80016ee:	f00a f939 	bl	800b964 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80016f2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80016f6:	486e      	ldr	r0, [pc, #440]	; (80018b0 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80016f8:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80016fa:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016fc:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001700:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001702:	f00a f92f 	bl	800b964 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001706:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800170a:	486a      	ldr	r0, [pc, #424]	; (80018b4 <main+0x33c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800170c:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800170e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001710:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001714:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001716:	f00a f925 	bl	800b964 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 800171a:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800171e:	4866      	ldr	r0, [pc, #408]	; (80018b8 <main+0x340>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8001720:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001722:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001724:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001728:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800172a:	f00a f91b 	bl	800b964 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 800172e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001732:	4862      	ldr	r0, [pc, #392]	; (80018bc <main+0x344>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001734:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001736:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8001738:	230f      	movs	r3, #15
 800173a:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800173c:	e9cd 5410 	strd	r5, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001740:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001742:	f00a f90f 	bl	800b964 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8001746:	2105      	movs	r1, #5
 8001748:	4622      	mov	r2, r4
 800174a:	2009      	movs	r0, #9
 800174c:	f009 fe9c 	bl	800b488 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001750:	2009      	movs	r0, #9
 8001752:	f009 fed7 	bl	800b504 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8001756:	485a      	ldr	r0, [pc, #360]	; (80018c0 <main+0x348>)
 8001758:	4a5a      	ldr	r2, [pc, #360]	; (80018c4 <main+0x34c>)
 800175a:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800175c:	f009 fee0 	bl	800b520 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001760:	4959      	ldr	r1, [pc, #356]	; (80018c8 <main+0x350>)
 8001762:	4a5a      	ldr	r2, [pc, #360]	; (80018cc <main+0x354>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001764:	4650      	mov	r0, sl
  hi2c3.Init.ClockSpeed = 100000;
 8001766:	e9ca 1200 	strd	r1, r2, [sl]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800176a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800176e:	f8ca 2010 	str.w	r2, [sl, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001772:	e9ca 4402 	strd	r4, r4, [sl, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8001776:	e9ca 4405 	strd	r4, r4, [sl, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800177a:	e9ca 4407 	strd	r4, r4, [sl, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800177e:	f00a fc9b 	bl	800c0b8 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001782:	4649      	mov	r1, r9
 8001784:	4650      	mov	r0, sl
 8001786:	f00b fe63 	bl	800d450 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800178a:	4621      	mov	r1, r4
 800178c:	4650      	mov	r0, sl
 800178e:	f00b fe7f 	bl	800d490 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001792:	f8df c14c 	ldr.w	ip, [pc, #332]	; 80018e0 <main+0x368>
  hspi5.Instance = SPI5;
 8001796:	484e      	ldr	r0, [pc, #312]	; (80018d0 <main+0x358>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001798:	f8df a148 	ldr.w	sl, [pc, #328]	; 80018e4 <main+0x36c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800179c:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800179e:	f44f 7282 	mov.w	r2, #260	; 0x104
 80017a2:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80017a6:	f44f 7e00 	mov.w	lr, #512	; 0x200
 80017aa:	2218      	movs	r2, #24
 80017ac:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 80017b0:	220a      	movs	r2, #10
 80017b2:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80017b4:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80017b8:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80017bc:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80017c0:	f00c fd58 	bl	800e274 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 80017c4:	2207      	movs	r2, #7
 80017c6:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 80017c8:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80017ca:	4a42      	ldr	r2, [pc, #264]	; (80018d4 <main+0x35c>)
 80017cc:	f8ca 2000 	str.w	r2, [sl]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80017d0:	2040      	movs	r0, #64	; 0x40
 80017d2:	f44f 72c0 	mov.w	r2, #384	; 0x180
 80017d6:	e9ca 0205 	strd	r0, r2, [sl, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80017da:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80017de:	f8ca 2020 	str.w	r2, [sl, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017e2:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80017e4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017e8:	4650      	mov	r0, sl
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80017ea:	e9ca 8401 	strd	r8, r4, [sl, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80017ee:	e9ca 7903 	strd	r7, r9, [sl, #12]
  SdramTiming.RPDelay = 2;
 80017f2:	e9cd b513 	strd	fp, r5, [sp, #76]	; 0x4c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80017f6:	f8ca 2028 	str.w	r2, [sl, #40]	; 0x28
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80017fa:	f8ca 401c 	str.w	r4, [sl, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80017fe:	f8ca 4024 	str.w	r4, [sl, #36]	; 0x24
  SdramTiming.LoadToActiveDelay = 2;
 8001802:	950f      	str	r5, [sp, #60]	; 0x3c
  SdramTiming.SelfRefreshTime = 4;
 8001804:	9711      	str	r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 8001806:	9515      	str	r5, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001808:	f00c fc42 	bl	800e090 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800180c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001810:	a90b      	add	r1, sp, #44	; 0x2c
 8001812:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001814:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001818:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 800181c:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800181e:	f00c fc59 	bl	800e0d4 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8001822:	4640      	mov	r0, r8
 8001824:	f009 fe0c 	bl	800b440 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001828:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800182c:	a90b      	add	r1, sp, #44	; 0x2c
 800182e:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001830:	e9cd 560b 	strd	r5, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001834:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001838:	f00c fc4c 	bl	800e0d4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800183c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001840:	a90b      	add	r1, sp, #44	; 0x2c
 8001842:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001844:	e9cd b60b 	strd	fp, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001848:	e9cd 740d 	strd	r7, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800184c:	f00c fc42 	bl	800e0d4 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001850:	f44f 720c 	mov.w	r2, #560	; 0x230
 8001854:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001856:	9908      	ldr	r1, [sp, #32]
 8001858:	910e      	str	r1, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800185a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800185e:	a90b      	add	r1, sp, #44	; 0x2c
 8001860:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001862:	e9cd 760b 	strd	r7, r6, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8001866:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800186a:	f00c fc33 	bl	800e0d4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 800186e:	4650      	mov	r0, sl
 8001870:	f240 516a 	movw	r1, #1386	; 0x56a
 8001874:	f00c fc4c 	bl	800e110 <HAL_SDRAM_ProgramRefreshRate>
  hltdc.Instance = LTDC;
 8001878:	f8df a06c 	ldr.w	sl, [pc, #108]	; 80018e8 <main+0x370>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800187c:	2234      	movs	r2, #52	; 0x34
 800187e:	4621      	mov	r1, r4
 8001880:	a80f      	add	r0, sp, #60	; 0x3c
 8001882:	f02c f9a2 	bl	802dbca <memset>
  hltdc.Instance = LTDC;
 8001886:	4a14      	ldr	r2, [pc, #80]	; (80018d8 <main+0x360>)
 8001888:	f8ca 2000 	str.w	r2, [sl]
  hltdc.Init.HorizontalSync = 9;
 800188c:	2209      	movs	r2, #9
 800188e:	f8ca 2014 	str.w	r2, [sl, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001892:	221d      	movs	r2, #29
 8001894:	f8ca 201c 	str.w	r2, [sl, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001898:	f240 130d 	movw	r3, #269	; 0x10d
 800189c:	f240 1243 	movw	r2, #323	; 0x143
 80018a0:	e024      	b.n	80018ec <main+0x374>
 80018a2:	bf00      	nop
 80018a4:	40023800 	.word	0x40023800
 80018a8:	40021000 	.word	0x40021000
 80018ac:	40020800 	.word	0x40020800
 80018b0:	40020400 	.word	0x40020400
 80018b4:	40020c00 	.word	0x40020c00
 80018b8:	40021800 	.word	0x40021800
 80018bc:	40020000 	.word	0x40020000
 80018c0:	200001fc 	.word	0x200001fc
 80018c4:	40023000 	.word	0x40023000
 80018c8:	40005c00 	.word	0x40005c00
 80018cc:	000186a0 	.word	0x000186a0
 80018d0:	20000334 	.word	0x20000334
 80018d4:	a0000140 	.word	0xa0000140
 80018d8:	40016800 	.word	0x40016800
 80018dc:	20000204 	.word	0x20000204
 80018e0:	40015000 	.word	0x40015000
 80018e4:	20000300 	.word	0x20000300
 80018e8:	20000258 	.word	0x20000258
 80018ec:	e9ca 3209 	strd	r3, r2, [sl, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 80018f0:	f240 1117 	movw	r1, #279	; 0x117
 80018f4:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 80018f8:	f8aa 4034 	strh.w	r4, [sl, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80018fc:	4650      	mov	r0, sl
  hltdc.Init.TotalHeigh = 327;
 80018fe:	e9ca 120b 	strd	r1, r2, [sl, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8001902:	f8ca 8018 	str.w	r8, [sl, #24]
  hltdc.Init.AccumulatedVBP = 3;
 8001906:	f8ca b020 	str.w	fp, [sl, #32]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 800190a:	e9ca 4401 	strd	r4, r4, [sl, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800190e:	e9ca 4403 	strd	r4, r4, [sl, #12]
  hltdc.Init.Backcolor.Red = 0;
 8001912:	f88a 4036 	strb.w	r4, [sl, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001916:	f00b fddf 	bl	800d4d8 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 800191a:	23f0      	movs	r3, #240	; 0xf0
 800191c:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 800191e:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8001920:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001924:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8001926:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8001928:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800192a:	f44f 6e80 	mov.w	lr, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800192e:	4622      	mov	r2, r4
 8001930:	a90f      	add	r1, sp, #60	; 0x3c
 8001932:	4650      	mov	r0, sl
  pLayerCfg.Alpha = 255;
 8001934:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001936:	2305      	movs	r3, #5
 8001938:	e9cd e316 	strd	lr, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 800193c:	f8df 826c 	ldr.w	r8, [pc, #620]	; 8001bac <main+0x634>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001940:	9513      	str	r5, [sp, #76]	; 0x4c
  pLayerCfg.WindowX0 = 0;
 8001942:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 8001944:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 8001946:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8001948:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 800194a:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 800194e:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001952:	f00b fe97 	bl	800d684 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001956:	4b82      	ldr	r3, [pc, #520]	; (8001b60 <main+0x5e8>)
 8001958:	f8c8 3000 	str.w	r3, [r8]
  LcdDrv->Init();
 800195c:	681b      	ldr	r3, [r3, #0]
  htim2.Instance = TIM2;
 800195e:	f8df a250 	ldr.w	sl, [pc, #592]	; 8001bb0 <main+0x638>
  LcdDrv->Init();
 8001962:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001964:	f8d8 3000 	ldr.w	r3, [r8]
  htim3.Instance = TIM3;
 8001968:	f8df 8248 	ldr.w	r8, [pc, #584]	; 8001bb4 <main+0x63c>
  LcdDrv->DisplayOff();
 800196c:	68db      	ldr	r3, [r3, #12]
 800196e:	4798      	blx	r3
  htim3.Instance = TIM3;
 8001970:	4b7c      	ldr	r3, [pc, #496]	; (8001b64 <main+0x5ec>)
 8001972:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001976:	4640      	mov	r0, r8
  htim3.Init.Period = 65535;
 8001978:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800197c:	f8c8 300c 	str.w	r3, [r8, #12]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001980:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001984:	f8c8 4010 	str.w	r4, [r8, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001988:	f8c8 4018 	str.w	r4, [r8, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800198c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001990:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001994:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001998:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800199c:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 80019a0:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80019a2:	f00d f857 	bl	800ea54 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80019a6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80019aa:	a90b      	add	r1, sp, #44	; 0x2c
 80019ac:	4640      	mov	r0, r8
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80019ae:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80019b0:	f00d fb7a 	bl	800f0a8 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80019b4:	a90f      	add	r1, sp, #60	; 0x3c
 80019b6:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 80019b8:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80019bc:	f00d fc24 	bl	800f208 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80019c0:	a909      	add	r1, sp, #36	; 0x24
 80019c2:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80019c4:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80019c8:	f00d fd5c 	bl	800f484 <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Period = 100-1;
 80019cc:	2363      	movs	r3, #99	; 0x63
  htim2.Instance = TIM2;
 80019ce:	f04f 4b80 	mov.w	fp, #1073741824	; 0x40000000
  htim2.Init.Prescaler = 168-1;
 80019d2:	21a7      	movs	r1, #167	; 0xa7
  htim2.Init.Period = 100-1;
 80019d4:	f8ca 300c 	str.w	r3, [sl, #12]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80019d8:	4650      	mov	r0, sl
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80019da:	2380      	movs	r3, #128	; 0x80
  htim2.Instance = TIM2;
 80019dc:	f8ca b000 	str.w	fp, [sl]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 80019e0:	f8ca 3018 	str.w	r3, [sl, #24]
  htim2.Init.Prescaler = 168-1;
 80019e4:	f8ca 1004 	str.w	r1, [sl, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80019e8:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 80019ec:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80019f0:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80019f4:	f8ca 4008 	str.w	r4, [sl, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80019f8:	f8ca 4010 	str.w	r4, [sl, #16]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80019fc:	f00d f82a 	bl	800ea54 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001a00:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001a04:	a90f      	add	r1, sp, #60	; 0x3c
 8001a06:	4650      	mov	r0, sl
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001a08:	930f      	str	r3, [sp, #60]	; 0x3c
  TIM2->CCR1 = 50;
 8001a0a:	f04f 0832 	mov.w	r8, #50	; 0x32
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001a0e:	f00d fb4b 	bl	800f0a8 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001a12:	a90b      	add	r1, sp, #44	; 0x2c
 8001a14:	4650      	mov	r0, sl
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001a16:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001a1a:	f00d fd33 	bl	800f484 <HAL_TIMEx_MasterConfigSynchronization>
  TIM2->CCR1 = 50;
 8001a1e:	f8cb 8034 	str.w	r8, [fp, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001a22:	4621      	mov	r1, r4
 8001a24:	4650      	mov	r0, sl
 8001a26:	f00d f96f 	bl	800ed08 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001a2a:	4639      	mov	r1, r7
  TIM2->CCR2 = 50;
 8001a2c:	f8cb 8038 	str.w	r8, [fp, #56]	; 0x38
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001a30:	4650      	mov	r0, sl
 8001a32:	f00d f969 	bl	800ed08 <HAL_TIM_PWM_Start>
  htim14.Instance = TIM14;
 8001a36:	4f4c      	ldr	r7, [pc, #304]	; (8001b68 <main+0x5f0>)
  TIM2->CCR3 = 50;
 8001a38:	f8cb 803c 	str.w	r8, [fp, #60]	; 0x3c
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 8001a3c:	4631      	mov	r1, r6
 8001a3e:	4650      	mov	r0, sl
 8001a40:	f00d f962 	bl	800ed08 <HAL_TIM_PWM_Start>
  htim14.Init.Prescaler = 210-1;
 8001a44:	4949      	ldr	r1, [pc, #292]	; (8001b6c <main+0x5f4>)
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001a46:	60bc      	str	r4, [r7, #8]
  htim14.Init.Period = 100-1;
 8001a48:	2363      	movs	r3, #99	; 0x63
  htim14.Init.Prescaler = 210-1;
 8001a4a:	22d1      	movs	r2, #209	; 0xd1
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001a4c:	e9c7 3403 	strd	r3, r4, [r7, #12]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001a50:	4638      	mov	r0, r7
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001a52:	2380      	movs	r3, #128	; 0x80
 8001a54:	61bb      	str	r3, [r7, #24]
  htim14.Init.Prescaler = 210-1;
 8001a56:	e9c7 1200 	strd	r1, r2, [r7]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001a5a:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001a5e:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001a62:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001a66:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001a68:	f00c fff4 	bl	800ea54 <HAL_TIM_Base_Init>
  if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 8001a6c:	4638      	mov	r0, r7
 8001a6e:	f00d f8bd 	bl	800ebec <HAL_TIM_PWM_Init>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001a72:	f04f 0b60 	mov.w	fp, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001a76:	4622      	mov	r2, r4
 8001a78:	a90f      	add	r1, sp, #60	; 0x3c
 8001a7a:	4638      	mov	r0, r7
  htim9.Instance = TIM9;
 8001a7c:	4e3c      	ldr	r6, [pc, #240]	; (8001b70 <main+0x5f8>)
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001a7e:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001a80:	e9cd 4410 	strd	r4, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001a84:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001a88:	f00d f9fe 	bl	800ee88 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim14);
 8001a8c:	4638      	mov	r0, r7
 8001a8e:	f000 fcfb 	bl	8002488 <HAL_TIM_MspPostInit>
  htim9.Init.Period = 100-1;
 8001a92:	2363      	movs	r3, #99	; 0x63
  htim9.Init.Prescaler = 84-1;
 8001a94:	4f37      	ldr	r7, [pc, #220]	; (8001b74 <main+0x5fc>)
  htim9.Init.Period = 100-1;
 8001a96:	60f3      	str	r3, [r6, #12]
  htim9.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001a98:	2380      	movs	r3, #128	; 0x80
 8001a9a:	61b3      	str	r3, [r6, #24]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001a9c:	4630      	mov	r0, r6
  htim9.Init.Prescaler = 84-1;
 8001a9e:	2353      	movs	r3, #83	; 0x53
 8001aa0:	e9c6 7300 	strd	r7, r3, [r6]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001aa4:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001aa8:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001aac:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001ab0:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001ab4:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001ab8:	9415      	str	r4, [sp, #84]	; 0x54
  htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001aba:	60b4      	str	r4, [r6, #8]
  htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001abc:	6134      	str	r4, [r6, #16]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001abe:	f00c ffc9 	bl	800ea54 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001ac2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 8001ac6:	a90b      	add	r1, sp, #44	; 0x2c
 8001ac8:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001aca:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 8001acc:	f00d faec 	bl	800f0a8 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim9) != HAL_OK)
 8001ad0:	4630      	mov	r0, r6
 8001ad2:	f00d f88b 	bl	800ebec <HAL_TIM_PWM_Init>
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001ad6:	4622      	mov	r2, r4
 8001ad8:	a90f      	add	r1, sp, #60	; 0x3c
 8001ada:	4630      	mov	r0, r6
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001adc:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001ae0:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001ae4:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001ae6:	f00d f9cf 	bl	800ee88 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 8001aea:	4621      	mov	r1, r4
  TIM9->CCR1 = 50;
 8001aec:	f8c7 8034 	str.w	r8, [r7, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 8001af0:	4630      	mov	r0, r6
 8001af2:	f00d f909 	bl	800ed08 <HAL_TIM_PWM_Start>
  HAL_TIM_MspPostInit(&htim9);
 8001af6:	4630      	mov	r0, r6
 8001af8:	f000 fcc6 	bl	8002488 <HAL_TIM_MspPostInit>
  MX_TouchGFX_Init();
 8001afc:	f000 fe5a 	bl	80027b4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001b00:	f000 fe56 	bl	80027b0 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001b04:	f7ff fc86 	bl	8001414 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001b08:	f000 f958 	bl	8001dbc <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001b0c:	f000 f98a 	bl	8001e24 <MEAS_timer_init>
  Flash_Read_Data(SECTOR_23_ADDR, Calibration_Data, 12);
 8001b10:	4919      	ldr	r1, [pc, #100]	; (8001b78 <main+0x600>)
 8001b12:	481a      	ldr	r0, [pc, #104]	; (8001b7c <main+0x604>)
 8001b14:	220c      	movs	r2, #12
 8001b16:	f7ff f9d1 	bl	8000ebc <Flash_Read_Data>
  osKernelInitialize();
 8001b1a:	f00d fdc5 	bl	800f6a8 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001b1e:	4629      	mov	r1, r5
 8001b20:	4a17      	ldr	r2, [pc, #92]	; (8001b80 <main+0x608>)
 8001b22:	4648      	mov	r0, r9
 8001b24:	f00d fefa 	bl	800f91c <osMessageQueueNew>
 8001b28:	4b16      	ldr	r3, [pc, #88]	; (8001b84 <main+0x60c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001b2a:	4a17      	ldr	r2, [pc, #92]	; (8001b88 <main+0x610>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001b2c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001b2e:	4621      	mov	r1, r4
 8001b30:	4816      	ldr	r0, [pc, #88]	; (8001b8c <main+0x614>)
 8001b32:	f00d fde5 	bl	800f700 <osThreadNew>
 8001b36:	4b16      	ldr	r3, [pc, #88]	; (8001b90 <main+0x618>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001b38:	4a16      	ldr	r2, [pc, #88]	; (8001b94 <main+0x61c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001b3a:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001b3c:	4621      	mov	r1, r4
 8001b3e:	4816      	ldr	r0, [pc, #88]	; (8001b98 <main+0x620>)
 8001b40:	f00d fdde 	bl	800f700 <osThreadNew>
 8001b44:	4b15      	ldr	r3, [pc, #84]	; (8001b9c <main+0x624>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001b46:	4a16      	ldr	r2, [pc, #88]	; (8001ba0 <main+0x628>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001b48:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001b4a:	4621      	mov	r1, r4
 8001b4c:	4815      	ldr	r0, [pc, #84]	; (8001ba4 <main+0x62c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001b4e:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001b50:	f00d fdd6 	bl	800f700 <osThreadNew>
 8001b54:	4b14      	ldr	r3, [pc, #80]	; (8001ba8 <main+0x630>)
 8001b56:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001b58:	f00d fdb8 	bl	800f6cc <osKernelStart>
  while (1)
 8001b5c:	e7fe      	b.n	8001b5c <main+0x5e4>
 8001b5e:	bf00      	nop
 8001b60:	2000001c 	.word	0x2000001c
 8001b64:	40000400 	.word	0x40000400
 8001b68:	2000038c 	.word	0x2000038c
 8001b6c:	40002000 	.word	0x40002000
 8001b70:	20000464 	.word	0x20000464
 8001b74:	40014000 	.word	0x40014000
 8001b78:	200001b8 	.word	0x200001b8
 8001b7c:	081e0000 	.word	0x081e0000
 8001b80:	0802e970 	.word	0x0802e970
 8001b84:	200001f0 	.word	0x200001f0
 8001b88:	0802e9ac 	.word	0x0802e9ac
 8001b8c:	08001389 	.word	0x08001389
 8001b90:	200001f8 	.word	0x200001f8
 8001b94:	0802e94c 	.word	0x0802e94c
 8001b98:	080027c5 	.word	0x080027c5
 8001b9c:	200001e8 	.word	0x200001e8
 8001ba0:	0802e988 	.word	0x0802e988
 8001ba4:	08001395 	.word	0x08001395
 8001ba8:	200001f4 	.word	0x200001f4
 8001bac:	200001ec 	.word	0x200001ec
 8001bb0:	200003d4 	.word	0x200003d4
 8001bb4:	2000041c 	.word	0x2000041c

08001bb8 <IOE_Init>:
 8001bb8:	4770      	bx	lr
 8001bba:	bf00      	nop

08001bbc <IOE_ITConfig>:
 8001bbc:	4770      	bx	lr
 8001bbe:	bf00      	nop

08001bc0 <IOE_Write>:
{
 8001bc0:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001bc2:	4c09      	ldr	r4, [pc, #36]	; (8001be8 <IOE_Write+0x28>)
{
 8001bc4:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001bc6:	6824      	ldr	r4, [r4, #0]
 8001bc8:	9402      	str	r4, [sp, #8]
{
 8001bca:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001bcc:	2301      	movs	r3, #1
 8001bce:	f88d 4017 	strb.w	r4, [sp, #23]
 8001bd2:	f10d 0417 	add.w	r4, sp, #23
 8001bd6:	460a      	mov	r2, r1
 8001bd8:	9301      	str	r3, [sp, #4]
 8001bda:	4601      	mov	r1, r0
 8001bdc:	9400      	str	r4, [sp, #0]
 8001bde:	4803      	ldr	r0, [pc, #12]	; (8001bec <IOE_Write+0x2c>)
 8001be0:	f00a fb32 	bl	800c248 <HAL_I2C_Mem_Write>
}
 8001be4:	b006      	add	sp, #24
 8001be6:	bd10      	pop	{r4, pc}
 8001be8:	20000004 	.word	0x20000004
 8001bec:	20000204 	.word	0x20000204

08001bf0 <IOE_Read>:
{
 8001bf0:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001bf2:	4b0b      	ldr	r3, [pc, #44]	; (8001c20 <IOE_Read+0x30>)
{
 8001bf4:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001bf6:	681b      	ldr	r3, [r3, #0]
 8001bf8:	9302      	str	r3, [sp, #8]
{
 8001bfa:	4684      	mov	ip, r0
 8001bfc:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001bfe:	2301      	movs	r3, #1
 8001c00:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001c04:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001c06:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001c0a:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001c0e:	4661      	mov	r1, ip
 8001c10:	4804      	ldr	r0, [pc, #16]	; (8001c24 <IOE_Read+0x34>)
 8001c12:	f00a fc0b 	bl	800c42c <HAL_I2C_Mem_Read>
}
 8001c16:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001c1a:	b007      	add	sp, #28
 8001c1c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001c20:	20000004 	.word	0x20000004
 8001c24:	20000204 	.word	0x20000204

08001c28 <IOE_ReadMultiple>:
{
 8001c28:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001c2a:	4c09      	ldr	r4, [pc, #36]	; (8001c50 <IOE_ReadMultiple+0x28>)
{
 8001c2c:	b084      	sub	sp, #16
 8001c2e:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001c30:	6820      	ldr	r0, [r4, #0]
 8001c32:	9002      	str	r0, [sp, #8]
 8001c34:	e9cd 2300 	strd	r2, r3, [sp]
 8001c38:	4806      	ldr	r0, [pc, #24]	; (8001c54 <IOE_ReadMultiple+0x2c>)
 8001c3a:	460a      	mov	r2, r1
 8001c3c:	2301      	movs	r3, #1
 8001c3e:	4661      	mov	r1, ip
 8001c40:	f00a fbf4 	bl	800c42c <HAL_I2C_Mem_Read>
}
 8001c44:	3800      	subs	r0, #0
 8001c46:	bf18      	it	ne
 8001c48:	2001      	movne	r0, #1
 8001c4a:	b004      	add	sp, #16
 8001c4c:	bd10      	pop	{r4, pc}
 8001c4e:	bf00      	nop
 8001c50:	20000004 	.word	0x20000004
 8001c54:	20000204 	.word	0x20000204

08001c58 <IOE_Delay>:
 8001c58:	f009 bbf2 	b.w	800b440 <HAL_Delay>

08001c5c <LCD_IO_Init>:
{
 8001c5c:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001c5e:	4806      	ldr	r0, [pc, #24]	; (8001c78 <LCD_IO_Init+0x1c>)
 8001c60:	2200      	movs	r2, #0
 8001c62:	2104      	movs	r1, #4
 8001c64:	f009 ffc2 	bl	800bbec <HAL_GPIO_WritePin>
}
 8001c68:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001c6c:	4802      	ldr	r0, [pc, #8]	; (8001c78 <LCD_IO_Init+0x1c>)
 8001c6e:	2201      	movs	r2, #1
 8001c70:	2104      	movs	r1, #4
 8001c72:	f009 bfbb 	b.w	800bbec <HAL_GPIO_WritePin>
 8001c76:	bf00      	nop
 8001c78:	40020800 	.word	0x40020800

08001c7c <LCD_IO_WriteData>:
{
 8001c7c:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001c7e:	4d10      	ldr	r5, [pc, #64]	; (8001cc0 <LCD_IO_WriteData+0x44>)
{
 8001c80:	b083      	sub	sp, #12
 8001c82:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001c84:	2201      	movs	r2, #1
 8001c86:	480f      	ldr	r0, [pc, #60]	; (8001cc4 <LCD_IO_WriteData+0x48>)
 8001c88:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001c8c:	f009 ffae 	bl	800bbec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001c90:	4628      	mov	r0, r5
 8001c92:	2200      	movs	r2, #0
 8001c94:	2104      	movs	r1, #4
 8001c96:	f009 ffa9 	bl	800bbec <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001c9a:	4b0b      	ldr	r3, [pc, #44]	; (8001cc8 <LCD_IO_WriteData+0x4c>)
 8001c9c:	480b      	ldr	r0, [pc, #44]	; (8001ccc <LCD_IO_WriteData+0x50>)
 8001c9e:	681b      	ldr	r3, [r3, #0]
 8001ca0:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001ca4:	f10d 0106 	add.w	r1, sp, #6
 8001ca8:	2201      	movs	r2, #1
 8001caa:	f00c fb45 	bl	800e338 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001cae:	2201      	movs	r2, #1
 8001cb0:	2104      	movs	r1, #4
 8001cb2:	4628      	mov	r0, r5
}
 8001cb4:	b003      	add	sp, #12
 8001cb6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001cba:	f009 bf97 	b.w	800bbec <HAL_GPIO_WritePin>
 8001cbe:	bf00      	nop
 8001cc0:	40020800 	.word	0x40020800
 8001cc4:	40020c00 	.word	0x40020c00
 8001cc8:	20000008 	.word	0x20000008
 8001ccc:	20000334 	.word	0x20000334

08001cd0 <LCD_IO_WriteReg>:
{
 8001cd0:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001cd2:	4d10      	ldr	r5, [pc, #64]	; (8001d14 <LCD_IO_WriteReg+0x44>)
{
 8001cd4:	b083      	sub	sp, #12
 8001cd6:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001cd8:	2200      	movs	r2, #0
 8001cda:	480f      	ldr	r0, [pc, #60]	; (8001d18 <LCD_IO_WriteReg+0x48>)
 8001cdc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001ce0:	f009 ff84 	bl	800bbec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ce4:	4628      	mov	r0, r5
 8001ce6:	2200      	movs	r2, #0
 8001ce8:	2104      	movs	r1, #4
 8001cea:	f009 ff7f 	bl	800bbec <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001cee:	4b0b      	ldr	r3, [pc, #44]	; (8001d1c <LCD_IO_WriteReg+0x4c>)
 8001cf0:	480b      	ldr	r0, [pc, #44]	; (8001d20 <LCD_IO_WriteReg+0x50>)
 8001cf2:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001cf4:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001cf8:	f10d 0106 	add.w	r1, sp, #6
 8001cfc:	2201      	movs	r2, #1
 8001cfe:	f00c fb1b 	bl	800e338 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001d02:	2201      	movs	r2, #1
 8001d04:	2104      	movs	r1, #4
 8001d06:	4628      	mov	r0, r5
}
 8001d08:	b003      	add	sp, #12
 8001d0a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001d0e:	f009 bf6d 	b.w	800bbec <HAL_GPIO_WritePin>
 8001d12:	bf00      	nop
 8001d14:	40020800 	.word	0x40020800
 8001d18:	40020c00 	.word	0x40020c00
 8001d1c:	20000008 	.word	0x20000008
 8001d20:	20000334 	.word	0x20000334

08001d24 <LCD_IO_ReadData>:
{
 8001d24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001d28:	4e19      	ldr	r6, [pc, #100]	; (8001d90 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001d2a:	4f1a      	ldr	r7, [pc, #104]	; (8001d94 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001d2c:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001d98 <LCD_IO_ReadData+0x74>
 8001d30:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001d9c <LCD_IO_ReadData+0x78>
{
 8001d34:	b083      	sub	sp, #12
 8001d36:	460c      	mov	r4, r1
 8001d38:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001d3a:	2200      	movs	r2, #0
 8001d3c:	4630      	mov	r0, r6
 8001d3e:	2104      	movs	r1, #4
 8001d40:	f009 ff54 	bl	800bbec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001d44:	4638      	mov	r0, r7
 8001d46:	2200      	movs	r2, #0
 8001d48:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001d4c:	f009 ff4e 	bl	800bbec <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001d50:	f8d9 3000 	ldr.w	r3, [r9]
 8001d54:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001d58:	a901      	add	r1, sp, #4
 8001d5a:	2201      	movs	r2, #1
 8001d5c:	4640      	mov	r0, r8
 8001d5e:	f00c faeb 	bl	800e338 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001d62:	f8d9 3000 	ldr.w	r3, [r9]
 8001d66:	4622      	mov	r2, r4
 8001d68:	a901      	add	r1, sp, #4
 8001d6a:	4640      	mov	r0, r8
 8001d6c:	f00c fd8c 	bl	800e888 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001d70:	4638      	mov	r0, r7
 8001d72:	2201      	movs	r2, #1
 8001d74:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001d78:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001d7a:	f009 ff37 	bl	800bbec <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001d7e:	4630      	mov	r0, r6
 8001d80:	2201      	movs	r2, #1
 8001d82:	2104      	movs	r1, #4
 8001d84:	f009 ff32 	bl	800bbec <HAL_GPIO_WritePin>
}
 8001d88:	4620      	mov	r0, r4
 8001d8a:	b003      	add	sp, #12
 8001d8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001d90:	40020800 	.word	0x40020800
 8001d94:	40020c00 	.word	0x40020c00
 8001d98:	20000008 	.word	0x20000008
 8001d9c:	20000334 	.word	0x20000334

08001da0 <LCD_Delay>:
  HAL_Delay(Delay);
 8001da0:	f009 bb4e 	b.w	800b440 <HAL_Delay>

08001da4 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001da4:	4b03      	ldr	r3, [pc, #12]	; (8001db4 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001da6:	6802      	ldr	r2, [r0, #0]
 8001da8:	429a      	cmp	r2, r3
 8001daa:	d000      	beq.n	8001dae <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001dac:	4770      	bx	lr
    HAL_IncTick();
 8001dae:	f009 bb35 	b.w	800b41c <HAL_IncTick>
 8001db2:	bf00      	nop
 8001db4:	40001000 	.word	0x40001000

08001db8 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001db8:	4770      	bx	lr
 8001dba:	bf00      	nop

08001dbc <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 8001dbc:	b410      	push	{r4}
 8001dbe:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001dc0:	4b15      	ldr	r3, [pc, #84]	; (8001e18 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001dc2:	4916      	ldr	r1, [pc, #88]	; (8001e1c <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001dc4:	2400      	movs	r4, #0
 8001dc6:	9400      	str	r4, [sp, #0]
 8001dc8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dca:	f042 0220 	orr.w	r2, r2, #32
 8001dce:	631a      	str	r2, [r3, #48]	; 0x30
 8001dd0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dd2:	f002 0220 	and.w	r2, r2, #32
 8001dd6:	9200      	str	r2, [sp, #0]
 8001dd8:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001dda:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001ddc:	4a10      	ldr	r2, [pc, #64]	; (8001e20 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001dde:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001de2:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001de4:	6808      	ldr	r0, [r1, #0]
 8001de6:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001dea:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001dec:	9401      	str	r4, [sp, #4]
 8001dee:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001df0:	f041 0104 	orr.w	r1, r1, #4
 8001df4:	6319      	str	r1, [r3, #48]	; 0x30
 8001df6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001df8:	f003 0304 	and.w	r3, r3, #4
 8001dfc:	9301      	str	r3, [sp, #4]
 8001dfe:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001e00:	6813      	ldr	r3, [r2, #0]
 8001e02:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001e06:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001e08:	6813      	ldr	r3, [r2, #0]
 8001e0a:	f043 030c 	orr.w	r3, r3, #12
 8001e0e:	6013      	str	r3, [r2, #0]
}
 8001e10:	b003      	add	sp, #12
 8001e12:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001e16:	4770      	bx	lr
 8001e18:	40023800 	.word	0x40023800
 8001e1c:	40021400 	.word	0x40021400
 8001e20:	40020800 	.word	0x40020800

08001e24 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001e24:	b410      	push	{r4}
 8001e26:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001e28:	4a0e      	ldr	r2, [pc, #56]	; (8001e64 <MEAS_timer_init+0x40>)
 8001e2a:	2000      	movs	r0, #0
 8001e2c:	9001      	str	r0, [sp, #4]
 8001e2e:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001e30:	f041 0101 	orr.w	r1, r1, #1
 8001e34:	6411      	str	r1, [r2, #64]	; 0x40
 8001e36:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001e38:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001e3c:	f002 0201 	and.w	r2, r2, #1
 8001e40:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001e42:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001e46:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001e48:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001e4a:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001e4c:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001e4e:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001e50:	4905      	ldr	r1, [pc, #20]	; (8001e68 <MEAS_timer_init+0x44>)
 8001e52:	f042 0220 	orr.w	r2, r2, #32
 8001e56:	605a      	str	r2, [r3, #4]
 8001e58:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001e5c:	b003      	add	sp, #12
 8001e5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001e62:	4770      	bx	lr
 8001e64:	40023800 	.word	0x40023800
 8001e68:	e000e100 	.word	0xe000e100

08001e6c <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001e6c:	b410      	push	{r4}
 8001e6e:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001e70:	4a36      	ldr	r2, [pc, #216]	; (8001f4c <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001e72:	4b37      	ldr	r3, [pc, #220]	; (8001f50 <MEAS_ADC3_scan_init+0xe4>)
 8001e74:	4c37      	ldr	r4, [pc, #220]	; (8001f54 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001e76:	2100      	movs	r1, #0
 8001e78:	9100      	str	r1, [sp, #0]
 8001e7a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001e7c:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8001e80:	6450      	str	r0, [r2, #68]	; 0x44
 8001e82:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001e84:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8001e88:	9000      	str	r0, [sp, #0]
 8001e8a:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001e8c:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8001e8e:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001e92:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001e94:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001e96:	f040 0004 	orr.w	r0, r0, #4
 8001e9a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001e9c:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001e9e:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8001ea2:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001ea4:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001ea6:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001eaa:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001eac:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001eae:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8001eb2:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001eb4:	6858      	ldr	r0, [r3, #4]
 8001eb6:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001eba:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001ebc:	6898      	ldr	r0, [r3, #8]
 8001ebe:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001ec2:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001ec4:	6898      	ldr	r0, [r3, #8]
 8001ec6:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001eca:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001ecc:	6898      	ldr	r0, [r3, #8]
 8001ece:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001ed2:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001ed4:	9101      	str	r1, [sp, #4]
 8001ed6:	6b10      	ldr	r0, [r2, #48]	; 0x30
 8001ed8:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 8001edc:	6310      	str	r0, [r2, #48]	; 0x30
 8001ede:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8001ee0:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001ee4:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001ee6:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001eea:	9a01      	ldr	r2, [sp, #4]
 8001eec:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001ef0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001ef2:	f022 0201 	bic.w	r2, r2, #1
 8001ef6:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 8001ef8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001efa:	07d2      	lsls	r2, r2, #31
 8001efc:	d4fc      	bmi.n	8001ef8 <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001efe:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001f00:	4815      	ldr	r0, [pc, #84]	; (8001f58 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001f02:	4916      	ldr	r1, [pc, #88]	; (8001f5c <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001f04:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001f08:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001f0a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001f0c:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001f10:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 8001f12:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001f14:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001f18:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001f1a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001f1c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001f20:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001f22:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001f24:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001f28:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001f2a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001f2c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001f30:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001f32:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001f34:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001f38:	f042 0210 	orr.w	r2, r2, #16
 8001f3c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001f3e:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001f40:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001f42:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001f44:	b003      	add	sp, #12
 8001f46:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001f4a:	4770      	bx	lr
 8001f4c:	40023800 	.word	0x40023800
 8001f50:	40012200 	.word	0x40012200
 8001f54:	e000e100 	.word	0xe000e100
 8001f58:	4001224c 	.word	0x4001224c
 8001f5c:	200004ac 	.word	0x200004ac

08001f60 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001f60:	4b1b      	ldr	r3, [pc, #108]	; (8001fd0 <DMA2_Stream1_IRQHandler+0x70>)
 8001f62:	681a      	ldr	r2, [r3, #0]
 8001f64:	0511      	lsls	r1, r2, #20
 8001f66:	d400      	bmi.n	8001f6a <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8001f68:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001f6a:	4a1a      	ldr	r2, [pc, #104]	; (8001fd4 <DMA2_Stream1_IRQHandler+0x74>)
 8001f6c:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001f70:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001f74:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001f78:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001f7c:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001f80:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001f82:	f022 0201 	bic.w	r2, r2, #1
 8001f86:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001f88:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001f8a:	07d2      	lsls	r2, r2, #31
 8001f8c:	d4fc      	bmi.n	8001f88 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001f8e:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001f90:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001f94:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001f98:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001f9a:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001f9c:	490e      	ldr	r1, [pc, #56]	; (8001fd8 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001f9e:	f023 0301 	bic.w	r3, r3, #1
 8001fa2:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001fa4:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001fa6:	4b0d      	ldr	r3, [pc, #52]	; (8001fdc <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001fa8:	f020 0001 	bic.w	r0, r0, #1
 8001fac:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8001fae:	6888      	ldr	r0, [r1, #8]
 8001fb0:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001fb4:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001fb6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001fb8:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001fbc:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8001fbe:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001fc0:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8001fc4:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001fc6:	6813      	ldr	r3, [r2, #0]
 8001fc8:	f023 0301 	bic.w	r3, r3, #1
 8001fcc:	6013      	str	r3, [r2, #0]
}
 8001fce:	4770      	bx	lr
 8001fd0:	40026400 	.word	0x40026400
 8001fd4:	e000e100 	.word	0xe000e100
 8001fd8:	40012200 	.word	0x40012200
 8001fdc:	40023800 	.word	0x40023800

08001fe0 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8001fe0:	b510      	push	{r4, lr}
        buffer[i] = 0;
 8001fe2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001fe6:	2100      	movs	r1, #0
 8001fe8:	480f      	ldr	r0, [pc, #60]	; (8002028 <MEAS_start_measure+0x48>)
 8001fea:	f02b fdee 	bl	802dbca <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 8001fee:	f7ff ff3d 	bl	8001e6c <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001ff2:	4a0e      	ldr	r2, [pc, #56]	; (800202c <MEAS_start_measure+0x4c>)
 8001ff4:	490e      	ldr	r1, [pc, #56]	; (8002030 <MEAS_start_measure+0x50>)
 8001ff6:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001ff8:	480e      	ldr	r0, [pc, #56]	; (8002034 <MEAS_start_measure+0x54>)
 8001ffa:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001ffe:	f043 0301 	orr.w	r3, r3, #1
 8002002:	6293      	str	r3, [r2, #40]	; 0x28
 8002004:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002008:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 800200a:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 800200c:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8002010:	f043 0301 	orr.w	r3, r3, #1
 8002014:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8002016:	680b      	ldr	r3, [r1, #0]
 8002018:	f043 0301 	orr.w	r3, r3, #1
 800201c:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 800201e:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8002020:	07db      	lsls	r3, r3, #31
 8002022:	d4fc      	bmi.n	800201e <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8002024:	4800      	ldr	r0, [pc, #0]	; (8002028 <MEAS_start_measure+0x48>)
 8002026:	bd10      	pop	{r4, pc}
 8002028:	200004ac 	.word	0x200004ac
 800202c:	40026400 	.word	0x40026400
 8002030:	e000e100 	.word	0xe000e100
 8002034:	40012200 	.word	0x40012200

08002038 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8002038:	2004      	movs	r0, #4
 800203a:	4770      	bx	lr

0800203c <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 800203c:	2040      	movs	r0, #64	; 0x40
 800203e:	4770      	bx	lr

08002040 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8002040:	f44f 7020 	mov.w	r0, #640	; 0x280
 8002044:	4770      	bx	lr
 8002046:	bf00      	nop

08002048 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002048:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800204a:	4b0e      	ldr	r3, [pc, #56]	; (8002084 <HAL_MspInit+0x3c>)
 800204c:	2200      	movs	r2, #0
 800204e:	9200      	str	r2, [sp, #0]
 8002050:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002052:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8002056:	6459      	str	r1, [r3, #68]	; 0x44
 8002058:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800205a:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 800205e:	9000      	str	r0, [sp, #0]
 8002060:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002062:	9201      	str	r2, [sp, #4]
 8002064:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8002066:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 800206a:	6418      	str	r0, [r3, #64]	; 0x40
 800206c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800206e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002072:	9301      	str	r3, [sp, #4]
 8002074:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002076:	210f      	movs	r1, #15
 8002078:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800207c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800207e:	f009 ba03 	b.w	800b488 <HAL_NVIC_SetPriority>
 8002082:	bf00      	nop
 8002084:	40023800 	.word	0x40023800

08002088 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002088:	4b0b      	ldr	r3, [pc, #44]	; (80020b8 <HAL_CRC_MspInit+0x30>)
 800208a:	6802      	ldr	r2, [r0, #0]
 800208c:	429a      	cmp	r2, r3
 800208e:	d000      	beq.n	8002092 <HAL_CRC_MspInit+0xa>
 8002090:	4770      	bx	lr
{
 8002092:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002094:	2200      	movs	r2, #0
 8002096:	9201      	str	r2, [sp, #4]
 8002098:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 800209c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80020a0:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 80020a4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80020a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020aa:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80020ae:	9301      	str	r3, [sp, #4]
 80020b0:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80020b2:	b002      	add	sp, #8
 80020b4:	4770      	bx	lr
 80020b6:	bf00      	nop
 80020b8:	40023000 	.word	0x40023000

080020bc <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80020bc:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 80020c0:	4b2e      	ldr	r3, [pc, #184]	; (800217c <HAL_I2C_MspInit+0xc0>)
 80020c2:	6802      	ldr	r2, [r0, #0]
{
 80020c4:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80020c6:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 80020c8:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80020ca:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80020ce:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80020d2:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 80020d4:	d002      	beq.n	80020dc <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80020d6:	b00a      	add	sp, #40	; 0x28
 80020d8:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80020dc:	4d28      	ldr	r5, [pc, #160]	; (8002180 <HAL_I2C_MspInit+0xc4>)
 80020de:	9401      	str	r4, [sp, #4]
 80020e0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80020e2:	4828      	ldr	r0, [pc, #160]	; (8002184 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80020e4:	f043 0304 	orr.w	r3, r3, #4
 80020e8:	632b      	str	r3, [r5, #48]	; 0x30
 80020ea:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80020ec:	f003 0304 	and.w	r3, r3, #4
 80020f0:	9301      	str	r3, [sp, #4]
 80020f2:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80020f4:	9402      	str	r4, [sp, #8]
 80020f6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80020f8:	f043 0301 	orr.w	r3, r3, #1
 80020fc:	632b      	str	r3, [r5, #48]	; 0x30
 80020fe:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002100:	f003 0301 	and.w	r3, r3, #1
 8002104:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8002106:	f44f 7200 	mov.w	r2, #512	; 0x200
 800210a:	f04f 0801 	mov.w	r8, #1
 800210e:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002112:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002114:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8002116:	2312      	movs	r3, #18
 8002118:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800211c:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002120:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002122:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002124:	f009 fc1e 	bl	800b964 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002128:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800212a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800212e:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002130:	4815      	ldr	r0, [pc, #84]	; (8002188 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002132:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002134:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002138:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800213c:	f009 fc12 	bl	800b964 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002140:	9403      	str	r4, [sp, #12]
 8002142:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8002144:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002148:	642b      	str	r3, [r5, #64]	; 0x40
 800214a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800214c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8002150:	4622      	mov	r2, r4
 8002152:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002154:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8002156:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002158:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800215a:	f009 f995 	bl	800b488 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 800215e:	2048      	movs	r0, #72	; 0x48
 8002160:	f009 f9d0 	bl	800b504 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8002164:	6a2b      	ldr	r3, [r5, #32]
 8002166:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800216a:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 800216c:	6a2b      	ldr	r3, [r5, #32]
 800216e:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002172:	622b      	str	r3, [r5, #32]
}
 8002174:	b00a      	add	sp, #40	; 0x28
 8002176:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 800217a:	bf00      	nop
 800217c:	40005c00 	.word	0x40005c00
 8002180:	40023800 	.word	0x40023800
 8002184:	40020800 	.word	0x40020800
 8002188:	40020000 	.word	0x40020000

0800218c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 800218c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002190:	4604      	mov	r4, r0
 8002192:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002194:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002196:	2230      	movs	r2, #48	; 0x30
 8002198:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800219a:	e9cd 1108 	strd	r1, r1, [sp, #32]
 800219e:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 80021a2:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80021a4:	f02b fd11 	bl	802dbca <memset>
  if(hltdc->Instance==LTDC)
 80021a8:	4b67      	ldr	r3, [pc, #412]	; (8002348 <HAL_LTDC_MspInit+0x1bc>)
 80021aa:	6822      	ldr	r2, [r4, #0]
 80021ac:	429a      	cmp	r2, r3
 80021ae:	d002      	beq.n	80021b6 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80021b0:	b01a      	add	sp, #104	; 0x68
 80021b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80021b6:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80021b8:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80021ba:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80021bc:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80021be:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80021c0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80021c4:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80021c6:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80021c8:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80021ca:	f00b fe35 	bl	800de38 <HAL_RCCEx_PeriphCLKConfig>
 80021ce:	2800      	cmp	r0, #0
 80021d0:	f040 80b7 	bne.w	8002342 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 80021d4:	4b5d      	ldr	r3, [pc, #372]	; (800234c <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80021d6:	485e      	ldr	r0, [pc, #376]	; (8002350 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80021d8:	2400      	movs	r4, #0
 80021da:	9401      	str	r4, [sp, #4]
 80021dc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80021de:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80021e2:	645a      	str	r2, [r3, #68]	; 0x44
 80021e4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80021e6:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 80021ea:	9201      	str	r2, [sp, #4]
 80021ec:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80021ee:	9402      	str	r4, [sp, #8]
 80021f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80021f2:	f042 0220 	orr.w	r2, r2, #32
 80021f6:	631a      	str	r2, [r3, #48]	; 0x30
 80021f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80021fa:	f002 0220 	and.w	r2, r2, #32
 80021fe:	9202      	str	r2, [sp, #8]
 8002200:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002202:	9403      	str	r4, [sp, #12]
 8002204:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002206:	f042 0201 	orr.w	r2, r2, #1
 800220a:	631a      	str	r2, [r3, #48]	; 0x30
 800220c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800220e:	f002 0201 	and.w	r2, r2, #1
 8002212:	9203      	str	r2, [sp, #12]
 8002214:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002216:	9404      	str	r4, [sp, #16]
 8002218:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800221a:	f042 0202 	orr.w	r2, r2, #2
 800221e:	631a      	str	r2, [r3, #48]	; 0x30
 8002220:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002222:	f002 0202 	and.w	r2, r2, #2
 8002226:	9204      	str	r2, [sp, #16]
 8002228:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800222a:	9405      	str	r4, [sp, #20]
 800222c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800222e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002232:	631a      	str	r2, [r3, #48]	; 0x30
 8002234:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002236:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800223a:	9205      	str	r2, [sp, #20]
 800223c:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800223e:	9406      	str	r4, [sp, #24]
 8002240:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002242:	f042 0204 	orr.w	r2, r2, #4
 8002246:	631a      	str	r2, [r3, #48]	; 0x30
 8002248:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800224a:	f002 0204 	and.w	r2, r2, #4
 800224e:	9206      	str	r2, [sp, #24]
 8002250:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002252:	9407      	str	r4, [sp, #28]
 8002254:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002256:	f042 0208 	orr.w	r2, r2, #8
 800225a:	631a      	str	r2, [r3, #48]	; 0x30
 800225c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800225e:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002262:	2600      	movs	r6, #0
 8002264:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002266:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002268:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800226a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800226c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002270:	2302      	movs	r3, #2
 8002272:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002276:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800227a:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800227c:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800227e:	f009 fb71 	bl	800b964 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002282:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002284:	f641 0258 	movw	r2, #6232	; 0x1858
 8002288:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800228a:	4832      	ldr	r0, [pc, #200]	; (8002354 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800228c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800228e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002292:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002296:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800229a:	f009 fb63 	bl	800b964 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800229e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80022a0:	2203      	movs	r2, #3
 80022a2:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022a4:	482c      	ldr	r0, [pc, #176]	; (8002358 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80022a6:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80022aa:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80022ae:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022b2:	f009 fb57 	bl	800b964 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022b6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80022b8:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 80022bc:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022be:	4826      	ldr	r0, [pc, #152]	; (8002358 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80022c0:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80022c2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80022c6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022ca:	f009 fb4b 	bl	800b964 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022ce:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80022d0:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 80022d4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022d6:	4821      	ldr	r0, [pc, #132]	; (800235c <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80022d8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80022da:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80022de:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80022e2:	f009 fb3f 	bl	800b964 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022e6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80022e8:	22c0      	movs	r2, #192	; 0xc0
 80022ea:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022ec:	481c      	ldr	r0, [pc, #112]	; (8002360 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80022ee:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80022f0:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80022f4:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022f8:	f009 fb34 	bl	800b964 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022fc:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80022fe:	2208      	movs	r2, #8
 8002300:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002302:	4818      	ldr	r0, [pc, #96]	; (8002364 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002304:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002306:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800230a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800230e:	f009 fb29 	bl	800b964 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002312:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002314:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002316:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800231a:	4810      	ldr	r0, [pc, #64]	; (800235c <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800231c:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002320:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002324:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002328:	f009 fb1c 	bl	800b964 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 800232c:	4622      	mov	r2, r4
 800232e:	2105      	movs	r1, #5
 8002330:	2058      	movs	r0, #88	; 0x58
 8002332:	f009 f8a9 	bl	800b488 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002336:	2058      	movs	r0, #88	; 0x58
 8002338:	f009 f8e4 	bl	800b504 <HAL_NVIC_EnableIRQ>
}
 800233c:	b01a      	add	sp, #104	; 0x68
 800233e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8002342:	f7ff fd39 	bl	8001db8 <Error_Handler>
 8002346:	e745      	b.n	80021d4 <HAL_LTDC_MspInit+0x48>
 8002348:	40016800 	.word	0x40016800
 800234c:	40023800 	.word	0x40023800
 8002350:	40021400 	.word	0x40021400
 8002354:	40020000 	.word	0x40020000
 8002358:	40020400 	.word	0x40020400
 800235c:	40021800 	.word	0x40021800
 8002360:	40020800 	.word	0x40020800
 8002364:	40020c00 	.word	0x40020c00

08002368 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002368:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 800236a:	4a1b      	ldr	r2, [pc, #108]	; (80023d8 <HAL_SPI_MspInit+0x70>)
 800236c:	6801      	ldr	r1, [r0, #0]
{
 800236e:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002370:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8002372:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002374:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002378:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800237c:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 800237e:	d001      	beq.n	8002384 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002380:	b008      	add	sp, #32
 8002382:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002384:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002388:	9300      	str	r3, [sp, #0]
 800238a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800238c:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002390:	6450      	str	r0, [r2, #68]	; 0x44
 8002392:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002394:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002398:	9000      	str	r0, [sp, #0]
 800239a:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800239c:	9301      	str	r3, [sp, #4]
 800239e:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023a0:	480e      	ldr	r0, [pc, #56]	; (80023dc <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80023a2:	f043 0320 	orr.w	r3, r3, #32
 80023a6:	6313      	str	r3, [r2, #48]	; 0x30
 80023a8:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80023aa:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80023d0 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80023ae:	f003 0320 	and.w	r3, r3, #32
 80023b2:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80023b4:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80023b6:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023b8:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80023ba:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80023be:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80023c2:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023c4:	f009 face 	bl	800b964 <HAL_GPIO_Init>
}
 80023c8:	b008      	add	sp, #32
 80023ca:	bd10      	pop	{r4, pc}
 80023cc:	f3af 8000 	nop.w
 80023d0:	00000380 	.word	0x00000380
 80023d4:	00000002 	.word	0x00000002
 80023d8:	40015000 	.word	0x40015000
 80023dc:	40021400 	.word	0x40021400

080023e0 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM2)
 80023e0:	6803      	ldr	r3, [r0, #0]
 80023e2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 80023e6:	b084      	sub	sp, #16
  if(htim_base->Instance==TIM2)
 80023e8:	d018      	beq.n	800241c <HAL_TIM_Base_MspInit+0x3c>
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 80023ea:	4a22      	ldr	r2, [pc, #136]	; (8002474 <HAL_TIM_Base_MspInit+0x94>)
 80023ec:	4293      	cmp	r3, r2
 80023ee:	d007      	beq.n	8002400 <HAL_TIM_Base_MspInit+0x20>
    __HAL_RCC_TIM3_CLK_ENABLE();
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
  else if(htim_base->Instance==TIM9)
 80023f0:	4a21      	ldr	r2, [pc, #132]	; (8002478 <HAL_TIM_Base_MspInit+0x98>)
 80023f2:	4293      	cmp	r3, r2
 80023f4:	d021      	beq.n	800243a <HAL_TIM_Base_MspInit+0x5a>
    __HAL_RCC_TIM9_CLK_ENABLE();
  /* USER CODE BEGIN TIM9_MspInit 1 */

  /* USER CODE END TIM9_MspInit 1 */
  }
  else if(htim_base->Instance==TIM14)
 80023f6:	4a21      	ldr	r2, [pc, #132]	; (800247c <HAL_TIM_Base_MspInit+0x9c>)
 80023f8:	4293      	cmp	r3, r2
 80023fa:	d02c      	beq.n	8002456 <HAL_TIM_Base_MspInit+0x76>
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 80023fc:	b004      	add	sp, #16
 80023fe:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002400:	4b1f      	ldr	r3, [pc, #124]	; (8002480 <HAL_TIM_Base_MspInit+0xa0>)
 8002402:	2200      	movs	r2, #0
 8002404:	9201      	str	r2, [sp, #4]
 8002406:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002408:	f042 0202 	orr.w	r2, r2, #2
 800240c:	641a      	str	r2, [r3, #64]	; 0x40
 800240e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002410:	f003 0302 	and.w	r3, r3, #2
 8002414:	9301      	str	r3, [sp, #4]
 8002416:	9b01      	ldr	r3, [sp, #4]
}
 8002418:	b004      	add	sp, #16
 800241a:	4770      	bx	lr
    __HAL_RCC_TIM2_CLK_ENABLE();
 800241c:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8002420:	2200      	movs	r2, #0
 8002422:	9200      	str	r2, [sp, #0]
 8002424:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002426:	f042 0201 	orr.w	r2, r2, #1
 800242a:	641a      	str	r2, [r3, #64]	; 0x40
 800242c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800242e:	f003 0301 	and.w	r3, r3, #1
 8002432:	9300      	str	r3, [sp, #0]
 8002434:	9b00      	ldr	r3, [sp, #0]
}
 8002436:	b004      	add	sp, #16
 8002438:	4770      	bx	lr
    __HAL_RCC_TIM9_CLK_ENABLE();
 800243a:	4b11      	ldr	r3, [pc, #68]	; (8002480 <HAL_TIM_Base_MspInit+0xa0>)
 800243c:	2200      	movs	r2, #0
 800243e:	9202      	str	r2, [sp, #8]
 8002440:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002442:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8002446:	645a      	str	r2, [r3, #68]	; 0x44
 8002448:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800244a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800244e:	9302      	str	r3, [sp, #8]
 8002450:	9b02      	ldr	r3, [sp, #8]
}
 8002452:	b004      	add	sp, #16
 8002454:	4770      	bx	lr
    __HAL_RCC_TIM14_CLK_ENABLE();
 8002456:	4b0a      	ldr	r3, [pc, #40]	; (8002480 <HAL_TIM_Base_MspInit+0xa0>)
 8002458:	2200      	movs	r2, #0
 800245a:	9203      	str	r2, [sp, #12]
 800245c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800245e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002462:	641a      	str	r2, [r3, #64]	; 0x40
 8002464:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002466:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800246a:	9303      	str	r3, [sp, #12]
 800246c:	9b03      	ldr	r3, [sp, #12]
}
 800246e:	b004      	add	sp, #16
 8002470:	4770      	bx	lr
 8002472:	bf00      	nop
 8002474:	40000400 	.word	0x40000400
 8002478:	40014000 	.word	0x40014000
 800247c:	40002000 	.word	0x40002000
 8002480:	40023800 	.word	0x40023800
 8002484:	00000000 	.word	0x00000000

08002488 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002488:	b500      	push	{lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(htim->Instance==TIM9)
 800248a:	6802      	ldr	r2, [r0, #0]
 800248c:	4924      	ldr	r1, [pc, #144]	; (8002520 <HAL_TIM_MspPostInit+0x98>)
{
 800248e:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002490:	2300      	movs	r3, #0
  if(htim->Instance==TIM9)
 8002492:	428a      	cmp	r2, r1
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002494:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002498:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800249c:	9306      	str	r3, [sp, #24]
  if(htim->Instance==TIM9)
 800249e:	d005      	beq.n	80024ac <HAL_TIM_MspPostInit+0x24>

  /* USER CODE BEGIN TIM9_MspPostInit 1 */

  /* USER CODE END TIM9_MspPostInit 1 */
  }
  else if(htim->Instance==TIM14)
 80024a0:	4920      	ldr	r1, [pc, #128]	; (8002524 <HAL_TIM_MspPostInit+0x9c>)
 80024a2:	428a      	cmp	r2, r1
 80024a4:	d01a      	beq.n	80024dc <HAL_TIM_MspPostInit+0x54>
  /* USER CODE BEGIN TIM14_MspPostInit 1 */

  /* USER CODE END TIM14_MspPostInit 1 */
  }

}
 80024a6:	b009      	add	sp, #36	; 0x24
 80024a8:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024ac:	4a1e      	ldr	r2, [pc, #120]	; (8002528 <HAL_TIM_MspPostInit+0xa0>)
 80024ae:	9300      	str	r3, [sp, #0]
 80024b0:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024b2:	481e      	ldr	r0, [pc, #120]	; (800252c <HAL_TIM_MspPostInit+0xa4>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024b4:	f043 0301 	orr.w	r3, r3, #1
 80024b8:	6313      	str	r3, [r2, #48]	; 0x30
 80024ba:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80024bc:	ed9f 7b14 	vldr	d7, [pc, #80]	; 8002510 <HAL_TIM_MspPostInit+0x88>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024c0:	f003 0301 	and.w	r3, r3, #1
 80024c4:	9300      	str	r3, [sp, #0]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024c6:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 80024c8:	2303      	movs	r3, #3
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80024ca:	ed8d 7b02 	vstr	d7, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024ce:	9a00      	ldr	r2, [sp, #0]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 80024d0:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024d2:	f009 fa47 	bl	800b964 <HAL_GPIO_Init>
}
 80024d6:	b009      	add	sp, #36	; 0x24
 80024d8:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024dc:	4a12      	ldr	r2, [pc, #72]	; (8002528 <HAL_TIM_MspPostInit+0xa0>)
 80024de:	9301      	str	r3, [sp, #4]
 80024e0:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80024e2:	f043 0301 	orr.w	r3, r3, #1
 80024e6:	6313      	str	r3, [r2, #48]	; 0x30
 80024e8:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 80024ea:	ed9f 7b0b 	vldr	d7, [pc, #44]	; 8002518 <HAL_TIM_MspPostInit+0x90>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80024ee:	f003 0301 	and.w	r3, r3, #1
 80024f2:	9301      	str	r3, [sp, #4]
 80024f4:	9801      	ldr	r0, [sp, #4]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 80024f6:	480d      	ldr	r0, [pc, #52]	; (800252c <HAL_TIM_MspPostInit+0xa4>)
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80024f8:	2202      	movs	r2, #2
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 80024fa:	2309      	movs	r3, #9
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 80024fc:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 80024fe:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002502:	9205      	str	r2, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 8002504:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 8002506:	f009 fa2d 	bl	800b964 <HAL_GPIO_Init>
}
 800250a:	b009      	add	sp, #36	; 0x24
 800250c:	f85d fb04 	ldr.w	pc, [sp], #4
 8002510:	00000004 	.word	0x00000004
 8002514:	00000002 	.word	0x00000002
 8002518:	00000080 	.word	0x00000080
 800251c:	00000002 	.word	0x00000002
 8002520:	40014000 	.word	0x40014000
 8002524:	40002000 	.word	0x40002000
 8002528:	40023800 	.word	0x40023800
 800252c:	40020000 	.word	0x40020000

08002530 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002530:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8002532:	4b2b      	ldr	r3, [pc, #172]	; (80025e0 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002534:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8002536:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002538:	2200      	movs	r2, #0
 800253a:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 800253c:	2c00      	cmp	r4, #0
 800253e:	d14c      	bne.n	80025da <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8002540:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8002542:	4a28      	ldr	r2, [pc, #160]	; (80025e4 <HAL_SDRAM_MspInit+0xb4>)
 8002544:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8002546:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002548:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800254a:	4827      	ldr	r0, [pc, #156]	; (80025e8 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 800254c:	433b      	orrs	r3, r7
 800254e:	6393      	str	r3, [r2, #56]	; 0x38
 8002550:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002552:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002554:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002556:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002558:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 800255c:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800255e:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002560:	2302      	movs	r3, #2
 8002562:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002566:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 800256a:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800256c:	f009 f9fa 	bl	800b964 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002570:	481e      	ldr	r0, [pc, #120]	; (80025ec <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002572:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002574:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002576:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002578:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800257c:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002580:	f009 f9f0 	bl	800b964 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002584:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002588:	4819      	ldr	r0, [pc, #100]	; (80025f0 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800258a:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800258c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800258e:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002592:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002596:	f009 f9e5 	bl	800b964 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800259a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800259e:	4815      	ldr	r0, [pc, #84]	; (80025f4 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80025a0:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80025a2:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80025a4:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025a8:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80025ac:	f009 f9da 	bl	800b964 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80025b0:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025b4:	4810      	ldr	r0, [pc, #64]	; (80025f8 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80025b6:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025b8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80025ba:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025be:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80025c2:	f009 f9cf 	bl	800b964 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80025c6:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025c8:	480c      	ldr	r0, [pc, #48]	; (80025fc <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80025ca:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025cc:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80025ce:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80025d2:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80025d4:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80025d6:	f009 f9c5 	bl	800b964 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80025da:	b009      	add	sp, #36	; 0x24
 80025dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80025de:	bf00      	nop
 80025e0:	200008ac 	.word	0x200008ac
 80025e4:	40023800 	.word	0x40023800
 80025e8:	40021400 	.word	0x40021400
 80025ec:	40020800 	.word	0x40020800
 80025f0:	40021800 	.word	0x40021800
 80025f4:	40021000 	.word	0x40021000
 80025f8:	40020c00 	.word	0x40020c00
 80025fc:	40020400 	.word	0x40020400

08002600 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002600:	b570      	push	{r4, r5, r6, lr}
 8002602:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002604:	4b23      	ldr	r3, [pc, #140]	; (8002694 <HAL_InitTick+0x94>)
 8002606:	2200      	movs	r2, #0
 8002608:	9202      	str	r2, [sp, #8]
 800260a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800260c:	f042 0210 	orr.w	r2, r2, #16
 8002610:	641a      	str	r2, [r3, #64]	; 0x40
 8002612:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002614:	f003 0310 	and.w	r3, r3, #16
 8002618:	9302      	str	r3, [sp, #8]
{
 800261a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800261c:	a901      	add	r1, sp, #4
 800261e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002620:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002622:	f00b fbe7 	bl	800ddf4 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002626:	9b06      	ldr	r3, [sp, #24]
 8002628:	b9d3      	cbnz	r3, 8002660 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800262a:	f00b fbd3 	bl	800ddd4 <HAL_RCC_GetPCLK1Freq>
 800262e:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002630:	4a19      	ldr	r2, [pc, #100]	; (8002698 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002632:	4c1a      	ldr	r4, [pc, #104]	; (800269c <HAL_InitTick+0x9c>)
 8002634:	491a      	ldr	r1, [pc, #104]	; (80026a0 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002636:	fba2 2303 	umull	r2, r3, r2, r3
 800263a:	0c9b      	lsrs	r3, r3, #18
 800263c:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 800263e:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8002640:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002644:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002646:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 800264a:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800264c:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800264e:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002650:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8002652:	f00c f9ff 	bl	800ea54 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002656:	4606      	mov	r6, r0
 8002658:	b130      	cbz	r0, 8002668 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 800265a:	4630      	mov	r0, r6
 800265c:	b008      	add	sp, #32
 800265e:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002660:	f00b fbb8 	bl	800ddd4 <HAL_RCC_GetPCLK1Freq>
 8002664:	0043      	lsls	r3, r0, #1
 8002666:	e7e3      	b.n	8002630 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002668:	4620      	mov	r0, r4
 800266a:	f00c fa81 	bl	800eb70 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 800266e:	4606      	mov	r6, r0
 8002670:	2800      	cmp	r0, #0
 8002672:	d1f2      	bne.n	800265a <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002674:	2036      	movs	r0, #54	; 0x36
 8002676:	f008 ff45 	bl	800b504 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800267a:	2d0f      	cmp	r5, #15
 800267c:	d901      	bls.n	8002682 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 800267e:	2601      	movs	r6, #1
 8002680:	e7eb      	b.n	800265a <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002682:	4632      	mov	r2, r6
 8002684:	4629      	mov	r1, r5
 8002686:	2036      	movs	r0, #54	; 0x36
 8002688:	f008 fefe 	bl	800b488 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 800268c:	4b05      	ldr	r3, [pc, #20]	; (80026a4 <HAL_InitTick+0xa4>)
 800268e:	601d      	str	r5, [r3, #0]
 8002690:	e7e3      	b.n	800265a <HAL_InitTick+0x5a>
 8002692:	bf00      	nop
 8002694:	40023800 	.word	0x40023800
 8002698:	431bde83 	.word	0x431bde83
 800269c:	200008b0 	.word	0x200008b0
 80026a0:	40001000 	.word	0x40001000
 80026a4:	20000084 	.word	0x20000084

080026a8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80026a8:	4770      	bx	lr
 80026aa:	bf00      	nop

080026ac <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80026ac:	e7fe      	b.n	80026ac <HardFault_Handler>
 80026ae:	bf00      	nop

080026b0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80026b0:	e7fe      	b.n	80026b0 <MemManage_Handler>
 80026b2:	bf00      	nop

080026b4 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80026b4:	e7fe      	b.n	80026b4 <BusFault_Handler>
 80026b6:	bf00      	nop

080026b8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80026b8:	e7fe      	b.n	80026b8 <UsageFault_Handler>
 80026ba:	bf00      	nop

080026bc <DebugMon_Handler>:
 80026bc:	4770      	bx	lr
 80026be:	bf00      	nop

080026c0 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 80026c0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 80026c2:	20c8      	movs	r0, #200	; 0xc8
 80026c4:	f008 febc 	bl	800b440 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80026c8:	4804      	ldr	r0, [pc, #16]	; (80026dc <EXTI3_IRQHandler+0x1c>)
 80026ca:	2200      	movs	r2, #0
 80026cc:	2120      	movs	r1, #32
 80026ce:	f009 fa8d 	bl	800bbec <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 80026d2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 80026d6:	2008      	movs	r0, #8
 80026d8:	f009 ba98 	b.w	800bc0c <HAL_GPIO_EXTI_IRQHandler>
 80026dc:	40021000 	.word	0x40021000

080026e0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80026e0:	4801      	ldr	r0, [pc, #4]	; (80026e8 <TIM6_DAC_IRQHandler+0x8>)
 80026e2:	f00c be25 	b.w	800f330 <HAL_TIM_IRQHandler>
 80026e6:	bf00      	nop
 80026e8:	200008b0 	.word	0x200008b0

080026ec <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 80026ec:	4801      	ldr	r0, [pc, #4]	; (80026f4 <I2C3_EV_IRQHandler+0x8>)
 80026ee:	f00a b9ed 	b.w	800cacc <HAL_I2C_EV_IRQHandler>
 80026f2:	bf00      	nop
 80026f4:	20000204 	.word	0x20000204

080026f8 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80026f8:	4801      	ldr	r0, [pc, #4]	; (8002700 <LTDC_IRQHandler+0x8>)
 80026fa:	f00a bf61 	b.w	800d5c0 <HAL_LTDC_IRQHandler>
 80026fe:	bf00      	nop
 8002700:	20000258 	.word	0x20000258

08002704 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002704:	2001      	movs	r0, #1
 8002706:	4770      	bx	lr

08002708 <_kill>:

int _kill(int pid, int sig)
{
 8002708:	b508      	push	{r3, lr}
	errno = EINVAL;
 800270a:	f02b fb57 	bl	802ddbc <__errno>
 800270e:	2316      	movs	r3, #22
 8002710:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002712:	f04f 30ff 	mov.w	r0, #4294967295
 8002716:	bd08      	pop	{r3, pc}

08002718 <_exit>:

void _exit (int status)
{
 8002718:	b508      	push	{r3, lr}
	errno = EINVAL;
 800271a:	f02b fb4f 	bl	802ddbc <__errno>
 800271e:	2316      	movs	r3, #22
 8002720:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002722:	e7fe      	b.n	8002722 <_exit+0xa>

08002724 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002724:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002726:	1e16      	subs	r6, r2, #0
 8002728:	dd07      	ble.n	800273a <_read+0x16>
 800272a:	460c      	mov	r4, r1
 800272c:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 800272e:	f3af 8000 	nop.w
 8002732:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002736:	42a5      	cmp	r5, r4
 8002738:	d1f9      	bne.n	800272e <_read+0xa>
	}

return len;
}
 800273a:	4630      	mov	r0, r6
 800273c:	bd70      	pop	{r4, r5, r6, pc}
 800273e:	bf00      	nop

08002740 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002740:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002742:	1e16      	subs	r6, r2, #0
 8002744:	dd07      	ble.n	8002756 <_write+0x16>
 8002746:	460c      	mov	r4, r1
 8002748:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 800274a:	f814 0b01 	ldrb.w	r0, [r4], #1
 800274e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002752:	42ac      	cmp	r4, r5
 8002754:	d1f9      	bne.n	800274a <_write+0xa>
	}
	return len;
}
 8002756:	4630      	mov	r0, r6
 8002758:	bd70      	pop	{r4, r5, r6, pc}
 800275a:	bf00      	nop

0800275c <_close>:

int _close(int file)
{
	return -1;
}
 800275c:	f04f 30ff 	mov.w	r0, #4294967295
 8002760:	4770      	bx	lr
 8002762:	bf00      	nop

08002764 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002764:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002768:	604b      	str	r3, [r1, #4]
	return 0;
}
 800276a:	2000      	movs	r0, #0
 800276c:	4770      	bx	lr
 800276e:	bf00      	nop

08002770 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002770:	2001      	movs	r0, #1
 8002772:	4770      	bx	lr

08002774 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002774:	2000      	movs	r0, #0
 8002776:	4770      	bx	lr

08002778 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002778:	4a0b      	ldr	r2, [pc, #44]	; (80027a8 <_sbrk+0x30>)
{
 800277a:	b508      	push	{r3, lr}
 800277c:	4603      	mov	r3, r0
	if (heap_end == 0)
 800277e:	6810      	ldr	r0, [r2, #0]
 8002780:	b128      	cbz	r0, 800278e <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8002782:	4403      	add	r3, r0
 8002784:	4669      	mov	r1, sp
 8002786:	428b      	cmp	r3, r1
 8002788:	d807      	bhi.n	800279a <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 800278a:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 800278c:	bd08      	pop	{r3, pc}
		heap_end = &end;
 800278e:	4807      	ldr	r0, [pc, #28]	; (80027ac <_sbrk+0x34>)
 8002790:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002792:	4403      	add	r3, r0
 8002794:	4669      	mov	r1, sp
 8002796:	428b      	cmp	r3, r1
 8002798:	d9f7      	bls.n	800278a <_sbrk+0x12>
		errno = ENOMEM;
 800279a:	f02b fb0f 	bl	802ddbc <__errno>
 800279e:	230c      	movs	r3, #12
 80027a0:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80027a2:	f04f 30ff 	mov.w	r0, #4294967295
}
 80027a6:	bd08      	pop	{r3, pc}
 80027a8:	200008f8 	.word	0x200008f8
 80027ac:	20014490 	.word	0x20014490

080027b0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80027b0:	4770      	bx	lr
 80027b2:	bf00      	nop

080027b4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80027b4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80027b6:	f000 fbab 	bl	8002f10 <touchgfx_components_init>
  touchgfx_init();
}
 80027ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80027be:	f000 bb33 	b.w	8002e28 <touchgfx_init>
 80027c2:	bf00      	nop

080027c4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80027c4:	f000 bba6 	b.w	8002f14 <touchgfx_taskEntry>

080027c8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80027c8:	4770      	bx	lr

080027ca <_ZN20STM32TouchControllerD0Ev>:
 80027ca:	b510      	push	{r4, lr}
 80027cc:	2104      	movs	r1, #4
 80027ce:	4604      	mov	r4, r0
 80027d0:	f02a f90f 	bl	802c9f2 <_ZdlPvj>
 80027d4:	4620      	mov	r0, r4
 80027d6:	bd10      	pop	{r4, pc}

080027d8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80027d8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80027da:	4b0c      	ldr	r3, [pc, #48]	; (800280c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80027dc:	4c0c      	ldr	r4, [pc, #48]	; (8002810 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80027de:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80027e0:	4b0c      	ldr	r3, [pc, #48]	; (8002814 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80027e2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 80027e4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80027e6:	6863      	ldr	r3, [r4, #4]
 80027e8:	4798      	blx	r3
 80027ea:	f640 0311 	movw	r3, #2065	; 0x811
 80027ee:	4298      	cmp	r0, r3
 80027f0:	d10a      	bne.n	8002808 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80027f2:	4d09      	ldr	r5, [pc, #36]	; (8002818 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80027f4:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80027f6:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80027f8:	2082      	movs	r0, #130	; 0x82
 80027fa:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80027fc:	682b      	ldr	r3, [r5, #0]
 80027fe:	2082      	movs	r0, #130	; 0x82
 8002800:	68db      	ldr	r3, [r3, #12]
 8002802:	4798      	blx	r3
 8002804:	2000      	movs	r0, #0
    }

    return ret;
}
 8002806:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8002808:	2001      	movs	r0, #1
 800280a:	e7fc      	b.n	8002806 <_Z11BSP_TS_Inittt+0x2e>
 800280c:	200008fc 	.word	0x200008fc
 8002810:	20000054 	.word	0x20000054
 8002814:	200008fe 	.word	0x200008fe
 8002818:	20000900 	.word	0x20000900

0800281c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800281c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8002820:	20f0      	movs	r0, #240	; 0xf0
 8002822:	f7ff bfd9 	b.w	80027d8 <_Z11BSP_TS_Inittt>
	...

08002828 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8002828:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800282a:	4d33      	ldr	r5, [pc, #204]	; (80028f8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800282c:	682b      	ldr	r3, [r5, #0]
{
 800282e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8002830:	691b      	ldr	r3, [r3, #16]
 8002832:	2082      	movs	r0, #130	; 0x82
 8002834:	4798      	blx	r3
 8002836:	b280      	uxth	r0, r0
 8002838:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800283a:	2800      	cmp	r0, #0
 800283c:	d04a      	beq.n	80028d4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800283e:	682b      	ldr	r3, [r5, #0]
 8002840:	f10d 0206 	add.w	r2, sp, #6
 8002844:	695b      	ldr	r3, [r3, #20]
 8002846:	a901      	add	r1, sp, #4
 8002848:	2082      	movs	r0, #130	; 0x82
 800284a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800284c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8002850:	f640 6274 	movw	r2, #3700	; 0xe74
 8002854:	4293      	cmp	r3, r2
 8002856:	d93f      	bls.n	80028d8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8002858:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800285c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8002860:	1ad2      	subs	r2, r2, r3
 8002862:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8002864:	2a0a      	cmp	r2, #10
 8002866:	d93d      	bls.n	80028e4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8002868:	230b      	movs	r3, #11
 800286a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800286e:	4b23      	ldr	r3, [pc, #140]	; (80028fc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8002870:	881b      	ldrh	r3, [r3, #0]
 8002872:	429a      	cmp	r2, r3
 8002874:	d901      	bls.n	800287a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8002876:	3b01      	subs	r3, #1
 8002878:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800287a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800287e:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8002882:	428b      	cmp	r3, r1
 8002884:	d830      	bhi.n	80028e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8002886:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 800288a:	330e      	adds	r3, #14
 800288c:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 800288e:	210f      	movs	r1, #15
 8002890:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8002894:	491a      	ldr	r1, [pc, #104]	; (8002900 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8002896:	8809      	ldrh	r1, [r1, #0]
 8002898:	428b      	cmp	r3, r1
 800289a:	d901      	bls.n	80028a0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 800289c:	3901      	subs	r1, #1
 800289e:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80028a0:	4e18      	ldr	r6, [pc, #96]	; (8002904 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80028a2:	4d19      	ldr	r5, [pc, #100]	; (8002908 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80028a4:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80028a6:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80028a8:	4283      	cmp	r3, r0
 80028aa:	b281      	uxth	r1, r0
 80028ac:	bf8c      	ite	hi
 80028ae:	1a59      	subhi	r1, r3, r1
 80028b0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80028b2:	b2b8      	uxth	r0, r7
 80028b4:	42ba      	cmp	r2, r7
 80028b6:	bf8c      	ite	hi
 80028b8:	1a10      	subhi	r0, r2, r0
 80028ba:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80028bc:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80028be:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80028c0:	4401      	add	r1, r0
 80028c2:	2905      	cmp	r1, #5
        {
            _x = x;
 80028c4:	bfc8      	it	gt
 80028c6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80028c8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80028ca:	bfc8      	it	gt
 80028cc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80028ce:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80028d0:	682b      	ldr	r3, [r5, #0]
 80028d2:	80a3      	strh	r3, [r4, #4]
    }
}
 80028d4:	b003      	add	sp, #12
 80028d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 80028d8:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 80028da:	bf9c      	itt	ls
 80028dc:	23b4      	movls	r3, #180	; 0xb4
 80028de:	f8ad 3006 	strhls.w	r3, [sp, #6]
 80028e2:	e7bb      	b.n	800285c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 80028e4:	2200      	movs	r2, #0
 80028e6:	e7c8      	b.n	800287a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 80028e8:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80028ec:	3308      	adds	r3, #8
 80028ee:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80028f0:	2b0e      	cmp	r3, #14
 80028f2:	d8cc      	bhi.n	800288e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 80028f4:	2300      	movs	r3, #0
 80028f6:	e7d3      	b.n	80028a0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 80028f8:	20000900 	.word	0x20000900
 80028fc:	200008fe 	.word	0x200008fe
 8002900:	200008fc 	.word	0x200008fc
 8002904:	20000904 	.word	0x20000904
 8002908:	20000908 	.word	0x20000908

0800290c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800290c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800290e:	4668      	mov	r0, sp
{
 8002910:	460d      	mov	r5, r1
 8002912:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8002914:	f7ff ff88 	bl	8002828 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8002918:	f8bd 0000 	ldrh.w	r0, [sp]
 800291c:	b148      	cbz	r0, 8002932 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800291e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8002922:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8002924:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8002928:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800292a:	4b03      	ldr	r3, [pc, #12]	; (8002938 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800292c:	223c      	movs	r2, #60	; 0x3c
 800292e:	601a      	str	r2, [r3, #0]
        return true;
 8002930:	2001      	movs	r0, #1
}
 8002932:	b003      	add	sp, #12
 8002934:	bd30      	pop	{r4, r5, pc}
 8002936:	bf00      	nop
 8002938:	20000010 	.word	0x20000010

0800293c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800293c:	b110      	cbz	r0, 8002944 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800293e:	2802      	cmp	r0, #2
 8002940:	d009      	beq.n	8002956 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8002942:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8002944:	4b07      	ldr	r3, [pc, #28]	; (8002964 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002946:	681a      	ldr	r2, [r3, #0]
 8002948:	fab2 f282 	clz	r2, r2
 800294c:	0952      	lsrs	r2, r2, #5
 800294e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8002950:	4805      	ldr	r0, [pc, #20]	; (8002968 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8002952:	f009 b94b 	b.w	800bbec <HAL_GPIO_WritePin>
 8002956:	4b03      	ldr	r3, [pc, #12]	; (8002964 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002958:	689a      	ldr	r2, [r3, #8]
 800295a:	fab2 f282 	clz	r2, r2
 800295e:	0952      	lsrs	r2, r2, #5
 8002960:	2110      	movs	r1, #16
 8002962:	e7f5      	b.n	8002950 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8002964:	2000090c 	.word	0x2000090c
 8002968:	40021000 	.word	0x40021000

0800296c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800296c:	b110      	cbz	r0, 8002974 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800296e:	2802      	cmp	r0, #2
 8002970:	d009      	beq.n	8002986 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8002972:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8002974:	4b07      	ldr	r3, [pc, #28]	; (8002994 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002976:	681a      	ldr	r2, [r3, #0]
 8002978:	3a00      	subs	r2, #0
 800297a:	bf18      	it	ne
 800297c:	2201      	movne	r2, #1
 800297e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8002980:	4805      	ldr	r0, [pc, #20]	; (8002998 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8002982:	f009 b933 	b.w	800bbec <HAL_GPIO_WritePin>
 8002986:	4b03      	ldr	r3, [pc, #12]	; (8002994 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002988:	689a      	ldr	r2, [r3, #8]
 800298a:	3a00      	subs	r2, #0
 800298c:	bf18      	it	ne
 800298e:	2201      	movne	r2, #1
 8002990:	2110      	movs	r1, #16
 8002992:	e7f5      	b.n	8002980 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8002994:	2000090c 	.word	0x2000090c
 8002998:	40021000 	.word	0x40021000

0800299c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 800299c:	b110      	cbz	r0, 80029a4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 800299e:	2802      	cmp	r0, #2
 80029a0:	d004      	beq.n	80029ac <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80029a2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80029a4:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80029a6:	4802      	ldr	r0, [pc, #8]	; (80029b0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 80029a8:	f009 b924 	b.w	800bbf4 <HAL_GPIO_TogglePin>
 80029ac:	2110      	movs	r1, #16
 80029ae:	e7fa      	b.n	80029a6 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80029b0:	40021000 	.word	0x40021000

080029b4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80029b4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80029b6:	b130      	cbz	r0, 80029c6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80029b8:	2802      	cmp	r0, #2
 80029ba:	d009      	beq.n	80029d0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80029bc:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80029be:	1e43      	subs	r3, r0, #1
 80029c0:	4258      	negs	r0, r3
 80029c2:	4158      	adcs	r0, r3
 80029c4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80029c6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80029c8:	4802      	ldr	r0, [pc, #8]	; (80029d4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80029ca:	f009 f909 	bl	800bbe0 <HAL_GPIO_ReadPin>
        break;
 80029ce:	e7f6      	b.n	80029be <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80029d0:	2110      	movs	r1, #16
 80029d2:	e7f9      	b.n	80029c8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 80029d4:	40021000 	.word	0x40021000

080029d8 <_ZN8touchgfx4GPIO4initEv>:
{
 80029d8:	b570      	push	{r4, r5, r6, lr}
 80029da:	4d08      	ldr	r5, [pc, #32]	; (80029fc <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80029dc:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80029de:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80029e0:	b2e0      	uxtb	r0, r4
 80029e2:	f7ff ffe7 	bl	80029b4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80029e6:	b118      	cbz	r0, 80029f0 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80029e8:	682b      	ldr	r3, [r5, #0]
 80029ea:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80029ec:	bf18      	it	ne
 80029ee:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80029f0:	3401      	adds	r4, #1
 80029f2:	2c05      	cmp	r4, #5
 80029f4:	f105 0504 	add.w	r5, r5, #4
 80029f8:	d1f2      	bne.n	80029e0 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80029fa:	bd70      	pop	{r4, r5, r6, pc}
 80029fc:	2000090c 	.word	0x2000090c

08002a00 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8002a00:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8002a02:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8002a06:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8002a0a:	4770      	bx	lr

08002a0c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8002a0c:	2000      	movs	r0, #0
 8002a0e:	4770      	bx	lr

08002a10 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002a10:	4b03      	ldr	r3, [pc, #12]	; (8002a20 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8002a12:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002a14:	3900      	subs	r1, #0
 8002a16:	bf18      	it	ne
 8002a18:	2101      	movne	r1, #1
 8002a1a:	7019      	strb	r1, [r3, #0]
    }
 8002a1c:	4770      	bx	lr
 8002a1e:	bf00      	nop
 8002a20:	20013853 	.word	0x20013853

08002a24 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8002a24:	2000      	movs	r0, #0
 8002a26:	4770      	bx	lr

08002a28 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8002a28:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8002a2a:	b10b      	cbz	r3, 8002a30 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8002a2c:	4608      	mov	r0, r1
 8002a2e:	4718      	bx	r3
        }
    }
 8002a30:	4770      	bx	lr

08002a32 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8002a32:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002a36:	4770      	bx	lr

08002a38 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8002a38:	6840      	ldr	r0, [r0, #4]
 8002a3a:	6803      	ldr	r3, [r0, #0]
 8002a3c:	699b      	ldr	r3, [r3, #24]
 8002a3e:	4718      	bx	r3

08002a40 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8002a40:	4770      	bx	lr

08002a42 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8002a42:	4770      	bx	lr

08002a44 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8002a44:	4770      	bx	lr
	...

08002a48 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8002a48:	b510      	push	{r4, lr}
 8002a4a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8002a4c:	f000 fb4e 	bl	80030ec <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8002a50:	6823      	ldr	r3, [r4, #0]
 8002a52:	4903      	ldr	r1, [pc, #12]	; (8002a60 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8002a54:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002a58:	4620      	mov	r0, r4
}
 8002a5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8002a5e:	4718      	bx	r3
 8002a60:	d0000000 	.word	0xd0000000

08002a64 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8002a64:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8002a66:	6803      	ldr	r3, [r0, #0]
{
 8002a68:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8002a6a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8002a6e:	4798      	blx	r3
    enableInterrupts();
 8002a70:	6823      	ldr	r3, [r4, #0]
 8002a72:	4620      	mov	r0, r4
 8002a74:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002a76:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8002a78:	f000 f8ec 	bl	8002c54 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8002a7c:	6823      	ldr	r3, [r4, #0]
 8002a7e:	4620      	mov	r0, r4
 8002a80:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002a82:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8002a84:	2029      	movs	r0, #41	; 0x29
 8002a86:	f7ff f923 	bl	8001cd0 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8002a8a:	f000 f8e3 	bl	8002c54 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8002a8e:	6823      	ldr	r3, [r4, #0]
 8002a90:	4620      	mov	r0, r4
 8002a92:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002a94:	4798      	blx	r3
    for (;;)
 8002a96:	e7f8      	b.n	8002a8a <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08002a98 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8002a98:	b510      	push	{r4, lr}
 8002a9a:	4604      	mov	r4, r0
        swapFrameBuffers();
 8002a9c:	f011 fa86 	bl	8013fac <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8002aa0:	6823      	ldr	r3, [r4, #0]
 8002aa2:	4620      	mov	r0, r4
 8002aa4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8002aa8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8002aac:	4718      	bx	r3

08002aae <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8002aae:	f000 bb0f 	b.w	80030d0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08002ab2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8002ab2:	f000 bb13 	b.w	80030dc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08002ab6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8002ab6:	f000 bb37 	b.w	8003128 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08002aba <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8002aba:	f000 badf 	b.w	800307c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08002abe <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8002abe:	f000 bae5 	b.w	800308c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08002ac2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8002ac2:	f000 bb3d 	b.w	8003140 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08002ac6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8002ac6:	f000 bae9 	b.w	800309c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08002aca <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8002aca:	f010 bcda 	b.w	8013482 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08002ace <_ZN11TouchGFXHALD0Ev>:
 8002ace:	b510      	push	{r4, lr}
 8002ad0:	217c      	movs	r1, #124	; 0x7c
 8002ad2:	4604      	mov	r4, r0
 8002ad4:	f029 ff8d 	bl	802c9f2 <_ZdlPvj>
 8002ad8:	4620      	mov	r0, r4
 8002ada:	bd10      	pop	{r4, pc}

08002adc <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8002adc:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8002ae0:	b11b      	cbz	r3, 8002aea <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8002ae2:	6840      	ldr	r0, [r0, #4]
 8002ae4:	6803      	ldr	r3, [r0, #0]
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	4718      	bx	r3
    }
 8002aea:	4618      	mov	r0, r3
 8002aec:	4770      	bx	lr
	...

08002af0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8002af0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8002af2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8002af6:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8002afa:	4b0c      	ldr	r3, [pc, #48]	; (8002b2c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8002afc:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8002afe:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8002b00:	d009      	beq.n	8002b16 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8002b02:	b93a      	cbnz	r2, 8002b14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002b04:	4a0a      	ldr	r2, [pc, #40]	; (8002b30 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002b06:	490b      	ldr	r1, [pc, #44]	; (8002b34 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002b08:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002b0a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8002b0c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002b0e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8002b10:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8002b12:	701a      	strb	r2, [r3, #0]
    }
 8002b14:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8002b16:	2a00      	cmp	r2, #0
 8002b18:	d0fc      	beq.n	8002b14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002b1a:	4a05      	ldr	r2, [pc, #20]	; (8002b30 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002b1c:	4905      	ldr	r1, [pc, #20]	; (8002b34 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002b1e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002b20:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8002b22:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002b24:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8002b26:	2200      	movs	r2, #0
 8002b28:	e7f3      	b.n	8002b12 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8002b2a:	bf00      	nop
 8002b2c:	2001384c 	.word	0x2001384c
 8002b30:	20013848 	.word	0x20013848
 8002b34:	2001384a 	.word	0x2001384a

08002b38 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002b38:	b570      	push	{r4, r5, r6, lr}
 8002b3a:	460d      	mov	r5, r1
 8002b3c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8002b3e:	b935      	cbnz	r5, 8002b4e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8002b40:	4b09      	ldr	r3, [pc, #36]	; (8002b68 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8002b42:	4a0a      	ldr	r2, [pc, #40]	; (8002b6c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8002b44:	480a      	ldr	r0, [pc, #40]	; (8002b70 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8002b46:	f240 21d2 	movw	r1, #722	; 0x2d2
 8002b4a:	f02a fe39 	bl	802d7c0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8002b4e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8002b52:	4b08      	ldr	r3, [pc, #32]	; (8002b74 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8002b54:	3a00      	subs	r2, #0
 8002b56:	bf18      	it	ne
 8002b58:	2201      	movne	r2, #1
 8002b5a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8002b5c:	6803      	ldr	r3, [r0, #0]
    }
 8002b5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8002b62:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002b66:	4718      	bx	r3
 8002b68:	0802e9e8 	.word	0x0802e9e8
 8002b6c:	0802ea20 	.word	0x0802ea20
 8002b70:	0802ea6e 	.word	0x0802ea6e
 8002b74:	20013852 	.word	0x20013852

08002b78 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8002b78:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8002b7a:	4b09      	ldr	r3, [pc, #36]	; (8002ba0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8002b7c:	881b      	ldrh	r3, [r3, #0]
 8002b7e:	428b      	cmp	r3, r1
 8002b80:	d803      	bhi.n	8002b8a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8002b82:	4b08      	ldr	r3, [pc, #32]	; (8002ba4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8002b84:	881b      	ldrh	r3, [r3, #0]
 8002b86:	4293      	cmp	r3, r2
 8002b88:	d905      	bls.n	8002b96 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8002b8a:	4b07      	ldr	r3, [pc, #28]	; (8002ba8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8002b8c:	4a07      	ldr	r2, [pc, #28]	; (8002bac <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8002b8e:	4808      	ldr	r0, [pc, #32]	; (8002bb0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8002b90:	219e      	movs	r1, #158	; 0x9e
 8002b92:	f02a fe15 	bl	802d7c0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8002b96:	4b07      	ldr	r3, [pc, #28]	; (8002bb4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8002b98:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8002b9a:	4b07      	ldr	r3, [pc, #28]	; (8002bb8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8002b9c:	801a      	strh	r2, [r3, #0]
    }
 8002b9e:	bd08      	pop	{r3, pc}
 8002ba0:	20013848 	.word	0x20013848
 8002ba4:	2001384a 	.word	0x2001384a
 8002ba8:	0802eab3 	.word	0x0802eab3
 8002bac:	0802eb16 	.word	0x0802eb16
 8002bb0:	0802ea6e 	.word	0x0802ea6e
 8002bb4:	2001384e 	.word	0x2001384e
 8002bb8:	20013850 	.word	0x20013850

08002bbc <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002bbc:	2101      	movs	r1, #1
{
 8002bbe:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002bc0:	2200      	movs	r2, #0
 8002bc2:	4608      	mov	r0, r1
 8002bc4:	f00c fdf6 	bl	800f7b4 <osSemaphoreNew>
 8002bc8:	4b0a      	ldr	r3, [pc, #40]	; (8002bf4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8002bca:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002bcc:	b928      	cbnz	r0, 8002bda <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8002bce:	4b0a      	ldr	r3, [pc, #40]	; (8002bf8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8002bd0:	4a0a      	ldr	r2, [pc, #40]	; (8002bfc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002bd2:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002bd4:	480a      	ldr	r0, [pc, #40]	; (8002c00 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8002bd6:	f02a fdf3 	bl	802d7c0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8002bda:	2200      	movs	r2, #0
 8002bdc:	2104      	movs	r1, #4
 8002bde:	2001      	movs	r0, #1
 8002be0:	f00c fe9c 	bl	800f91c <osMessageQueueNew>
 8002be4:	4b07      	ldr	r3, [pc, #28]	; (8002c04 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8002be6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002be8:	b918      	cbnz	r0, 8002bf2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8002bea:	4b07      	ldr	r3, [pc, #28]	; (8002c08 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002bec:	4a03      	ldr	r2, [pc, #12]	; (8002bfc <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002bee:	212c      	movs	r1, #44	; 0x2c
 8002bf0:	e7f0      	b.n	8002bd4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8002bf2:	bd08      	pop	{r3, pc}
 8002bf4:	20000920 	.word	0x20000920
 8002bf8:	0802ec34 	.word	0x0802ec34
 8002bfc:	0802ec7d 	.word	0x0802ec7d
 8002c00:	0802ecac 	.word	0x0802ecac
 8002c04:	2000091c 	.word	0x2000091c
 8002c08:	0802ed3c 	.word	0x0802ed3c

08002c0c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002c0c:	4b02      	ldr	r3, [pc, #8]	; (8002c18 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8002c0e:	f04f 31ff 	mov.w	r1, #4294967295
 8002c12:	6818      	ldr	r0, [r3, #0]
 8002c14:	f00c be22 	b.w	800f85c <osSemaphoreAcquire>
 8002c18:	20000920 	.word	0x20000920

08002c1c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002c1c:	4b01      	ldr	r3, [pc, #4]	; (8002c24 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002c1e:	6818      	ldr	r0, [r3, #0]
 8002c20:	f00c be50 	b.w	800f8c4 <osSemaphoreRelease>
 8002c24:	20000920 	.word	0x20000920

08002c28 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002c28:	4b02      	ldr	r3, [pc, #8]	; (8002c34 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8002c2a:	2100      	movs	r1, #0
 8002c2c:	6818      	ldr	r0, [r3, #0]
 8002c2e:	f00c be15 	b.w	800f85c <osSemaphoreAcquire>
 8002c32:	bf00      	nop
 8002c34:	20000920 	.word	0x20000920

08002c38 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002c38:	f7ff bff0 	b.w	8002c1c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002c3c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002c3c:	4803      	ldr	r0, [pc, #12]	; (8002c4c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002c3e:	4904      	ldr	r1, [pc, #16]	; (8002c50 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002c40:	6800      	ldr	r0, [r0, #0]
 8002c42:	2300      	movs	r3, #0
 8002c44:	461a      	mov	r2, r3
 8002c46:	f00c bea3 	b.w	800f990 <osMessageQueuePut>
 8002c4a:	bf00      	nop
 8002c4c:	2000091c 	.word	0x2000091c
 8002c50:	20000014 	.word	0x20000014

08002c54 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8002c54:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002c56:	4c08      	ldr	r4, [pc, #32]	; (8002c78 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8002c58:	2300      	movs	r3, #0
 8002c5a:	461a      	mov	r2, r3
 8002c5c:	a901      	add	r1, sp, #4
 8002c5e:	6820      	ldr	r0, [r4, #0]
 8002c60:	f00c fecc 	bl	800f9fc <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002c64:	6820      	ldr	r0, [r4, #0]
 8002c66:	f04f 33ff 	mov.w	r3, #4294967295
 8002c6a:	2200      	movs	r2, #0
 8002c6c:	a901      	add	r1, sp, #4
 8002c6e:	f00c fec5 	bl	800f9fc <osMessageQueueGet>
}
 8002c72:	b002      	add	sp, #8
 8002c74:	bd10      	pop	{r4, pc}
 8002c76:	bf00      	nop
 8002c78:	2000091c 	.word	0x2000091c

08002c7c <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8002c7c:	4770      	bx	lr

08002c7e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8002c7e:	2000      	movs	r0, #0
 8002c80:	4770      	bx	lr

08002c82 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8002c82:	4770      	bx	lr

08002c84 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8002c84:	4770      	bx	lr

08002c86 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8002c86:	2000      	movs	r0, #0
 8002c88:	4770      	bx	lr

08002c8a <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8002c8a:	4770      	bx	lr

08002c8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8002c8c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002c8e:	4a03      	ldr	r2, [pc, #12]	; (8002c9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8002c90:	4b03      	ldr	r3, [pc, #12]	; (8002ca0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8002c92:	4804      	ldr	r0, [pc, #16]	; (8002ca4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8002c94:	2122      	movs	r1, #34	; 0x22
 8002c96:	f02a fd93 	bl	802d7c0 <__assert_func>
 8002c9a:	bf00      	nop
 8002c9c:	0802eda1 	.word	0x0802eda1
 8002ca0:	0802ed7e 	.word	0x0802ed7e
 8002ca4:	0802eddf 	.word	0x0802eddf

08002ca8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8002ca8:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002caa:	4a03      	ldr	r2, [pc, #12]	; (8002cb8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8002cac:	4b03      	ldr	r3, [pc, #12]	; (8002cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8002cae:	4804      	ldr	r0, [pc, #16]	; (8002cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8002cb0:	2127      	movs	r1, #39	; 0x27
 8002cb2:	f02a fd85 	bl	802d7c0 <__assert_func>
 8002cb6:	bf00      	nop
 8002cb8:	0802ee6d 	.word	0x0802ee6d
 8002cbc:	0802ed7e 	.word	0x0802ed7e
 8002cc0:	0802eddf 	.word	0x0802eddf

08002cc4 <_ZN8STM32DMAD0Ev>:
 8002cc4:	b510      	push	{r4, lr}
 8002cc6:	2144      	movs	r1, #68	; 0x44
 8002cc8:	4604      	mov	r4, r0
 8002cca:	f029 fe92 	bl	802c9f2 <_ZdlPvj>
 8002cce:	4620      	mov	r0, r4
 8002cd0:	bd10      	pop	{r4, pc}
	...

08002cd4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002cd4:	b538      	push	{r3, r4, r5, lr}
 8002cd6:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8002cd8:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002cda:	2500      	movs	r5, #0
 8002cdc:	4b06      	ldr	r3, [pc, #24]	; (8002cf8 <_ZN8STM32DMAC1Ev+0x24>)
 8002cde:	7225      	strb	r5, [r4, #8]
 8002ce0:	300c      	adds	r0, #12
 8002ce2:	6060      	str	r0, [r4, #4]
 8002ce4:	7265      	strb	r5, [r4, #9]
 8002ce6:	2201      	movs	r2, #1
 8002ce8:	f841 3b20 	str.w	r3, [r1], #32
 8002cec:	f011 fab6 	bl	801425c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002cf0:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8002cf2:	4620      	mov	r0, r4
 8002cf4:	bd38      	pop	{r3, r4, r5, pc}
 8002cf6:	bf00      	nop
 8002cf8:	0802eeb4 	.word	0x0802eeb4

08002cfc <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002cfc:	2001      	movs	r0, #1
 8002cfe:	4770      	bx	lr

08002d00 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002d00:	2038      	movs	r0, #56	; 0x38
 8002d02:	4770      	bx	lr

08002d04 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002d04:	2338      	movs	r3, #56	; 0x38
 8002d06:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002d0a:	3008      	adds	r0, #8
 8002d0c:	4770      	bx	lr

08002d0e <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002d0e:	2338      	movs	r3, #56	; 0x38
 8002d10:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002d14:	3008      	adds	r0, #8
 8002d16:	4770      	bx	lr

08002d18 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002d18:	2001      	movs	r0, #1
 8002d1a:	4770      	bx	lr

08002d1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002d1c:	f641 5004 	movw	r0, #7428	; 0x1d04
 8002d20:	4770      	bx	lr

08002d22 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002d22:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002d26:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002d2a:	3008      	adds	r0, #8
 8002d2c:	4770      	bx	lr

08002d2e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002d2e:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002d32:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002d36:	3008      	adds	r0, #8
 8002d38:	4770      	bx	lr

08002d3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002d3a:	2001      	movs	r0, #1
 8002d3c:	4770      	bx	lr

08002d3e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002d3e:	2010      	movs	r0, #16
 8002d40:	4770      	bx	lr

08002d42 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002d42:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002d46:	3008      	adds	r0, #8
 8002d48:	4770      	bx	lr

08002d4a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002d4a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002d4e:	3008      	adds	r0, #8
 8002d50:	4770      	bx	lr

08002d52 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8002d52:	4608      	mov	r0, r1
 8002d54:	f002 bb3c 	b.w	80053d0 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08002d58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002d58:	b510      	push	{r4, lr}
 8002d5a:	4b03      	ldr	r3, [pc, #12]	; (8002d68 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002d5c:	6003      	str	r3, [r0, #0]
 8002d5e:	4604      	mov	r4, r0
 8002d60:	f00f faa5 	bl	80122ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002d64:	4620      	mov	r0, r4
 8002d66:	bd10      	pop	{r4, pc}
 8002d68:	0802ef6c 	.word	0x0802ef6c

08002d6c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002d6c:	b510      	push	{r4, lr}
 8002d6e:	4604      	mov	r4, r0
 8002d70:	f7ff fff2 	bl	8002d58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002d74:	4620      	mov	r0, r4
 8002d76:	2140      	movs	r1, #64	; 0x40
 8002d78:	f029 fe3b 	bl	802c9f2 <_ZdlPvj>
 8002d7c:	4620      	mov	r0, r4
 8002d7e:	bd10      	pop	{r4, pc}

08002d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002d80:	b510      	push	{r4, lr}
 8002d82:	4b03      	ldr	r3, [pc, #12]	; (8002d90 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002d84:	6003      	str	r3, [r0, #0]
 8002d86:	4604      	mov	r4, r0
 8002d88:	f00f fa91 	bl	80122ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002d8c:	4620      	mov	r0, r4
 8002d8e:	bd10      	pop	{r4, pc}
 8002d90:	0802ef38 	.word	0x0802ef38

08002d94 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002d94:	b510      	push	{r4, lr}
 8002d96:	4604      	mov	r4, r0
 8002d98:	f7ff fff2 	bl	8002d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002d9c:	4620      	mov	r0, r4
 8002d9e:	f641 510c 	movw	r1, #7436	; 0x1d0c
 8002da2:	f029 fe26 	bl	802c9f2 <_ZdlPvj>
 8002da6:	4620      	mov	r0, r4
 8002da8:	bd10      	pop	{r4, pc}
	...

08002dac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002dac:	b510      	push	{r4, lr}
 8002dae:	4b03      	ldr	r3, [pc, #12]	; (8002dbc <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002db0:	6003      	str	r3, [r0, #0]
 8002db2:	4604      	mov	r4, r0
 8002db4:	f00f fa7b 	bl	80122ae <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002db8:	4620      	mov	r0, r4
 8002dba:	bd10      	pop	{r4, pc}
 8002dbc:	0802ef04 	.word	0x0802ef04

08002dc0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002dc0:	b510      	push	{r4, lr}
 8002dc2:	4604      	mov	r4, r0
 8002dc4:	f7ff fff2 	bl	8002dac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002dc8:	4620      	mov	r0, r4
 8002dca:	2118      	movs	r1, #24
 8002dcc:	f029 fe11 	bl	802c9f2 <_ZdlPvj>
 8002dd0:	4620      	mov	r0, r4
 8002dd2:	bd10      	pop	{r4, pc}

08002dd4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002dd4:	b510      	push	{r4, lr}
 8002dd6:	4b09      	ldr	r3, [pc, #36]	; (8002dfc <_ZN12FrontendHeapD1Ev+0x28>)
 8002dd8:	6003      	str	r3, [r0, #0]
 8002dda:	4604      	mov	r4, r0
 8002ddc:	f500 50e9 	add.w	r0, r0, #7456	; 0x1d20
 8002de0:	3018      	adds	r0, #24
 8002de2:	f7ff ffb9 	bl	8002d58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002de6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8002dea:	f7ff ffc9 	bl	8002d80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002dee:	f104 0014 	add.w	r0, r4, #20
 8002df2:	f7ff ffdb 	bl	8002dac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002df6:	4620      	mov	r0, r4
 8002df8:	bd10      	pop	{r4, pc}
 8002dfa:	bf00      	nop
 8002dfc:	0802efa0 	.word	0x0802efa0

08002e00 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002e00:	b508      	push	{r3, lr}
 8002e02:	4802      	ldr	r0, [pc, #8]	; (8002e0c <__tcf_0+0xc>)
 8002e04:	f7ff ffe6 	bl	8002dd4 <_ZN12FrontendHeapD1Ev>
 8002e08:	bd08      	pop	{r3, pc}
 8002e0a:	bf00      	nop
 8002e0c:	20000928 	.word	0x20000928

08002e10 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002e10:	b510      	push	{r4, lr}
 8002e12:	4604      	mov	r4, r0
 8002e14:	f7ff ffde 	bl	8002dd4 <_ZN12FrontendHeapD1Ev>
 8002e18:	4620      	mov	r0, r4
 8002e1a:	f641 61dc 	movw	r1, #7900	; 0x1edc
 8002e1e:	f029 fde8 	bl	802c9f2 <_ZdlPvj>
 8002e22:	4620      	mov	r0, r4
 8002e24:	bd10      	pop	{r4, pc}
	...

08002e28 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002e28:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002e2c:	f000 fa5c 	bl	80032e8 <_ZN14BitmapDatabase11getInstanceEv>
 8002e30:	4605      	mov	r5, r0
 8002e32:	f000 fa5d 	bl	80032f0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002e36:	2400      	movs	r4, #0
 8002e38:	4601      	mov	r1, r0
 8002e3a:	4623      	mov	r3, r4
 8002e3c:	4628      	mov	r0, r5
 8002e3e:	4622      	mov	r2, r4
 8002e40:	9400      	str	r4, [sp, #0]
 8002e42:	f019 f929 	bl	801c098 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002e46:	4b26      	ldr	r3, [pc, #152]	; (8002ee0 <touchgfx_init+0xb8>)
 8002e48:	4a26      	ldr	r2, [pc, #152]	; (8002ee4 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8002e4a:	4d27      	ldr	r5, [pc, #156]	; (8002ee8 <touchgfx_init+0xc0>)
 8002e4c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002e4e:	4620      	mov	r0, r4
 8002e50:	f007 fb1e 	bl	800a490 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8002e54:	4825      	ldr	r0, [pc, #148]	; (8002eec <touchgfx_init+0xc4>)
 8002e56:	f019 f887 	bl	801bf68 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002e5a:	682b      	ldr	r3, [r5, #0]
 8002e5c:	f3bf 8f5b 	dmb	ish
 8002e60:	07db      	lsls	r3, r3, #31
 8002e62:	d436      	bmi.n	8002ed2 <touchgfx_init+0xaa>
 8002e64:	4628      	mov	r0, r5
 8002e66:	f029 fdc6 	bl	802c9f6 <__cxa_guard_acquire>
 8002e6a:	b390      	cbz	r0, 8002ed2 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8002e6c:	4c20      	ldr	r4, [pc, #128]	; (8002ef0 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8002e6e:	4b21      	ldr	r3, [pc, #132]	; (8002ef4 <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8002e70:	4f21      	ldr	r7, [pc, #132]	; (8002ef8 <touchgfx_init+0xd0>)
 8002e72:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8002e74:	f504 56ec 	add.w	r6, r4, #7552	; 0x1d80
        : presenterStorage(pres),
 8002e78:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8002e7c:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8002e80:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8002e82:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8002e86:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8002e88:	6126      	str	r6, [r4, #16]
 8002e8a:	f00f fa11 	bl	80122b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002e8e:	4b1b      	ldr	r3, [pc, #108]	; (8002efc <touchgfx_init+0xd4>)
 8002e90:	6163      	str	r3, [r4, #20]
 8002e92:	4640      	mov	r0, r8
 8002e94:	f00f fa0c 	bl	80122b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002e98:	4b19      	ldr	r3, [pc, #100]	; (8002f00 <touchgfx_init+0xd8>)
 8002e9a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002e9c:	4638      	mov	r0, r7
 8002e9e:	f00f fa07 	bl	80122b0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002ea2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002ea6:	4a17      	ldr	r2, [pc, #92]	; (8002f04 <touchgfx_init+0xdc>)
 8002ea8:	f8c3 2d38 	str.w	r2, [r3, #3384]	; 0xd38
 8002eac:	f603 5078 	addw	r0, r3, #3448	; 0xd78
 8002eb0:	f007 ff4c 	bl	800ad4c <_ZN5ModelC1Ev>
 8002eb4:	4622      	mov	r2, r4
 8002eb6:	f1a6 0108 	sub.w	r1, r6, #8
 8002eba:	4630      	mov	r0, r6
 8002ebc:	f007 fc6e 	bl	800a79c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8002ec0:	4630      	mov	r0, r6
 8002ec2:	f002 fa85 	bl	80053d0 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8002ec6:	4810      	ldr	r0, [pc, #64]	; (8002f08 <touchgfx_init+0xe0>)
 8002ec8:	f02a fc98 	bl	802d7fc <atexit>
 8002ecc:	4628      	mov	r0, r5
 8002ece:	f029 fd9e 	bl	802ca0e <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002ed2:	480e      	ldr	r0, [pc, #56]	; (8002f0c <touchgfx_init+0xe4>)
}
 8002ed4:	b002      	add	sp, #8
 8002ed6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8002eda:	f7ff bdb5 	b.w	8002a48 <_ZN11TouchGFXHAL10initializeEv>
 8002ede:	bf00      	nop
 8002ee0:	200138b8 	.word	0x200138b8
 8002ee4:	200028c8 	.word	0x200028c8
 8002ee8:	20000924 	.word	0x20000924
 8002eec:	20000018 	.word	0x20000018
 8002ef0:	20000928 	.word	0x20000928
 8002ef4:	0802efa0 	.word	0x0802efa0
 8002ef8:	20002660 	.word	0x20002660
 8002efc:	0802ef04 	.word	0x0802ef04
 8002f00:	0802ef38 	.word	0x0802ef38
 8002f04:	0802ef6c 	.word	0x0802ef6c
 8002f08:	08002e01 	.word	0x08002e01
 8002f0c:	2000284c 	.word	0x2000284c

08002f10 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002f10:	4770      	bx	lr
	...

08002f14 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002f14:	4801      	ldr	r0, [pc, #4]	; (8002f1c <touchgfx_taskEntry+0x8>)
 8002f16:	f7ff bda5 	b.w	8002a64 <_ZN11TouchGFXHAL9taskEntryEv>
 8002f1a:	bf00      	nop
 8002f1c:	2000284c 	.word	0x2000284c

08002f20 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002f20:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8002f22:	4e22      	ldr	r6, [pc, #136]	; (8002fac <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8002f24:	4c22      	ldr	r4, [pc, #136]	; (8002fb0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8002f26:	4d23      	ldr	r5, [pc, #140]	; (8002fb4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8002f28:	4b23      	ldr	r3, [pc, #140]	; (8002fb8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8002f2a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002f2c:	4630      	mov	r0, r6
 8002f2e:	f7ff fed1 	bl	8002cd4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8002f32:	4628      	mov	r0, r5
 8002f34:	f01d fb7c 	bl	8020630 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8002f38:	4b20      	ldr	r3, [pc, #128]	; (8002fbc <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002f3a:	4821      	ldr	r0, [pc, #132]	; (8002fc0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8002f3c:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8002f3e:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8002f40:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8002f44:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8002f48:	491e      	ldr	r1, [pc, #120]	; (8002fc4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002f4a:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8002f4c:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8002f50:	491d      	ldr	r1, [pc, #116]	; (8002fc8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8002f52:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8002f54:	491d      	ldr	r1, [pc, #116]	; (8002fcc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8002f56:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8002f5a:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002f5c:	21f0      	movs	r1, #240	; 0xf0
 8002f5e:	8001      	strh	r1, [r0, #0]
 8002f60:	481b      	ldr	r0, [pc, #108]	; (8002fd0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8002f62:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002f64:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002f66:	481b      	ldr	r0, [pc, #108]	; (8002fd4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8002f68:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002f6c:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8002f70:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8002f74:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8002f78:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8002f7c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8002f80:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8002f84:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8002f88:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8002f8c:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8002f90:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8002f92:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002f96:	8001      	strh	r1, [r0, #0]
 8002f98:	480f      	ldr	r0, [pc, #60]	; (8002fd8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8002f9a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8002f9c:	490f      	ldr	r1, [pc, #60]	; (8002fdc <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8002f9e:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8002fa0:	2201      	movs	r2, #1
 8002fa2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8002fa6:	4a0e      	ldr	r2, [pc, #56]	; (8002fe0 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8002fa8:	601a      	str	r2, [r3, #0]
}
 8002faa:	bd70      	pop	{r4, r5, r6, pc}
 8002fac:	20002808 	.word	0x20002808
 8002fb0:	20002804 	.word	0x20002804
 8002fb4:	200028cc 	.word	0x200028cc
 8002fb8:	0802e9d8 	.word	0x0802e9d8
 8002fbc:	2000284c 	.word	0x2000284c
 8002fc0:	20013848 	.word	0x20013848
 8002fc4:	01000001 	.word	0x01000001
 8002fc8:	01010000 	.word	0x01010000
 8002fcc:	20013854 	.word	0x20013854
 8002fd0:	2001384e 	.word	0x2001384e
 8002fd4:	2001384a 	.word	0x2001384a
 8002fd8:	20013850 	.word	0x20013850
 8002fdc:	2001384c 	.word	0x2001384c
 8002fe0:	0802eb64 	.word	0x0802eb64

08002fe4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002fe4:	2000      	movs	r0, #0
 8002fe6:	4770      	bx	lr

08002fe8 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002fe8:	8081      	strh	r1, [r0, #4]
    }
 8002fea:	4770      	bx	lr

08002fec <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002fec:	80c1      	strh	r1, [r0, #6]
    }
 8002fee:	4770      	bx	lr

08002ff0 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002ff0:	8101      	strh	r1, [r0, #8]
    }
 8002ff2:	4770      	bx	lr

08002ff4 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002ff4:	8141      	strh	r1, [r0, #10]
    }
 8002ff6:	4770      	bx	lr

08002ff8 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002ff8:	4770      	bx	lr

08002ffa <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002ffa:	4770      	bx	lr

08002ffc <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002ffc:	4770      	bx	lr

08002ffe <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002ffe:	4770      	bx	lr

08003000 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8003000:	4770      	bx	lr

08003002 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8003002:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8003004:	88c4      	ldrh	r4, [r0, #6]
 8003006:	6803      	ldr	r3, [r0, #0]
 8003008:	1b12      	subs	r2, r2, r4
 800300a:	8884      	ldrh	r4, [r0, #4]
 800300c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800300e:	1b09      	subs	r1, r1, r4
 8003010:	b212      	sxth	r2, r2
    }
 8003012:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8003016:	b209      	sxth	r1, r1
 8003018:	4718      	bx	r3

0800301a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800301a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800301e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8003020:	f04f 33ff 	mov.w	r3, #4294967295
 8003024:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8003026:	6813      	ldr	r3, [r2, #0]
 8003028:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800302a:	6010      	str	r0, [r2, #0]
    }
 800302c:	4770      	bx	lr

0800302e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800302e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8003032:	b11a      	cbz	r2, 800303c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8003034:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8003038:	b102      	cbz	r2, 800303c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800303a:	6018      	str	r0, [r3, #0]
        }
    }
 800303c:	4770      	bx	lr

0800303e <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800303e:	2000      	movs	r0, #0
 8003040:	4770      	bx	lr

08003042 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8003042:	888b      	ldrh	r3, [r1, #4]
 8003044:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8003046:	2001      	movs	r0, #1
 8003048:	4770      	bx	lr

0800304a <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800304a:	4770      	bx	lr

0800304c <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800304c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8003050:	4770      	bx	lr

08003052 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003052:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8003056:	4770      	bx	lr

08003058 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003058:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800305a:	2200      	movs	r2, #0
        return rect.width;
 800305c:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003060:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003064:	8002      	strh	r2, [r0, #0]
 8003066:	8042      	strh	r2, [r0, #2]
 8003068:	8084      	strh	r4, [r0, #4]
 800306a:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 800306c:	bd10      	pop	{r4, pc}

0800306e <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 800306e:	2200      	movs	r2, #0
 8003070:	8002      	strh	r2, [r0, #0]
 8003072:	8042      	strh	r2, [r0, #2]
 8003074:	8082      	strh	r2, [r0, #4]
 8003076:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003078:	4770      	bx	lr
	...

0800307c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800307c:	4b02      	ldr	r3, [pc, #8]	; (8003088 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 800307e:	2290      	movs	r2, #144	; 0x90
 8003080:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8003084:	4770      	bx	lr
 8003086:	bf00      	nop
 8003088:	e000e100 	.word	0xe000e100

0800308c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800308c:	4b02      	ldr	r3, [pc, #8]	; (8003098 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 800308e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003092:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8003094:	4770      	bx	lr
 8003096:	bf00      	nop
 8003098:	e000e100 	.word	0xe000e100

0800309c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800309c:	4a09      	ldr	r2, [pc, #36]	; (80030c4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800309e:	490a      	ldr	r1, [pc, #40]	; (80030c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80030a0:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80030a2:	480a      	ldr	r0, [pc, #40]	; (80030cc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80030a4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80030a8:	3b01      	subs	r3, #1
 80030aa:	b29b      	uxth	r3, r3
 80030ac:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80030ae:	6911      	ldr	r1, [r2, #16]
 80030b0:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80030b4:	3901      	subs	r1, #1
 80030b6:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80030b8:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80030ba:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80030bc:	f043 0301 	orr.w	r3, r3, #1
 80030c0:	6353      	str	r3, [r2, #52]	; 0x34
}
 80030c2:	4770      	bx	lr
 80030c4:	40016800 	.word	0x40016800
 80030c8:	20002952 	.word	0x20002952
 80030cc:	20002950 	.word	0x20002950

080030d0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80030d0:	4b01      	ldr	r3, [pc, #4]	; (80030d8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80030d2:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80030d6:	4770      	bx	lr
 80030d8:	40016800 	.word	0x40016800

080030dc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80030dc:	4b02      	ldr	r3, [pc, #8]	; (80030e8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80030de:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80030e0:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80030e4:	625a      	str	r2, [r3, #36]	; 0x24
}
 80030e6:	4770      	bx	lr
 80030e8:	40016800 	.word	0x40016800

080030ec <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80030ec:	b570      	push	{r4, r5, r6, lr}
 80030ee:	4604      	mov	r4, r0
    HAL::initialize();
 80030f0:	f010 fa1d 	bl	801352e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80030f4:	6823      	ldr	r3, [r4, #0]
 80030f6:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80030f8:	f015 fb92 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
 80030fc:	4601      	mov	r1, r0
 80030fe:	4620      	mov	r0, r4
 8003100:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8003102:	6823      	ldr	r3, [r4, #0]
 8003104:	4a05      	ldr	r2, [pc, #20]	; (800311c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8003106:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800310a:	4620      	mov	r0, r4
 800310c:	46ac      	mov	ip, r5
 800310e:	2300      	movs	r3, #0
}
 8003110:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8003114:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8003118:	4760      	bx	ip
 800311a:	bf00      	nop
 800311c:	d004b000 	.word	0xd004b000

08003120 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8003120:	f010 b9ec 	b.w	80134fc <_ZN8touchgfx3HAL10beginFrameEv>

08003124 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8003124:	f010 b9f6 	b.w	8013514 <_ZN8touchgfx3HAL8endFrameEv>

08003128 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8003128:	f010 b9b1 	b.w	801348e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

0800312c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 800312c:	f010 bb13 	b.w	8013756 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08003130 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8003130:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8003134:	b112      	cbz	r2, 800313c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8003136:	6803      	ldr	r3, [r0, #0]
 8003138:	695b      	ldr	r3, [r3, #20]
 800313a:	4718      	bx	r3
    }
 800313c:	4770      	bx	lr
	...

08003140 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003140:	4b04      	ldr	r3, [pc, #16]	; (8003154 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8003142:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003146:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800314a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800314e:	f3bf 8f6f 	isb	sy
}
 8003152:	4770      	bx	lr
 8003154:	e000e100 	.word	0xe000e100

08003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003158:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 800315a:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800315c:	4e12      	ldr	r6, [pc, #72]	; (80031a8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800315e:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003160:	4b12      	ldr	r3, [pc, #72]	; (80031ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003162:	6003      	str	r3, [r0, #0]
 8003164:	6833      	ldr	r3, [r6, #0]
 8003166:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 800316a:	4605      	mov	r5, r0
 800316c:	b10a      	cbz	r2, 8003172 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800316e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003170:	b900      	cbnz	r0, 8003174 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8003172:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003174:	6803      	ldr	r3, [r0, #0]
 8003176:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003178:	4798      	blx	r3
        return auxiliaryLCD;
 800317a:	6833      	ldr	r3, [r6, #0]
 800317c:	fab0 f480 	clz	r4, r0
 8003180:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003182:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003184:	b130      	cbz	r0, 8003194 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003186:	6803      	ldr	r3, [r0, #0]
 8003188:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800318a:	4798      	blx	r3
 800318c:	2800      	cmp	r0, #0
 800318e:	bf08      	it	eq
 8003190:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003194:	b92c      	cbnz	r4, 80031a2 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003196:	4b06      	ldr	r3, [pc, #24]	; (80031b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003198:	4a06      	ldr	r2, [pc, #24]	; (80031b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800319a:	4807      	ldr	r0, [pc, #28]	; (80031b8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800319c:	212c      	movs	r1, #44	; 0x2c
 800319e:	f02a fb0f 	bl	802d7c0 <__assert_func>
    }
 80031a2:	4628      	mov	r0, r5
 80031a4:	bd70      	pop	{r4, r5, r6, pc}
 80031a6:	bf00      	nop
 80031a8:	20013854 	.word	0x20013854
 80031ac:	0802f0b0 	.word	0x0802f0b0
 80031b0:	0802efac 	.word	0x0802efac
 80031b4:	0802f00a 	.word	0x0802f00a
 80031b8:	0802f043 	.word	0x0802f043

080031bc <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80031bc:	4770      	bx	lr
	...

080031c0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80031c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80031c4:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80031c6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80031ca:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80031ce:	d105      	bne.n	80031dc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80031d0:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80031d4:	4281      	cmp	r1, r0
 80031d6:	d8fb      	bhi.n	80031d0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80031d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80031dc:	4f17      	ldr	r7, [pc, #92]	; (800323c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80031de:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80031e2:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80031e6:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80031ea:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80031ee:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80031f0:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 80031f2:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80031f4:	b2db      	uxtb	r3, r3
 80031f6:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80031f8:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80031fc:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003200:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003204:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003208:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800320c:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003210:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003214:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003218:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800321a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800321e:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8003222:	fb03 4e0e 	mla	lr, r3, lr, r4
 8003226:	fbbe fef5 	udiv	lr, lr, r5
 800322a:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800322e:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8003232:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8003236:	4281      	cmp	r1, r0
 8003238:	d8de      	bhi.n	80031f8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 800323a:	e7cd      	b.n	80031d8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 800323c:	fffff800 	.word	0xfffff800

08003240 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8003240:	b510      	push	{r4, lr}
        return instance;
 8003242:	4c14      	ldr	r4, [pc, #80]	; (8003294 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8003244:	6823      	ldr	r3, [r4, #0]
 8003246:	b323      	cbz	r3, 8003292 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8003248:	4b13      	ldr	r3, [pc, #76]	; (8003298 <HAL_LTDC_LineEventCallback+0x58>)
 800324a:	4a14      	ldr	r2, [pc, #80]	; (800329c <HAL_LTDC_LineEventCallback+0x5c>)
 800324c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800324e:	8811      	ldrh	r1, [r2, #0]
 8003250:	428b      	cmp	r3, r1
 8003252:	d113      	bne.n	800327c <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8003254:	4b12      	ldr	r3, [pc, #72]	; (80032a0 <HAL_LTDC_LineEventCallback+0x60>)
 8003256:	8819      	ldrh	r1, [r3, #0]
 8003258:	f00a fae4 	bl	800d824 <HAL_LTDC_ProgramLineEvent>
 800325c:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800325e:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8003262:	3301      	adds	r3, #1
 8003264:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8003268:	f7ff fce8 	bl	8002c3c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800326c:	6820      	ldr	r0, [r4, #0]
 800326e:	f010 fe9d 	bl	8013fac <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8003272:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8003276:	2000      	movs	r0, #0
 8003278:	f7ff bb60 	b.w	800293c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800327c:	f00a fad2 	bl	800d824 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8003280:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8003282:	6803      	ldr	r3, [r0, #0]
 8003284:	6a1b      	ldr	r3, [r3, #32]
 8003286:	4798      	blx	r3
    }
 8003288:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800328c:	2000      	movs	r0, #0
 800328e:	f7ff bb6d 	b.w	800296c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8003292:	bd10      	pop	{r4, pc}
 8003294:	20013854 	.word	0x20013854
 8003298:	40016800 	.word	0x40016800
 800329c:	20002952 	.word	0x20002952
 80032a0:	20002950 	.word	0x20002950

080032a4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80032a4:	4770      	bx	lr

080032a6 <_ZN23ApplicationFontProviderD0Ev>:
 80032a6:	b510      	push	{r4, lr}
 80032a8:	2104      	movs	r1, #4
 80032aa:	4604      	mov	r4, r0
 80032ac:	f029 fba1 	bl	802c9f2 <_ZdlPvj>
 80032b0:	4620      	mov	r0, r4
 80032b2:	bd10      	pop	{r4, pc}

080032b4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80032b4:	b508      	push	{r3, lr}
    switch (typography)
 80032b6:	2903      	cmp	r1, #3
 80032b8:	d813      	bhi.n	80032e2 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80032ba:	e8df f001 	tbb	[pc, r1]
 80032be:	0602      	.short	0x0602
 80032c0:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80032c2:	f007 f931 	bl	800a528 <_ZN17TypedTextDatabase8getFontsEv>
 80032c6:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 80032c8:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80032ca:	f007 f92d 	bl	800a528 <_ZN17TypedTextDatabase8getFontsEv>
 80032ce:	6840      	ldr	r0, [r0, #4]
 80032d0:	e7fa      	b.n	80032c8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80032d2:	f007 f929 	bl	800a528 <_ZN17TypedTextDatabase8getFontsEv>
 80032d6:	6880      	ldr	r0, [r0, #8]
 80032d8:	e7f6      	b.n	80032c8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80032da:	f007 f925 	bl	800a528 <_ZN17TypedTextDatabase8getFontsEv>
 80032de:	68c0      	ldr	r0, [r0, #12]
 80032e0:	e7f2      	b.n	80032c8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 80032e2:	2000      	movs	r0, #0
 80032e4:	e7f0      	b.n	80032c8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

080032e8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80032e8:	4800      	ldr	r0, [pc, #0]	; (80032ec <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80032ea:	4770      	bx	lr
 80032ec:	0802f0dc 	.word	0x0802f0dc

080032f0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80032f0:	200c      	movs	r0, #12
 80032f2:	4770      	bx	lr

080032f4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80032f4:	b513      	push	{r0, r1, r4, lr}
 80032f6:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80032f8:	b151      	cbz	r1, 8003310 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80032fa:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80032fc:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80032fe:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8003302:	aa01      	add	r2, sp, #4
 8003304:	689c      	ldr	r4, [r3, #8]
 8003306:	f10d 0303 	add.w	r3, sp, #3
 800330a:	47a0      	blx	r4
        return glyph;
    }
 800330c:	b002      	add	sp, #8
 800330e:	bd10      	pop	{r4, pc}
            return 0;
 8003310:	4608      	mov	r0, r1
 8003312:	e7fb      	b.n	800330c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08003314 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8003314:	89c0      	ldrh	r0, [r0, #14]
 8003316:	4770      	bx	lr

08003318 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8003318:	8a00      	ldrh	r0, [r0, #16]
 800331a:	4770      	bx	lr

0800331c <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 800331c:	88c0      	ldrh	r0, [r0, #6]
 800331e:	4770      	bx	lr

08003320 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8003320:	8880      	ldrh	r0, [r0, #4]
 8003322:	4770      	bx	lr

08003324 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8003324:	7a80      	ldrb	r0, [r0, #10]
    }
 8003326:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800332a:	4770      	bx	lr

0800332c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800332c:	7a80      	ldrb	r0, [r0, #10]
    }
 800332e:	09c0      	lsrs	r0, r0, #7
 8003330:	4770      	bx	lr

08003332 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8003332:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8003334:	4770      	bx	lr

08003336 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8003336:	4770      	bx	lr

08003338 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003338:	4770      	bx	lr

0800333a <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800333a:	4770      	bx	lr

0800333c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800333c:	4770      	bx	lr

0800333e <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800333e:	4770      	bx	lr

08003340 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8003340:	4770      	bx	lr

08003342 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8003342:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8003344:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8003346:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8003348:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800334a:	466d      	mov	r5, sp
 800334c:	4601      	mov	r1, r0
 800334e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8003352:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003354:	4628      	mov	r0, r5
 8003356:	4798      	blx	r3
 8003358:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800335c:	343c      	adds	r4, #60	; 0x3c
 800335e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003362:	b005      	add	sp, #20
 8003364:	bd30      	pop	{r4, r5, pc}

08003366 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8003366:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8003368:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 800336a:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 800336c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800336e:	466d      	mov	r5, sp
 8003370:	4601      	mov	r1, r0
 8003372:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8003376:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8003378:	4628      	mov	r0, r5
 800337a:	4798      	blx	r3
 800337c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003380:	343c      	adds	r4, #60	; 0x3c
 8003382:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003386:	b005      	add	sp, #20
 8003388:	bd30      	pop	{r4, r5, pc}

0800338a <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800338a:	2200      	movs	r2, #0
 800338c:	8002      	strh	r2, [r0, #0]
 800338e:	8042      	strh	r2, [r0, #2]
 8003390:	8082      	strh	r2, [r0, #4]
 8003392:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003394:	4770      	bx	lr

08003396 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003396:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800339a:	4770      	bx	lr

0800339c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800339c:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 800339e:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80033a0:	4604      	mov	r4, r0
        setX(x);
 80033a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80033a4:	4615      	mov	r5, r2
        setX(x);
 80033a6:	4798      	blx	r3
        setBaselineY(baselineY);
 80033a8:	6823      	ldr	r3, [r4, #0]
 80033aa:	4629      	mov	r1, r5
 80033ac:	4620      	mov	r0, r4
 80033ae:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80033b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80033b4:	4718      	bx	r3

080033b6 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80033b6:	2000      	movs	r0, #0
 80033b8:	4770      	bx	lr

080033ba <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80033ba:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80033bc:	4770      	bx	lr

080033be <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 80033be:	4770      	bx	lr

080033c0 <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 80033c0:	6803      	ldr	r3, [r0, #0]
 80033c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80033c4:	4718      	bx	r3

080033c6 <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction2
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 80033c6:	6803      	ldr	r3, [r0, #0]
 80033c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80033ca:	4718      	bx	r3

080033cc <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80033cc:	4770      	bx	lr

080033ce <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80033ce:	4770      	bx	lr

080033d0 <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 80033d0:	4770      	bx	lr

080033d2 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80033d2:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80033d4:	68c2      	ldr	r2, [r0, #12]
 80033d6:	6844      	ldr	r4, [r0, #4]
 80033d8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80033da:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80033dc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80033e0:	07d2      	lsls	r2, r2, #31
 80033e2:	bf48      	it	mi
 80033e4:	5962      	ldrmi	r2, [r4, r5]
 80033e6:	689b      	ldr	r3, [r3, #8]
    }
 80033e8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80033ea:	bf48      	it	mi
 80033ec:	58d3      	ldrmi	r3, [r2, r3]
 80033ee:	4718      	bx	r3

080033f0 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80033f0:	6843      	ldr	r3, [r0, #4]
 80033f2:	b12b      	cbz	r3, 8003400 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80033f4:	6883      	ldr	r3, [r0, #8]
 80033f6:	b92b      	cbnz	r3, 8003404 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80033f8:	68c0      	ldr	r0, [r0, #12]
 80033fa:	f000 0001 	and.w	r0, r0, #1
 80033fe:	4770      	bx	lr
 8003400:	4618      	mov	r0, r3
 8003402:	4770      	bx	lr
 8003404:	2001      	movs	r0, #1
    }
 8003406:	4770      	bx	lr

08003408 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8003408:	b510      	push	{r4, lr}
    }
 800340a:	2108      	movs	r1, #8
    virtual ~TypedText()
 800340c:	4604      	mov	r4, r0
    }
 800340e:	f029 faf0 	bl	802c9f2 <_ZdlPvj>
 8003412:	4620      	mov	r0, r4
 8003414:	bd10      	pop	{r4, pc}

08003416 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8003416:	b510      	push	{r4, lr}
 8003418:	214c      	movs	r1, #76	; 0x4c
 800341a:	4604      	mov	r4, r0
 800341c:	f029 fae9 	bl	802c9f2 <_ZdlPvj>
 8003420:	4620      	mov	r0, r4
 8003422:	bd10      	pop	{r4, pc}

08003424 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003424:	b510      	push	{r4, lr}
 8003426:	2110      	movs	r1, #16
 8003428:	4604      	mov	r4, r0
 800342a:	f029 fae2 	bl	802c9f2 <_ZdlPvj>
 800342e:	4620      	mov	r0, r4
 8003430:	bd10      	pop	{r4, pc}

08003432 <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 8003432:	b510      	push	{r4, lr}
 8003434:	218c      	movs	r1, #140	; 0x8c
 8003436:	4604      	mov	r4, r0
 8003438:	f029 fadb 	bl	802c9f2 <_ZdlPvj>
 800343c:	4620      	mov	r0, r4
 800343e:	bd10      	pop	{r4, pc}

08003440 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003440:	b538      	push	{r3, r4, r5, lr}
 8003442:	4605      	mov	r5, r0
 8003444:	4b05      	ldr	r3, [pc, #20]	; (800345c <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 8003446:	f845 3be0 	str.w	r3, [r5], #224
 800344a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800344c:	f013 fce6 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003450:	4628      	mov	r0, r5
 8003452:	f00f fb9b 	bl	8012b8c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8003456:	4620      	mov	r0, r4
 8003458:	bd38      	pop	{r3, r4, r5, pc}
 800345a:	bf00      	nop
 800345c:	0802f4c4 	.word	0x0802f4c4

08003460 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003460:	b510      	push	{r4, lr}
 8003462:	4604      	mov	r4, r0
}
 8003464:	f7ff ffec 	bl	8003440 <_ZN23Calibration_PadViewBaseD1Ev>
 8003468:	4620      	mov	r0, r4
 800346a:	f641 5104 	movw	r1, #7428	; 0x1d04
 800346e:	f029 fac0 	bl	802c9f2 <_ZdlPvj>
 8003472:	4620      	mov	r0, r4
 8003474:	bd10      	pop	{r4, pc}

08003476 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8003476:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8003478:	f7ff fe5a 	bl	8003130 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800347c:	bd08      	pop	{r3, pc}
	...

08003480 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003480:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003482:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003484:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003486:	4b12      	ldr	r3, [pc, #72]	; (80034d0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8003488:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 800348a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800348c:	b28d      	uxth	r5, r1
 800348e:	b92b      	cbnz	r3, 800349c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8003490:	4b10      	ldr	r3, [pc, #64]	; (80034d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8003492:	4a11      	ldr	r2, [pc, #68]	; (80034d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003494:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003496:	4811      	ldr	r0, [pc, #68]	; (80034dc <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003498:	f02a f992 	bl	802d7c0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800349c:	4910      	ldr	r1, [pc, #64]	; (80034e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800349e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80034a0:	8809      	ldrh	r1, [r1, #0]
 80034a2:	4291      	cmp	r1, r2
 80034a4:	d803      	bhi.n	80034ae <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80034a6:	4b0f      	ldr	r3, [pc, #60]	; (80034e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80034a8:	4a0b      	ldr	r2, [pc, #44]	; (80034d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80034aa:	216d      	movs	r1, #109	; 0x6d
 80034ac:	e7f3      	b.n	8003496 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80034ae:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80034b2:	4b0d      	ldr	r3, [pc, #52]	; (80034e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80034b4:	681b      	ldr	r3, [r3, #0]
 80034b6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80034ba:	6803      	ldr	r3, [r0, #0]
 80034bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034be:	4798      	blx	r3
 80034c0:	1a28      	subs	r0, r5, r0
 80034c2:	b201      	sxth	r1, r0
 80034c4:	4633      	mov	r3, r6
 80034c6:	4620      	mov	r0, r4
    }
 80034c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80034cc:	4718      	bx	r3
 80034ce:	bf00      	nop
 80034d0:	200138ac 	.word	0x200138ac
 80034d4:	0802f1cc 	.word	0x0802f1cc
 80034d8:	0802f20e 	.word	0x0802f20e
 80034dc:	0802f249 	.word	0x0802f249
 80034e0:	200138b0 	.word	0x200138b0
 80034e4:	0802f290 	.word	0x0802f290
 80034e8:	200138b4 	.word	0x200138b4

080034ec <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80034ec:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80034ee:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80034f0:	4604      	mov	r4, r0
        setX(x);
 80034f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80034f4:	4615      	mov	r5, r2
        setX(x);
 80034f6:	4798      	blx	r3
        setY(y);
 80034f8:	6823      	ldr	r3, [r4, #0]
 80034fa:	4629      	mov	r1, r5
 80034fc:	4620      	mov	r0, r4
 80034fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8003500:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8003504:	4718      	bx	r3

08003506 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003506:	b570      	push	{r4, r5, r6, lr}
 8003508:	4604      	mov	r4, r0
 800350a:	461d      	mov	r5, r3
 800350c:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8003510:	f7ff ffec 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003514:	6823      	ldr	r3, [r4, #0]
 8003516:	4629      	mov	r1, r5
 8003518:	4620      	mov	r0, r4
 800351a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800351c:	4798      	blx	r3
        setHeight(height);
 800351e:	6823      	ldr	r3, [r4, #0]
 8003520:	4631      	mov	r1, r6
 8003522:	4620      	mov	r0, r4
 8003524:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8003526:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800352a:	4718      	bx	r3

0800352c <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 800352c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003530:	2200      	movs	r2, #0
 8003532:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 8003534:	4905      	ldr	r1, [pc, #20]	; (800354c <_ZN8touchgfx9ContainerC1Ev+0x20>)
 8003536:	6001      	str	r1, [r0, #0]
 8003538:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800353c:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8003540:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8003544:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003548:	6282      	str	r2, [r0, #40]	; 0x28
    }
 800354a:	4770      	bx	lr
 800354c:	080313e8 	.word	0x080313e8

08003550 <_ZN8touchgfx6WidgetC1Ev>:
 8003550:	2200      	movs	r2, #0
 8003552:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003556:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800355a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800355e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8003562:	f44f 7280 	mov.w	r2, #256	; 0x100
 8003566:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8003568:	4a01      	ldr	r2, [pc, #4]	; (8003570 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800356a:	6002      	str	r2, [r0, #0]
 800356c:	4770      	bx	lr
 800356e:	bf00      	nop
 8003570:	0802f314 	.word	0x0802f314

08003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8003574:	4b1a      	ldr	r3, [pc, #104]	; (80035e0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8003576:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8003578:	881b      	ldrh	r3, [r3, #0]
 800357a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800357c:	428b      	cmp	r3, r1
    void updateTextPosition()
 800357e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003580:	d92b      	bls.n	80035da <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003582:	4b18      	ldr	r3, [pc, #96]	; (80035e4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8003584:	681b      	ldr	r3, [r3, #0]
 8003586:	b92b      	cbnz	r3, 8003594 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003588:	4b17      	ldr	r3, [pc, #92]	; (80035e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800358a:	4a18      	ldr	r2, [pc, #96]	; (80035ec <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 800358c:	4818      	ldr	r0, [pc, #96]	; (80035f0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800358e:	216c      	movs	r1, #108	; 0x6c
 8003590:	f02a f916 	bl	802d7c0 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003594:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8003598:	4b16      	ldr	r3, [pc, #88]	; (80035f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800359a:	681b      	ldr	r3, [r3, #0]
 800359c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 80035a0:	4b15      	ldr	r3, [pc, #84]	; (80035f8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 80035a2:	6818      	ldr	r0, [r3, #0]
 80035a4:	f006 ffb0 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80035a8:	682b      	ldr	r3, [r5, #0]
 80035aa:	9001      	str	r0, [sp, #4]
 80035ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80035ae:	4628      	mov	r0, r5
 80035b0:	4798      	blx	r3
 80035b2:	682b      	ldr	r3, [r5, #0]
 80035b4:	9901      	ldr	r1, [sp, #4]
 80035b6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80035b8:	4604      	mov	r4, r0
 80035ba:	4628      	mov	r0, r5
 80035bc:	4798      	blx	r3
 80035be:	682b      	ldr	r3, [r5, #0]
 80035c0:	9901      	ldr	r1, [sp, #4]
 80035c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035c4:	fb14 f400 	smulbb	r4, r4, r0
 80035c8:	4628      	mov	r0, r5
 80035ca:	4798      	blx	r3
 80035cc:	b2a4      	uxth	r4, r4
 80035ce:	1823      	adds	r3, r4, r0
 80035d0:	b21b      	sxth	r3, r3
 80035d2:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80035d6:	b002      	add	sp, #8
 80035d8:	bd70      	pop	{r4, r5, r6, pc}
 80035da:	2300      	movs	r3, #0
 80035dc:	e7f9      	b.n	80035d2 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 80035de:	bf00      	nop
 80035e0:	200138b0 	.word	0x200138b0
 80035e4:	200138ac 	.word	0x200138ac
 80035e8:	0802f1cc 	.word	0x0802f1cc
 80035ec:	0802f20e 	.word	0x0802f20e
 80035f0:	0802f249 	.word	0x0802f249
 80035f4:	200138b4 	.word	0x200138b4
 80035f8:	200138b8 	.word	0x200138b8

080035fc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80035fc:	2200      	movs	r2, #0
 80035fe:	f04f 31ff 	mov.w	r1, #4294967295
 8003602:	e9c0 2100 	strd	r2, r1, [r0]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8003606:	6082      	str	r2, [r0, #8]
        {
        }
 8003608:	4770      	bx	lr

0800360a <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 800360a:	b510      	push	{r4, lr}
 800360c:	4604      	mov	r4, r0
        return TextArea::BoundingArea();
 800360e:	f7ff fff5 	bl	80035fc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8003612:	4620      	mov	r0, r4
 8003614:	bd10      	pop	{r4, pc}
	...

08003618 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8003618:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800361a:	2100      	movs	r1, #0
    TextArea()
 800361c:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800361e:	2226      	movs	r2, #38	; 0x26
 8003620:	f02a fad3 	bl	802dbca <memset>
 8003624:	4620      	mov	r0, r4
 8003626:	f7ff ff93 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 800362a:	4b09      	ldr	r3, [pc, #36]	; (8003650 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 800362c:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 800362e:	4b09      	ldr	r3, [pc, #36]	; (8003654 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8003630:	62a3      	str	r3, [r4, #40]	; 0x28
 8003632:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003636:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8003638:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800363c:	2300      	movs	r3, #0
 800363e:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8003642:	8723      	strh	r3, [r4, #56]	; 0x38
 8003644:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 8003648:	f7ff ffd8 	bl	80035fc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800364c:	4620      	mov	r0, r4
 800364e:	bd10      	pop	{r4, pc}
 8003650:	08031840 	.word	0x08031840
 8003654:	0802f37c 	.word	0x0802f37c

08003658 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003658:	b510      	push	{r4, lr}
 800365a:	4604      	mov	r4, r0
        : TextArea()
 800365c:	f7ff ffdc 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003660:	4b02      	ldr	r3, [pc, #8]	; (800366c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8003662:	6023      	str	r3, [r4, #0]
 8003664:	2300      	movs	r3, #0
 8003666:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8003668:	4620      	mov	r0, r4
 800366a:	bd10      	pop	{r4, pc}
 800366c:	0802f41c 	.word	0x0802f41c

08003670 <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 8003670:	b510      	push	{r4, lr}
 8003672:	4604      	mov	r4, r0
 8003674:	460b      	mov	r3, r1
 8003676:	490d      	ldr	r1, [pc, #52]	; (80036ac <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8003678:	f844 1b04 	str.w	r1, [r4], #4
 800367c:	4602      	mov	r2, r0
 800367e:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 8003682:	e884 0003 	stmia.w	r4, {r0, r1}
 8003686:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 800368a:	f102 040c 	add.w	r4, r2, #12
 800368e:	e884 0003 	stmia.w	r4, {r0, r1}
 8003692:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8003696:	695c      	ldr	r4, [r3, #20]
 8003698:	61d1      	str	r1, [r2, #28]
 800369a:	6a19      	ldr	r1, [r3, #32]
 800369c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800369e:	6211      	str	r1, [r2, #32]
 80036a0:	e9c2 4005 	strd	r4, r0, [r2, #20]
 80036a4:	8493      	strh	r3, [r2, #36]	; 0x24
 80036a6:	4610      	mov	r0, r2
 80036a8:	bd10      	pop	{r4, pc}
 80036aa:	bf00      	nop
 80036ac:	08031c60 	.word	0x08031c60

080036b0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>:
class SwipeContainer : public Container
 80036b0:	b538      	push	{r3, r4, r5, lr}
 80036b2:	460d      	mov	r5, r1
 80036b4:	4604      	mov	r4, r0
class Container : public Drawable
 80036b6:	f7ff ffdb 	bl	8003670 <_ZN8touchgfx8DrawableC1ERKS0_>
 80036ba:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80036bc:	62a3      	str	r3, [r4, #40]	; 0x28
 80036be:	4b2b      	ldr	r3, [pc, #172]	; (800376c <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xbc>)
 80036c0:	6023      	str	r3, [r4, #0]
 80036c2:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 80036c4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80036c6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80036c8:	6323      	str	r3, [r4, #48]	; 0x30
 80036ca:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 80036cc:	6363      	str	r3, [r4, #52]	; 0x34
 80036ce:	f105 0138 	add.w	r1, r5, #56	; 0x38
 80036d2:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80036d6:	f7ff ffcb 	bl	8003670 <_ZN8touchgfx8DrawableC1ERKS0_>
 80036da:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 80036dc:	6623      	str	r3, [r4, #96]	; 0x60
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 80036de:	4b24      	ldr	r3, [pc, #144]	; (8003770 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc0>)
 80036e0:	63a3      	str	r3, [r4, #56]	; 0x38
 80036e2:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 80036e6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80036ea:	f8b5 3066 	ldrh.w	r3, [r5, #102]	; 0x66
 80036ee:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
 80036f2:	f105 0168 	add.w	r1, r5, #104	; 0x68
 80036f6:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80036fa:	f7ff ffb9 	bl	8003670 <_ZN8touchgfx8DrawableC1ERKS0_>
 80036fe:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 8003702:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    class PageIndicator : public Container
 8003706:	4b1b      	ldr	r3, [pc, #108]	; (8003774 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc4>)
 8003708:	66a3      	str	r3, [r4, #104]	; 0x68
 800370a:	f105 0194 	add.w	r1, r5, #148	; 0x94
 800370e:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8003712:	f7ff ffad 	bl	8003670 <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 8003716:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 800371a:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 800371e:	f895 30bc 	ldrb.w	r3, [r5, #188]	; 0xbc
 8003722:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 8003726:	4b14      	ldr	r3, [pc, #80]	; (8003778 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc8>)
 8003728:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800372c:	f8b5 30be 	ldrh.w	r3, [r5, #190]	; 0xbe
 8003730:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 8003734:	f8b5 30c0 	ldrh.w	r3, [r5, #192]	; 0xc0
 8003738:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 800373c:	f105 01c4 	add.w	r1, r5, #196	; 0xc4
 8003740:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 8003744:	f7ff ff94 	bl	8003670 <_ZN8touchgfx8DrawableC1ERKS0_>
 8003748:	4b0c      	ldr	r3, [pc, #48]	; (800377c <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xcc>)
 800374a:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 800374e:	f8b5 30ea 	ldrh.w	r3, [r5, #234]	; 0xea
 8003752:	f8a4 30ea 	strh.w	r3, [r4, #234]	; 0xea
 8003756:	f895 30ec 	ldrb.w	r3, [r5, #236]	; 0xec
 800375a:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 800375e:	f8b5 30f0 	ldrh.w	r3, [r5, #240]	; 0xf0
 8003762:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
class SwipeContainer : public Container
 8003766:	4620      	mov	r0, r4
 8003768:	bd38      	pop	{r3, r4, r5, pc}
 800376a:	bf00      	nop
 800376c:	08031478 	.word	0x08031478
 8003770:	0803153c 	.word	0x0803153c
 8003774:	0802f38c 	.word	0x0802f38c
 8003778:	08031938 	.word	0x08031938
 800377c:	08031b1c 	.word	0x08031b1c

08003780 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 8003780:	b5f0      	push	{r4, r5, r6, r7, lr}
    if (&src == &buttonWithLabel3)
 8003782:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8003786:	4299      	cmp	r1, r3
{
 8003788:	b0c7      	sub	sp, #284	; 0x11c
 800378a:	4604      	mov	r4, r0
 800378c:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800378e:	d103      	bne.n	8003798 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003790:	f015 f846 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenWipeTransitionWest();
 8003794:	f001 fe2c 	bl	80053f0 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    if (&src == &buttonWithIcon_LP1)
 8003798:	f504 731e 	add.w	r3, r4, #632	; 0x278
 800379c:	429d      	cmp	r5, r3
 800379e:	d122      	bne.n	80037e6 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x66>
        SwipeContainer swipeContainer = swipeContainer1;
 80037a0:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 80037a4:	4631      	mov	r1, r6
 80037a6:	a809      	add	r0, sp, #36	; 0x24
 80037a8:	f7ff ff82 	bl	80036b0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 80037ac:	a801      	add	r0, sp, #4
 80037ae:	f7fd fc35 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 0, 12);
 80037b2:	eddd 7a03 	vldr	s15, [sp, #12]
 80037b6:	48cf      	ldr	r0, [pc, #828]	; (8003af4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 80037b8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80037bc:	230c      	movs	r3, #12
 80037be:	ee17 7a90 	vmov	r7, s15
 80037c2:	ee17 1a90 	vmov	r1, s15
 80037c6:	2200      	movs	r2, #0
 80037c8:	f7fd fe6c 	bl	80014a4 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 80037cc:	4aca      	ldr	r2, [pc, #808]	; (8003af8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 80037ce:	463b      	mov	r3, r7
 80037d0:	210a      	movs	r1, #10
 80037d2:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 80037d6:	f018 f9d1 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80037da:	4630      	mov	r0, r6
 80037dc:	f016 f908 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80037e0:	a809      	add	r0, sp, #36	; 0x24
 80037e2:	f00f f9d3 	bl	8012b8c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP2)
 80037e6:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80037ea:	429d      	cmp	r5, r3
 80037ec:	d122      	bne.n	8003834 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xb4>
        SwipeContainer swipeContainer = swipeContainer1;
 80037ee:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 80037f2:	4631      	mov	r1, r6
 80037f4:	a809      	add	r0, sp, #36	; 0x24
 80037f6:	f7ff ff5b 	bl	80036b0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 80037fa:	a801      	add	r0, sp, #4
 80037fc:	f7fd fc0e 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 1, 12);
 8003800:	eddd 7a03 	vldr	s15, [sp, #12]
 8003804:	48bb      	ldr	r0, [pc, #748]	; (8003af4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 8003806:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800380a:	230c      	movs	r3, #12
 800380c:	ee17 7a90 	vmov	r7, s15
 8003810:	ee17 1a90 	vmov	r1, s15
 8003814:	2201      	movs	r2, #1
 8003816:	f7fd fe45 	bl	80014a4 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 800381a:	4ab7      	ldr	r2, [pc, #732]	; (8003af8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 800381c:	463b      	mov	r3, r7
 800381e:	210a      	movs	r1, #10
 8003820:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 8003824:	f018 f9aa 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003828:	4630      	mov	r0, r6
 800382a:	f016 f8e1 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 800382e:	a809      	add	r0, sp, #36	; 0x24
 8003830:	f00f f9ac 	bl	8012b8c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP3)
 8003834:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8003838:	429d      	cmp	r5, r3
 800383a:	d122      	bne.n	8003882 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x102>
        SwipeContainer swipeContainer = swipeContainer1;
 800383c:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003840:	4631      	mov	r1, r6
 8003842:	a809      	add	r0, sp, #36	; 0x24
 8003844:	f7ff ff34 	bl	80036b0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003848:	a801      	add	r0, sp, #4
 800384a:	f7fd fbe7 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 2, 12);
 800384e:	eddd 7a03 	vldr	s15, [sp, #12]
 8003852:	48a8      	ldr	r0, [pc, #672]	; (8003af4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 8003854:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003858:	230c      	movs	r3, #12
 800385a:	ee17 7a90 	vmov	r7, s15
 800385e:	ee17 1a90 	vmov	r1, s15
 8003862:	2202      	movs	r2, #2
 8003864:	f7fd fe1e 	bl	80014a4 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 8003868:	4aa3      	ldr	r2, [pc, #652]	; (8003af8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 800386a:	463b      	mov	r3, r7
 800386c:	210a      	movs	r1, #10
 800386e:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 8003872:	f018 f983 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003876:	4630      	mov	r0, r6
 8003878:	f016 f8ba 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 800387c:	a809      	add	r0, sp, #36	; 0x24
 800387e:	f00f f985 	bl	8012b8c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP1)
 8003882:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8003886:	429d      	cmp	r5, r3
 8003888:	d122      	bne.n	80038d0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x150>
        SwipeContainer swipeContainer = swipeContainer1;
 800388a:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 800388e:	4631      	mov	r1, r6
 8003890:	a809      	add	r0, sp, #36	; 0x24
 8003892:	f7ff ff0d 	bl	80036b0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003896:	a801      	add	r0, sp, #4
 8003898:	f7fd fbc0 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 3, 12);
 800389c:	eddd 7a01 	vldr	s15, [sp, #4]
 80038a0:	4894      	ldr	r0, [pc, #592]	; (8003af4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 80038a2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80038a6:	230c      	movs	r3, #12
 80038a8:	ee17 7a90 	vmov	r7, s15
 80038ac:	ee17 1a90 	vmov	r1, s15
 80038b0:	2203      	movs	r2, #3
 80038b2:	f7fd fdf7 	bl	80014a4 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 80038b6:	4a90      	ldr	r2, [pc, #576]	; (8003af8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 80038b8:	463b      	mov	r3, r7
 80038ba:	210a      	movs	r1, #10
 80038bc:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 80038c0:	f018 f95c 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80038c4:	4630      	mov	r0, r6
 80038c6:	f016 f893 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80038ca:	a809      	add	r0, sp, #36	; 0x24
 80038cc:	f00f f95e 	bl	8012b8c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP2)
 80038d0:	f204 43cc 	addw	r3, r4, #1228	; 0x4cc
 80038d4:	429d      	cmp	r5, r3
 80038d6:	d122      	bne.n	800391e <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x19e>
        SwipeContainer swipeContainer = swipeContainer1;
 80038d8:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 80038dc:	4631      	mov	r1, r6
 80038de:	a809      	add	r0, sp, #36	; 0x24
 80038e0:	f7ff fee6 	bl	80036b0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 80038e4:	a801      	add	r0, sp, #4
 80038e6:	f7fd fb99 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 4, 12);
 80038ea:	eddd 7a01 	vldr	s15, [sp, #4]
 80038ee:	4881      	ldr	r0, [pc, #516]	; (8003af4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 80038f0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80038f4:	230c      	movs	r3, #12
 80038f6:	ee17 7a90 	vmov	r7, s15
 80038fa:	ee17 1a90 	vmov	r1, s15
 80038fe:	2204      	movs	r2, #4
 8003900:	f7fd fdd0 	bl	80014a4 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003904:	4a7c      	ldr	r2, [pc, #496]	; (8003af8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 8003906:	463b      	mov	r3, r7
 8003908:	210a      	movs	r1, #10
 800390a:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 800390e:	f018 f935 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003912:	4630      	mov	r0, r6
 8003914:	f016 f86c 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003918:	a809      	add	r0, sp, #36	; 0x24
 800391a:	f00f f937 	bl	8012b8c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP3)
 800391e:	f504 6392 	add.w	r3, r4, #1168	; 0x490
 8003922:	429d      	cmp	r5, r3
 8003924:	d122      	bne.n	800396c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1ec>
        SwipeContainer swipeContainer = swipeContainer1;
 8003926:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 800392a:	4631      	mov	r1, r6
 800392c:	a809      	add	r0, sp, #36	; 0x24
 800392e:	f7ff febf 	bl	80036b0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003932:	a801      	add	r0, sp, #4
 8003934:	f7fd fb72 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 5, 12);
 8003938:	eddd 7a01 	vldr	s15, [sp, #4]
 800393c:	486d      	ldr	r0, [pc, #436]	; (8003af4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 800393e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003942:	230c      	movs	r3, #12
 8003944:	ee17 7a90 	vmov	r7, s15
 8003948:	ee17 1a90 	vmov	r1, s15
 800394c:	2205      	movs	r2, #5
 800394e:	f7fd fda9 	bl	80014a4 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003952:	4a69      	ldr	r2, [pc, #420]	; (8003af8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 8003954:	463b      	mov	r3, r7
 8003956:	210a      	movs	r1, #10
 8003958:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 800395c:	f018 f90e 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003960:	4630      	mov	r0, r6
 8003962:	f016 f845 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003966:	a809      	add	r0, sp, #36	; 0x24
 8003968:	f00f f910 	bl	8012b8c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH1)
 800396c:	f504 63f3 	add.w	r3, r4, #1944	; 0x798
 8003970:	429d      	cmp	r5, r3
 8003972:	d122      	bne.n	80039ba <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x23a>
        SwipeContainer swipeContainer = swipeContainer1;
 8003974:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003978:	4631      	mov	r1, r6
 800397a:	a809      	add	r0, sp, #36	; 0x24
 800397c:	f7ff fe98 	bl	80036b0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003980:	a801      	add	r0, sp, #4
 8003982:	f7fd fb4b 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 6, 12);
 8003986:	eddd 7a07 	vldr	s15, [sp, #28]
 800398a:	485a      	ldr	r0, [pc, #360]	; (8003af4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 800398c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003990:	230c      	movs	r3, #12
 8003992:	ee17 7a90 	vmov	r7, s15
 8003996:	ee17 1a90 	vmov	r1, s15
 800399a:	2206      	movs	r2, #6
 800399c:	f7fd fd82 	bl	80014a4 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 80039a0:	4a55      	ldr	r2, [pc, #340]	; (8003af8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 80039a2:	463b      	mov	r3, r7
 80039a4:	210a      	movs	r1, #10
 80039a6:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 80039aa:	f018 f8e7 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80039ae:	4630      	mov	r0, r6
 80039b0:	f016 f81e 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80039b4:	a809      	add	r0, sp, #36	; 0x24
 80039b6:	f00f f8e9 	bl	8012b8c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH2)
 80039ba:	f204 735c 	addw	r3, r4, #1884	; 0x75c
 80039be:	429d      	cmp	r5, r3
 80039c0:	d122      	bne.n	8003a08 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x288>
        SwipeContainer swipeContainer = swipeContainer1;
 80039c2:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 80039c6:	4631      	mov	r1, r6
 80039c8:	a809      	add	r0, sp, #36	; 0x24
 80039ca:	f7ff fe71 	bl	80036b0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 80039ce:	a801      	add	r0, sp, #4
 80039d0:	f7fd fb24 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 7, 12);
 80039d4:	eddd 7a07 	vldr	s15, [sp, #28]
 80039d8:	4846      	ldr	r0, [pc, #280]	; (8003af4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 80039da:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80039de:	230c      	movs	r3, #12
 80039e0:	ee17 7a90 	vmov	r7, s15
 80039e4:	ee17 1a90 	vmov	r1, s15
 80039e8:	2207      	movs	r2, #7
 80039ea:	f7fd fd5b 	bl	80014a4 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 80039ee:	4a42      	ldr	r2, [pc, #264]	; (8003af8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 80039f0:	463b      	mov	r3, r7
 80039f2:	210a      	movs	r1, #10
 80039f4:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 80039f8:	f018 f8c0 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80039fc:	4630      	mov	r0, r6
 80039fe:	f015 fff7 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003a02:	a809      	add	r0, sp, #36	; 0x24
 8003a04:	f00f f8c2 	bl	8012b8c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH3)
 8003a08:	f504 63e4 	add.w	r3, r4, #1824	; 0x720
 8003a0c:	429d      	cmp	r5, r3
 8003a0e:	d122      	bne.n	8003a56 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2d6>
        SwipeContainer swipeContainer = swipeContainer1;
 8003a10:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003a14:	4631      	mov	r1, r6
 8003a16:	a809      	add	r0, sp, #36	; 0x24
 8003a18:	f7ff fe4a 	bl	80036b0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003a1c:	a801      	add	r0, sp, #4
 8003a1e:	f7fd fafd 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 8, 12);
 8003a22:	eddd 7a07 	vldr	s15, [sp, #28]
 8003a26:	4833      	ldr	r0, [pc, #204]	; (8003af4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 8003a28:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a2c:	230c      	movs	r3, #12
 8003a2e:	ee17 7a90 	vmov	r7, s15
 8003a32:	ee17 1a90 	vmov	r1, s15
 8003a36:	2208      	movs	r2, #8
 8003a38:	f7fd fd34 	bl	80014a4 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 8003a3c:	4a2e      	ldr	r2, [pc, #184]	; (8003af8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 8003a3e:	463b      	mov	r3, r7
 8003a40:	210a      	movs	r1, #10
 8003a42:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8003a46:	f018 f899 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003a4a:	4630      	mov	r0, r6
 8003a4c:	f015 ffd0 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003a50:	a809      	add	r0, sp, #36	; 0x24
 8003a52:	f00f f89b 	bl	8012b8c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH1)
 8003a56:	f604 2328 	addw	r3, r4, #2600	; 0xa28
 8003a5a:	429d      	cmp	r5, r3
 8003a5c:	d122      	bne.n	8003aa4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x324>
        SwipeContainer swipeContainer = swipeContainer1;
 8003a5e:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003a62:	4631      	mov	r1, r6
 8003a64:	a809      	add	r0, sp, #36	; 0x24
 8003a66:	f7ff fe23 	bl	80036b0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003a6a:	a801      	add	r0, sp, #4
 8003a6c:	f7fd fad6 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 9, 12);
 8003a70:	eddd 7a05 	vldr	s15, [sp, #20]
 8003a74:	481f      	ldr	r0, [pc, #124]	; (8003af4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 8003a76:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a7a:	230c      	movs	r3, #12
 8003a7c:	ee17 7a90 	vmov	r7, s15
 8003a80:	ee17 1a90 	vmov	r1, s15
 8003a84:	2209      	movs	r2, #9
 8003a86:	f7fd fd0d 	bl	80014a4 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003a8a:	4a1b      	ldr	r2, [pc, #108]	; (8003af8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 8003a8c:	463b      	mov	r3, r7
 8003a8e:	210a      	movs	r1, #10
 8003a90:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8003a94:	f018 f872 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003a98:	4630      	mov	r0, r6
 8003a9a:	f015 ffa9 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003a9e:	a809      	add	r0, sp, #36	; 0x24
 8003aa0:	f00f f874 	bl	8012b8c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH2)
 8003aa4:	f604 13ec 	addw	r3, r4, #2540	; 0x9ec
 8003aa8:	429d      	cmp	r5, r3
 8003aaa:	d127      	bne.n	8003afc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x37c>
        SwipeContainer swipeContainer = swipeContainer1;
 8003aac:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003ab0:	4631      	mov	r1, r6
 8003ab2:	a809      	add	r0, sp, #36	; 0x24
 8003ab4:	f7ff fdfc 	bl	80036b0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003ab8:	a801      	add	r0, sp, #4
 8003aba:	f7fd faaf 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 10, 12);
 8003abe:	eddd 7a05 	vldr	s15, [sp, #20]
 8003ac2:	480c      	ldr	r0, [pc, #48]	; (8003af4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 8003ac4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003ac8:	230c      	movs	r3, #12
 8003aca:	ee17 7a90 	vmov	r7, s15
 8003ace:	ee17 1a90 	vmov	r1, s15
 8003ad2:	220a      	movs	r2, #10
 8003ad4:	f7fd fce6 	bl	80014a4 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003ad8:	4a07      	ldr	r2, [pc, #28]	; (8003af8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 8003ada:	463b      	mov	r3, r7
 8003adc:	210a      	movs	r1, #10
 8003ade:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 8003ae2:	f018 f84b 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003ae6:	4630      	mov	r0, r6
 8003ae8:	f015 ff82 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003aec:	a809      	add	r0, sp, #36	; 0x24
 8003aee:	f00f f84d 	bl	8012b8c <_ZN8touchgfx14SwipeContainerD1Ev>
 8003af2:	e003      	b.n	8003afc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x37c>
 8003af4:	081e0000 	.word	0x081e0000
 8003af8:	0802f2ce 	.word	0x0802f2ce
    if (&src == &buttonWithIcon_RH3)
 8003afc:	f504 631b 	add.w	r3, r4, #2480	; 0x9b0
 8003b00:	429d      	cmp	r5, r3
 8003b02:	d122      	bne.n	8003b4a <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3ca>
        SwipeContainer swipeContainer = swipeContainer1;
 8003b04:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003b08:	4631      	mov	r1, r6
 8003b0a:	a809      	add	r0, sp, #36	; 0x24
 8003b0c:	f7ff fdd0 	bl	80036b0 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003b10:	a801      	add	r0, sp, #4
 8003b12:	f7fd fa83 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 11, 12);
 8003b16:	eddd 7a05 	vldr	s15, [sp, #20]
 8003b1a:	480d      	ldr	r0, [pc, #52]	; (8003b50 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3d0>)
 8003b1c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b20:	230c      	movs	r3, #12
 8003b22:	ee17 5a90 	vmov	r5, s15
 8003b26:	ee17 1a90 	vmov	r1, s15
 8003b2a:	220b      	movs	r2, #11
 8003b2c:	f7fd fcba 	bl	80014a4 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003b30:	4a08      	ldr	r2, [pc, #32]	; (8003b54 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3d4>)
 8003b32:	462b      	mov	r3, r5
 8003b34:	210a      	movs	r1, #10
 8003b36:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 8003b3a:	f018 f81f 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003b3e:	4630      	mov	r0, r6
 8003b40:	f015 ff56 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003b44:	a809      	add	r0, sp, #36	; 0x24
 8003b46:	f00f f821 	bl	8012b8c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8003b4a:	b047      	add	sp, #284	; 0x11c
 8003b4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003b4e:	bf00      	nop
 8003b50:	081e0000 	.word	0x081e0000
 8003b54:	0802f2ce 	.word	0x0802f2ce

08003b58 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003b58:	0152      	lsls	r2, r2, #5
 8003b5a:	0149      	lsls	r1, r1, #5
 8003b5c:	f010 bf6a 	b.w	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08003b60 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003b60:	0152      	lsls	r2, r2, #5
 8003b62:	0149      	lsls	r1, r1, #5
 8003b64:	f010 bf71 	b.w	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

08003b68 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8003b68:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8003b6a:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003b6c:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8003b70:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8003b74:	d004      	beq.n	8003b80 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 8003b76:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8003b7a:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8003b7c:	f010 be64 	b.w	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8003b80:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003b84:	4770      	bx	lr
	...

08003b88 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003b88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b8c:	ed2d 8b10 	vpush	{d8-d15}
 8003b90:	4604      	mov	r4, r0
 8003b92:	b0ad      	sub	sp, #180	; 0xb4
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8003b94:	46a1      	mov	r9, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8003b96:	2500      	movs	r5, #0
 8003b98:	f016 fac2 	bl	801a120 <_ZN8touchgfx6ScreenC1Ev>
 8003b9c:	4be5      	ldr	r3, [pc, #916]	; (8003f34 <_ZN23Calibration_PadViewBaseC1Ev+0x3ac>)
 8003b9e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003ba0:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003ba4:	2226      	movs	r2, #38	; 0x26
 8003ba6:	4629      	mov	r1, r5
 8003ba8:	4648      	mov	r0, r9
 8003baa:	f02a f80e 	bl	802dbca <memset>
 8003bae:	4648      	mov	r0, r9
 8003bb0:	f7ff fcce 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 8003bb4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003bb8:	26ff      	movs	r6, #255	; 0xff
 8003bba:	4bdf      	ldr	r3, [pc, #892]	; (8003f38 <_ZN23Calibration_PadViewBaseC1Ev+0x3b0>)
 8003bbc:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003bbe:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003bc0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003bc4:	4629      	mov	r1, r5
 8003bc6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003bca:	4640      	mov	r0, r8
        : color(col)
 8003bcc:	66a5      	str	r5, [r4, #104]	; 0x68
 8003bce:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003bd2:	f029 fffa 	bl	802dbca <memset>
 8003bd6:	4640      	mov	r0, r8
 8003bd8:	f7ff fcba 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 8003bdc:	4bd7      	ldr	r3, [pc, #860]	; (8003f3c <_ZN23Calibration_PadViewBaseC1Ev+0x3b4>)
 8003bde:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003be0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
 8003be4:	f8bd 30a4 	ldrh.w	r3, [sp, #164]	; 0xa4
 8003be8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8003bec:	ae29      	add	r6, sp, #164	; 0xa4
 8003bee:	4631      	mov	r1, r6
 8003bf0:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8003bf4:	4640      	mov	r0, r8
 8003bf6:	f012 f914 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003bfa:	4658      	mov	r0, fp
 8003bfc:	f012 fa48 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003c00:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8003c04:	4618      	mov	r0, r3
 8003c06:	ee08 3a10 	vmov	s16, r3
 8003c0a:	f00f f8ed 	bl	8012de8 <_ZN8touchgfx14SwipeContainerC1Ev>
 8003c0e:	f504 73ea 	add.w	r3, r4, #468	; 0x1d4
 8003c12:	4618      	mov	r0, r3
 8003c14:	ee08 3a90 	vmov	s17, r3
 8003c18:	f7ff fc88 	bl	800352c <_ZN8touchgfx9ContainerC1Ev>
 8003c1c:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8003c20:	4618      	mov	r0, r3
 8003c22:	9311      	str	r3, [sp, #68]	; 0x44
 8003c24:	f012 f8d6 	bl	8015dd4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003c28:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8003c2c:	f504 771e 	add.w	r7, r4, #632	; 0x278
 8003c30:	4618      	mov	r0, r3
 8003c32:	9312      	str	r3, [sp, #72]	; 0x48
 8003c34:	f012 f8ce 	bl	8015dd4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003c38:	4638      	mov	r0, r7
 8003c3a:	f012 f8cb 	bl	8015dd4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003c3e:	f504 732d 	add.w	r3, r4, #692	; 0x2b4
 8003c42:	4618      	mov	r0, r3
 8003c44:	ee0d 3a90 	vmov	s27, r3
 8003c48:	f7ff fd06 	bl	8003658 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003c4c:	f504 7340 	add.w	r3, r4, #768	; 0x300
 8003c50:	4618      	mov	r0, r3
 8003c52:	ee0e 3a10 	vmov	s28, r3
 8003c56:	f7ff fcff 	bl	8003658 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003c5a:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8003c5e:	4618      	mov	r0, r3
 8003c60:	ee0e 3a90 	vmov	s29, r3
 8003c64:	f7ff fcf8 	bl	8003658 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003c68:	f504 7366 	add.w	r3, r4, #920	; 0x398
 8003c6c:	4618      	mov	r0, r3
 8003c6e:	ee0a 3a90 	vmov	s21, r3
 8003c72:	f010 fdc9 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 8003c76:	f504 6381 	add.w	r3, r4, #1032	; 0x408
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003c7a:	4618      	mov	r0, r3
 8003c7c:	931c      	str	r3, [sp, #112]	; 0x70
 8003c7e:	f7ff fa6b 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003c82:	4baf      	ldr	r3, [pc, #700]	; (8003f40 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003c84:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
 8003c88:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003c8c:	f204 411c 	addw	r1, r4, #1052	; 0x41c
 8003c90:	f8c4 2410 	str.w	r2, [r4, #1040]	; 0x410
 8003c94:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003c96:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
 8003c9a:	f204 4a64 	addw	sl, r4, #1124	; 0x464
 8003c9e:	9107      	str	r1, [sp, #28]
 8003ca0:	f7ff fcba 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8003ca4:	4650      	mov	r0, sl
 8003ca6:	f7ff fc41 	bl	800352c <_ZN8touchgfx9ContainerC1Ev>
 8003caa:	f504 6192 	add.w	r1, r4, #1168	; 0x490
 8003cae:	4608      	mov	r0, r1
 8003cb0:	9113      	str	r1, [sp, #76]	; 0x4c
 8003cb2:	f012 f88f 	bl	8015dd4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003cb6:	f204 41cc 	addw	r1, r4, #1228	; 0x4cc
 8003cba:	4608      	mov	r0, r1
 8003cbc:	9114      	str	r1, [sp, #80]	; 0x50
 8003cbe:	f012 f889 	bl	8015dd4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003cc2:	f504 61a1 	add.w	r1, r4, #1288	; 0x508
 8003cc6:	4608      	mov	r0, r1
 8003cc8:	9115      	str	r1, [sp, #84]	; 0x54
 8003cca:	f012 f883 	bl	8015dd4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003cce:	f204 5144 	addw	r1, r4, #1348	; 0x544
 8003cd2:	4608      	mov	r0, r1
 8003cd4:	9108      	str	r1, [sp, #32]
 8003cd6:	f7ff fcbf 	bl	8003658 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003cda:	f504 61b2 	add.w	r1, r4, #1424	; 0x590
 8003cde:	4608      	mov	r0, r1
 8003ce0:	9109      	str	r1, [sp, #36]	; 0x24
 8003ce2:	f7ff fcb9 	bl	8003658 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003ce6:	f204 51dc 	addw	r1, r4, #1500	; 0x5dc
 8003cea:	4608      	mov	r0, r1
 8003cec:	910a      	str	r1, [sp, #40]	; 0x28
 8003cee:	f7ff fcb3 	bl	8003658 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003cf2:	f504 61c5 	add.w	r1, r4, #1576	; 0x628
 8003cf6:	4608      	mov	r0, r1
 8003cf8:	ee0b 1a10 	vmov	s22, r1
 8003cfc:	f010 fd84 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 8003d00:	f504 61d3 	add.w	r1, r4, #1688	; 0x698
 8003d04:	4608      	mov	r0, r1
 8003d06:	911d      	str	r1, [sp, #116]	; 0x74
 8003d08:	f7ff fa26 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003d0c:	4b8c      	ldr	r3, [pc, #560]	; (8003f40 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003d0e:	f8c4 3698 	str.w	r3, [r4, #1688]	; 0x698
 8003d12:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003d16:	f204 61ac 	addw	r1, r4, #1708	; 0x6ac
 8003d1a:	f8c4 26a0 	str.w	r2, [r4, #1696]	; 0x6a0
 8003d1e:	4608      	mov	r0, r1
 8003d20:	f8c4 56a4 	str.w	r5, [r4, #1700]	; 0x6a4
 8003d24:	ee0f 1a10 	vmov	s30, r1
 8003d28:	f7ff fc76 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8003d2c:	f204 61f4 	addw	r1, r4, #1780	; 0x6f4
 8003d30:	4608      	mov	r0, r1
 8003d32:	ee09 1a10 	vmov	s18, r1
 8003d36:	f7ff fbf9 	bl	800352c <_ZN8touchgfx9ContainerC1Ev>
 8003d3a:	f504 61e4 	add.w	r1, r4, #1824	; 0x720
 8003d3e:	4608      	mov	r0, r1
 8003d40:	9116      	str	r1, [sp, #88]	; 0x58
 8003d42:	f012 f847 	bl	8015dd4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003d46:	f204 715c 	addw	r1, r4, #1884	; 0x75c
 8003d4a:	4608      	mov	r0, r1
 8003d4c:	9117      	str	r1, [sp, #92]	; 0x5c
 8003d4e:	f012 f841 	bl	8015dd4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003d52:	f504 61f3 	add.w	r1, r4, #1944	; 0x798
 8003d56:	4608      	mov	r0, r1
 8003d58:	9118      	str	r1, [sp, #96]	; 0x60
 8003d5a:	f012 f83b 	bl	8015dd4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003d5e:	f204 71d4 	addw	r1, r4, #2004	; 0x7d4
 8003d62:	4608      	mov	r0, r1
 8003d64:	910b      	str	r1, [sp, #44]	; 0x2c
 8003d66:	f7ff fc77 	bl	8003658 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003d6a:	f504 6102 	add.w	r1, r4, #2080	; 0x820
 8003d6e:	4608      	mov	r0, r1
 8003d70:	910c      	str	r1, [sp, #48]	; 0x30
 8003d72:	f7ff fc71 	bl	8003658 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003d76:	f604 016c 	addw	r1, r4, #2156	; 0x86c
 8003d7a:	4608      	mov	r0, r1
 8003d7c:	910d      	str	r1, [sp, #52]	; 0x34
 8003d7e:	f7ff fc6b 	bl	8003658 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003d82:	f604 01b8 	addw	r1, r4, #2232	; 0x8b8
 8003d86:	4608      	mov	r0, r1
 8003d88:	ee0b 1a90 	vmov	s23, r1
 8003d8c:	f010 fd3c 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 8003d90:	f604 1128 	addw	r1, r4, #2344	; 0x928
 8003d94:	4608      	mov	r0, r1
 8003d96:	911e      	str	r1, [sp, #120]	; 0x78
 8003d98:	f7ff f9de 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003d9c:	4b68      	ldr	r3, [pc, #416]	; (8003f40 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003d9e:	f8c4 3928 	str.w	r3, [r4, #2344]	; 0x928
 8003da2:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003da6:	f604 113c 	addw	r1, r4, #2364	; 0x93c
 8003daa:	f8c4 2930 	str.w	r2, [r4, #2352]	; 0x930
 8003dae:	4608      	mov	r0, r1
 8003db0:	f8c4 5934 	str.w	r5, [r4, #2356]	; 0x934
 8003db4:	ee0f 1a90 	vmov	s31, r1
 8003db8:	f7ff fc2e 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8003dbc:	f604 1184 	addw	r1, r4, #2436	; 0x984
 8003dc0:	4608      	mov	r0, r1
 8003dc2:	ee09 1a90 	vmov	s19, r1
 8003dc6:	f7ff fbb1 	bl	800352c <_ZN8touchgfx9ContainerC1Ev>
 8003dca:	f504 611b 	add.w	r1, r4, #2480	; 0x9b0
 8003dce:	4608      	mov	r0, r1
 8003dd0:	9119      	str	r1, [sp, #100]	; 0x64
 8003dd2:	f011 ffff 	bl	8015dd4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003dd6:	f604 11ec 	addw	r1, r4, #2540	; 0x9ec
 8003dda:	4608      	mov	r0, r1
 8003ddc:	911a      	str	r1, [sp, #104]	; 0x68
 8003dde:	f011 fff9 	bl	8015dd4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003de2:	f604 2128 	addw	r1, r4, #2600	; 0xa28
 8003de6:	4608      	mov	r0, r1
 8003de8:	911b      	str	r1, [sp, #108]	; 0x6c
 8003dea:	f011 fff3 	bl	8015dd4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003dee:	f604 2164 	addw	r1, r4, #2660	; 0xa64
 8003df2:	4608      	mov	r0, r1
 8003df4:	910e      	str	r1, [sp, #56]	; 0x38
 8003df6:	f7ff fc2f 	bl	8003658 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003dfa:	f504 612b 	add.w	r1, r4, #2736	; 0xab0
 8003dfe:	4608      	mov	r0, r1
 8003e00:	910f      	str	r1, [sp, #60]	; 0x3c
 8003e02:	f7ff fc29 	bl	8003658 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e06:	f604 21fc 	addw	r1, r4, #2812	; 0xafc
 8003e0a:	4608      	mov	r0, r1
 8003e0c:	9110      	str	r1, [sp, #64]	; 0x40
 8003e0e:	f7ff fc23 	bl	8003658 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e12:	f604 3148 	addw	r1, r4, #2888	; 0xb48
 8003e16:	4608      	mov	r0, r1
 8003e18:	ee0c 1a10 	vmov	s24, r1
 8003e1c:	f010 fcf4 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 8003e20:	f604 31b8 	addw	r1, r4, #3000	; 0xbb8
 8003e24:	4608      	mov	r0, r1
 8003e26:	911f      	str	r1, [sp, #124]	; 0x7c
 8003e28:	f7ff f996 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003e2c:	4b44      	ldr	r3, [pc, #272]	; (8003f40 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003e2e:	f8c4 3bb8 	str.w	r3, [r4, #3000]	; 0xbb8
 8003e32:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003e36:	f604 31cc 	addw	r1, r4, #3020	; 0xbcc
 8003e3a:	f8c4 2bc0 	str.w	r2, [r4, #3008]	; 0xbc0
 8003e3e:	4608      	mov	r0, r1
 8003e40:	f8c4 5bc4 	str.w	r5, [r4, #3012]	; 0xbc4
 8003e44:	9103      	str	r1, [sp, #12]
 8003e46:	f7ff fbe7 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8003e4a:	f604 4114 	addw	r1, r4, #3092	; 0xc14
 8003e4e:	4608      	mov	r0, r1
 8003e50:	ee0c 1a90 	vmov	s25, r1
 8003e54:	f010 fcd8 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 8003e58:	f604 4184 	addw	r1, r4, #3204	; 0xc84
 8003e5c:	4608      	mov	r0, r1
 8003e5e:	9120      	str	r1, [sp, #128]	; 0x80
 8003e60:	f7ff f97a 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003e64:	4b36      	ldr	r3, [pc, #216]	; (8003f40 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003e66:	f8c4 3c84 	str.w	r3, [r4, #3204]	; 0xc84
 8003e6a:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003e6e:	f604 4198 	addw	r1, r4, #3224	; 0xc98
 8003e72:	f8c4 2c8c 	str.w	r2, [r4, #3212]	; 0xc8c
 8003e76:	4608      	mov	r0, r1
 8003e78:	f8c4 5c90 	str.w	r5, [r4, #3216]	; 0xc90
 8003e7c:	9104      	str	r1, [sp, #16]
 8003e7e:	f7ff fbcb 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8003e82:	f504 614e 	add.w	r1, r4, #3296	; 0xce0
 8003e86:	4608      	mov	r0, r1
 8003e88:	ee0d 1a10 	vmov	s26, r1
 8003e8c:	f010 fcbc 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 8003e90:	f504 6155 	add.w	r1, r4, #3408	; 0xd50
 8003e94:	4608      	mov	r0, r1
 8003e96:	9121      	str	r1, [sp, #132]	; 0x84
 8003e98:	f7ff f95e 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003e9c:	4b28      	ldr	r3, [pc, #160]	; (8003f40 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003e9e:	f8c4 3d50 	str.w	r3, [r4, #3408]	; 0xd50
 8003ea2:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003ea6:	f604 5364 	addw	r3, r4, #3428	; 0xd64
 8003eaa:	f8c4 2d58 	str.w	r2, [r4, #3416]	; 0xd58
 8003eae:	4618      	mov	r0, r3
 8003eb0:	f8c4 5d5c 	str.w	r5, [r4, #3420]	; 0xd5c
 8003eb4:	9305      	str	r3, [sp, #20]
 8003eb6:	f7ff fbaf 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8003eba:	f604 53ac 	addw	r3, r4, #3500	; 0xdac
 8003ebe:	4618      	mov	r0, r3
 8003ec0:	9306      	str	r3, [sp, #24]
 8003ec2:	f7ff fba9 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003ec6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003eca:	4a1e      	ldr	r2, [pc, #120]	; (8003f44 <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 8003ecc:	f8c3 2cf4 	str.w	r2, [r3, #3316]	; 0xcf4
 8003ed0:	4a1d      	ldr	r2, [pc, #116]	; (8003f48 <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 8003ed2:	f8c3 2cfc 	str.w	r2, [r3, #3324]	; 0xcfc
 8003ed6:	f8c3 4cf8 	str.w	r4, [r3, #3320]	; 0xcf8
 8003eda:	f8c3 5d00 	str.w	r5, [r3, #3328]	; 0xd00
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003ede:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003ee2:	f604 60e4 	addw	r0, r4, #3812	; 0xee4
 8003ee6:	f012 ff8f 	bl	8016e08 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003eea:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003eee:	462a      	mov	r2, r5
 8003ef0:	4648      	mov	r0, r9
 8003ef2:	9300      	str	r3, [sp, #0]
 8003ef4:	4629      	mov	r1, r5
 8003ef6:	23f0      	movs	r3, #240	; 0xf0
 8003ef8:	f7ff fb05 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8003efc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003f00:	66a3      	str	r3, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003f02:	1d23      	adds	r3, r4, #4
 8003f04:	4618      	mov	r0, r3
 8003f06:	4649      	mov	r1, r9
 8003f08:	ee0a 3a10 	vmov	s20, r3
 8003f0c:	f00e fbb0 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003f10:	462a      	mov	r2, r5
 8003f12:	4640      	mov	r0, r8
 8003f14:	4629      	mov	r1, r5
 8003f16:	f7ff fae9 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8003f1a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003f1c:	4640      	mov	r0, r8
 8003f1e:	4631      	mov	r1, r6
 8003f20:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003f24:	f011 ff7d 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003f28:	4641      	mov	r1, r8
 8003f2a:	ee1a 0a10 	vmov	r0, s20
 8003f2e:	f00e fb9f 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003f32:	e00b      	b.n	8003f4c <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>
 8003f34:	0802f4c4 	.word	0x0802f4c4
 8003f38:	080318d0 	.word	0x080318d0
 8003f3c:	08031b1c 	.word	0x08031b1c
 8003f40:	08031604 	.word	0x08031604
 8003f44:	0802f4ac 	.word	0x0802f4ac
 8003f48:	08003781 	.word	0x08003781
    buttonWithLabel3.setXY(33, 257);
 8003f4c:	4658      	mov	r0, fp
 8003f4e:	f240 1201 	movw	r2, #257	; 0x101
 8003f52:	2121      	movs	r1, #33	; 0x21
 8003f54:	f7ff faca 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8003f58:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003f5a:	4632      	mov	r2, r6
 8003f5c:	a928      	add	r1, sp, #160	; 0xa0
 8003f5e:	4658      	mov	r0, fp
 8003f60:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 8003f64:	2302      	movs	r3, #2
 8003f66:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003f6a:	f011 fd64 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003f6e:	233b      	movs	r3, #59	; 0x3b
        updateTextPosition();
 8003f70:	4658      	mov	r0, fp
 8003f72:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8003f76:	f7ff fafd 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8003f7a:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 8003f7e:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel3.setAction(buttonCallback);
 8003f82:	f504 53e7 	add.w	r3, r4, #7392	; 0x1ce0
 8003f86:	3314      	adds	r3, #20
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003f88:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003f8c:	4659      	mov	r1, fp
 8003f8e:	ee1a 0a10 	vmov	r0, s20
 8003f92:	9302      	str	r3, [sp, #8]
 8003f94:	f00e fb6c 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 8003f98:	ee18 0a10 	vmov	r0, s16
 8003f9c:	2255      	movs	r2, #85	; 0x55
 8003f9e:	4629      	mov	r1, r5
 8003fa0:	f7ff faa4 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8003fa4:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 8003fa6:	ee18 0a10 	vmov	r0, s16
 8003faa:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 8003fae:	4632      	mov	r2, r6
 8003fb0:	2307      	movs	r3, #7
 8003fb2:	a928      	add	r1, sp, #160	; 0xa0
 8003fb4:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003fb8:	f00e ffb4 	bl	8012f24 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(80, 140);
 8003fbc:	228c      	movs	r2, #140	; 0x8c
 8003fbe:	ee18 0a10 	vmov	r0, s16
 8003fc2:	2150      	movs	r1, #80	; 0x50
 8003fc4:	f00e fe5c 	bl	8012c80 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 8003fc8:	ee18 0a10 	vmov	r0, s16
 8003fcc:	2132      	movs	r1, #50	; 0x32
 8003fce:	f00e fdda 	bl	8012b86 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 8003fd2:	ee18 0a10 	vmov	r0, s16
 8003fd6:	2132      	movs	r1, #50	; 0x32
 8003fd8:	f00e fe50 	bl	8012c7c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 8003fdc:	4b47      	ldr	r3, [pc, #284]	; (80040fc <_ZN23Calibration_PadViewBaseC1Ev+0x574>)
    buttonWithIcon_LP3.setXY(194, 97);
 8003fde:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003fe0:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
 8003fe4:	2261      	movs	r2, #97	; 0x61
 8003fe6:	21c2      	movs	r1, #194	; 0xc2
 8003fe8:	f7ff fa80 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8003fec:	f04f 0809 	mov.w	r8, #9
 8003ff0:	f04f 0b01 	mov.w	fp, #1
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003ff4:	aa27      	add	r2, sp, #156	; 0x9c
 8003ff6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003ff8:	9600      	str	r6, [sp, #0]
 8003ffa:	ab28      	add	r3, sp, #160	; 0xa0
 8003ffc:	a926      	add	r1, sp, #152	; 0x98
 8003ffe:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8004002:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004006:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800400a:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800400e:	f011 fe4c 	bl	8015caa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004012:	9b02      	ldr	r3, [sp, #8]
 8004014:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 8004018:	9911      	ldr	r1, [sp, #68]	; 0x44
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 800401a:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 800401e:	ee18 0a90 	vmov	r0, s17
 8004022:	f00e fb25 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 8004026:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004028:	223d      	movs	r2, #61	; 0x3d
 800402a:	21c2      	movs	r1, #194	; 0xc2
 800402c:	f7ff fa5e 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004030:	aa27      	add	r2, sp, #156	; 0x9c
 8004032:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004034:	9600      	str	r6, [sp, #0]
 8004036:	ab28      	add	r3, sp, #160	; 0xa0
 8004038:	a926      	add	r1, sp, #152	; 0x98
 800403a:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800403e:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004042:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8004046:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800404a:	f011 fe2e 	bl	8015caa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800404e:	9b02      	ldr	r3, [sp, #8]
 8004050:	f8c4 3264 	str.w	r3, [r4, #612]	; 0x264
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 8004054:	9912      	ldr	r1, [sp, #72]	; 0x48
 8004056:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
 800405a:	ee18 0a90 	vmov	r0, s17
 800405e:	f00e fb07 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 8004062:	4638      	mov	r0, r7
 8004064:	2219      	movs	r2, #25
 8004066:	21c2      	movs	r1, #194	; 0xc2
 8004068:	f7ff fa40 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800406c:	aa27      	add	r2, sp, #156	; 0x9c
 800406e:	4638      	mov	r0, r7
 8004070:	ab28      	add	r3, sp, #160	; 0xa0
 8004072:	a926      	add	r1, sp, #152	; 0x98
 8004074:	9600      	str	r6, [sp, #0]
 8004076:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800407a:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800407e:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8004082:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8004086:	f011 fe10 	bl	8015caa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800408a:	9b02      	ldr	r3, [sp, #8]
 800408c:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 8004090:	4639      	mov	r1, r7
 8004092:	ee18 0a90 	vmov	r0, s17
 8004096:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800409a:	f00e fae9 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 800409e:	2268      	movs	r2, #104	; 0x68
 80040a0:	ee1d 0a90 	vmov	r0, s27
 80040a4:	210a      	movs	r1, #10
 80040a6:	f7ff fa21 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80040aa:	f04f 33ff 	mov.w	r3, #4294967295
 80040ae:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
        boundingArea = calculateBoundingArea();
 80040b2:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
        linespace = space;
 80040b6:	f8a4 52e8 	strh.w	r5, [r4, #744]	; 0x2e8
        boundingArea = calculateBoundingArea();
 80040ba:	af22      	add	r7, sp, #136	; 0x88
 80040bc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80040c0:	ee1d 1a90 	vmov	r1, s27
 80040c4:	4638      	mov	r0, r7
 80040c6:	4798      	blx	r3
 80040c8:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80040cc:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 80040d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80040d4:	4b0a      	ldr	r3, [pc, #40]	; (8004100 <_ZN23Calibration_PadViewBaseC1Ev+0x578>)
 80040d6:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 80040d8:	f604 59f4 	addw	r9, r4, #3572	; 0xdf4
 80040dc:	b92b      	cbnz	r3, 80040ea <_ZN23Calibration_PadViewBaseC1Ev+0x562>
 80040de:	4b09      	ldr	r3, [pc, #36]	; (8004104 <_ZN23Calibration_PadViewBaseC1Ev+0x57c>)
 80040e0:	4a09      	ldr	r2, [pc, #36]	; (8004108 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 80040e2:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80040e4:	4809      	ldr	r0, [pc, #36]	; (800410c <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 80040e6:	f029 fb6b 	bl	802d7c0 <__assert_func>
 80040ea:	4b09      	ldr	r3, [pc, #36]	; (8004110 <_ZN23Calibration_PadViewBaseC1Ev+0x588>)
 80040ec:	881b      	ldrh	r3, [r3, #0]
 80040ee:	2b26      	cmp	r3, #38	; 0x26
 80040f0:	d812      	bhi.n	8004118 <_ZN23Calibration_PadViewBaseC1Ev+0x590>
 80040f2:	4b08      	ldr	r3, [pc, #32]	; (8004114 <_ZN23Calibration_PadViewBaseC1Ev+0x58c>)
 80040f4:	4a04      	ldr	r2, [pc, #16]	; (8004108 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 80040f6:	2161      	movs	r1, #97	; 0x61
 80040f8:	e7f4      	b.n	80040e4 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>
 80040fa:	bf00      	nop
 80040fc:	00ac00f0 	.word	0x00ac00f0
 8004100:	200138ac 	.word	0x200138ac
 8004104:	0802f1cc 	.word	0x0802f1cc
 8004108:	0802f2d1 	.word	0x0802f2d1
 800410c:	0802f249 	.word	0x0802f249
 8004110:	200138b0 	.word	0x200138b0
 8004114:	0802f290 	.word	0x0802f290
        return texts->getText(typedTextId);
 8004118:	4bdb      	ldr	r3, [pc, #876]	; (8004488 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 800411a:	2126      	movs	r1, #38	; 0x26
 800411c:	6818      	ldr	r0, [r3, #0]
 800411e:	f006 f9f3 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8004122:	4ada      	ldr	r2, [pc, #872]	; (800448c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 8004124:	4603      	mov	r3, r0
 8004126:	210a      	movs	r1, #10
 8004128:	4648      	mov	r0, r9
 800412a:	f017 fd27 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP3.resizeToCurrentText();
 800412e:	ee1d 0a90 	vmov	r0, s27
        wc1 = value;
 8004132:	f8c4 92fc 	str.w	r9, [r4, #764]	; 0x2fc
 8004136:	f011 f8a3 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800413a:	4bd5      	ldr	r3, [pc, #852]	; (8004490 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 800413c:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 800413e:	ee1d 0a90 	vmov	r0, s27
 8004142:	2327      	movs	r3, #39	; 0x27
 8004144:	4631      	mov	r1, r6
 8004146:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800414a:	f011 f8b9 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 800414e:	ee1d 1a90 	vmov	r1, s27
 8004152:	ee18 0a90 	vmov	r0, s17
 8004156:	f00e fa8b 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 800415a:	ee1e 0a10 	vmov	r0, s28
 800415e:	2244      	movs	r2, #68	; 0x44
 8004160:	2116      	movs	r1, #22
 8004162:	f7ff f9c3 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8004166:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 800416a:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        color = newColor;
 800416e:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8004172:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8004176:	f8c4 2330 	str.w	r2, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 800417a:	ee1e 1a10 	vmov	r1, s28
 800417e:	4638      	mov	r0, r7
 8004180:	4798      	blx	r3
 8004182:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004186:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 800418a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800418e:	4ac1      	ldr	r2, [pc, #772]	; (8004494 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 8004190:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 8004192:	f604 6908 	addw	r9, r4, #3592	; 0xe08
 8004196:	2b00      	cmp	r3, #0
 8004198:	d0a1      	beq.n	80040de <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800419a:	4abf      	ldr	r2, [pc, #764]	; (8004498 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 800419c:	8813      	ldrh	r3, [r2, #0]
 800419e:	2b28      	cmp	r3, #40	; 0x28
 80041a0:	d9a7      	bls.n	80040f2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80041a2:	48b9      	ldr	r0, [pc, #740]	; (8004488 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80041a4:	2128      	movs	r1, #40	; 0x28
 80041a6:	6800      	ldr	r0, [r0, #0]
 80041a8:	f006 f9ae 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 80041ac:	4ab7      	ldr	r2, [pc, #732]	; (800448c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80041ae:	4603      	mov	r3, r0
 80041b0:	210a      	movs	r1, #10
 80041b2:	4648      	mov	r0, r9
 80041b4:	f017 fce2 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP2.resizeToCurrentText();
 80041b8:	ee1e 0a10 	vmov	r0, s28
 80041bc:	f8c4 9348 	str.w	r9, [r4, #840]	; 0x348
 80041c0:	f011 f85e 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80041c4:	4bb2      	ldr	r3, [pc, #712]	; (8004490 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80041c6:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 80041c8:	ee1e 0a10 	vmov	r0, s28
 80041cc:	2329      	movs	r3, #41	; 0x29
 80041ce:	4631      	mov	r1, r6
 80041d0:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80041d4:	f011 f874 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 80041d8:	ee1e 1a10 	vmov	r1, s28
 80041dc:	ee18 0a90 	vmov	r0, s17
 80041e0:	f00e fa46 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 80041e4:	2220      	movs	r2, #32
 80041e6:	ee1e 0a90 	vmov	r0, s29
 80041ea:	2116      	movs	r1, #22
 80041ec:	f7ff f97e 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 80041f0:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 80041f4:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 80041f8:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80041fc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8004200:	f8c4 137c 	str.w	r1, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 8004204:	4638      	mov	r0, r7
 8004206:	ee1e 1a90 	vmov	r1, s29
 800420a:	4798      	blx	r3
 800420c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004210:	f504 7362 	add.w	r3, r4, #904	; 0x388
 8004214:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004218:	499e      	ldr	r1, [pc, #632]	; (8004494 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 800421a:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 800421c:	f604 691c 	addw	r9, r4, #3612	; 0xe1c
 8004220:	2b00      	cmp	r3, #0
 8004222:	f43f af5c 	beq.w	80040de <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004226:	4a9c      	ldr	r2, [pc, #624]	; (8004498 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 8004228:	8813      	ldrh	r3, [r2, #0]
 800422a:	2b2a      	cmp	r3, #42	; 0x2a
 800422c:	f67f af61 	bls.w	80040f2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004230:	4895      	ldr	r0, [pc, #596]	; (8004488 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 8004232:	212a      	movs	r1, #42	; 0x2a
 8004234:	6800      	ldr	r0, [r0, #0]
 8004236:	f006 f967 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 800423a:	4a94      	ldr	r2, [pc, #592]	; (800448c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 800423c:	4603      	mov	r3, r0
 800423e:	210a      	movs	r1, #10
 8004240:	4648      	mov	r0, r9
 8004242:	f017 fc9b 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP1.resizeToCurrentText();
 8004246:	ee1e 0a90 	vmov	r0, s29
 800424a:	f8c4 9394 	str.w	r9, [r4, #916]	; 0x394
 800424e:	f011 f817 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004252:	4b8f      	ldr	r3, [pc, #572]	; (8004490 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 8004254:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004256:	ee1e 0a90 	vmov	r0, s29
 800425a:	2331      	movs	r3, #49	; 0x31
 800425c:	4631      	mov	r1, r6
 800425e:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    line1_LP.setPosition(0, 15, 240, 10);
 8004262:	f04f 090a 	mov.w	r9, #10
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004266:	f011 f82b 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1);
 800426a:	ee1e 1a90 	vmov	r1, s29
 800426e:	ee18 0a90 	vmov	r0, s17
 8004272:	f00e f9fd 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LP.setPosition(0, 15, 240, 10);
 8004276:	23f0      	movs	r3, #240	; 0xf0
 8004278:	ee1a 0a90 	vmov	r0, s21
 800427c:	220f      	movs	r2, #15
 800427e:	4629      	mov	r1, r5
 8004280:	f8cd 9000 	str.w	r9, [sp]
 8004284:	f7ff f93f 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004288:	f04f 3cff 	mov.w	ip, #4294967295
        canvasPainter = &painter;
 800428c:	991c      	ldr	r1, [sp, #112]	; 0x70
 800428e:	f8c4 c414 	str.w	ip, [r4, #1044]	; 0x414
    line1_LP.setStart(5, 5);
 8004292:	2205      	movs	r2, #5
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8004294:	f8a4 c418 	strh.w	ip, [r4, #1048]	; 0x418
 8004298:	ee1a 0a90 	vmov	r0, s21
 800429c:	f8c4 13c0 	str.w	r1, [r4, #960]	; 0x3c0
 80042a0:	4611      	mov	r1, r2
 80042a2:	f7ff fc59 	bl	8003b58 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LP.setEnd(235, 5);
 80042a6:	2205      	movs	r2, #5
 80042a8:	ee1a 0a90 	vmov	r0, s21
 80042ac:	21eb      	movs	r1, #235	; 0xeb
 80042ae:	f7ff fc57 	bl	8003b60 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LP.setLineWidth(1);
 80042b2:	ee1a 0a90 	vmov	r0, s21
 80042b6:	4659      	mov	r1, fp
 80042b8:	f7ff fc56 	bl	8003b68 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80042bc:	ee1a 0a90 	vmov	r0, s21
 80042c0:	4659      	mov	r1, fp
 80042c2:	f010 fbcd 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_LP);
 80042c6:	ee1a 1a90 	vmov	r1, s21
 80042ca:	ee18 0a90 	vmov	r0, s17
 80042ce:	f00e f9cf 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LP.setXY(96, 0);
 80042d2:	462a      	mov	r2, r5
 80042d4:	9807      	ldr	r0, [sp, #28]
 80042d6:	2160      	movs	r1, #96	; 0x60
 80042d8:	f7ff f908 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80042dc:	f04f 3eff 	mov.w	lr, #4294967295
 80042e0:	f8c4 e44c 	str.w	lr, [r4, #1100]	; 0x44c
        boundingArea = calculateBoundingArea();
 80042e4:	4638      	mov	r0, r7
 80042e6:	9907      	ldr	r1, [sp, #28]
        linespace = space;
 80042e8:	f8a4 5450 	strh.w	r5, [r4, #1104]	; 0x450
        boundingArea = calculateBoundingArea();
 80042ec:	f010 fd4e 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80042f0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80042f4:	f504 638b 	add.w	r3, r4, #1112	; 0x458
 80042f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80042fc:	4b64      	ldr	r3, [pc, #400]	; (8004490 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
    textArea1_LP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 80042fe:	9807      	ldr	r0, [sp, #28]
 8004300:	9329      	str	r3, [sp, #164]	; 0xa4
 8004302:	4631      	mov	r1, r6
 8004304:	2325      	movs	r3, #37	; 0x25
 8004306:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800430a:	f010 ffd9 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea1_LP);
 800430e:	9907      	ldr	r1, [sp, #28]
 8004310:	ee18 0a90 	vmov	r0, s17
 8004314:	f00e f9ac 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 8004318:	ee18 1a90 	vmov	r1, s17
 800431c:	ee18 0a10 	vmov	r0, s16
 8004320:	f00e fe89 	bl	8013036 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8004324:	4b5d      	ldr	r3, [pc, #372]	; (800449c <_ZN23Calibration_PadViewBaseC1Ev+0x914>)
    buttonWithIcon_RP3.setXY(194, 97);
 8004326:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8004328:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
 800432c:	2261      	movs	r2, #97	; 0x61
 800432e:	21c2      	movs	r1, #194	; 0xc2
 8004330:	f7ff f8dc 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004334:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8004338:	4673      	mov	r3, lr
 800433a:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 800433e:	4672      	mov	r2, lr
 8004340:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8004344:	4671      	mov	r1, lr
 8004346:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8004348:	9600      	str	r6, [sp, #0]
 800434a:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800434e:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004352:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8004356:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800435a:	f011 fca6 	bl	8015caa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800435e:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 8004360:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004362:	f8c4 74b8 	str.w	r7, [r4, #1208]	; 0x4b8
 8004366:	4650      	mov	r0, sl
 8004368:	f8c4 54c8 	str.w	r5, [r4, #1224]	; 0x4c8
 800436c:	f00e f980 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setXY(194, 61);
 8004370:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004372:	223d      	movs	r2, #61	; 0x3d
 8004374:	21c2      	movs	r1, #194	; 0xc2
 8004376:	f7ff f8b9 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800437a:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 800437e:	4673      	mov	r3, lr
 8004380:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 8004384:	4672      	mov	r2, lr
 8004386:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 800438a:	4671      	mov	r1, lr
 800438c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800438e:	9600      	str	r6, [sp, #0]
 8004390:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8004394:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004398:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800439c:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80043a0:	f011 fc83 	bl	8015caa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80043a4:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 80043a6:	9914      	ldr	r1, [sp, #80]	; 0x50
 80043a8:	f8c4 74f4 	str.w	r7, [r4, #1268]	; 0x4f4
 80043ac:	4650      	mov	r0, sl
 80043ae:	f8c4 5504 	str.w	r5, [r4, #1284]	; 0x504
 80043b2:	f00e f95d 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setXY(194, 25);
 80043b6:	9815      	ldr	r0, [sp, #84]	; 0x54
 80043b8:	2219      	movs	r2, #25
 80043ba:	21c2      	movs	r1, #194	; 0xc2
 80043bc:	f7ff f896 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80043c0:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 80043c4:	4673      	mov	r3, lr
 80043c6:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 80043ca:	4672      	mov	r2, lr
 80043cc:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 80043d0:	4671      	mov	r1, lr
 80043d2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80043d4:	9600      	str	r6, [sp, #0]
 80043d6:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80043da:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80043de:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80043e2:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80043e6:	f011 fc60 	bl	8015caa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80043ea:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 80043ec:	9915      	ldr	r1, [sp, #84]	; 0x54
 80043ee:	f8c4 7530 	str.w	r7, [r4, #1328]	; 0x530
 80043f2:	4650      	mov	r0, sl
 80043f4:	f8c4 5540 	str.w	r5, [r4, #1344]	; 0x540
 80043f8:	f00e f93a 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP3.setXY(10, 104);
 80043fc:	2268      	movs	r2, #104	; 0x68
 80043fe:	4649      	mov	r1, r9
 8004400:	9808      	ldr	r0, [sp, #32]
 8004402:	f7ff f873 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004406:	f04f 3eff 	mov.w	lr, #4294967295
 800440a:	f8c4 e574 	str.w	lr, [r4, #1396]	; 0x574
        linespace = space;
 800440e:	f8a4 5578 	strh.w	r5, [r4, #1400]	; 0x578
        return TextArea::BoundingArea();
 8004412:	4630      	mov	r0, r6
 8004414:	f7ff f8f2 	bl	80035fc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004418:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800441c:	f504 63b0 	add.w	r3, r4, #1408	; 0x580
 8004420:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004424:	491b      	ldr	r1, [pc, #108]	; (8004494 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 8004426:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 8004428:	f504 6763 	add.w	r7, r4, #3632	; 0xe30
 800442c:	2b00      	cmp	r3, #0
 800442e:	f43f ae56 	beq.w	80040de <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004432:	4a19      	ldr	r2, [pc, #100]	; (8004498 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 8004434:	8813      	ldrh	r3, [r2, #0]
 8004436:	2b2f      	cmp	r3, #47	; 0x2f
 8004438:	f67f ae5b 	bls.w	80040f2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 800443c:	4812      	ldr	r0, [pc, #72]	; (8004488 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 800443e:	212f      	movs	r1, #47	; 0x2f
 8004440:	6800      	ldr	r0, [r0, #0]
 8004442:	f006 f861 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8004446:	4a11      	ldr	r2, [pc, #68]	; (800448c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 8004448:	4603      	mov	r3, r0
 800444a:	4649      	mov	r1, r9
 800444c:	4638      	mov	r0, r7
 800444e:	f017 fb95 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 8004452:	9808      	ldr	r0, [sp, #32]
        wc1 = value;
 8004454:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
 8004458:	f010 ff12 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800445c:	4f0c      	ldr	r7, [pc, #48]	; (8004490 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 800445e:	9808      	ldr	r0, [sp, #32]
 8004460:	9729      	str	r7, [sp, #164]	; 0xa4
 8004462:	2330      	movs	r3, #48	; 0x30
 8004464:	4631      	mov	r1, r6
 8004466:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800446a:	f010 ff29 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 800446e:	9908      	ldr	r1, [sp, #32]
 8004470:	4650      	mov	r0, sl
 8004472:	f00e f8fd 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 8004476:	2244      	movs	r2, #68	; 0x44
 8004478:	2116      	movs	r1, #22
 800447a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800447c:	f7ff f836 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004480:	f04f 33ff 	mov.w	r3, #4294967295
 8004484:	e00c      	b.n	80044a0 <_ZN23Calibration_PadViewBaseC1Ev+0x918>
 8004486:	bf00      	nop
 8004488:	200138b8 	.word	0x200138b8
 800448c:	0802f309 	.word	0x0802f309
 8004490:	0802f37c 	.word	0x0802f37c
 8004494:	200138ac 	.word	0x200138ac
 8004498:	200138b0 	.word	0x200138b0
 800449c:	00ac00f0 	.word	0x00ac00f0
 80044a0:	f8c4 35c0 	str.w	r3, [r4, #1472]	; 0x5c0
        linespace = space;
 80044a4:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        return TextArea::BoundingArea();
 80044a8:	4630      	mov	r0, r6
 80044aa:	f7ff f8a7 	bl	80035fc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80044ae:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80044b2:	f204 53cc 	addw	r3, r4, #1484	; 0x5cc
 80044b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80044ba:	49da      	ldr	r1, [pc, #872]	; (8004824 <_ZN23Calibration_PadViewBaseC1Ev+0xc9c>)
 80044bc:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 80044be:	f604 6544 	addw	r5, r4, #3652	; 0xe44
 80044c2:	2b00      	cmp	r3, #0
 80044c4:	f43f ae0b 	beq.w	80040de <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80044c8:	4ad7      	ldr	r2, [pc, #860]	; (8004828 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 80044ca:	8813      	ldrh	r3, [r2, #0]
 80044cc:	2b2d      	cmp	r3, #45	; 0x2d
 80044ce:	f67f ae10 	bls.w	80040f2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80044d2:	48d6      	ldr	r0, [pc, #856]	; (800482c <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80044d4:	f8df b34c 	ldr.w	fp, [pc, #844]	; 8004824 <_ZN23Calibration_PadViewBaseC1Ev+0xc9c>
        return texts->getText(typedTextId);
 80044d8:	6800      	ldr	r0, [r0, #0]
 80044da:	212d      	movs	r1, #45	; 0x2d
 80044dc:	f006 f814 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 80044e0:	4ad3      	ldr	r2, [pc, #844]	; (8004830 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 80044e2:	4603      	mov	r3, r0
 80044e4:	4649      	mov	r1, r9
 80044e6:	4628      	mov	r0, r5
 80044e8:	f017 fb48 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 80044ec:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 80044ee:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 80044f2:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RP2.resizeToCurrentText();
 80044f4:	f010 fec4 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80044f8:	232e      	movs	r3, #46	; 0x2e
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 80044fa:	9809      	ldr	r0, [sp, #36]	; 0x24
 80044fc:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004500:	4629      	mov	r1, r5
 8004502:	9729      	str	r7, [sp, #164]	; 0xa4
 8004504:	f010 fedc 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 8004508:	9909      	ldr	r1, [sp, #36]	; 0x24
 800450a:	4650      	mov	r0, sl
 800450c:	f00e f8b0 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8004510:	f04f 36ff 	mov.w	r6, #4294967295
    textAreaCal_RP1.setXY(22, 32);
 8004514:	2220      	movs	r2, #32
 8004516:	2116      	movs	r1, #22
 8004518:	980a      	ldr	r0, [sp, #40]	; 0x28
 800451a:	f7fe ffe7 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 800451e:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
        linespace = space;
 8004522:	2600      	movs	r6, #0
 8004524:	f8a4 6610 	strh.w	r6, [r4, #1552]	; 0x610
        return TextArea::BoundingArea();
 8004528:	4628      	mov	r0, r5
 800452a:	f7ff f867 	bl	80035fc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800452e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004532:	f504 63c3 	add.w	r3, r4, #1560	; 0x618
 8004536:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800453a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 800453e:	f604 6758 	addw	r7, r4, #3672	; 0xe58
 8004542:	2b00      	cmp	r3, #0
 8004544:	f43f adcb 	beq.w	80040de <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004548:	4ab7      	ldr	r2, [pc, #732]	; (8004828 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 800454a:	8813      	ldrh	r3, [r2, #0]
 800454c:	2b2c      	cmp	r3, #44	; 0x2c
 800454e:	f67f add0 	bls.w	80040f2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004552:	48b6      	ldr	r0, [pc, #728]	; (800482c <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 8004554:	212c      	movs	r1, #44	; 0x2c
 8004556:	6800      	ldr	r0, [r0, #0]
 8004558:	f005 ffd6 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 800455c:	4ab4      	ldr	r2, [pc, #720]	; (8004830 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 800455e:	4603      	mov	r3, r0
 8004560:	4649      	mov	r1, r9
 8004562:	4638      	mov	r0, r7
 8004564:	f017 fb0a 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 8004568:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 800456a:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
 800456e:	f010 fe87 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004572:	4fb0      	ldr	r7, [pc, #704]	; (8004834 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004574:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004576:	9729      	str	r7, [sp, #164]	; 0xa4
 8004578:	f04f 0e31 	mov.w	lr, #49	; 0x31
 800457c:	4629      	mov	r1, r5
 800457e:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8004582:	f010 fe9d 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 8004586:	4650      	mov	r0, sl
 8004588:	990a      	ldr	r1, [sp, #40]	; 0x28
 800458a:	f00e f871 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RP.setPosition(0, 15, 240, 10);
 800458e:	ee1b 0a10 	vmov	r0, s22
 8004592:	23f0      	movs	r3, #240	; 0xf0
 8004594:	220f      	movs	r2, #15
 8004596:	4631      	mov	r1, r6
 8004598:	f8cd 9000 	str.w	r9, [sp]
 800459c:	f7fe ffb3 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 80045a0:	f04f 33ff 	mov.w	r3, #4294967295
 80045a4:	f04f 3cff 	mov.w	ip, #4294967295
    line1_RP.setStart(5, 5);
 80045a8:	2205      	movs	r2, #5
 80045aa:	f8c4 36a4 	str.w	r3, [r4, #1700]	; 0x6a4
 80045ae:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80045b0:	f8a4 c6a8 	strh.w	ip, [r4, #1704]	; 0x6a8
 80045b4:	f8c4 3650 	str.w	r3, [r4, #1616]	; 0x650
 80045b8:	4611      	mov	r1, r2
 80045ba:	ee1b 0a10 	vmov	r0, s22
 80045be:	f7ff facb 	bl	8003b58 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RP.setEnd(235, 5);
 80045c2:	2205      	movs	r2, #5
 80045c4:	ee1b 0a10 	vmov	r0, s22
 80045c8:	21eb      	movs	r1, #235	; 0xeb
 80045ca:	f7ff fac9 	bl	8003b60 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RP.setLineWidth(1);
 80045ce:	ee1b 0a10 	vmov	r0, s22
 80045d2:	2101      	movs	r1, #1
 80045d4:	f7ff fac8 	bl	8003b68 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80045d8:	ee1b 0a10 	vmov	r0, s22
 80045dc:	2101      	movs	r1, #1
 80045de:	f010 fa3f 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_RP);
 80045e2:	4650      	mov	r0, sl
 80045e4:	ee1b 1a10 	vmov	r1, s22
 80045e8:	f00e f842 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RP.setXY(92, 0);
 80045ec:	4632      	mov	r2, r6
 80045ee:	ee1f 0a10 	vmov	r0, s30
 80045f2:	215c      	movs	r1, #92	; 0x5c
 80045f4:	f7fe ff7a 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80045f8:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80045fc:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8004600:	4660      	mov	r0, ip
 8004602:	ee1f 1a10 	vmov	r1, s30
        color = newColor;
 8004606:	f8c4 36dc 	str.w	r3, [r4, #1756]	; 0x6dc
        linespace = space;
 800460a:	f8a4 66e0 	strh.w	r6, [r4, #1760]	; 0x6e0
        boundingArea = calculateBoundingArea();
 800460e:	f010 fbbd 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004612:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8004616:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 800461a:	ee1f 3a10 	vmov	r3, s30
 800461e:	333c      	adds	r3, #60	; 0x3c
 8004620:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004624:	232b      	movs	r3, #43	; 0x2b
    textArea1_RP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 8004626:	ee1f 0a10 	vmov	r0, s30
 800462a:	4629      	mov	r1, r5
 800462c:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004630:	9729      	str	r7, [sp, #164]	; 0xa4
 8004632:	f010 fe45 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea1_RP);
 8004636:	4650      	mov	r0, sl
 8004638:	ee1f 1a10 	vmov	r1, s30
 800463c:	f00e f818 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 8004640:	4651      	mov	r1, sl
 8004642:	ee18 0a10 	vmov	r0, s16
 8004646:	f00e fcf6 	bl	8013036 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 800464a:	497b      	ldr	r1, [pc, #492]	; (8004838 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
    buttonWithIcon_LH3.setXY(194, 97);
 800464c:	9816      	ldr	r0, [sp, #88]	; 0x58
 800464e:	f8c4 16fc 	str.w	r1, [r4, #1788]	; 0x6fc
 8004652:	2261      	movs	r2, #97	; 0x61
 8004654:	21c2      	movs	r1, #194	; 0xc2
 8004656:	f7fe ff49 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800465a:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 800465e:	4663      	mov	r3, ip
 8004660:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8004664:	4662      	mov	r2, ip
 8004666:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 800466a:	2709      	movs	r7, #9
 800466c:	4661      	mov	r1, ip
 800466e:	f04f 0801 	mov.w	r8, #1
 8004672:	9816      	ldr	r0, [sp, #88]	; 0x58
 8004674:	9500      	str	r5, [sp, #0]
 8004676:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 800467a:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 800467e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004682:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004686:	f011 fb10 	bl	8015caa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800468a:	9b02      	ldr	r3, [sp, #8]
 800468c:	f8c4 3748 	str.w	r3, [r4, #1864]	; 0x748
    swipeContainerHallLeft.add(buttonWithIcon_LH3);
 8004690:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004692:	f8c4 6758 	str.w	r6, [r4, #1880]	; 0x758
 8004696:	ee19 0a10 	vmov	r0, s18
 800469a:	f00d ffe9 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH2.setXY(194, 61);
 800469e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80046a0:	223d      	movs	r2, #61	; 0x3d
 80046a2:	21c2      	movs	r1, #194	; 0xc2
 80046a4:	f7fe ff22 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80046a8:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 80046ac:	4663      	mov	r3, ip
 80046ae:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 80046b2:	4662      	mov	r2, ip
 80046b4:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 80046b8:	4661      	mov	r1, ip
 80046ba:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80046bc:	9500      	str	r5, [sp, #0]
 80046be:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 80046c2:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 80046c6:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 80046ca:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 80046ce:	f011 faec 	bl	8015caa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80046d2:	9b02      	ldr	r3, [sp, #8]
 80046d4:	f8c4 3784 	str.w	r3, [r4, #1924]	; 0x784
    swipeContainerHallLeft.add(buttonWithIcon_LH2);
 80046d8:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80046da:	f8c4 6794 	str.w	r6, [r4, #1940]	; 0x794
 80046de:	ee19 0a10 	vmov	r0, s18
 80046e2:	f00d ffc5 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH1.setXY(194, 25);
 80046e6:	9818      	ldr	r0, [sp, #96]	; 0x60
 80046e8:	2219      	movs	r2, #25
 80046ea:	21c2      	movs	r1, #194	; 0xc2
 80046ec:	f7fe fefe 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80046f0:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 80046f4:	4663      	mov	r3, ip
 80046f6:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 80046fa:	4662      	mov	r2, ip
 80046fc:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8004700:	4661      	mov	r1, ip
 8004702:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004704:	9500      	str	r5, [sp, #0]
 8004706:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 800470a:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 800470e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004712:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004716:	f011 fac8 	bl	8015caa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800471a:	9b02      	ldr	r3, [sp, #8]
 800471c:	f8c4 37c0 	str.w	r3, [r4, #1984]	; 0x7c0
    swipeContainerHallLeft.add(buttonWithIcon_LH1);
 8004720:	9918      	ldr	r1, [sp, #96]	; 0x60
 8004722:	f8c4 67d0 	str.w	r6, [r4, #2000]	; 0x7d0
 8004726:	ee19 0a10 	vmov	r0, s18
 800472a:	f00d ffa1 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH3.setXY(10, 104);
 800472e:	2268      	movs	r2, #104	; 0x68
 8004730:	4649      	mov	r1, r9
 8004732:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004734:	f7fe feda 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004738:	f04f 3cff 	mov.w	ip, #4294967295
 800473c:	f8c4 c804 	str.w	ip, [r4, #2052]	; 0x804
        linespace = space;
 8004740:	f8a4 6808 	strh.w	r6, [r4, #2056]	; 0x808
        return TextArea::BoundingArea();
 8004744:	4628      	mov	r0, r5
 8004746:	f7fe ff59 	bl	80035fc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800474a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800474e:	f504 6301 	add.w	r3, r4, #2064	; 0x810
 8004752:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004756:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4NSV).getText());
 800475a:	f604 6a6c 	addw	sl, r4, #3692	; 0xe6c
 800475e:	2b00      	cmp	r3, #0
 8004760:	f43f acbd 	beq.w	80040de <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004764:	4a30      	ldr	r2, [pc, #192]	; (8004828 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 8004766:	8813      	ldrh	r3, [r2, #0]
 8004768:	2b24      	cmp	r3, #36	; 0x24
 800476a:	f67f acc2 	bls.w	80040f2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 800476e:	482f      	ldr	r0, [pc, #188]	; (800482c <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 8004770:	2124      	movs	r1, #36	; 0x24
 8004772:	6800      	ldr	r0, [r0, #0]
 8004774:	f005 fec8 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8004778:	4a2d      	ldr	r2, [pc, #180]	; (8004830 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 800477a:	4603      	mov	r3, r0
 800477c:	4649      	mov	r1, r9
 800477e:	4650      	mov	r0, sl
 8004780:	f017 f9fc 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH3.resizeToCurrentText();
 8004784:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 8004786:	f8c4 a81c 	str.w	sl, [r4, #2076]	; 0x81c
 800478a:	f010 fd79 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800478e:	4b29      	ldr	r3, [pc, #164]	; (8004834 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_LH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004790:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004792:	9329      	str	r3, [sp, #164]	; 0xa4
 8004794:	4629      	mov	r1, r5
 8004796:	2327      	movs	r3, #39	; 0x27
 8004798:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800479c:	f010 fd90 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH3);
 80047a0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80047a2:	ee19 0a10 	vmov	r0, s18
 80047a6:	f00d ff63 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH2.setXY(22, 68);
 80047aa:	2244      	movs	r2, #68	; 0x44
 80047ac:	2116      	movs	r1, #22
 80047ae:	980c      	ldr	r0, [sp, #48]	; 0x30
 80047b0:	f7fe fe9c 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80047b4:	f04f 3cff 	mov.w	ip, #4294967295
 80047b8:	f8c4 c850 	str.w	ip, [r4, #2128]	; 0x850
        linespace = space;
 80047bc:	f8a4 6854 	strh.w	r6, [r4, #2132]	; 0x854
        return TextArea::BoundingArea();
 80047c0:	4628      	mov	r0, r5
 80047c2:	f7fe ff1b 	bl	80035fc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80047c6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80047ca:	f604 035c 	addw	r3, r4, #2140	; 0x85c
 80047ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80047d2:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M8NH).getText());
 80047d6:	f504 6a68 	add.w	sl, r4, #3712	; 0xe80
 80047da:	2b00      	cmp	r3, #0
 80047dc:	f43f ac7f 	beq.w	80040de <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80047e0:	4a11      	ldr	r2, [pc, #68]	; (8004828 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 80047e2:	8813      	ldrh	r3, [r2, #0]
 80047e4:	2b23      	cmp	r3, #35	; 0x23
 80047e6:	f67f ac84 	bls.w	80040f2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80047ea:	4810      	ldr	r0, [pc, #64]	; (800482c <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 80047ec:	2123      	movs	r1, #35	; 0x23
 80047ee:	6800      	ldr	r0, [r0, #0]
 80047f0:	f005 fe8a 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 80047f4:	4a0e      	ldr	r2, [pc, #56]	; (8004830 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 80047f6:	4603      	mov	r3, r0
 80047f8:	4649      	mov	r1, r9
 80047fa:	4650      	mov	r0, sl
 80047fc:	f017 f9be 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH2.resizeToCurrentText();
 8004800:	980c      	ldr	r0, [sp, #48]	; 0x30
        wc1 = value;
 8004802:	f8c4 a868 	str.w	sl, [r4, #2152]	; 0x868
 8004806:	f010 fd3b 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800480a:	4b0a      	ldr	r3, [pc, #40]	; (8004834 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_LH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 800480c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800480e:	9329      	str	r3, [sp, #164]	; 0xa4
 8004810:	4629      	mov	r1, r5
 8004812:	2329      	movs	r3, #41	; 0x29
 8004814:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004818:	f010 fd52 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH2);
 800481c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800481e:	ee19 0a10 	vmov	r0, s18
 8004822:	e00b      	b.n	800483c <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>
 8004824:	200138ac 	.word	0x200138ac
 8004828:	200138b0 	.word	0x200138b0
 800482c:	200138b8 	.word	0x200138b8
 8004830:	0802f309 	.word	0x0802f309
 8004834:	0802f37c 	.word	0x0802f37c
 8004838:	00ac00f0 	.word	0x00ac00f0
 800483c:	f00d ff18 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH1.setXY(22, 32);
 8004840:	2220      	movs	r2, #32
 8004842:	2116      	movs	r1, #22
 8004844:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004846:	f7fe fe51 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800484a:	f04f 3cff 	mov.w	ip, #4294967295
 800484e:	f8c4 c89c 	str.w	ip, [r4, #2204]	; 0x89c
        linespace = space;
 8004852:	f8a4 68a0 	strh.w	r6, [r4, #2208]	; 0x8a0
        return TextArea::BoundingArea();
 8004856:	4628      	mov	r0, r5
 8004858:	f7fe fed0 	bl	80035fc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800485c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004860:	f604 03a8 	addw	r3, r4, #2216	; 0x8a8
 8004864:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004868:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I3S7).getText());
 800486c:	f604 6a94 	addw	sl, r4, #3732	; 0xe94
 8004870:	2b00      	cmp	r3, #0
 8004872:	f43f ac34 	beq.w	80040de <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004876:	4ada      	ldr	r2, [pc, #872]	; (8004be0 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004878:	8813      	ldrh	r3, [r2, #0]
 800487a:	2b22      	cmp	r3, #34	; 0x22
 800487c:	f67f ac39 	bls.w	80040f2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004880:	48d8      	ldr	r0, [pc, #864]	; (8004be4 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8004882:	2122      	movs	r1, #34	; 0x22
 8004884:	6800      	ldr	r0, [r0, #0]
 8004886:	f005 fe3f 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 800488a:	4ad7      	ldr	r2, [pc, #860]	; (8004be8 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 800488c:	4603      	mov	r3, r0
 800488e:	4649      	mov	r1, r9
 8004890:	4650      	mov	r0, sl
 8004892:	f017 f973 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH1.resizeToCurrentText();
 8004896:	980d      	ldr	r0, [sp, #52]	; 0x34
        wc1 = value;
 8004898:	f8c4 a8b4 	str.w	sl, [r4, #2228]	; 0x8b4
 800489c:	f010 fcf0 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80048a0:	f04f 0e31 	mov.w	lr, #49	; 0x31
 80048a4:	4bd1      	ldr	r3, [pc, #836]	; (8004bec <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
    textAreaCal_LH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80048a6:	980d      	ldr	r0, [sp, #52]	; 0x34
 80048a8:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 80048ac:	4629      	mov	r1, r5
 80048ae:	9329      	str	r3, [sp, #164]	; 0xa4
 80048b0:	f010 fd06 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH1);
 80048b4:	990d      	ldr	r1, [sp, #52]	; 0x34
 80048b6:	ee19 0a10 	vmov	r0, s18
 80048ba:	f00d fed9 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LH.setPosition(0, 15, 240, 10);
 80048be:	ee1b 0a90 	vmov	r0, s23
 80048c2:	23f0      	movs	r3, #240	; 0xf0
 80048c4:	220f      	movs	r2, #15
 80048c6:	4631      	mov	r1, r6
 80048c8:	f8cd 9000 	str.w	r9, [sp]
 80048cc:	f7fe fe1b 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 80048d0:	f04f 30ff 	mov.w	r0, #4294967295
 80048d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
    line1_LH.setStart(5, 5);
 80048d8:	2205      	movs	r2, #5
 80048da:	f8c4 0934 	str.w	r0, [r4, #2356]	; 0x934
 80048de:	981e      	ldr	r0, [sp, #120]	; 0x78
 80048e0:	f8a4 3938 	strh.w	r3, [r4, #2360]	; 0x938
 80048e4:	4611      	mov	r1, r2
 80048e6:	f8c4 08e0 	str.w	r0, [r4, #2272]	; 0x8e0
 80048ea:	ee1b 0a90 	vmov	r0, s23
 80048ee:	f7ff f933 	bl	8003b58 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LH.setEnd(235, 5);
 80048f2:	2205      	movs	r2, #5
 80048f4:	ee1b 0a90 	vmov	r0, s23
 80048f8:	21eb      	movs	r1, #235	; 0xeb
 80048fa:	f7ff f931 	bl	8003b60 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LH.setLineWidth(1);
 80048fe:	ee1b 0a90 	vmov	r0, s23
 8004902:	4641      	mov	r1, r8
 8004904:	f7ff f930 	bl	8003b68 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LH.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004908:	ee1b 0a90 	vmov	r0, s23
 800490c:	4641      	mov	r1, r8
 800490e:	f010 f8a7 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallLeft.add(line1_LH);
 8004912:	ee1b 1a90 	vmov	r1, s23
 8004916:	ee19 0a10 	vmov	r0, s18
 800491a:	f00d fea9 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LH.setXY(73, 0);
 800491e:	4632      	mov	r2, r6
 8004920:	ee1f 0a90 	vmov	r0, s31
 8004924:	2149      	movs	r1, #73	; 0x49
 8004926:	f7fe fde1 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800492a:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 800492e:	ee1f 1a90 	vmov	r1, s31
        color = newColor;
 8004932:	f8c4 096c 	str.w	r0, [r4, #2412]	; 0x96c
        linespace = space;
 8004936:	f8a4 6970 	strh.w	r6, [r4, #2416]	; 0x970
        boundingArea = calculateBoundingArea();
 800493a:	a822      	add	r0, sp, #136	; 0x88
 800493c:	f010 fa26 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004940:	ee1f 0a90 	vmov	r0, s31
 8004944:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8004948:	a822      	add	r0, sp, #136	; 0x88
 800494a:	c807      	ldmia	r0, {r0, r1, r2}
 800494c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004950:	4ba6      	ldr	r3, [pc, #664]	; (8004bec <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8004952:	9329      	str	r3, [sp, #164]	; 0xa4
    textArea1_LH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F9FQ));
 8004954:	4629      	mov	r1, r5
 8004956:	2321      	movs	r3, #33	; 0x21
 8004958:	ee1f 0a90 	vmov	r0, s31
 800495c:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004960:	f010 fcae 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textArea1_LH);
 8004964:	ee1f 1a90 	vmov	r1, s31
 8004968:	ee19 0a10 	vmov	r0, s18
 800496c:	f00d fe80 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallLeft);
 8004970:	ee19 1a10 	vmov	r1, s18
 8004974:	ee18 0a10 	vmov	r0, s16
 8004978:	f00e fb5d 	bl	8013036 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 800497c:	499c      	ldr	r1, [pc, #624]	; (8004bf0 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
    buttonWithIcon_RH3.setXY(194, 97);
 800497e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004980:	f8c4 198c 	str.w	r1, [r4, #2444]	; 0x98c
 8004984:	2261      	movs	r2, #97	; 0x61
 8004986:	21c2      	movs	r1, #194	; 0xc2
 8004988:	f7fe fdb0 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800498c:	a927      	add	r1, sp, #156	; 0x9c
 800498e:	460a      	mov	r2, r1
 8004990:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004992:	9500      	str	r5, [sp, #0]
 8004994:	ab28      	add	r3, sp, #160	; 0xa0
 8004996:	a926      	add	r1, sp, #152	; 0x98
 8004998:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 800499c:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 80049a0:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 80049a4:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 80049a8:	f011 f97f 	bl	8015caa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80049ac:	9b02      	ldr	r3, [sp, #8]
 80049ae:	f8c4 39d8 	str.w	r3, [r4, #2520]	; 0x9d8
    swipeContainerHallRight.add(buttonWithIcon_RH3);
 80049b2:	9919      	ldr	r1, [sp, #100]	; 0x64
 80049b4:	f8c4 69e8 	str.w	r6, [r4, #2536]	; 0x9e8
 80049b8:	ee19 0a90 	vmov	r0, s19
 80049bc:	f00d fe58 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH2.setXY(194, 61);
 80049c0:	981a      	ldr	r0, [sp, #104]	; 0x68
 80049c2:	223d      	movs	r2, #61	; 0x3d
 80049c4:	21c2      	movs	r1, #194	; 0xc2
 80049c6:	f7fe fd91 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80049ca:	a927      	add	r1, sp, #156	; 0x9c
 80049cc:	460a      	mov	r2, r1
 80049ce:	981a      	ldr	r0, [sp, #104]	; 0x68
 80049d0:	9500      	str	r5, [sp, #0]
 80049d2:	ab28      	add	r3, sp, #160	; 0xa0
 80049d4:	a926      	add	r1, sp, #152	; 0x98
 80049d6:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 80049da:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 80049de:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 80049e2:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 80049e6:	f011 f960 	bl	8015caa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80049ea:	9b02      	ldr	r3, [sp, #8]
 80049ec:	f8c4 3a14 	str.w	r3, [r4, #2580]	; 0xa14
    swipeContainerHallRight.add(buttonWithIcon_RH2);
 80049f0:	991a      	ldr	r1, [sp, #104]	; 0x68
 80049f2:	f8c4 6a24 	str.w	r6, [r4, #2596]	; 0xa24
 80049f6:	ee19 0a90 	vmov	r0, s19
 80049fa:	f00d fe39 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH1.setXY(194, 25);
 80049fe:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004a00:	2219      	movs	r2, #25
 8004a02:	21c2      	movs	r1, #194	; 0xc2
 8004a04:	f7fe fd72 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004a08:	a927      	add	r1, sp, #156	; 0x9c
 8004a0a:	460a      	mov	r2, r1
 8004a0c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004a0e:	9500      	str	r5, [sp, #0]
 8004a10:	ab28      	add	r3, sp, #160	; 0xa0
 8004a12:	a926      	add	r1, sp, #152	; 0x98
 8004a14:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004a18:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004a1c:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004a20:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004a24:	f011 f941 	bl	8015caa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004a28:	9b02      	ldr	r3, [sp, #8]
 8004a2a:	f8c4 3a50 	str.w	r3, [r4, #2640]	; 0xa50
    swipeContainerHallRight.add(buttonWithIcon_RH1);
 8004a2e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8004a30:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
 8004a34:	ee19 0a90 	vmov	r0, s19
 8004a38:	f00d fe1a 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH3.setXY(10, 104);
 8004a3c:	2268      	movs	r2, #104	; 0x68
 8004a3e:	4649      	mov	r1, r9
 8004a40:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004a42:	f7fe fd53 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004a46:	f04f 33ff 	mov.w	r3, #4294967295
 8004a4a:	f8c4 3a94 	str.w	r3, [r4, #2708]	; 0xa94
        return TextArea::BoundingArea();
 8004a4e:	4628      	mov	r0, r5
        linespace = space;
 8004a50:	f8a4 6a98 	strh.w	r6, [r4, #2712]	; 0xa98
 8004a54:	f7fe fdd2 	bl	80035fc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004a58:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004a5c:	f504 632a 	add.w	r3, r4, #2720	; 0xaa0
 8004a60:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004a64:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4PQQ).getText());
 8004a68:	f604 65a8 	addw	r5, r4, #3752	; 0xea8
 8004a6c:	2b00      	cmp	r3, #0
 8004a6e:	f43f ab36 	beq.w	80040de <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004a72:	4a5b      	ldr	r2, [pc, #364]	; (8004be0 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004a74:	8813      	ldrh	r3, [r2, #0]
 8004a76:	2b20      	cmp	r3, #32
 8004a78:	f67f ab3b 	bls.w	80040f2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004a7c:	f8df 8164 	ldr.w	r8, [pc, #356]	; 8004be4 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>
        : typedTextId(id)
 8004a80:	f8df a168 	ldr.w	sl, [pc, #360]	; 8004bec <_ZN23Calibration_PadViewBaseC1Ev+0x1064>
        return texts->getText(typedTextId);
 8004a84:	f8d8 0000 	ldr.w	r0, [r8]
 8004a88:	2120      	movs	r1, #32
 8004a8a:	f005 fd3d 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8004a8e:	4a56      	ldr	r2, [pc, #344]	; (8004be8 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004a90:	4603      	mov	r3, r0
 8004a92:	4649      	mov	r1, r9
 8004a94:	4628      	mov	r0, r5
 8004a96:	f017 f871 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH3.resizeToCurrentText();
 8004a9a:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8004a9c:	f8c4 5aac 	str.w	r5, [r4, #2732]	; 0xaac
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004aa0:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RH3.resizeToCurrentText();
 8004aa2:	f010 fbed 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004aa6:	2327      	movs	r3, #39	; 0x27
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004aa8:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004aaa:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004aae:	4629      	mov	r1, r5
 8004ab0:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004ab4:	f010 fc04 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH3);
 8004ab8:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004aba:	ee19 0a90 	vmov	r0, s19
 8004abe:	f00d fdd7 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8004ac2:	f04f 37ff 	mov.w	r7, #4294967295
    textAreaCal_RH2.setXY(22, 68);
 8004ac6:	2244      	movs	r2, #68	; 0x44
 8004ac8:	2116      	movs	r1, #22
 8004aca:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004acc:	f7fe fd0e 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8004ad0:	f8c4 7ae0 	str.w	r7, [r4, #2784]	; 0xae0
        linespace = space;
 8004ad4:	f8a4 6ae4 	strh.w	r6, [r4, #2788]	; 0xae4
        return TextArea::BoundingArea();
 8004ad8:	4628      	mov	r0, r5
 8004ada:	f7fe fd8f 	bl	80035fc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004ade:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004ae2:	f604 23ec 	addw	r3, r4, #2796	; 0xaec
 8004ae6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004aea:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YVQL).getText());
 8004aee:	f604 69bc 	addw	r9, r4, #3772	; 0xebc
 8004af2:	2b00      	cmp	r3, #0
 8004af4:	f43f aaf3 	beq.w	80040de <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004af8:	4a39      	ldr	r2, [pc, #228]	; (8004be0 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004afa:	8813      	ldrh	r3, [r2, #0]
 8004afc:	2b1f      	cmp	r3, #31
 8004afe:	f67f aaf8 	bls.w	80040f2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004b02:	211f      	movs	r1, #31
 8004b04:	f8d8 0000 	ldr.w	r0, [r8]
 8004b08:	f005 fcfe 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8004b0c:	4a36      	ldr	r2, [pc, #216]	; (8004be8 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004b0e:	4603      	mov	r3, r0
 8004b10:	210a      	movs	r1, #10
 8004b12:	4648      	mov	r0, r9
 8004b14:	f017 f832 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH2.resizeToCurrentText();
 8004b18:	980f      	ldr	r0, [sp, #60]	; 0x3c
        wc1 = value;
 8004b1a:	f8c4 9af8 	str.w	r9, [r4, #2808]	; 0xaf8
 8004b1e:	f010 fbaf 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004b22:	2329      	movs	r3, #41	; 0x29
    textAreaCal_RH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8004b24:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004b26:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004b2a:	4629      	mov	r1, r5
 8004b2c:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004b30:	f010 fbc6 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH2);
 8004b34:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004b36:	ee19 0a90 	vmov	r0, s19
 8004b3a:	f00d fd99 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH1.setXY(22, 32);
 8004b3e:	2220      	movs	r2, #32
 8004b40:	2116      	movs	r1, #22
 8004b42:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004b44:	f7fe fcd2 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004b48:	f8c4 7b2c 	str.w	r7, [r4, #2860]	; 0xb2c
        linespace = space;
 8004b4c:	f8a4 6b30 	strh.w	r6, [r4, #2864]	; 0xb30
        return TextArea::BoundingArea();
 8004b50:	4628      	mov	r0, r5
 8004b52:	f7fe fd53 	bl	80035fc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004b56:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004b5a:	f604 3338 	addw	r3, r4, #2872	; 0xb38
 8004b5e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004b62:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TIGW).getText());
 8004b66:	f504 696d 	add.w	r9, r4, #3792	; 0xed0
 8004b6a:	2b00      	cmp	r3, #0
 8004b6c:	f43f aab7 	beq.w	80040de <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004b70:	4a1b      	ldr	r2, [pc, #108]	; (8004be0 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004b72:	8813      	ldrh	r3, [r2, #0]
 8004b74:	2b1e      	cmp	r3, #30
 8004b76:	f67f aabc 	bls.w	80040f2 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004b7a:	f8d8 0000 	ldr.w	r0, [r8]
 8004b7e:	211e      	movs	r1, #30
 8004b80:	f005 fcc2 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8004b84:	4a18      	ldr	r2, [pc, #96]	; (8004be8 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004b86:	4603      	mov	r3, r0
 8004b88:	210a      	movs	r1, #10
 8004b8a:	4648      	mov	r0, r9
 8004b8c:	f016 fff6 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH1.resizeToCurrentText();
 8004b90:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 8004b92:	f8c4 9b44 	str.w	r9, [r4, #2884]	; 0xb44
 8004b96:	f010 fb73 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004b9a:	2331      	movs	r3, #49	; 0x31
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004b9c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004b9e:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004ba2:	4629      	mov	r1, r5
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004ba4:	f04f 090a 	mov.w	r9, #10
 8004ba8:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004bac:	f010 fb88 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH1);
 8004bb0:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004bb2:	ee19 0a90 	vmov	r0, s19
 8004bb6:	f00d fd5b 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004bba:	ee1c 0a10 	vmov	r0, s24
 8004bbe:	4631      	mov	r1, r6
 8004bc0:	f8cd 9000 	str.w	r9, [sp]
 8004bc4:	23f0      	movs	r3, #240	; 0xf0
 8004bc6:	220f      	movs	r2, #15
 8004bc8:	f7fe fc9d 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004bcc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004bce:	f8c4 3b70 	str.w	r3, [r4, #2928]	; 0xb70
    line1_RH_1.setStart(5, 5);
 8004bd2:	2205      	movs	r2, #5
 8004bd4:	ee1c 0a10 	vmov	r0, s24
 8004bd8:	4611      	mov	r1, r2
 8004bda:	f8c4 7bc4 	str.w	r7, [r4, #3012]	; 0xbc4
 8004bde:	e009      	b.n	8004bf4 <_ZN23Calibration_PadViewBaseC1Ev+0x106c>
 8004be0:	200138b0 	.word	0x200138b0
 8004be4:	200138b8 	.word	0x200138b8
 8004be8:	0802f309 	.word	0x0802f309
 8004bec:	0802f37c 	.word	0x0802f37c
 8004bf0:	00ac00f0 	.word	0x00ac00f0
 8004bf4:	f8a4 7bc8 	strh.w	r7, [r4, #3016]	; 0xbc8
 8004bf8:	f7fe ffae 	bl	8003b58 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RH_1.setEnd(235, 5);
 8004bfc:	2205      	movs	r2, #5
 8004bfe:	ee1c 0a10 	vmov	r0, s24
 8004c02:	21eb      	movs	r1, #235	; 0xeb
 8004c04:	f7fe ffac 	bl	8003b60 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RH_1.setLineWidth(1);
 8004c08:	ee1c 0a10 	vmov	r0, s24
 8004c0c:	2101      	movs	r1, #1
 8004c0e:	f7fe ffab 	bl	8003b68 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RH_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004c12:	ee1c 0a10 	vmov	r0, s24
 8004c16:	2101      	movs	r1, #1
 8004c18:	f00f ff22 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallRight.add(line1_RH_1);
 8004c1c:	ee1c 1a10 	vmov	r1, s24
 8004c20:	ee19 0a90 	vmov	r0, s19
 8004c24:	f10d 0888 	add.w	r8, sp, #136	; 0x88
 8004c28:	f00d fd22 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RH_1.setXY(73, 0);
 8004c2c:	4632      	mov	r2, r6
 8004c2e:	9803      	ldr	r0, [sp, #12]
 8004c30:	2149      	movs	r1, #73	; 0x49
 8004c32:	f7fe fc5b 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8004c36:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8004c38:	f8c4 7bfc 	str.w	r7, [r4, #3068]	; 0xbfc
        boundingArea = calculateBoundingArea();
 8004c3c:	4640      	mov	r0, r8
        linespace = space;
 8004c3e:	f8a4 6c00 	strh.w	r6, [r4, #3072]	; 0xc00
        boundingArea = calculateBoundingArea();
 8004c42:	f010 f8a3 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004c46:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004c4a:	9b03      	ldr	r3, [sp, #12]
 8004c4c:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004c50:	333c      	adds	r3, #60	; 0x3c
 8004c52:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004c56:	231d      	movs	r3, #29
    textArea1_RH_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IZSY));
 8004c58:	9803      	ldr	r0, [sp, #12]
 8004c5a:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004c5e:	4629      	mov	r1, r5
 8004c60:	f010 fb2e 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textArea1_RH_1);
 8004c64:	9903      	ldr	r1, [sp, #12]
 8004c66:	ee19 0a90 	vmov	r0, s19
 8004c6a:	f00d fd01 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallRight);
 8004c6e:	ee19 1a90 	vmov	r1, s19
 8004c72:	ee18 0a10 	vmov	r0, s16
 8004c76:	f00e f9de 	bl	8013036 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(0);
 8004c7a:	ee18 0a10 	vmov	r0, s16
 8004c7e:	4631      	mov	r1, r6
 8004c80:	f00e f9ca 	bl	8013018 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8004c84:	ee18 1a10 	vmov	r1, s16
 8004c88:	ee1a 0a10 	vmov	r0, s20
 8004c8c:	f00d fcf0 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8004c90:	ee1c 0a90 	vmov	r0, s25
 8004c94:	4631      	mov	r1, r6
 8004c96:	f8cd 9000 	str.w	r9, [sp]
 8004c9a:	23f0      	movs	r3, #240	; 0xf0
 8004c9c:	224b      	movs	r2, #75	; 0x4b
 8004c9e:	f7fe fc32 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004ca2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004ca6:	f8a4 3c94 	strh.w	r3, [r4, #3220]	; 0xc94
    line1_1.setStart(5, 5);
 8004caa:	2205      	movs	r2, #5
 8004cac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004cae:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
 8004cb2:	ee1c 0a90 	vmov	r0, s25
 8004cb6:	4611      	mov	r1, r2
 8004cb8:	f8c4 7c90 	str.w	r7, [r4, #3216]	; 0xc90
 8004cbc:	f7fe ff4c 	bl	8003b58 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(235, 5);
 8004cc0:	2205      	movs	r2, #5
 8004cc2:	ee1c 0a90 	vmov	r0, s25
 8004cc6:	21eb      	movs	r1, #235	; 0xeb
 8004cc8:	f7fe ff4a 	bl	8003b60 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(1);
 8004ccc:	ee1c 0a90 	vmov	r0, s25
 8004cd0:	2101      	movs	r1, #1
 8004cd2:	f7fe ff49 	bl	8003b68 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004cd6:	ee1c 0a90 	vmov	r0, s25
 8004cda:	2101      	movs	r1, #1
 8004cdc:	f00f fec0 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004ce0:	ee1c 1a90 	vmov	r1, s25
 8004ce4:	ee1a 0a10 	vmov	r0, s20
 8004ce8:	f00d fcc2 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 8004cec:	9804      	ldr	r0, [sp, #16]
 8004cee:	223c      	movs	r2, #60	; 0x3c
 8004cf0:	2146      	movs	r1, #70	; 0x46
 8004cf2:	f7fe fbfb 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8004cf6:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8004cf8:	f8c4 7cc8 	str.w	r7, [r4, #3272]	; 0xcc8
        boundingArea = calculateBoundingArea();
 8004cfc:	4640      	mov	r0, r8
        linespace = space;
 8004cfe:	f8a4 6ccc 	strh.w	r6, [r4, #3276]	; 0xccc
        boundingArea = calculateBoundingArea();
 8004d02:	f010 f843 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004d06:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004d0a:	9b04      	ldr	r3, [sp, #16]
 8004d0c:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004d10:	333c      	adds	r3, #60	; 0x3c
 8004d12:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004d16:	233a      	movs	r3, #58	; 0x3a
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8004d18:	9804      	ldr	r0, [sp, #16]
 8004d1a:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004d1e:	4629      	mov	r1, r5
 8004d20:	f010 face 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004d24:	9904      	ldr	r1, [sp, #16]
 8004d26:	ee1a 0a10 	vmov	r0, s20
 8004d2a:	f00d fca1 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8004d2e:	ee1d 0a10 	vmov	r0, s26
 8004d32:	4631      	mov	r1, r6
 8004d34:	f8cd 9000 	str.w	r9, [sp]
 8004d38:	23f0      	movs	r3, #240	; 0xf0
 8004d3a:	2232      	movs	r2, #50	; 0x32
 8004d3c:	f7fe fbe3 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004d40:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004d42:	f8c4 3d08 	str.w	r3, [r4, #3336]	; 0xd08
    line1.setStart(5, 5);
 8004d46:	2205      	movs	r2, #5
 8004d48:	ee1d 0a10 	vmov	r0, s26
 8004d4c:	4611      	mov	r1, r2
 8004d4e:	f8c4 7d5c 	str.w	r7, [r4, #3420]	; 0xd5c
 8004d52:	f8a4 7d60 	strh.w	r7, [r4, #3424]	; 0xd60
 8004d56:	f7fe feff 	bl	8003b58 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(235, 5);
 8004d5a:	2205      	movs	r2, #5
 8004d5c:	ee1d 0a10 	vmov	r0, s26
 8004d60:	21eb      	movs	r1, #235	; 0xeb
 8004d62:	f7fe fefd 	bl	8003b60 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(1);
 8004d66:	ee1d 0a10 	vmov	r0, s26
 8004d6a:	2101      	movs	r1, #1
 8004d6c:	f7fe fefc 	bl	8003b68 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004d70:	ee1d 0a10 	vmov	r0, s26
 8004d74:	2101      	movs	r1, #1
 8004d76:	f00f fe73 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004d7a:	ee1d 1a10 	vmov	r1, s26
 8004d7e:	ee1a 0a10 	vmov	r0, s20
 8004d82:	f00d fc75 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8004d86:	9805      	ldr	r0, [sp, #20]
 8004d88:	2223      	movs	r2, #35	; 0x23
 8004d8a:	2145      	movs	r1, #69	; 0x45
 8004d8c:	f7fe fbae 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8004d90:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8004d92:	f8c4 7d94 	str.w	r7, [r4, #3476]	; 0xd94
        boundingArea = calculateBoundingArea();
 8004d96:	4640      	mov	r0, r8
        linespace = space;
 8004d98:	f8a4 6d98 	strh.w	r6, [r4, #3480]	; 0xd98
        boundingArea = calculateBoundingArea();
 8004d9c:	f00f fff6 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004da0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004da4:	9b05      	ldr	r3, [sp, #20]
 8004da6:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004daa:	333c      	adds	r3, #60	; 0x3c
 8004dac:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004db0:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8004db2:	9805      	ldr	r0, [sp, #20]
 8004db4:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004db8:	4629      	mov	r1, r5
 8004dba:	f010 fa81 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004dbe:	9905      	ldr	r1, [sp, #20]
 8004dc0:	ee1a 0a10 	vmov	r0, s20
 8004dc4:	f00d fc54 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8004dc8:	9806      	ldr	r0, [sp, #24]
 8004dca:	220c      	movs	r2, #12
 8004dcc:	2136      	movs	r1, #54	; 0x36
 8004dce:	f7fe fb8d 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8004dd2:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8004dd4:	f8c4 7ddc 	str.w	r7, [r4, #3548]	; 0xddc
        boundingArea = calculateBoundingArea();
 8004dd8:	4640      	mov	r0, r8
        linespace = space;
 8004dda:	f8a4 6de0 	strh.w	r6, [r4, #3552]	; 0xde0
        boundingArea = calculateBoundingArea();
 8004dde:	f00f ffd5 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004de2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004de6:	9b06      	ldr	r3, [sp, #24]
 8004de8:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004dec:	333c      	adds	r3, #60	; 0x3c
 8004dee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004df2:	233d      	movs	r3, #61	; 0x3d
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8004df4:	9806      	ldr	r0, [sp, #24]
 8004df6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004dfa:	4629      	mov	r1, r5
 8004dfc:	f010 fa60 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004e00:	ee1a 0a10 	vmov	r0, s20
 8004e04:	9906      	ldr	r1, [sp, #24]
 8004e06:	f00d fc33 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004e0a:	4620      	mov	r0, r4
 8004e0c:	b02d      	add	sp, #180	; 0xb4
 8004e0e:	ecbd 8b10 	vpop	{d8-d15}
 8004e12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004e16:	bf00      	nop

08004e18 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8004e18:	4770      	bx	lr

08004e1a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8004e1a:	4770      	bx	lr

08004e1c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8004e1c:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8004e20:	6808      	ldr	r0, [r1, #0]
 8004e22:	6849      	ldr	r1, [r1, #4]
 8004e24:	c303      	stmia	r3!, {r0, r1}
    }
 8004e26:	4770      	bx	lr

08004e28 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004e28:	4770      	bx	lr

08004e2a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8004e2a:	4770      	bx	lr

08004e2c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8004e2c:	6041      	str	r1, [r0, #4]
    }
 8004e2e:	4770      	bx	lr

08004e30 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8004e30:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004e32:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8004e34:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8004e38:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8004e3c:	8002      	strh	r2, [r0, #0]
 8004e3e:	8042      	strh	r2, [r0, #2]
 8004e40:	8084      	strh	r4, [r0, #4]
 8004e42:	80c1      	strh	r1, [r0, #6]
        }
 8004e44:	bd10      	pop	{r4, pc}

08004e46 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8004e46:	4770      	bx	lr

08004e48 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8004e48:	4770      	bx	lr
	...

08004e4c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004e4c:	4b06      	ldr	r3, [pc, #24]	; (8004e68 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8004e4e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004e52:	2300      	movs	r3, #0
 8004e54:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004e58:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004e5c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004e60:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8004e64:	4770      	bx	lr
 8004e66:	bf00      	nop
 8004e68:	08005209 	.word	0x08005209

08004e6c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004e6c:	2301      	movs	r3, #1
 8004e6e:	7203      	strb	r3, [r0, #8]
    }
 8004e70:	4770      	bx	lr

08004e72 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8004e72:	4770      	bx	lr

08004e74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8004e74:	4770      	bx	lr

08004e76 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8004e76:	4770      	bx	lr

08004e78 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8004e78:	4770      	bx	lr

08004e7a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8004e7a:	4770      	bx	lr

08004e7c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8004e7c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8004e7e:	6840      	ldr	r0, [r0, #4]
 8004e80:	6803      	ldr	r3, [r0, #0]
 8004e82:	3110      	adds	r1, #16
 8004e84:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004e86:	4718      	bx	r3

08004e88 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8004e88:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8004e8a:	6840      	ldr	r0, [r0, #4]
 8004e8c:	6803      	ldr	r3, [r0, #0]
 8004e8e:	3110      	adds	r1, #16
 8004e90:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004e92:	4718      	bx	r3

08004e94 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8004e94:	4770      	bx	lr

08004e96 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8004e96:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8004e98:	6840      	ldr	r0, [r0, #4]
 8004e9a:	6803      	ldr	r3, [r0, #0]
 8004e9c:	3110      	adds	r1, #16
 8004e9e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004ea0:	4718      	bx	r3

08004ea2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8004ea2:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8004ea4:	6840      	ldr	r0, [r0, #4]
 8004ea6:	6803      	ldr	r3, [r0, #0]
 8004ea8:	3110      	adds	r1, #16
 8004eaa:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004eac:	4718      	bx	r3

08004eae <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8004eae:	4770      	bx	lr

08004eb0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8004eb0:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8004eb2:	68c2      	ldr	r2, [r0, #12]
 8004eb4:	6841      	ldr	r1, [r0, #4]
 8004eb6:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8004eb8:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8004eba:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8004ebe:	07d2      	lsls	r2, r2, #31
 8004ec0:	bf48      	it	mi
 8004ec2:	590a      	ldrmi	r2, [r1, r4]
 8004ec4:	689b      	ldr	r3, [r3, #8]
    }
 8004ec6:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8004eca:	bf48      	it	mi
 8004ecc:	58d3      	ldrmi	r3, [r2, r3]
 8004ece:	4718      	bx	r3

08004ed0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8004ed0:	6843      	ldr	r3, [r0, #4]
 8004ed2:	b12b      	cbz	r3, 8004ee0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8004ed4:	6883      	ldr	r3, [r0, #8]
 8004ed6:	b92b      	cbnz	r3, 8004ee4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8004ed8:	68c0      	ldr	r0, [r0, #12]
 8004eda:	f000 0001 	and.w	r0, r0, #1
 8004ede:	4770      	bx	lr
 8004ee0:	4618      	mov	r0, r3
 8004ee2:	4770      	bx	lr
 8004ee4:	2001      	movs	r0, #1
    }
 8004ee6:	4770      	bx	lr

08004ee8 <_ZN8touchgfx12NoTransitionD0Ev>:
 8004ee8:	b510      	push	{r4, lr}
 8004eea:	210c      	movs	r1, #12
 8004eec:	4604      	mov	r4, r0
 8004eee:	f027 fd80 	bl	802c9f2 <_ZdlPvj>
 8004ef2:	4620      	mov	r0, r4
 8004ef4:	bd10      	pop	{r4, pc}

08004ef6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004ef6:	b510      	push	{r4, lr}
 8004ef8:	2110      	movs	r1, #16
 8004efa:	4604      	mov	r4, r0
 8004efc:	f027 fd79 	bl	802c9f2 <_ZdlPvj>
 8004f00:	4620      	mov	r0, r4
 8004f02:	bd10      	pop	{r4, pc}

08004f04 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8004f04:	b510      	push	{r4, lr}
 8004f06:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8004f0a:	4604      	mov	r4, r0
 8004f0c:	f027 fd71 	bl	802c9f2 <_ZdlPvj>
 8004f10:	4620      	mov	r0, r4
 8004f12:	bd10      	pop	{r4, pc}

08004f14 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8004f14:	b510      	push	{r4, lr}
 8004f16:	2138      	movs	r1, #56	; 0x38
 8004f18:	4604      	mov	r4, r0
 8004f1a:	f027 fd6a 	bl	802c9f2 <_ZdlPvj>
 8004f1e:	4620      	mov	r0, r4
 8004f20:	bd10      	pop	{r4, pc}

08004f22 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8004f22:	b510      	push	{r4, lr}
 8004f24:	2128      	movs	r1, #40	; 0x28
 8004f26:	4604      	mov	r4, r0
 8004f28:	f027 fd63 	bl	802c9f2 <_ZdlPvj>
 8004f2c:	4620      	mov	r0, r4
 8004f2e:	bd10      	pop	{r4, pc}

08004f30 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8004f30:	b510      	push	{r4, lr}
 8004f32:	2138      	movs	r1, #56	; 0x38
 8004f34:	4604      	mov	r4, r0
 8004f36:	f027 fd5c 	bl	802c9f2 <_ZdlPvj>
 8004f3a:	4620      	mov	r0, r4
 8004f3c:	bd10      	pop	{r4, pc}

08004f3e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8004f3e:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8004f40:	f013 fc6e 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
 8004f44:	6803      	ldr	r3, [r0, #0]
    }
 8004f46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8004f4a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004f4c:	4718      	bx	r3
	...

08004f50 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004f50:	b513      	push	{r0, r1, r4, lr}
 8004f52:	4604      	mov	r4, r0
        animationCounter++;
 8004f54:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8004f56:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004f58:	3001      	adds	r0, #1
 8004f5a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004f5c:	4298      	cmp	r0, r3
        animationCounter++;
 8004f5e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004f60:	d905      	bls.n	8004f6e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8004f62:	2301      	movs	r3, #1
 8004f64:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004f66:	2300      	movs	r3, #0
 8004f68:	72a3      	strb	r3, [r4, #10]
    }
 8004f6a:	b002      	add	sp, #8
 8004f6c:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004f6e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004f72:	2100      	movs	r1, #0
 8004f74:	f015 fac4 	bl	801a500 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004f78:	f010 0201 	ands.w	r2, r0, #1
 8004f7c:	b283      	uxth	r3, r0
 8004f7e:	d12a      	bne.n	8004fd6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004f80:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004f82:	4a19      	ldr	r2, [pc, #100]	; (8004fe8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8004f84:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8004f88:	89e3      	ldrh	r3, [r4, #14]
 8004f8a:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8004f8c:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8004f90:	82a0      	strh	r0, [r4, #20]
 8004f92:	2000      	movs	r0, #0
 8004f94:	1ad2      	subs	r2, r2, r3
 8004f96:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 8004f9a:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8004f9c:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8004f9e:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004fa0:	4a12      	ldr	r2, [pc, #72]	; (8004fec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8004fa2:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8004fa6:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004fa8:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8004fac:	691b      	ldr	r3, [r3, #16]
 8004fae:	f8ad 1000 	strh.w	r1, [sp]
 8004fb2:	f8ad 2006 	strh.w	r2, [sp, #6]
 8004fb6:	4669      	mov	r1, sp
 8004fb8:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8004fba:	7aa3      	ldrb	r3, [r4, #10]
 8004fbc:	2b01      	cmp	r3, #1
 8004fbe:	d1d4      	bne.n	8004f6a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8004fc0:	4b0b      	ldr	r3, [pc, #44]	; (8004ff0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8004fc2:	781b      	ldrb	r3, [r3, #0]
 8004fc4:	2b00      	cmp	r3, #0
 8004fc6:	d0d0      	beq.n	8004f6a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004fc8:	f013 fc2a 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004fcc:	b002      	add	sp, #8
 8004fce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004fd2:	f013 bc2b 	b.w	801882c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004fd6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004fda:	2800      	cmp	r0, #0
 8004fdc:	bfd8      	it	le
 8004fde:	460a      	movle	r2, r1
 8004fe0:	4413      	add	r3, r2
 8004fe2:	81e3      	strh	r3, [r4, #14]
 8004fe4:	e7cd      	b.n	8004f82 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8004fe6:	bf00      	nop
 8004fe8:	20013848 	.word	0x20013848
 8004fec:	2001384a 	.word	0x2001384a
 8004ff0:	20013852 	.word	0x20013852

08004ff4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8004ff4:	b510      	push	{r4, lr}
 8004ff6:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8004ff8:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8004ffc:	b158      	cbz	r0, 8005016 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8004ffe:	6803      	ldr	r3, [r0, #0]
 8005000:	68db      	ldr	r3, [r3, #12]
 8005002:	4798      	blx	r3
 8005004:	b138      	cbz	r0, 8005016 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8005006:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800500a:	6803      	ldr	r3, [r0, #0]
 800500c:	689b      	ldr	r3, [r3, #8]
 800500e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8005010:	2300      	movs	r3, #0
 8005012:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8005016:	bd10      	pop	{r4, pc}

08005018 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8005018:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800501c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8005020:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005022:	68a8      	ldr	r0, [r5, #8]
 8005024:	6803      	ldr	r3, [r0, #0]
 8005026:	6a1b      	ldr	r3, [r3, #32]
 8005028:	4798      	blx	r3
 800502a:	2897      	cmp	r0, #151	; 0x97
 800502c:	d805      	bhi.n	800503a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 800502e:	4b46      	ldr	r3, [pc, #280]	; (8005148 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8005030:	4a46      	ldr	r2, [pc, #280]	; (800514c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8005032:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005034:	4846      	ldr	r0, [pc, #280]	; (8005150 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 8005036:	f028 fbc3 	bl	802d7c0 <__assert_func>
 800503a:	6868      	ldr	r0, [r5, #4]
 800503c:	6803      	ldr	r3, [r0, #0]
 800503e:	6a1b      	ldr	r3, [r3, #32]
 8005040:	4798      	blx	r3
 8005042:	280f      	cmp	r0, #15
 8005044:	d803      	bhi.n	800504e <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 8005046:	4b43      	ldr	r3, [pc, #268]	; (8005154 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8005048:	4a40      	ldr	r2, [pc, #256]	; (800514c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800504a:	21a4      	movs	r1, #164	; 0xa4
 800504c:	e7f2      	b.n	8005034 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800504e:	68e8      	ldr	r0, [r5, #12]
 8005050:	6803      	ldr	r3, [r0, #0]
 8005052:	6a1b      	ldr	r3, [r3, #32]
 8005054:	4798      	blx	r3
 8005056:	280b      	cmp	r0, #11
 8005058:	d803      	bhi.n	8005062 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 800505a:	4b3f      	ldr	r3, [pc, #252]	; (8005158 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 800505c:	4a3b      	ldr	r2, [pc, #236]	; (800514c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800505e:	21a5      	movs	r1, #165	; 0xa5
 8005060:	e7e8      	b.n	8005034 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8005062:	f013 fbdd 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005066:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8005160 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800506a:	3004      	adds	r0, #4
 800506c:	f013 fc3e 	bl	80188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005070:	f8d9 0000 	ldr.w	r0, [r9]
 8005074:	b110      	cbz	r0, 800507c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8005076:	6803      	ldr	r3, [r0, #0]
 8005078:	68db      	ldr	r3, [r3, #12]
 800507a:	4798      	blx	r3
    if (*currentTrans)
 800507c:	f8d9 0000 	ldr.w	r0, [r9]
 8005080:	b110      	cbz	r0, 8005088 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8005082:	6803      	ldr	r3, [r0, #0]
 8005084:	681b      	ldr	r3, [r3, #0]
 8005086:	4798      	blx	r3
    if (*currentScreen)
 8005088:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8005164 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 800508c:	f8d8 0000 	ldr.w	r0, [r8]
 8005090:	b110      	cbz	r0, 8005098 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8005092:	6803      	ldr	r3, [r0, #0]
 8005094:	695b      	ldr	r3, [r3, #20]
 8005096:	4798      	blx	r3
    if (*currentPresenter)
 8005098:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800509c:	b110      	cbz	r0, 80050a4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800509e:	6803      	ldr	r3, [r0, #0]
 80050a0:	685b      	ldr	r3, [r3, #4]
 80050a2:	4798      	blx	r3
    if (*currentScreen)
 80050a4:	f8d8 0000 	ldr.w	r0, [r8]
 80050a8:	b110      	cbz	r0, 80050b0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80050aa:	6803      	ldr	r3, [r0, #0]
 80050ac:	681b      	ldr	r3, [r3, #0]
 80050ae:	4798      	blx	r3
    if (*currentPresenter)
 80050b0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80050b4:	b110      	cbz	r0, 80050bc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80050b6:	6803      	ldr	r3, [r0, #0]
 80050b8:	689b      	ldr	r3, [r3, #8]
 80050ba:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80050bc:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80050be:	6803      	ldr	r3, [r0, #0]
 80050c0:	2100      	movs	r1, #0
 80050c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050c4:	4798      	blx	r3
        : screenContainer(0), done(false)
 80050c6:	f04f 0b00 	mov.w	fp, #0
 80050ca:	4b24      	ldr	r3, [pc, #144]	; (800515c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 80050cc:	6003      	str	r3, [r0, #0]
 80050ce:	4604      	mov	r4, r0
 80050d0:	f8c0 b004 	str.w	fp, [r0, #4]
 80050d4:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80050d8:	68a8      	ldr	r0, [r5, #8]
 80050da:	6803      	ldr	r3, [r0, #0]
 80050dc:	4659      	mov	r1, fp
 80050de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050e0:	4798      	blx	r3
 80050e2:	4606      	mov	r6, r0
 80050e4:	f005 fee4 	bl	800aeb0 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80050e8:	6868      	ldr	r0, [r5, #4]
 80050ea:	6803      	ldr	r3, [r0, #0]
 80050ec:	4659      	mov	r1, fp
 80050ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050f0:	4798      	blx	r3
 80050f2:	4631      	mov	r1, r6
 80050f4:	4605      	mov	r5, r0
 80050f6:	f005 feb7 	bl	800ae68 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 80050fa:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80050fe:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005102:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005106:	b1e5      	cbz	r5, 8005142 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8005108:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800510a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800510e:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8005110:	f8c5 a008 	str.w	sl, [r5, #8]
 8005114:	4630      	mov	r0, r6
 8005116:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8005118:	63f5      	str	r5, [r6, #60]	; 0x3c
 800511a:	4798      	blx	r3
    newPresenter->activate();
 800511c:	682b      	ldr	r3, [r5, #0]
 800511e:	4628      	mov	r0, r5
 8005120:	681b      	ldr	r3, [r3, #0]
 8005122:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005124:	4621      	mov	r1, r4
 8005126:	4630      	mov	r0, r6
 8005128:	f015 f9a6 	bl	801a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800512c:	6823      	ldr	r3, [r4, #0]
 800512e:	4620      	mov	r0, r4
 8005130:	691b      	ldr	r3, [r3, #16]
 8005132:	4798      	blx	r3
    newTransition->invalidate();
 8005134:	6823      	ldr	r3, [r4, #0]
 8005136:	695b      	ldr	r3, [r3, #20]
 8005138:	4620      	mov	r0, r4
}
 800513a:	b001      	add	sp, #4
 800513c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005140:	4718      	bx	r3
    model->bind(newPresenter);
 8005142:	462b      	mov	r3, r5
 8005144:	e7e1      	b.n	800510a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 8005146:	bf00      	nop
 8005148:	0802f4f8 	.word	0x0802f4f8
 800514c:	0802f586 	.word	0x0802f586
 8005150:	0802f694 	.word	0x0802f694
 8005154:	0802f6db 	.word	0x0802f6db
 8005158:	0802f77e 	.word	0x0802f77e
 800515c:	08030838 	.word	0x08030838
 8005160:	2001389c 	.word	0x2001389c
 8005164:	20013898 	.word	0x20013898

08005168 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8005168:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800516a:	4604      	mov	r4, r0
        animationCounter++;
 800516c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800516e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8005170:	3001      	adds	r0, #1
 8005172:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8005174:	4298      	cmp	r0, r3
        animationCounter++;
 8005176:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8005178:	d905      	bls.n	8005186 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 800517a:	2301      	movs	r3, #1
 800517c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800517e:	2300      	movs	r3, #0
 8005180:	72a3      	strb	r3, [r4, #10]
    }
 8005182:	b003      	add	sp, #12
 8005184:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005186:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800518a:	2100      	movs	r1, #0
 800518c:	f015 f9b8 	bl	801a500 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8005190:	f010 0201 	ands.w	r2, r0, #1
 8005194:	b283      	uxth	r3, r0
 8005196:	d128      	bne.n	80051ea <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005198:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800519a:	4b18      	ldr	r3, [pc, #96]	; (80051fc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800519c:	4818      	ldr	r0, [pc, #96]	; (8005200 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800519e:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 80051a0:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80051a2:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80051a4:	f9b0 0000 	ldrsh.w	r0, [r0]
 80051a8:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80051ac:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 80051ae:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 80051b0:	442b      	add	r3, r5
 80051b2:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80051b4:	b212      	sxth	r2, r2
 80051b6:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80051ba:	6803      	ldr	r3, [r0, #0]
 80051bc:	8322      	strh	r2, [r4, #24]
 80051be:	f8ad 2000 	strh.w	r2, [sp]
 80051c2:	2200      	movs	r2, #0
 80051c4:	691b      	ldr	r3, [r3, #16]
 80051c6:	f8ad 2002 	strh.w	r2, [sp, #2]
 80051ca:	4669      	mov	r1, sp
 80051cc:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80051ce:	7aa3      	ldrb	r3, [r4, #10]
 80051d0:	2b01      	cmp	r3, #1
 80051d2:	d1d6      	bne.n	8005182 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 80051d4:	4b0b      	ldr	r3, [pc, #44]	; (8005204 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 80051d6:	781b      	ldrb	r3, [r3, #0]
 80051d8:	2b00      	cmp	r3, #0
 80051da:	d0d2      	beq.n	8005182 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80051dc:	f013 fb20 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80051e0:	b003      	add	sp, #12
 80051e2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80051e6:	f013 bb21 	b.w	801882c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80051ea:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80051ee:	2800      	cmp	r0, #0
 80051f0:	bfd8      	it	le
 80051f2:	460a      	movle	r2, r1
 80051f4:	4413      	add	r3, r2
 80051f6:	81e3      	strh	r3, [r4, #14]
 80051f8:	e7cf      	b.n	800519a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 80051fa:	bf00      	nop
 80051fc:	20013848 	.word	0x20013848
 8005200:	2001384a 	.word	0x2001384a
 8005204:	20013852 	.word	0x20013852

08005208 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8005208:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800520c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8005210:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005212:	68a8      	ldr	r0, [r5, #8]
 8005214:	6803      	ldr	r3, [r0, #0]
 8005216:	6a1b      	ldr	r3, [r3, #32]
 8005218:	4798      	blx	r3
 800521a:	f5b0 5f90 	cmp.w	r0, #4608	; 0x1200
 800521e:	d205      	bcs.n	800522c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x24>
 8005220:	4b45      	ldr	r3, [pc, #276]	; (8005338 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x130>)
 8005222:	4a46      	ldr	r2, [pc, #280]	; (800533c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8005224:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005226:	4846      	ldr	r0, [pc, #280]	; (8005340 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8005228:	f028 faca 	bl	802d7c0 <__assert_func>
 800522c:	6868      	ldr	r0, [r5, #4]
 800522e:	6803      	ldr	r3, [r0, #0]
 8005230:	6a1b      	ldr	r3, [r3, #32]
 8005232:	4798      	blx	r3
 8005234:	280f      	cmp	r0, #15
 8005236:	d803      	bhi.n	8005240 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x38>
 8005238:	4b42      	ldr	r3, [pc, #264]	; (8005344 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 800523a:	4a40      	ldr	r2, [pc, #256]	; (800533c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 800523c:	21a4      	movs	r1, #164	; 0xa4
 800523e:	e7f2      	b.n	8005226 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005240:	68e8      	ldr	r0, [r5, #12]
 8005242:	6803      	ldr	r3, [r0, #0]
 8005244:	6a1b      	ldr	r3, [r3, #32]
 8005246:	4798      	blx	r3
 8005248:	280b      	cmp	r0, #11
 800524a:	d803      	bhi.n	8005254 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4c>
 800524c:	4b3e      	ldr	r3, [pc, #248]	; (8005348 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 800524e:	4a3b      	ldr	r2, [pc, #236]	; (800533c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8005250:	21a5      	movs	r1, #165	; 0xa5
 8005252:	e7e8      	b.n	8005226 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005254:	f013 fae4 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005258:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 8005350 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>
 800525c:	3004      	adds	r0, #4
 800525e:	f013 fb45 	bl	80188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005262:	f8d9 0000 	ldr.w	r0, [r9]
 8005266:	b110      	cbz	r0, 800526e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8005268:	6803      	ldr	r3, [r0, #0]
 800526a:	68db      	ldr	r3, [r3, #12]
 800526c:	4798      	blx	r3
    if (*currentTrans)
 800526e:	f8d9 0000 	ldr.w	r0, [r9]
 8005272:	b110      	cbz	r0, 800527a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8005274:	6803      	ldr	r3, [r0, #0]
 8005276:	681b      	ldr	r3, [r3, #0]
 8005278:	4798      	blx	r3
    if (*currentScreen)
 800527a:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8005354 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 800527e:	f8d8 0000 	ldr.w	r0, [r8]
 8005282:	b110      	cbz	r0, 800528a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005284:	6803      	ldr	r3, [r0, #0]
 8005286:	695b      	ldr	r3, [r3, #20]
 8005288:	4798      	blx	r3
    if (*currentPresenter)
 800528a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800528e:	b110      	cbz	r0, 8005296 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005290:	6803      	ldr	r3, [r0, #0]
 8005292:	685b      	ldr	r3, [r3, #4]
 8005294:	4798      	blx	r3
    if (*currentScreen)
 8005296:	f8d8 0000 	ldr.w	r0, [r8]
 800529a:	b110      	cbz	r0, 80052a2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 800529c:	6803      	ldr	r3, [r0, #0]
 800529e:	681b      	ldr	r3, [r3, #0]
 80052a0:	4798      	blx	r3
    if (*currentPresenter)
 80052a2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80052a6:	b110      	cbz	r0, 80052ae <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80052a8:	6803      	ldr	r3, [r0, #0]
 80052aa:	689b      	ldr	r3, [r3, #8]
 80052ac:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80052ae:	68e8      	ldr	r0, [r5, #12]
 80052b0:	6803      	ldr	r3, [r0, #0]
 80052b2:	2100      	movs	r1, #0
 80052b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052b6:	4798      	blx	r3
 80052b8:	f04f 0b00 	mov.w	fp, #0
 80052bc:	4b23      	ldr	r3, [pc, #140]	; (800534c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 80052be:	6003      	str	r3, [r0, #0]
 80052c0:	4604      	mov	r4, r0
 80052c2:	f8c0 b004 	str.w	fp, [r0, #4]
 80052c6:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80052ca:	68a8      	ldr	r0, [r5, #8]
 80052cc:	6803      	ldr	r3, [r0, #0]
 80052ce:	4659      	mov	r1, fp
 80052d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052d2:	4798      	blx	r3
 80052d4:	4606      	mov	r6, r0
 80052d6:	f005 faa7 	bl	800a828 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80052da:	6868      	ldr	r0, [r5, #4]
 80052dc:	6803      	ldr	r3, [r0, #0]
 80052de:	4659      	mov	r1, fp
 80052e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052e2:	4798      	blx	r3
 80052e4:	4631      	mov	r1, r6
 80052e6:	4605      	mov	r5, r0
 80052e8:	f005 fa78 	bl	800a7dc <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80052ec:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80052f0:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80052f4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80052f8:	b1e5      	cbz	r5, 8005334 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12c>
 80052fa:	1d2b      	adds	r3, r5, #4
 80052fc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005300:	6833      	ldr	r3, [r6, #0]
 8005302:	f8c5 a008 	str.w	sl, [r5, #8]
 8005306:	4630      	mov	r0, r6
 8005308:	68db      	ldr	r3, [r3, #12]
 800530a:	63f5      	str	r5, [r6, #60]	; 0x3c
 800530c:	4798      	blx	r3
    newPresenter->activate();
 800530e:	682b      	ldr	r3, [r5, #0]
 8005310:	4628      	mov	r0, r5
 8005312:	681b      	ldr	r3, [r3, #0]
 8005314:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005316:	4621      	mov	r1, r4
 8005318:	4630      	mov	r0, r6
 800531a:	f015 f8ad 	bl	801a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800531e:	6823      	ldr	r3, [r4, #0]
 8005320:	4620      	mov	r0, r4
 8005322:	691b      	ldr	r3, [r3, #16]
 8005324:	4798      	blx	r3
    newTransition->invalidate();
 8005326:	6823      	ldr	r3, [r4, #0]
 8005328:	695b      	ldr	r3, [r3, #20]
 800532a:	4620      	mov	r0, r4
}
 800532c:	b001      	add	sp, #4
 800532e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005332:	4718      	bx	r3
    model->bind(newPresenter);
 8005334:	462b      	mov	r3, r5
 8005336:	e7e1      	b.n	80052fc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf4>
 8005338:	0802f4f8 	.word	0x0802f4f8
 800533c:	0802f821 	.word	0x0802f821
 8005340:	0802f694 	.word	0x0802f694
 8005344:	0802f6db 	.word	0x0802f6db
 8005348:	0802f77e 	.word	0x0802f77e
 800534c:	08030838 	.word	0x08030838
 8005350:	2001389c 	.word	0x2001389c
 8005354:	20013898 	.word	0x20013898

08005358 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8005358:	4b04      	ldr	r3, [pc, #16]	; (800536c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800535a:	681b      	ldr	r3, [r3, #0]
 800535c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8005360:	b10a      	cbz	r2, 8005366 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8005362:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8005364:	b900      	cbnz	r0, 8005368 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8005366:	6898      	ldr	r0, [r3, #8]
    }
 8005368:	4770      	bx	lr
 800536a:	bf00      	nop
 800536c:	20013854 	.word	0x20013854

08005370 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8005370:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005372:	4604      	mov	r4, r0
 8005374:	4617      	mov	r7, r2
 8005376:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8005378:	f013 fb86 	bl	8018a88 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 800537c:	4b10      	ldr	r3, [pc, #64]	; (80053c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 800537e:	601c      	str	r4, [r3, #0]
      model(m)
 8005380:	4b10      	ldr	r3, [pc, #64]	; (80053c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8005382:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8005384:	4b10      	ldr	r3, [pc, #64]	; (80053c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8005386:	2500      	movs	r5, #0
 8005388:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 800538c:	4b0f      	ldr	r3, [pc, #60]	; (80053cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800538e:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8005392:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8005394:	6803      	ldr	r3, [r0, #0]
 8005396:	2101      	movs	r1, #1
 8005398:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800539a:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 800539e:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80053a2:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80053a4:	4628      	mov	r0, r5
 80053a6:	f005 f873 	bl	800a490 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80053aa:	f7ff ffd5 	bl	8005358 <_ZN8touchgfx3HAL3lcdEv>
 80053ae:	f01c ff6e 	bl	802228e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80053b2:	f7ff ffd1 	bl	8005358 <_ZN8touchgfx3HAL3lcdEv>
 80053b6:	f01c ffe5 	bl	8022384 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 80053ba:	4620      	mov	r0, r4
 80053bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80053be:	bf00      	nop
 80053c0:	200138a8 	.word	0x200138a8
 80053c4:	080307e4 	.word	0x080307e4
 80053c8:	080307cc 	.word	0x080307cc
 80053cc:	20013854 	.word	0x20013854

080053d0 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80053d0:	4b06      	ldr	r3, [pc, #24]	; (80053ec <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 80053d2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80053d6:	2300      	movs	r3, #0
 80053d8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80053dc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80053e0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80053e4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80053e8:	4770      	bx	lr
 80053ea:	bf00      	nop
 80053ec:	08005209 	.word	0x08005209

080053f0 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 80053f0:	4b06      	ldr	r3, [pc, #24]	; (800540c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 80053f2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80053f6:	2300      	movs	r3, #0
 80053f8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80053fc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005400:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005404:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005408:	4770      	bx	lr
 800540a:	bf00      	nop
 800540c:	08005875 	.word	0x08005875

08005410 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8005410:	4b06      	ldr	r3, [pc, #24]	; (800542c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8005412:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005416:	2300      	movs	r3, #0
 8005418:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800541c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005420:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005424:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005428:	4770      	bx	lr
 800542a:	bf00      	nop
 800542c:	08006419 	.word	0x08006419

08005430 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8005430:	4b06      	ldr	r3, [pc, #24]	; (800544c <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8005432:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005436:	2300      	movs	r3, #0
 8005438:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800543c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005440:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005444:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005448:	4770      	bx	lr
 800544a:	bf00      	nop
 800544c:	08005735 	.word	0x08005735

08005450 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8005450:	4b06      	ldr	r3, [pc, #24]	; (800546c <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8005452:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005456:	2300      	movs	r3, #0
 8005458:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800545c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005460:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005464:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005468:	4770      	bx	lr
 800546a:	bf00      	nop
 800546c:	080062d9 	.word	0x080062d9

08005470 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8005470:	4b06      	ldr	r3, [pc, #24]	; (800548c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8005472:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005476:	2300      	movs	r3, #0
 8005478:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800547c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005480:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005484:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005488:	4770      	bx	lr
 800548a:	bf00      	nop
 800548c:	08006199 	.word	0x08006199

08005490 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8005490:	4b06      	ldr	r3, [pc, #24]	; (80054ac <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8005492:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005496:	2300      	movs	r3, #0
 8005498:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800549c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80054a0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80054a4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80054a8:	4770      	bx	lr
 80054aa:	bf00      	nop
 80054ac:	08006059 	.word	0x08006059

080054b0 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 80054b0:	4b06      	ldr	r3, [pc, #24]	; (80054cc <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 80054b2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80054b6:	2300      	movs	r3, #0
 80054b8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80054bc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80054c0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80054c4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80054c8:	4770      	bx	lr
 80054ca:	bf00      	nop
 80054cc:	08005f19 	.word	0x08005f19

080054d0 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 80054d0:	4b06      	ldr	r3, [pc, #24]	; (80054ec <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 80054d2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80054d6:	2300      	movs	r3, #0
 80054d8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80054dc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80054e0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80054e4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80054e8:	4770      	bx	lr
 80054ea:	bf00      	nop
 80054ec:	080055f5 	.word	0x080055f5

080054f0 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 80054f0:	4b06      	ldr	r3, [pc, #24]	; (800550c <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 80054f2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80054f6:	2300      	movs	r3, #0
 80054f8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80054fc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005500:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005504:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005508:	4770      	bx	lr
 800550a:	bf00      	nop
 800550c:	08005dd9 	.word	0x08005dd9

08005510 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8005510:	4b06      	ldr	r3, [pc, #24]	; (800552c <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8005512:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005516:	2300      	movs	r3, #0
 8005518:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800551c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005520:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005524:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005528:	4770      	bx	lr
 800552a:	bf00      	nop
 800552c:	08005c99 	.word	0x08005c99

08005530 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8005530:	4b06      	ldr	r3, [pc, #24]	; (800554c <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8005532:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005536:	2300      	movs	r3, #0
 8005538:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800553c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005540:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005544:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005548:	4770      	bx	lr
 800554a:	bf00      	nop
 800554c:	08005b59 	.word	0x08005b59

08005550 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8005550:	4b06      	ldr	r3, [pc, #24]	; (800556c <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8005552:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005556:	2300      	movs	r3, #0
 8005558:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800555c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005560:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005564:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005568:	4770      	bx	lr
 800556a:	bf00      	nop
 800556c:	08005a19 	.word	0x08005a19

08005570 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8005570:	4b06      	ldr	r3, [pc, #24]	; (800558c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8005572:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005576:	2300      	movs	r3, #0
 8005578:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800557c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005580:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005584:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005588:	4770      	bx	lr
 800558a:	bf00      	nop
 800558c:	08005019 	.word	0x08005019

08005590 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8005590:	6803      	ldr	r3, [r0, #0]
 8005592:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005594:	4718      	bx	r3
	...

08005598 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8005598:	4b12      	ldr	r3, [pc, #72]	; (80055e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 800559a:	b513      	push	{r0, r1, r4, lr}
          solid()
 800559c:	6003      	str	r3, [r0, #0]
 800559e:	f44f 7380 	mov.w	r3, #256	; 0x100
 80055a2:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 80055a4:	4b10      	ldr	r3, [pc, #64]	; (80055e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 80055a6:	7241      	strb	r1, [r0, #9]
 80055a8:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80055aa:	4910      	ldr	r1, [pc, #64]	; (80055ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 80055ac:	4b10      	ldr	r3, [pc, #64]	; (80055f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80055ae:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 80055b2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80055b6:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 80055b8:	2200      	movs	r2, #0
 80055ba:	6042      	str	r2, [r0, #4]
 80055bc:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 80055be:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 80055c0:	81c2      	strh	r2, [r0, #14]
          solid()
 80055c2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80055c6:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80055ca:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 80055ce:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 80055d2:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80055d4:	9100      	str	r1, [sp, #0]
 80055d6:	3010      	adds	r0, #16
 80055d8:	4611      	mov	r1, r2
 80055da:	f7fd ff94 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 80055de:	4620      	mov	r0, r4
 80055e0:	b002      	add	sp, #8
 80055e2:	bd10      	pop	{r4, pc}
 80055e4:	08030880 	.word	0x08030880
 80055e8:	08030764 	.word	0x08030764
 80055ec:	2001384a 	.word	0x2001384a
 80055f0:	20013848 	.word	0x20013848

080055f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 80055f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80055f8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80055fc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80055fe:	68a0      	ldr	r0, [r4, #8]
 8005600:	6803      	ldr	r3, [r0, #0]
 8005602:	6a1b      	ldr	r3, [r3, #32]
 8005604:	4798      	blx	r3
 8005606:	f241 13c3 	movw	r3, #4547	; 0x11c3
 800560a:	4298      	cmp	r0, r3
 800560c:	d805      	bhi.n	800561a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x26>
 800560e:	4b42      	ldr	r3, [pc, #264]	; (8005718 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8005610:	4a42      	ldr	r2, [pc, #264]	; (800571c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8005612:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005614:	4842      	ldr	r0, [pc, #264]	; (8005720 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8005616:	f028 f8d3 	bl	802d7c0 <__assert_func>
 800561a:	6860      	ldr	r0, [r4, #4]
 800561c:	6803      	ldr	r3, [r0, #0]
 800561e:	6a1b      	ldr	r3, [r3, #32]
 8005620:	4798      	blx	r3
 8005622:	280f      	cmp	r0, #15
 8005624:	d803      	bhi.n	800562e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x3a>
 8005626:	4b3f      	ldr	r3, [pc, #252]	; (8005724 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8005628:	4a3c      	ldr	r2, [pc, #240]	; (800571c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 800562a:	21a4      	movs	r1, #164	; 0xa4
 800562c:	e7f2      	b.n	8005614 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800562e:	68e0      	ldr	r0, [r4, #12]
 8005630:	6803      	ldr	r3, [r0, #0]
 8005632:	6a1b      	ldr	r3, [r3, #32]
 8005634:	4798      	blx	r3
 8005636:	2837      	cmp	r0, #55	; 0x37
 8005638:	d803      	bhi.n	8005642 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4e>
 800563a:	4b3b      	ldr	r3, [pc, #236]	; (8005728 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 800563c:	4a37      	ldr	r2, [pc, #220]	; (800571c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 800563e:	21a5      	movs	r1, #165	; 0xa5
 8005640:	e7e8      	b.n	8005614 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005642:	f013 f8ed 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005646:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800572c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 800564a:	3004      	adds	r0, #4
 800564c:	f013 f94e 	bl	80188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005650:	f8d9 0000 	ldr.w	r0, [r9]
 8005654:	b110      	cbz	r0, 800565c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8005656:	6803      	ldr	r3, [r0, #0]
 8005658:	68db      	ldr	r3, [r3, #12]
 800565a:	4798      	blx	r3
    if (*currentTrans)
 800565c:	f8d9 0000 	ldr.w	r0, [r9]
 8005660:	b110      	cbz	r0, 8005668 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8005662:	6803      	ldr	r3, [r0, #0]
 8005664:	681b      	ldr	r3, [r3, #0]
 8005666:	4798      	blx	r3
    if (*currentScreen)
 8005668:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005730 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 800566c:	f8d8 0000 	ldr.w	r0, [r8]
 8005670:	b110      	cbz	r0, 8005678 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005672:	6803      	ldr	r3, [r0, #0]
 8005674:	695b      	ldr	r3, [r3, #20]
 8005676:	4798      	blx	r3
    if (*currentPresenter)
 8005678:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800567c:	b110      	cbz	r0, 8005684 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 800567e:	6803      	ldr	r3, [r0, #0]
 8005680:	685b      	ldr	r3, [r3, #4]
 8005682:	4798      	blx	r3
    if (*currentScreen)
 8005684:	f8d8 0000 	ldr.w	r0, [r8]
 8005688:	b110      	cbz	r0, 8005690 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 800568a:	6803      	ldr	r3, [r0, #0]
 800568c:	681b      	ldr	r3, [r3, #0]
 800568e:	4798      	blx	r3
    if (*currentPresenter)
 8005690:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005694:	b110      	cbz	r0, 800569c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005696:	6803      	ldr	r3, [r0, #0]
 8005698:	689b      	ldr	r3, [r3, #8]
 800569a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800569c:	68e0      	ldr	r0, [r4, #12]
 800569e:	2100      	movs	r1, #0
 80056a0:	f7ff ff76 	bl	8005590 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80056a4:	2114      	movs	r1, #20
 80056a6:	4605      	mov	r5, r0
 80056a8:	f7ff ff76 	bl	8005598 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80056ac:	68a0      	ldr	r0, [r4, #8]
 80056ae:	6803      	ldr	r3, [r0, #0]
 80056b0:	2100      	movs	r1, #0
 80056b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056b4:	4798      	blx	r3
 80056b6:	4606      	mov	r6, r0
 80056b8:	f005 f976 	bl	800a9a8 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80056bc:	6860      	ldr	r0, [r4, #4]
 80056be:	6803      	ldr	r3, [r0, #0]
 80056c0:	2100      	movs	r1, #0
 80056c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056c4:	4798      	blx	r3
 80056c6:	4631      	mov	r1, r6
 80056c8:	4604      	mov	r4, r0
 80056ca:	f005 f947 	bl	800a95c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80056ce:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80056d2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80056d6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80056da:	b1dc      	cbz	r4, 8005714 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x120>
 80056dc:	1d23      	adds	r3, r4, #4
 80056de:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80056e2:	6833      	ldr	r3, [r6, #0]
 80056e4:	f8c4 a008 	str.w	sl, [r4, #8]
 80056e8:	4630      	mov	r0, r6
 80056ea:	68db      	ldr	r3, [r3, #12]
 80056ec:	63f4      	str	r4, [r6, #60]	; 0x3c
 80056ee:	4798      	blx	r3
    newPresenter->activate();
 80056f0:	6823      	ldr	r3, [r4, #0]
 80056f2:	4620      	mov	r0, r4
 80056f4:	681b      	ldr	r3, [r3, #0]
 80056f6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80056f8:	4629      	mov	r1, r5
 80056fa:	4630      	mov	r0, r6
 80056fc:	f014 febc 	bl	801a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005700:	682b      	ldr	r3, [r5, #0]
 8005702:	4628      	mov	r0, r5
 8005704:	691b      	ldr	r3, [r3, #16]
 8005706:	4798      	blx	r3
    newTransition->invalidate();
 8005708:	682b      	ldr	r3, [r5, #0]
 800570a:	4628      	mov	r0, r5
 800570c:	695b      	ldr	r3, [r3, #20]
}
 800570e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005712:	4718      	bx	r3
    model->bind(newPresenter);
 8005714:	4623      	mov	r3, r4
 8005716:	e7e2      	b.n	80056de <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xea>
 8005718:	0802f4f8 	.word	0x0802f4f8
 800571c:	0802f929 	.word	0x0802f929
 8005720:	0802f694 	.word	0x0802f694
 8005724:	0802f6db 	.word	0x0802f6db
 8005728:	0802f77e 	.word	0x0802f77e
 800572c:	2001389c 	.word	0x2001389c
 8005730:	20013898 	.word	0x20013898

08005734 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8005734:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005738:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800573c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800573e:	68a0      	ldr	r0, [r4, #8]
 8005740:	6803      	ldr	r3, [r0, #0]
 8005742:	6a1b      	ldr	r3, [r3, #32]
 8005744:	4798      	blx	r3
 8005746:	f241 13c3 	movw	r3, #4547	; 0x11c3
 800574a:	4298      	cmp	r0, r3
 800574c:	d805      	bhi.n	800575a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x26>
 800574e:	4b42      	ldr	r3, [pc, #264]	; (8005858 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8005750:	4a42      	ldr	r2, [pc, #264]	; (800585c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8005752:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005754:	4842      	ldr	r0, [pc, #264]	; (8005860 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8005756:	f028 f833 	bl	802d7c0 <__assert_func>
 800575a:	6860      	ldr	r0, [r4, #4]
 800575c:	6803      	ldr	r3, [r0, #0]
 800575e:	6a1b      	ldr	r3, [r3, #32]
 8005760:	4798      	blx	r3
 8005762:	280f      	cmp	r0, #15
 8005764:	d803      	bhi.n	800576e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x3a>
 8005766:	4b3f      	ldr	r3, [pc, #252]	; (8005864 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8005768:	4a3c      	ldr	r2, [pc, #240]	; (800585c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 800576a:	21a4      	movs	r1, #164	; 0xa4
 800576c:	e7f2      	b.n	8005754 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800576e:	68e0      	ldr	r0, [r4, #12]
 8005770:	6803      	ldr	r3, [r0, #0]
 8005772:	6a1b      	ldr	r3, [r3, #32]
 8005774:	4798      	blx	r3
 8005776:	2837      	cmp	r0, #55	; 0x37
 8005778:	d803      	bhi.n	8005782 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4e>
 800577a:	4b3b      	ldr	r3, [pc, #236]	; (8005868 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 800577c:	4a37      	ldr	r2, [pc, #220]	; (800585c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 800577e:	21a5      	movs	r1, #165	; 0xa5
 8005780:	e7e8      	b.n	8005754 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005782:	f013 f84d 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005786:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800586c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 800578a:	3004      	adds	r0, #4
 800578c:	f013 f8ae 	bl	80188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005790:	f8d9 0000 	ldr.w	r0, [r9]
 8005794:	b110      	cbz	r0, 800579c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8005796:	6803      	ldr	r3, [r0, #0]
 8005798:	68db      	ldr	r3, [r3, #12]
 800579a:	4798      	blx	r3
    if (*currentTrans)
 800579c:	f8d9 0000 	ldr.w	r0, [r9]
 80057a0:	b110      	cbz	r0, 80057a8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 80057a2:	6803      	ldr	r3, [r0, #0]
 80057a4:	681b      	ldr	r3, [r3, #0]
 80057a6:	4798      	blx	r3
    if (*currentScreen)
 80057a8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005870 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 80057ac:	f8d8 0000 	ldr.w	r0, [r8]
 80057b0:	b110      	cbz	r0, 80057b8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80057b2:	6803      	ldr	r3, [r0, #0]
 80057b4:	695b      	ldr	r3, [r3, #20]
 80057b6:	4798      	blx	r3
    if (*currentPresenter)
 80057b8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057bc:	b110      	cbz	r0, 80057c4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 80057be:	6803      	ldr	r3, [r0, #0]
 80057c0:	685b      	ldr	r3, [r3, #4]
 80057c2:	4798      	blx	r3
    if (*currentScreen)
 80057c4:	f8d8 0000 	ldr.w	r0, [r8]
 80057c8:	b110      	cbz	r0, 80057d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 80057ca:	6803      	ldr	r3, [r0, #0]
 80057cc:	681b      	ldr	r3, [r3, #0]
 80057ce:	4798      	blx	r3
    if (*currentPresenter)
 80057d0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057d4:	b110      	cbz	r0, 80057dc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80057d6:	6803      	ldr	r3, [r0, #0]
 80057d8:	689b      	ldr	r3, [r3, #8]
 80057da:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80057dc:	68e0      	ldr	r0, [r4, #12]
 80057de:	2100      	movs	r1, #0
 80057e0:	f7ff fed6 	bl	8005590 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 80057e4:	2114      	movs	r1, #20
 80057e6:	4605      	mov	r5, r0
 80057e8:	f7ff fed6 	bl	8005598 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80057ec:	68a0      	ldr	r0, [r4, #8]
 80057ee:	6803      	ldr	r3, [r0, #0]
 80057f0:	2100      	movs	r1, #0
 80057f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057f4:	4798      	blx	r3
 80057f6:	4606      	mov	r6, r0
 80057f8:	f005 f876 	bl	800a8e8 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80057fc:	6860      	ldr	r0, [r4, #4]
 80057fe:	6803      	ldr	r3, [r0, #0]
 8005800:	2100      	movs	r1, #0
 8005802:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005804:	4798      	blx	r3
 8005806:	4631      	mov	r1, r6
 8005808:	4604      	mov	r4, r0
 800580a:	f005 f847 	bl	800a89c <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 800580e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005812:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005816:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800581a:	b1dc      	cbz	r4, 8005854 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x120>
 800581c:	1d23      	adds	r3, r4, #4
 800581e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005822:	6833      	ldr	r3, [r6, #0]
 8005824:	f8c4 a008 	str.w	sl, [r4, #8]
 8005828:	4630      	mov	r0, r6
 800582a:	68db      	ldr	r3, [r3, #12]
 800582c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800582e:	4798      	blx	r3
    newPresenter->activate();
 8005830:	6823      	ldr	r3, [r4, #0]
 8005832:	4620      	mov	r0, r4
 8005834:	681b      	ldr	r3, [r3, #0]
 8005836:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005838:	4629      	mov	r1, r5
 800583a:	4630      	mov	r0, r6
 800583c:	f014 fe1c 	bl	801a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005840:	682b      	ldr	r3, [r5, #0]
 8005842:	4628      	mov	r0, r5
 8005844:	691b      	ldr	r3, [r3, #16]
 8005846:	4798      	blx	r3
    newTransition->invalidate();
 8005848:	682b      	ldr	r3, [r5, #0]
 800584a:	4628      	mov	r0, r5
 800584c:	695b      	ldr	r3, [r3, #20]
}
 800584e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005852:	4718      	bx	r3
    model->bind(newPresenter);
 8005854:	4623      	mov	r3, r4
 8005856:	e7e2      	b.n	800581e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xea>
 8005858:	0802f4f8 	.word	0x0802f4f8
 800585c:	0802fa59 	.word	0x0802fa59
 8005860:	0802f694 	.word	0x0802f694
 8005864:	0802f6db 	.word	0x0802f6db
 8005868:	0802f77e 	.word	0x0802f77e
 800586c:	2001389c 	.word	0x2001389c
 8005870:	20013898 	.word	0x20013898

08005874 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8005874:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005878:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800587c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800587e:	68a0      	ldr	r0, [r4, #8]
 8005880:	6803      	ldr	r3, [r0, #0]
 8005882:	6a1b      	ldr	r3, [r3, #32]
 8005884:	4798      	blx	r3
 8005886:	f5b0 5f90 	cmp.w	r0, #4608	; 0x1200
 800588a:	d205      	bcs.n	8005898 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x24>
 800588c:	4b42      	ldr	r3, [pc, #264]	; (8005998 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 800588e:	4a43      	ldr	r2, [pc, #268]	; (800599c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005890:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005892:	4843      	ldr	r0, [pc, #268]	; (80059a0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8005894:	f027 ff94 	bl	802d7c0 <__assert_func>
 8005898:	6860      	ldr	r0, [r4, #4]
 800589a:	6803      	ldr	r3, [r0, #0]
 800589c:	6a1b      	ldr	r3, [r3, #32]
 800589e:	4798      	blx	r3
 80058a0:	280f      	cmp	r0, #15
 80058a2:	d803      	bhi.n	80058ac <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x38>
 80058a4:	4b3f      	ldr	r3, [pc, #252]	; (80059a4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 80058a6:	4a3d      	ldr	r2, [pc, #244]	; (800599c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 80058a8:	21a4      	movs	r1, #164	; 0xa4
 80058aa:	e7f2      	b.n	8005892 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80058ac:	68e0      	ldr	r0, [r4, #12]
 80058ae:	6803      	ldr	r3, [r0, #0]
 80058b0:	6a1b      	ldr	r3, [r3, #32]
 80058b2:	4798      	blx	r3
 80058b4:	2837      	cmp	r0, #55	; 0x37
 80058b6:	d803      	bhi.n	80058c0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4c>
 80058b8:	4b3b      	ldr	r3, [pc, #236]	; (80059a8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 80058ba:	4a38      	ldr	r2, [pc, #224]	; (800599c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 80058bc:	21a5      	movs	r1, #165	; 0xa5
 80058be:	e7e8      	b.n	8005892 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80058c0:	f012 ffae 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80058c4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80059ac <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 80058c8:	3004      	adds	r0, #4
 80058ca:	f013 f80f 	bl	80188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80058ce:	f8d9 0000 	ldr.w	r0, [r9]
 80058d2:	b110      	cbz	r0, 80058da <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 80058d4:	6803      	ldr	r3, [r0, #0]
 80058d6:	68db      	ldr	r3, [r3, #12]
 80058d8:	4798      	blx	r3
    if (*currentTrans)
 80058da:	f8d9 0000 	ldr.w	r0, [r9]
 80058de:	b110      	cbz	r0, 80058e6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 80058e0:	6803      	ldr	r3, [r0, #0]
 80058e2:	681b      	ldr	r3, [r3, #0]
 80058e4:	4798      	blx	r3
    if (*currentScreen)
 80058e6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80059b0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 80058ea:	f8d8 0000 	ldr.w	r0, [r8]
 80058ee:	b110      	cbz	r0, 80058f6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80058f0:	6803      	ldr	r3, [r0, #0]
 80058f2:	695b      	ldr	r3, [r3, #20]
 80058f4:	4798      	blx	r3
    if (*currentPresenter)
 80058f6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80058fa:	b110      	cbz	r0, 8005902 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80058fc:	6803      	ldr	r3, [r0, #0]
 80058fe:	685b      	ldr	r3, [r3, #4]
 8005900:	4798      	blx	r3
    if (*currentScreen)
 8005902:	f8d8 0000 	ldr.w	r0, [r8]
 8005906:	b110      	cbz	r0, 800590e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005908:	6803      	ldr	r3, [r0, #0]
 800590a:	681b      	ldr	r3, [r3, #0]
 800590c:	4798      	blx	r3
    if (*currentPresenter)
 800590e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005912:	b110      	cbz	r0, 800591a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005914:	6803      	ldr	r3, [r0, #0]
 8005916:	689b      	ldr	r3, [r3, #8]
 8005918:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800591a:	68e0      	ldr	r0, [r4, #12]
 800591c:	2100      	movs	r1, #0
 800591e:	f7ff fe37 	bl	8005590 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005922:	2114      	movs	r1, #20
 8005924:	4605      	mov	r5, r0
 8005926:	f7ff fe37 	bl	8005598 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800592a:	68a0      	ldr	r0, [r4, #8]
 800592c:	6803      	ldr	r3, [r0, #0]
 800592e:	2100      	movs	r1, #0
 8005930:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005932:	4798      	blx	r3
 8005934:	4606      	mov	r6, r0
 8005936:	f004 ff77 	bl	800a828 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800593a:	6860      	ldr	r0, [r4, #4]
 800593c:	6803      	ldr	r3, [r0, #0]
 800593e:	2100      	movs	r1, #0
 8005940:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005942:	4798      	blx	r3
 8005944:	4631      	mov	r1, r6
 8005946:	4604      	mov	r4, r0
 8005948:	f004 ff48 	bl	800a7dc <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 800594c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005950:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005954:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005958:	b1dc      	cbz	r4, 8005992 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x11e>
 800595a:	1d23      	adds	r3, r4, #4
 800595c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005960:	6833      	ldr	r3, [r6, #0]
 8005962:	f8c4 a008 	str.w	sl, [r4, #8]
 8005966:	4630      	mov	r0, r6
 8005968:	68db      	ldr	r3, [r3, #12]
 800596a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800596c:	4798      	blx	r3
    newPresenter->activate();
 800596e:	6823      	ldr	r3, [r4, #0]
 8005970:	4620      	mov	r0, r4
 8005972:	681b      	ldr	r3, [r3, #0]
 8005974:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005976:	4629      	mov	r1, r5
 8005978:	4630      	mov	r0, r6
 800597a:	f014 fd7d 	bl	801a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800597e:	682b      	ldr	r3, [r5, #0]
 8005980:	4628      	mov	r0, r5
 8005982:	691b      	ldr	r3, [r3, #16]
 8005984:	4798      	blx	r3
    newTransition->invalidate();
 8005986:	682b      	ldr	r3, [r5, #0]
 8005988:	4628      	mov	r0, r5
 800598a:	695b      	ldr	r3, [r3, #20]
}
 800598c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005990:	4718      	bx	r3
    model->bind(newPresenter);
 8005992:	4623      	mov	r3, r4
 8005994:	e7e2      	b.n	800595c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xe8>
 8005996:	bf00      	nop
 8005998:	0802f4f8 	.word	0x0802f4f8
 800599c:	0802fb77 	.word	0x0802fb77
 80059a0:	0802f694 	.word	0x0802f694
 80059a4:	0802f6db 	.word	0x0802f6db
 80059a8:	0802f77e 	.word	0x0802f77e
 80059ac:	2001389c 	.word	0x2001389c
 80059b0:	20013898 	.word	0x20013898

080059b4 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 80059b4:	6803      	ldr	r3, [r0, #0]
 80059b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80059b8:	4718      	bx	r3
	...

080059bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 80059bc:	4b12      	ldr	r3, [pc, #72]	; (8005a08 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 80059be:	b513      	push	{r0, r1, r4, lr}
          solid()
 80059c0:	6003      	str	r3, [r0, #0]
 80059c2:	f44f 7380 	mov.w	r3, #256	; 0x100
 80059c6:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 80059c8:	4b10      	ldr	r3, [pc, #64]	; (8005a0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 80059ca:	7241      	strb	r1, [r0, #9]
 80059cc:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80059ce:	4910      	ldr	r1, [pc, #64]	; (8005a10 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 80059d0:	4b10      	ldr	r3, [pc, #64]	; (8005a14 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80059d2:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 80059d6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80059da:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 80059dc:	2200      	movs	r2, #0
 80059de:	6042      	str	r2, [r0, #4]
 80059e0:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 80059e2:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 80059e4:	81c2      	strh	r2, [r0, #14]
          solid()
 80059e6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80059ea:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80059ee:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 80059f2:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 80059f6:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80059f8:	9100      	str	r1, [sp, #0]
 80059fa:	3010      	adds	r0, #16
 80059fc:	4611      	mov	r1, r2
 80059fe:	f7fd fd82 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8005a02:	4620      	mov	r0, r4
 8005a04:	b002      	add	sp, #8
 8005a06:	bd10      	pop	{r4, pc}
 8005a08:	0803085c 	.word	0x0803085c
 8005a0c:	08030764 	.word	0x08030764
 8005a10:	2001384a 	.word	0x2001384a
 8005a14:	20013848 	.word	0x20013848

08005a18 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8005a18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005a1c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005a20:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005a22:	68a0      	ldr	r0, [r4, #8]
 8005a24:	6803      	ldr	r3, [r0, #0]
 8005a26:	6a1b      	ldr	r3, [r3, #32]
 8005a28:	4798      	blx	r3
 8005a2a:	f241 137b 	movw	r3, #4475	; 0x117b
 8005a2e:	4298      	cmp	r0, r3
 8005a30:	d805      	bhi.n	8005a3e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8005a32:	4b42      	ldr	r3, [pc, #264]	; (8005b3c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8005a34:	4a42      	ldr	r2, [pc, #264]	; (8005b40 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005a36:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005a38:	4842      	ldr	r0, [pc, #264]	; (8005b44 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8005a3a:	f027 fec1 	bl	802d7c0 <__assert_func>
 8005a3e:	6860      	ldr	r0, [r4, #4]
 8005a40:	6803      	ldr	r3, [r0, #0]
 8005a42:	6a1b      	ldr	r3, [r3, #32]
 8005a44:	4798      	blx	r3
 8005a46:	280f      	cmp	r0, #15
 8005a48:	d803      	bhi.n	8005a52 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8005a4a:	4b3f      	ldr	r3, [pc, #252]	; (8005b48 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8005a4c:	4a3c      	ldr	r2, [pc, #240]	; (8005b40 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005a4e:	21a4      	movs	r1, #164	; 0xa4
 8005a50:	e7f2      	b.n	8005a38 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005a52:	68e0      	ldr	r0, [r4, #12]
 8005a54:	6803      	ldr	r3, [r0, #0]
 8005a56:	6a1b      	ldr	r3, [r3, #32]
 8005a58:	4798      	blx	r3
 8005a5a:	2837      	cmp	r0, #55	; 0x37
 8005a5c:	d803      	bhi.n	8005a66 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8005a5e:	4b3b      	ldr	r3, [pc, #236]	; (8005b4c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8005a60:	4a37      	ldr	r2, [pc, #220]	; (8005b40 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005a62:	21a5      	movs	r1, #165	; 0xa5
 8005a64:	e7e8      	b.n	8005a38 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005a66:	f012 fedb 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005a6a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005b50 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8005a6e:	3004      	adds	r0, #4
 8005a70:	f012 ff3c 	bl	80188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005a74:	f8d9 0000 	ldr.w	r0, [r9]
 8005a78:	b110      	cbz	r0, 8005a80 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005a7a:	6803      	ldr	r3, [r0, #0]
 8005a7c:	68db      	ldr	r3, [r3, #12]
 8005a7e:	4798      	blx	r3
    if (*currentTrans)
 8005a80:	f8d9 0000 	ldr.w	r0, [r9]
 8005a84:	b110      	cbz	r0, 8005a8c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005a86:	6803      	ldr	r3, [r0, #0]
 8005a88:	681b      	ldr	r3, [r3, #0]
 8005a8a:	4798      	blx	r3
    if (*currentScreen)
 8005a8c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005b54 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8005a90:	f8d8 0000 	ldr.w	r0, [r8]
 8005a94:	b110      	cbz	r0, 8005a9c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005a96:	6803      	ldr	r3, [r0, #0]
 8005a98:	695b      	ldr	r3, [r3, #20]
 8005a9a:	4798      	blx	r3
    if (*currentPresenter)
 8005a9c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005aa0:	b110      	cbz	r0, 8005aa8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005aa2:	6803      	ldr	r3, [r0, #0]
 8005aa4:	685b      	ldr	r3, [r3, #4]
 8005aa6:	4798      	blx	r3
    if (*currentScreen)
 8005aa8:	f8d8 0000 	ldr.w	r0, [r8]
 8005aac:	b110      	cbz	r0, 8005ab4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005aae:	6803      	ldr	r3, [r0, #0]
 8005ab0:	681b      	ldr	r3, [r3, #0]
 8005ab2:	4798      	blx	r3
    if (*currentPresenter)
 8005ab4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005ab8:	b110      	cbz	r0, 8005ac0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005aba:	6803      	ldr	r3, [r0, #0]
 8005abc:	689b      	ldr	r3, [r3, #8]
 8005abe:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005ac0:	68e0      	ldr	r0, [r4, #12]
 8005ac2:	2100      	movs	r1, #0
 8005ac4:	f7ff ff76 	bl	80059b4 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005ac8:	2114      	movs	r1, #20
 8005aca:	4605      	mov	r5, r0
 8005acc:	f7ff ff76 	bl	80059bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005ad0:	68a0      	ldr	r0, [r4, #8]
 8005ad2:	6803      	ldr	r3, [r0, #0]
 8005ad4:	2100      	movs	r1, #0
 8005ad6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ad8:	4798      	blx	r3
 8005ada:	4606      	mov	r6, r0
 8005adc:	f005 f990 	bl	800ae00 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005ae0:	6860      	ldr	r0, [r4, #4]
 8005ae2:	6803      	ldr	r3, [r0, #0]
 8005ae4:	2100      	movs	r1, #0
 8005ae6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ae8:	4798      	blx	r3
 8005aea:	4631      	mov	r1, r6
 8005aec:	4604      	mov	r4, r0
 8005aee:	f005 f961 	bl	800adb4 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8005af2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005af6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005afa:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005afe:	b1dc      	cbz	r4, 8005b38 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8005b00:	1d23      	adds	r3, r4, #4
 8005b02:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005b06:	6833      	ldr	r3, [r6, #0]
 8005b08:	f8c4 a008 	str.w	sl, [r4, #8]
 8005b0c:	4630      	mov	r0, r6
 8005b0e:	68db      	ldr	r3, [r3, #12]
 8005b10:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005b12:	4798      	blx	r3
    newPresenter->activate();
 8005b14:	6823      	ldr	r3, [r4, #0]
 8005b16:	4620      	mov	r0, r4
 8005b18:	681b      	ldr	r3, [r3, #0]
 8005b1a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005b1c:	4629      	mov	r1, r5
 8005b1e:	4630      	mov	r0, r6
 8005b20:	f014 fcaa 	bl	801a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005b24:	682b      	ldr	r3, [r5, #0]
 8005b26:	4628      	mov	r0, r5
 8005b28:	691b      	ldr	r3, [r3, #16]
 8005b2a:	4798      	blx	r3
    newTransition->invalidate();
 8005b2c:	682b      	ldr	r3, [r5, #0]
 8005b2e:	4628      	mov	r0, r5
 8005b30:	695b      	ldr	r3, [r3, #20]
}
 8005b32:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005b36:	4718      	bx	r3
    model->bind(newPresenter);
 8005b38:	4623      	mov	r3, r4
 8005b3a:	e7e2      	b.n	8005b02 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8005b3c:	0802f4f8 	.word	0x0802f4f8
 8005b40:	0802fc91 	.word	0x0802fc91
 8005b44:	0802f694 	.word	0x0802f694
 8005b48:	0802f6db 	.word	0x0802f6db
 8005b4c:	0802f77e 	.word	0x0802f77e
 8005b50:	2001389c 	.word	0x2001389c
 8005b54:	20013898 	.word	0x20013898

08005b58 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8005b58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005b5c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005b60:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005b62:	68a0      	ldr	r0, [r4, #8]
 8005b64:	6803      	ldr	r3, [r0, #0]
 8005b66:	6a1b      	ldr	r3, [r3, #32]
 8005b68:	4798      	blx	r3
 8005b6a:	f641 5303 	movw	r3, #7427	; 0x1d03
 8005b6e:	4298      	cmp	r0, r3
 8005b70:	d805      	bhi.n	8005b7e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8005b72:	4b42      	ldr	r3, [pc, #264]	; (8005c7c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8005b74:	4a42      	ldr	r2, [pc, #264]	; (8005c80 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005b76:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005b78:	4842      	ldr	r0, [pc, #264]	; (8005c84 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8005b7a:	f027 fe21 	bl	802d7c0 <__assert_func>
 8005b7e:	6860      	ldr	r0, [r4, #4]
 8005b80:	6803      	ldr	r3, [r0, #0]
 8005b82:	6a1b      	ldr	r3, [r3, #32]
 8005b84:	4798      	blx	r3
 8005b86:	280f      	cmp	r0, #15
 8005b88:	d803      	bhi.n	8005b92 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8005b8a:	4b3f      	ldr	r3, [pc, #252]	; (8005c88 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005b8c:	4a3c      	ldr	r2, [pc, #240]	; (8005c80 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005b8e:	21a4      	movs	r1, #164	; 0xa4
 8005b90:	e7f2      	b.n	8005b78 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005b92:	68e0      	ldr	r0, [r4, #12]
 8005b94:	6803      	ldr	r3, [r0, #0]
 8005b96:	6a1b      	ldr	r3, [r3, #32]
 8005b98:	4798      	blx	r3
 8005b9a:	2837      	cmp	r0, #55	; 0x37
 8005b9c:	d803      	bhi.n	8005ba6 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8005b9e:	4b3b      	ldr	r3, [pc, #236]	; (8005c8c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8005ba0:	4a37      	ldr	r2, [pc, #220]	; (8005c80 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005ba2:	21a5      	movs	r1, #165	; 0xa5
 8005ba4:	e7e8      	b.n	8005b78 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005ba6:	f012 fe3b 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005baa:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005c90 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005bae:	3004      	adds	r0, #4
 8005bb0:	f012 fe9c 	bl	80188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005bb4:	f8d9 0000 	ldr.w	r0, [r9]
 8005bb8:	b110      	cbz	r0, 8005bc0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005bba:	6803      	ldr	r3, [r0, #0]
 8005bbc:	68db      	ldr	r3, [r3, #12]
 8005bbe:	4798      	blx	r3
    if (*currentTrans)
 8005bc0:	f8d9 0000 	ldr.w	r0, [r9]
 8005bc4:	b110      	cbz	r0, 8005bcc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005bc6:	6803      	ldr	r3, [r0, #0]
 8005bc8:	681b      	ldr	r3, [r3, #0]
 8005bca:	4798      	blx	r3
    if (*currentScreen)
 8005bcc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005c94 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8005bd0:	f8d8 0000 	ldr.w	r0, [r8]
 8005bd4:	b110      	cbz	r0, 8005bdc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005bd6:	6803      	ldr	r3, [r0, #0]
 8005bd8:	695b      	ldr	r3, [r3, #20]
 8005bda:	4798      	blx	r3
    if (*currentPresenter)
 8005bdc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005be0:	b110      	cbz	r0, 8005be8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005be2:	6803      	ldr	r3, [r0, #0]
 8005be4:	685b      	ldr	r3, [r3, #4]
 8005be6:	4798      	blx	r3
    if (*currentScreen)
 8005be8:	f8d8 0000 	ldr.w	r0, [r8]
 8005bec:	b110      	cbz	r0, 8005bf4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005bee:	6803      	ldr	r3, [r0, #0]
 8005bf0:	681b      	ldr	r3, [r3, #0]
 8005bf2:	4798      	blx	r3
    if (*currentPresenter)
 8005bf4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005bf8:	b110      	cbz	r0, 8005c00 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005bfa:	6803      	ldr	r3, [r0, #0]
 8005bfc:	689b      	ldr	r3, [r3, #8]
 8005bfe:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005c00:	68e0      	ldr	r0, [r4, #12]
 8005c02:	2100      	movs	r1, #0
 8005c04:	f7ff fed6 	bl	80059b4 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005c08:	2114      	movs	r1, #20
 8005c0a:	4605      	mov	r5, r0
 8005c0c:	f7ff fed6 	bl	80059bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005c10:	68a0      	ldr	r0, [r4, #8]
 8005c12:	6803      	ldr	r3, [r0, #0]
 8005c14:	2100      	movs	r1, #0
 8005c16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c18:	4798      	blx	r3
 8005c1a:	4606      	mov	r6, r0
 8005c1c:	f004 fcd0 	bl	800a5c0 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005c20:	6860      	ldr	r0, [r4, #4]
 8005c22:	6803      	ldr	r3, [r0, #0]
 8005c24:	2100      	movs	r1, #0
 8005c26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c28:	4798      	blx	r3
 8005c2a:	4631      	mov	r1, r6
 8005c2c:	4604      	mov	r4, r0
 8005c2e:	f004 fca1 	bl	800a574 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8005c32:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005c36:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005c3a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005c3e:	b1dc      	cbz	r4, 8005c78 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8005c40:	1d23      	adds	r3, r4, #4
 8005c42:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005c46:	6833      	ldr	r3, [r6, #0]
 8005c48:	f8c4 a008 	str.w	sl, [r4, #8]
 8005c4c:	4630      	mov	r0, r6
 8005c4e:	68db      	ldr	r3, [r3, #12]
 8005c50:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005c52:	4798      	blx	r3
    newPresenter->activate();
 8005c54:	6823      	ldr	r3, [r4, #0]
 8005c56:	4620      	mov	r0, r4
 8005c58:	681b      	ldr	r3, [r3, #0]
 8005c5a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005c5c:	4629      	mov	r1, r5
 8005c5e:	4630      	mov	r0, r6
 8005c60:	f014 fc0a 	bl	801a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005c64:	682b      	ldr	r3, [r5, #0]
 8005c66:	4628      	mov	r0, r5
 8005c68:	691b      	ldr	r3, [r3, #16]
 8005c6a:	4798      	blx	r3
    newTransition->invalidate();
 8005c6c:	682b      	ldr	r3, [r5, #0]
 8005c6e:	4628      	mov	r0, r5
 8005c70:	695b      	ldr	r3, [r3, #20]
}
 8005c72:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005c76:	4718      	bx	r3
    model->bind(newPresenter);
 8005c78:	4623      	mov	r3, r4
 8005c7a:	e7e2      	b.n	8005c42 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8005c7c:	0802f4f8 	.word	0x0802f4f8
 8005c80:	0802fdb1 	.word	0x0802fdb1
 8005c84:	0802f694 	.word	0x0802f694
 8005c88:	0802f6db 	.word	0x0802f6db
 8005c8c:	0802f77e 	.word	0x0802f77e
 8005c90:	2001389c 	.word	0x2001389c
 8005c94:	20013898 	.word	0x20013898

08005c98 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8005c98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005c9c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005ca0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005ca2:	68a0      	ldr	r0, [r4, #8]
 8005ca4:	6803      	ldr	r3, [r0, #0]
 8005ca6:	6a1b      	ldr	r3, [r3, #32]
 8005ca8:	4798      	blx	r3
 8005caa:	f241 4377 	movw	r3, #5239	; 0x1477
 8005cae:	4298      	cmp	r0, r3
 8005cb0:	d805      	bhi.n	8005cbe <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8005cb2:	4b42      	ldr	r3, [pc, #264]	; (8005dbc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8005cb4:	4a42      	ldr	r2, [pc, #264]	; (8005dc0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005cb6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005cb8:	4842      	ldr	r0, [pc, #264]	; (8005dc4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8005cba:	f027 fd81 	bl	802d7c0 <__assert_func>
 8005cbe:	6860      	ldr	r0, [r4, #4]
 8005cc0:	6803      	ldr	r3, [r0, #0]
 8005cc2:	6a1b      	ldr	r3, [r3, #32]
 8005cc4:	4798      	blx	r3
 8005cc6:	280f      	cmp	r0, #15
 8005cc8:	d803      	bhi.n	8005cd2 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8005cca:	4b3f      	ldr	r3, [pc, #252]	; (8005dc8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8005ccc:	4a3c      	ldr	r2, [pc, #240]	; (8005dc0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005cce:	21a4      	movs	r1, #164	; 0xa4
 8005cd0:	e7f2      	b.n	8005cb8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005cd2:	68e0      	ldr	r0, [r4, #12]
 8005cd4:	6803      	ldr	r3, [r0, #0]
 8005cd6:	6a1b      	ldr	r3, [r3, #32]
 8005cd8:	4798      	blx	r3
 8005cda:	2837      	cmp	r0, #55	; 0x37
 8005cdc:	d803      	bhi.n	8005ce6 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8005cde:	4b3b      	ldr	r3, [pc, #236]	; (8005dcc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8005ce0:	4a37      	ldr	r2, [pc, #220]	; (8005dc0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005ce2:	21a5      	movs	r1, #165	; 0xa5
 8005ce4:	e7e8      	b.n	8005cb8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005ce6:	f012 fd9b 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005cea:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005dd0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8005cee:	3004      	adds	r0, #4
 8005cf0:	f012 fdfc 	bl	80188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005cf4:	f8d9 0000 	ldr.w	r0, [r9]
 8005cf8:	b110      	cbz	r0, 8005d00 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005cfa:	6803      	ldr	r3, [r0, #0]
 8005cfc:	68db      	ldr	r3, [r3, #12]
 8005cfe:	4798      	blx	r3
    if (*currentTrans)
 8005d00:	f8d9 0000 	ldr.w	r0, [r9]
 8005d04:	b110      	cbz	r0, 8005d0c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005d06:	6803      	ldr	r3, [r0, #0]
 8005d08:	681b      	ldr	r3, [r3, #0]
 8005d0a:	4798      	blx	r3
    if (*currentScreen)
 8005d0c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005dd4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8005d10:	f8d8 0000 	ldr.w	r0, [r8]
 8005d14:	b110      	cbz	r0, 8005d1c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005d16:	6803      	ldr	r3, [r0, #0]
 8005d18:	695b      	ldr	r3, [r3, #20]
 8005d1a:	4798      	blx	r3
    if (*currentPresenter)
 8005d1c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d20:	b110      	cbz	r0, 8005d28 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005d22:	6803      	ldr	r3, [r0, #0]
 8005d24:	685b      	ldr	r3, [r3, #4]
 8005d26:	4798      	blx	r3
    if (*currentScreen)
 8005d28:	f8d8 0000 	ldr.w	r0, [r8]
 8005d2c:	b110      	cbz	r0, 8005d34 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005d2e:	6803      	ldr	r3, [r0, #0]
 8005d30:	681b      	ldr	r3, [r3, #0]
 8005d32:	4798      	blx	r3
    if (*currentPresenter)
 8005d34:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d38:	b110      	cbz	r0, 8005d40 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005d3a:	6803      	ldr	r3, [r0, #0]
 8005d3c:	689b      	ldr	r3, [r3, #8]
 8005d3e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005d40:	68e0      	ldr	r0, [r4, #12]
 8005d42:	2100      	movs	r1, #0
 8005d44:	f7ff fe36 	bl	80059b4 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005d48:	2114      	movs	r1, #20
 8005d4a:	4605      	mov	r5, r0
 8005d4c:	f7ff fe36 	bl	80059bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005d50:	68a0      	ldr	r0, [r4, #8]
 8005d52:	6803      	ldr	r3, [r0, #0]
 8005d54:	2100      	movs	r1, #0
 8005d56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d58:	4798      	blx	r3
 8005d5a:	4606      	mov	r6, r0
 8005d5c:	f004 fec0 	bl	800aae0 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005d60:	6860      	ldr	r0, [r4, #4]
 8005d62:	6803      	ldr	r3, [r0, #0]
 8005d64:	2100      	movs	r1, #0
 8005d66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d68:	4798      	blx	r3
 8005d6a:	4631      	mov	r1, r6
 8005d6c:	4604      	mov	r4, r0
 8005d6e:	f004 fe91 	bl	800aa94 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8005d72:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005d76:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005d7a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005d7e:	b1dc      	cbz	r4, 8005db8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8005d80:	1d23      	adds	r3, r4, #4
 8005d82:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005d86:	6833      	ldr	r3, [r6, #0]
 8005d88:	f8c4 a008 	str.w	sl, [r4, #8]
 8005d8c:	4630      	mov	r0, r6
 8005d8e:	68db      	ldr	r3, [r3, #12]
 8005d90:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005d92:	4798      	blx	r3
    newPresenter->activate();
 8005d94:	6823      	ldr	r3, [r4, #0]
 8005d96:	4620      	mov	r0, r4
 8005d98:	681b      	ldr	r3, [r3, #0]
 8005d9a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005d9c:	4629      	mov	r1, r5
 8005d9e:	4630      	mov	r0, r6
 8005da0:	f014 fb6a 	bl	801a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005da4:	682b      	ldr	r3, [r5, #0]
 8005da6:	4628      	mov	r0, r5
 8005da8:	691b      	ldr	r3, [r3, #16]
 8005daa:	4798      	blx	r3
    newTransition->invalidate();
 8005dac:	682b      	ldr	r3, [r5, #0]
 8005dae:	4628      	mov	r0, r5
 8005db0:	695b      	ldr	r3, [r3, #20]
}
 8005db2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005db6:	4718      	bx	r3
    model->bind(newPresenter);
 8005db8:	4623      	mov	r3, r4
 8005dba:	e7e2      	b.n	8005d82 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8005dbc:	0802f4f8 	.word	0x0802f4f8
 8005dc0:	0802fed7 	.word	0x0802fed7
 8005dc4:	0802f694 	.word	0x0802f694
 8005dc8:	0802f6db 	.word	0x0802f6db
 8005dcc:	0802f77e 	.word	0x0802f77e
 8005dd0:	2001389c 	.word	0x2001389c
 8005dd4:	20013898 	.word	0x20013898

08005dd8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8005dd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005ddc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005de0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005de2:	68a0      	ldr	r0, [r4, #8]
 8005de4:	6803      	ldr	r3, [r0, #0]
 8005de6:	6a1b      	ldr	r3, [r3, #32]
 8005de8:	4798      	blx	r3
 8005dea:	f241 4377 	movw	r3, #5239	; 0x1477
 8005dee:	4298      	cmp	r0, r3
 8005df0:	d805      	bhi.n	8005dfe <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8005df2:	4b42      	ldr	r3, [pc, #264]	; (8005efc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8005df4:	4a42      	ldr	r2, [pc, #264]	; (8005f00 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005df6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005df8:	4842      	ldr	r0, [pc, #264]	; (8005f04 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8005dfa:	f027 fce1 	bl	802d7c0 <__assert_func>
 8005dfe:	6860      	ldr	r0, [r4, #4]
 8005e00:	6803      	ldr	r3, [r0, #0]
 8005e02:	6a1b      	ldr	r3, [r3, #32]
 8005e04:	4798      	blx	r3
 8005e06:	280f      	cmp	r0, #15
 8005e08:	d803      	bhi.n	8005e12 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 8005e0a:	4b3f      	ldr	r3, [pc, #252]	; (8005f08 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8005e0c:	4a3c      	ldr	r2, [pc, #240]	; (8005f00 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005e0e:	21a4      	movs	r1, #164	; 0xa4
 8005e10:	e7f2      	b.n	8005df8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005e12:	68e0      	ldr	r0, [r4, #12]
 8005e14:	6803      	ldr	r3, [r0, #0]
 8005e16:	6a1b      	ldr	r3, [r3, #32]
 8005e18:	4798      	blx	r3
 8005e1a:	2837      	cmp	r0, #55	; 0x37
 8005e1c:	d803      	bhi.n	8005e26 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8005e1e:	4b3b      	ldr	r3, [pc, #236]	; (8005f0c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8005e20:	4a37      	ldr	r2, [pc, #220]	; (8005f00 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005e22:	21a5      	movs	r1, #165	; 0xa5
 8005e24:	e7e8      	b.n	8005df8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005e26:	f012 fcfb 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005e2a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005f10 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8005e2e:	3004      	adds	r0, #4
 8005e30:	f012 fd5c 	bl	80188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005e34:	f8d9 0000 	ldr.w	r0, [r9]
 8005e38:	b110      	cbz	r0, 8005e40 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005e3a:	6803      	ldr	r3, [r0, #0]
 8005e3c:	68db      	ldr	r3, [r3, #12]
 8005e3e:	4798      	blx	r3
    if (*currentTrans)
 8005e40:	f8d9 0000 	ldr.w	r0, [r9]
 8005e44:	b110      	cbz	r0, 8005e4c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005e46:	6803      	ldr	r3, [r0, #0]
 8005e48:	681b      	ldr	r3, [r3, #0]
 8005e4a:	4798      	blx	r3
    if (*currentScreen)
 8005e4c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005f14 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8005e50:	f8d8 0000 	ldr.w	r0, [r8]
 8005e54:	b110      	cbz	r0, 8005e5c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005e56:	6803      	ldr	r3, [r0, #0]
 8005e58:	695b      	ldr	r3, [r3, #20]
 8005e5a:	4798      	blx	r3
    if (*currentPresenter)
 8005e5c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005e60:	b110      	cbz	r0, 8005e68 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005e62:	6803      	ldr	r3, [r0, #0]
 8005e64:	685b      	ldr	r3, [r3, #4]
 8005e66:	4798      	blx	r3
    if (*currentScreen)
 8005e68:	f8d8 0000 	ldr.w	r0, [r8]
 8005e6c:	b110      	cbz	r0, 8005e74 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005e6e:	6803      	ldr	r3, [r0, #0]
 8005e70:	681b      	ldr	r3, [r3, #0]
 8005e72:	4798      	blx	r3
    if (*currentPresenter)
 8005e74:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005e78:	b110      	cbz	r0, 8005e80 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005e7a:	6803      	ldr	r3, [r0, #0]
 8005e7c:	689b      	ldr	r3, [r3, #8]
 8005e7e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005e80:	68e0      	ldr	r0, [r4, #12]
 8005e82:	2100      	movs	r1, #0
 8005e84:	f7ff fd96 	bl	80059b4 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005e88:	2114      	movs	r1, #20
 8005e8a:	4605      	mov	r5, r0
 8005e8c:	f7ff fd96 	bl	80059bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005e90:	68a0      	ldr	r0, [r4, #8]
 8005e92:	6803      	ldr	r3, [r0, #0]
 8005e94:	2100      	movs	r1, #0
 8005e96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005e98:	4798      	blx	r3
 8005e9a:	4606      	mov	r6, r0
 8005e9c:	f004 fdde 	bl	800aa5c <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005ea0:	6860      	ldr	r0, [r4, #4]
 8005ea2:	6803      	ldr	r3, [r0, #0]
 8005ea4:	2100      	movs	r1, #0
 8005ea6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ea8:	4798      	blx	r3
 8005eaa:	4631      	mov	r1, r6
 8005eac:	4604      	mov	r4, r0
 8005eae:	f004 fdaf 	bl	800aa10 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8005eb2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005eb6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005eba:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005ebe:	b1dc      	cbz	r4, 8005ef8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8005ec0:	1d23      	adds	r3, r4, #4
 8005ec2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005ec6:	6833      	ldr	r3, [r6, #0]
 8005ec8:	f8c4 a008 	str.w	sl, [r4, #8]
 8005ecc:	4630      	mov	r0, r6
 8005ece:	68db      	ldr	r3, [r3, #12]
 8005ed0:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005ed2:	4798      	blx	r3
    newPresenter->activate();
 8005ed4:	6823      	ldr	r3, [r4, #0]
 8005ed6:	4620      	mov	r0, r4
 8005ed8:	681b      	ldr	r3, [r3, #0]
 8005eda:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005edc:	4629      	mov	r1, r5
 8005ede:	4630      	mov	r0, r6
 8005ee0:	f014 faca 	bl	801a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005ee4:	682b      	ldr	r3, [r5, #0]
 8005ee6:	4628      	mov	r0, r5
 8005ee8:	691b      	ldr	r3, [r3, #16]
 8005eea:	4798      	blx	r3
    newTransition->invalidate();
 8005eec:	682b      	ldr	r3, [r5, #0]
 8005eee:	4628      	mov	r0, r5
 8005ef0:	695b      	ldr	r3, [r3, #20]
}
 8005ef2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005ef6:	4718      	bx	r3
    model->bind(newPresenter);
 8005ef8:	4623      	mov	r3, r4
 8005efa:	e7e2      	b.n	8005ec2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8005efc:	0802f4f8 	.word	0x0802f4f8
 8005f00:	0803001b 	.word	0x0803001b
 8005f04:	0802f694 	.word	0x0802f694
 8005f08:	0802f6db 	.word	0x0802f6db
 8005f0c:	0802f77e 	.word	0x0802f77e
 8005f10:	2001389c 	.word	0x2001389c
 8005f14:	20013898 	.word	0x20013898

08005f18 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 8005f18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005f1c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005f20:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005f22:	68a0      	ldr	r0, [r4, #8]
 8005f24:	6803      	ldr	r3, [r0, #0]
 8005f26:	6a1b      	ldr	r3, [r3, #32]
 8005f28:	4798      	blx	r3
 8005f2a:	f241 13c3 	movw	r3, #4547	; 0x11c3
 8005f2e:	4298      	cmp	r0, r3
 8005f30:	d805      	bhi.n	8005f3e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x26>
 8005f32:	4b42      	ldr	r3, [pc, #264]	; (800603c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 8005f34:	4a42      	ldr	r2, [pc, #264]	; (8006040 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005f36:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005f38:	4842      	ldr	r0, [pc, #264]	; (8006044 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 8005f3a:	f027 fc41 	bl	802d7c0 <__assert_func>
 8005f3e:	6860      	ldr	r0, [r4, #4]
 8005f40:	6803      	ldr	r3, [r0, #0]
 8005f42:	6a1b      	ldr	r3, [r3, #32]
 8005f44:	4798      	blx	r3
 8005f46:	280f      	cmp	r0, #15
 8005f48:	d803      	bhi.n	8005f52 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x3a>
 8005f4a:	4b3f      	ldr	r3, [pc, #252]	; (8006048 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8005f4c:	4a3c      	ldr	r2, [pc, #240]	; (8006040 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005f4e:	21a4      	movs	r1, #164	; 0xa4
 8005f50:	e7f2      	b.n	8005f38 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005f52:	68e0      	ldr	r0, [r4, #12]
 8005f54:	6803      	ldr	r3, [r0, #0]
 8005f56:	6a1b      	ldr	r3, [r3, #32]
 8005f58:	4798      	blx	r3
 8005f5a:	2837      	cmp	r0, #55	; 0x37
 8005f5c:	d803      	bhi.n	8005f66 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4e>
 8005f5e:	4b3b      	ldr	r3, [pc, #236]	; (800604c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8005f60:	4a37      	ldr	r2, [pc, #220]	; (8006040 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005f62:	21a5      	movs	r1, #165	; 0xa5
 8005f64:	e7e8      	b.n	8005f38 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005f66:	f012 fc5b 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005f6a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006050 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8005f6e:	3004      	adds	r0, #4
 8005f70:	f012 fcbc 	bl	80188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005f74:	f8d9 0000 	ldr.w	r0, [r9]
 8005f78:	b110      	cbz	r0, 8005f80 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005f7a:	6803      	ldr	r3, [r0, #0]
 8005f7c:	68db      	ldr	r3, [r3, #12]
 8005f7e:	4798      	blx	r3
    if (*currentTrans)
 8005f80:	f8d9 0000 	ldr.w	r0, [r9]
 8005f84:	b110      	cbz	r0, 8005f8c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005f86:	6803      	ldr	r3, [r0, #0]
 8005f88:	681b      	ldr	r3, [r3, #0]
 8005f8a:	4798      	blx	r3
    if (*currentScreen)
 8005f8c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006054 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8005f90:	f8d8 0000 	ldr.w	r0, [r8]
 8005f94:	b110      	cbz	r0, 8005f9c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005f96:	6803      	ldr	r3, [r0, #0]
 8005f98:	695b      	ldr	r3, [r3, #20]
 8005f9a:	4798      	blx	r3
    if (*currentPresenter)
 8005f9c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005fa0:	b110      	cbz	r0, 8005fa8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005fa2:	6803      	ldr	r3, [r0, #0]
 8005fa4:	685b      	ldr	r3, [r3, #4]
 8005fa6:	4798      	blx	r3
    if (*currentScreen)
 8005fa8:	f8d8 0000 	ldr.w	r0, [r8]
 8005fac:	b110      	cbz	r0, 8005fb4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005fae:	6803      	ldr	r3, [r0, #0]
 8005fb0:	681b      	ldr	r3, [r3, #0]
 8005fb2:	4798      	blx	r3
    if (*currentPresenter)
 8005fb4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005fb8:	b110      	cbz	r0, 8005fc0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005fba:	6803      	ldr	r3, [r0, #0]
 8005fbc:	689b      	ldr	r3, [r3, #8]
 8005fbe:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005fc0:	68e0      	ldr	r0, [r4, #12]
 8005fc2:	2100      	movs	r1, #0
 8005fc4:	f7ff fcf6 	bl	80059b4 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005fc8:	2114      	movs	r1, #20
 8005fca:	4605      	mov	r5, r0
 8005fcc:	f7ff fcf6 	bl	80059bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005fd0:	68a0      	ldr	r0, [r4, #8]
 8005fd2:	6803      	ldr	r3, [r0, #0]
 8005fd4:	2100      	movs	r1, #0
 8005fd6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fd8:	4798      	blx	r3
 8005fda:	4606      	mov	r6, r0
 8005fdc:	f004 fce4 	bl	800a9a8 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005fe0:	6860      	ldr	r0, [r4, #4]
 8005fe2:	6803      	ldr	r3, [r0, #0]
 8005fe4:	2100      	movs	r1, #0
 8005fe6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fe8:	4798      	blx	r3
 8005fea:	4631      	mov	r1, r6
 8005fec:	4604      	mov	r4, r0
 8005fee:	f004 fcb5 	bl	800a95c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8005ff2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005ff6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005ffa:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005ffe:	b1dc      	cbz	r4, 8006038 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x120>
 8006000:	1d23      	adds	r3, r4, #4
 8006002:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006006:	6833      	ldr	r3, [r6, #0]
 8006008:	f8c4 a008 	str.w	sl, [r4, #8]
 800600c:	4630      	mov	r0, r6
 800600e:	68db      	ldr	r3, [r3, #12]
 8006010:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006012:	4798      	blx	r3
    newPresenter->activate();
 8006014:	6823      	ldr	r3, [r4, #0]
 8006016:	4620      	mov	r0, r4
 8006018:	681b      	ldr	r3, [r3, #0]
 800601a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800601c:	4629      	mov	r1, r5
 800601e:	4630      	mov	r0, r6
 8006020:	f014 fa2a 	bl	801a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006024:	682b      	ldr	r3, [r5, #0]
 8006026:	4628      	mov	r0, r5
 8006028:	691b      	ldr	r3, [r3, #16]
 800602a:	4798      	blx	r3
    newTransition->invalidate();
 800602c:	682b      	ldr	r3, [r5, #0]
 800602e:	4628      	mov	r0, r5
 8006030:	695b      	ldr	r3, [r3, #20]
}
 8006032:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006036:	4718      	bx	r3
    model->bind(newPresenter);
 8006038:	4623      	mov	r3, r4
 800603a:	e7e2      	b.n	8006002 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xea>
 800603c:	0802f4f8 	.word	0x0802f4f8
 8006040:	0803015b 	.word	0x0803015b
 8006044:	0802f694 	.word	0x0802f694
 8006048:	0802f6db 	.word	0x0802f6db
 800604c:	0802f77e 	.word	0x0802f77e
 8006050:	2001389c 	.word	0x2001389c
 8006054:	20013898 	.word	0x20013898

08006058 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8006058:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800605c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006060:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006062:	68a0      	ldr	r0, [r4, #8]
 8006064:	6803      	ldr	r3, [r0, #0]
 8006066:	6a1b      	ldr	r3, [r3, #32]
 8006068:	4798      	blx	r3
 800606a:	f241 4377 	movw	r3, #5239	; 0x1477
 800606e:	4298      	cmp	r0, r3
 8006070:	d805      	bhi.n	800607e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8006072:	4b42      	ldr	r3, [pc, #264]	; (800617c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8006074:	4a42      	ldr	r2, [pc, #264]	; (8006180 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8006076:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006078:	4842      	ldr	r0, [pc, #264]	; (8006184 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 800607a:	f027 fba1 	bl	802d7c0 <__assert_func>
 800607e:	6860      	ldr	r0, [r4, #4]
 8006080:	6803      	ldr	r3, [r0, #0]
 8006082:	6a1b      	ldr	r3, [r3, #32]
 8006084:	4798      	blx	r3
 8006086:	280f      	cmp	r0, #15
 8006088:	d803      	bhi.n	8006092 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 800608a:	4b3f      	ldr	r3, [pc, #252]	; (8006188 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 800608c:	4a3c      	ldr	r2, [pc, #240]	; (8006180 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800608e:	21a4      	movs	r1, #164	; 0xa4
 8006090:	e7f2      	b.n	8006078 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006092:	68e0      	ldr	r0, [r4, #12]
 8006094:	6803      	ldr	r3, [r0, #0]
 8006096:	6a1b      	ldr	r3, [r3, #32]
 8006098:	4798      	blx	r3
 800609a:	2837      	cmp	r0, #55	; 0x37
 800609c:	d803      	bhi.n	80060a6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 800609e:	4b3b      	ldr	r3, [pc, #236]	; (800618c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 80060a0:	4a37      	ldr	r2, [pc, #220]	; (8006180 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80060a2:	21a5      	movs	r1, #165	; 0xa5
 80060a4:	e7e8      	b.n	8006078 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80060a6:	f012 fbbb 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80060aa:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006190 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 80060ae:	3004      	adds	r0, #4
 80060b0:	f012 fc1c 	bl	80188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80060b4:	f8d9 0000 	ldr.w	r0, [r9]
 80060b8:	b110      	cbz	r0, 80060c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80060ba:	6803      	ldr	r3, [r0, #0]
 80060bc:	68db      	ldr	r3, [r3, #12]
 80060be:	4798      	blx	r3
    if (*currentTrans)
 80060c0:	f8d9 0000 	ldr.w	r0, [r9]
 80060c4:	b110      	cbz	r0, 80060cc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80060c6:	6803      	ldr	r3, [r0, #0]
 80060c8:	681b      	ldr	r3, [r3, #0]
 80060ca:	4798      	blx	r3
    if (*currentScreen)
 80060cc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006194 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 80060d0:	f8d8 0000 	ldr.w	r0, [r8]
 80060d4:	b110      	cbz	r0, 80060dc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80060d6:	6803      	ldr	r3, [r0, #0]
 80060d8:	695b      	ldr	r3, [r3, #20]
 80060da:	4798      	blx	r3
    if (*currentPresenter)
 80060dc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80060e0:	b110      	cbz	r0, 80060e8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80060e2:	6803      	ldr	r3, [r0, #0]
 80060e4:	685b      	ldr	r3, [r3, #4]
 80060e6:	4798      	blx	r3
    if (*currentScreen)
 80060e8:	f8d8 0000 	ldr.w	r0, [r8]
 80060ec:	b110      	cbz	r0, 80060f4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80060ee:	6803      	ldr	r3, [r0, #0]
 80060f0:	681b      	ldr	r3, [r3, #0]
 80060f2:	4798      	blx	r3
    if (*currentPresenter)
 80060f4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80060f8:	b110      	cbz	r0, 8006100 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80060fa:	6803      	ldr	r3, [r0, #0]
 80060fc:	689b      	ldr	r3, [r3, #8]
 80060fe:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006100:	68e0      	ldr	r0, [r4, #12]
 8006102:	2100      	movs	r1, #0
 8006104:	f7ff fc56 	bl	80059b4 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006108:	2114      	movs	r1, #20
 800610a:	4605      	mov	r5, r0
 800610c:	f7ff fc56 	bl	80059bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006110:	68a0      	ldr	r0, [r4, #8]
 8006112:	6803      	ldr	r3, [r0, #0]
 8006114:	2100      	movs	r1, #0
 8006116:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006118:	4798      	blx	r3
 800611a:	4606      	mov	r6, r0
 800611c:	f004 fe0a 	bl	800ad34 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006120:	6860      	ldr	r0, [r4, #4]
 8006122:	6803      	ldr	r3, [r0, #0]
 8006124:	2100      	movs	r1, #0
 8006126:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006128:	4798      	blx	r3
 800612a:	4631      	mov	r1, r6
 800612c:	4604      	mov	r4, r0
 800612e:	f004 fddb 	bl	800ace8 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8006132:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006136:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800613a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800613e:	b1dc      	cbz	r4, 8006178 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8006140:	1d23      	adds	r3, r4, #4
 8006142:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006146:	6833      	ldr	r3, [r6, #0]
 8006148:	f8c4 a008 	str.w	sl, [r4, #8]
 800614c:	4630      	mov	r0, r6
 800614e:	68db      	ldr	r3, [r3, #12]
 8006150:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006152:	4798      	blx	r3
    newPresenter->activate();
 8006154:	6823      	ldr	r3, [r4, #0]
 8006156:	4620      	mov	r0, r4
 8006158:	681b      	ldr	r3, [r3, #0]
 800615a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800615c:	4629      	mov	r1, r5
 800615e:	4630      	mov	r0, r6
 8006160:	f014 f98a 	bl	801a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006164:	682b      	ldr	r3, [r5, #0]
 8006166:	4628      	mov	r0, r5
 8006168:	691b      	ldr	r3, [r3, #16]
 800616a:	4798      	blx	r3
    newTransition->invalidate();
 800616c:	682b      	ldr	r3, [r5, #0]
 800616e:	4628      	mov	r0, r5
 8006170:	695b      	ldr	r3, [r3, #20]
}
 8006172:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006176:	4718      	bx	r3
    model->bind(newPresenter);
 8006178:	4623      	mov	r3, r4
 800617a:	e7e2      	b.n	8006142 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 800617c:	0802f4f8 	.word	0x0802f4f8
 8006180:	0803028b 	.word	0x0803028b
 8006184:	0802f694 	.word	0x0802f694
 8006188:	0802f6db 	.word	0x0802f6db
 800618c:	0802f77e 	.word	0x0802f77e
 8006190:	2001389c 	.word	0x2001389c
 8006194:	20013898 	.word	0x20013898

08006198 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8006198:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800619c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80061a0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80061a2:	68a0      	ldr	r0, [r4, #8]
 80061a4:	6803      	ldr	r3, [r0, #0]
 80061a6:	6a1b      	ldr	r3, [r3, #32]
 80061a8:	4798      	blx	r3
 80061aa:	f241 437b 	movw	r3, #5243	; 0x147b
 80061ae:	4298      	cmp	r0, r3
 80061b0:	d805      	bhi.n	80061be <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 80061b2:	4b42      	ldr	r3, [pc, #264]	; (80062bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 80061b4:	4a42      	ldr	r2, [pc, #264]	; (80062c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80061b6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80061b8:	4842      	ldr	r0, [pc, #264]	; (80062c4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 80061ba:	f027 fb01 	bl	802d7c0 <__assert_func>
 80061be:	6860      	ldr	r0, [r4, #4]
 80061c0:	6803      	ldr	r3, [r0, #0]
 80061c2:	6a1b      	ldr	r3, [r3, #32]
 80061c4:	4798      	blx	r3
 80061c6:	280f      	cmp	r0, #15
 80061c8:	d803      	bhi.n	80061d2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 80061ca:	4b3f      	ldr	r3, [pc, #252]	; (80062c8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 80061cc:	4a3c      	ldr	r2, [pc, #240]	; (80062c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80061ce:	21a4      	movs	r1, #164	; 0xa4
 80061d0:	e7f2      	b.n	80061b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80061d2:	68e0      	ldr	r0, [r4, #12]
 80061d4:	6803      	ldr	r3, [r0, #0]
 80061d6:	6a1b      	ldr	r3, [r3, #32]
 80061d8:	4798      	blx	r3
 80061da:	2837      	cmp	r0, #55	; 0x37
 80061dc:	d803      	bhi.n	80061e6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 80061de:	4b3b      	ldr	r3, [pc, #236]	; (80062cc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 80061e0:	4a37      	ldr	r2, [pc, #220]	; (80062c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80061e2:	21a5      	movs	r1, #165	; 0xa5
 80061e4:	e7e8      	b.n	80061b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80061e6:	f012 fb1b 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80061ea:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80062d0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 80061ee:	3004      	adds	r0, #4
 80061f0:	f012 fb7c 	bl	80188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80061f4:	f8d9 0000 	ldr.w	r0, [r9]
 80061f8:	b110      	cbz	r0, 8006200 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80061fa:	6803      	ldr	r3, [r0, #0]
 80061fc:	68db      	ldr	r3, [r3, #12]
 80061fe:	4798      	blx	r3
    if (*currentTrans)
 8006200:	f8d9 0000 	ldr.w	r0, [r9]
 8006204:	b110      	cbz	r0, 800620c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006206:	6803      	ldr	r3, [r0, #0]
 8006208:	681b      	ldr	r3, [r3, #0]
 800620a:	4798      	blx	r3
    if (*currentScreen)
 800620c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80062d4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8006210:	f8d8 0000 	ldr.w	r0, [r8]
 8006214:	b110      	cbz	r0, 800621c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006216:	6803      	ldr	r3, [r0, #0]
 8006218:	695b      	ldr	r3, [r3, #20]
 800621a:	4798      	blx	r3
    if (*currentPresenter)
 800621c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006220:	b110      	cbz	r0, 8006228 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006222:	6803      	ldr	r3, [r0, #0]
 8006224:	685b      	ldr	r3, [r3, #4]
 8006226:	4798      	blx	r3
    if (*currentScreen)
 8006228:	f8d8 0000 	ldr.w	r0, [r8]
 800622c:	b110      	cbz	r0, 8006234 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800622e:	6803      	ldr	r3, [r0, #0]
 8006230:	681b      	ldr	r3, [r3, #0]
 8006232:	4798      	blx	r3
    if (*currentPresenter)
 8006234:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006238:	b110      	cbz	r0, 8006240 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800623a:	6803      	ldr	r3, [r0, #0]
 800623c:	689b      	ldr	r3, [r3, #8]
 800623e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006240:	68e0      	ldr	r0, [r4, #12]
 8006242:	2100      	movs	r1, #0
 8006244:	f7ff fbb6 	bl	80059b4 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006248:	2114      	movs	r1, #20
 800624a:	4605      	mov	r5, r0
 800624c:	f7ff fbb6 	bl	80059bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006250:	68a0      	ldr	r0, [r4, #8]
 8006252:	6803      	ldr	r3, [r0, #0]
 8006254:	2100      	movs	r1, #0
 8006256:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006258:	4798      	blx	r3
 800625a:	4606      	mov	r6, r0
 800625c:	f004 fce2 	bl	800ac24 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006260:	6860      	ldr	r0, [r4, #4]
 8006262:	6803      	ldr	r3, [r0, #0]
 8006264:	2100      	movs	r1, #0
 8006266:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006268:	4798      	blx	r3
 800626a:	4631      	mov	r1, r6
 800626c:	4604      	mov	r4, r0
 800626e:	f004 fcb3 	bl	800abd8 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8006272:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006276:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800627a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800627e:	b1dc      	cbz	r4, 80062b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8006280:	1d23      	adds	r3, r4, #4
 8006282:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006286:	6833      	ldr	r3, [r6, #0]
 8006288:	f8c4 a008 	str.w	sl, [r4, #8]
 800628c:	4630      	mov	r0, r6
 800628e:	68db      	ldr	r3, [r3, #12]
 8006290:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006292:	4798      	blx	r3
    newPresenter->activate();
 8006294:	6823      	ldr	r3, [r4, #0]
 8006296:	4620      	mov	r0, r4
 8006298:	681b      	ldr	r3, [r3, #0]
 800629a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800629c:	4629      	mov	r1, r5
 800629e:	4630      	mov	r0, r6
 80062a0:	f014 f8ea 	bl	801a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80062a4:	682b      	ldr	r3, [r5, #0]
 80062a6:	4628      	mov	r0, r5
 80062a8:	691b      	ldr	r3, [r3, #16]
 80062aa:	4798      	blx	r3
    newTransition->invalidate();
 80062ac:	682b      	ldr	r3, [r5, #0]
 80062ae:	4628      	mov	r0, r5
 80062b0:	695b      	ldr	r3, [r3, #20]
}
 80062b2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80062b6:	4718      	bx	r3
    model->bind(newPresenter);
 80062b8:	4623      	mov	r3, r4
 80062ba:	e7e2      	b.n	8006282 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 80062bc:	0802f4f8 	.word	0x0802f4f8
 80062c0:	080303cd 	.word	0x080303cd
 80062c4:	0802f694 	.word	0x0802f694
 80062c8:	0802f6db 	.word	0x0802f6db
 80062cc:	0802f77e 	.word	0x0802f77e
 80062d0:	2001389c 	.word	0x2001389c
 80062d4:	20013898 	.word	0x20013898

080062d8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 80062d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80062dc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80062e0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80062e2:	68a0      	ldr	r0, [r4, #8]
 80062e4:	6803      	ldr	r3, [r0, #0]
 80062e6:	6a1b      	ldr	r3, [r3, #32]
 80062e8:	4798      	blx	r3
 80062ea:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80062ee:	4298      	cmp	r0, r3
 80062f0:	d805      	bhi.n	80062fe <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x26>
 80062f2:	4b42      	ldr	r3, [pc, #264]	; (80063fc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 80062f4:	4a42      	ldr	r2, [pc, #264]	; (8006400 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80062f6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80062f8:	4842      	ldr	r0, [pc, #264]	; (8006404 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 80062fa:	f027 fa61 	bl	802d7c0 <__assert_func>
 80062fe:	6860      	ldr	r0, [r4, #4]
 8006300:	6803      	ldr	r3, [r0, #0]
 8006302:	6a1b      	ldr	r3, [r3, #32]
 8006304:	4798      	blx	r3
 8006306:	280f      	cmp	r0, #15
 8006308:	d803      	bhi.n	8006312 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x3a>
 800630a:	4b3f      	ldr	r3, [pc, #252]	; (8006408 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 800630c:	4a3c      	ldr	r2, [pc, #240]	; (8006400 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 800630e:	21a4      	movs	r1, #164	; 0xa4
 8006310:	e7f2      	b.n	80062f8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006312:	68e0      	ldr	r0, [r4, #12]
 8006314:	6803      	ldr	r3, [r0, #0]
 8006316:	6a1b      	ldr	r3, [r3, #32]
 8006318:	4798      	blx	r3
 800631a:	2837      	cmp	r0, #55	; 0x37
 800631c:	d803      	bhi.n	8006326 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4e>
 800631e:	4b3b      	ldr	r3, [pc, #236]	; (800640c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8006320:	4a37      	ldr	r2, [pc, #220]	; (8006400 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8006322:	21a5      	movs	r1, #165	; 0xa5
 8006324:	e7e8      	b.n	80062f8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8006326:	f012 fa7b 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800632a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006410 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 800632e:	3004      	adds	r0, #4
 8006330:	f012 fadc 	bl	80188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006334:	f8d9 0000 	ldr.w	r0, [r9]
 8006338:	b110      	cbz	r0, 8006340 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800633a:	6803      	ldr	r3, [r0, #0]
 800633c:	68db      	ldr	r3, [r3, #12]
 800633e:	4798      	blx	r3
    if (*currentTrans)
 8006340:	f8d9 0000 	ldr.w	r0, [r9]
 8006344:	b110      	cbz	r0, 800634c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006346:	6803      	ldr	r3, [r0, #0]
 8006348:	681b      	ldr	r3, [r3, #0]
 800634a:	4798      	blx	r3
    if (*currentScreen)
 800634c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006414 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8006350:	f8d8 0000 	ldr.w	r0, [r8]
 8006354:	b110      	cbz	r0, 800635c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006356:	6803      	ldr	r3, [r0, #0]
 8006358:	695b      	ldr	r3, [r3, #20]
 800635a:	4798      	blx	r3
    if (*currentPresenter)
 800635c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006360:	b110      	cbz	r0, 8006368 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006362:	6803      	ldr	r3, [r0, #0]
 8006364:	685b      	ldr	r3, [r3, #4]
 8006366:	4798      	blx	r3
    if (*currentScreen)
 8006368:	f8d8 0000 	ldr.w	r0, [r8]
 800636c:	b110      	cbz	r0, 8006374 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800636e:	6803      	ldr	r3, [r0, #0]
 8006370:	681b      	ldr	r3, [r3, #0]
 8006372:	4798      	blx	r3
    if (*currentPresenter)
 8006374:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006378:	b110      	cbz	r0, 8006380 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800637a:	6803      	ldr	r3, [r0, #0]
 800637c:	689b      	ldr	r3, [r3, #8]
 800637e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006380:	68e0      	ldr	r0, [r4, #12]
 8006382:	2100      	movs	r1, #0
 8006384:	f7ff fb16 	bl	80059b4 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006388:	2114      	movs	r1, #20
 800638a:	4605      	mov	r5, r0
 800638c:	f7ff fb16 	bl	80059bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006390:	68a0      	ldr	r0, [r4, #8]
 8006392:	6803      	ldr	r3, [r0, #0]
 8006394:	2100      	movs	r1, #0
 8006396:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006398:	4798      	blx	r3
 800639a:	4606      	mov	r6, r0
 800639c:	f004 fbe8 	bl	800ab70 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80063a0:	6860      	ldr	r0, [r4, #4]
 80063a2:	6803      	ldr	r3, [r0, #0]
 80063a4:	2100      	movs	r1, #0
 80063a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80063a8:	4798      	blx	r3
 80063aa:	4631      	mov	r1, r6
 80063ac:	4604      	mov	r4, r0
 80063ae:	f004 fbb9 	bl	800ab24 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 80063b2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80063b6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80063ba:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80063be:	b1dc      	cbz	r4, 80063f8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x120>
 80063c0:	1d23      	adds	r3, r4, #4
 80063c2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80063c6:	6833      	ldr	r3, [r6, #0]
 80063c8:	f8c4 a008 	str.w	sl, [r4, #8]
 80063cc:	4630      	mov	r0, r6
 80063ce:	68db      	ldr	r3, [r3, #12]
 80063d0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80063d2:	4798      	blx	r3
    newPresenter->activate();
 80063d4:	6823      	ldr	r3, [r4, #0]
 80063d6:	4620      	mov	r0, r4
 80063d8:	681b      	ldr	r3, [r3, #0]
 80063da:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80063dc:	4629      	mov	r1, r5
 80063de:	4630      	mov	r0, r6
 80063e0:	f014 f84a 	bl	801a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80063e4:	682b      	ldr	r3, [r5, #0]
 80063e6:	4628      	mov	r0, r5
 80063e8:	691b      	ldr	r3, [r3, #16]
 80063ea:	4798      	blx	r3
    newTransition->invalidate();
 80063ec:	682b      	ldr	r3, [r5, #0]
 80063ee:	4628      	mov	r0, r5
 80063f0:	695b      	ldr	r3, [r3, #20]
}
 80063f2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80063f6:	4718      	bx	r3
    model->bind(newPresenter);
 80063f8:	4623      	mov	r3, r4
 80063fa:	e7e2      	b.n	80063c2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xea>
 80063fc:	0802f4f8 	.word	0x0802f4f8
 8006400:	0803050f 	.word	0x0803050f
 8006404:	0802f694 	.word	0x0802f694
 8006408:	0802f6db 	.word	0x0802f6db
 800640c:	0802f77e 	.word	0x0802f77e
 8006410:	2001389c 	.word	0x2001389c
 8006414:	20013898 	.word	0x20013898

08006418 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8006418:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800641c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006420:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006422:	68a0      	ldr	r0, [r4, #8]
 8006424:	6803      	ldr	r3, [r0, #0]
 8006426:	6a1b      	ldr	r3, [r3, #32]
 8006428:	4798      	blx	r3
 800642a:	f241 13c3 	movw	r3, #4547	; 0x11c3
 800642e:	4298      	cmp	r0, r3
 8006430:	d805      	bhi.n	800643e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x26>
 8006432:	4b42      	ldr	r3, [pc, #264]	; (800653c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8006434:	4a42      	ldr	r2, [pc, #264]	; (8006540 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8006436:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006438:	4842      	ldr	r0, [pc, #264]	; (8006544 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 800643a:	f027 f9c1 	bl	802d7c0 <__assert_func>
 800643e:	6860      	ldr	r0, [r4, #4]
 8006440:	6803      	ldr	r3, [r0, #0]
 8006442:	6a1b      	ldr	r3, [r3, #32]
 8006444:	4798      	blx	r3
 8006446:	280f      	cmp	r0, #15
 8006448:	d803      	bhi.n	8006452 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x3a>
 800644a:	4b3f      	ldr	r3, [pc, #252]	; (8006548 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 800644c:	4a3c      	ldr	r2, [pc, #240]	; (8006540 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 800644e:	21a4      	movs	r1, #164	; 0xa4
 8006450:	e7f2      	b.n	8006438 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006452:	68e0      	ldr	r0, [r4, #12]
 8006454:	6803      	ldr	r3, [r0, #0]
 8006456:	6a1b      	ldr	r3, [r3, #32]
 8006458:	4798      	blx	r3
 800645a:	2837      	cmp	r0, #55	; 0x37
 800645c:	d803      	bhi.n	8006466 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4e>
 800645e:	4b3b      	ldr	r3, [pc, #236]	; (800654c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8006460:	4a37      	ldr	r2, [pc, #220]	; (8006540 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8006462:	21a5      	movs	r1, #165	; 0xa5
 8006464:	e7e8      	b.n	8006438 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8006466:	f012 f9db 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800646a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006550 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 800646e:	3004      	adds	r0, #4
 8006470:	f012 fa3c 	bl	80188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006474:	f8d9 0000 	ldr.w	r0, [r9]
 8006478:	b110      	cbz	r0, 8006480 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800647a:	6803      	ldr	r3, [r0, #0]
 800647c:	68db      	ldr	r3, [r3, #12]
 800647e:	4798      	blx	r3
    if (*currentTrans)
 8006480:	f8d9 0000 	ldr.w	r0, [r9]
 8006484:	b110      	cbz	r0, 800648c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006486:	6803      	ldr	r3, [r0, #0]
 8006488:	681b      	ldr	r3, [r3, #0]
 800648a:	4798      	blx	r3
    if (*currentScreen)
 800648c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006554 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8006490:	f8d8 0000 	ldr.w	r0, [r8]
 8006494:	b110      	cbz	r0, 800649c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006496:	6803      	ldr	r3, [r0, #0]
 8006498:	695b      	ldr	r3, [r3, #20]
 800649a:	4798      	blx	r3
    if (*currentPresenter)
 800649c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80064a0:	b110      	cbz	r0, 80064a8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80064a2:	6803      	ldr	r3, [r0, #0]
 80064a4:	685b      	ldr	r3, [r3, #4]
 80064a6:	4798      	blx	r3
    if (*currentScreen)
 80064a8:	f8d8 0000 	ldr.w	r0, [r8]
 80064ac:	b110      	cbz	r0, 80064b4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80064ae:	6803      	ldr	r3, [r0, #0]
 80064b0:	681b      	ldr	r3, [r3, #0]
 80064b2:	4798      	blx	r3
    if (*currentPresenter)
 80064b4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80064b8:	b110      	cbz	r0, 80064c0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80064ba:	6803      	ldr	r3, [r0, #0]
 80064bc:	689b      	ldr	r3, [r3, #8]
 80064be:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80064c0:	68e0      	ldr	r0, [r4, #12]
 80064c2:	2100      	movs	r1, #0
 80064c4:	f7ff fa76 	bl	80059b4 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80064c8:	2114      	movs	r1, #20
 80064ca:	4605      	mov	r5, r0
 80064cc:	f7ff fa76 	bl	80059bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80064d0:	68a0      	ldr	r0, [r4, #8]
 80064d2:	6803      	ldr	r3, [r0, #0]
 80064d4:	2100      	movs	r1, #0
 80064d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80064d8:	4798      	blx	r3
 80064da:	4606      	mov	r6, r0
 80064dc:	f004 fa04 	bl	800a8e8 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80064e0:	6860      	ldr	r0, [r4, #4]
 80064e2:	6803      	ldr	r3, [r0, #0]
 80064e4:	2100      	movs	r1, #0
 80064e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80064e8:	4798      	blx	r3
 80064ea:	4631      	mov	r1, r6
 80064ec:	4604      	mov	r4, r0
 80064ee:	f004 f9d5 	bl	800a89c <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 80064f2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80064f6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80064fa:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80064fe:	b1dc      	cbz	r4, 8006538 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x120>
 8006500:	1d23      	adds	r3, r4, #4
 8006502:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006506:	6833      	ldr	r3, [r6, #0]
 8006508:	f8c4 a008 	str.w	sl, [r4, #8]
 800650c:	4630      	mov	r0, r6
 800650e:	68db      	ldr	r3, [r3, #12]
 8006510:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006512:	4798      	blx	r3
    newPresenter->activate();
 8006514:	6823      	ldr	r3, [r4, #0]
 8006516:	4620      	mov	r0, r4
 8006518:	681b      	ldr	r3, [r3, #0]
 800651a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800651c:	4629      	mov	r1, r5
 800651e:	4630      	mov	r0, r6
 8006520:	f013 ffaa 	bl	801a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006524:	682b      	ldr	r3, [r5, #0]
 8006526:	4628      	mov	r0, r5
 8006528:	691b      	ldr	r3, [r3, #16]
 800652a:	4798      	blx	r3
    newTransition->invalidate();
 800652c:	682b      	ldr	r3, [r5, #0]
 800652e:	4628      	mov	r0, r5
 8006530:	695b      	ldr	r3, [r3, #20]
}
 8006532:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006536:	4718      	bx	r3
    model->bind(newPresenter);
 8006538:	4623      	mov	r3, r4
 800653a:	e7e2      	b.n	8006502 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xea>
 800653c:	0802f4f8 	.word	0x0802f4f8
 8006540:	0803063b 	.word	0x0803063b
 8006544:	0802f694 	.word	0x0802f694
 8006548:	0802f6db 	.word	0x0802f6db
 800654c:	0802f77e 	.word	0x0802f77e
 8006550:	2001389c 	.word	0x2001389c
 8006554:	20013898 	.word	0x20013898

08006558 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8006558:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800655a:	4770      	bx	lr

0800655c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 800655c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800655e:	4770      	bx	lr

08006560 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8006560:	4770      	bx	lr

08006562 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8006562:	888b      	ldrh	r3, [r1, #4]
 8006564:	69c0      	ldr	r0, [r0, #28]
 8006566:	680a      	ldr	r2, [r1, #0]
 8006568:	0adb      	lsrs	r3, r3, #11
 800656a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800656e:	4410      	add	r0, r2
 8006570:	4770      	bx	lr

08006572 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8006572:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8006574:	b1c2      	cbz	r2, 80065a8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8006576:	7b13      	ldrb	r3, [r2, #12]
 8006578:	b1b3      	cbz	r3, 80065a8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800657a:	7b54      	ldrb	r4, [r2, #13]
 800657c:	7ad2      	ldrb	r2, [r2, #11]
 800657e:	0224      	lsls	r4, r4, #8
 8006580:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8006584:	4314      	orrs	r4, r2
 8006586:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8006588:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800658a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800658e:	8813      	ldrh	r3, [r2, #0]
 8006590:	428b      	cmp	r3, r1
 8006592:	d102      	bne.n	800659a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8006594:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8006598:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800659a:	d805      	bhi.n	80065a8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800659c:	3801      	subs	r0, #1
 800659e:	b280      	uxth	r0, r0
 80065a0:	3204      	adds	r2, #4
 80065a2:	2800      	cmp	r0, #0
 80065a4:	d1f3      	bne.n	800658e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80065a6:	e7f7      	b.n	8006598 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80065a8:	2000      	movs	r0, #0
 80065aa:	e7f5      	b.n	8006598 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080065ac <_ZN8touchgfx13GeneratedFontD0Ev>:
 80065ac:	b510      	push	{r4, lr}
 80065ae:	212c      	movs	r1, #44	; 0x2c
 80065b0:	4604      	mov	r4, r0
 80065b2:	f026 fa1e 	bl	802c9f2 <_ZdlPvj>
 80065b6:	4620      	mov	r0, r4
 80065b8:	bd10      	pop	{r4, pc}
	...

080065bc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80065bc:	b530      	push	{r4, r5, lr}
 80065be:	b08b      	sub	sp, #44	; 0x2c
 80065c0:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80065c2:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 80065c6:	9508      	str	r5, [sp, #32]
 80065c8:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 80065cc:	9507      	str	r5, [sp, #28]
 80065ce:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80065d2:	9506      	str	r5, [sp, #24]
 80065d4:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80065d8:	9505      	str	r5, [sp, #20]
 80065da:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80065de:	9504      	str	r5, [sp, #16]
 80065e0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80065e4:	9503      	str	r5, [sp, #12]
 80065e6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80065ea:	9502      	str	r5, [sp, #8]
 80065ec:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80065f0:	9501      	str	r5, [sp, #4]
 80065f2:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80065f6:	9500      	str	r5, [sp, #0]
 80065f8:	f013 faa8 	bl	8019b4c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80065fc:	4b06      	ldr	r3, [pc, #24]	; (8006618 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80065fe:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8006600:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006602:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8006604:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006606:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8006608:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800660a:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 800660c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800660e:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8006610:	4620      	mov	r0, r4
 8006612:	b00b      	add	sp, #44	; 0x2c
 8006614:	bd30      	pop	{r4, r5, pc}
 8006616:	bf00      	nop
 8006618:	080308a4 	.word	0x080308a4

0800661c <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 800661c:	4770      	bx	lr

0800661e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800661e:	4770      	bx	lr

08006620 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006620:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006622:	68c2      	ldr	r2, [r0, #12]
 8006624:	6844      	ldr	r4, [r0, #4]
 8006626:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006628:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800662a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800662e:	07d2      	lsls	r2, r2, #31
 8006630:	bf48      	it	mi
 8006632:	5962      	ldrmi	r2, [r4, r5]
 8006634:	689b      	ldr	r3, [r3, #8]
    }
 8006636:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006638:	bf48      	it	mi
 800663a:	58d3      	ldrmi	r3, [r2, r3]
 800663c:	4718      	bx	r3

0800663e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800663e:	6843      	ldr	r3, [r0, #4]
 8006640:	b12b      	cbz	r3, 800664e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006642:	6883      	ldr	r3, [r0, #8]
 8006644:	b92b      	cbnz	r3, 8006652 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006646:	68c0      	ldr	r0, [r0, #12]
 8006648:	f000 0001 	and.w	r0, r0, #1
 800664c:	4770      	bx	lr
 800664e:	4618      	mov	r0, r3
 8006650:	4770      	bx	lr
 8006652:	2001      	movs	r0, #1
    }
 8006654:	4770      	bx	lr

08006656 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006656:	b510      	push	{r4, lr}
 8006658:	2110      	movs	r1, #16
 800665a:	4604      	mov	r4, r0
 800665c:	f026 f9c9 	bl	802c9f2 <_ZdlPvj>
 8006660:	4620      	mov	r0, r4
 8006662:	bd10      	pop	{r4, pc}

08006664 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8006664:	b510      	push	{r4, lr}
 8006666:	4b03      	ldr	r3, [pc, #12]	; (8006674 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8006668:	6003      	str	r3, [r0, #0]
 800666a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800666c:	f010 fbd6 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006670:	4620      	mov	r0, r4
 8006672:	bd10      	pop	{r4, pc}
 8006674:	0803091c 	.word	0x0803091c

08006678 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8006678:	b507      	push	{r0, r1, r2, lr}
 800667a:	4b07      	ldr	r3, [pc, #28]	; (8006698 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 800667c:	6003      	str	r3, [r0, #0]
 800667e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006680:	f010 fbcc 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006684:	9801      	ldr	r0, [sp, #4]
 8006686:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 800668a:	f026 f9b2 	bl	802c9f2 <_ZdlPvj>
 800668e:	9801      	ldr	r0, [sp, #4]
 8006690:	b003      	add	sp, #12
 8006692:	f85d fb04 	ldr.w	pc, [sp], #4
 8006696:	bf00      	nop
 8006698:	0803091c 	.word	0x0803091c

0800669c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800669c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Measure)
 800669e:	f500 73ba 	add.w	r3, r0, #372	; 0x174
 80066a2:	4299      	cmp	r1, r3
{
 80066a4:	4604      	mov	r4, r0
 80066a6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Measure)
 80066a8:	d103      	bne.n	80066b2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80066aa:	f012 f8b9 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Measure clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 80066ae:	f7fe feaf 	bl	8005410 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_Calibration)
 80066b2:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 80066b6:	429d      	cmp	r5, r3
 80066b8:	d103      	bne.n	80066c2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80066ba:	f012 f8b1 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_Calibration clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 80066be:	f7fe ff37 	bl	8005530 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_ProjectInfo)
 80066c2:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80066c6:	429d      	cmp	r5, r3
 80066c8:	d103      	bne.n	80066d2 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 80066ca:	f012 f8a9 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel_ProjectInfo clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 80066ce:	f7fe ff3f 	bl	8005550 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon_turn_off)
 80066d2:	f504 7467 	add.w	r4, r4, #924	; 0x39c
 80066d6:	42a5      	cmp	r5, r4
 80066d8:	d10a      	bne.n	80066f0 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon_turn_off clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80066da:	4806      	ldr	r0, [pc, #24]	; (80066f4 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 80066dc:	2200      	movs	r2, #0
 80066de:	2120      	movs	r1, #32
 80066e0:	f005 fa84 	bl	800bbec <HAL_GPIO_WritePin>
 80066e4:	f012 f89c 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon_turn_off clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 80066e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 80066ec:	f7fe bf40 	b.w	8005570 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80066f0:	bd38      	pop	{r3, r4, r5, pc}
 80066f2:	bf00      	nop
 80066f4:	40021000 	.word	0x40021000

080066f8 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 80066f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80066fc:	ed2d 8b08 	vpush	{d8-d11}
 8006700:	4604      	mov	r4, r0
 8006702:	b091      	sub	sp, #68	; 0x44
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8006704:	46a2      	mov	sl, r4
        : presenter(0)
 8006706:	2500      	movs	r5, #0
 8006708:	f013 fd0a 	bl	801a120 <_ZN8touchgfx6ScreenC1Ev>
 800670c:	4b75      	ldr	r3, [pc, #468]	; (80068e4 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
 800670e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006710:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8006714:	2226      	movs	r2, #38	; 0x26
 8006716:	4629      	mov	r1, r5
 8006718:	4650      	mov	r0, sl
 800671a:	f027 fa56 	bl	802dbca <memset>
 800671e:	4650      	mov	r0, sl
 8006720:	f7fc ff16 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 8006724:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8006728:	26ff      	movs	r6, #255	; 0xff
 800672a:	4b6f      	ldr	r3, [pc, #444]	; (80068e8 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 800672c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800672e:	2226      	movs	r2, #38	; 0x26
 8006730:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006734:	4629      	mov	r1, r5
 8006736:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800673a:	4648      	mov	r0, r9
        : color(col)
 800673c:	66a5      	str	r5, [r4, #104]	; 0x68
 800673e:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8006742:	f027 fa42 	bl	802dbca <memset>
 8006746:	4648      	mov	r0, r9
 8006748:	f7fc ff02 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 800674c:	4b67      	ldr	r3, [pc, #412]	; (80068ec <_ZN17Main_MenuViewBaseC1Ev+0x1f4>)
 800674e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006750:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8006754:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006758:	a90e      	add	r1, sp, #56	; 0x38
 800675a:	4648      	mov	r0, r9
 800675c:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006760:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006764:	f00f fb5d 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006768:	4640      	mov	r0, r8
 800676a:	f7fc ff55 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800676e:	4b60      	ldr	r3, [pc, #384]	; (80068f0 <_ZN17Main_MenuViewBaseC1Ev+0x1f8>)
 8006770:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006774:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006778:	4618      	mov	r0, r3
 800677a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800677e:	ee09 3a90 	vmov	s19, r3
 8006782:	f00f fc85 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006786:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 800678a:	4618      	mov	r0, r3
 800678c:	ee0a 3a10 	vmov	s20, r3
 8006790:	f00f fc7e 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006794:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006798:	4618      	mov	r0, r3
 800679a:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 800679e:	ee0a 3a90 	vmov	s21, r3
 80067a2:	f00f fc75 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80067a6:	4638      	mov	r0, r7
 80067a8:	f00e f82e 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80067ac:	4e51      	ldr	r6, [pc, #324]	; (80068f4 <_ZN17Main_MenuViewBaseC1Ev+0x1fc>)
 80067ae:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 80067b2:	4618      	mov	r0, r3
 80067b4:	9304      	str	r3, [sp, #16]
 80067b6:	f7fc fccf 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80067ba:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80067be:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 80067c2:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80067c6:	4618      	mov	r0, r3
 80067c8:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 80067cc:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 80067d0:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 80067d4:	ee08 3a10 	vmov	s16, r3
 80067d8:	f7fc ff1e 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 80067dc:	4658      	mov	r0, fp
 80067de:	f00e f813 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 80067e2:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 80067e6:	4618      	mov	r0, r3
 80067e8:	9305      	str	r3, [sp, #20]
 80067ea:	f7fc fcb5 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80067ee:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80067f2:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 80067f6:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 80067fa:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 80067fe:	4618      	mov	r0, r3
 8006800:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006804:	ee08 3a90 	vmov	s17, r3
 8006808:	f7fc ff06 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 800680c:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8006810:	4618      	mov	r0, r3
 8006812:	ee09 3a10 	vmov	s18, r3
 8006816:	f7fc feff 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 800681a:	f504 7367 	add.w	r3, r4, #924	; 0x39c
 800681e:	4618      	mov	r0, r3
 8006820:	ee0b 3a10 	vmov	s22, r3
 8006824:	f00f fad6 	bl	8015dd4 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006828:	4a33      	ldr	r2, [pc, #204]	; (80068f8 <_ZN17Main_MenuViewBaseC1Ev+0x200>)
 800682a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800682e:	e9c3 247c 	strd	r2, r4, [r3, #496]	; 0x1f0
 8006832:	4a32      	ldr	r2, [pc, #200]	; (80068fc <_ZN17Main_MenuViewBaseC1Ev+0x204>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006834:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006838:	e9c3 257e 	strd	r2, r5, [r3, #504]	; 0x1f8
 800683c:	f504 7078 	add.w	r0, r4, #992	; 0x3e0
 8006840:	f010 fae2 	bl	8016e08 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006844:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006848:	462a      	mov	r2, r5
 800684a:	4650      	mov	r0, sl
 800684c:	9300      	str	r3, [sp, #0]
 800684e:	4629      	mov	r1, r5
 8006850:	23f0      	movs	r3, #240	; 0xf0
 8006852:	f7fc fe58 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006856:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006858:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800685c:	66a3      	str	r3, [r4, #104]	; 0x68
 800685e:	4651      	mov	r1, sl
 8006860:	4630      	mov	r0, r6
 8006862:	f00b ff05 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8006866:	462a      	mov	r2, r5
 8006868:	4648      	mov	r0, r9
 800686a:	4629      	mov	r1, r5
 800686c:	f7fc fe3e 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8006870:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006872:	4648      	mov	r0, r9
 8006874:	a90e      	add	r1, sp, #56	; 0x38
 8006876:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800687a:	f00f fad2 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800687e:	4649      	mov	r1, r9
 8006880:	4630      	mov	r0, r6
 8006882:	f00b fef5 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8006886:	f44f 729a 	mov.w	r2, #308	; 0x134
 800688a:	2156      	movs	r1, #86	; 0x56
 800688c:	4640      	mov	r0, r8
 800688e:	f7fc fe2d 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8006892:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006896:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800689a:	f10d 0918 	add.w	r9, sp, #24
        color = newColor;
 800689e:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 80068a2:	4648      	mov	r0, r9
 80068a4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80068a8:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80068ac:	4641      	mov	r1, r8
 80068ae:	4798      	blx	r3
 80068b0:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80068b4:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80068b8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80068bc:	4b10      	ldr	r3, [pc, #64]	; (8006900 <_ZN17Main_MenuViewBaseC1Ev+0x208>)
 80068be:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 80068c0:	f504 7976 	add.w	r9, r4, #984	; 0x3d8
 80068c4:	b92b      	cbnz	r3, 80068d2 <_ZN17Main_MenuViewBaseC1Ev+0x1da>
 80068c6:	4b0f      	ldr	r3, [pc, #60]	; (8006904 <_ZN17Main_MenuViewBaseC1Ev+0x20c>)
 80068c8:	4a0f      	ldr	r2, [pc, #60]	; (8006908 <_ZN17Main_MenuViewBaseC1Ev+0x210>)
 80068ca:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068cc:	480f      	ldr	r0, [pc, #60]	; (800690c <_ZN17Main_MenuViewBaseC1Ev+0x214>)
 80068ce:	f026 ff77 	bl	802d7c0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80068d2:	4b0f      	ldr	r3, [pc, #60]	; (8006910 <_ZN17Main_MenuViewBaseC1Ev+0x218>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068d4:	881b      	ldrh	r3, [r3, #0]
 80068d6:	2b54      	cmp	r3, #84	; 0x54
 80068d8:	d81e      	bhi.n	8006918 <_ZN17Main_MenuViewBaseC1Ev+0x220>
 80068da:	4b0e      	ldr	r3, [pc, #56]	; (8006914 <_ZN17Main_MenuViewBaseC1Ev+0x21c>)
 80068dc:	4a0a      	ldr	r2, [pc, #40]	; (8006908 <_ZN17Main_MenuViewBaseC1Ev+0x210>)
 80068de:	2161      	movs	r1, #97	; 0x61
 80068e0:	e7f4      	b.n	80068cc <_ZN17Main_MenuViewBaseC1Ev+0x1d4>
 80068e2:	bf00      	nop
 80068e4:	0803091c 	.word	0x0803091c
 80068e8:	080318d0 	.word	0x080318d0
 80068ec:	08031b1c 	.word	0x08031b1c
 80068f0:	0802f41c 	.word	0x0802f41c
 80068f4:	08031604 	.word	0x08031604
 80068f8:	08030904 	.word	0x08030904
 80068fc:	0800669d 	.word	0x0800669d
 8006900:	200138ac 	.word	0x200138ac
 8006904:	0802f1cc 	.word	0x0802f1cc
 8006908:	0802f2d1 	.word	0x0802f2d1
 800690c:	0802f249 	.word	0x0802f249
 8006910:	200138b0 	.word	0x200138b0
 8006914:	0802f290 	.word	0x0802f290
        return texts->getText(typedTextId);
 8006918:	4bc1      	ldr	r3, [pc, #772]	; (8006c20 <_ZN17Main_MenuViewBaseC1Ev+0x528>)
 800691a:	2154      	movs	r1, #84	; 0x54
 800691c:	6818      	ldr	r0, [r3, #0]
 800691e:	f003 fdf3 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8006922:	4ac0      	ldr	r2, [pc, #768]	; (8006c24 <_ZN17Main_MenuViewBaseC1Ev+0x52c>)
 8006924:	4603      	mov	r3, r0
 8006926:	2104      	movs	r1, #4
 8006928:	4648      	mov	r0, r9
 800692a:	f015 f927 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 800692e:	4640      	mov	r0, r8
        wc1 = value;
 8006930:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8006934:	f00e fca4 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006938:	4bbb      	ldr	r3, [pc, #748]	; (8006c28 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 800693a:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 800693c:	4640      	mov	r0, r8
 800693e:	2355      	movs	r3, #85	; 0x55
 8006940:	a90e      	add	r1, sp, #56	; 0x38
 8006942:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006946:	f00e fcbb 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800694a:	4641      	mov	r1, r8
 800694c:	4630      	mov	r0, r6
 800694e:	f00b fe8f 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_ProjectInfo.setXY(33, 240);
 8006952:	ee19 0a90 	vmov	r0, s19
 8006956:	22f0      	movs	r2, #240	; 0xf0
 8006958:	2121      	movs	r1, #33	; 0x21
 800695a:	f7fc fdc7 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 800695e:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel_ProjectInfo.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006962:	aa0e      	add	r2, sp, #56	; 0x38
 8006964:	f04f 0802 	mov.w	r8, #2
 8006968:	a90d      	add	r1, sp, #52	; 0x34
 800696a:	ee19 0a90 	vmov	r0, s19
 800696e:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006972:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006976:	f00f f85e 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800697a:	236f      	movs	r3, #111	; 0x6f
        updateTextPosition();
 800697c:	ee19 0a90 	vmov	r0, s19
 8006980:	f8a4 311c 	strh.w	r3, [r4, #284]	; 0x11c
 8006984:	f7fc fdf6 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_ProjectInfo.setAction(buttonCallback);
 8006988:	f504 538f 	add.w	r3, r4, #4576	; 0x11e0
 800698c:	3310      	adds	r3, #16
 800698e:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8006992:	ee19 1a90 	vmov	r1, s19
 8006996:	4630      	mov	r0, r6
        colorPressed = col;
 8006998:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 800699c:	9303      	str	r3, [sp, #12]
 800699e:	f00b fe67 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Calibration.setXY(33, 170);
 80069a2:	ee1a 0a10 	vmov	r0, s20
 80069a6:	22aa      	movs	r2, #170	; 0xaa
 80069a8:	2121      	movs	r1, #33	; 0x21
 80069aa:	f7fc fd9f 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Calibration.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80069ae:	aa0e      	add	r2, sp, #56	; 0x38
 80069b0:	a90d      	add	r1, sp, #52	; 0x34
 80069b2:	ee1a 0a10 	vmov	r0, s20
 80069b6:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 80069ba:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 80069be:	f00f f83a 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80069c2:	2370      	movs	r3, #112	; 0x70
        updateTextPosition();
 80069c4:	ee1a 0a10 	vmov	r0, s20
 80069c8:	f8a4 3164 	strh.w	r3, [r4, #356]	; 0x164
 80069cc:	f7fc fdd2 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80069d0:	9b03      	ldr	r3, [sp, #12]
 80069d2:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80069d6:	ee1a 1a10 	vmov	r1, s20
 80069da:	4630      	mov	r0, r6
        colorPressed = col;
 80069dc:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 80069e0:	f00b fe46 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Measure.setXY(33, 100);
 80069e4:	ee1a 0a90 	vmov	r0, s21
 80069e8:	2264      	movs	r2, #100	; 0x64
 80069ea:	2121      	movs	r1, #33	; 0x21
 80069ec:	f7fc fd7e 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Measure.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80069f0:	aa0e      	add	r2, sp, #56	; 0x38
 80069f2:	a90d      	add	r1, sp, #52	; 0x34
 80069f4:	ee1a 0a90 	vmov	r0, s21
 80069f8:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 80069fc:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006a00:	f00f f819 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006a04:	2371      	movs	r3, #113	; 0x71
        updateTextPosition();
 8006a06:	ee1a 0a90 	vmov	r0, s21
 8006a0a:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006a0e:	f7fc fdb1 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006a12:	9b03      	ldr	r3, [sp, #12]
 8006a14:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006a18:	ee1a 1a90 	vmov	r1, s21
 8006a1c:	4630      	mov	r0, r6
        colorPressed = col;
 8006a1e:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8006a22:	f00b fe25 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8006a26:	230a      	movs	r3, #10
 8006a28:	9300      	str	r3, [sp, #0]
 8006a2a:	224b      	movs	r2, #75	; 0x4b
 8006a2c:	23f0      	movs	r3, #240	; 0xf0
 8006a2e:	4629      	mov	r1, r5
 8006a30:	4638      	mov	r0, r7
 8006a32:	f7fc fd68 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a36:	9b04      	ldr	r3, [sp, #16]
 8006a38:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006a3c:	22a0      	movs	r2, #160	; 0xa0
 8006a3e:	4611      	mov	r1, r2
 8006a40:	4638      	mov	r0, r7
 8006a42:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006a46:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8006a4a:	f00d fff3 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006a4e:	22a0      	movs	r2, #160	; 0xa0
 8006a50:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006a54:	4638      	mov	r0, r7
 8006a56:	f00d fff8 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006a5a:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 8006a5e:	2b20      	cmp	r3, #32
 8006a60:	d005      	beq.n	8006a6e <_ZN17Main_MenuViewBaseC1Ev+0x376>
        lineWidthQ5 = widthQ5;
 8006a62:	2320      	movs	r3, #32
 8006a64:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8006a68:	4638      	mov	r0, r7
 8006a6a:	f00d feed 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006a6e:	4638      	mov	r0, r7
 8006a70:	2101      	movs	r1, #1
 8006a72:	f00d fff5 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006a76:	4639      	mov	r1, r7
 8006a78:	4630      	mov	r0, r6
 8006a7a:	f00b fdf9 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006a7e:	f04f 35ff 	mov.w	r5, #4294967295
    textArea_menu.setXY(88, 60);
 8006a82:	223c      	movs	r2, #60	; 0x3c
 8006a84:	ee18 0a10 	vmov	r0, s16
 8006a88:	2158      	movs	r1, #88	; 0x58
        linespace = space;
 8006a8a:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
 8006a8c:	f10d 0818 	add.w	r8, sp, #24
 8006a90:	f7fc fd2c 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8006a94:	ee18 1a10 	vmov	r1, s16
 8006a98:	4640      	mov	r0, r8
        color = newColor;
 8006a9a:	f8c4 5270 	str.w	r5, [r4, #624]	; 0x270
        linespace = space;
 8006a9e:	f8a4 7274 	strh.w	r7, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8006aa2:	f00e f973 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006aa6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006aaa:	ee18 3a10 	vmov	r3, s16
 8006aae:	333c      	adds	r3, #60	; 0x3c
 8006ab0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006ab4:	4b5c      	ldr	r3, [pc, #368]	; (8006c28 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006ab6:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8006ab8:	ee18 0a10 	vmov	r0, s16
 8006abc:	2344      	movs	r3, #68	; 0x44
 8006abe:	a90e      	add	r1, sp, #56	; 0x38
 8006ac0:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006ac4:	f00e fbfc 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006ac8:	ee18 1a10 	vmov	r1, s16
 8006acc:	4630      	mov	r0, r6
 8006ace:	f00b fdcf 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006ad2:	230a      	movs	r3, #10
 8006ad4:	9300      	str	r3, [sp, #0]
 8006ad6:	2232      	movs	r2, #50	; 0x32
 8006ad8:	23f0      	movs	r3, #240	; 0xf0
 8006ada:	4639      	mov	r1, r7
 8006adc:	4658      	mov	r0, fp
 8006ade:	f7fc fd12 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006ae2:	9b05      	ldr	r3, [sp, #20]
 8006ae4:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006ae8:	22a0      	movs	r2, #160	; 0xa0
 8006aea:	4611      	mov	r1, r2
 8006aec:	4658      	mov	r0, fp
 8006aee:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006af2:	f8a4 5308 	strh.w	r5, [r4, #776]	; 0x308
 8006af6:	f00d ff9d 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006afa:	22a0      	movs	r2, #160	; 0xa0
 8006afc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006b00:	4658      	mov	r0, fp
 8006b02:	f00d ffa2 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006b06:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8006b0a:	2b20      	cmp	r3, #32
 8006b0c:	d005      	beq.n	8006b1a <_ZN17Main_MenuViewBaseC1Ev+0x422>
        lineWidthQ5 = widthQ5;
 8006b0e:	2320      	movs	r3, #32
 8006b10:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8006b14:	4658      	mov	r0, fp
 8006b16:	f00d fe97 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006b1a:	4658      	mov	r0, fp
 8006b1c:	2101      	movs	r1, #1
 8006b1e:	f00d ff9f 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006b22:	4659      	mov	r1, fp
 8006b24:	4630      	mov	r0, r6
 8006b26:	f00b fda3 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006b2a:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
 8006b2c:	ad06      	add	r5, sp, #24
    textArea_name.setXY(69, 35);
 8006b2e:	ee18 0a90 	vmov	r0, s17
 8006b32:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8006b34:	f04f 39ff 	mov.w	r9, #4294967295
 8006b38:	2145      	movs	r1, #69	; 0x45
 8006b3a:	f7fc fcd7 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006b3e:	ee18 1a90 	vmov	r1, s17
 8006b42:	4628      	mov	r0, r5
        color = newColor;
 8006b44:	f8c4 933c 	str.w	r9, [r4, #828]	; 0x33c
        linespace = space;
 8006b48:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8006b4c:	f00e f91e 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b50:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006b54:	ee18 3a90 	vmov	r3, s17
 8006b58:	333c      	adds	r3, #60	; 0x3c
 8006b5a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8006b5e:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8006b62:	4b31      	ldr	r3, [pc, #196]	; (8006c28 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006b64:	930e      	str	r3, [sp, #56]	; 0x38
 8006b66:	ee18 0a90 	vmov	r0, s17
 8006b6a:	236d      	movs	r3, #109	; 0x6d
 8006b6c:	4641      	mov	r1, r8
 8006b6e:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006b72:	f00e fba5 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b76:	ee18 1a90 	vmov	r1, s17
 8006b7a:	4630      	mov	r0, r6
 8006b7c:	f00b fd78 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8006b80:	ee19 0a10 	vmov	r0, s18
 8006b84:	220c      	movs	r2, #12
 8006b86:	2136      	movs	r1, #54	; 0x36
 8006b88:	f7fc fcb0 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8006b8c:	ee19 1a10 	vmov	r1, s18
 8006b90:	4628      	mov	r0, r5
        color = newColor;
 8006b92:	f8c4 9384 	str.w	r9, [r4, #900]	; 0x384
        linespace = space;
 8006b96:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8006b9a:	f00e f8f7 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b9e:	ee19 2a10 	vmov	r2, s18
 8006ba2:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8006ba6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006baa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006bae:	4b1e      	ldr	r3, [pc, #120]	; (8006c28 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006bb0:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8006bb2:	ee19 0a10 	vmov	r0, s18
 8006bb6:	236e      	movs	r3, #110	; 0x6e
 8006bb8:	4641      	mov	r1, r8
 8006bba:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006bbe:	f00e fb7f 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006bc2:	ee19 1a10 	vmov	r1, s18
 8006bc6:	4630      	mov	r0, r6
 8006bc8:	f00b fd52 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_turn_off.setXY(198, 5);
 8006bcc:	ee1b 0a10 	vmov	r0, s22
 8006bd0:	2205      	movs	r2, #5
 8006bd2:	21c6      	movs	r1, #198	; 0xc6
 8006bd4:	f7fc fc8a 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8006bd8:	2301      	movs	r3, #1
 8006bda:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006bde:	230a      	movs	r3, #10
    buttonWithIcon_turn_off.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8006be0:	ee1b 0a10 	vmov	r0, s22
 8006be4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006be8:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8006bec:	aa0c      	add	r2, sp, #48	; 0x30
 8006bee:	ab0d      	add	r3, sp, #52	; 0x34
 8006bf0:	a90b      	add	r1, sp, #44	; 0x2c
 8006bf2:	f8cd 8000 	str.w	r8, [sp]
 8006bf6:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 8006bfa:	f00f f856 	bl	8015caa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006bfe:	9b03      	ldr	r3, [sp, #12]
 8006c00:	f8c4 73d4 	str.w	r7, [r4, #980]	; 0x3d4
 8006c04:	4630      	mov	r0, r6
 8006c06:	ee1b 1a10 	vmov	r1, s22
 8006c0a:	f8c4 33c4 	str.w	r3, [r4, #964]	; 0x3c4
 8006c0e:	f00b fd2f 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006c12:	4620      	mov	r0, r4
 8006c14:	b011      	add	sp, #68	; 0x44
 8006c16:	ecbd 8b08 	vpop	{d8-d11}
 8006c1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006c1e:	bf00      	nop
 8006c20:	200138b8 	.word	0x200138b8
 8006c24:	0802f309 	.word	0x0802f309
 8006c28:	0802f37c 	.word	0x0802f37c

08006c2c <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006c2c:	4770      	bx	lr

08006c2e <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006c2e:	4770      	bx	lr

08006c30 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006c30:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006c32:	68c2      	ldr	r2, [r0, #12]
 8006c34:	6844      	ldr	r4, [r0, #4]
 8006c36:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006c38:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006c3a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006c3e:	07d2      	lsls	r2, r2, #31
 8006c40:	bf48      	it	mi
 8006c42:	5962      	ldrmi	r2, [r4, r5]
 8006c44:	689b      	ldr	r3, [r3, #8]
    }
 8006c46:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006c48:	bf48      	it	mi
 8006c4a:	58d3      	ldrmi	r3, [r2, r3]
 8006c4c:	4718      	bx	r3

08006c4e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006c4e:	6843      	ldr	r3, [r0, #4]
 8006c50:	b12b      	cbz	r3, 8006c5e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006c52:	6883      	ldr	r3, [r0, #8]
 8006c54:	b92b      	cbnz	r3, 8006c62 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006c56:	68c0      	ldr	r0, [r0, #12]
 8006c58:	f000 0001 	and.w	r0, r0, #1
 8006c5c:	4770      	bx	lr
 8006c5e:	4618      	mov	r0, r3
 8006c60:	4770      	bx	lr
 8006c62:	2001      	movs	r0, #1
    }
 8006c64:	4770      	bx	lr

08006c66 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006c66:	b510      	push	{r4, lr}
 8006c68:	2110      	movs	r1, #16
 8006c6a:	4604      	mov	r4, r0
 8006c6c:	f025 fec1 	bl	802c9f2 <_ZdlPvj>
 8006c70:	4620      	mov	r0, r4
 8006c72:	bd10      	pop	{r4, pc}

08006c74 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006c74:	b510      	push	{r4, lr}
 8006c76:	4b03      	ldr	r3, [pc, #12]	; (8006c84 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8006c78:	6003      	str	r3, [r0, #0]
 8006c7a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006c7c:	f010 f8ce 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006c80:	4620      	mov	r0, r4
 8006c82:	bd10      	pop	{r4, pc}
 8006c84:	08030968 	.word	0x08030968

08006c88 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006c88:	b507      	push	{r0, r1, r2, lr}
 8006c8a:	4b07      	ldr	r3, [pc, #28]	; (8006ca8 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8006c8c:	6003      	str	r3, [r0, #0]
 8006c8e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006c90:	f010 f8c4 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006c94:	9801      	ldr	r0, [sp, #4]
 8006c96:	f241 11c4 	movw	r1, #4548	; 0x11c4
 8006c9a:	f025 feaa 	bl	802c9f2 <_ZdlPvj>
 8006c9e:	9801      	ldr	r0, [sp, #4]
 8006ca0:	b003      	add	sp, #12
 8006ca2:	f85d fb04 	ldr.w	pc, [sp], #4
 8006ca6:	bf00      	nop
 8006ca8:	08030968 	.word	0x08030968

08006cac <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006cac:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 8006cae:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 8006cb2:	4299      	cmp	r1, r3
{
 8006cb4:	4604      	mov	r4, r0
 8006cb6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 8006cb8:	d103      	bne.n	8006cc2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006cba:	f011 fdb1 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8006cbe:	f7fe fb97 	bl	80053f0 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_Single)
 8006cc2:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006cc6:	429d      	cmp	r5, r3
 8006cc8:	d103      	bne.n	8006cd2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006cca:	f011 fda9 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_Single clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006cce:	f7fe fbbf 	bl	8005450 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_Accurate)
 8006cd2:	f504 7496 	add.w	r4, r4, #300	; 0x12c
 8006cd6:	42a5      	cmp	r5, r4
 8006cd8:	d105      	bne.n	8006ce6 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006cda:	f011 fda1 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_Accurate clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8006cde:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8006ce2:	f7fe bbe5 	b.w	80054b0 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8006ce6:	bd38      	pop	{r3, r4, r5, pc}

08006ce8 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8006ce8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006cec:	ed2d 8b06 	vpush	{d8-d10}
 8006cf0:	4604      	mov	r4, r0
 8006cf2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8006cf4:	46a2      	mov	sl, r4
 8006cf6:	2500      	movs	r5, #0
 8006cf8:	f013 fa12 	bl	801a120 <_ZN8touchgfx6ScreenC1Ev>
 8006cfc:	4b71      	ldr	r3, [pc, #452]	; (8006ec4 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
 8006cfe:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006d00:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8006d04:	2226      	movs	r2, #38	; 0x26
 8006d06:	4629      	mov	r1, r5
 8006d08:	4650      	mov	r0, sl
 8006d0a:	f026 ff5e 	bl	802dbca <memset>
 8006d0e:	4650      	mov	r0, sl
 8006d10:	f7fc fc1e 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 8006d14:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8006d18:	26ff      	movs	r6, #255	; 0xff
 8006d1a:	4b6b      	ldr	r3, [pc, #428]	; (8006ec8 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8006d1c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006d1e:	2226      	movs	r2, #38	; 0x26
 8006d20:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006d24:	4629      	mov	r1, r5
 8006d26:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006d2a:	4648      	mov	r0, r9
 8006d2c:	66a5      	str	r5, [r4, #104]	; 0x68
 8006d2e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006d32:	f026 ff4a 	bl	802dbca <memset>
 8006d36:	4648      	mov	r0, r9
 8006d38:	f7fc fc0a 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 8006d3c:	4b63      	ldr	r3, [pc, #396]	; (8006ecc <_ZN19MeasurementViewBaseC1Ev+0x1e4>)
 8006d3e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006d40:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006d44:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006d48:	a90a      	add	r1, sp, #40	; 0x28
 8006d4a:	4648      	mov	r0, r9
 8006d4c:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006d50:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006d54:	f00f f865 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006d58:	4640      	mov	r0, r8
 8006d5a:	f7fc fc5d 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006d5e:	4b5c      	ldr	r3, [pc, #368]	; (8006ed0 <_ZN19MeasurementViewBaseC1Ev+0x1e8>)
 8006d60:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006d64:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006d68:	4618      	mov	r0, r3
 8006d6a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006d6e:	ee09 3a90 	vmov	s19, r3
 8006d72:	f00f f98d 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006d76:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8006d7a:	4618      	mov	r0, r3
 8006d7c:	ee0a 3a10 	vmov	s20, r3
 8006d80:	f00f f986 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006d84:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006d88:	4618      	mov	r0, r3
 8006d8a:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 8006d8e:	ee0a 3a90 	vmov	s21, r3
 8006d92:	f00f f97d 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006d96:	4638      	mov	r0, r7
 8006d98:	f00d fd36 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006d9c:	4e4d      	ldr	r6, [pc, #308]	; (8006ed4 <_ZN19MeasurementViewBaseC1Ev+0x1ec>)
 8006d9e:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 8006da2:	4618      	mov	r0, r3
 8006da4:	9302      	str	r3, [sp, #8]
 8006da6:	f7fc f9d7 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006daa:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006dae:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 8006db2:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006db6:	4618      	mov	r0, r3
 8006db8:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 8006dbc:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8006dc0:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8006dc4:	ee08 3a10 	vmov	s16, r3
 8006dc8:	f7fc fc26 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8006dcc:	4658      	mov	r0, fp
 8006dce:	f00d fd1b 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 8006dd2:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 8006dd6:	4618      	mov	r0, r3
 8006dd8:	9303      	str	r3, [sp, #12]
 8006dda:	f7fc f9bd 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006dde:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006de2:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8006de6:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8006dea:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 8006dee:	4618      	mov	r0, r3
 8006df0:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006df4:	ee08 3a90 	vmov	s17, r3
 8006df8:	f7fc fc0e 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8006dfc:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8006e00:	4618      	mov	r0, r3
 8006e02:	ee09 3a10 	vmov	s18, r3
 8006e06:	f7fc fc07 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006e0a:	4a33      	ldr	r2, [pc, #204]	; (8006ed8 <_ZN19MeasurementViewBaseC1Ev+0x1f0>)
 8006e0c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006e10:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 8006e14:	4a31      	ldr	r2, [pc, #196]	; (8006edc <_ZN19MeasurementViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006e16:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006e1a:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 8006e1e:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 8006e22:	f00f fff1 	bl	8016e08 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006e26:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006e2a:	462a      	mov	r2, r5
 8006e2c:	4650      	mov	r0, sl
 8006e2e:	9300      	str	r3, [sp, #0]
 8006e30:	4629      	mov	r1, r5
 8006e32:	23f0      	movs	r3, #240	; 0xf0
 8006e34:	f7fc fb67 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006e38:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006e3a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006e3e:	66a3      	str	r3, [r4, #104]	; 0x68
 8006e40:	4651      	mov	r1, sl
 8006e42:	4630      	mov	r0, r6
 8006e44:	f00b fc14 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8006e48:	462a      	mov	r2, r5
 8006e4a:	4648      	mov	r0, r9
 8006e4c:	4629      	mov	r1, r5
 8006e4e:	f7fc fb4d 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8006e52:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006e54:	4648      	mov	r0, r9
 8006e56:	a90a      	add	r1, sp, #40	; 0x28
 8006e58:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006e5c:	f00e ffe1 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006e60:	4649      	mov	r1, r9
 8006e62:	4630      	mov	r0, r6
 8006e64:	f00b fc04 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8006e68:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006e6c:	2156      	movs	r1, #86	; 0x56
 8006e6e:	4640      	mov	r0, r8
 8006e70:	f7fc fb3c 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8006e74:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006e78:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006e7c:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 8006e80:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8006e84:	4648      	mov	r0, r9
 8006e86:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006e8a:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006e8e:	4641      	mov	r1, r8
 8006e90:	4798      	blx	r3
 8006e92:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8006e96:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006e9a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006e9e:	4b10      	ldr	r3, [pc, #64]	; (8006ee0 <_ZN19MeasurementViewBaseC1Ev+0x1f8>)
 8006ea0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8006ea2:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 8006ea6:	b92b      	cbnz	r3, 8006eb4 <_ZN19MeasurementViewBaseC1Ev+0x1cc>
 8006ea8:	4b0e      	ldr	r3, [pc, #56]	; (8006ee4 <_ZN19MeasurementViewBaseC1Ev+0x1fc>)
 8006eaa:	4a0f      	ldr	r2, [pc, #60]	; (8006ee8 <_ZN19MeasurementViewBaseC1Ev+0x200>)
 8006eac:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006eae:	480f      	ldr	r0, [pc, #60]	; (8006eec <_ZN19MeasurementViewBaseC1Ev+0x204>)
 8006eb0:	f026 fc86 	bl	802d7c0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006eb4:	4b0e      	ldr	r3, [pc, #56]	; (8006ef0 <_ZN19MeasurementViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006eb6:	881b      	ldrh	r3, [r3, #0]
 8006eb8:	2b45      	cmp	r3, #69	; 0x45
 8006eba:	d81d      	bhi.n	8006ef8 <_ZN19MeasurementViewBaseC1Ev+0x210>
 8006ebc:	4b0d      	ldr	r3, [pc, #52]	; (8006ef4 <_ZN19MeasurementViewBaseC1Ev+0x20c>)
 8006ebe:	4a0a      	ldr	r2, [pc, #40]	; (8006ee8 <_ZN19MeasurementViewBaseC1Ev+0x200>)
 8006ec0:	2161      	movs	r1, #97	; 0x61
 8006ec2:	e7f4      	b.n	8006eae <_ZN19MeasurementViewBaseC1Ev+0x1c6>
 8006ec4:	08030968 	.word	0x08030968
 8006ec8:	080318d0 	.word	0x080318d0
 8006ecc:	08031b1c 	.word	0x08031b1c
 8006ed0:	0802f41c 	.word	0x0802f41c
 8006ed4:	08031604 	.word	0x08031604
 8006ed8:	08030950 	.word	0x08030950
 8006edc:	08006cad 	.word	0x08006cad
 8006ee0:	200138ac 	.word	0x200138ac
 8006ee4:	0802f1cc 	.word	0x0802f1cc
 8006ee8:	0802f2d1 	.word	0x0802f2d1
 8006eec:	0802f249 	.word	0x0802f249
 8006ef0:	200138b0 	.word	0x200138b0
 8006ef4:	0802f290 	.word	0x0802f290
        return texts->getText(typedTextId);
 8006ef8:	4bad      	ldr	r3, [pc, #692]	; (80071b0 <_ZN19MeasurementViewBaseC1Ev+0x4c8>)
 8006efa:	2145      	movs	r1, #69	; 0x45
 8006efc:	6818      	ldr	r0, [r3, #0]
 8006efe:	f003 fb03 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8006f02:	4aac      	ldr	r2, [pc, #688]	; (80071b4 <_ZN19MeasurementViewBaseC1Ev+0x4cc>)
 8006f04:	4603      	mov	r3, r0
 8006f06:	2104      	movs	r1, #4
 8006f08:	4648      	mov	r0, r9
 8006f0a:	f014 fe37 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 8006f0e:	4640      	mov	r0, r8
        wc1 = value;
 8006f10:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8006f14:	f00e f9b4 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006f18:	4ba7      	ldr	r3, [pc, #668]	; (80071b8 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 8006f1a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8006f1c:	4640      	mov	r0, r8
 8006f1e:	2346      	movs	r3, #70	; 0x46
 8006f20:	a90a      	add	r1, sp, #40	; 0x28
 8006f22:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006f26:	f00e f9cb 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006f2a:	4641      	mov	r1, r8
 8006f2c:	4630      	mov	r0, r6
 8006f2e:	f00b fb9f 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 8006f32:	ee19 0a90 	vmov	r0, s19
 8006f36:	22f0      	movs	r2, #240	; 0xf0
 8006f38:	2121      	movs	r1, #33	; 0x21
 8006f3a:	f7fc fad7 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8006f3e:	f04f 0802 	mov.w	r8, #2
 8006f42:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006f44:	a909      	add	r1, sp, #36	; 0x24
 8006f46:	ee19 0a90 	vmov	r0, s19
 8006f4a:	aa0a      	add	r2, sp, #40	; 0x28
 8006f4c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006f50:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 8006f54:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006f58:	f00e fd6d 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006f5c:	226a      	movs	r2, #106	; 0x6a
 8006f5e:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 8006f62:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 8006f66:	ee19 0a90 	vmov	r0, s19
 8006f6a:	f7fc fb03 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006f6e:	ee19 1a90 	vmov	r1, s19
 8006f72:	4630      	mov	r0, r6
        colorPressed = col;
 8006f74:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8006f78:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 8006f7c:	f00b fb78 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Accurate.setXY(33, 170);
 8006f80:	ee1a 0a10 	vmov	r0, s20
 8006f84:	22aa      	movs	r2, #170	; 0xaa
 8006f86:	2121      	movs	r1, #33	; 0x21
 8006f88:	f7fc fab0 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8006f8c:	2303      	movs	r3, #3
    buttonWithLabel_Accurate.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006f8e:	a909      	add	r1, sp, #36	; 0x24
 8006f90:	ee1a 0a10 	vmov	r0, s20
 8006f94:	aa0a      	add	r2, sp, #40	; 0x28
 8006f96:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006f9a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006f9e:	f00e fd4a 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006fa2:	2269      	movs	r2, #105	; 0x69
 8006fa4:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 8006fa8:	ee1a 0a10 	vmov	r0, s20
 8006fac:	f7fc fae2 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006fb0:	ee1a 1a10 	vmov	r1, s20
 8006fb4:	4630      	mov	r0, r6
        colorPressed = col;
 8006fb6:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8006fba:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 8006fbe:	f00b fb57 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Single.setXY(33, 100);
 8006fc2:	ee1a 0a90 	vmov	r0, s21
 8006fc6:	2264      	movs	r2, #100	; 0x64
 8006fc8:	2121      	movs	r1, #33	; 0x21
 8006fca:	f7fc fa8f 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Single.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006fce:	aa0a      	add	r2, sp, #40	; 0x28
 8006fd0:	2303      	movs	r3, #3
 8006fd2:	a909      	add	r1, sp, #36	; 0x24
 8006fd4:	ee1a 0a90 	vmov	r0, s21
 8006fd8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006fdc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006fe0:	f00e fd29 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006fe4:	2368      	movs	r3, #104	; 0x68
 8006fe6:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 8006fea:	ee1a 0a90 	vmov	r0, s21
 8006fee:	f7fc fac1 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006ff2:	ee1a 1a90 	vmov	r1, s21
 8006ff6:	4630      	mov	r0, r6
        colorPressed = col;
 8006ff8:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8006ffc:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8007000:	f00b fb36 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8007004:	230a      	movs	r3, #10
 8007006:	9300      	str	r3, [sp, #0]
 8007008:	224b      	movs	r2, #75	; 0x4b
 800700a:	23f0      	movs	r3, #240	; 0xf0
 800700c:	4629      	mov	r1, r5
 800700e:	4638      	mov	r0, r7
 8007010:	f7fc fa79 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007014:	9b02      	ldr	r3, [sp, #8]
 8007016:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800701a:	22a0      	movs	r2, #160	; 0xa0
 800701c:	4611      	mov	r1, r2
 800701e:	4638      	mov	r0, r7
 8007020:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007024:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8007028:	f00d fd04 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800702c:	22a0      	movs	r2, #160	; 0xa0
 800702e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007032:	4638      	mov	r0, r7
 8007034:	f00d fd09 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007038:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 800703c:	2b20      	cmp	r3, #32
 800703e:	d005      	beq.n	800704c <_ZN19MeasurementViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 8007040:	2320      	movs	r3, #32
 8007042:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8007046:	4638      	mov	r0, r7
 8007048:	f00d fbfe 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800704c:	4638      	mov	r0, r7
 800704e:	2101      	movs	r1, #1
 8007050:	f00d fd06 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007054:	4639      	mov	r1, r7
 8007056:	4630      	mov	r0, r6
 8007058:	f00b fb0a 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800705c:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(61, 60);
 8007060:	223c      	movs	r2, #60	; 0x3c
 8007062:	ee18 0a10 	vmov	r0, s16
 8007066:	213d      	movs	r1, #61	; 0x3d
        linespace = space;
 8007068:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 800706c:	ad04      	add	r5, sp, #16
 800706e:	f7fc fa3d 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8007072:	ee18 1a10 	vmov	r1, s16
 8007076:	4628      	mov	r0, r5
        color = newColor;
 8007078:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 800707c:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007080:	f00d fe84 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007084:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007088:	ee18 3a10 	vmov	r3, s16
 800708c:	333c      	adds	r3, #60	; 0x3c
 800708e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007092:	4b49      	ldr	r3, [pc, #292]	; (80071b8 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 8007094:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8007096:	ee18 0a10 	vmov	r0, s16
 800709a:	2353      	movs	r3, #83	; 0x53
 800709c:	a90a      	add	r1, sp, #40	; 0x28
 800709e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070a2:	f00e f90d 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070a6:	ee18 1a10 	vmov	r1, s16
 80070aa:	4630      	mov	r0, r6
 80070ac:	f00b fae0 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80070b0:	230a      	movs	r3, #10
 80070b2:	9300      	str	r3, [sp, #0]
 80070b4:	2232      	movs	r2, #50	; 0x32
 80070b6:	23f0      	movs	r3, #240	; 0xf0
 80070b8:	4641      	mov	r1, r8
 80070ba:	4658      	mov	r0, fp
 80070bc:	f7fc fa23 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 80070c0:	9b03      	ldr	r3, [sp, #12]
 80070c2:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80070c6:	22a0      	movs	r2, #160	; 0xa0
 80070c8:	4611      	mov	r1, r2
 80070ca:	4658      	mov	r0, fp
 80070cc:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 80070d0:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 80070d4:	f00d fcae 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80070d8:	22a0      	movs	r2, #160	; 0xa0
 80070da:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80070de:	4658      	mov	r0, fp
 80070e0:	f00d fcb3 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80070e4:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 80070e8:	2b20      	cmp	r3, #32
 80070ea:	d005      	beq.n	80070f8 <_ZN19MeasurementViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 80070ec:	2320      	movs	r3, #32
 80070ee:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 80070f2:	4658      	mov	r0, fp
 80070f4:	f00d fba8 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80070f8:	4658      	mov	r0, fp
 80070fa:	2101      	movs	r1, #1
 80070fc:	f00d fcb0 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007100:	4659      	mov	r1, fp
 8007102:	4630      	mov	r0, r6
 8007104:	f00b fab4 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007108:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 800710c:	ee18 0a90 	vmov	r0, s17
 8007110:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007112:	2700      	movs	r7, #0
 8007114:	2145      	movs	r1, #69	; 0x45
 8007116:	f7fc f9e9 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800711a:	ee18 1a90 	vmov	r1, s17
 800711e:	4628      	mov	r0, r5
        color = newColor;
 8007120:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 8007124:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8007128:	f00d fe30 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800712c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007130:	ee18 3a90 	vmov	r3, s17
 8007134:	333c      	adds	r3, #60	; 0x3c
 8007136:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800713a:	4b1f      	ldr	r3, [pc, #124]	; (80071b8 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 800713c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 800713e:	ee18 0a90 	vmov	r0, s17
 8007142:	236b      	movs	r3, #107	; 0x6b
 8007144:	a90a      	add	r1, sp, #40	; 0x28
 8007146:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800714a:	f00e f8b9 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800714e:	ee18 1a90 	vmov	r1, s17
 8007152:	4630      	mov	r0, r6
 8007154:	f00b fa8c 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8007158:	ee19 0a10 	vmov	r0, s18
 800715c:	220c      	movs	r2, #12
 800715e:	2136      	movs	r1, #54	; 0x36
 8007160:	f7fc f9c4 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8007164:	ee19 1a10 	vmov	r1, s18
 8007168:	4628      	mov	r0, r5
        color = newColor;
 800716a:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 800716e:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8007172:	f00d fe0b 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007176:	ee19 2a10 	vmov	r2, s18
 800717a:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 800717e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007182:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007186:	4b0c      	ldr	r3, [pc, #48]	; (80071b8 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 8007188:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 800718a:	ee19 0a10 	vmov	r0, s18
 800718e:	236c      	movs	r3, #108	; 0x6c
 8007190:	a90a      	add	r1, sp, #40	; 0x28
 8007192:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007196:	f00e f893 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800719a:	4630      	mov	r0, r6
 800719c:	ee19 1a10 	vmov	r1, s18
 80071a0:	f00b fa66 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80071a4:	4620      	mov	r0, r4
 80071a6:	b00d      	add	sp, #52	; 0x34
 80071a8:	ecbd 8b06 	vpop	{d8-d10}
 80071ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80071b0:	200138b8 	.word	0x200138b8
 80071b4:	0802f309 	.word	0x0802f309
 80071b8:	0802f37c 	.word	0x0802f37c

080071bc <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 80071bc:	4770      	bx	lr

080071be <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80071be:	4770      	bx	lr

080071c0 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80071c0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80071c2:	68c2      	ldr	r2, [r0, #12]
 80071c4:	6844      	ldr	r4, [r0, #4]
 80071c6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80071c8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80071ca:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80071ce:	07d2      	lsls	r2, r2, #31
 80071d0:	bf48      	it	mi
 80071d2:	5962      	ldrmi	r2, [r4, r5]
 80071d4:	689b      	ldr	r3, [r3, #8]
    }
 80071d6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80071d8:	bf48      	it	mi
 80071da:	58d3      	ldrmi	r3, [r2, r3]
 80071dc:	4718      	bx	r3

080071de <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80071de:	6843      	ldr	r3, [r0, #4]
 80071e0:	b12b      	cbz	r3, 80071ee <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80071e2:	6883      	ldr	r3, [r0, #8]
 80071e4:	b92b      	cbnz	r3, 80071f2 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80071e6:	68c0      	ldr	r0, [r0, #12]
 80071e8:	f000 0001 	and.w	r0, r0, #1
 80071ec:	4770      	bx	lr
 80071ee:	4618      	mov	r0, r3
 80071f0:	4770      	bx	lr
 80071f2:	2001      	movs	r0, #1
    }
 80071f4:	4770      	bx	lr

080071f6 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80071f6:	b510      	push	{r4, lr}
 80071f8:	2110      	movs	r1, #16
 80071fa:	4604      	mov	r4, r0
 80071fc:	f025 fbf9 	bl	802c9f2 <_ZdlPvj>
 8007200:	4620      	mov	r0, r4
 8007202:	bd10      	pop	{r4, pc}

08007204 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8007204:	b510      	push	{r4, lr}
 8007206:	4b03      	ldr	r3, [pc, #12]	; (8007214 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8007208:	6003      	str	r3, [r0, #0]
 800720a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800720c:	f00f fe06 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007210:	4620      	mov	r0, r4
 8007212:	bd10      	pop	{r4, pc}
 8007214:	080309b4 	.word	0x080309b4

08007218 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8007218:	b507      	push	{r0, r1, r2, lr}
 800721a:	4b07      	ldr	r3, [pc, #28]	; (8007238 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 800721c:	6003      	str	r3, [r0, #0]
 800721e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007220:	f00f fdfc 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007224:	9801      	ldr	r0, [sp, #4]
 8007226:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800722a:	f025 fbe2 	bl	802c9f2 <_ZdlPvj>
 800722e:	9801      	ldr	r0, [sp, #4]
 8007230:	b003      	add	sp, #12
 8007232:	f85d fb04 	ldr.w	pc, [sp], #4
 8007236:	bf00      	nop
 8007238:	080309b4 	.word	0x080309b4

0800723c <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800723c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 800723e:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 8007242:	4299      	cmp	r1, r3
{
 8007244:	4604      	mov	r4, r0
 8007246:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 8007248:	d103      	bne.n	8007252 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800724a:	f011 fae9 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 800724e:	f7fe f8ef 	bl	8005430 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_3Phase)
 8007252:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8007256:	429d      	cmp	r5, r3
 8007258:	d103      	bne.n	8007262 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800725a:	f011 fae1 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_3Phase clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 800725e:	f7fe f957 	bl	8005510 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_1Phase)
 8007262:	f504 74ba 	add.w	r4, r4, #372	; 0x174
 8007266:	42a5      	cmp	r5, r4
 8007268:	d105      	bne.n	8007276 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800726a:	f011 fad9 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_1Phase clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 800726e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8007272:	f7fe b93d 	b.w	80054f0 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8007276:	bd38      	pop	{r3, r4, r5, pc}

08007278 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8007278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800727c:	ed2d 8b06 	vpush	{d8-d10}
 8007280:	4604      	mov	r4, r0
 8007282:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8007284:	46a2      	mov	sl, r4
 8007286:	2500      	movs	r5, #0
 8007288:	f012 ff4a 	bl	801a120 <_ZN8touchgfx6ScreenC1Ev>
 800728c:	4b71      	ldr	r3, [pc, #452]	; (8007454 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
 800728e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007290:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8007294:	2226      	movs	r2, #38	; 0x26
 8007296:	4629      	mov	r1, r5
 8007298:	4650      	mov	r0, sl
 800729a:	f026 fc96 	bl	802dbca <memset>
 800729e:	4650      	mov	r0, sl
 80072a0:	f7fc f956 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 80072a4:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 80072a8:	26ff      	movs	r6, #255	; 0xff
 80072aa:	4b6b      	ldr	r3, [pc, #428]	; (8007458 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 80072ac:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80072ae:	2226      	movs	r2, #38	; 0x26
 80072b0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80072b4:	4629      	mov	r1, r5
 80072b6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80072ba:	4648      	mov	r0, r9
 80072bc:	66a5      	str	r5, [r4, #104]	; 0x68
 80072be:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80072c2:	f026 fc82 	bl	802dbca <memset>
 80072c6:	4648      	mov	r0, r9
 80072c8:	f7fc f942 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 80072cc:	4b63      	ldr	r3, [pc, #396]	; (800745c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>)
 80072ce:	66e3      	str	r3, [r4, #108]	; 0x6c
 80072d0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80072d4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80072d8:	a90a      	add	r1, sp, #40	; 0x28
 80072da:	4648      	mov	r0, r9
 80072dc:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80072e0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80072e4:	f00e fd9d 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80072e8:	4640      	mov	r0, r8
 80072ea:	f7fc f995 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80072ee:	4b5c      	ldr	r3, [pc, #368]	; (8007460 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e8>)
 80072f0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80072f4:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80072f8:	4618      	mov	r0, r3
 80072fa:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80072fe:	ee09 3a90 	vmov	s19, r3
 8007302:	f00e fec5 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007306:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 800730a:	4618      	mov	r0, r3
 800730c:	ee0a 3a10 	vmov	s20, r3
 8007310:	f00e febe 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007314:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8007318:	4618      	mov	r0, r3
 800731a:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 800731e:	ee0a 3a90 	vmov	s21, r3
 8007322:	f00e feb5 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007326:	4638      	mov	r0, r7
 8007328:	f00d fa6e 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800732c:	4e4d      	ldr	r6, [pc, #308]	; (8007464 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1ec>)
 800732e:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 8007332:	4618      	mov	r0, r3
 8007334:	9302      	str	r3, [sp, #8]
 8007336:	f7fb ff0f 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800733a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800733e:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 8007342:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007346:	4618      	mov	r0, r3
 8007348:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 800734c:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8007350:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8007354:	ee08 3a10 	vmov	s16, r3
 8007358:	f7fc f95e 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 800735c:	4658      	mov	r0, fp
 800735e:	f00d fa53 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 8007362:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 8007366:	4618      	mov	r0, r3
 8007368:	9303      	str	r3, [sp, #12]
 800736a:	f7fb fef5 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800736e:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007372:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8007376:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 800737a:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 800737e:	4618      	mov	r0, r3
 8007380:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8007384:	ee08 3a90 	vmov	s17, r3
 8007388:	f7fc f946 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 800738c:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007390:	4618      	mov	r0, r3
 8007392:	ee09 3a10 	vmov	s18, r3
 8007396:	f7fc f93f 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800739a:	4a33      	ldr	r2, [pc, #204]	; (8007468 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f0>)
 800739c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80073a0:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 80073a4:	4a31      	ldr	r2, [pc, #196]	; (800746c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80073a6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80073aa:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 80073ae:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 80073b2:	f00f fd29 	bl	8016e08 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80073b6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80073ba:	462a      	mov	r2, r5
 80073bc:	4650      	mov	r0, sl
 80073be:	9300      	str	r3, [sp, #0]
 80073c0:	4629      	mov	r1, r5
 80073c2:	23f0      	movs	r3, #240	; 0xf0
 80073c4:	f7fc f89f 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 80073c8:	1d26      	adds	r6, r4, #4
        color = newColor;
 80073ca:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80073ce:	66a3      	str	r3, [r4, #104]	; 0x68
 80073d0:	4651      	mov	r1, sl
 80073d2:	4630      	mov	r0, r6
 80073d4:	f00b f94c 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_return.setXY(0, 0);
 80073d8:	462a      	mov	r2, r5
 80073da:	4648      	mov	r0, r9
 80073dc:	4629      	mov	r1, r5
 80073de:	f7fc f885 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 80073e2:	2308      	movs	r3, #8
    image_return.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80073e4:	4648      	mov	r0, r9
 80073e6:	a90a      	add	r1, sp, #40	; 0x28
 80073e8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80073ec:	f00e fd19 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80073f0:	4649      	mov	r1, r9
 80073f2:	4630      	mov	r0, r6
 80073f4:	f00b f93c 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 80073f8:	f44f 729a 	mov.w	r2, #308	; 0x134
 80073fc:	2156      	movs	r1, #86	; 0x56
 80073fe:	4640      	mov	r0, r8
 8007400:	f7fc f874 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8007404:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007408:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800740c:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 8007410:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8007414:	4648      	mov	r0, r9
 8007416:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800741a:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800741e:	4641      	mov	r1, r8
 8007420:	4798      	blx	r3
 8007422:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8007426:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800742a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800742e:	4b10      	ldr	r3, [pc, #64]	; (8007470 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f8>)
 8007430:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8007432:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 8007436:	b92b      	cbnz	r3, 8007444 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>
 8007438:	4b0e      	ldr	r3, [pc, #56]	; (8007474 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1fc>)
 800743a:	4a0f      	ldr	r2, [pc, #60]	; (8007478 <_ZN28Measurement_AccurateViewBaseC1Ev+0x200>)
 800743c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800743e:	480f      	ldr	r0, [pc, #60]	; (800747c <_ZN28Measurement_AccurateViewBaseC1Ev+0x204>)
 8007440:	f026 f9be 	bl	802d7c0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007444:	4b0e      	ldr	r3, [pc, #56]	; (8007480 <_ZN28Measurement_AccurateViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007446:	881b      	ldrh	r3, [r3, #0]
 8007448:	2b40      	cmp	r3, #64	; 0x40
 800744a:	d81d      	bhi.n	8007488 <_ZN28Measurement_AccurateViewBaseC1Ev+0x210>
 800744c:	4b0d      	ldr	r3, [pc, #52]	; (8007484 <_ZN28Measurement_AccurateViewBaseC1Ev+0x20c>)
 800744e:	4a0a      	ldr	r2, [pc, #40]	; (8007478 <_ZN28Measurement_AccurateViewBaseC1Ev+0x200>)
 8007450:	2161      	movs	r1, #97	; 0x61
 8007452:	e7f4      	b.n	800743e <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c6>
 8007454:	080309b4 	.word	0x080309b4
 8007458:	080318d0 	.word	0x080318d0
 800745c:	08031b1c 	.word	0x08031b1c
 8007460:	0802f41c 	.word	0x0802f41c
 8007464:	08031604 	.word	0x08031604
 8007468:	0803099c 	.word	0x0803099c
 800746c:	0800723d 	.word	0x0800723d
 8007470:	200138ac 	.word	0x200138ac
 8007474:	0802f1cc 	.word	0x0802f1cc
 8007478:	0802f2d1 	.word	0x0802f2d1
 800747c:	0802f249 	.word	0x0802f249
 8007480:	200138b0 	.word	0x200138b0
 8007484:	0802f290 	.word	0x0802f290
        return texts->getText(typedTextId);
 8007488:	4bad      	ldr	r3, [pc, #692]	; (8007740 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4c8>)
 800748a:	2140      	movs	r1, #64	; 0x40
 800748c:	6818      	ldr	r0, [r3, #0]
 800748e:	f003 f83b 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8007492:	4aac      	ldr	r2, [pc, #688]	; (8007744 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4cc>)
 8007494:	4603      	mov	r3, r0
 8007496:	2104      	movs	r1, #4
 8007498:	4648      	mov	r0, r9
 800749a:	f014 fb6f 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 800749e:	4640      	mov	r0, r8
        wc1 = value;
 80074a0:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 80074a4:	f00d feec 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80074a8:	4ba7      	ldr	r3, [pc, #668]	; (8007748 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 80074aa:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 80074ac:	4640      	mov	r0, r8
 80074ae:	2341      	movs	r3, #65	; 0x41
 80074b0:	a90a      	add	r1, sp, #40	; 0x28
 80074b2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80074b6:	f00d ff03 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074ba:	4641      	mov	r1, r8
 80074bc:	4630      	mov	r0, r6
 80074be:	f00b f8d7 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 80074c2:	ee19 0a90 	vmov	r0, s19
 80074c6:	22f0      	movs	r2, #240	; 0xf0
 80074c8:	2121      	movs	r1, #33	; 0x21
 80074ca:	f7fc f80f 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 80074ce:	f04f 0802 	mov.w	r8, #2
 80074d2:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80074d4:	a909      	add	r1, sp, #36	; 0x24
 80074d6:	ee19 0a90 	vmov	r0, s19
 80074da:	aa0a      	add	r2, sp, #40	; 0x28
 80074dc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80074e0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 80074e4:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80074e8:	f00e faa5 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80074ec:	225e      	movs	r2, #94	; 0x5e
 80074ee:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 80074f2:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 80074f6:	ee19 0a90 	vmov	r0, s19
 80074fa:	f7fc f83b 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80074fe:	ee19 1a90 	vmov	r1, s19
 8007502:	4630      	mov	r0, r6
        colorPressed = col;
 8007504:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8007508:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 800750c:	f00b f8b0 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_3Phase.setXY(33, 170);
 8007510:	ee1a 0a10 	vmov	r0, s20
 8007514:	22aa      	movs	r2, #170	; 0xaa
 8007516:	2121      	movs	r1, #33	; 0x21
 8007518:	f7fb ffe8 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 800751c:	2303      	movs	r3, #3
    buttonWithLabel_3Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800751e:	a909      	add	r1, sp, #36	; 0x24
 8007520:	ee1a 0a10 	vmov	r0, s20
 8007524:	aa0a      	add	r2, sp, #40	; 0x28
 8007526:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800752a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800752e:	f00e fa82 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007532:	225d      	movs	r2, #93	; 0x5d
 8007534:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 8007538:	ee1a 0a10 	vmov	r0, s20
 800753c:	f7fc f81a 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007540:	ee1a 1a10 	vmov	r1, s20
 8007544:	4630      	mov	r0, r6
        colorPressed = col;
 8007546:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 800754a:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 800754e:	f00b f88f 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_1Phase.setXY(33, 100);
 8007552:	ee1a 0a90 	vmov	r0, s21
 8007556:	2264      	movs	r2, #100	; 0x64
 8007558:	2121      	movs	r1, #33	; 0x21
 800755a:	f7fb ffc7 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_1Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800755e:	aa0a      	add	r2, sp, #40	; 0x28
 8007560:	2303      	movs	r3, #3
 8007562:	a909      	add	r1, sp, #36	; 0x24
 8007564:	ee1a 0a90 	vmov	r0, s21
 8007568:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800756c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007570:	f00e fa61 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007574:	235c      	movs	r3, #92	; 0x5c
 8007576:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 800757a:	ee1a 0a90 	vmov	r0, s21
 800757e:	f7fb fff9 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007582:	ee1a 1a90 	vmov	r1, s21
 8007586:	4630      	mov	r0, r6
        colorPressed = col;
 8007588:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 800758c:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8007590:	f00b f86e 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8007594:	230a      	movs	r3, #10
 8007596:	9300      	str	r3, [sp, #0]
 8007598:	224b      	movs	r2, #75	; 0x4b
 800759a:	23f0      	movs	r3, #240	; 0xf0
 800759c:	4629      	mov	r1, r5
 800759e:	4638      	mov	r0, r7
 80075a0:	f7fb ffb1 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 80075a4:	9b02      	ldr	r3, [sp, #8]
 80075a6:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80075aa:	22a0      	movs	r2, #160	; 0xa0
 80075ac:	4611      	mov	r1, r2
 80075ae:	4638      	mov	r0, r7
 80075b0:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 80075b4:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 80075b8:	f00d fa3c 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80075bc:	22a0      	movs	r2, #160	; 0xa0
 80075be:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80075c2:	4638      	mov	r0, r7
 80075c4:	f00d fa41 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80075c8:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 80075cc:	2b20      	cmp	r3, #32
 80075ce:	d005      	beq.n	80075dc <_ZN28Measurement_AccurateViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 80075d0:	2320      	movs	r3, #32
 80075d2:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 80075d6:	4638      	mov	r0, r7
 80075d8:	f00d f936 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80075dc:	4638      	mov	r0, r7
 80075de:	2101      	movs	r1, #1
 80075e0:	f00d fa3e 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80075e4:	4639      	mov	r1, r7
 80075e6:	4630      	mov	r0, r6
 80075e8:	f00b f842 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80075ec:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(33, 60);
 80075f0:	223c      	movs	r2, #60	; 0x3c
 80075f2:	ee18 0a10 	vmov	r0, s16
 80075f6:	2121      	movs	r1, #33	; 0x21
        linespace = space;
 80075f8:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 80075fc:	ad04      	add	r5, sp, #16
 80075fe:	f7fb ff75 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8007602:	ee18 1a10 	vmov	r1, s16
 8007606:	4628      	mov	r0, r5
        color = newColor;
 8007608:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 800760c:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007610:	f00d fbbc 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007614:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007618:	ee18 3a10 	vmov	r3, s16
 800761c:	333c      	adds	r3, #60	; 0x3c
 800761e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007622:	4b49      	ldr	r3, [pc, #292]	; (8007748 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 8007624:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8007626:	ee18 0a10 	vmov	r0, s16
 800762a:	234f      	movs	r3, #79	; 0x4f
 800762c:	a90a      	add	r1, sp, #40	; 0x28
 800762e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007632:	f00d fe45 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007636:	ee18 1a10 	vmov	r1, s16
 800763a:	4630      	mov	r0, r6
 800763c:	f00b f818 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007640:	230a      	movs	r3, #10
 8007642:	9300      	str	r3, [sp, #0]
 8007644:	2232      	movs	r2, #50	; 0x32
 8007646:	23f0      	movs	r3, #240	; 0xf0
 8007648:	4641      	mov	r1, r8
 800764a:	4658      	mov	r0, fp
 800764c:	f7fb ff5b 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007650:	9b03      	ldr	r3, [sp, #12]
 8007652:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007656:	22a0      	movs	r2, #160	; 0xa0
 8007658:	4611      	mov	r1, r2
 800765a:	4658      	mov	r0, fp
 800765c:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 8007660:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 8007664:	f00d f9e6 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007668:	22a0      	movs	r2, #160	; 0xa0
 800766a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800766e:	4658      	mov	r0, fp
 8007670:	f00d f9eb 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007674:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8007678:	2b20      	cmp	r3, #32
 800767a:	d005      	beq.n	8007688 <_ZN28Measurement_AccurateViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 800767c:	2320      	movs	r3, #32
 800767e:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8007682:	4658      	mov	r0, fp
 8007684:	f00d f8e0 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007688:	4658      	mov	r0, fp
 800768a:	2101      	movs	r1, #1
 800768c:	f00d f9e8 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007690:	4659      	mov	r1, fp
 8007692:	4630      	mov	r0, r6
 8007694:	f00a ffec 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007698:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 800769c:	ee18 0a90 	vmov	r0, s17
 80076a0:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80076a2:	2700      	movs	r7, #0
 80076a4:	2145      	movs	r1, #69	; 0x45
 80076a6:	f7fb ff21 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80076aa:	ee18 1a90 	vmov	r1, s17
 80076ae:	4628      	mov	r0, r5
        color = newColor;
 80076b0:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 80076b4:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 80076b8:	f00d fb68 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80076bc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80076c0:	ee18 3a90 	vmov	r3, s17
 80076c4:	333c      	adds	r3, #60	; 0x3c
 80076c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80076ca:	4b1f      	ldr	r3, [pc, #124]	; (8007748 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 80076cc:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 80076ce:	ee18 0a90 	vmov	r0, s17
 80076d2:	2360      	movs	r3, #96	; 0x60
 80076d4:	a90a      	add	r1, sp, #40	; 0x28
 80076d6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80076da:	f00d fdf1 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80076de:	ee18 1a90 	vmov	r1, s17
 80076e2:	4630      	mov	r0, r6
 80076e4:	f00a ffc4 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 80076e8:	ee19 0a10 	vmov	r0, s18
 80076ec:	220c      	movs	r2, #12
 80076ee:	2136      	movs	r1, #54	; 0x36
 80076f0:	f7fb fefc 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 80076f4:	ee19 1a10 	vmov	r1, s18
 80076f8:	4628      	mov	r0, r5
        color = newColor;
 80076fa:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 80076fe:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8007702:	f00d fb43 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007706:	ee19 2a10 	vmov	r2, s18
 800770a:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 800770e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007712:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007716:	4b0c      	ldr	r3, [pc, #48]	; (8007748 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 8007718:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 800771a:	ee19 0a10 	vmov	r0, s18
 800771e:	235f      	movs	r3, #95	; 0x5f
 8007720:	a90a      	add	r1, sp, #40	; 0x28
 8007722:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007726:	f00d fdcb 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800772a:	4630      	mov	r0, r6
 800772c:	ee19 1a10 	vmov	r1, s18
 8007730:	f00a ff9e 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007734:	4620      	mov	r0, r4
 8007736:	b00d      	add	sp, #52	; 0x34
 8007738:	ecbd 8b06 	vpop	{d8-d10}
 800773c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007740:	200138b8 	.word	0x200138b8
 8007744:	0802f309 	.word	0x0802f309
 8007748:	0802f37c 	.word	0x0802f37c

0800774c <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 800774c:	4770      	bx	lr

0800774e <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800774e:	4770      	bx	lr

08007750 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007750:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007752:	68c2      	ldr	r2, [r0, #12]
 8007754:	6844      	ldr	r4, [r0, #4]
 8007756:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007758:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800775a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800775e:	07d2      	lsls	r2, r2, #31
 8007760:	bf48      	it	mi
 8007762:	5962      	ldrmi	r2, [r4, r5]
 8007764:	689b      	ldr	r3, [r3, #8]
    }
 8007766:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007768:	bf48      	it	mi
 800776a:	58d3      	ldrmi	r3, [r2, r3]
 800776c:	4718      	bx	r3

0800776e <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800776e:	6843      	ldr	r3, [r0, #4]
 8007770:	b12b      	cbz	r3, 800777e <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007772:	6883      	ldr	r3, [r0, #8]
 8007774:	b92b      	cbnz	r3, 8007782 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007776:	68c0      	ldr	r0, [r0, #12]
 8007778:	f000 0001 	and.w	r0, r0, #1
 800777c:	4770      	bx	lr
 800777e:	4618      	mov	r0, r3
 8007780:	4770      	bx	lr
 8007782:	2001      	movs	r0, #1
    }
 8007784:	4770      	bx	lr

08007786 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007786:	b510      	push	{r4, lr}
 8007788:	2110      	movs	r1, #16
 800778a:	4604      	mov	r4, r0
 800778c:	f025 f931 	bl	802c9f2 <_ZdlPvj>
 8007790:	4620      	mov	r0, r4
 8007792:	bd10      	pop	{r4, pc}

08007794 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8007794:	b510      	push	{r4, lr}
 8007796:	4b03      	ldr	r3, [pc, #12]	; (80077a4 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 8007798:	6003      	str	r3, [r0, #0]
 800779a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800779c:	f00f fb3e 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80077a0:	4620      	mov	r0, r4
 80077a2:	bd10      	pop	{r4, pc}
 80077a4:	08030a00 	.word	0x08030a00

080077a8 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80077a8:	b507      	push	{r0, r1, r2, lr}
 80077aa:	4b07      	ldr	r3, [pc, #28]	; (80077c8 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 80077ac:	6003      	str	r3, [r0, #0]
 80077ae:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80077b0:	f00f fb34 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80077b4:	9801      	ldr	r0, [sp, #4]
 80077b6:	f241 4178 	movw	r1, #5240	; 0x1478
 80077ba:	f025 f91a 	bl	802c9f2 <_ZdlPvj>
 80077be:	9801      	ldr	r0, [sp, #4]
 80077c0:	b003      	add	sp, #12
 80077c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80077c6:	bf00      	nop
 80077c8:	08030a00 	.word	0x08030a00

080077cc <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 80077cc:	3098      	adds	r0, #152	; 0x98
 80077ce:	4288      	cmp	r0, r1
{
 80077d0:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 80077d2:	d105      	bne.n	80077e0 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80077d4:	f011 f824 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80077d8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 80077dc:	f7fd be78 	b.w	80054d0 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80077e0:	bd08      	pop	{r3, pc}
	...

080077e4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 80077e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80077e8:	ed2d 8b0a 	vpush	{d8-d12}
 80077ec:	4604      	mov	r4, r0
 80077ee:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 80077f0:	46a0      	mov	r8, r4
 80077f2:	2500      	movs	r5, #0
 80077f4:	f012 fc94 	bl	801a120 <_ZN8touchgfx6ScreenC1Ev>
 80077f8:	4bce      	ldr	r3, [pc, #824]	; (8007b34 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x350>)
 80077fa:	63e5      	str	r5, [r4, #60]	; 0x3c
 80077fc:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8007800:	2226      	movs	r2, #38	; 0x26
 8007802:	4629      	mov	r1, r5
 8007804:	4640      	mov	r0, r8
 8007806:	f026 f9e0 	bl	802dbca <memset>
 800780a:	4640      	mov	r0, r8
 800780c:	f7fb fea0 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 8007810:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007814:	26ff      	movs	r6, #255	; 0xff
 8007816:	4bc8      	ldr	r3, [pc, #800]	; (8007b38 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x354>)
 8007818:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800781a:	2226      	movs	r2, #38	; 0x26
 800781c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007820:	4629      	mov	r1, r5
 8007822:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007826:	4638      	mov	r0, r7
 8007828:	66a5      	str	r5, [r4, #104]	; 0x68
 800782a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800782e:	f026 f9cc 	bl	802dbca <memset>
 8007832:	4638      	mov	r0, r7
 8007834:	f7fb fe8c 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 8007838:	4bc0      	ldr	r3, [pc, #768]	; (8007b3c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x358>)
 800783a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800783c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007840:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007844:	a90a      	add	r1, sp, #40	; 0x28
 8007846:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800784a:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 800784c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007850:	f00e fae7 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007854:	4658      	mov	r0, fp
 8007856:	f00e fc1b 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800785a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800785e:	f504 7994 	add.w	r9, r4, #296	; 0x128
 8007862:	4618      	mov	r0, r3
 8007864:	ee0a 3a90 	vmov	s21, r3
 8007868:	f7fb fed6 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 800786c:	4648      	mov	r0, r9
 800786e:	f7fb fed3 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8007872:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 8007876:	4618      	mov	r0, r3
 8007878:	ee0b 3a10 	vmov	s22, r3
 800787c:	f7fb fecc 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8007880:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 8007884:	4618      	mov	r0, r3
 8007886:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800788a:	4ead      	ldr	r6, [pc, #692]	; (8007b40 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x35c>)
        : TextArea()
 800788c:	f7fb fec4 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8007890:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 8007894:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8007898:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800789a:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 800789e:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 80078a2:	f7fb feb9 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 80078a6:	f504 7314 	add.w	r3, r4, #592	; 0x250
 80078aa:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80078ac:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 80078b0:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 80078b4:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 80078b8:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 80078bc:	f7fb feac 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80078c0:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 80078c4:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 80078c8:	4650      	mov	r0, sl
 80078ca:	f00d ff6d 	bl	80157a8 <_ZN8touchgfx5GaugeC1Ev>
 80078ce:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 80078d2:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80078d4:	4e9b      	ldr	r6, [pc, #620]	; (8007b44 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x360>)
 80078d6:	ee08 3a10 	vmov	s16, r3
 80078da:	f00c ff95 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 80078de:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 80078e2:	4618      	mov	r0, r3
 80078e4:	9302      	str	r3, [sp, #8]
 80078e6:	f7fb fc37 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80078ea:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80078ee:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 80078f2:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 80078f6:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 80078fa:	4618      	mov	r0, r3
 80078fc:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8007900:	ee09 3a10 	vmov	s18, r3
 8007904:	f7fb fe88 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8007908:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 800790c:	4618      	mov	r0, r3
 800790e:	ee08 3a90 	vmov	s17, r3
 8007912:	f00c ff79 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 8007916:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 800791a:	4618      	mov	r0, r3
 800791c:	9303      	str	r3, [sp, #12]
 800791e:	f7fb fc1b 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007922:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007926:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 800792a:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 800792e:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8007932:	4618      	mov	r0, r3
 8007934:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8007938:	ee09 3a90 	vmov	s19, r3
 800793c:	f7fb fe6c 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8007940:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8007944:	4618      	mov	r0, r3
 8007946:	ee0a 3a10 	vmov	s20, r3
 800794a:	f7fb fe65 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800794e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007952:	4a7d      	ldr	r2, [pc, #500]	; (8007b48 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x364>)
 8007954:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8007958:	4a7c      	ldr	r2, [pc, #496]	; (8007b4c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x368>)
 800795a:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 800795e:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 8007962:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007966:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800796a:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 800796e:	f00f fa4b 	bl	8016e08 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007972:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007976:	462a      	mov	r2, r5
 8007978:	4640      	mov	r0, r8
 800797a:	9300      	str	r3, [sp, #0]
 800797c:	4629      	mov	r1, r5
 800797e:	23f0      	movs	r3, #240	; 0xf0
 8007980:	f7fb fdc1 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007984:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007986:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800798a:	66a3      	str	r3, [r4, #104]	; 0x68
 800798c:	4641      	mov	r1, r8
 800798e:	4630      	mov	r0, r6
 8007990:	f00a fe6e 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8007994:	462a      	mov	r2, r5
 8007996:	4638      	mov	r0, r7
 8007998:	4629      	mov	r1, r5
 800799a:	f7fb fda7 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 800799e:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80079a2:	4638      	mov	r0, r7
 80079a4:	a90a      	add	r1, sp, #40	; 0x28
 80079a6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079aa:	f00e fa3a 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80079ae:	4639      	mov	r1, r7
 80079b0:	4630      	mov	r0, r6
 80079b2:	f00a fe5d 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 257);
 80079b6:	4658      	mov	r0, fp
 80079b8:	f240 1201 	movw	r2, #257	; 0x101
 80079bc:	2121      	movs	r1, #33	; 0x21
 80079be:	f7fb fd95 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 80079c2:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80079c4:	a909      	add	r1, sp, #36	; 0x24
 80079c6:	4658      	mov	r0, fp
 80079c8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80079cc:	aa0a      	add	r2, sp, #40	; 0x28
 80079ce:	2302      	movs	r3, #2
 80079d0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079d4:	f00e f82f 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80079d8:	f04f 024b 	mov.w	r2, #75	; 0x4b
 80079dc:	f8a4 20d0 	strh.w	r2, [r4, #208]	; 0xd0
        updateTextPosition();
 80079e0:	4658      	mov	r0, fp
 80079e2:	f7fb fdc7 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_Return.setAction(buttonCallback);
 80079e6:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 80079ea:	f04f 38ff 	mov.w	r8, #4294967295
 80079ee:	3308      	adds	r3, #8
 80079f0:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80079f4:	4659      	mov	r1, fp
 80079f6:	4630      	mov	r0, r6
        colorPressed = col;
 80079f8:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 80079fc:	af04      	add	r7, sp, #16
 80079fe:	f00a fe37 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8007a02:	22c2      	movs	r2, #194	; 0xc2
 8007a04:	ee1a 0a90 	vmov	r0, s21
 8007a08:	4629      	mov	r1, r5
 8007a0a:	f7fb fd6f 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8007a0e:	ee1a 1a90 	vmov	r1, s21
 8007a12:	4638      	mov	r0, r7
        color = newColor;
 8007a14:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 8007a18:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007a1c:	f00d f9b6 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007a20:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007a24:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8007a28:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007a2c:	f04f 0b0a 	mov.w	fp, #10
 8007a30:	4b47      	ldr	r3, [pc, #284]	; (8007b50 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007a32:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HYQ8));
 8007a34:	ee1a 0a90 	vmov	r0, s21
 8007a38:	a90a      	add	r1, sp, #40	; 0x28
 8007a3a:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8007a3e:	f00d fc3f 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a42:	ee1a 1a90 	vmov	r1, s21
 8007a46:	4630      	mov	r0, r6
 8007a48:	f00a fe12 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 8007a4c:	22c2      	movs	r2, #194	; 0xc2
 8007a4e:	4648      	mov	r0, r9
 8007a50:	21d9      	movs	r1, #217	; 0xd9
 8007a52:	f7fb fd4b 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8007a56:	4649      	mov	r1, r9
 8007a58:	4638      	mov	r0, r7
        color = newColor;
 8007a5a:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 8007a5e:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8007a62:	f00d f993 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007a66:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007a6a:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8007a6e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007a72:	4b37      	ldr	r3, [pc, #220]	; (8007b50 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007a74:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MW1V));
 8007a76:	4648      	mov	r0, r9
 8007a78:	2309      	movs	r3, #9
 8007a7a:	a90a      	add	r1, sp, #40	; 0x28
 8007a7c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a80:	f00d fc1e 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a84:	4649      	mov	r1, r9
 8007a86:	4630      	mov	r0, r6
 8007a88:	f00a fdf2 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 8007a8c:	2255      	movs	r2, #85	; 0x55
 8007a8e:	ee1b 0a10 	vmov	r0, s22
 8007a92:	2171      	movs	r1, #113	; 0x71
 8007a94:	f7fb fd2a 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8007a98:	ee1b 1a10 	vmov	r1, s22
 8007a9c:	4638      	mov	r0, r7
        color = newColor;
 8007a9e:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8007aa2:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8007aa6:	f00d f971 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007aaa:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007aae:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8007ab2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007ab6:	4b26      	ldr	r3, [pc, #152]	; (8007b50 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007ab8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H3VA));
 8007aba:	ee1b 0a10 	vmov	r0, s22
 8007abe:	f04f 0308 	mov.w	r3, #8
 8007ac2:	a90a      	add	r1, sp, #40	; 0x28
 8007ac4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007ac8:	f00d fbfa 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007acc:	ee1b 1a10 	vmov	r1, s22
 8007ad0:	4630      	mov	r0, r6
 8007ad2:	f00a fdcd 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Current.setPosition(0, 239, 240, 15);
 8007ad6:	230f      	movs	r3, #15
 8007ad8:	22ef      	movs	r2, #239	; 0xef
 8007ada:	ee1b 0a90 	vmov	r0, s23
 8007ade:	9300      	str	r3, [sp, #0]
 8007ae0:	4629      	mov	r1, r5
 8007ae2:	23f0      	movs	r3, #240	; 0xf0
 8007ae4:	f7fb fd0f 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007ae8:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 8007aec:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8007af0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007af4:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8007af8:	ee1b 1a90 	vmov	r1, s23
 8007afc:	4638      	mov	r0, r7
 8007afe:	4798      	blx	r3
 8007b00:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007b04:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007b08:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007b0c:	4b11      	ldr	r3, [pc, #68]	; (8007b54 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x370>)
 8007b0e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(AMD1_CurrentBuffer, AMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DKHH).getText());
 8007b10:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 8007b14:	b92b      	cbnz	r3, 8007b22 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x33e>
 8007b16:	4b10      	ldr	r3, [pc, #64]	; (8007b58 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x374>)
 8007b18:	4a10      	ldr	r2, [pc, #64]	; (8007b5c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x378>)
 8007b1a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007b1c:	4810      	ldr	r0, [pc, #64]	; (8007b60 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x37c>)
 8007b1e:	f025 fe4f 	bl	802d7c0 <__assert_func>
 8007b22:	4b10      	ldr	r3, [pc, #64]	; (8007b64 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x380>)
 8007b24:	881b      	ldrh	r3, [r3, #0]
 8007b26:	2b0e      	cmp	r3, #14
 8007b28:	d820      	bhi.n	8007b6c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x388>
 8007b2a:	4b0f      	ldr	r3, [pc, #60]	; (8007b68 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x384>)
 8007b2c:	4a0b      	ldr	r2, [pc, #44]	; (8007b5c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x378>)
 8007b2e:	2161      	movs	r1, #97	; 0x61
 8007b30:	e7f4      	b.n	8007b1c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x338>
 8007b32:	bf00      	nop
 8007b34:	08030a00 	.word	0x08030a00
 8007b38:	080318d0 	.word	0x080318d0
 8007b3c:	08031b1c 	.word	0x08031b1c
 8007b40:	0802f41c 	.word	0x0802f41c
 8007b44:	08031604 	.word	0x08031604
 8007b48:	080309e8 	.word	0x080309e8
 8007b4c:	080077cd 	.word	0x080077cd
 8007b50:	0802f37c 	.word	0x0802f37c
 8007b54:	200138ac 	.word	0x200138ac
 8007b58:	0802f1cc 	.word	0x0802f1cc
 8007b5c:	0802f2d1 	.word	0x0802f2d1
 8007b60:	0802f249 	.word	0x0802f249
 8007b64:	200138b0 	.word	0x200138b0
 8007b68:	0802f290 	.word	0x0802f290
        return texts->getText(typedTextId);
 8007b6c:	4bde      	ldr	r3, [pc, #888]	; (8007ee8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007b6e:	210e      	movs	r1, #14
 8007b70:	6818      	ldr	r0, [r3, #0]
 8007b72:	f002 fcc9 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8007b76:	4add      	ldr	r2, [pc, #884]	; (8007eec <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007b78:	4603      	mov	r3, r0
 8007b7a:	4659      	mov	r1, fp
 8007b7c:	4648      	mov	r0, r9
 8007b7e:	f013 fffd 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007b82:	f04f 010f 	mov.w	r1, #15
 8007b86:	4ada      	ldr	r2, [pc, #872]	; (8007ef0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
        wc1 = value;
 8007b88:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
    AMD1_Current.setTypedText(touchgfx::TypedText(T_AMD3_CURRENTAMD1_CURRENT));
 8007b8c:	ee1b 0a90 	vmov	r0, s23
 8007b90:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8007b94:	a90a      	add	r1, sp, #40	; 0x28
 8007b96:	920a      	str	r2, [sp, #40]	; 0x28
 8007b98:	f00d fb92 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b9c:	ee1b 1a90 	vmov	r1, s23
 8007ba0:	4630      	mov	r0, r6
 8007ba2:	f00a fd65 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Frequency.setPosition(0, 224, 240, 15);
 8007ba6:	210f      	movs	r1, #15
 8007ba8:	22e0      	movs	r2, #224	; 0xe0
 8007baa:	ee1c 0a10 	vmov	r0, s24
 8007bae:	9100      	str	r1, [sp, #0]
 8007bb0:	23f0      	movs	r3, #240	; 0xf0
 8007bb2:	4629      	mov	r1, r5
 8007bb4:	f7fb fca7 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007bb8:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 8007bbc:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8007bc0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007bc4:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8007bc8:	ee1c 1a10 	vmov	r1, s24
 8007bcc:	4638      	mov	r0, r7
 8007bce:	4798      	blx	r3
 8007bd0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007bd4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007bd8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007bdc:	49c5      	ldr	r1, [pc, #788]	; (8007ef4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x710>)
 8007bde:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(AMD1_FrequencyBuffer, AMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_23ZO).getText());
 8007be0:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8007be4:	2b00      	cmp	r3, #0
 8007be6:	d096      	beq.n	8007b16 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x332>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007be8:	48c3      	ldr	r0, [pc, #780]	; (8007ef8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x714>)
 8007bea:	8803      	ldrh	r3, [r0, #0]
 8007bec:	2b0c      	cmp	r3, #12
 8007bee:	d99c      	bls.n	8007b2a <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x346>
        return texts->getText(typedTextId);
 8007bf0:	4bbd      	ldr	r3, [pc, #756]	; (8007ee8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007bf2:	210c      	movs	r1, #12
 8007bf4:	6818      	ldr	r0, [r3, #0]
 8007bf6:	f002 fc87 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8007bfa:	4abc      	ldr	r2, [pc, #752]	; (8007eec <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007bfc:	4603      	mov	r3, r0
 8007bfe:	4659      	mov	r1, fp
 8007c00:	4648      	mov	r0, r9
 8007c02:	f013 ffbb 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    AMD1_Frequency.setTypedText(touchgfx::TypedText(T_AMD3_FREQUENCY));
 8007c06:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8007c0a:	4ab9      	ldr	r2, [pc, #740]	; (8007ef0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007c0c:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 8007c10:	230d      	movs	r3, #13
 8007c12:	4661      	mov	r1, ip
 8007c14:	ee1c 0a10 	vmov	r0, s24
 8007c18:	920a      	str	r2, [sp, #40]	; 0x28
 8007c1a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c1e:	f00d fb4f 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c22:	ee1c 1a10 	vmov	r1, s24
 8007c26:	4630      	mov	r0, r6
 8007c28:	f00a fd22 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Distance.setPosition(0, 209, 240, 15);
 8007c2c:	f04f 0c0f 	mov.w	ip, #15
 8007c30:	22d1      	movs	r2, #209	; 0xd1
 8007c32:	ee1c 0a90 	vmov	r0, s25
 8007c36:	f8cd c000 	str.w	ip, [sp]
 8007c3a:	23f0      	movs	r3, #240	; 0xf0
 8007c3c:	4629      	mov	r1, r5
 8007c3e:	f7fb fc62 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007c42:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8007c46:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8007c4a:	4638      	mov	r0, r7
 8007c4c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007c50:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8007c54:	ee1c 1a90 	vmov	r1, s25
 8007c58:	4798      	blx	r3
 8007c5a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007c5e:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8007c62:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007c66:	49a3      	ldr	r1, [pc, #652]	; (8007ef4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x710>)
 8007c68:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(AMD1_DistanceBuffer, AMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7DZL).getText());
 8007c6a:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8007c6e:	2b00      	cmp	r3, #0
 8007c70:	f43f af51 	beq.w	8007b16 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x332>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007c74:	48a0      	ldr	r0, [pc, #640]	; (8007ef8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x714>)
 8007c76:	8803      	ldrh	r3, [r0, #0]
 8007c78:	2b0b      	cmp	r3, #11
 8007c7a:	f67f af56 	bls.w	8007b2a <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x346>
        return texts->getText(typedTextId);
 8007c7e:	4b9a      	ldr	r3, [pc, #616]	; (8007ee8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007c80:	210b      	movs	r1, #11
 8007c82:	6818      	ldr	r0, [r3, #0]
 8007c84:	f002 fc40 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8007c88:	4a98      	ldr	r2, [pc, #608]	; (8007eec <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007c8a:	4603      	mov	r3, r0
 8007c8c:	4659      	mov	r1, fp
 8007c8e:	4638      	mov	r0, r7
 8007c90:	f013 ff74 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007c94:	4a96      	ldr	r2, [pc, #600]	; (8007ef0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007c96:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8007c9a:	2336      	movs	r3, #54	; 0x36
    AMD1_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8007c9c:	ee1c 0a90 	vmov	r0, s25
 8007ca0:	a90a      	add	r1, sp, #40	; 0x28
 8007ca2:	920a      	str	r2, [sp, #40]	; 0x28
 8007ca4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007ca8:	f00d fb0a 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007cac:	ee1c 1a90 	vmov	r1, s25
 8007cb0:	4630      	mov	r0, r6
 8007cb2:	f00a fcdd 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007cb6:	2304      	movs	r3, #4
    AMD1_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8007cb8:	a90a      	add	r1, sp, #40	; 0x28
 8007cba:	4650      	mov	r0, sl
 8007cbc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007cc0:	f00a fc68 	bl	8012594 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    AMD1_Gauge.setPosition(28, 103, 184, 106);
 8007cc4:	236a      	movs	r3, #106	; 0x6a
 8007cc6:	9300      	str	r3, [sp, #0]
 8007cc8:	2267      	movs	r2, #103	; 0x67
 8007cca:	23b8      	movs	r3, #184	; 0xb8
 8007ccc:	211c      	movs	r1, #28
 8007cce:	4650      	mov	r0, sl
 8007cd0:	f7fb fc19 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
    AMD1_Gauge.setCenter(92, 92);
 8007cd4:	225c      	movs	r2, #92	; 0x5c
 8007cd6:	4611      	mov	r1, r2
 8007cd8:	4650      	mov	r0, sl
 8007cda:	f00d fe10 	bl	80158fe <_ZN8touchgfx5Gauge9setCenterEii>
    AMD1_Gauge.setStartEndAngle(-90, 90);
 8007cde:	225a      	movs	r2, #90	; 0x5a
 8007ce0:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007ce4:	4650      	mov	r0, sl
 8007ce6:	f00d fe8f 	bl	8015a08 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    AMD1_Gauge.setRange(-90, 90);
 8007cea:	462b      	mov	r3, r5
 8007cec:	225a      	movs	r2, #90	; 0x5a
 8007cee:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007cf2:	4650      	mov	r0, sl
 8007cf4:	9500      	str	r5, [sp, #0]
 8007cf6:	f00a fafa 	bl	80122ee <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    AMD1_Gauge.setValue(0);
 8007cfa:	4629      	mov	r1, r5
 8007cfc:	4650      	mov	r0, sl
 8007cfe:	f00d fe2d 	bl	801595c <_ZN8touchgfx5Gauge8setValueEi>
    AMD1_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007d02:	2335      	movs	r3, #53	; 0x35
 8007d04:	2208      	movs	r2, #8
 8007d06:	2105      	movs	r1, #5
 8007d08:	4650      	mov	r0, sl
 8007d0a:	f00d fde3 	bl	80158d4 <_ZN8touchgfx5Gauge9setNeedleEtss>
    AMD1_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007d0e:	2101      	movs	r1, #1
 8007d10:	4650      	mov	r0, sl
 8007d12:	f00d fd81 	bl	8015818 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    AMD1_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007d16:	2101      	movs	r1, #1
 8007d18:	4650      	mov	r0, sl
 8007d1a:	f00d fd80 	bl	801581e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007d1e:	4651      	mov	r1, sl
 8007d20:	4630      	mov	r0, r6
 8007d22:	f00a fca5 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8007d26:	ee18 0a10 	vmov	r0, s16
 8007d2a:	23f0      	movs	r3, #240	; 0xf0
 8007d2c:	224b      	movs	r2, #75	; 0x4b
 8007d2e:	4629      	mov	r1, r5
 8007d30:	f8cd b000 	str.w	fp, [sp]
 8007d34:	f7fb fbe7 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007d38:	9b02      	ldr	r3, [sp, #8]
 8007d3a:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007d3e:	22a0      	movs	r2, #160	; 0xa0
 8007d40:	4611      	mov	r1, r2
 8007d42:	ee18 0a10 	vmov	r0, s16
 8007d46:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007d4a:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8007d4e:	f00c fe71 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007d52:	ee18 0a10 	vmov	r0, s16
 8007d56:	22a0      	movs	r2, #160	; 0xa0
 8007d58:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007d5c:	f00c fe75 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007d60:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007d64:	2b20      	cmp	r3, #32
 8007d66:	d006      	beq.n	8007d76 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x592>
        lineWidthQ5 = widthQ5;
 8007d68:	2320      	movs	r3, #32
        updateCachedShape();
 8007d6a:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8007d6e:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007d72:	f00c fd69 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007d76:	ee18 0a10 	vmov	r0, s16
 8007d7a:	2101      	movs	r1, #1
 8007d7c:	f00c fe70 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007d80:	ee18 1a10 	vmov	r1, s16
 8007d84:	4630      	mov	r0, r6
 8007d86:	f00a fc73 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007d8a:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(23, 60);
 8007d8e:	223c      	movs	r2, #60	; 0x3c
 8007d90:	ee19 0a10 	vmov	r0, s18
 8007d94:	2117      	movs	r1, #23
        linespace = space;
 8007d96:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8007d9a:	ad04      	add	r5, sp, #16
 8007d9c:	f7fb fba6 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8007da0:	ee19 1a10 	vmov	r1, s18
 8007da4:	4628      	mov	r0, r5
        color = newColor;
 8007da6:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8007daa:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007dae:	f00c ffed 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007db2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007db6:	ee19 3a10 	vmov	r3, s18
 8007dba:	333c      	adds	r3, #60	; 0x3c
 8007dbc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007dc0:	4f4b      	ldr	r7, [pc, #300]	; (8007ef0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007dc2:	970a      	str	r7, [sp, #40]	; 0x28
 8007dc4:	234c      	movs	r3, #76	; 0x4c
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8007dc6:	ee19 0a10 	vmov	r0, s18
 8007dca:	a90a      	add	r1, sp, #40	; 0x28
 8007dcc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007dd0:	f00d fa76 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007dd4:	ee19 1a10 	vmov	r1, s18
 8007dd8:	4630      	mov	r0, r6
 8007dda:	f00a fc49 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007dde:	230a      	movs	r3, #10
 8007de0:	ee18 0a90 	vmov	r0, s17
 8007de4:	9300      	str	r3, [sp, #0]
 8007de6:	2232      	movs	r2, #50	; 0x32
 8007de8:	23f0      	movs	r3, #240	; 0xf0
 8007dea:	4649      	mov	r1, r9
 8007dec:	f7fb fb8b 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007df0:	9b03      	ldr	r3, [sp, #12]
 8007df2:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007df6:	22a0      	movs	r2, #160	; 0xa0
 8007df8:	4611      	mov	r1, r2
 8007dfa:	ee18 0a90 	vmov	r0, s17
 8007dfe:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 8007e02:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8007e06:	f00c fe15 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007e0a:	ee18 0a90 	vmov	r0, s17
 8007e0e:	22a0      	movs	r2, #160	; 0xa0
 8007e10:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007e14:	f00c fe19 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007e18:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 8007e1c:	2b20      	cmp	r3, #32
 8007e1e:	d006      	beq.n	8007e2e <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x64a>
        lineWidthQ5 = widthQ5;
 8007e20:	2320      	movs	r3, #32
        updateCachedShape();
 8007e22:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8007e26:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 8007e2a:	f00c fd0d 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007e2e:	ee18 0a90 	vmov	r0, s17
 8007e32:	2101      	movs	r1, #1
 8007e34:	f00c fe14 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007e38:	ee18 1a90 	vmov	r1, s17
 8007e3c:	4630      	mov	r0, r6
 8007e3e:	f00a fc17 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007e42:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8007e46:	ee19 0a90 	vmov	r0, s19
 8007e4a:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007e4c:	f04f 0800 	mov.w	r8, #0
 8007e50:	2145      	movs	r1, #69	; 0x45
 8007e52:	f7fb fb4b 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007e56:	ee19 1a90 	vmov	r1, s19
 8007e5a:	4628      	mov	r0, r5
        color = newColor;
 8007e5c:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8007e60:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8007e64:	f00c ff92 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007e68:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007e6c:	ee19 3a90 	vmov	r3, s19
 8007e70:	333c      	adds	r3, #60	; 0x3c
 8007e72:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007e76:	234d      	movs	r3, #77	; 0x4d
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8007e78:	ee19 0a90 	vmov	r0, s19
 8007e7c:	a90a      	add	r1, sp, #40	; 0x28
 8007e7e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007e82:	970a      	str	r7, [sp, #40]	; 0x28
 8007e84:	f00d fa1c 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007e88:	ee19 1a90 	vmov	r1, s19
 8007e8c:	4630      	mov	r0, r6
 8007e8e:	f00a fbef 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8007e92:	ee1a 0a10 	vmov	r0, s20
 8007e96:	220c      	movs	r2, #12
 8007e98:	2136      	movs	r1, #54	; 0x36
 8007e9a:	f7fb fb27 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8007e9e:	ee1a 1a10 	vmov	r1, s20
 8007ea2:	4628      	mov	r0, r5
        color = newColor;
 8007ea4:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8007ea8:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8007eac:	f00c ff6e 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007eb0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007eb4:	ee1a 3a10 	vmov	r3, s20
 8007eb8:	333c      	adds	r3, #60	; 0x3c
 8007eba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007ebe:	234e      	movs	r3, #78	; 0x4e
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8007ec0:	ee1a 0a10 	vmov	r0, s20
 8007ec4:	a90a      	add	r1, sp, #40	; 0x28
 8007ec6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007eca:	970a      	str	r7, [sp, #40]	; 0x28
 8007ecc:	f00d f9f8 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007ed0:	4630      	mov	r0, r6
 8007ed2:	ee1a 1a10 	vmov	r1, s20
 8007ed6:	f00a fbcb 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007eda:	4620      	mov	r0, r4
 8007edc:	b00d      	add	sp, #52	; 0x34
 8007ede:	ecbd 8b0a 	vpop	{d8-d12}
 8007ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007ee6:	bf00      	nop
 8007ee8:	200138b8 	.word	0x200138b8
 8007eec:	0802f309 	.word	0x0802f309
 8007ef0:	0802f37c 	.word	0x0802f37c
 8007ef4:	200138ac 	.word	0x200138ac
 8007ef8:	200138b0 	.word	0x200138b0

08007efc <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 8007efc:	4770      	bx	lr

08007efe <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007efe:	4770      	bx	lr

08007f00 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007f00:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007f02:	68c2      	ldr	r2, [r0, #12]
 8007f04:	6844      	ldr	r4, [r0, #4]
 8007f06:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007f08:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007f0a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007f0e:	07d2      	lsls	r2, r2, #31
 8007f10:	bf48      	it	mi
 8007f12:	5962      	ldrmi	r2, [r4, r5]
 8007f14:	689b      	ldr	r3, [r3, #8]
    }
 8007f16:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007f18:	bf48      	it	mi
 8007f1a:	58d3      	ldrmi	r3, [r2, r3]
 8007f1c:	4718      	bx	r3

08007f1e <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007f1e:	6843      	ldr	r3, [r0, #4]
 8007f20:	b12b      	cbz	r3, 8007f2e <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007f22:	6883      	ldr	r3, [r0, #8]
 8007f24:	b92b      	cbnz	r3, 8007f32 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007f26:	68c0      	ldr	r0, [r0, #12]
 8007f28:	f000 0001 	and.w	r0, r0, #1
 8007f2c:	4770      	bx	lr
 8007f2e:	4618      	mov	r0, r3
 8007f30:	4770      	bx	lr
 8007f32:	2001      	movs	r0, #1
    }
 8007f34:	4770      	bx	lr

08007f36 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007f36:	b510      	push	{r4, lr}
 8007f38:	2110      	movs	r1, #16
 8007f3a:	4604      	mov	r4, r0
 8007f3c:	f024 fd59 	bl	802c9f2 <_ZdlPvj>
 8007f40:	4620      	mov	r0, r4
 8007f42:	bd10      	pop	{r4, pc}

08007f44 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8007f44:	b510      	push	{r4, lr}
 8007f46:	4b03      	ldr	r3, [pc, #12]	; (8007f54 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 8007f48:	6003      	str	r3, [r0, #0]
 8007f4a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007f4c:	f00e ff66 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007f50:	4620      	mov	r0, r4
 8007f52:	bd10      	pop	{r4, pc}
 8007f54:	08030a4c 	.word	0x08030a4c

08007f58 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8007f58:	b507      	push	{r0, r1, r2, lr}
 8007f5a:	4b07      	ldr	r3, [pc, #28]	; (8007f78 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 8007f5c:	6003      	str	r3, [r0, #0]
 8007f5e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007f60:	f00e ff5c 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007f64:	9801      	ldr	r0, [sp, #4]
 8007f66:	f241 4178 	movw	r1, #5240	; 0x1478
 8007f6a:	f024 fd42 	bl	802c9f2 <_ZdlPvj>
 8007f6e:	9801      	ldr	r0, [sp, #4]
 8007f70:	b003      	add	sp, #12
 8007f72:	f85d fb04 	ldr.w	pc, [sp], #4
 8007f76:	bf00      	nop
 8007f78:	08030a4c 	.word	0x08030a4c

08007f7c <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 8007f7c:	3098      	adds	r0, #152	; 0x98
 8007f7e:	4288      	cmp	r0, r1
{
 8007f80:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 8007f82:	d105      	bne.n	8007f90 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007f84:	f010 fc4c 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8007f88:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8007f8c:	f7fd baa0 	b.w	80054d0 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8007f90:	bd08      	pop	{r3, pc}
	...

08007f94 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8007f94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007f98:	ed2d 8b0a 	vpush	{d8-d12}
 8007f9c:	4604      	mov	r4, r0
 8007f9e:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8007fa0:	46a0      	mov	r8, r4
 8007fa2:	2500      	movs	r5, #0
 8007fa4:	f012 f8bc 	bl	801a120 <_ZN8touchgfx6ScreenC1Ev>
 8007fa8:	4bcf      	ldr	r3, [pc, #828]	; (80082e8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x354>)
 8007faa:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007fac:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8007fb0:	2226      	movs	r2, #38	; 0x26
 8007fb2:	4629      	mov	r1, r5
 8007fb4:	4640      	mov	r0, r8
 8007fb6:	f025 fe08 	bl	802dbca <memset>
 8007fba:	4640      	mov	r0, r8
 8007fbc:	f7fb fac8 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 8007fc0:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007fc4:	26ff      	movs	r6, #255	; 0xff
 8007fc6:	4bc9      	ldr	r3, [pc, #804]	; (80082ec <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x358>)
 8007fc8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007fca:	2226      	movs	r2, #38	; 0x26
 8007fcc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007fd0:	4629      	mov	r1, r5
 8007fd2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007fd6:	4638      	mov	r0, r7
 8007fd8:	66a5      	str	r5, [r4, #104]	; 0x68
 8007fda:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8007fde:	f025 fdf4 	bl	802dbca <memset>
 8007fe2:	4638      	mov	r0, r7
 8007fe4:	f7fb fab4 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 8007fe8:	4bc1      	ldr	r3, [pc, #772]	; (80082f0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x35c>)
 8007fea:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007fec:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8007ff0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007ff4:	a90c      	add	r1, sp, #48	; 0x30
 8007ff6:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8007ffa:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8007ffc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008000:	f00d ff0f 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008004:	4658      	mov	r0, fp
 8008006:	f00e f843 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800800a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800800e:	f504 7994 	add.w	r9, r4, #296	; 0x128
 8008012:	4618      	mov	r0, r3
 8008014:	ee0a 3a90 	vmov	s21, r3
 8008018:	f7fb fafe 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 800801c:	4648      	mov	r0, r9
 800801e:	f7fb fafb 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8008022:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 8008026:	4618      	mov	r0, r3
 8008028:	ee0b 3a10 	vmov	s22, r3
 800802c:	f7fb faf4 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8008030:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 8008034:	4618      	mov	r0, r3
 8008036:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800803a:	4eae      	ldr	r6, [pc, #696]	; (80082f4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x360>)
        : TextArea()
 800803c:	f7fb faec 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8008040:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 8008044:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8008048:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800804a:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 800804e:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 8008052:	f7fb fae1 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8008056:	f504 7314 	add.w	r3, r4, #592	; 0x250
 800805a:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800805c:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8008060:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 8008064:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8008068:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 800806c:	f7fb fad4 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8008070:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8008074:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8008078:	4650      	mov	r0, sl
 800807a:	f00d fb95 	bl	80157a8 <_ZN8touchgfx5GaugeC1Ev>
 800807e:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8008082:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008084:	4e9c      	ldr	r6, [pc, #624]	; (80082f8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x364>)
 8008086:	ee08 3a10 	vmov	s16, r3
 800808a:	f00c fbbd 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 800808e:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8008092:	4618      	mov	r0, r3
 8008094:	9303      	str	r3, [sp, #12]
 8008096:	f7fb f85f 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800809a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800809e:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 80080a2:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 80080a6:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 80080aa:	4618      	mov	r0, r3
 80080ac:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 80080b0:	ee09 3a10 	vmov	s18, r3
 80080b4:	f7fb fab0 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 80080b8:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 80080bc:	4618      	mov	r0, r3
 80080be:	ee08 3a90 	vmov	s17, r3
 80080c2:	f00c fba1 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 80080c6:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 80080ca:	4618      	mov	r0, r3
 80080cc:	9304      	str	r3, [sp, #16]
 80080ce:	f7fb f843 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80080d2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80080d6:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 80080da:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 80080de:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 80080e2:	4618      	mov	r0, r3
 80080e4:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 80080e8:	ee09 3a90 	vmov	s19, r3
 80080ec:	f7fb fa94 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 80080f0:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 80080f4:	4618      	mov	r0, r3
 80080f6:	ee0a 3a10 	vmov	s20, r3
 80080fa:	f7fb fa8d 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80080fe:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008102:	4a7e      	ldr	r2, [pc, #504]	; (80082fc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x368>)
 8008104:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8008108:	4a7d      	ldr	r2, [pc, #500]	; (8008300 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x36c>)
 800810a:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 800810e:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 8008112:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008116:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800811a:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 800811e:	f00e fe73 	bl	8016e08 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008122:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008126:	462a      	mov	r2, r5
 8008128:	4640      	mov	r0, r8
 800812a:	9300      	str	r3, [sp, #0]
 800812c:	4629      	mov	r1, r5
 800812e:	23f0      	movs	r3, #240	; 0xf0
 8008130:	f7fb f9e9 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008134:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008136:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800813a:	66a3      	str	r3, [r4, #104]	; 0x68
 800813c:	4641      	mov	r1, r8
 800813e:	4630      	mov	r0, r6
 8008140:	f00a fa96 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8008144:	462a      	mov	r2, r5
 8008146:	4638      	mov	r0, r7
 8008148:	4629      	mov	r1, r5
 800814a:	f7fb f9cf 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 800814e:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008152:	4638      	mov	r0, r7
 8008154:	a90c      	add	r1, sp, #48	; 0x30
 8008156:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800815a:	f00d fe62 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800815e:	4639      	mov	r1, r7
 8008160:	4630      	mov	r0, r6
 8008162:	f00a fa85 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 257);
 8008166:	4658      	mov	r0, fp
 8008168:	f240 1201 	movw	r2, #257	; 0x101
 800816c:	2121      	movs	r1, #33	; 0x21
 800816e:	f7fb f9bd 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8008172:	f04f 0303 	mov.w	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008176:	aa0c      	add	r2, sp, #48	; 0x30
 8008178:	a90b      	add	r1, sp, #44	; 0x2c
 800817a:	4658      	mov	r0, fp
 800817c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008180:	f04f 0302 	mov.w	r3, #2
 8008184:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8008188:	f00d fc55 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800818c:	2347      	movs	r3, #71	; 0x47
        updateTextPosition();
 800818e:	4658      	mov	r0, fp
 8008190:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8008194:	f7fb f9ee 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_Return.setAction(buttonCallback);
 8008198:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 800819c:	f04f 38ff 	mov.w	r8, #4294967295
 80081a0:	3308      	adds	r3, #8
 80081a2:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80081a6:	4659      	mov	r1, fp
 80081a8:	4630      	mov	r0, r6
        colorPressed = col;
 80081aa:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 80081ae:	af06      	add	r7, sp, #24
 80081b0:	f00a fa5e 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 80081b4:	22c2      	movs	r2, #194	; 0xc2
 80081b6:	ee1a 0a90 	vmov	r0, s21
 80081ba:	4629      	mov	r1, r5
 80081bc:	f7fb f996 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 80081c0:	ee1a 1a90 	vmov	r1, s21
 80081c4:	4638      	mov	r0, r7
        color = newColor;
 80081c6:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 80081ca:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80081ce:	f00c fddd 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80081d2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80081d6:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80081da:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80081de:	4b49      	ldr	r3, [pc, #292]	; (8008304 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 80081e0:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TIF0));
 80081e2:	ee1a 0a90 	vmov	r0, s21
 80081e6:	2307      	movs	r3, #7
 80081e8:	a90c      	add	r1, sp, #48	; 0x30
 80081ea:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80081ee:	f00d f867 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80081f2:	ee1a 1a90 	vmov	r1, s21
 80081f6:	4630      	mov	r0, r6
 80081f8:	f00a fa3a 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 80081fc:	22c2      	movs	r2, #194	; 0xc2
 80081fe:	4648      	mov	r0, r9
 8008200:	21d9      	movs	r1, #217	; 0xd9
 8008202:	f7fb f973 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8008206:	4649      	mov	r1, r9
 8008208:	4638      	mov	r0, r7
        color = newColor;
 800820a:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 800820e:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8008212:	f00c fdbb 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008216:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800821a:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 800821e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008222:	4b38      	ldr	r3, [pc, #224]	; (8008304 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 8008224:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H7OA));
 8008226:	4648      	mov	r0, r9
 8008228:	2306      	movs	r3, #6
 800822a:	a90c      	add	r1, sp, #48	; 0x30
 800822c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008230:	f00d f846 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008234:	4649      	mov	r1, r9
 8008236:	4630      	mov	r0, r6
 8008238:	f00a fa1a 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 800823c:	2255      	movs	r2, #85	; 0x55
 800823e:	ee1b 0a10 	vmov	r0, s22
 8008242:	2171      	movs	r1, #113	; 0x71
 8008244:	f7fb f952 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8008248:	ee1b 1a10 	vmov	r1, s22
 800824c:	4638      	mov	r0, r7
        color = newColor;
 800824e:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8008252:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8008256:	f00c fd99 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800825a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800825e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8008262:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008266:	4b27      	ldr	r3, [pc, #156]	; (8008304 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 8008268:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_61VS));
 800826a:	ee1b 0a10 	vmov	r0, s22
 800826e:	f04f 0305 	mov.w	r3, #5
 8008272:	a90c      	add	r1, sp, #48	; 0x30
 8008274:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008278:	f00d f822 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800827c:	ee1b 1a10 	vmov	r1, s22
 8008280:	4630      	mov	r0, r6
 8008282:	f00a f9f5 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Current.setPosition(0, 239, 240, 15);
 8008286:	230f      	movs	r3, #15
 8008288:	22ef      	movs	r2, #239	; 0xef
 800828a:	ee1b 0a90 	vmov	r0, s23
 800828e:	9300      	str	r3, [sp, #0]
 8008290:	4629      	mov	r1, r5
 8008292:	23f0      	movs	r3, #240	; 0xf0
 8008294:	f7fb f937 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008298:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 800829c:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 80082a0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80082a4:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 80082a8:	ee1b 1a90 	vmov	r1, s23
 80082ac:	4638      	mov	r0, r7
 80082ae:	4798      	blx	r3
 80082b0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80082b4:	f8df 9064 	ldr.w	r9, [pc, #100]	; 800831c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x388>
 80082b8:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 80082bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80082c0:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_CurrentBuffer, AMD3_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VDGC).getText());
 80082c4:	f204 6b1c 	addw	fp, r4, #1564	; 0x61c
 80082c8:	b92b      	cbnz	r3, 80082d6 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x342>
 80082ca:	4b0f      	ldr	r3, [pc, #60]	; (8008308 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x374>)
 80082cc:	4a0f      	ldr	r2, [pc, #60]	; (800830c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x378>)
 80082ce:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80082d0:	480f      	ldr	r0, [pc, #60]	; (8008310 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x37c>)
 80082d2:	f025 fa75 	bl	802d7c0 <__assert_func>
 80082d6:	4b0f      	ldr	r3, [pc, #60]	; (8008314 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x380>)
 80082d8:	881b      	ldrh	r3, [r3, #0]
 80082da:	2b04      	cmp	r3, #4
 80082dc:	d820      	bhi.n	8008320 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x38c>
 80082de:	4b0e      	ldr	r3, [pc, #56]	; (8008318 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x384>)
 80082e0:	4a0a      	ldr	r2, [pc, #40]	; (800830c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x378>)
 80082e2:	2161      	movs	r1, #97	; 0x61
 80082e4:	e7f4      	b.n	80082d0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x33c>
 80082e6:	bf00      	nop
 80082e8:	08030a4c 	.word	0x08030a4c
 80082ec:	080318d0 	.word	0x080318d0
 80082f0:	08031b1c 	.word	0x08031b1c
 80082f4:	0802f41c 	.word	0x0802f41c
 80082f8:	08031604 	.word	0x08031604
 80082fc:	08030a34 	.word	0x08030a34
 8008300:	08007f7d 	.word	0x08007f7d
 8008304:	0802f37c 	.word	0x0802f37c
 8008308:	0802f1cc 	.word	0x0802f1cc
 800830c:	0802f2d1 	.word	0x0802f2d1
 8008310:	0802f249 	.word	0x0802f249
 8008314:	200138b0 	.word	0x200138b0
 8008318:	0802f290 	.word	0x0802f290
 800831c:	200138ac 	.word	0x200138ac
        return texts->getText(typedTextId);
 8008320:	4bdd      	ldr	r3, [pc, #884]	; (8008698 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 8008322:	2104      	movs	r1, #4
 8008324:	6818      	ldr	r0, [r3, #0]
 8008326:	f002 f8ef 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 800832a:	4adc      	ldr	r2, [pc, #880]	; (800869c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 800832c:	4603      	mov	r3, r0
 800832e:	210a      	movs	r1, #10
 8008330:	4658      	mov	r0, fp
 8008332:	f013 fc23 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8008336:	4ada      	ldr	r2, [pc, #872]	; (80086a0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
        wc1 = value;
 8008338:	f8c4 b200 	str.w	fp, [r4, #512]	; 0x200
    AMD3_Current.setTypedText(touchgfx::TypedText(T_AMD3_CURRENT));
 800833c:	ee1b 0a90 	vmov	r0, s23
 8008340:	a90c      	add	r1, sp, #48	; 0x30
 8008342:	f04f 0b01 	mov.w	fp, #1
 8008346:	920c      	str	r2, [sp, #48]	; 0x30
 8008348:	f8ad b034 	strh.w	fp, [sp, #52]	; 0x34
 800834c:	f00c ffb8 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008350:	ee1b 1a90 	vmov	r1, s23
 8008354:	4630      	mov	r0, r6
 8008356:	f00a f98b 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Frequency.setPosition(0, 224, 240, 15);
 800835a:	210f      	movs	r1, #15
 800835c:	22e0      	movs	r2, #224	; 0xe0
 800835e:	ee1c 0a10 	vmov	r0, s24
 8008362:	9100      	str	r1, [sp, #0]
 8008364:	23f0      	movs	r3, #240	; 0xf0
 8008366:	4629      	mov	r1, r5
 8008368:	f7fb f8cd 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 800836c:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 8008370:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8008374:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8008378:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 800837c:	ee1c 1a10 	vmov	r1, s24
 8008380:	4638      	mov	r0, r7
 8008382:	4798      	blx	r3
 8008384:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008388:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800838c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008390:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_FrequencyBuffer, AMD3_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RCRP).getText());
 8008394:	f504 61c6 	add.w	r1, r4, #1584	; 0x630
 8008398:	9105      	str	r1, [sp, #20]
 800839a:	2b00      	cmp	r3, #0
 800839c:	d095      	beq.n	80082ca <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x336>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800839e:	49c1      	ldr	r1, [pc, #772]	; (80086a4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x710>)
 80083a0:	880b      	ldrh	r3, [r1, #0]
 80083a2:	2b03      	cmp	r3, #3
 80083a4:	d99b      	bls.n	80082de <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x34a>
        return texts->getText(typedTextId);
 80083a6:	4bbc      	ldr	r3, [pc, #752]	; (8008698 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 80083a8:	2103      	movs	r1, #3
 80083aa:	6818      	ldr	r0, [r3, #0]
 80083ac:	f002 f8ac 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 80083b0:	4aba      	ldr	r2, [pc, #744]	; (800869c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 80083b2:	4603      	mov	r3, r0
 80083b4:	210a      	movs	r1, #10
 80083b6:	9805      	ldr	r0, [sp, #20]
 80083b8:	f013 fbe0 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80083bc:	9805      	ldr	r0, [sp, #20]
 80083be:	f8c4 024c 	str.w	r0, [r4, #588]	; 0x24c
    AMD3_Frequency.setTypedText(touchgfx::TypedText(T_AMD3_FREQUENCY));
 80083c2:	a80c      	add	r0, sp, #48	; 0x30
        : typedTextId(id)
 80083c4:	4ab6      	ldr	r2, [pc, #728]	; (80086a0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 80083c6:	920c      	str	r2, [sp, #48]	; 0x30
 80083c8:	230d      	movs	r3, #13
 80083ca:	4601      	mov	r1, r0
 80083cc:	ee1c 0a10 	vmov	r0, s24
 80083d0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80083d4:	f00c ff74 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80083d8:	ee1c 1a10 	vmov	r1, s24
 80083dc:	4630      	mov	r0, r6
 80083de:	f00a f947 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Distance.setPosition(0, 209, 240, 15);
 80083e2:	200f      	movs	r0, #15
 80083e4:	22d1      	movs	r2, #209	; 0xd1
 80083e6:	9000      	str	r0, [sp, #0]
 80083e8:	23f0      	movs	r3, #240	; 0xf0
 80083ea:	ee1c 0a90 	vmov	r0, s25
 80083ee:	4629      	mov	r1, r5
 80083f0:	f7fb f889 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 80083f4:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 80083f8:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 80083fc:	4638      	mov	r0, r7
 80083fe:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8008402:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8008406:	ee1c 1a90 	vmov	r1, s25
 800840a:	4798      	blx	r3
 800840c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008410:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8008414:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008418:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_DistanceBuffer, AMD3_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VKRM).getText());
 800841c:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8008420:	2b00      	cmp	r3, #0
 8008422:	f43f af52 	beq.w	80082ca <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x336>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008426:	499f      	ldr	r1, [pc, #636]	; (80086a4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x710>)
 8008428:	880b      	ldrh	r3, [r1, #0]
 800842a:	2b02      	cmp	r3, #2
 800842c:	f67f af57 	bls.w	80082de <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x34a>
        return texts->getText(typedTextId);
 8008430:	4b99      	ldr	r3, [pc, #612]	; (8008698 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 8008432:	2102      	movs	r1, #2
 8008434:	6818      	ldr	r0, [r3, #0]
 8008436:	f002 f867 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 800843a:	4a98      	ldr	r2, [pc, #608]	; (800869c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 800843c:	4603      	mov	r3, r0
 800843e:	210a      	movs	r1, #10
 8008440:	4638      	mov	r0, r7
 8008442:	f013 fb9b 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8008446:	4a96      	ldr	r2, [pc, #600]	; (80086a0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 8008448:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 800844c:	2336      	movs	r3, #54	; 0x36
    AMD3_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 800844e:	ee1c 0a90 	vmov	r0, s25
 8008452:	a90c      	add	r1, sp, #48	; 0x30
 8008454:	920c      	str	r2, [sp, #48]	; 0x30
 8008456:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800845a:	f00c ff31 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800845e:	ee1c 1a90 	vmov	r1, s25
 8008462:	4630      	mov	r0, r6
 8008464:	f00a f904 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008468:	2304      	movs	r3, #4
    AMD3_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 800846a:	a90c      	add	r1, sp, #48	; 0x30
 800846c:	4650      	mov	r0, sl
 800846e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8008472:	f00a f88f 	bl	8012594 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    AMD3_Gauge.setPosition(28, 103, 184, 106);
 8008476:	236a      	movs	r3, #106	; 0x6a
 8008478:	9300      	str	r3, [sp, #0]
 800847a:	2267      	movs	r2, #103	; 0x67
 800847c:	23b8      	movs	r3, #184	; 0xb8
 800847e:	211c      	movs	r1, #28
 8008480:	4650      	mov	r0, sl
 8008482:	f7fb f840 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
    AMD3_Gauge.setCenter(92, 92);
 8008486:	225c      	movs	r2, #92	; 0x5c
 8008488:	4611      	mov	r1, r2
 800848a:	4650      	mov	r0, sl
 800848c:	f00d fa37 	bl	80158fe <_ZN8touchgfx5Gauge9setCenterEii>
    AMD3_Gauge.setStartEndAngle(-90, 90);
 8008490:	225a      	movs	r2, #90	; 0x5a
 8008492:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8008496:	4650      	mov	r0, sl
 8008498:	f00d fab6 	bl	8015a08 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    AMD3_Gauge.setRange(-90, 90);
 800849c:	462b      	mov	r3, r5
 800849e:	225a      	movs	r2, #90	; 0x5a
 80084a0:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80084a4:	4650      	mov	r0, sl
 80084a6:	9500      	str	r5, [sp, #0]
 80084a8:	f009 ff21 	bl	80122ee <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    AMD3_Gauge.setValue(0);
 80084ac:	4629      	mov	r1, r5
 80084ae:	4650      	mov	r0, sl
 80084b0:	f00d fa54 	bl	801595c <_ZN8touchgfx5Gauge8setValueEi>
    AMD3_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80084b4:	2335      	movs	r3, #53	; 0x35
 80084b6:	2208      	movs	r2, #8
 80084b8:	2105      	movs	r1, #5
 80084ba:	4650      	mov	r0, sl
 80084bc:	f00d fa0a 	bl	80158d4 <_ZN8touchgfx5Gauge9setNeedleEtss>
    AMD3_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80084c0:	4659      	mov	r1, fp
 80084c2:	4650      	mov	r0, sl
 80084c4:	f00d f9a8 	bl	8015818 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    AMD3_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80084c8:	4659      	mov	r1, fp
 80084ca:	4650      	mov	r0, sl
 80084cc:	f00d f9a7 	bl	801581e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 80084d0:	4651      	mov	r1, sl
 80084d2:	4630      	mov	r0, r6
 80084d4:	f00a f8cc 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 80084d8:	230a      	movs	r3, #10
 80084da:	ee18 0a10 	vmov	r0, s16
 80084de:	9300      	str	r3, [sp, #0]
 80084e0:	224b      	movs	r2, #75	; 0x4b
 80084e2:	23f0      	movs	r3, #240	; 0xf0
 80084e4:	4629      	mov	r1, r5
 80084e6:	f7fb f80e 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 80084ea:	9b03      	ldr	r3, [sp, #12]
 80084ec:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80084f0:	22a0      	movs	r2, #160	; 0xa0
 80084f2:	4611      	mov	r1, r2
 80084f4:	ee18 0a10 	vmov	r0, s16
 80084f8:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80084fc:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8008500:	f00c fa98 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008504:	ee18 0a10 	vmov	r0, s16
 8008508:	22a0      	movs	r2, #160	; 0xa0
 800850a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800850e:	f00c fa9c 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008512:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8008516:	2b20      	cmp	r3, #32
 8008518:	d006      	beq.n	8008528 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x594>
        lineWidthQ5 = widthQ5;
 800851a:	2320      	movs	r3, #32
        updateCachedShape();
 800851c:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8008520:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8008524:	f00c f990 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008528:	ee18 0a10 	vmov	r0, s16
 800852c:	2101      	movs	r1, #1
 800852e:	f00c fa97 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008532:	ee18 1a10 	vmov	r1, s16
 8008536:	4630      	mov	r0, r6
 8008538:	f00a f89a 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800853c:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(23, 60);
 8008540:	223c      	movs	r2, #60	; 0x3c
 8008542:	ee19 0a10 	vmov	r0, s18
 8008546:	2117      	movs	r1, #23
        linespace = space;
 8008548:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 800854c:	ad06      	add	r5, sp, #24
 800854e:	f7fa ffcd 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8008552:	ee19 1a10 	vmov	r1, s18
 8008556:	4628      	mov	r0, r5
        color = newColor;
 8008558:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 800855c:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8008560:	f00c fc14 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008564:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008568:	ee19 3a10 	vmov	r3, s18
 800856c:	333c      	adds	r3, #60	; 0x3c
 800856e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008572:	4f4b      	ldr	r7, [pc, #300]	; (80086a0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 8008574:	970c      	str	r7, [sp, #48]	; 0x30
 8008576:	2348      	movs	r3, #72	; 0x48
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8008578:	ee19 0a10 	vmov	r0, s18
 800857c:	a90c      	add	r1, sp, #48	; 0x30
 800857e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008582:	f00c fe9d 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008586:	ee19 1a10 	vmov	r1, s18
 800858a:	4630      	mov	r0, r6
 800858c:	f00a f870 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008590:	230a      	movs	r3, #10
 8008592:	ee18 0a90 	vmov	r0, s17
 8008596:	9300      	str	r3, [sp, #0]
 8008598:	2232      	movs	r2, #50	; 0x32
 800859a:	23f0      	movs	r3, #240	; 0xf0
 800859c:	4649      	mov	r1, r9
 800859e:	f7fa ffb2 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 80085a2:	9b04      	ldr	r3, [sp, #16]
 80085a4:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80085a8:	22a0      	movs	r2, #160	; 0xa0
 80085aa:	4611      	mov	r1, r2
 80085ac:	ee18 0a90 	vmov	r0, s17
 80085b0:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 80085b4:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 80085b8:	f00c fa3c 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80085bc:	ee18 0a90 	vmov	r0, s17
 80085c0:	22a0      	movs	r2, #160	; 0xa0
 80085c2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80085c6:	f00c fa40 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80085ca:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 80085ce:	2b20      	cmp	r3, #32
 80085d0:	d006      	beq.n	80085e0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x64c>
        lineWidthQ5 = widthQ5;
 80085d2:	2320      	movs	r3, #32
        updateCachedShape();
 80085d4:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 80085d8:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 80085dc:	f00c f934 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80085e0:	ee18 0a90 	vmov	r0, s17
 80085e4:	2101      	movs	r1, #1
 80085e6:	f00c fa3b 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80085ea:	ee18 1a90 	vmov	r1, s17
 80085ee:	4630      	mov	r0, r6
 80085f0:	f00a f83e 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80085f4:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 80085f8:	ee19 0a90 	vmov	r0, s19
 80085fc:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80085fe:	f04f 0800 	mov.w	r8, #0
 8008602:	2145      	movs	r1, #69	; 0x45
 8008604:	f7fa ff72 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008608:	ee19 1a90 	vmov	r1, s19
 800860c:	4628      	mov	r0, r5
        color = newColor;
 800860e:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8008612:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8008616:	f00c fbb9 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800861a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800861e:	ee19 3a90 	vmov	r3, s19
 8008622:	333c      	adds	r3, #60	; 0x3c
 8008624:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008628:	2349      	movs	r3, #73	; 0x49
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 800862a:	ee19 0a90 	vmov	r0, s19
 800862e:	a90c      	add	r1, sp, #48	; 0x30
 8008630:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008634:	970c      	str	r7, [sp, #48]	; 0x30
 8008636:	f00c fe43 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800863a:	ee19 1a90 	vmov	r1, s19
 800863e:	4630      	mov	r0, r6
 8008640:	f00a f816 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8008644:	ee1a 0a10 	vmov	r0, s20
 8008648:	220c      	movs	r2, #12
 800864a:	2136      	movs	r1, #54	; 0x36
 800864c:	f7fa ff4e 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8008650:	ee1a 1a10 	vmov	r1, s20
 8008654:	4628      	mov	r0, r5
        color = newColor;
 8008656:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 800865a:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 800865e:	f00c fb95 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008662:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008666:	ee1a 3a10 	vmov	r3, s20
 800866a:	333c      	adds	r3, #60	; 0x3c
 800866c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008670:	234a      	movs	r3, #74	; 0x4a
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8008672:	ee1a 0a10 	vmov	r0, s20
 8008676:	a90c      	add	r1, sp, #48	; 0x30
 8008678:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800867c:	970c      	str	r7, [sp, #48]	; 0x30
 800867e:	f00c fe1f 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008682:	4630      	mov	r0, r6
 8008684:	ee1a 1a10 	vmov	r1, s20
 8008688:	f009 fff2 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800868c:	4620      	mov	r0, r4
 800868e:	b00f      	add	sp, #60	; 0x3c
 8008690:	ecbd 8b0a 	vpop	{d8-d12}
 8008694:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008698:	200138b8 	.word	0x200138b8
 800869c:	0802f309 	.word	0x0802f309
 80086a0:	0802f37c 	.word	0x0802f37c
 80086a4:	200138b0 	.word	0x200138b0

080086a8 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 80086a8:	4770      	bx	lr

080086aa <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80086aa:	4770      	bx	lr

080086ac <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80086ac:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80086ae:	68c2      	ldr	r2, [r0, #12]
 80086b0:	6844      	ldr	r4, [r0, #4]
 80086b2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80086b4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80086b6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80086ba:	07d2      	lsls	r2, r2, #31
 80086bc:	bf48      	it	mi
 80086be:	5962      	ldrmi	r2, [r4, r5]
 80086c0:	689b      	ldr	r3, [r3, #8]
    }
 80086c2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80086c4:	bf48      	it	mi
 80086c6:	58d3      	ldrmi	r3, [r2, r3]
 80086c8:	4718      	bx	r3

080086ca <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80086ca:	6843      	ldr	r3, [r0, #4]
 80086cc:	b12b      	cbz	r3, 80086da <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80086ce:	6883      	ldr	r3, [r0, #8]
 80086d0:	b92b      	cbnz	r3, 80086de <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80086d2:	68c0      	ldr	r0, [r0, #12]
 80086d4:	f000 0001 	and.w	r0, r0, #1
 80086d8:	4770      	bx	lr
 80086da:	4618      	mov	r0, r3
 80086dc:	4770      	bx	lr
 80086de:	2001      	movs	r0, #1
    }
 80086e0:	4770      	bx	lr

080086e2 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80086e2:	b510      	push	{r4, lr}
 80086e4:	2110      	movs	r1, #16
 80086e6:	4604      	mov	r4, r0
 80086e8:	f024 f983 	bl	802c9f2 <_ZdlPvj>
 80086ec:	4620      	mov	r0, r4
 80086ee:	bd10      	pop	{r4, pc}

080086f0 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80086f0:	b510      	push	{r4, lr}
 80086f2:	4b03      	ldr	r3, [pc, #12]	; (8008700 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 80086f4:	6003      	str	r3, [r0, #0]
 80086f6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80086f8:	f00e fb90 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80086fc:	4620      	mov	r0, r4
 80086fe:	bd10      	pop	{r4, pc}
 8008700:	08030a98 	.word	0x08030a98

08008704 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8008704:	b507      	push	{r0, r1, r2, lr}
 8008706:	4b07      	ldr	r3, [pc, #28]	; (8008724 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8008708:	6003      	str	r3, [r0, #0]
 800870a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800870c:	f00e fb86 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008710:	9801      	ldr	r0, [sp, #4]
 8008712:	f241 11c4 	movw	r1, #4548	; 0x11c4
 8008716:	f024 f96c 	bl	802c9f2 <_ZdlPvj>
 800871a:	9801      	ldr	r0, [sp, #4]
 800871c:	b003      	add	sp, #12
 800871e:	f85d fb04 	ldr.w	pc, [sp], #4
 8008722:	bf00      	nop
 8008724:	08030a98 	.word	0x08030a98

08008728 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8008728:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 800872a:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 800872e:	4299      	cmp	r1, r3
{
 8008730:	4604      	mov	r4, r0
 8008732:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 8008734:	d103      	bne.n	800873e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008736:	f010 f873 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 800873a:	f7fc fe79 	bl	8005430 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_1Phase)
 800873e:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8008742:	429d      	cmp	r5, r3
 8008744:	d103      	bne.n	800874e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8008746:	f010 f86b 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_1Phase clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 800874a:	f7fc fe91 	bl	8005470 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_3Phase)
 800874e:	f504 7496 	add.w	r4, r4, #300	; 0x12c
 8008752:	42a5      	cmp	r5, r4
 8008754:	d105      	bne.n	8008762 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8008756:	f010 f863 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_3Phase clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 800875a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 800875e:	f7fc be97 	b.w	8005490 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8008762:	bd38      	pop	{r3, r4, r5, pc}

08008764 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8008764:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008768:	ed2d 8b06 	vpush	{d8-d10}
 800876c:	4604      	mov	r4, r0
 800876e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8008770:	46a2      	mov	sl, r4
 8008772:	2500      	movs	r5, #0
 8008774:	f011 fcd4 	bl	801a120 <_ZN8touchgfx6ScreenC1Ev>
 8008778:	4b71      	ldr	r3, [pc, #452]	; (8008940 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
 800877a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800877c:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8008780:	2226      	movs	r2, #38	; 0x26
 8008782:	4629      	mov	r1, r5
 8008784:	4650      	mov	r0, sl
 8008786:	f025 fa20 	bl	802dbca <memset>
 800878a:	4650      	mov	r0, sl
 800878c:	f7fa fee0 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 8008790:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8008794:	26ff      	movs	r6, #255	; 0xff
 8008796:	4b6b      	ldr	r3, [pc, #428]	; (8008944 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8008798:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800879a:	2226      	movs	r2, #38	; 0x26
 800879c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80087a0:	4629      	mov	r1, r5
 80087a2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80087a6:	4648      	mov	r0, r9
 80087a8:	66a5      	str	r5, [r4, #104]	; 0x68
 80087aa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80087ae:	f025 fa0c 	bl	802dbca <memset>
 80087b2:	4648      	mov	r0, r9
 80087b4:	f7fa fecc 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 80087b8:	4b63      	ldr	r3, [pc, #396]	; (8008948 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>)
 80087ba:	66e3      	str	r3, [r4, #108]	; 0x6c
 80087bc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80087c0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80087c4:	a90a      	add	r1, sp, #40	; 0x28
 80087c6:	4648      	mov	r0, r9
 80087c8:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80087cc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80087d0:	f00d fb27 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80087d4:	4640      	mov	r0, r8
 80087d6:	f7fa ff1f 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80087da:	4b5c      	ldr	r3, [pc, #368]	; (800894c <_ZN26Measurement_SingleViewBaseC1Ev+0x1e8>)
 80087dc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80087e0:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80087e4:	4618      	mov	r0, r3
 80087e6:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80087ea:	ee09 3a90 	vmov	s19, r3
 80087ee:	f00d fc4f 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80087f2:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 80087f6:	4618      	mov	r0, r3
 80087f8:	ee0a 3a10 	vmov	s20, r3
 80087fc:	f00d fc48 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008800:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8008804:	4618      	mov	r0, r3
 8008806:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 800880a:	ee0a 3a90 	vmov	s21, r3
 800880e:	f00d fc3f 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008812:	4638      	mov	r0, r7
 8008814:	f00b fff8 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008818:	4e4d      	ldr	r6, [pc, #308]	; (8008950 <_ZN26Measurement_SingleViewBaseC1Ev+0x1ec>)
 800881a:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 800881e:	4618      	mov	r0, r3
 8008820:	9302      	str	r3, [sp, #8]
 8008822:	f7fa fc99 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008826:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800882a:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 800882e:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008832:	4618      	mov	r0, r3
 8008834:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 8008838:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 800883c:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8008840:	ee08 3a10 	vmov	s16, r3
 8008844:	f7fa fee8 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8008848:	4658      	mov	r0, fp
 800884a:	f00b ffdd 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 800884e:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 8008852:	4618      	mov	r0, r3
 8008854:	9303      	str	r3, [sp, #12]
 8008856:	f7fa fc7f 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800885a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800885e:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8008862:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8008866:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 800886a:	4618      	mov	r0, r3
 800886c:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8008870:	ee08 3a90 	vmov	s17, r3
 8008874:	f7fa fed0 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8008878:	f504 7355 	add.w	r3, r4, #852	; 0x354
 800887c:	4618      	mov	r0, r3
 800887e:	ee09 3a10 	vmov	s18, r3
 8008882:	f7fa fec9 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008886:	4a33      	ldr	r2, [pc, #204]	; (8008954 <_ZN26Measurement_SingleViewBaseC1Ev+0x1f0>)
 8008888:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800888c:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 8008890:	4a31      	ldr	r2, [pc, #196]	; (8008958 <_ZN26Measurement_SingleViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008892:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008896:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 800889a:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 800889e:	f00e fab3 	bl	8016e08 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80088a2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80088a6:	462a      	mov	r2, r5
 80088a8:	4650      	mov	r0, sl
 80088aa:	9300      	str	r3, [sp, #0]
 80088ac:	4629      	mov	r1, r5
 80088ae:	23f0      	movs	r3, #240	; 0xf0
 80088b0:	f7fa fe29 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 80088b4:	1d26      	adds	r6, r4, #4
        color = newColor;
 80088b6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80088ba:	66a3      	str	r3, [r4, #104]	; 0x68
 80088bc:	4651      	mov	r1, sl
 80088be:	4630      	mov	r0, r6
 80088c0:	f009 fed6 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 80088c4:	462a      	mov	r2, r5
 80088c6:	4648      	mov	r0, r9
 80088c8:	4629      	mov	r1, r5
 80088ca:	f7fa fe0f 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 80088ce:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80088d0:	4648      	mov	r0, r9
 80088d2:	a90a      	add	r1, sp, #40	; 0x28
 80088d4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80088d8:	f00d faa3 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80088dc:	4649      	mov	r1, r9
 80088de:	4630      	mov	r0, r6
 80088e0:	f009 fec6 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 80088e4:	f44f 729a 	mov.w	r2, #308	; 0x134
 80088e8:	2156      	movs	r1, #86	; 0x56
 80088ea:	4640      	mov	r0, r8
 80088ec:	f7fa fdfe 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 80088f0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80088f4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80088f8:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 80088fc:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8008900:	4648      	mov	r0, r9
 8008902:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008906:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800890a:	4641      	mov	r1, r8
 800890c:	4798      	blx	r3
 800890e:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8008912:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8008916:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800891a:	4b10      	ldr	r3, [pc, #64]	; (800895c <_ZN26Measurement_SingleViewBaseC1Ev+0x1f8>)
 800891c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 800891e:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 8008922:	b92b      	cbnz	r3, 8008930 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>
 8008924:	4b0e      	ldr	r3, [pc, #56]	; (8008960 <_ZN26Measurement_SingleViewBaseC1Ev+0x1fc>)
 8008926:	4a0f      	ldr	r2, [pc, #60]	; (8008964 <_ZN26Measurement_SingleViewBaseC1Ev+0x200>)
 8008928:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800892a:	480f      	ldr	r0, [pc, #60]	; (8008968 <_ZN26Measurement_SingleViewBaseC1Ev+0x204>)
 800892c:	f024 ff48 	bl	802d7c0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8008930:	4b0e      	ldr	r3, [pc, #56]	; (800896c <_ZN26Measurement_SingleViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008932:	881b      	ldrh	r3, [r3, #0]
 8008934:	2b42      	cmp	r3, #66	; 0x42
 8008936:	d81d      	bhi.n	8008974 <_ZN26Measurement_SingleViewBaseC1Ev+0x210>
 8008938:	4b0d      	ldr	r3, [pc, #52]	; (8008970 <_ZN26Measurement_SingleViewBaseC1Ev+0x20c>)
 800893a:	4a0a      	ldr	r2, [pc, #40]	; (8008964 <_ZN26Measurement_SingleViewBaseC1Ev+0x200>)
 800893c:	2161      	movs	r1, #97	; 0x61
 800893e:	e7f4      	b.n	800892a <_ZN26Measurement_SingleViewBaseC1Ev+0x1c6>
 8008940:	08030a98 	.word	0x08030a98
 8008944:	080318d0 	.word	0x080318d0
 8008948:	08031b1c 	.word	0x08031b1c
 800894c:	0802f41c 	.word	0x0802f41c
 8008950:	08031604 	.word	0x08031604
 8008954:	08030a80 	.word	0x08030a80
 8008958:	08008729 	.word	0x08008729
 800895c:	200138ac 	.word	0x200138ac
 8008960:	0802f1cc 	.word	0x0802f1cc
 8008964:	0802f2d1 	.word	0x0802f2d1
 8008968:	0802f249 	.word	0x0802f249
 800896c:	200138b0 	.word	0x200138b0
 8008970:	0802f290 	.word	0x0802f290
        return texts->getText(typedTextId);
 8008974:	4bad      	ldr	r3, [pc, #692]	; (8008c2c <_ZN26Measurement_SingleViewBaseC1Ev+0x4c8>)
 8008976:	2142      	movs	r1, #66	; 0x42
 8008978:	6818      	ldr	r0, [r3, #0]
 800897a:	f001 fdc5 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 800897e:	4aac      	ldr	r2, [pc, #688]	; (8008c30 <_ZN26Measurement_SingleViewBaseC1Ev+0x4cc>)
 8008980:	4603      	mov	r3, r0
 8008982:	2104      	movs	r1, #4
 8008984:	4648      	mov	r0, r9
 8008986:	f013 f8f9 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 800898a:	4640      	mov	r0, r8
        wc1 = value;
 800898c:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8008990:	f00c fc76 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8008994:	4ba7      	ldr	r3, [pc, #668]	; (8008c34 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008996:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8008998:	4640      	mov	r0, r8
 800899a:	2343      	movs	r3, #67	; 0x43
 800899c:	a90a      	add	r1, sp, #40	; 0x28
 800899e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80089a2:	f00c fc8d 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80089a6:	4641      	mov	r1, r8
 80089a8:	4630      	mov	r0, r6
 80089aa:	f009 fe61 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 80089ae:	ee19 0a90 	vmov	r0, s19
 80089b2:	22f0      	movs	r2, #240	; 0xf0
 80089b4:	2121      	movs	r1, #33	; 0x21
 80089b6:	f7fa fd99 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 80089ba:	f04f 0802 	mov.w	r8, #2
 80089be:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80089c0:	a909      	add	r1, sp, #36	; 0x24
 80089c2:	ee19 0a90 	vmov	r0, s19
 80089c6:	aa0a      	add	r2, sp, #40	; 0x28
 80089c8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80089cc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 80089d0:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80089d4:	f00d f82f 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80089d8:	2263      	movs	r2, #99	; 0x63
 80089da:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 80089de:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 80089e2:	ee19 0a90 	vmov	r0, s19
 80089e6:	f7fa fdc5 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80089ea:	ee19 1a90 	vmov	r1, s19
 80089ee:	4630      	mov	r0, r6
        colorPressed = col;
 80089f0:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 80089f4:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 80089f8:	f009 fe3a 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_3Phase.setXY(33, 170);
 80089fc:	ee1a 0a10 	vmov	r0, s20
 8008a00:	22aa      	movs	r2, #170	; 0xaa
 8008a02:	2121      	movs	r1, #33	; 0x21
 8008a04:	f7fa fd72 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8008a08:	2303      	movs	r3, #3
    buttonWithLabel_3Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008a0a:	a909      	add	r1, sp, #36	; 0x24
 8008a0c:	ee1a 0a10 	vmov	r0, s20
 8008a10:	aa0a      	add	r2, sp, #40	; 0x28
 8008a12:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008a16:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8008a1a:	f00d f80c 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8008a1e:	2262      	movs	r2, #98	; 0x62
 8008a20:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 8008a24:	ee1a 0a10 	vmov	r0, s20
 8008a28:	f7fa fda4 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008a2c:	ee1a 1a10 	vmov	r1, s20
 8008a30:	4630      	mov	r0, r6
        colorPressed = col;
 8008a32:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8008a36:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 8008a3a:	f009 fe19 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_1Phase.setXY(33, 100);
 8008a3e:	ee1a 0a90 	vmov	r0, s21
 8008a42:	2264      	movs	r2, #100	; 0x64
 8008a44:	2121      	movs	r1, #33	; 0x21
 8008a46:	f7fa fd51 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_1Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008a4a:	aa0a      	add	r2, sp, #40	; 0x28
 8008a4c:	2303      	movs	r3, #3
 8008a4e:	a909      	add	r1, sp, #36	; 0x24
 8008a50:	ee1a 0a90 	vmov	r0, s21
 8008a54:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008a58:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8008a5c:	f00c ffeb 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8008a60:	2361      	movs	r3, #97	; 0x61
 8008a62:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 8008a66:	ee1a 0a90 	vmov	r0, s21
 8008a6a:	f7fa fd83 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008a6e:	ee1a 1a90 	vmov	r1, s21
 8008a72:	4630      	mov	r0, r6
        colorPressed = col;
 8008a74:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8008a78:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8008a7c:	f009 fdf8 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8008a80:	230a      	movs	r3, #10
 8008a82:	9300      	str	r3, [sp, #0]
 8008a84:	224b      	movs	r2, #75	; 0x4b
 8008a86:	23f0      	movs	r3, #240	; 0xf0
 8008a88:	4629      	mov	r1, r5
 8008a8a:	4638      	mov	r0, r7
 8008a8c:	f7fa fd3b 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008a90:	9b02      	ldr	r3, [sp, #8]
 8008a92:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008a96:	22a0      	movs	r2, #160	; 0xa0
 8008a98:	4611      	mov	r1, r2
 8008a9a:	4638      	mov	r0, r7
 8008a9c:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008aa0:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8008aa4:	f00b ffc6 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008aa8:	22a0      	movs	r2, #160	; 0xa0
 8008aaa:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008aae:	4638      	mov	r0, r7
 8008ab0:	f00b ffcb 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008ab4:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 8008ab8:	2b20      	cmp	r3, #32
 8008aba:	d005      	beq.n	8008ac8 <_ZN26Measurement_SingleViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 8008abc:	2320      	movs	r3, #32
 8008abe:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8008ac2:	4638      	mov	r0, r7
 8008ac4:	f00b fec0 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008ac8:	4638      	mov	r0, r7
 8008aca:	2101      	movs	r1, #1
 8008acc:	f00b ffc8 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008ad0:	4639      	mov	r1, r7
 8008ad2:	4630      	mov	r0, r6
 8008ad4:	f009 fdcc 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008ad8:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(41, 60);
 8008adc:	223c      	movs	r2, #60	; 0x3c
 8008ade:	ee18 0a10 	vmov	r0, s16
 8008ae2:	2129      	movs	r1, #41	; 0x29
        linespace = space;
 8008ae4:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 8008ae8:	ad04      	add	r5, sp, #16
 8008aea:	f7fa fcff 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8008aee:	ee18 1a10 	vmov	r1, s16
 8008af2:	4628      	mov	r0, r5
        color = newColor;
 8008af4:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008af8:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008afc:	f00c f946 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008b00:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008b04:	ee18 3a10 	vmov	r3, s16
 8008b08:	333c      	adds	r3, #60	; 0x3c
 8008b0a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008b0e:	4b49      	ldr	r3, [pc, #292]	; (8008c34 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008b10:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8008b12:	ee18 0a10 	vmov	r0, s16
 8008b16:	2352      	movs	r3, #82	; 0x52
 8008b18:	a90a      	add	r1, sp, #40	; 0x28
 8008b1a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008b1e:	f00c fbcf 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008b22:	ee18 1a10 	vmov	r1, s16
 8008b26:	4630      	mov	r0, r6
 8008b28:	f009 fda2 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008b2c:	230a      	movs	r3, #10
 8008b2e:	9300      	str	r3, [sp, #0]
 8008b30:	2232      	movs	r2, #50	; 0x32
 8008b32:	23f0      	movs	r3, #240	; 0xf0
 8008b34:	4641      	mov	r1, r8
 8008b36:	4658      	mov	r0, fp
 8008b38:	f7fa fce5 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008b3c:	9b03      	ldr	r3, [sp, #12]
 8008b3e:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008b42:	22a0      	movs	r2, #160	; 0xa0
 8008b44:	4611      	mov	r1, r2
 8008b46:	4658      	mov	r0, fp
 8008b48:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 8008b4c:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 8008b50:	f00b ff70 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008b54:	22a0      	movs	r2, #160	; 0xa0
 8008b56:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008b5a:	4658      	mov	r0, fp
 8008b5c:	f00b ff75 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008b60:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8008b64:	2b20      	cmp	r3, #32
 8008b66:	d005      	beq.n	8008b74 <_ZN26Measurement_SingleViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 8008b68:	2320      	movs	r3, #32
 8008b6a:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8008b6e:	4658      	mov	r0, fp
 8008b70:	f00b fe6a 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008b74:	4658      	mov	r0, fp
 8008b76:	2101      	movs	r1, #1
 8008b78:	f00b ff72 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008b7c:	4659      	mov	r1, fp
 8008b7e:	4630      	mov	r0, r6
 8008b80:	f009 fd76 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008b84:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 8008b88:	ee18 0a90 	vmov	r0, s17
 8008b8c:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8008b8e:	2700      	movs	r7, #0
 8008b90:	2145      	movs	r1, #69	; 0x45
 8008b92:	f7fa fcab 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008b96:	ee18 1a90 	vmov	r1, s17
 8008b9a:	4628      	mov	r0, r5
        color = newColor;
 8008b9c:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 8008ba0:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8008ba4:	f00c f8f2 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008ba8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008bac:	ee18 3a90 	vmov	r3, s17
 8008bb0:	333c      	adds	r3, #60	; 0x3c
 8008bb2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008bb6:	4b1f      	ldr	r3, [pc, #124]	; (8008c34 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008bb8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8008bba:	ee18 0a90 	vmov	r0, s17
 8008bbe:	2311      	movs	r3, #17
 8008bc0:	a90a      	add	r1, sp, #40	; 0x28
 8008bc2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008bc6:	f00c fb7b 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008bca:	ee18 1a90 	vmov	r1, s17
 8008bce:	4630      	mov	r0, r6
 8008bd0:	f009 fd4e 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8008bd4:	ee19 0a10 	vmov	r0, s18
 8008bd8:	220c      	movs	r2, #12
 8008bda:	2136      	movs	r1, #54	; 0x36
 8008bdc:	f7fa fc86 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8008be0:	ee19 1a10 	vmov	r1, s18
 8008be4:	4628      	mov	r0, r5
        color = newColor;
 8008be6:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 8008bea:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8008bee:	f00c f8cd 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008bf2:	ee19 2a10 	vmov	r2, s18
 8008bf6:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8008bfa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008bfe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008c02:	4b0c      	ldr	r3, [pc, #48]	; (8008c34 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008c04:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8008c06:	ee19 0a10 	vmov	r0, s18
 8008c0a:	2310      	movs	r3, #16
 8008c0c:	a90a      	add	r1, sp, #40	; 0x28
 8008c0e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008c12:	f00c fb55 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008c16:	4630      	mov	r0, r6
 8008c18:	ee19 1a10 	vmov	r1, s18
 8008c1c:	f009 fd28 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008c20:	4620      	mov	r0, r4
 8008c22:	b00d      	add	sp, #52	; 0x34
 8008c24:	ecbd 8b06 	vpop	{d8-d10}
 8008c28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008c2c:	200138b8 	.word	0x200138b8
 8008c30:	0802f309 	.word	0x0802f309
 8008c34:	0802f37c 	.word	0x0802f37c

08008c38 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8008c38:	4770      	bx	lr

08008c3a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8008c3a:	4770      	bx	lr

08008c3c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008c3c:	4770      	bx	lr

08008c3e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008c3e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008c40:	68c2      	ldr	r2, [r0, #12]
 8008c42:	6844      	ldr	r4, [r0, #4]
 8008c44:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008c46:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008c48:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008c4c:	07d2      	lsls	r2, r2, #31
 8008c4e:	bf48      	it	mi
 8008c50:	5962      	ldrmi	r2, [r4, r5]
 8008c52:	689b      	ldr	r3, [r3, #8]
    }
 8008c54:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008c56:	bf48      	it	mi
 8008c58:	58d3      	ldrmi	r3, [r2, r3]
 8008c5a:	4718      	bx	r3

08008c5c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8008c5c:	6843      	ldr	r3, [r0, #4]
 8008c5e:	b12b      	cbz	r3, 8008c6c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008c60:	6883      	ldr	r3, [r0, #8]
 8008c62:	b92b      	cbnz	r3, 8008c70 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008c64:	68c0      	ldr	r0, [r0, #12]
 8008c66:	f000 0001 	and.w	r0, r0, #1
 8008c6a:	4770      	bx	lr
 8008c6c:	4618      	mov	r0, r3
 8008c6e:	4770      	bx	lr
 8008c70:	2001      	movs	r0, #1
    }
 8008c72:	4770      	bx	lr

08008c74 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008c74:	b510      	push	{r4, lr}
 8008c76:	2110      	movs	r1, #16
 8008c78:	4604      	mov	r4, r0
 8008c7a:	f023 feba 	bl	802c9f2 <_ZdlPvj>
 8008c7e:	4620      	mov	r0, r4
 8008c80:	bd10      	pop	{r4, pc}
	...

08008c84 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8008c84:	b510      	push	{r4, lr}
 8008c86:	4b03      	ldr	r3, [pc, #12]	; (8008c94 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8008c88:	6003      	str	r3, [r0, #0]
 8008c8a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008c8c:	f00e f8c6 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008c90:	4620      	mov	r0, r4
 8008c92:	bd10      	pop	{r4, pc}
 8008c94:	08030ae4 	.word	0x08030ae4

08008c98 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8008c98:	b507      	push	{r0, r1, r2, lr}
 8008c9a:	4b07      	ldr	r3, [pc, #28]	; (8008cb8 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8008c9c:	6003      	str	r3, [r0, #0]
 8008c9e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008ca0:	f00e f8bc 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008ca4:	9801      	ldr	r0, [sp, #4]
 8008ca6:	f241 417c 	movw	r1, #5244	; 0x147c
 8008caa:	f023 fea2 	bl	802c9f2 <_ZdlPvj>
 8008cae:	9801      	ldr	r0, [sp, #4]
 8008cb0:	b003      	add	sp, #12
 8008cb2:	f85d fb04 	ldr.w	pc, [sp], #4
 8008cb6:	bf00      	nop
 8008cb8:	08030ae4 	.word	0x08030ae4

08008cbc <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8008cbc:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8008cbe:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8008cc2:	f8d4 2478 	ldr.w	r2, [r4, #1144]	; 0x478
 8008cc6:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8008cc8:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8008cca:	f8c4 2478 	str.w	r2, [r4, #1144]	; 0x478
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8008cce:	d105      	bne.n	8008cdc <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8008cd0:	6803      	ldr	r3, [r0, #0]
 8008cd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008cd4:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8008cd6:	2300      	movs	r3, #0
 8008cd8:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
    }
}
 8008cdc:	bd10      	pop	{r4, pc}

08008cde <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel_return)
 8008cde:	3098      	adds	r0, #152	; 0x98
 8008ce0:	4288      	cmp	r0, r1
{
 8008ce2:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_return)
 8008ce4:	d105      	bne.n	8008cf2 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008ce6:	f00f fd9b 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
}
 8008cea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8008cee:	f7fc bbaf 	b.w	8005450 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8008cf2:	bd08      	pop	{r3, pc}

08008cf4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8008cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008cf8:	ed2d 8b0a 	vpush	{d8-d12}
 8008cfc:	4604      	mov	r4, r0
 8008cfe:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8008d00:	46a0      	mov	r8, r4
 8008d02:	2500      	movs	r5, #0
 8008d04:	f011 fa0c 	bl	801a120 <_ZN8touchgfx6ScreenC1Ev>
 8008d08:	4bce      	ldr	r3, [pc, #824]	; (8009044 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x350>)
 8008d0a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008d0c:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8008d10:	2226      	movs	r2, #38	; 0x26
 8008d12:	4629      	mov	r1, r5
 8008d14:	4640      	mov	r0, r8
 8008d16:	f024 ff58 	bl	802dbca <memset>
 8008d1a:	4640      	mov	r0, r8
 8008d1c:	f7fa fc18 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 8008d20:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008d24:	26ff      	movs	r6, #255	; 0xff
 8008d26:	4bc8      	ldr	r3, [pc, #800]	; (8009048 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x354>)
 8008d28:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008d2a:	2226      	movs	r2, #38	; 0x26
 8008d2c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008d30:	4629      	mov	r1, r5
 8008d32:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008d36:	4638      	mov	r0, r7
 8008d38:	66a5      	str	r5, [r4, #104]	; 0x68
 8008d3a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008d3e:	f024 ff44 	bl	802dbca <memset>
 8008d42:	4638      	mov	r0, r7
 8008d44:	f7fa fc04 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 8008d48:	4bc0      	ldr	r3, [pc, #768]	; (800904c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x358>)
 8008d4a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008d4c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008d50:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008d54:	a90a      	add	r1, sp, #40	; 0x28
 8008d56:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8008d5a:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8008d5c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008d60:	f00d f85f 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008d64:	4658      	mov	r0, fp
 8008d66:	f00d f993 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008d6a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8008d6e:	f504 7994 	add.w	r9, r4, #296	; 0x128
 8008d72:	4618      	mov	r0, r3
 8008d74:	ee0a 3a90 	vmov	s21, r3
 8008d78:	f7fa fc4e 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8008d7c:	4648      	mov	r0, r9
 8008d7e:	f7fa fc4b 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8008d82:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 8008d86:	4618      	mov	r0, r3
 8008d88:	ee0b 3a10 	vmov	s22, r3
 8008d8c:	f7fa fc44 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8008d90:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 8008d94:	4618      	mov	r0, r3
 8008d96:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008d9a:	4ead      	ldr	r6, [pc, #692]	; (8009050 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x35c>)
        : TextArea()
 8008d9c:	f7fa fc3c 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8008da0:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 8008da4:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8008da8:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008daa:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 8008dae:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 8008db2:	f7fa fc31 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8008db6:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8008dba:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008dbc:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8008dc0:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 8008dc4:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8008dc8:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 8008dcc:	f7fa fc24 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8008dd0:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8008dd4:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8008dd8:	4650      	mov	r0, sl
 8008dda:	f00c fce5 	bl	80157a8 <_ZN8touchgfx5GaugeC1Ev>
 8008dde:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8008de2:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008de4:	4e9b      	ldr	r6, [pc, #620]	; (8009054 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x360>)
 8008de6:	ee08 3a10 	vmov	s16, r3
 8008dea:	f00b fd0d 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 8008dee:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8008df2:	4618      	mov	r0, r3
 8008df4:	9302      	str	r3, [sp, #8]
 8008df6:	f7fa f9af 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008dfa:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008dfe:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8008e02:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8008e06:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8008e0a:	4618      	mov	r0, r3
 8008e0c:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8008e10:	ee09 3a10 	vmov	s18, r3
 8008e14:	f7fa fc00 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8008e18:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8008e1c:	4618      	mov	r0, r3
 8008e1e:	ee08 3a90 	vmov	s17, r3
 8008e22:	f00b fcf1 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 8008e26:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8008e2a:	4618      	mov	r0, r3
 8008e2c:	9303      	str	r3, [sp, #12]
 8008e2e:	f7fa f993 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008e32:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008e36:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8008e3a:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8008e3e:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8008e42:	4618      	mov	r0, r3
 8008e44:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8008e48:	ee09 3a90 	vmov	s19, r3
 8008e4c:	f7fa fbe4 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8008e50:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8008e54:	4618      	mov	r0, r3
 8008e56:	ee0a 3a10 	vmov	s20, r3
 8008e5a:	f7fa fbdd 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008e5e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008e62:	4a7d      	ldr	r2, [pc, #500]	; (8009058 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x364>)
 8008e64:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8008e68:	4a7c      	ldr	r2, [pc, #496]	; (800905c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x368>)
 8008e6a:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 8008e6e:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 8008e72:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
 8008e76:	f8c3 5478 	str.w	r5, [r3, #1144]	; 0x478
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008e7a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008e7e:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 8008e82:	f00d ffc1 	bl	8016e08 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008e86:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008e8a:	462a      	mov	r2, r5
 8008e8c:	4640      	mov	r0, r8
 8008e8e:	9300      	str	r3, [sp, #0]
 8008e90:	4629      	mov	r1, r5
 8008e92:	23f0      	movs	r3, #240	; 0xf0
 8008e94:	f7fa fb37 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008e98:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008e9a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008e9e:	66a3      	str	r3, [r4, #104]	; 0x68
 8008ea0:	4641      	mov	r1, r8
 8008ea2:	4630      	mov	r0, r6
 8008ea4:	f009 fbe4 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8008ea8:	462a      	mov	r2, r5
 8008eaa:	4638      	mov	r0, r7
 8008eac:	4629      	mov	r1, r5
 8008eae:	f7fa fb1d 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8008eb2:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008eb6:	4638      	mov	r0, r7
 8008eb8:	a90a      	add	r1, sp, #40	; 0x28
 8008eba:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008ebe:	f00c ffb0 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008ec2:	4639      	mov	r1, r7
 8008ec4:	4630      	mov	r0, r6
 8008ec6:	f009 fbd3 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_return.setXY(33, 256);
 8008eca:	4658      	mov	r0, fp
 8008ecc:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008ed0:	2121      	movs	r1, #33	; 0x21
 8008ed2:	f7fa fb0b 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8008ed6:	2303      	movs	r3, #3
    buttonWithLabel_return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008ed8:	aa0a      	add	r2, sp, #40	; 0x28
 8008eda:	a909      	add	r1, sp, #36	; 0x24
 8008edc:	4658      	mov	r0, fp
 8008ede:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008ee2:	2302      	movs	r3, #2
 8008ee4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008ee8:	f00c fda5 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008eec:	2356      	movs	r3, #86	; 0x56
        updateTextPosition();
 8008eee:	4658      	mov	r0, fp
 8008ef0:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8008ef4:	f7fa fb3e 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_return.setAction(buttonCallback);
 8008ef8:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 8008efc:	f04f 38ff 	mov.w	r8, #4294967295
 8008f00:	3308      	adds	r3, #8
 8008f02:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8008f06:	4659      	mov	r1, fp
 8008f08:	4630      	mov	r0, r6
        colorPressed = col;
 8008f0a:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 8008f0e:	af04      	add	r7, sp, #16
 8008f10:	f009 fbae 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8008f14:	22c2      	movs	r2, #194	; 0xc2
 8008f16:	ee1a 0a90 	vmov	r0, s21
 8008f1a:	4629      	mov	r1, r5
 8008f1c:	f7fa fae6 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8008f20:	ee1a 1a90 	vmov	r1, s21
 8008f24:	4638      	mov	r0, r7
        color = newColor;
 8008f26:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 8008f2a:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8008f2e:	f00b ff2d 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008f32:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008f36:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8008f3a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008f3e:	4b48      	ldr	r3, [pc, #288]	; (8009060 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 8008f40:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 8008f42:	ee1a 0a90 	vmov	r0, s21
 8008f46:	2338      	movs	r3, #56	; 0x38
 8008f48:	a90a      	add	r1, sp, #40	; 0x28
 8008f4a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008f4e:	f00c f9b7 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008f52:	ee1a 1a90 	vmov	r1, s21
 8008f56:	4630      	mov	r0, r6
 8008f58:	f009 fb8a 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 8008f5c:	22c2      	movs	r2, #194	; 0xc2
 8008f5e:	4648      	mov	r0, r9
 8008f60:	21d9      	movs	r1, #217	; 0xd9
 8008f62:	f7fa fac3 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8008f66:	4649      	mov	r1, r9
 8008f68:	4638      	mov	r0, r7
        color = newColor;
 8008f6a:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 8008f6e:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8008f72:	f00b ff0b 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008f76:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008f7a:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8008f7e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008f82:	4b37      	ldr	r3, [pc, #220]	; (8009060 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 8008f84:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8008f86:	4648      	mov	r0, r9
 8008f88:	2339      	movs	r3, #57	; 0x39
 8008f8a:	a90a      	add	r1, sp, #40	; 0x28
 8008f8c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008f90:	f00c f996 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008f94:	4649      	mov	r1, r9
 8008f96:	4630      	mov	r0, r6
 8008f98:	f009 fb6a 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 8008f9c:	2255      	movs	r2, #85	; 0x55
 8008f9e:	ee1b 0a10 	vmov	r0, s22
 8008fa2:	2171      	movs	r1, #113	; 0x71
 8008fa4:	f7fa faa2 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8008fa8:	ee1b 1a10 	vmov	r1, s22
 8008fac:	4638      	mov	r0, r7
        color = newColor;
 8008fae:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8008fb2:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8008fb6:	f00b fee9 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008fba:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008fbe:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8008fc2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008fc6:	4b26      	ldr	r3, [pc, #152]	; (8009060 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 8008fc8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8008fca:	ee1b 0a10 	vmov	r0, s22
 8008fce:	2337      	movs	r3, #55	; 0x37
 8008fd0:	a90a      	add	r1, sp, #40	; 0x28
 8008fd2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008fd6:	f00c f973 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008fda:	ee1b 1a10 	vmov	r1, s22
 8008fde:	4630      	mov	r0, r6
 8008fe0:	f009 fb46 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 239, 240, 15);
 8008fe4:	230f      	movs	r3, #15
 8008fe6:	22ef      	movs	r2, #239	; 0xef
 8008fe8:	ee1b 0a90 	vmov	r0, s23
 8008fec:	9300      	str	r3, [sp, #0]
 8008fee:	4629      	mov	r1, r5
 8008ff0:	23f0      	movs	r3, #240	; 0xf0
 8008ff2:	f7fa fa88 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008ff6:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 8008ffa:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8008ffe:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009002:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8009006:	ee1b 1a90 	vmov	r1, s23
 800900a:	4638      	mov	r0, r7
 800900c:	4798      	blx	r3
 800900e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009012:	f8df b064 	ldr.w	fp, [pc, #100]	; 8009078 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x384>
 8009016:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 800901a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800901e:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LFLK).getText());
 8009022:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 8009026:	b92b      	cbnz	r3, 8009034 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x340>
 8009028:	4b0e      	ldr	r3, [pc, #56]	; (8009064 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x370>)
 800902a:	4a0f      	ldr	r2, [pc, #60]	; (8009068 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x374>)
 800902c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800902e:	480f      	ldr	r0, [pc, #60]	; (800906c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x378>)
 8009030:	f024 fbc6 	bl	802d7c0 <__assert_func>
 8009034:	4b0e      	ldr	r3, [pc, #56]	; (8009070 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x37c>)
 8009036:	881b      	ldrh	r3, [r3, #0]
 8009038:	2b1b      	cmp	r3, #27
 800903a:	d81f      	bhi.n	800907c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x388>
 800903c:	4b0d      	ldr	r3, [pc, #52]	; (8009074 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x380>)
 800903e:	4a0a      	ldr	r2, [pc, #40]	; (8009068 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x374>)
 8009040:	2161      	movs	r1, #97	; 0x61
 8009042:	e7f4      	b.n	800902e <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x33a>
 8009044:	08030ae4 	.word	0x08030ae4
 8009048:	080318d0 	.word	0x080318d0
 800904c:	08031b1c 	.word	0x08031b1c
 8009050:	0802f41c 	.word	0x0802f41c
 8009054:	08031604 	.word	0x08031604
 8009058:	08030acc 	.word	0x08030acc
 800905c:	08008cdf 	.word	0x08008cdf
 8009060:	0802f37c 	.word	0x0802f37c
 8009064:	0802f1cc 	.word	0x0802f1cc
 8009068:	0802f2d1 	.word	0x0802f2d1
 800906c:	0802f249 	.word	0x0802f249
 8009070:	200138b0 	.word	0x200138b0
 8009074:	0802f290 	.word	0x0802f290
 8009078:	200138ac 	.word	0x200138ac
        return texts->getText(typedTextId);
 800907c:	4bdd      	ldr	r3, [pc, #884]	; (80093f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 800907e:	211b      	movs	r1, #27
 8009080:	6818      	ldr	r0, [r3, #0]
 8009082:	f001 fa41 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8009086:	4adc      	ldr	r2, [pc, #880]	; (80093f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 8009088:	4603      	mov	r3, r0
 800908a:	210a      	movs	r1, #10
 800908c:	4648      	mov	r0, r9
 800908e:	f012 fd75 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009092:	f04f 011c 	mov.w	r1, #28
 8009096:	4ad9      	ldr	r2, [pc, #868]	; (80093fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
        wc1 = value;
 8009098:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G8ED));
 800909c:	ee1b 0a90 	vmov	r0, s23
 80090a0:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80090a4:	a90a      	add	r1, sp, #40	; 0x28
 80090a6:	920a      	str	r2, [sp, #40]	; 0x28
 80090a8:	f00c f90a 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80090ac:	ee1b 1a90 	vmov	r1, s23
 80090b0:	4630      	mov	r0, r6
 80090b2:	f009 fadd 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 224, 240, 15);
 80090b6:	210f      	movs	r1, #15
 80090b8:	22e0      	movs	r2, #224	; 0xe0
 80090ba:	ee1c 0a10 	vmov	r0, s24
 80090be:	9100      	str	r1, [sp, #0]
 80090c0:	23f0      	movs	r3, #240	; 0xf0
 80090c2:	4629      	mov	r1, r5
 80090c4:	f7fa fa1f 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 80090c8:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 80090cc:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 80090d0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80090d4:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 80090d8:	ee1c 1a10 	vmov	r1, s24
 80090dc:	4638      	mov	r0, r7
 80090de:	4798      	blx	r3
 80090e0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80090e4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80090e8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80090ec:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 80090f0:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 80090f4:	2b00      	cmp	r3, #0
 80090f6:	d097      	beq.n	8009028 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x334>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80090f8:	49c1      	ldr	r1, [pc, #772]	; (8009400 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x70c>)
 80090fa:	880b      	ldrh	r3, [r1, #0]
 80090fc:	2b32      	cmp	r3, #50	; 0x32
 80090fe:	d99d      	bls.n	800903c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x348>
        return texts->getText(typedTextId);
 8009100:	4bbc      	ldr	r3, [pc, #752]	; (80093f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 8009102:	2132      	movs	r1, #50	; 0x32
 8009104:	6818      	ldr	r0, [r3, #0]
 8009106:	f001 f9ff 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 800910a:	4abb      	ldr	r2, [pc, #748]	; (80093f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 800910c:	4603      	mov	r3, r0
 800910e:	210a      	movs	r1, #10
 8009110:	4648      	mov	r0, r9
 8009112:	f012 fd33 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8009116:	a80a      	add	r0, sp, #40	; 0x28
        : typedTextId(id)
 8009118:	4ab8      	ldr	r2, [pc, #736]	; (80093fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 800911a:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 800911e:	4601      	mov	r1, r0
 8009120:	f04f 0935 	mov.w	r9, #53	; 0x35
 8009124:	ee1c 0a10 	vmov	r0, s24
 8009128:	920a      	str	r2, [sp, #40]	; 0x28
 800912a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 800912e:	f00c f8c7 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009132:	ee1c 1a10 	vmov	r1, s24
 8009136:	4630      	mov	r0, r6
 8009138:	f009 fa9a 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 209, 240, 15);
 800913c:	200f      	movs	r0, #15
 800913e:	22d1      	movs	r2, #209	; 0xd1
 8009140:	9000      	str	r0, [sp, #0]
 8009142:	23f0      	movs	r3, #240	; 0xf0
 8009144:	ee1c 0a90 	vmov	r0, s25
 8009148:	4629      	mov	r1, r5
 800914a:	f7fa f9dc 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 800914e:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8009152:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8009156:	4638      	mov	r0, r7
 8009158:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800915c:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8009160:	ee1c 1a90 	vmov	r1, s25
 8009164:	4798      	blx	r3
 8009166:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800916a:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 800916e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009172:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 8009176:	f204 6744 	addw	r7, r4, #1604	; 0x644
 800917a:	2b00      	cmp	r3, #0
 800917c:	f43f af54 	beq.w	8009028 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x334>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009180:	499f      	ldr	r1, [pc, #636]	; (8009400 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x70c>)
 8009182:	880b      	ldrh	r3, [r1, #0]
 8009184:	2b33      	cmp	r3, #51	; 0x33
 8009186:	f67f af59 	bls.w	800903c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x348>
        return texts->getText(typedTextId);
 800918a:	4b9a      	ldr	r3, [pc, #616]	; (80093f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 800918c:	2133      	movs	r1, #51	; 0x33
 800918e:	6818      	ldr	r0, [r3, #0]
 8009190:	f001 f9ba 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8009194:	4a98      	ldr	r2, [pc, #608]	; (80093f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 8009196:	4603      	mov	r3, r0
 8009198:	210a      	movs	r1, #10
 800919a:	4638      	mov	r0, r7
 800919c:	f012 fcee 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80091a0:	4a96      	ldr	r2, [pc, #600]	; (80093fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 80091a2:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 80091a6:	2336      	movs	r3, #54	; 0x36
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 80091a8:	ee1c 0a90 	vmov	r0, s25
 80091ac:	a90a      	add	r1, sp, #40	; 0x28
 80091ae:	920a      	str	r2, [sp, #40]	; 0x28
 80091b0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80091b4:	f00c f884 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80091b8:	ee1c 1a90 	vmov	r1, s25
 80091bc:	4630      	mov	r0, r6
 80091be:	f009 fa57 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80091c2:	2304      	movs	r3, #4
    SMD1_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80091c4:	a90a      	add	r1, sp, #40	; 0x28
 80091c6:	4650      	mov	r0, sl
 80091c8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80091cc:	f009 f9e2 	bl	8012594 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_Gauge.setPosition(28, 103, 184, 106);
 80091d0:	236a      	movs	r3, #106	; 0x6a
 80091d2:	9300      	str	r3, [sp, #0]
 80091d4:	2267      	movs	r2, #103	; 0x67
 80091d6:	23b8      	movs	r3, #184	; 0xb8
 80091d8:	211c      	movs	r1, #28
 80091da:	4650      	mov	r0, sl
 80091dc:	f7fa f993 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_Gauge.setCenter(92, 92);
 80091e0:	225c      	movs	r2, #92	; 0x5c
 80091e2:	4611      	mov	r1, r2
 80091e4:	4650      	mov	r0, sl
 80091e6:	f00c fb8a 	bl	80158fe <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_Gauge.setStartEndAngle(-90, 90);
 80091ea:	225a      	movs	r2, #90	; 0x5a
 80091ec:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80091f0:	4650      	mov	r0, sl
 80091f2:	f00c fc09 	bl	8015a08 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_Gauge.setRange(-90, 90);
 80091f6:	462b      	mov	r3, r5
 80091f8:	225a      	movs	r2, #90	; 0x5a
 80091fa:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80091fe:	4650      	mov	r0, sl
 8009200:	9500      	str	r5, [sp, #0]
 8009202:	f009 f874 	bl	80122ee <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_Gauge.setValue(0);
 8009206:	4629      	mov	r1, r5
 8009208:	4650      	mov	r0, sl
 800920a:	f00c fba7 	bl	801595c <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 800920e:	464b      	mov	r3, r9
 8009210:	2208      	movs	r2, #8
 8009212:	2105      	movs	r1, #5
 8009214:	4650      	mov	r0, sl
 8009216:	f00c fb5d 	bl	80158d4 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800921a:	2101      	movs	r1, #1
 800921c:	4650      	mov	r0, sl
 800921e:	f00c fafb 	bl	8015818 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8009222:	2101      	movs	r1, #1
 8009224:	4650      	mov	r0, sl
 8009226:	f00c fafa 	bl	801581e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 800922a:	4651      	mov	r1, sl
 800922c:	4630      	mov	r0, r6
 800922e:	f009 fa1f 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8009232:	230a      	movs	r3, #10
 8009234:	ee18 0a10 	vmov	r0, s16
 8009238:	9300      	str	r3, [sp, #0]
 800923a:	224b      	movs	r2, #75	; 0x4b
 800923c:	23f0      	movs	r3, #240	; 0xf0
 800923e:	4629      	mov	r1, r5
 8009240:	f7fa f961 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009244:	9b02      	ldr	r3, [sp, #8]
 8009246:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800924a:	22a0      	movs	r2, #160	; 0xa0
 800924c:	4611      	mov	r1, r2
 800924e:	ee18 0a10 	vmov	r0, s16
 8009252:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8009256:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 800925a:	f00b fbeb 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800925e:	ee18 0a10 	vmov	r0, s16
 8009262:	22a0      	movs	r2, #160	; 0xa0
 8009264:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009268:	f00b fbef 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800926c:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8009270:	2b20      	cmp	r3, #32
 8009272:	d006      	beq.n	8009282 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x58e>
        lineWidthQ5 = widthQ5;
 8009274:	2320      	movs	r3, #32
        updateCachedShape();
 8009276:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 800927a:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 800927e:	f00b fae3 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009282:	ee18 0a10 	vmov	r0, s16
 8009286:	2101      	movs	r1, #1
 8009288:	f00b fbea 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800928c:	ee18 1a10 	vmov	r1, s16
 8009290:	4630      	mov	r0, r6
 8009292:	f009 f9ed 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009296:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(31, 60);
 800929a:	223c      	movs	r2, #60	; 0x3c
 800929c:	ee19 0a10 	vmov	r0, s18
 80092a0:	211f      	movs	r1, #31
        linespace = space;
 80092a2:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 80092a6:	ad04      	add	r5, sp, #16
 80092a8:	f7fa f920 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 80092ac:	ee19 1a10 	vmov	r1, s18
 80092b0:	4628      	mov	r0, r5
        color = newColor;
 80092b2:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 80092b6:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 80092ba:	f00b fd67 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80092be:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80092c2:	ee19 3a10 	vmov	r3, s18
 80092c6:	333c      	adds	r3, #60	; 0x3c
 80092c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80092cc:	4f4b      	ldr	r7, [pc, #300]	; (80093fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 80092ce:	970a      	str	r7, [sp, #40]	; 0x28
 80092d0:	2351      	movs	r3, #81	; 0x51
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 80092d2:	ee19 0a10 	vmov	r0, s18
 80092d6:	a90a      	add	r1, sp, #40	; 0x28
 80092d8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80092dc:	f00b fff0 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80092e0:	ee19 1a10 	vmov	r1, s18
 80092e4:	4630      	mov	r0, r6
 80092e6:	f009 f9c3 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80092ea:	230a      	movs	r3, #10
 80092ec:	ee18 0a90 	vmov	r0, s17
 80092f0:	9300      	str	r3, [sp, #0]
 80092f2:	2232      	movs	r2, #50	; 0x32
 80092f4:	23f0      	movs	r3, #240	; 0xf0
 80092f6:	4649      	mov	r1, r9
 80092f8:	f7fa f905 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 80092fc:	9b03      	ldr	r3, [sp, #12]
 80092fe:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009302:	22a0      	movs	r2, #160	; 0xa0
 8009304:	4611      	mov	r1, r2
 8009306:	ee18 0a90 	vmov	r0, s17
 800930a:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 800930e:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8009312:	f00b fb8f 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009316:	ee18 0a90 	vmov	r0, s17
 800931a:	22a0      	movs	r2, #160	; 0xa0
 800931c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009320:	f00b fb93 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009324:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 8009328:	2b20      	cmp	r3, #32
 800932a:	d006      	beq.n	800933a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x646>
        lineWidthQ5 = widthQ5;
 800932c:	2320      	movs	r3, #32
        updateCachedShape();
 800932e:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8009332:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 8009336:	f00b fa87 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800933a:	ee18 0a90 	vmov	r0, s17
 800933e:	2101      	movs	r1, #1
 8009340:	f00b fb8e 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009344:	ee18 1a90 	vmov	r1, s17
 8009348:	4630      	mov	r0, r6
 800934a:	f009 f991 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800934e:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8009352:	ee19 0a90 	vmov	r0, s19
 8009356:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8009358:	f04f 0800 	mov.w	r8, #0
 800935c:	2145      	movs	r1, #69	; 0x45
 800935e:	f7fa f8c5 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8009362:	ee19 1a90 	vmov	r1, s19
 8009366:	4628      	mov	r0, r5
        color = newColor;
 8009368:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 800936c:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8009370:	f00b fd0c 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009374:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009378:	ee19 3a90 	vmov	r3, s19
 800937c:	333c      	adds	r3, #60	; 0x3c
 800937e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009382:	2358      	movs	r3, #88	; 0x58
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8009384:	ee19 0a90 	vmov	r0, s19
 8009388:	a90a      	add	r1, sp, #40	; 0x28
 800938a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800938e:	970a      	str	r7, [sp, #40]	; 0x28
 8009390:	f00b ff96 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009394:	ee19 1a90 	vmov	r1, s19
 8009398:	4630      	mov	r0, r6
 800939a:	f009 f969 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_titel.setXY(54, 12);
 800939e:	ee1a 0a10 	vmov	r0, s20
 80093a2:	220c      	movs	r2, #12
 80093a4:	2136      	movs	r1, #54	; 0x36
 80093a6:	f7fa f8a1 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 80093aa:	ee1a 1a10 	vmov	r1, s20
 80093ae:	4628      	mov	r0, r5
        color = newColor;
 80093b0:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 80093b4:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 80093b8:	f00b fce8 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80093bc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80093c0:	ee1a 3a10 	vmov	r3, s20
 80093c4:	333c      	adds	r3, #60	; 0x3c
 80093c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80093ca:	2357      	movs	r3, #87	; 0x57
    textArea_titel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 80093cc:	ee1a 0a10 	vmov	r0, s20
 80093d0:	a90a      	add	r1, sp, #40	; 0x28
 80093d2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80093d6:	970a      	str	r7, [sp, #40]	; 0x28
 80093d8:	f00b ff72 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80093dc:	4630      	mov	r0, r6
 80093de:	ee1a 1a10 	vmov	r1, s20
 80093e2:	f009 f945 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80093e6:	4620      	mov	r0, r4
 80093e8:	b00d      	add	sp, #52	; 0x34
 80093ea:	ecbd 8b0a 	vpop	{d8-d12}
 80093ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80093f2:	bf00      	nop
 80093f4:	200138b8 	.word	0x200138b8
 80093f8:	0802f309 	.word	0x0802f309
 80093fc:	0802f37c 	.word	0x0802f37c
 8009400:	200138b0 	.word	0x200138b0

08009404 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8009404:	4770      	bx	lr

08009406 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009406:	4770      	bx	lr

08009408 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8009408:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800940a:	68c2      	ldr	r2, [r0, #12]
 800940c:	6844      	ldr	r4, [r0, #4]
 800940e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8009410:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8009412:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009416:	07d2      	lsls	r2, r2, #31
 8009418:	bf48      	it	mi
 800941a:	5962      	ldrmi	r2, [r4, r5]
 800941c:	689b      	ldr	r3, [r3, #8]
    }
 800941e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009420:	bf48      	it	mi
 8009422:	58d3      	ldrmi	r3, [r2, r3]
 8009424:	4718      	bx	r3

08009426 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8009426:	6843      	ldr	r3, [r0, #4]
 8009428:	b12b      	cbz	r3, 8009436 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800942a:	6883      	ldr	r3, [r0, #8]
 800942c:	b92b      	cbnz	r3, 800943a <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800942e:	68c0      	ldr	r0, [r0, #12]
 8009430:	f000 0001 	and.w	r0, r0, #1
 8009434:	4770      	bx	lr
 8009436:	4618      	mov	r0, r3
 8009438:	4770      	bx	lr
 800943a:	2001      	movs	r0, #1
    }
 800943c:	4770      	bx	lr

0800943e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800943e:	b510      	push	{r4, lr}
 8009440:	2110      	movs	r1, #16
 8009442:	4604      	mov	r4, r0
 8009444:	f023 fad5 	bl	802c9f2 <_ZdlPvj>
 8009448:	4620      	mov	r0, r4
 800944a:	bd10      	pop	{r4, pc}

0800944c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 800944c:	b510      	push	{r4, lr}
 800944e:	4b03      	ldr	r3, [pc, #12]	; (800945c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 8009450:	6003      	str	r3, [r0, #0]
 8009452:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009454:	f00d fce2 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009458:	4620      	mov	r0, r4
 800945a:	bd10      	pop	{r4, pc}
 800945c:	08030b34 	.word	0x08030b34

08009460 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8009460:	b507      	push	{r0, r1, r2, lr}
 8009462:	4b07      	ldr	r3, [pc, #28]	; (8009480 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 8009464:	6003      	str	r3, [r0, #0]
 8009466:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009468:	f00d fcd8 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800946c:	9801      	ldr	r0, [sp, #4]
 800946e:	f241 4178 	movw	r1, #5240	; 0x1478
 8009472:	f023 fabe 	bl	802c9f2 <_ZdlPvj>
 8009476:	9801      	ldr	r0, [sp, #4]
 8009478:	b003      	add	sp, #12
 800947a:	f85d fb04 	ldr.w	pc, [sp], #4
 800947e:	bf00      	nop
 8009480:	08030b34 	.word	0x08030b34

08009484 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_return)
 8009484:	3098      	adds	r0, #152	; 0x98
 8009486:	4288      	cmp	r0, r1
{
 8009488:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_return)
 800948a:	d105      	bne.n	8009498 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800948c:	f00f f9c8 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_return clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8009490:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8009494:	f7fb bfdc 	b.w	8005450 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8009498:	bd08      	pop	{r3, pc}
	...

0800949c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 800949c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80094a0:	ed2d 8b0a 	vpush	{d8-d12}
 80094a4:	4604      	mov	r4, r0
 80094a6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 80094a8:	46a0      	mov	r8, r4
 80094aa:	2500      	movs	r5, #0
 80094ac:	f010 fe38 	bl	801a120 <_ZN8touchgfx6ScreenC1Ev>
 80094b0:	4bcd      	ldr	r3, [pc, #820]	; (80097e8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x34c>)
 80094b2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80094b4:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 80094b8:	2226      	movs	r2, #38	; 0x26
 80094ba:	4629      	mov	r1, r5
 80094bc:	4640      	mov	r0, r8
 80094be:	f024 fb84 	bl	802dbca <memset>
 80094c2:	4640      	mov	r0, r8
 80094c4:	f7fa f844 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 80094c8:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 80094cc:	26ff      	movs	r6, #255	; 0xff
 80094ce:	4bc7      	ldr	r3, [pc, #796]	; (80097ec <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x350>)
 80094d0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80094d2:	2226      	movs	r2, #38	; 0x26
 80094d4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80094d8:	4629      	mov	r1, r5
 80094da:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80094de:	4638      	mov	r0, r7
 80094e0:	66a5      	str	r5, [r4, #104]	; 0x68
 80094e2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80094e6:	f024 fb70 	bl	802dbca <memset>
 80094ea:	4638      	mov	r0, r7
 80094ec:	f7fa f830 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 80094f0:	4bbf      	ldr	r3, [pc, #764]	; (80097f0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x354>)
 80094f2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80094f4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80094f8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80094fc:	a90a      	add	r1, sp, #40	; 0x28
 80094fe:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8009502:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8009504:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8009508:	f00c fc8b 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800950c:	4658      	mov	r0, fp
 800950e:	f00c fdbf 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8009512:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8009516:	f504 7994 	add.w	r9, r4, #296	; 0x128
 800951a:	4618      	mov	r0, r3
 800951c:	ee0a 3a90 	vmov	s21, r3
 8009520:	f7fa f87a 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8009524:	4648      	mov	r0, r9
 8009526:	f7fa f877 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 800952a:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 800952e:	4618      	mov	r0, r3
 8009530:	ee0b 3a10 	vmov	s22, r3
 8009534:	f7fa f870 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8009538:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 800953c:	4618      	mov	r0, r3
 800953e:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8009542:	4eac      	ldr	r6, [pc, #688]	; (80097f4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x358>)
        : TextArea()
 8009544:	f7fa f868 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8009548:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 800954c:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8009550:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8009552:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 8009556:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 800955a:	f7fa f85d 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 800955e:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8009562:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8009564:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8009568:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 800956c:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8009570:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 8009574:	f7fa f850 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8009578:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 800957c:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8009580:	4650      	mov	r0, sl
 8009582:	f00c f911 	bl	80157a8 <_ZN8touchgfx5GaugeC1Ev>
 8009586:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 800958a:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800958c:	4e9a      	ldr	r6, [pc, #616]	; (80097f8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x35c>)
 800958e:	ee08 3a10 	vmov	s16, r3
 8009592:	f00b f939 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 8009596:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 800959a:	4618      	mov	r0, r3
 800959c:	9302      	str	r3, [sp, #8]
 800959e:	f7f9 fddb 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80095a2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80095a6:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 80095aa:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 80095ae:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 80095b2:	4618      	mov	r0, r3
 80095b4:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 80095b8:	ee09 3a10 	vmov	s18, r3
 80095bc:	f7fa f82c 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 80095c0:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 80095c4:	4618      	mov	r0, r3
 80095c6:	ee08 3a90 	vmov	s17, r3
 80095ca:	f00b f91d 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 80095ce:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 80095d2:	4618      	mov	r0, r3
 80095d4:	9303      	str	r3, [sp, #12]
 80095d6:	f7f9 fdbf 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80095da:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80095de:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 80095e2:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 80095e6:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 80095ea:	4618      	mov	r0, r3
 80095ec:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 80095f0:	ee09 3a90 	vmov	s19, r3
 80095f4:	f7fa f810 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 80095f8:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 80095fc:	4618      	mov	r0, r3
 80095fe:	ee0a 3a10 	vmov	s20, r3
 8009602:	f7fa f809 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8009606:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800960a:	4a7c      	ldr	r2, [pc, #496]	; (80097fc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x360>)
 800960c:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8009610:	4a7b      	ldr	r2, [pc, #492]	; (8009800 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x364>)
 8009612:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 8009616:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 800961a:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800961e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8009622:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 8009626:	f00d fbef 	bl	8016e08 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800962a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800962e:	462a      	mov	r2, r5
 8009630:	4640      	mov	r0, r8
 8009632:	9300      	str	r3, [sp, #0]
 8009634:	4629      	mov	r1, r5
 8009636:	23f0      	movs	r3, #240	; 0xf0
 8009638:	f7f9 ff65 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 800963c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800963e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8009642:	66a3      	str	r3, [r4, #104]	; 0x68
 8009644:	4641      	mov	r1, r8
 8009646:	4630      	mov	r0, r6
 8009648:	f009 f812 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 800964c:	462a      	mov	r2, r5
 800964e:	4638      	mov	r0, r7
 8009650:	4629      	mov	r1, r5
 8009652:	f7f9 ff4b 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8009656:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800965a:	4638      	mov	r0, r7
 800965c:	a90a      	add	r1, sp, #40	; 0x28
 800965e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009662:	f00c fbde 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009666:	4639      	mov	r1, r7
 8009668:	4630      	mov	r0, r6
 800966a:	f009 f801 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_return.setXY(33, 256);
 800966e:	4658      	mov	r0, fp
 8009670:	f44f 7280 	mov.w	r2, #256	; 0x100
 8009674:	2121      	movs	r1, #33	; 0x21
 8009676:	f7f9 ff39 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 800967a:	2303      	movs	r3, #3
    buttonWithLabel_return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800967c:	aa0a      	add	r2, sp, #40	; 0x28
 800967e:	a909      	add	r1, sp, #36	; 0x24
 8009680:	4658      	mov	r0, fp
 8009682:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009686:	2302      	movs	r3, #2
 8009688:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800968c:	f00c f9d3 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8009690:	2359      	movs	r3, #89	; 0x59
        updateTextPosition();
 8009692:	4658      	mov	r0, fp
 8009694:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8009698:	f7f9 ff6c 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_return.setAction(buttonCallback);
 800969c:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 80096a0:	f04f 38ff 	mov.w	r8, #4294967295
 80096a4:	3308      	adds	r3, #8
 80096a6:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80096aa:	4659      	mov	r1, fp
 80096ac:	4630      	mov	r0, r6
        colorPressed = col;
 80096ae:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 80096b2:	af04      	add	r7, sp, #16
 80096b4:	f008 ffdc 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 80096b8:	22c2      	movs	r2, #194	; 0xc2
 80096ba:	ee1a 0a90 	vmov	r0, s21
 80096be:	4629      	mov	r1, r5
 80096c0:	f7f9 ff14 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 80096c4:	ee1a 1a90 	vmov	r1, s21
 80096c8:	4638      	mov	r0, r7
        color = newColor;
 80096ca:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 80096ce:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80096d2:	f00b fb5b 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80096d6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80096da:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80096de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80096e2:	4b48      	ldr	r3, [pc, #288]	; (8009804 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 80096e4:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C7CD));
 80096e6:	ee1a 0a90 	vmov	r0, s21
 80096ea:	2313      	movs	r3, #19
 80096ec:	a90a      	add	r1, sp, #40	; 0x28
 80096ee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80096f2:	f00b fde5 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80096f6:	ee1a 1a90 	vmov	r1, s21
 80096fa:	4630      	mov	r0, r6
 80096fc:	f008 ffb8 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 8009700:	22c2      	movs	r2, #194	; 0xc2
 8009702:	4648      	mov	r0, r9
 8009704:	21d9      	movs	r1, #217	; 0xd9
 8009706:	f7f9 fef1 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 800970a:	4649      	mov	r1, r9
 800970c:	4638      	mov	r0, r7
        color = newColor;
 800970e:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 8009712:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8009716:	f00b fb39 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800971a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800971e:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8009722:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009726:	4b37      	ldr	r3, [pc, #220]	; (8009804 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 8009728:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_85IX));
 800972a:	4648      	mov	r0, r9
 800972c:	2312      	movs	r3, #18
 800972e:	a90a      	add	r1, sp, #40	; 0x28
 8009730:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009734:	f00b fdc4 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009738:	4649      	mov	r1, r9
 800973a:	4630      	mov	r0, r6
 800973c:	f008 ff98 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 8009740:	2255      	movs	r2, #85	; 0x55
 8009742:	ee1b 0a10 	vmov	r0, s22
 8009746:	2171      	movs	r1, #113	; 0x71
 8009748:	f7f9 fed0 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 800974c:	ee1b 1a10 	vmov	r1, s22
 8009750:	4638      	mov	r0, r7
        color = newColor;
 8009752:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8009756:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 800975a:	f00b fb17 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800975e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009762:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8009766:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800976a:	4b26      	ldr	r3, [pc, #152]	; (8009804 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 800976c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XVJO));
 800976e:	ee1b 0a10 	vmov	r0, s22
 8009772:	2314      	movs	r3, #20
 8009774:	a90a      	add	r1, sp, #40	; 0x28
 8009776:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800977a:	f00b fda1 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800977e:	ee1b 1a10 	vmov	r1, s22
 8009782:	4630      	mov	r0, r6
 8009784:	f008 ff74 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Current.setPosition(0, 239, 240, 15);
 8009788:	230f      	movs	r3, #15
 800978a:	22ef      	movs	r2, #239	; 0xef
 800978c:	ee1b 0a90 	vmov	r0, s23
 8009790:	9300      	str	r3, [sp, #0]
 8009792:	4629      	mov	r1, r5
 8009794:	23f0      	movs	r3, #240	; 0xf0
 8009796:	f7f9 feb6 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 800979a:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 800979e:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 80097a2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80097a6:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 80097aa:	ee1b 1a90 	vmov	r1, s23
 80097ae:	4638      	mov	r0, r7
 80097b0:	4798      	blx	r3
 80097b2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80097b6:	f8df b064 	ldr.w	fp, [pc, #100]	; 800981c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x380>
 80097ba:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 80097be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80097c2:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_CurrentBuffer, SMD3_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_HT0R).getText());
 80097c6:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 80097ca:	b92b      	cbnz	r3, 80097d8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x33c>
 80097cc:	4b0e      	ldr	r3, [pc, #56]	; (8009808 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x36c>)
 80097ce:	4a0f      	ldr	r2, [pc, #60]	; (800980c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x370>)
 80097d0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80097d2:	480f      	ldr	r0, [pc, #60]	; (8009810 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x374>)
 80097d4:	f023 fff4 	bl	802d7c0 <__assert_func>
 80097d8:	4b0e      	ldr	r3, [pc, #56]	; (8009814 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x378>)
 80097da:	881b      	ldrh	r3, [r3, #0]
 80097dc:	2b18      	cmp	r3, #24
 80097de:	d81f      	bhi.n	8009820 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x384>
 80097e0:	4b0d      	ldr	r3, [pc, #52]	; (8009818 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x37c>)
 80097e2:	4a0a      	ldr	r2, [pc, #40]	; (800980c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x370>)
 80097e4:	2161      	movs	r1, #97	; 0x61
 80097e6:	e7f4      	b.n	80097d2 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x336>
 80097e8:	08030b34 	.word	0x08030b34
 80097ec:	080318d0 	.word	0x080318d0
 80097f0:	08031b1c 	.word	0x08031b1c
 80097f4:	0802f41c 	.word	0x0802f41c
 80097f8:	08031604 	.word	0x08031604
 80097fc:	08030b1c 	.word	0x08030b1c
 8009800:	08009485 	.word	0x08009485
 8009804:	0802f37c 	.word	0x0802f37c
 8009808:	0802f1cc 	.word	0x0802f1cc
 800980c:	0802f2d1 	.word	0x0802f2d1
 8009810:	0802f249 	.word	0x0802f249
 8009814:	200138b0 	.word	0x200138b0
 8009818:	0802f290 	.word	0x0802f290
 800981c:	200138ac 	.word	0x200138ac
        return texts->getText(typedTextId);
 8009820:	4bdc      	ldr	r3, [pc, #880]	; (8009b94 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 8009822:	2118      	movs	r1, #24
 8009824:	6818      	ldr	r0, [r3, #0]
 8009826:	f000 fe6f 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 800982a:	4adb      	ldr	r2, [pc, #876]	; (8009b98 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 800982c:	4603      	mov	r3, r0
 800982e:	210a      	movs	r1, #10
 8009830:	4648      	mov	r0, r9
 8009832:	f012 f9a3 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009836:	4ad9      	ldr	r2, [pc, #868]	; (8009b9c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
        wc1 = value;
 8009838:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
 800983c:	2319      	movs	r3, #25
    SMD3_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6OVJ));
 800983e:	ee1b 0a90 	vmov	r0, s23
 8009842:	a90a      	add	r1, sp, #40	; 0x28
 8009844:	920a      	str	r2, [sp, #40]	; 0x28
 8009846:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800984a:	f00b fd39 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800984e:	ee1b 1a90 	vmov	r1, s23
 8009852:	4630      	mov	r0, r6
 8009854:	f008 ff0c 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Frequency.setPosition(0, 224, 240, 15);
 8009858:	210f      	movs	r1, #15
 800985a:	22e0      	movs	r2, #224	; 0xe0
 800985c:	ee1c 0a10 	vmov	r0, s24
 8009860:	9100      	str	r1, [sp, #0]
 8009862:	23f0      	movs	r3, #240	; 0xf0
 8009864:	4629      	mov	r1, r5
 8009866:	f7f9 fe4e 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 800986a:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 800986e:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8009872:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009876:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 800987a:	ee1c 1a10 	vmov	r1, s24
 800987e:	4638      	mov	r0, r7
 8009880:	4798      	blx	r3
 8009882:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009886:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800988a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800988e:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_FrequencyBuffer, SMD3_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YT2E).getText());
 8009892:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8009896:	2b00      	cmp	r3, #0
 8009898:	d098      	beq.n	80097cc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x330>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800989a:	49c1      	ldr	r1, [pc, #772]	; (8009ba0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x704>)
 800989c:	880b      	ldrh	r3, [r1, #0]
 800989e:	2b16      	cmp	r3, #22
 80098a0:	d99e      	bls.n	80097e0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x344>
        return texts->getText(typedTextId);
 80098a2:	4bbc      	ldr	r3, [pc, #752]	; (8009b94 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 80098a4:	2116      	movs	r1, #22
 80098a6:	6818      	ldr	r0, [r3, #0]
 80098a8:	f000 fe2e 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 80098ac:	4aba      	ldr	r2, [pc, #744]	; (8009b98 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 80098ae:	4603      	mov	r3, r0
 80098b0:	210a      	movs	r1, #10
 80098b2:	4648      	mov	r0, r9
 80098b4:	f012 f962 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD3_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W5I5));
 80098b8:	a80a      	add	r0, sp, #40	; 0x28
        : typedTextId(id)
 80098ba:	4ab8      	ldr	r2, [pc, #736]	; (8009b9c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 80098bc:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 80098c0:	2317      	movs	r3, #23
 80098c2:	4601      	mov	r1, r0
 80098c4:	ee1c 0a10 	vmov	r0, s24
 80098c8:	920a      	str	r2, [sp, #40]	; 0x28
 80098ca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80098ce:	f00b fcf7 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80098d2:	ee1c 1a10 	vmov	r1, s24
 80098d6:	4630      	mov	r0, r6
 80098d8:	f008 feca 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Distance.setPosition(0, 209, 240, 15);
 80098dc:	200f      	movs	r0, #15
 80098de:	22d1      	movs	r2, #209	; 0xd1
 80098e0:	9000      	str	r0, [sp, #0]
 80098e2:	23f0      	movs	r3, #240	; 0xf0
 80098e4:	ee1c 0a90 	vmov	r0, s25
 80098e8:	4629      	mov	r1, r5
 80098ea:	f7f9 fe0c 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 80098ee:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 80098f2:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 80098f6:	4638      	mov	r0, r7
 80098f8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80098fc:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8009900:	ee1c 1a90 	vmov	r1, s25
 8009904:	4798      	blx	r3
 8009906:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800990a:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 800990e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009912:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_DistanceBuffer, SMD3_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_EK4L).getText());
 8009916:	f204 6744 	addw	r7, r4, #1604	; 0x644
 800991a:	2b00      	cmp	r3, #0
 800991c:	f43f af56 	beq.w	80097cc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x330>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009920:	499f      	ldr	r1, [pc, #636]	; (8009ba0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x704>)
 8009922:	880b      	ldrh	r3, [r1, #0]
 8009924:	2b15      	cmp	r3, #21
 8009926:	f67f af5b 	bls.w	80097e0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x344>
        return texts->getText(typedTextId);
 800992a:	4b9a      	ldr	r3, [pc, #616]	; (8009b94 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 800992c:	2115      	movs	r1, #21
 800992e:	6818      	ldr	r0, [r3, #0]
 8009930:	f000 fdea 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8009934:	4a98      	ldr	r2, [pc, #608]	; (8009b98 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 8009936:	4603      	mov	r3, r0
 8009938:	210a      	movs	r1, #10
 800993a:	4638      	mov	r0, r7
 800993c:	f012 f91e 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009940:	4a96      	ldr	r2, [pc, #600]	; (8009b9c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009942:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8009946:	2336      	movs	r3, #54	; 0x36
    SMD3_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8009948:	ee1c 0a90 	vmov	r0, s25
 800994c:	a90a      	add	r1, sp, #40	; 0x28
 800994e:	920a      	str	r2, [sp, #40]	; 0x28
 8009950:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009954:	f00b fcb4 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009958:	ee1c 1a90 	vmov	r1, s25
 800995c:	4630      	mov	r0, r6
 800995e:	f008 fe87 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009962:	2304      	movs	r3, #4
    SMD3_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8009964:	a90a      	add	r1, sp, #40	; 0x28
 8009966:	4650      	mov	r0, sl
 8009968:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800996c:	f008 fe12 	bl	8012594 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD3_Gauge.setPosition(28, 103, 184, 106);
 8009970:	236a      	movs	r3, #106	; 0x6a
 8009972:	9300      	str	r3, [sp, #0]
 8009974:	2267      	movs	r2, #103	; 0x67
 8009976:	23b8      	movs	r3, #184	; 0xb8
 8009978:	211c      	movs	r1, #28
 800997a:	4650      	mov	r0, sl
 800997c:	f7f9 fdc3 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD3_Gauge.setCenter(92, 92);
 8009980:	225c      	movs	r2, #92	; 0x5c
 8009982:	4611      	mov	r1, r2
 8009984:	4650      	mov	r0, sl
 8009986:	f00b ffba 	bl	80158fe <_ZN8touchgfx5Gauge9setCenterEii>
    SMD3_Gauge.setStartEndAngle(-90, 90);
 800998a:	225a      	movs	r2, #90	; 0x5a
 800998c:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009990:	4650      	mov	r0, sl
 8009992:	f00c f839 	bl	8015a08 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD3_Gauge.setRange(-90, 90);
 8009996:	462b      	mov	r3, r5
 8009998:	225a      	movs	r2, #90	; 0x5a
 800999a:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800999e:	4650      	mov	r0, sl
 80099a0:	9500      	str	r5, [sp, #0]
 80099a2:	f008 fca4 	bl	80122ee <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD3_Gauge.setValue(0);
 80099a6:	4629      	mov	r1, r5
 80099a8:	4650      	mov	r0, sl
 80099aa:	f00b ffd7 	bl	801595c <_ZN8touchgfx5Gauge8setValueEi>
    SMD3_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80099ae:	2335      	movs	r3, #53	; 0x35
 80099b0:	2208      	movs	r2, #8
 80099b2:	2105      	movs	r1, #5
 80099b4:	4650      	mov	r0, sl
 80099b6:	f00b ff8d 	bl	80158d4 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD3_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80099ba:	2101      	movs	r1, #1
 80099bc:	4650      	mov	r0, sl
 80099be:	f00b ff2b 	bl	8015818 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD3_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80099c2:	2101      	movs	r1, #1
 80099c4:	4650      	mov	r0, sl
 80099c6:	f00b ff2a 	bl	801581e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 80099ca:	4651      	mov	r1, sl
 80099cc:	4630      	mov	r0, r6
 80099ce:	f008 fe4f 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 80099d2:	230a      	movs	r3, #10
 80099d4:	ee18 0a10 	vmov	r0, s16
 80099d8:	9300      	str	r3, [sp, #0]
 80099da:	224b      	movs	r2, #75	; 0x4b
 80099dc:	23f0      	movs	r3, #240	; 0xf0
 80099de:	4629      	mov	r1, r5
 80099e0:	f7f9 fd91 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 80099e4:	9b02      	ldr	r3, [sp, #8]
 80099e6:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80099ea:	22a0      	movs	r2, #160	; 0xa0
 80099ec:	4611      	mov	r1, r2
 80099ee:	ee18 0a10 	vmov	r0, s16
 80099f2:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80099f6:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 80099fa:	f00b f81b 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80099fe:	ee18 0a10 	vmov	r0, s16
 8009a02:	22a0      	movs	r2, #160	; 0xa0
 8009a04:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009a08:	f00b f81f 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009a0c:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8009a10:	2b20      	cmp	r3, #32
 8009a12:	d006      	beq.n	8009a22 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x586>
        lineWidthQ5 = widthQ5;
 8009a14:	2320      	movs	r3, #32
        updateCachedShape();
 8009a16:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8009a1a:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8009a1e:	f00a ff13 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009a22:	ee18 0a10 	vmov	r0, s16
 8009a26:	2101      	movs	r1, #1
 8009a28:	f00b f81a 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009a2c:	ee18 1a10 	vmov	r1, s16
 8009a30:	4630      	mov	r0, r6
 8009a32:	f008 fe1d 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009a36:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(31, 60);
 8009a3a:	223c      	movs	r2, #60	; 0x3c
 8009a3c:	ee19 0a10 	vmov	r0, s18
 8009a40:	211f      	movs	r1, #31
        linespace = space;
 8009a42:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8009a46:	ad04      	add	r5, sp, #16
 8009a48:	f7f9 fd50 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8009a4c:	ee19 1a10 	vmov	r1, s18
 8009a50:	4628      	mov	r0, r5
        color = newColor;
 8009a52:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8009a56:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8009a5a:	f00b f997 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009a5e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009a62:	ee19 3a10 	vmov	r3, s18
 8009a66:	333c      	adds	r3, #60	; 0x3c
 8009a68:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009a6c:	4f4b      	ldr	r7, [pc, #300]	; (8009b9c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009a6e:	970a      	str	r7, [sp, #40]	; 0x28
 8009a70:	2350      	movs	r3, #80	; 0x50
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8009a72:	ee19 0a10 	vmov	r0, s18
 8009a76:	a90a      	add	r1, sp, #40	; 0x28
 8009a78:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009a7c:	f00b fc20 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009a80:	ee19 1a10 	vmov	r1, s18
 8009a84:	4630      	mov	r0, r6
 8009a86:	f008 fdf3 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8009a8a:	230a      	movs	r3, #10
 8009a8c:	ee18 0a90 	vmov	r0, s17
 8009a90:	9300      	str	r3, [sp, #0]
 8009a92:	2232      	movs	r2, #50	; 0x32
 8009a94:	23f0      	movs	r3, #240	; 0xf0
 8009a96:	4649      	mov	r1, r9
 8009a98:	f7f9 fd35 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009a9c:	9b03      	ldr	r3, [sp, #12]
 8009a9e:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009aa2:	22a0      	movs	r2, #160	; 0xa0
 8009aa4:	4611      	mov	r1, r2
 8009aa6:	ee18 0a90 	vmov	r0, s17
 8009aaa:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 8009aae:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8009ab2:	f00a ffbf 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009ab6:	ee18 0a90 	vmov	r0, s17
 8009aba:	22a0      	movs	r2, #160	; 0xa0
 8009abc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009ac0:	f00a ffc3 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009ac4:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 8009ac8:	2b20      	cmp	r3, #32
 8009aca:	d006      	beq.n	8009ada <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x63e>
        lineWidthQ5 = widthQ5;
 8009acc:	2320      	movs	r3, #32
        updateCachedShape();
 8009ace:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8009ad2:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 8009ad6:	f00a feb7 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009ada:	ee18 0a90 	vmov	r0, s17
 8009ade:	2101      	movs	r1, #1
 8009ae0:	f00a ffbe 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009ae4:	ee18 1a90 	vmov	r1, s17
 8009ae8:	4630      	mov	r0, r6
 8009aea:	f008 fdc1 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009aee:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8009af2:	ee19 0a90 	vmov	r0, s19
 8009af6:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8009af8:	f04f 0800 	mov.w	r8, #0
 8009afc:	2145      	movs	r1, #69	; 0x45
 8009afe:	f7f9 fcf5 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8009b02:	ee19 1a90 	vmov	r1, s19
 8009b06:	4628      	mov	r0, r5
        color = newColor;
 8009b08:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8009b0c:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8009b10:	f00b f93c 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009b14:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009b18:	ee19 3a90 	vmov	r3, s19
 8009b1c:	333c      	adds	r3, #60	; 0x3c
 8009b1e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009b22:	235b      	movs	r3, #91	; 0x5b
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8009b24:	ee19 0a90 	vmov	r0, s19
 8009b28:	a90a      	add	r1, sp, #40	; 0x28
 8009b2a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009b2e:	970a      	str	r7, [sp, #40]	; 0x28
 8009b30:	f00b fbc6 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009b34:	ee19 1a90 	vmov	r1, s19
 8009b38:	4630      	mov	r0, r6
 8009b3a:	f008 fd99 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8009b3e:	ee1a 0a10 	vmov	r0, s20
 8009b42:	220c      	movs	r2, #12
 8009b44:	2136      	movs	r1, #54	; 0x36
 8009b46:	f7f9 fcd1 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8009b4a:	ee1a 1a10 	vmov	r1, s20
 8009b4e:	4628      	mov	r0, r5
        color = newColor;
 8009b50:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8009b54:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8009b58:	f00b f918 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009b5c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009b60:	ee1a 3a10 	vmov	r3, s20
 8009b64:	333c      	adds	r3, #60	; 0x3c
 8009b66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009b6a:	235a      	movs	r3, #90	; 0x5a
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8009b6c:	ee1a 0a10 	vmov	r0, s20
 8009b70:	a90a      	add	r1, sp, #40	; 0x28
 8009b72:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009b76:	970a      	str	r7, [sp, #40]	; 0x28
 8009b78:	f00b fba2 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009b7c:	4630      	mov	r0, r6
 8009b7e:	ee1a 1a10 	vmov	r1, s20
 8009b82:	f008 fd75 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009b86:	4620      	mov	r0, r4
 8009b88:	b00d      	add	sp, #52	; 0x34
 8009b8a:	ecbd 8b0a 	vpop	{d8-d12}
 8009b8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009b92:	bf00      	nop
 8009b94:	200138b8 	.word	0x200138b8
 8009b98:	0802f309 	.word	0x0802f309
 8009b9c:	0802f37c 	.word	0x0802f37c
 8009ba0:	200138b0 	.word	0x200138b0

08009ba4 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8009ba4:	4770      	bx	lr

08009ba6 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009ba6:	4770      	bx	lr

08009ba8 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8009ba8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009baa:	68c2      	ldr	r2, [r0, #12]
 8009bac:	6844      	ldr	r4, [r0, #4]
 8009bae:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8009bb0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8009bb2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009bb6:	07d2      	lsls	r2, r2, #31
 8009bb8:	bf48      	it	mi
 8009bba:	5962      	ldrmi	r2, [r4, r5]
 8009bbc:	689b      	ldr	r3, [r3, #8]
    }
 8009bbe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009bc0:	bf48      	it	mi
 8009bc2:	58d3      	ldrmi	r3, [r2, r3]
 8009bc4:	4718      	bx	r3

08009bc6 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8009bc6:	6843      	ldr	r3, [r0, #4]
 8009bc8:	b12b      	cbz	r3, 8009bd6 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8009bca:	6883      	ldr	r3, [r0, #8]
 8009bcc:	b92b      	cbnz	r3, 8009bda <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8009bce:	68c0      	ldr	r0, [r0, #12]
 8009bd0:	f000 0001 	and.w	r0, r0, #1
 8009bd4:	4770      	bx	lr
 8009bd6:	4618      	mov	r0, r3
 8009bd8:	4770      	bx	lr
 8009bda:	2001      	movs	r0, #1
    }
 8009bdc:	4770      	bx	lr

08009bde <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009bde:	b510      	push	{r4, lr}
 8009be0:	2110      	movs	r1, #16
 8009be2:	4604      	mov	r4, r0
 8009be4:	f022 ff05 	bl	802c9f2 <_ZdlPvj>
 8009be8:	4620      	mov	r0, r4
 8009bea:	bd10      	pop	{r4, pc}

08009bec <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8009bec:	b510      	push	{r4, lr}
 8009bee:	4b03      	ldr	r3, [pc, #12]	; (8009bfc <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8009bf0:	6003      	str	r3, [r0, #0]
 8009bf2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009bf4:	f00d f912 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009bf8:	4620      	mov	r0, r4
 8009bfa:	bd10      	pop	{r4, pc}
 8009bfc:	08030b80 	.word	0x08030b80

08009c00 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8009c00:	b507      	push	{r0, r1, r2, lr}
 8009c02:	4b07      	ldr	r3, [pc, #28]	; (8009c20 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8009c04:	6003      	str	r3, [r0, #0]
 8009c06:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009c08:	f00d f908 	bl	8016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009c0c:	9801      	ldr	r0, [sp, #4]
 8009c0e:	f241 117c 	movw	r1, #4476	; 0x117c
 8009c12:	f022 feee 	bl	802c9f2 <_ZdlPvj>
 8009c16:	9801      	ldr	r0, [sp, #4]
 8009c18:	b003      	add	sp, #12
 8009c1a:	f85d fb04 	ldr.w	pc, [sp], #4
 8009c1e:	bf00      	nop
 8009c20:	08030b80 	.word	0x08030b80

08009c24 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 8009c24:	30e4      	adds	r0, #228	; 0xe4
 8009c26:	4288      	cmp	r0, r1
{
 8009c28:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 8009c2a:	d105      	bne.n	8009c38 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8009c2c:	f00e fdf8 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8009c30:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8009c34:	f7fb bbdc 	b.w	80053f0 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8009c38:	bd08      	pop	{r3, pc}
	...

08009c3c <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8009c3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c40:	ed2d 8b06 	vpush	{d8-d10}
 8009c44:	4604      	mov	r4, r0
 8009c46:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8009c48:	46a3      	mov	fp, r4
 8009c4a:	2500      	movs	r5, #0
 8009c4c:	f010 fa68 	bl	801a120 <_ZN8touchgfx6ScreenC1Ev>
 8009c50:	4b6e      	ldr	r3, [pc, #440]	; (8009e0c <_ZN20Project_InfoViewBaseC1Ev+0x1d0>)
 8009c52:	63e5      	str	r5, [r4, #60]	; 0x3c
 8009c54:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8009c58:	2226      	movs	r2, #38	; 0x26
 8009c5a:	4629      	mov	r1, r5
 8009c5c:	4658      	mov	r0, fp
 8009c5e:	f023 ffb4 	bl	802dbca <memset>
 8009c62:	4658      	mov	r0, fp
 8009c64:	f7f9 fc74 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 8009c68:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8009c6c:	26ff      	movs	r6, #255	; 0xff
 8009c6e:	4b68      	ldr	r3, [pc, #416]	; (8009e10 <_ZN20Project_InfoViewBaseC1Ev+0x1d4>)
 8009c70:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8009c72:	2226      	movs	r2, #38	; 0x26
 8009c74:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009c78:	4629      	mov	r1, r5
 8009c7a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009c7e:	4650      	mov	r0, sl
 8009c80:	66a5      	str	r5, [r4, #104]	; 0x68
 8009c82:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009c86:	f023 ffa0 	bl	802dbca <memset>
 8009c8a:	4650      	mov	r0, sl
 8009c8c:	f7f9 fc60 	bl	8003550 <_ZN8touchgfx6WidgetC1Ev>
 8009c90:	4b60      	ldr	r3, [pc, #384]	; (8009e14 <_ZN20Project_InfoViewBaseC1Ev+0x1d8>)
 8009c92:	66e3      	str	r3, [r4, #108]	; 0x6c
 8009c94:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8009c98:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8009c9c:	a90a      	add	r1, sp, #40	; 0x28
 8009c9e:	4650      	mov	r0, sl
 8009ca0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8009ca4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8009ca8:	f00c f8bb 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8009cac:	4648      	mov	r0, r9
 8009cae:	f7f9 fcb3 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8009cb2:	4b59      	ldr	r3, [pc, #356]	; (8009e18 <_ZN20Project_InfoViewBaseC1Ev+0x1dc>)
 8009cb4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8009cb8:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8009cbc:	4618      	mov	r0, r3
 8009cbe:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8009cc2:	ee09 3a90 	vmov	s19, r3
 8009cc6:	f00c f9e3 	bl	8016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8009cca:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8009cce:	4618      	mov	r0, r3
 8009cd0:	f504 78ba 	add.w	r8, r4, #372	; 0x174
 8009cd4:	ee0a 3a10 	vmov	s20, r3
 8009cd8:	f7f9 fc9e 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8009cdc:	4640      	mov	r0, r8
 8009cde:	f00a fd93 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8009ce2:	4e4e      	ldr	r6, [pc, #312]	; (8009e1c <_ZN20Project_InfoViewBaseC1Ev+0x1e0>)
 8009ce4:	f504 73f2 	add.w	r3, r4, #484	; 0x1e4
 8009ce8:	4618      	mov	r0, r3
 8009cea:	9302      	str	r3, [sp, #8]
 8009cec:	f7f9 fa34 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009cf0:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009cf4:	f8c4 31ec 	str.w	r3, [r4, #492]	; 0x1ec
 8009cf8:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8009cfc:	4618      	mov	r0, r3
 8009cfe:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8009d02:	f8c4 51f0 	str.w	r5, [r4, #496]	; 0x1f0
 8009d06:	f504 7710 	add.w	r7, r4, #576	; 0x240
 8009d0a:	ee08 3a10 	vmov	s16, r3
 8009d0e:	f7f9 fc83 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8009d12:	4638      	mov	r0, r7
 8009d14:	f00a fd78 	bl	8014808 <_ZN8touchgfx4LineC1Ev>
 8009d18:	f504 732c 	add.w	r3, r4, #688	; 0x2b0
 8009d1c:	4618      	mov	r0, r3
 8009d1e:	9303      	str	r3, [sp, #12]
 8009d20:	f7f9 fa1a 	bl	8003158 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009d24:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009d28:	f8c4 32b8 	str.w	r3, [r4, #696]	; 0x2b8
 8009d2c:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
 8009d30:	f8c4 62b0 	str.w	r6, [r4, #688]	; 0x2b0
 8009d34:	4618      	mov	r0, r3
 8009d36:	f8c4 52bc 	str.w	r5, [r4, #700]	; 0x2bc
 8009d3a:	ee08 3a90 	vmov	s17, r3
 8009d3e:	f7f9 fc6b 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
 8009d42:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8009d46:	4618      	mov	r0, r3
 8009d48:	ee09 3a10 	vmov	s18, r3
 8009d4c:	f7f9 fc64 	bl	8003618 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8009d50:	4a33      	ldr	r2, [pc, #204]	; (8009e20 <_ZN20Project_InfoViewBaseC1Ev+0x1e4>)
 8009d52:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8009d56:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8009d5a:	4a32      	ldr	r2, [pc, #200]	; (8009e24 <_ZN20Project_InfoViewBaseC1Ev+0x1e8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8009d5c:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8009d60:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8009d64:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8009d68:	f00d f84e 	bl	8016e08 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8009d6c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8009d70:	462a      	mov	r2, r5
 8009d72:	4658      	mov	r0, fp
 8009d74:	9300      	str	r3, [sp, #0]
 8009d76:	4629      	mov	r1, r5
 8009d78:	23f0      	movs	r3, #240	; 0xf0
 8009d7a:	f7f9 fbc4 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009d7e:	1d26      	adds	r6, r4, #4
        color = newColor;
 8009d80:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8009d84:	66a3      	str	r3, [r4, #104]	; 0x68
 8009d86:	4659      	mov	r1, fp
 8009d88:	4630      	mov	r0, r6
 8009d8a:	f008 fc71 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8009d8e:	462a      	mov	r2, r5
 8009d90:	4650      	mov	r0, sl
 8009d92:	4629      	mov	r1, r5
 8009d94:	f7f9 fbaa 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8009d98:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8009d9a:	4650      	mov	r0, sl
 8009d9c:	a90a      	add	r1, sp, #40	; 0x28
 8009d9e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009da2:	f00c f83e 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009da6:	4651      	mov	r1, sl
 8009da8:	4630      	mov	r0, r6
 8009daa:	f008 fc61 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8009dae:	f44f 729a 	mov.w	r2, #308	; 0x134
 8009db2:	2156      	movs	r1, #86	; 0x56
 8009db4:	4648      	mov	r0, r9
 8009db6:	f7f9 fb99 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8009dba:	f04f 33ff 	mov.w	r3, #4294967295
 8009dbe:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8009dc2:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8009dc6:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8009dca:	f10d 0b10 	add.w	fp, sp, #16
 8009dce:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009dd2:	4649      	mov	r1, r9
 8009dd4:	4658      	mov	r0, fp
 8009dd6:	4798      	blx	r3
 8009dd8:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8009ddc:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8009de0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009de4:	4b10      	ldr	r3, [pc, #64]	; (8009e28 <_ZN20Project_InfoViewBaseC1Ev+0x1ec>)
 8009de6:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8009de8:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8009dec:	b92b      	cbnz	r3, 8009dfa <_ZN20Project_InfoViewBaseC1Ev+0x1be>
 8009dee:	4b0f      	ldr	r3, [pc, #60]	; (8009e2c <_ZN20Project_InfoViewBaseC1Ev+0x1f0>)
 8009df0:	4a0f      	ldr	r2, [pc, #60]	; (8009e30 <_ZN20Project_InfoViewBaseC1Ev+0x1f4>)
 8009df2:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009df4:	480f      	ldr	r0, [pc, #60]	; (8009e34 <_ZN20Project_InfoViewBaseC1Ev+0x1f8>)
 8009df6:	f023 fce3 	bl	802d7c0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8009dfa:	4b0f      	ldr	r3, [pc, #60]	; (8009e38 <_ZN20Project_InfoViewBaseC1Ev+0x1fc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009dfc:	881b      	ldrh	r3, [r3, #0]
 8009dfe:	2b3e      	cmp	r3, #62	; 0x3e
 8009e00:	d81e      	bhi.n	8009e40 <_ZN20Project_InfoViewBaseC1Ev+0x204>
 8009e02:	4b0e      	ldr	r3, [pc, #56]	; (8009e3c <_ZN20Project_InfoViewBaseC1Ev+0x200>)
 8009e04:	4a0a      	ldr	r2, [pc, #40]	; (8009e30 <_ZN20Project_InfoViewBaseC1Ev+0x1f4>)
 8009e06:	2161      	movs	r1, #97	; 0x61
 8009e08:	e7f4      	b.n	8009df4 <_ZN20Project_InfoViewBaseC1Ev+0x1b8>
 8009e0a:	bf00      	nop
 8009e0c:	08030b80 	.word	0x08030b80
 8009e10:	080318d0 	.word	0x080318d0
 8009e14:	08031b1c 	.word	0x08031b1c
 8009e18:	0802f41c 	.word	0x0802f41c
 8009e1c:	08031604 	.word	0x08031604
 8009e20:	08030b68 	.word	0x08030b68
 8009e24:	08009c25 	.word	0x08009c25
 8009e28:	200138ac 	.word	0x200138ac
 8009e2c:	0802f1cc 	.word	0x0802f1cc
 8009e30:	0802f2d1 	.word	0x0802f2d1
 8009e34:	0802f249 	.word	0x0802f249
 8009e38:	200138b0 	.word	0x200138b0
 8009e3c:	0802f290 	.word	0x0802f290
        return texts->getText(typedTextId);
 8009e40:	4ba0      	ldr	r3, [pc, #640]	; (800a0c4 <_ZN20Project_InfoViewBaseC1Ev+0x488>)
 8009e42:	213e      	movs	r1, #62	; 0x3e
 8009e44:	6818      	ldr	r0, [r3, #0]
 8009e46:	f000 fb5f 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8009e4a:	4a9f      	ldr	r2, [pc, #636]	; (800a0c8 <_ZN20Project_InfoViewBaseC1Ev+0x48c>)
 8009e4c:	4603      	mov	r3, r0
 8009e4e:	2104      	movs	r1, #4
 8009e50:	4650      	mov	r0, sl
 8009e52:	f011 fe93 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8009e56:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea_auto_off.resizeToCurrentText();
 8009e5a:	4648      	mov	r0, r9
 8009e5c:	f00b fa10 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8009e60:	f8df a268 	ldr.w	sl, [pc, #616]	; 800a0cc <_ZN20Project_InfoViewBaseC1Ev+0x490>
 8009e64:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8009e68:	233f      	movs	r3, #63	; 0x3f
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8009e6a:	a90a      	add	r1, sp, #40	; 0x28
 8009e6c:	4648      	mov	r0, r9
 8009e6e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009e72:	f00b fa25 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009e76:	4649      	mov	r1, r9
 8009e78:	4630      	mov	r0, r6
 8009e7a:	f008 fbf9 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 8009e7e:	ee19 0a90 	vmov	r0, s19
 8009e82:	22f0      	movs	r2, #240	; 0xf0
 8009e84:	2121      	movs	r1, #33	; 0x21
 8009e86:	f7f9 fb31 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8009e8a:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8009e8c:	aa0a      	add	r2, sp, #40	; 0x28
 8009e8e:	a909      	add	r1, sp, #36	; 0x24
 8009e90:	ee19 0a90 	vmov	r0, s19
 8009e94:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009e98:	2302      	movs	r3, #2
 8009e9a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009e9e:	f00b fdca 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8009ea2:	2364      	movs	r3, #100	; 0x64
        updateTextPosition();
 8009ea4:	ee19 0a90 	vmov	r0, s19
 8009ea8:	f8a4 311c 	strh.w	r3, [r4, #284]	; 0x11c
 8009eac:	f7f9 fb62 	bl	8003574 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8009eb0:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 8009eb4:	e9c4 3348 	strd	r3, r3, [r4, #288]	; 0x120
    buttonWithLabel_Return.setAction(buttonCallback);
 8009eb8:	f504 538b 	add.w	r3, r4, #4448	; 0x1160
 8009ebc:	330c      	adds	r3, #12
 8009ebe:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8009ec2:	ee19 1a90 	vmov	r1, s19
 8009ec6:	4630      	mov	r0, r6
 8009ec8:	f008 fbd2 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_Info.setXY(7, 91);
 8009ecc:	225b      	movs	r2, #91	; 0x5b
 8009ece:	ee1a 0a10 	vmov	r0, s20
 8009ed2:	2107      	movs	r1, #7
 8009ed4:	f7f9 fb0a 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8009ed8:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8009edc:	ee1a 1a10 	vmov	r1, s20
        color = newColor;
 8009ee0:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8009ee4:	4658      	mov	r0, fp
        linespace = space;
 8009ee6:	f8a4 5160 	strh.w	r5, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 8009eea:	f00a ff4f 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009eee:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8009ef2:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8009ef6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8009efa:	2365      	movs	r3, #101	; 0x65
    textArea_Info.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8009efc:	ee1a 0a10 	vmov	r0, s20
 8009f00:	a90a      	add	r1, sp, #40	; 0x28
 8009f02:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009f06:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8009f0a:	f00b f9d9 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009f0e:	ee1a 1a10 	vmov	r1, s20
 8009f12:	4630      	mov	r0, r6
 8009f14:	f008 fbac 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8009f18:	230a      	movs	r3, #10
 8009f1a:	9300      	str	r3, [sp, #0]
 8009f1c:	224b      	movs	r2, #75	; 0x4b
 8009f1e:	23f0      	movs	r3, #240	; 0xf0
 8009f20:	4629      	mov	r1, r5
 8009f22:	4640      	mov	r0, r8
 8009f24:	f7f9 faef 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009f28:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009f2c:	22a0      	movs	r2, #160	; 0xa0
 8009f2e:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
        color565 = LCD16bpp::getNativeColor(painterColor);
 8009f32:	f8a4 31f4 	strh.w	r3, [r4, #500]	; 0x1f4
 8009f36:	9b02      	ldr	r3, [sp, #8]
 8009f38:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8009f3c:	4611      	mov	r1, r2
 8009f3e:	4640      	mov	r0, r8
 8009f40:	f00a fd78 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009f44:	22a0      	movs	r2, #160	; 0xa0
 8009f46:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009f4a:	4640      	mov	r0, r8
 8009f4c:	f00a fd7d 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009f50:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
 8009f54:	2b20      	cmp	r3, #32
 8009f56:	d005      	beq.n	8009f64 <_ZN20Project_InfoViewBaseC1Ev+0x328>
        lineWidthQ5 = widthQ5;
 8009f58:	2320      	movs	r3, #32
 8009f5a:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
        updateCachedShape();
 8009f5e:	4640      	mov	r0, r8
 8009f60:	f00a fc72 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009f64:	4640      	mov	r0, r8
 8009f66:	2101      	movs	r1, #1
 8009f68:	f00a fd7a 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009f6c:	4641      	mov	r1, r8
 8009f6e:	4630      	mov	r0, r6
 8009f70:	f008 fb7e 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009f74:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(70, 60);
 8009f78:	223c      	movs	r2, #60	; 0x3c
        linespace = space;
 8009f7a:	f04f 0900 	mov.w	r9, #0
 8009f7e:	ee18 0a10 	vmov	r0, s16
 8009f82:	2146      	movs	r1, #70	; 0x46
        boundingArea = calculateBoundingArea();
 8009f84:	ad04      	add	r5, sp, #16
 8009f86:	f7f9 fab1 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8009f8a:	ee18 1a10 	vmov	r1, s16
 8009f8e:	4628      	mov	r0, r5
        color = newColor;
 8009f90:	f8c4 8228 	str.w	r8, [r4, #552]	; 0x228
        linespace = space;
 8009f94:	f8a4 922c 	strh.w	r9, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8009f98:	f00a fef8 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009f9c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009fa0:	ee18 3a10 	vmov	r3, s16
 8009fa4:	333c      	adds	r3, #60	; 0x3c
 8009fa6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BYJD));
 8009faa:	ee18 0a10 	vmov	r0, s16
 8009fae:	a90a      	add	r1, sp, #40	; 0x28
 8009fb0:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8009fb4:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8009fb8:	f00b f982 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009fbc:	ee18 1a10 	vmov	r1, s16
 8009fc0:	4630      	mov	r0, r6
 8009fc2:	f008 fb55 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8009fc6:	230a      	movs	r3, #10
 8009fc8:	9300      	str	r3, [sp, #0]
 8009fca:	2232      	movs	r2, #50	; 0x32
 8009fcc:	23f0      	movs	r3, #240	; 0xf0
 8009fce:	4649      	mov	r1, r9
 8009fd0:	4638      	mov	r0, r7
 8009fd2:	f7f9 fa98 	bl	8003506 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009fd6:	9b03      	ldr	r3, [sp, #12]
 8009fd8:	f8c4 3268 	str.w	r3, [r4, #616]	; 0x268
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009fdc:	22a0      	movs	r2, #160	; 0xa0
 8009fde:	4611      	mov	r1, r2
 8009fe0:	4638      	mov	r0, r7
 8009fe2:	f8c4 82bc 	str.w	r8, [r4, #700]	; 0x2bc
 8009fe6:	f8a4 82c0 	strh.w	r8, [r4, #704]	; 0x2c0
 8009fea:	f00a fd23 	bl	8014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009fee:	22a0      	movs	r2, #160	; 0xa0
 8009ff0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009ff4:	4638      	mov	r0, r7
 8009ff6:	f00a fd28 	bl	8014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009ffa:	f8d4 327c 	ldr.w	r3, [r4, #636]	; 0x27c
 8009ffe:	2b20      	cmp	r3, #32
 800a000:	d005      	beq.n	800a00e <_ZN20Project_InfoViewBaseC1Ev+0x3d2>
        lineWidthQ5 = widthQ5;
 800a002:	2320      	movs	r3, #32
 800a004:	f8c4 327c 	str.w	r3, [r4, #636]	; 0x27c
        updateCachedShape();
 800a008:	4638      	mov	r0, r7
 800a00a:	f00a fc1d 	bl	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800a00e:	4638      	mov	r0, r7
 800a010:	2101      	movs	r1, #1
 800a012:	f00a fd25 	bl	8014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800a016:	4639      	mov	r1, r7
 800a018:	4630      	mov	r0, r6
 800a01a:	f008 fb29 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800a01e:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 800a022:	ee18 0a90 	vmov	r0, s17
 800a026:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800a028:	2700      	movs	r7, #0
 800a02a:	2145      	movs	r1, #69	; 0x45
 800a02c:	f7f9 fa5e 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800a030:	ee18 1a90 	vmov	r1, s17
 800a034:	4628      	mov	r0, r5
        color = newColor;
 800a036:	f8c4 82f4 	str.w	r8, [r4, #756]	; 0x2f4
        linespace = space;
 800a03a:	f8a4 72f8 	strh.w	r7, [r4, #760]	; 0x2f8
        boundingArea = calculateBoundingArea();
 800a03e:	f00a fea5 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a042:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a046:	ee18 3a90 	vmov	r3, s17
 800a04a:	333c      	adds	r3, #60	; 0x3c
 800a04c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800a050:	2367      	movs	r3, #103	; 0x67
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 800a052:	ee18 0a90 	vmov	r0, s17
 800a056:	a90a      	add	r1, sp, #40	; 0x28
 800a058:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a05c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a060:	f00b f92e 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a064:	ee18 1a90 	vmov	r1, s17
 800a068:	4630      	mov	r0, r6
 800a06a:	f008 fb01 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 800a06e:	ee19 0a10 	vmov	r0, s18
 800a072:	220c      	movs	r2, #12
 800a074:	2136      	movs	r1, #54	; 0x36
 800a076:	f7f9 fa39 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 800a07a:	ee19 1a10 	vmov	r1, s18
 800a07e:	4628      	mov	r0, r5
        color = newColor;
 800a080:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 800a084:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 800a088:	f00a fe80 	bl	8014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a08c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a090:	ee19 3a10 	vmov	r3, s18
 800a094:	333c      	adds	r3, #60	; 0x3c
 800a096:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800a09a:	2366      	movs	r3, #102	; 0x66
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 800a09c:	ee19 0a10 	vmov	r0, s18
 800a0a0:	a90a      	add	r1, sp, #40	; 0x28
 800a0a2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a0a6:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a0aa:	f00b f909 	bl	80152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a0ae:	4630      	mov	r0, r6
 800a0b0:	ee19 1a10 	vmov	r1, s18
 800a0b4:	f008 fadc 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a0b8:	4620      	mov	r0, r4
 800a0ba:	b00d      	add	sp, #52	; 0x34
 800a0bc:	ecbd 8b06 	vpop	{d8-d10}
 800a0c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a0c4:	200138b8 	.word	0x200138b8
 800a0c8:	0802f309 	.word	0x0802f309
 800a0cc:	0802f37c 	.word	0x0802f37c

0800a0d0 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 800a0d0:	4770      	bx	lr

0800a0d2 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 800a0d2:	4770      	bx	lr

0800a0d4 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 800a0d4:	b510      	push	{r4, lr}
}
 800a0d6:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 800a0d8:	4604      	mov	r4, r0
}
 800a0da:	f022 fc8a 	bl	802c9f2 <_ZdlPvj>
 800a0de:	4620      	mov	r0, r4
 800a0e0:	bd10      	pop	{r4, pc}
	...

0800a0e4 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 800a0e4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a0e8:	4604      	mov	r4, r0
 800a0ea:	4626      	mov	r6, r4
 800a0ec:	f010 f818 	bl	801a120 <_ZN8touchgfx6ScreenC1Ev>
 800a0f0:	2500      	movs	r5, #0
 800a0f2:	4b2e      	ldr	r3, [pc, #184]	; (800a1ac <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 800a0f4:	63e5      	str	r5, [r4, #60]	; 0x3c
 800a0f6:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800a0fa:	4b2d      	ldr	r3, [pc, #180]	; (800a1b0 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 800a0fc:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 800a0fe:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 800a102:	f44f 7280 	mov.w	r2, #256	; 0x100
 800a106:	23ff      	movs	r3, #255	; 0xff
 800a108:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800a10c:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 800a110:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800a114:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 800a118:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 800a11c:	4a25      	ldr	r2, [pc, #148]	; (800a1b4 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 800a11e:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800a122:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 800a126:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 800a128:	a901      	add	r1, sp, #4
 800a12a:	4638      	mov	r0, r7
 800a12c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 800a130:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 800a134:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 800a138:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 800a13c:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 800a140:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 800a144:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 800a148:	66a5      	str	r5, [r4, #104]	; 0x68
 800a14a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a14e:	f00b fe68 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 800a152:	462a      	mov	r2, r5
 800a154:	4629      	mov	r1, r5
 800a156:	4630      	mov	r0, r6
 800a158:	f7f9 f9c8 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800a15c:	4630      	mov	r0, r6
 800a15e:	21f0      	movs	r1, #240	; 0xf0
 800a160:	f7f8 ff46 	bl	8002ff0 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800a164:	4630      	mov	r0, r6
 800a166:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800a16a:	f7f8 ff43 	bl	8002ff4 <_ZN8touchgfx8Drawable9setHeightEs>
 800a16e:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 800a172:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800a176:	66a3      	str	r3, [r4, #104]	; 0x68
 800a178:	4631      	mov	r1, r6
 800a17a:	4640      	mov	r0, r8
 800a17c:	f008 fa78 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_shutdown.setXY(-3, 0);
 800a180:	462a      	mov	r2, r5
 800a182:	4638      	mov	r0, r7
 800a184:	f06f 0102 	mvn.w	r1, #2
 800a188:	f7f9 f9b0 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 800a18c:	230b      	movs	r3, #11
    image_shutdown.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 800a18e:	a901      	add	r1, sp, #4
 800a190:	4638      	mov	r0, r7
 800a192:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a196:	f00b fe44 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a19a:	4640      	mov	r0, r8
 800a19c:	4639      	mov	r1, r7
 800a19e:	f008 fa67 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a1a2:	4620      	mov	r0, r4
 800a1a4:	b002      	add	sp, #8
 800a1a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a1aa:	bf00      	nop
 800a1ac:	08030bb4 	.word	0x08030bb4
 800a1b0:	080318d0 	.word	0x080318d0
 800a1b4:	08031b1c 	.word	0x08031b1c

0800a1b8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a1b8:	4770      	bx	lr
	...

0800a1bc <_Z23getFont_verdana_10_4bppv>:
{
 800a1bc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a1be:	4d17      	ldr	r5, [pc, #92]	; (800a21c <_Z23getFont_verdana_10_4bppv+0x60>)
 800a1c0:	682c      	ldr	r4, [r5, #0]
 800a1c2:	f3bf 8f5b 	dmb	ish
 800a1c6:	f014 0401 	ands.w	r4, r4, #1
{
 800a1ca:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a1cc:	d122      	bne.n	800a214 <_Z23getFont_verdana_10_4bppv+0x58>
 800a1ce:	4628      	mov	r0, r5
 800a1d0:	f022 fc11 	bl	802c9f6 <__cxa_guard_acquire>
 800a1d4:	b1f0      	cbz	r0, 800a214 <_Z23getFont_verdana_10_4bppv+0x58>
 800a1d6:	233f      	movs	r3, #63	; 0x3f
 800a1d8:	9309      	str	r3, [sp, #36]	; 0x24
 800a1da:	4b11      	ldr	r3, [pc, #68]	; (800a220 <_Z23getFont_verdana_10_4bppv+0x64>)
 800a1dc:	9308      	str	r3, [sp, #32]
 800a1de:	4b11      	ldr	r3, [pc, #68]	; (800a224 <_Z23getFont_verdana_10_4bppv+0x68>)
 800a1e0:	9307      	str	r3, [sp, #28]
 800a1e2:	2301      	movs	r3, #1
 800a1e4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a1e8:	9304      	str	r3, [sp, #16]
 800a1ea:	2304      	movs	r3, #4
 800a1ec:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a1f0:	230a      	movs	r3, #10
 800a1f2:	490d      	ldr	r1, [pc, #52]	; (800a228 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800a1f4:	9300      	str	r3, [sp, #0]
 800a1f6:	225f      	movs	r2, #95	; 0x5f
 800a1f8:	230c      	movs	r3, #12
 800a1fa:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a1fe:	480b      	ldr	r0, [pc, #44]	; (800a22c <_Z23getFont_verdana_10_4bppv+0x70>)
 800a200:	940a      	str	r4, [sp, #40]	; 0x28
 800a202:	9401      	str	r4, [sp, #4]
 800a204:	f7fc f9da 	bl	80065bc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a208:	4809      	ldr	r0, [pc, #36]	; (800a230 <_Z23getFont_verdana_10_4bppv+0x74>)
 800a20a:	f023 faf7 	bl	802d7fc <atexit>
 800a20e:	4628      	mov	r0, r5
 800a210:	f022 fbfd 	bl	802ca0e <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800a214:	4805      	ldr	r0, [pc, #20]	; (800a22c <_Z23getFont_verdana_10_4bppv+0x70>)
 800a216:	b00f      	add	sp, #60	; 0x3c
 800a218:	bd30      	pop	{r4, r5, pc}
 800a21a:	bf00      	nop
 800a21c:	20002954 	.word	0x20002954
 800a220:	080497c0 	.word	0x080497c0
 800a224:	080499fc 	.word	0x080499fc
 800a228:	08048808 	.word	0x08048808
 800a22c:	20002958 	.word	0x20002958
 800a230:	0800a1b9 	.word	0x0800a1b9

0800a234 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a234:	4770      	bx	lr
	...

0800a238 <_Z23getFont_verdana_12_4bppv>:
{
 800a238:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a23a:	4d17      	ldr	r5, [pc, #92]	; (800a298 <_Z23getFont_verdana_12_4bppv+0x60>)
 800a23c:	682c      	ldr	r4, [r5, #0]
 800a23e:	f3bf 8f5b 	dmb	ish
 800a242:	f014 0401 	ands.w	r4, r4, #1
{
 800a246:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a248:	d122      	bne.n	800a290 <_Z23getFont_verdana_12_4bppv+0x58>
 800a24a:	4628      	mov	r0, r5
 800a24c:	f022 fbd3 	bl	802c9f6 <__cxa_guard_acquire>
 800a250:	b1f0      	cbz	r0, 800a290 <_Z23getFont_verdana_12_4bppv+0x58>
 800a252:	233f      	movs	r3, #63	; 0x3f
 800a254:	9309      	str	r3, [sp, #36]	; 0x24
 800a256:	4b11      	ldr	r3, [pc, #68]	; (800a29c <_Z23getFont_verdana_12_4bppv+0x64>)
 800a258:	9308      	str	r3, [sp, #32]
 800a25a:	4b11      	ldr	r3, [pc, #68]	; (800a2a0 <_Z23getFont_verdana_12_4bppv+0x68>)
 800a25c:	9307      	str	r3, [sp, #28]
 800a25e:	2301      	movs	r3, #1
 800a260:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a264:	9304      	str	r3, [sp, #16]
 800a266:	2304      	movs	r3, #4
 800a268:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a26c:	230c      	movs	r3, #12
 800a26e:	490d      	ldr	r1, [pc, #52]	; (800a2a4 <_Z23getFont_verdana_12_4bppv+0x6c>)
 800a270:	9300      	str	r3, [sp, #0]
 800a272:	2260      	movs	r2, #96	; 0x60
 800a274:	230f      	movs	r3, #15
 800a276:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a27a:	480b      	ldr	r0, [pc, #44]	; (800a2a8 <_Z23getFont_verdana_12_4bppv+0x70>)
 800a27c:	940a      	str	r4, [sp, #40]	; 0x28
 800a27e:	9401      	str	r4, [sp, #4]
 800a280:	f7fc f99c 	bl	80065bc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a284:	4809      	ldr	r0, [pc, #36]	; (800a2ac <_Z23getFont_verdana_12_4bppv+0x74>)
 800a286:	f023 fab9 	bl	802d7fc <atexit>
 800a28a:	4628      	mov	r0, r5
 800a28c:	f022 fbbf 	bl	802ca0e <__cxa_guard_release>
    return verdana_12_4bpp;
}
 800a290:	4805      	ldr	r0, [pc, #20]	; (800a2a8 <_Z23getFont_verdana_12_4bppv+0x70>)
 800a292:	b00f      	add	sp, #60	; 0x3c
 800a294:	bd30      	pop	{r4, r5, pc}
 800a296:	bf00      	nop
 800a298:	20002984 	.word	0x20002984
 800a29c:	080497f4 	.word	0x080497f4
 800a2a0:	08049a00 	.word	0x08049a00
 800a2a4:	08048d3c 	.word	0x08048d3c
 800a2a8:	20002988 	.word	0x20002988
 800a2ac:	0800a235 	.word	0x0800a235

0800a2b0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a2b0:	4770      	bx	lr
	...

0800a2b4 <_Z23getFont_verdana_19_4bppv>:
{
 800a2b4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a2b6:	4d17      	ldr	r5, [pc, #92]	; (800a314 <_Z23getFont_verdana_19_4bppv+0x60>)
 800a2b8:	682c      	ldr	r4, [r5, #0]
 800a2ba:	f3bf 8f5b 	dmb	ish
 800a2be:	f014 0401 	ands.w	r4, r4, #1
{
 800a2c2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a2c4:	d122      	bne.n	800a30c <_Z23getFont_verdana_19_4bppv+0x58>
 800a2c6:	4628      	mov	r0, r5
 800a2c8:	f022 fb95 	bl	802c9f6 <__cxa_guard_acquire>
 800a2cc:	b1f0      	cbz	r0, 800a30c <_Z23getFont_verdana_19_4bppv+0x58>
 800a2ce:	233f      	movs	r3, #63	; 0x3f
 800a2d0:	9309      	str	r3, [sp, #36]	; 0x24
 800a2d2:	4b11      	ldr	r3, [pc, #68]	; (800a318 <_Z23getFont_verdana_19_4bppv+0x64>)
 800a2d4:	9308      	str	r3, [sp, #32]
 800a2d6:	4b11      	ldr	r3, [pc, #68]	; (800a31c <_Z23getFont_verdana_19_4bppv+0x68>)
 800a2d8:	9307      	str	r3, [sp, #28]
 800a2da:	2301      	movs	r3, #1
 800a2dc:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a2e0:	9304      	str	r3, [sp, #16]
 800a2e2:	2304      	movs	r3, #4
 800a2e4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a2e8:	2313      	movs	r3, #19
 800a2ea:	490d      	ldr	r1, [pc, #52]	; (800a320 <_Z23getFont_verdana_19_4bppv+0x6c>)
 800a2ec:	9300      	str	r3, [sp, #0]
 800a2ee:	225f      	movs	r2, #95	; 0x5f
 800a2f0:	2317      	movs	r3, #23
 800a2f2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a2f6:	480b      	ldr	r0, [pc, #44]	; (800a324 <_Z23getFont_verdana_19_4bppv+0x70>)
 800a2f8:	940a      	str	r4, [sp, #40]	; 0x28
 800a2fa:	9401      	str	r4, [sp, #4]
 800a2fc:	f7fc f95e 	bl	80065bc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a300:	4809      	ldr	r0, [pc, #36]	; (800a328 <_Z23getFont_verdana_19_4bppv+0x74>)
 800a302:	f023 fa7b 	bl	802d7fc <atexit>
 800a306:	4628      	mov	r0, r5
 800a308:	f022 fb81 	bl	802ca0e <__cxa_guard_release>
    return verdana_19_4bpp;
}
 800a30c:	4805      	ldr	r0, [pc, #20]	; (800a324 <_Z23getFont_verdana_19_4bppv+0x70>)
 800a30e:	b00f      	add	sp, #60	; 0x3c
 800a310:	bd30      	pop	{r4, r5, pc}
 800a312:	bf00      	nop
 800a314:	200029b4 	.word	0x200029b4
 800a318:	08049878 	.word	0x08049878
 800a31c:	08049a04 	.word	0x08049a04
 800a320:	0804927c 	.word	0x0804927c
 800a324:	200029b8 	.word	0x200029b8
 800a328:	0800a2b1 	.word	0x0800a2b1

0800a32c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a32c:	4770      	bx	lr
	...

0800a330 <_Z23getFont_verdana_40_4bppv>:
{
 800a330:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a332:	4d16      	ldr	r5, [pc, #88]	; (800a38c <_Z23getFont_verdana_40_4bppv+0x5c>)
 800a334:	682c      	ldr	r4, [r5, #0]
 800a336:	f3bf 8f5b 	dmb	ish
 800a33a:	f014 0401 	ands.w	r4, r4, #1
{
 800a33e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a340:	d120      	bne.n	800a384 <_Z23getFont_verdana_40_4bppv+0x54>
 800a342:	4628      	mov	r0, r5
 800a344:	f022 fb57 	bl	802c9f6 <__cxa_guard_acquire>
 800a348:	b1e0      	cbz	r0, 800a384 <_Z23getFont_verdana_40_4bppv+0x54>
 800a34a:	233f      	movs	r3, #63	; 0x3f
 800a34c:	9309      	str	r3, [sp, #36]	; 0x24
 800a34e:	4b10      	ldr	r3, [pc, #64]	; (800a390 <_Z23getFont_verdana_40_4bppv+0x60>)
 800a350:	9308      	str	r3, [sp, #32]
 800a352:	4b10      	ldr	r3, [pc, #64]	; (800a394 <_Z23getFont_verdana_40_4bppv+0x64>)
 800a354:	4910      	ldr	r1, [pc, #64]	; (800a398 <_Z23getFont_verdana_40_4bppv+0x68>)
 800a356:	4811      	ldr	r0, [pc, #68]	; (800a39c <_Z23getFont_verdana_40_4bppv+0x6c>)
 800a358:	940a      	str	r4, [sp, #40]	; 0x28
 800a35a:	2201      	movs	r2, #1
 800a35c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800a360:	2304      	movs	r3, #4
 800a362:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800a366:	2328      	movs	r3, #40	; 0x28
 800a368:	9300      	str	r3, [sp, #0]
 800a36a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a36e:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800a372:	9405      	str	r4, [sp, #20]
 800a374:	f7fc f922 	bl	80065bc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a378:	4809      	ldr	r0, [pc, #36]	; (800a3a0 <_Z23getFont_verdana_40_4bppv+0x70>)
 800a37a:	f023 fa3f 	bl	802d7fc <atexit>
 800a37e:	4628      	mov	r0, r5
 800a380:	f022 fb45 	bl	802ca0e <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800a384:	4805      	ldr	r0, [pc, #20]	; (800a39c <_Z23getFont_verdana_40_4bppv+0x6c>)
 800a386:	b00f      	add	sp, #60	; 0x3c
 800a388:	bd30      	pop	{r4, r5, pc}
 800a38a:	bf00      	nop
 800a38c:	200029e4 	.word	0x200029e4
 800a390:	080499f8 	.word	0x080499f8
 800a394:	08049a08 	.word	0x08049a08
 800a398:	080497b0 	.word	0x080497b0
 800a39c:	200029e8 	.word	0x200029e8
 800a3a0:	0800a32d 	.word	0x0800a32d

0800a3a4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800a3a4:	2000      	movs	r0, #0
 800a3a6:	4770      	bx	lr

0800a3a8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800a3a8:	2000      	movs	r0, #0
 800a3aa:	4770      	bx	lr

0800a3ac <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a3ac:	b40e      	push	{r1, r2, r3}
 800a3ae:	b503      	push	{r0, r1, lr}
 800a3b0:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a3b2:	2100      	movs	r1, #0
{
 800a3b4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800a3b8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a3ba:	f00f f9ef 	bl	801979c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a3be:	b002      	add	sp, #8
 800a3c0:	f85d eb04 	ldr.w	lr, [sp], #4
 800a3c4:	b003      	add	sp, #12
 800a3c6:	4770      	bx	lr

0800a3c8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a3c8:	b40c      	push	{r2, r3}
 800a3ca:	b507      	push	{r0, r1, r2, lr}
 800a3cc:	ab04      	add	r3, sp, #16
 800a3ce:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800a3d2:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800a3d4:	f00f f9e2 	bl	801979c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a3d8:	b003      	add	sp, #12
 800a3da:	f85d eb04 	ldr.w	lr, [sp], #4
 800a3de:	b002      	add	sp, #8
 800a3e0:	4770      	bx	lr
	...

0800a3e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800a3e4:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800a3e6:	b510      	push	{r4, lr}
 800a3e8:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800a3ea:	b373      	cbz	r3, 800a44a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800a3ec:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800a3ee:	b92b      	cbnz	r3, 800a3fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800a3f0:	4b18      	ldr	r3, [pc, #96]	; (800a454 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800a3f2:	4a19      	ldr	r2, [pc, #100]	; (800a458 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800a3f4:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800a3f6:	4819      	ldr	r0, [pc, #100]	; (800a45c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800a3f8:	f023 f9e2 	bl	802d7c0 <__assert_func>
            return buffer[pos];
 800a3fc:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800a3fe:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800a402:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800a404:	b30b      	cbz	r3, 800a44a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800a406:	f010 fe04 	bl	801b012 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800a40a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800a40c:	2b01      	cmp	r3, #1
 800a40e:	d803      	bhi.n	800a418 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800a410:	4b13      	ldr	r3, [pc, #76]	; (800a460 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800a412:	4a14      	ldr	r2, [pc, #80]	; (800a464 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800a414:	21cb      	movs	r1, #203	; 0xcb
 800a416:	e7ee      	b.n	800a3f6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800a418:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800a41a:	1c53      	adds	r3, r2, #1
 800a41c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800a41e:	2b09      	cmp	r3, #9
 800a420:	4619      	mov	r1, r3
 800a422:	bf88      	it	hi
 800a424:	f1a3 010a 	subhi.w	r1, r3, #10
 800a428:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800a42c:	f640 103f 	movw	r0, #2367	; 0x93f
 800a430:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800a432:	4281      	cmp	r1, r0
 800a434:	d109      	bne.n	800a44a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800a436:	2b0a      	cmp	r3, #10
 800a438:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800a43c:	bf28      	it	cs
 800a43e:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800a440:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800a444:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800a446:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800a448:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800a44a:	4620      	mov	r0, r4
}
 800a44c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800a450:	f010 bce2 	b.w	801ae18 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800a454:	08030be0 	.word	0x08030be0
 800a458:	08030be9 	.word	0x08030be9
 800a45c:	08030c94 	.word	0x08030c94
 800a460:	08030cde 	.word	0x08030cde
 800a464:	08030cec 	.word	0x08030cec

0800a468 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800a468:	f010 bc9d 	b.w	801ada6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800a46c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800a46c:	b510      	push	{r4, lr}
 800a46e:	b086      	sub	sp, #24
 800a470:	ac02      	add	r4, sp, #8
 800a472:	e884 0006 	stmia.w	r4, {r1, r2}
 800a476:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800a478:	ab0a      	add	r3, sp, #40	; 0x28
 800a47a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800a47c:	9301      	str	r3, [sp, #4]
 800a47e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a480:	9300      	str	r3, [sp, #0]
 800a482:	4621      	mov	r1, r4
 800a484:	9b08      	ldr	r3, [sp, #32]
 800a486:	f00d fd4d 	bl	8017f24 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800a48a:	b006      	add	sp, #24
 800a48c:	bd10      	pop	{r4, pc}
	...

0800a490 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800a490:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800a492:	bb18      	cbnz	r0, 800a4dc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800a494:	4b12      	ldr	r3, [pc, #72]	; (800a4e0 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800a496:	4813      	ldr	r0, [pc, #76]	; (800a4e4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800a498:	681c      	ldr	r4, [r3, #0]
 800a49a:	4913      	ldr	r1, [pc, #76]	; (800a4e8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800a49c:	b1b4      	cbz	r4, 800a4cc <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800a49e:	6822      	ldr	r2, [r4, #0]
 800a4a0:	4422      	add	r2, r4
 800a4a2:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800a4a4:	6862      	ldr	r2, [r4, #4]
 800a4a6:	4422      	add	r2, r4
 800a4a8:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800a4aa:	68a2      	ldr	r2, [r4, #8]
 800a4ac:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800a4ae:	4b0f      	ldr	r3, [pc, #60]	; (800a4ec <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800a4b0:	2200      	movs	r2, #0
 800a4b2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800a4b4:	f000 f838 	bl	800a528 <_ZN17TypedTextDatabase8getFontsEv>
 800a4b8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800a4ba:	f000 f833 	bl	800a524 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800a4be:	4b0c      	ldr	r3, [pc, #48]	; (800a4f0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800a4c0:	601c      	str	r4, [r3, #0]
        fonts = f;
 800a4c2:	4b0c      	ldr	r3, [pc, #48]	; (800a4f4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800a4c4:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800a4c6:	4b0c      	ldr	r3, [pc, #48]	; (800a4f8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800a4c8:	8018      	strh	r0, [r3, #0]
    }
}
 800a4ca:	e007      	b.n	800a4dc <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800a4cc:	4b0b      	ldr	r3, [pc, #44]	; (800a4fc <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800a4ce:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800a4d0:	4b0b      	ldr	r3, [pc, #44]	; (800a500 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800a4d2:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800a4d4:	4b0b      	ldr	r3, [pc, #44]	; (800a504 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800a4d6:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800a4d8:	2c00      	cmp	r4, #0
 800a4da:	d1e8      	bne.n	800a4ae <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800a4dc:	bd38      	pop	{r3, r4, r5, pc}
 800a4de:	bf00      	nop
 800a4e0:	20002a14 	.word	0x20002a14
 800a4e4:	20002a18 	.word	0x20002a18
 800a4e8:	20002a1c 	.word	0x20002a1c
 800a4ec:	20002a20 	.word	0x20002a20
 800a4f0:	200138ac 	.word	0x200138ac
 800a4f4:	200138b4 	.word	0x200138b4
 800a4f8:	200138b0 	.word	0x200138b0
 800a4fc:	08049bd4 	.word	0x08049bd4
 800a500:	08049a0c 	.word	0x08049a0c
 800a504:	0804a13c 	.word	0x0804a13c

0800a508 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800a508:	4b04      	ldr	r3, [pc, #16]	; (800a51c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800a50a:	681b      	ldr	r3, [r3, #0]
 800a50c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800a510:	4b03      	ldr	r3, [pc, #12]	; (800a520 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800a512:	681b      	ldr	r3, [r3, #0]
}
 800a514:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800a518:	4770      	bx	lr
 800a51a:	bf00      	nop
 800a51c:	20002a1c 	.word	0x20002a1c
 800a520:	20002a18 	.word	0x20002a18

0800a524 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800a524:	2072      	movs	r0, #114	; 0x72
 800a526:	4770      	bx	lr

0800a528 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800a528:	4800      	ldr	r0, [pc, #0]	; (800a52c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800a52a:	4770      	bx	lr
 800a52c:	20002a24 	.word	0x20002a24

0800a530 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800a530:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 800a532:	f7ff febf 	bl	800a2b4 <_Z23getFont_verdana_19_4bppv>
};
 800a536:	4c06      	ldr	r4, [pc, #24]	; (800a550 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 800a538:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800a53a:	f7ff fef9 	bl	800a330 <_Z23getFont_verdana_40_4bppv>
};
 800a53e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 800a540:	f7ff fe3c 	bl	800a1bc <_Z23getFont_verdana_10_4bppv>
};
 800a544:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 800a546:	f7ff fe77 	bl	800a238 <_Z23getFont_verdana_12_4bppv>
};
 800a54a:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 800a54c:	bd10      	pop	{r4, pc}
 800a54e:	bf00      	nop
 800a550:	20002a24 	.word	0x20002a24

0800a554 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 800a554:	4770      	bx	lr

0800a556 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 800a556:	3804      	subs	r0, #4
 800a558:	4770      	bx	lr

0800a55a <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 800a55a:	4770      	bx	lr

0800a55c <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 800a55c:	4770      	bx	lr

0800a55e <_ZN24Calibration_PadPresenterD0Ev>:
 800a55e:	b510      	push	{r4, lr}
 800a560:	2110      	movs	r1, #16
 800a562:	4604      	mov	r4, r0
 800a564:	f022 fa45 	bl	802c9f2 <_ZdlPvj>
 800a568:	4620      	mov	r0, r4
 800a56a:	bd10      	pop	{r4, pc}

0800a56c <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 800a56c:	f1a0 0004 	sub.w	r0, r0, #4
 800a570:	e7f5      	b.n	800a55e <_ZN24Calibration_PadPresenterD0Ev>

0800a572 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 800a572:	4770      	bx	lr

0800a574 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 800a574:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800a576:	2200      	movs	r2, #0
 800a578:	6082      	str	r2, [r0, #8]
    : view(v)
 800a57a:	4a04      	ldr	r2, [pc, #16]	; (800a58c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 800a57c:	60c1      	str	r1, [r0, #12]
 800a57e:	f102 0408 	add.w	r4, r2, #8
 800a582:	3224      	adds	r2, #36	; 0x24
 800a584:	6004      	str	r4, [r0, #0]
 800a586:	6042      	str	r2, [r0, #4]
}
 800a588:	bd10      	pop	{r4, pc}
 800a58a:	bf00      	nop
 800a58c:	08030dc0 	.word	0x08030dc0

0800a590 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 800a590:	4770      	bx	lr

0800a592 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 800a592:	4770      	bx	lr

0800a594 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 800a594:	b510      	push	{r4, lr}
 800a596:	4b03      	ldr	r3, [pc, #12]	; (800a5a4 <_ZN19Calibration_PadViewD1Ev+0x10>)
 800a598:	6003      	str	r3, [r0, #0]
 800a59a:	4604      	mov	r4, r0
 800a59c:	f7f8 ff50 	bl	8003440 <_ZN23Calibration_PadViewBaseD1Ev>
 800a5a0:	4620      	mov	r0, r4
 800a5a2:	bd10      	pop	{r4, pc}
 800a5a4:	08030df8 	.word	0x08030df8

0800a5a8 <_ZN19Calibration_PadViewD0Ev>:
 800a5a8:	b510      	push	{r4, lr}
 800a5aa:	4604      	mov	r4, r0
 800a5ac:	f7ff fff2 	bl	800a594 <_ZN19Calibration_PadViewD1Ev>
 800a5b0:	4620      	mov	r0, r4
 800a5b2:	f641 5104 	movw	r1, #7428	; 0x1d04
 800a5b6:	f022 fa1c 	bl	802c9f2 <_ZdlPvj>
 800a5ba:	4620      	mov	r0, r4
 800a5bc:	bd10      	pop	{r4, pc}
	...

0800a5c0 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 800a5c0:	b510      	push	{r4, lr}
 800a5c2:	4604      	mov	r4, r0
 800a5c4:	f7f9 fae0 	bl	8003b88 <_ZN23Calibration_PadViewBaseC1Ev>
 800a5c8:	4b01      	ldr	r3, [pc, #4]	; (800a5d0 <_ZN19Calibration_PadViewC1Ev+0x10>)
 800a5ca:	6023      	str	r3, [r4, #0]
}
 800a5cc:	4620      	mov	r0, r4
 800a5ce:	bd10      	pop	{r4, pc}
 800a5d0:	08030df8 	.word	0x08030df8

0800a5d4 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 800a5d4:	b570      	push	{r4, r5, r6, lr}
 800a5d6:	4604      	mov	r4, r0
 800a5d8:	b0ca      	sub	sp, #296	; 0x128
 800a5da:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 800a5de:	4631      	mov	r1, r6
 800a5e0:	a80d      	add	r0, sp, #52	; 0x34
 800a5e2:	f7f9 f845 	bl	8003670 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a5e6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800a5ea:	9317      	str	r3, [sp, #92]	; 0x5c
 800a5ec:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800a5f0:	9318      	str	r3, [sp, #96]	; 0x60
 800a5f2:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 800a5f6:	4a57      	ldr	r2, [pc, #348]	; (800a754 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x180>)
 800a5f8:	9319      	str	r3, [sp, #100]	; 0x64
 800a5fa:	f504 718c 	add.w	r1, r4, #280	; 0x118
 800a5fe:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 800a602:	920d      	str	r2, [sp, #52]	; 0x34
 800a604:	a81b      	add	r0, sp, #108	; 0x6c
 800a606:	931a      	str	r3, [sp, #104]	; 0x68
 800a608:	f7f9 f832 	bl	8003670 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a60c:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 800a610:	9325      	str	r3, [sp, #148]	; 0x94
 800a612:	4b51      	ldr	r3, [pc, #324]	; (800a758 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x184>)
 800a614:	931b      	str	r3, [sp, #108]	; 0x6c
 800a616:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 800a61a:	f88d 3098 	strb.w	r3, [sp, #152]	; 0x98
 800a61e:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 800a622:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 800a626:	f8ad 309a 	strh.w	r3, [sp, #154]	; 0x9a
 800a62a:	a827      	add	r0, sp, #156	; 0x9c
 800a62c:	f7f9 f820 	bl	8003670 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a630:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 800a634:	9331      	str	r3, [sp, #196]	; 0xc4
 800a636:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 800a63a:	4b48      	ldr	r3, [pc, #288]	; (800a75c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x188>)
 800a63c:	9327      	str	r3, [sp, #156]	; 0x9c
 800a63e:	a832      	add	r0, sp, #200	; 0xc8
 800a640:	f7f9 f816 	bl	8003670 <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 800a644:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 800a648:	f8ad 30ee 	strh.w	r3, [sp, #238]	; 0xee
 800a64c:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 800a650:	f88d 30f0 	strb.w	r3, [sp, #240]	; 0xf0
 800a654:	4b42      	ldr	r3, [pc, #264]	; (800a760 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x18c>)
 800a656:	9332      	str	r3, [sp, #200]	; 0xc8
 800a658:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 800a65c:	f8ad 30f2 	strh.w	r3, [sp, #242]	; 0xf2
 800a660:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 800a664:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 800a668:	f8ad 30f4 	strh.w	r3, [sp, #244]	; 0xf4
 800a66c:	a83e      	add	r0, sp, #248	; 0xf8
 800a66e:	f7f8 ffff 	bl	8003670 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a672:	4b3c      	ldr	r3, [pc, #240]	; (800a764 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x190>)
 800a674:	933e      	str	r3, [sp, #248]	; 0xf8
 800a676:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 12);

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 800a67a:	4d3b      	ldr	r5, [pc, #236]	; (800a768 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x194>)
 800a67c:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 800a680:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 800a684:	f88d 3120 	strb.w	r3, [sp, #288]	; 0x120
	Flash_Read_Data(0x081E0000, Rx_Data, 12);
 800a688:	a901      	add	r1, sp, #4
 800a68a:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 800a68e:	4837      	ldr	r0, [pc, #220]	; (800a76c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x198>)
 800a690:	f8ad 3124 	strh.w	r3, [sp, #292]	; 0x124
 800a694:	220c      	movs	r2, #12
 800a696:	f7f6 fc11 	bl	8000ebc <Flash_Read_Data>
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 800a69a:	9b01      	ldr	r3, [sp, #4]
 800a69c:	462a      	mov	r2, r5
 800a69e:	210a      	movs	r1, #10
 800a6a0:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 800a6a4:	f011 fa6a 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 800a6a8:	9b02      	ldr	r3, [sp, #8]
 800a6aa:	462a      	mov	r2, r5
 800a6ac:	210a      	movs	r1, #10
 800a6ae:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 800a6b2:	f011 fa63 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 800a6b6:	9b03      	ldr	r3, [sp, #12]
 800a6b8:	462a      	mov	r2, r5
 800a6ba:	210a      	movs	r1, #10
 800a6bc:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 800a6c0:	f011 fa5c 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 800a6c4:	9b04      	ldr	r3, [sp, #16]
 800a6c6:	462a      	mov	r2, r5
 800a6c8:	210a      	movs	r1, #10
 800a6ca:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 800a6ce:	f011 fa55 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 800a6d2:	9b05      	ldr	r3, [sp, #20]
 800a6d4:	462a      	mov	r2, r5
 800a6d6:	210a      	movs	r1, #10
 800a6d8:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 800a6dc:	f011 fa4e 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 800a6e0:	9b06      	ldr	r3, [sp, #24]
 800a6e2:	462a      	mov	r2, r5
 800a6e4:	210a      	movs	r1, #10
 800a6e6:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 800a6ea:	f011 fa47 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	//Left Pad
	Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", Rx_Data[6]);
 800a6ee:	9b07      	ldr	r3, [sp, #28]
 800a6f0:	462a      	mov	r2, r5
 800a6f2:	210a      	movs	r1, #10
 800a6f4:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 800a6f8:	f011 fa40 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", Rx_Data[7]);
 800a6fc:	9b08      	ldr	r3, [sp, #32]
 800a6fe:	462a      	mov	r2, r5
 800a700:	210a      	movs	r1, #10
 800a702:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 800a706:	f011 fa39 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", Rx_Data[8]);
 800a70a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a70c:	462a      	mov	r2, r5
 800a70e:	210a      	movs	r1, #10
 800a710:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 800a714:	f011 fa32 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", Rx_Data[9]);
 800a718:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a71a:	462a      	mov	r2, r5
 800a71c:	210a      	movs	r1, #10
 800a71e:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 800a722:	f011 fa2b 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", Rx_Data[10]);
 800a726:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a728:	462a      	mov	r2, r5
 800a72a:	210a      	movs	r1, #10
 800a72c:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 800a730:	f011 fa24 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", Rx_Data[11]);
 800a734:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a736:	462a      	mov	r2, r5
 800a738:	210a      	movs	r1, #10
 800a73a:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 800a73e:	f011 fa1d 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 800a742:	4630      	mov	r0, r6
 800a744:	f00f f954 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>

#endif
}
 800a748:	a80d      	add	r0, sp, #52	; 0x34
 800a74a:	f008 fa1f 	bl	8012b8c <_ZN8touchgfx14SwipeContainerD1Ev>
 800a74e:	b04a      	add	sp, #296	; 0x128
 800a750:	bd70      	pop	{r4, r5, r6, pc}
 800a752:	bf00      	nop
 800a754:	08031478 	.word	0x08031478
 800a758:	0803153c 	.word	0x0803153c
 800a75c:	0802f38c 	.word	0x0802f38c
 800a760:	08031938 	.word	0x08031938
 800a764:	08031b1c 	.word	0x08031b1c
 800a768:	0802f2ce 	.word	0x0802f2ce
 800a76c:	081e0000 	.word	0x081e0000

0800a770 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 800a770:	f7f8 be26 	b.w	80033c0 <_ZN23Calibration_PadViewBase11setupScreenEv>

0800a774 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800a774:	4770      	bx	lr

0800a776 <_ZN19FrontendApplicationD0Ev>:
 800a776:	b510      	push	{r4, lr}
 800a778:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800a77c:	4604      	mov	r4, r0
 800a77e:	f022 f938 	bl	802c9f2 <_ZdlPvj>
 800a782:	4620      	mov	r0, r4
 800a784:	bd10      	pop	{r4, pc}

0800a786 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800a786:	b510      	push	{r4, lr}
 800a788:	4604      	mov	r4, r0
    {
        model.tick();
 800a78a:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800a78e:	f000 fae3 	bl	800ad58 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800a792:	4620      	mov	r0, r4
    }
 800a794:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800a798:	f00e b906 	b.w	80189a8 <_ZN8touchgfx11Application15handleTickEventEv>

0800a79c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800a79c:	b510      	push	{r4, lr}
 800a79e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800a7a0:	f7fa fde6 	bl	8005370 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800a7a4:	4b01      	ldr	r3, [pc, #4]	; (800a7ac <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800a7a6:	6023      	str	r3, [r4, #0]
{

}
 800a7a8:	4620      	mov	r0, r4
 800a7aa:	bd10      	pop	{r4, pc}
 800a7ac:	08030e38 	.word	0x08030e38

0800a7b0 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 800a7b0:	4770      	bx	lr

0800a7b2 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 800a7b2:	3804      	subs	r0, #4
 800a7b4:	4770      	bx	lr

0800a7b6 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800a7b6:	4770      	bx	lr

0800a7b8 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800a7b8:	68c0      	ldr	r0, [r0, #12]
 800a7ba:	6803      	ldr	r3, [r0, #0]
 800a7bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a7be:	4718      	bx	r3

0800a7c0 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800a7c0:	f1a0 0004 	sub.w	r0, r0, #4
 800a7c4:	f7ff bff8 	b.w	800a7b8 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

0800a7c8 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 800a7c8:	b510      	push	{r4, lr}
 800a7ca:	2110      	movs	r1, #16
 800a7cc:	4604      	mov	r4, r0
 800a7ce:	f022 f910 	bl	802c9f2 <_ZdlPvj>
 800a7d2:	4620      	mov	r0, r4
 800a7d4:	bd10      	pop	{r4, pc}

0800a7d6 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 800a7d6:	f1a0 0004 	sub.w	r0, r0, #4
 800a7da:	e7f5      	b.n	800a7c8 <_ZN18Main_MenuPresenterD0Ev>

0800a7dc <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 800a7dc:	b510      	push	{r4, lr}
 800a7de:	2200      	movs	r2, #0
 800a7e0:	6082      	str	r2, [r0, #8]
    : view(v)
 800a7e2:	4a04      	ldr	r2, [pc, #16]	; (800a7f4 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 800a7e4:	60c1      	str	r1, [r0, #12]
 800a7e6:	f102 0408 	add.w	r4, r2, #8
 800a7ea:	3224      	adds	r2, #36	; 0x24
 800a7ec:	6004      	str	r4, [r0, #0]
 800a7ee:	6042      	str	r2, [r0, #4]
}
 800a7f0:	bd10      	pop	{r4, pc}
 800a7f2:	bf00      	nop
 800a7f4:	08030e84 	.word	0x08030e84

0800a7f8 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 800a7f8:	4770      	bx	lr
	...

0800a7fc <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 800a7fc:	b510      	push	{r4, lr}
 800a7fe:	4b03      	ldr	r3, [pc, #12]	; (800a80c <_ZN13Main_MenuViewD1Ev+0x10>)
 800a800:	6003      	str	r3, [r0, #0]
 800a802:	4604      	mov	r4, r0
 800a804:	f7fb ff2e 	bl	8006664 <_ZN17Main_MenuViewBaseD1Ev>
 800a808:	4620      	mov	r0, r4
 800a80a:	bd10      	pop	{r4, pc}
 800a80c:	08030ebc 	.word	0x08030ebc

0800a810 <_ZN13Main_MenuViewD0Ev>:
 800a810:	b510      	push	{r4, lr}
 800a812:	4604      	mov	r4, r0
 800a814:	f7ff fff2 	bl	800a7fc <_ZN13Main_MenuViewD1Ev>
 800a818:	4620      	mov	r0, r4
 800a81a:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 800a81e:	f022 f8e8 	bl	802c9f2 <_ZdlPvj>
 800a822:	4620      	mov	r0, r4
 800a824:	bd10      	pop	{r4, pc}
	...

0800a828 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 800a828:	b510      	push	{r4, lr}
 800a82a:	4604      	mov	r4, r0
 800a82c:	f7fb ff64 	bl	80066f8 <_ZN17Main_MenuViewBaseC1Ev>
 800a830:	4b01      	ldr	r3, [pc, #4]	; (800a838 <_ZN13Main_MenuViewC1Ev+0x10>)
 800a832:	6023      	str	r3, [r4, #0]
}
 800a834:	4620      	mov	r0, r4
 800a836:	bd10      	pop	{r4, pc}
 800a838:	08030ebc 	.word	0x08030ebc

0800a83c <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 800a83c:	f7fb beee 	b.w	800661c <_ZN17Main_MenuViewBase11setupScreenEv>

0800a840 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 800a840:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800a842:	4a0a      	ldr	r2, [pc, #40]	; (800a86c <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 800a844:	4605      	mov	r5, r0
 800a846:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800a848:	460b      	mov	r3, r1
 800a84a:	f500 7076 	add.w	r0, r0, #984	; 0x3d8
 800a84e:	2104      	movs	r1, #4
 800a850:	f011 f994 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800a854:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800a858:	f00f f8ca 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800a85c:	b92c      	cbnz	r4, 800a86a <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 800a85e:	f00d ffdf 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800a862:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800a866:	f7fa be83 	b.w	8005570 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800a86a:	bd38      	pop	{r3, r4, r5, pc}
 800a86c:	0802f2ce 	.word	0x0802f2ce

0800a870 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 800a870:	4770      	bx	lr

0800a872 <_ZThn4_N20MeasurementPresenterD1Ev>:
 800a872:	3804      	subs	r0, #4
 800a874:	4770      	bx	lr

0800a876 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 800a876:	4770      	bx	lr

0800a878 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800a878:	68c0      	ldr	r0, [r0, #12]
 800a87a:	6803      	ldr	r3, [r0, #0]
 800a87c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a87e:	4718      	bx	r3

0800a880 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800a880:	f1a0 0004 	sub.w	r0, r0, #4
 800a884:	f7ff bff8 	b.w	800a878 <_ZN20MeasurementPresenter15setTimeoutValueEi>

0800a888 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 800a888:	b510      	push	{r4, lr}
 800a88a:	2110      	movs	r1, #16
 800a88c:	4604      	mov	r4, r0
 800a88e:	f022 f8b0 	bl	802c9f2 <_ZdlPvj>
 800a892:	4620      	mov	r0, r4
 800a894:	bd10      	pop	{r4, pc}

0800a896 <_ZThn4_N20MeasurementPresenterD0Ev>:
 800a896:	f1a0 0004 	sub.w	r0, r0, #4
 800a89a:	e7f5      	b.n	800a888 <_ZN20MeasurementPresenterD0Ev>

0800a89c <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 800a89c:	b510      	push	{r4, lr}
 800a89e:	2200      	movs	r2, #0
 800a8a0:	6082      	str	r2, [r0, #8]
    : view(v)
 800a8a2:	4a04      	ldr	r2, [pc, #16]	; (800a8b4 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 800a8a4:	60c1      	str	r1, [r0, #12]
 800a8a6:	f102 0408 	add.w	r4, r2, #8
 800a8aa:	3224      	adds	r2, #36	; 0x24
 800a8ac:	6004      	str	r4, [r0, #0]
 800a8ae:	6042      	str	r2, [r0, #4]
}
 800a8b0:	bd10      	pop	{r4, pc}
 800a8b2:	bf00      	nop
 800a8b4:	08030eec 	.word	0x08030eec

0800a8b8 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 800a8b8:	4770      	bx	lr
	...

0800a8bc <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 800a8bc:	b510      	push	{r4, lr}
 800a8be:	4b03      	ldr	r3, [pc, #12]	; (800a8cc <_ZN15MeasurementViewD1Ev+0x10>)
 800a8c0:	6003      	str	r3, [r0, #0]
 800a8c2:	4604      	mov	r4, r0
 800a8c4:	f7fc f9d6 	bl	8006c74 <_ZN19MeasurementViewBaseD1Ev>
 800a8c8:	4620      	mov	r0, r4
 800a8ca:	bd10      	pop	{r4, pc}
 800a8cc:	08030f24 	.word	0x08030f24

0800a8d0 <_ZN15MeasurementViewD0Ev>:
 800a8d0:	b510      	push	{r4, lr}
 800a8d2:	4604      	mov	r4, r0
 800a8d4:	f7ff fff2 	bl	800a8bc <_ZN15MeasurementViewD1Ev>
 800a8d8:	4620      	mov	r0, r4
 800a8da:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800a8de:	f022 f888 	bl	802c9f2 <_ZdlPvj>
 800a8e2:	4620      	mov	r0, r4
 800a8e4:	bd10      	pop	{r4, pc}
	...

0800a8e8 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 800a8e8:	b510      	push	{r4, lr}
 800a8ea:	4604      	mov	r4, r0
 800a8ec:	f7fc f9fc 	bl	8006ce8 <_ZN19MeasurementViewBaseC1Ev>
 800a8f0:	4b01      	ldr	r3, [pc, #4]	; (800a8f8 <_ZN15MeasurementViewC1Ev+0x10>)
 800a8f2:	6023      	str	r3, [r4, #0]
}
 800a8f4:	4620      	mov	r0, r4
 800a8f6:	bd10      	pop	{r4, pc}
 800a8f8:	08030f24 	.word	0x08030f24

0800a8fc <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 800a8fc:	f7fc b996 	b.w	8006c2c <_ZN19MeasurementViewBase11setupScreenEv>

0800a900 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 800a900:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800a902:	4a0a      	ldr	r2, [pc, #40]	; (800a92c <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 800a904:	4605      	mov	r5, r0
 800a906:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800a908:	460b      	mov	r3, r1
 800a90a:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800a90e:	2104      	movs	r1, #4
 800a910:	f011 f934 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800a914:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800a918:	f00f f86a 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800a91c:	b92c      	cbnz	r4, 800a92a <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 800a91e:	f00d ff7f 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800a922:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800a926:	f7fa be23 	b.w	8005570 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800a92a:	bd38      	pop	{r3, r4, r5, pc}
 800a92c:	0802f2ce 	.word	0x0802f2ce

0800a930 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 800a930:	4770      	bx	lr

0800a932 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 800a932:	3804      	subs	r0, #4
 800a934:	4770      	bx	lr

0800a936 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 800a936:	4770      	bx	lr

0800a938 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800a938:	68c0      	ldr	r0, [r0, #12]
 800a93a:	6803      	ldr	r3, [r0, #0]
 800a93c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a93e:	4718      	bx	r3

0800a940 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800a940:	f1a0 0004 	sub.w	r0, r0, #4
 800a944:	f7ff bff8 	b.w	800a938 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

0800a948 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 800a948:	b510      	push	{r4, lr}
 800a94a:	2110      	movs	r1, #16
 800a94c:	4604      	mov	r4, r0
 800a94e:	f022 f850 	bl	802c9f2 <_ZdlPvj>
 800a952:	4620      	mov	r0, r4
 800a954:	bd10      	pop	{r4, pc}

0800a956 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 800a956:	f1a0 0004 	sub.w	r0, r0, #4
 800a95a:	e7f5      	b.n	800a948 <_ZN29Measurement_AccuratePresenterD0Ev>

0800a95c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 800a95c:	b510      	push	{r4, lr}
 800a95e:	2200      	movs	r2, #0
 800a960:	6082      	str	r2, [r0, #8]
    : view(v)
 800a962:	4a04      	ldr	r2, [pc, #16]	; (800a974 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 800a964:	60c1      	str	r1, [r0, #12]
 800a966:	f102 0408 	add.w	r4, r2, #8
 800a96a:	3224      	adds	r2, #36	; 0x24
 800a96c:	6004      	str	r4, [r0, #0]
 800a96e:	6042      	str	r2, [r0, #4]
}
 800a970:	bd10      	pop	{r4, pc}
 800a972:	bf00      	nop
 800a974:	08030f54 	.word	0x08030f54

0800a978 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 800a978:	4770      	bx	lr
	...

0800a97c <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 800a97c:	b510      	push	{r4, lr}
 800a97e:	4b03      	ldr	r3, [pc, #12]	; (800a98c <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 800a980:	6003      	str	r3, [r0, #0]
 800a982:	4604      	mov	r4, r0
 800a984:	f7fc fc3e 	bl	8007204 <_ZN28Measurement_AccurateViewBaseD1Ev>
 800a988:	4620      	mov	r0, r4
 800a98a:	bd10      	pop	{r4, pc}
 800a98c:	08030f8c 	.word	0x08030f8c

0800a990 <_ZN24Measurement_AccurateViewD0Ev>:
 800a990:	b510      	push	{r4, lr}
 800a992:	4604      	mov	r4, r0
 800a994:	f7ff fff2 	bl	800a97c <_ZN24Measurement_AccurateViewD1Ev>
 800a998:	4620      	mov	r0, r4
 800a99a:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800a99e:	f022 f828 	bl	802c9f2 <_ZdlPvj>
 800a9a2:	4620      	mov	r0, r4
 800a9a4:	bd10      	pop	{r4, pc}
	...

0800a9a8 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 800a9a8:	b510      	push	{r4, lr}
 800a9aa:	4604      	mov	r4, r0
 800a9ac:	f7fc fc64 	bl	8007278 <_ZN28Measurement_AccurateViewBaseC1Ev>
 800a9b0:	4b01      	ldr	r3, [pc, #4]	; (800a9b8 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 800a9b2:	6023      	str	r3, [r4, #0]
}
 800a9b4:	4620      	mov	r0, r4
 800a9b6:	bd10      	pop	{r4, pc}
 800a9b8:	08030f8c 	.word	0x08030f8c

0800a9bc <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 800a9bc:	f7fc bbfe 	b.w	80071bc <_ZN28Measurement_AccurateViewBase11setupScreenEv>

0800a9c0 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 800a9c0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800a9c2:	4a0a      	ldr	r2, [pc, #40]	; (800a9ec <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 800a9c4:	4605      	mov	r5, r0
 800a9c6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800a9c8:	460b      	mov	r3, r1
 800a9ca:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800a9ce:	2104      	movs	r1, #4
 800a9d0:	f011 f8d4 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800a9d4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800a9d8:	f00f f80a 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800a9dc:	b92c      	cbnz	r4, 800a9ea <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 800a9de:	f00d ff1f 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800a9e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800a9e6:	f7fa bdc3 	b.w	8005570 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800a9ea:	bd38      	pop	{r3, r4, r5, pc}
 800a9ec:	0802f2ce 	.word	0x0802f2ce

0800a9f0 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 800a9f0:	4770      	bx	lr

0800a9f2 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 800a9f2:	3804      	subs	r0, #4
 800a9f4:	4770      	bx	lr

0800a9f6 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800a9f6:	4770      	bx	lr

0800a9f8 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 800a9f8:	4770      	bx	lr

0800a9fa <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800a9fa:	b510      	push	{r4, lr}
 800a9fc:	2110      	movs	r1, #16
 800a9fe:	4604      	mov	r4, r0
 800aa00:	f021 fff7 	bl	802c9f2 <_ZdlPvj>
 800aa04:	4620      	mov	r0, r4
 800aa06:	bd10      	pop	{r4, pc}

0800aa08 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 800aa08:	f1a0 0004 	sub.w	r0, r0, #4
 800aa0c:	e7f5      	b.n	800a9fa <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

0800aa0e <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 800aa0e:	4770      	bx	lr

0800aa10 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 800aa10:	b510      	push	{r4, lr}
 800aa12:	2200      	movs	r2, #0
 800aa14:	6082      	str	r2, [r0, #8]
    : view(v)
 800aa16:	4a04      	ldr	r2, [pc, #16]	; (800aa28 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 800aa18:	60c1      	str	r1, [r0, #12]
 800aa1a:	f102 0408 	add.w	r4, r2, #8
 800aa1e:	3224      	adds	r2, #36	; 0x24
 800aa20:	6004      	str	r4, [r0, #0]
 800aa22:	6042      	str	r2, [r0, #4]
}
 800aa24:	bd10      	pop	{r4, pc}
 800aa26:	bf00      	nop
 800aa28:	08030fbc 	.word	0x08030fbc

0800aa2c <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 800aa2c:	4770      	bx	lr
	...

0800aa30 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 800aa30:	b510      	push	{r4, lr}
 800aa32:	4b03      	ldr	r3, [pc, #12]	; (800aa40 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 800aa34:	6003      	str	r3, [r0, #0]
 800aa36:	4604      	mov	r4, r0
 800aa38:	f7fc feac 	bl	8007794 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 800aa3c:	4620      	mov	r0, r4
 800aa3e:	bd10      	pop	{r4, pc}
 800aa40:	08030ff4 	.word	0x08030ff4

0800aa44 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 800aa44:	b510      	push	{r4, lr}
 800aa46:	4604      	mov	r4, r0
 800aa48:	f7ff fff2 	bl	800aa30 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 800aa4c:	4620      	mov	r0, r4
 800aa4e:	f241 4178 	movw	r1, #5240	; 0x1478
 800aa52:	f021 ffce 	bl	802c9f2 <_ZdlPvj>
 800aa56:	4620      	mov	r0, r4
 800aa58:	bd10      	pop	{r4, pc}
	...

0800aa5c <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 800aa5c:	b510      	push	{r4, lr}
 800aa5e:	4604      	mov	r4, r0
 800aa60:	f7fc fec0 	bl	80077e4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 800aa64:	4b01      	ldr	r3, [pc, #4]	; (800aa6c <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 800aa66:	6023      	str	r3, [r4, #0]
}
 800aa68:	4620      	mov	r0, r4
 800aa6a:	bd10      	pop	{r4, pc}
 800aa6c:	08030ff4 	.word	0x08030ff4

0800aa70 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 800aa70:	f7fc be6c 	b.w	800774c <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

0800aa74 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 800aa74:	4770      	bx	lr

0800aa76 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800aa76:	3804      	subs	r0, #4
 800aa78:	4770      	bx	lr

0800aa7a <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 800aa7a:	4770      	bx	lr

0800aa7c <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 800aa7c:	4770      	bx	lr

0800aa7e <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 800aa7e:	b510      	push	{r4, lr}
 800aa80:	2110      	movs	r1, #16
 800aa82:	4604      	mov	r4, r0
 800aa84:	f021 ffb5 	bl	802c9f2 <_ZdlPvj>
 800aa88:	4620      	mov	r0, r4
 800aa8a:	bd10      	pop	{r4, pc}

0800aa8c <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 800aa8c:	f1a0 0004 	sub.w	r0, r0, #4
 800aa90:	e7f5      	b.n	800aa7e <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

0800aa92 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 800aa92:	4770      	bx	lr

0800aa94 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 800aa94:	b510      	push	{r4, lr}
 800aa96:	2200      	movs	r2, #0
 800aa98:	6082      	str	r2, [r0, #8]
    : view(v)
 800aa9a:	4a04      	ldr	r2, [pc, #16]	; (800aaac <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 800aa9c:	60c1      	str	r1, [r0, #12]
 800aa9e:	f102 0408 	add.w	r4, r2, #8
 800aaa2:	3224      	adds	r2, #36	; 0x24
 800aaa4:	6004      	str	r4, [r0, #0]
 800aaa6:	6042      	str	r2, [r0, #4]
}
 800aaa8:	bd10      	pop	{r4, pc}
 800aaaa:	bf00      	nop
 800aaac:	08031020 	.word	0x08031020

0800aab0 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 800aab0:	4770      	bx	lr
	...

0800aab4 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 800aab4:	b510      	push	{r4, lr}
 800aab6:	4b03      	ldr	r3, [pc, #12]	; (800aac4 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 800aab8:	6003      	str	r3, [r0, #0]
 800aaba:	4604      	mov	r4, r0
 800aabc:	f7fd fa42 	bl	8007f44 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800aac0:	4620      	mov	r0, r4
 800aac2:	bd10      	pop	{r4, pc}
 800aac4:	08031058 	.word	0x08031058

0800aac8 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 800aac8:	b510      	push	{r4, lr}
 800aaca:	4604      	mov	r4, r0
 800aacc:	f7ff fff2 	bl	800aab4 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 800aad0:	4620      	mov	r0, r4
 800aad2:	f241 4178 	movw	r1, #5240	; 0x1478
 800aad6:	f021 ff8c 	bl	802c9f2 <_ZdlPvj>
 800aada:	4620      	mov	r0, r4
 800aadc:	bd10      	pop	{r4, pc}
	...

0800aae0 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 800aae0:	b510      	push	{r4, lr}
 800aae2:	4604      	mov	r4, r0
 800aae4:	f7fd fa56 	bl	8007f94 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 800aae8:	4b01      	ldr	r3, [pc, #4]	; (800aaf0 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 800aaea:	6023      	str	r3, [r4, #0]
}
 800aaec:	4620      	mov	r0, r4
 800aaee:	bd10      	pop	{r4, pc}
 800aaf0:	08031058 	.word	0x08031058

0800aaf4 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 800aaf4:	f7fd ba02 	b.w	8007efc <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

0800aaf8 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 800aaf8:	4770      	bx	lr

0800aafa <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800aafa:	3804      	subs	r0, #4
 800aafc:	4770      	bx	lr

0800aafe <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 800aafe:	4770      	bx	lr

0800ab00 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800ab00:	68c0      	ldr	r0, [r0, #12]
 800ab02:	6803      	ldr	r3, [r0, #0]
 800ab04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ab06:	4718      	bx	r3

0800ab08 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800ab08:	f1a0 0004 	sub.w	r0, r0, #4
 800ab0c:	f7ff bff8 	b.w	800ab00 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

0800ab10 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 800ab10:	b510      	push	{r4, lr}
 800ab12:	2110      	movs	r1, #16
 800ab14:	4604      	mov	r4, r0
 800ab16:	f021 ff6c 	bl	802c9f2 <_ZdlPvj>
 800ab1a:	4620      	mov	r0, r4
 800ab1c:	bd10      	pop	{r4, pc}

0800ab1e <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800ab1e:	f1a0 0004 	sub.w	r0, r0, #4
 800ab22:	e7f5      	b.n	800ab10 <_ZN27Measurement_SinglePresenterD0Ev>

0800ab24 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 800ab24:	b510      	push	{r4, lr}
 800ab26:	2200      	movs	r2, #0
 800ab28:	6082      	str	r2, [r0, #8]
    : view(v)
 800ab2a:	4a04      	ldr	r2, [pc, #16]	; (800ab3c <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 800ab2c:	60c1      	str	r1, [r0, #12]
 800ab2e:	f102 0408 	add.w	r4, r2, #8
 800ab32:	3224      	adds	r2, #36	; 0x24
 800ab34:	6004      	str	r4, [r0, #0]
 800ab36:	6042      	str	r2, [r0, #4]
}
 800ab38:	bd10      	pop	{r4, pc}
 800ab3a:	bf00      	nop
 800ab3c:	08031084 	.word	0x08031084

0800ab40 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 800ab40:	4770      	bx	lr
	...

0800ab44 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 800ab44:	b510      	push	{r4, lr}
 800ab46:	4b03      	ldr	r3, [pc, #12]	; (800ab54 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800ab48:	6003      	str	r3, [r0, #0]
 800ab4a:	4604      	mov	r4, r0
 800ab4c:	f7fd fdd0 	bl	80086f0 <_ZN26Measurement_SingleViewBaseD1Ev>
 800ab50:	4620      	mov	r0, r4
 800ab52:	bd10      	pop	{r4, pc}
 800ab54:	080310bc 	.word	0x080310bc

0800ab58 <_ZN22Measurement_SingleViewD0Ev>:
 800ab58:	b510      	push	{r4, lr}
 800ab5a:	4604      	mov	r4, r0
 800ab5c:	f7ff fff2 	bl	800ab44 <_ZN22Measurement_SingleViewD1Ev>
 800ab60:	4620      	mov	r0, r4
 800ab62:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800ab66:	f021 ff44 	bl	802c9f2 <_ZdlPvj>
 800ab6a:	4620      	mov	r0, r4
 800ab6c:	bd10      	pop	{r4, pc}
	...

0800ab70 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 800ab70:	b510      	push	{r4, lr}
 800ab72:	4604      	mov	r4, r0
 800ab74:	f7fd fdf6 	bl	8008764 <_ZN26Measurement_SingleViewBaseC1Ev>
 800ab78:	4b01      	ldr	r3, [pc, #4]	; (800ab80 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800ab7a:	6023      	str	r3, [r4, #0]
}
 800ab7c:	4620      	mov	r0, r4
 800ab7e:	bd10      	pop	{r4, pc}
 800ab80:	080310bc 	.word	0x080310bc

0800ab84 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 800ab84:	f7fd bd90 	b.w	80086a8 <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800ab88 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 800ab88:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ab8a:	4a0a      	ldr	r2, [pc, #40]	; (800abb4 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 800ab8c:	4605      	mov	r5, r0
 800ab8e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ab90:	460b      	mov	r3, r1
 800ab92:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800ab96:	2104      	movs	r1, #4
 800ab98:	f010 fff0 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800ab9c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800aba0:	f00e ff26 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800aba4:	b92c      	cbnz	r4, 800abb2 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 800aba6:	f00d fe3b 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800abaa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800abae:	f7fa bcdf 	b.w	8005570 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800abb2:	bd38      	pop	{r3, r4, r5, pc}
 800abb4:	0802f2ce 	.word	0x0802f2ce

0800abb8 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 800abb8:	4770      	bx	lr

0800abba <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 800abba:	3804      	subs	r0, #4
 800abbc:	4770      	bx	lr

0800abbe <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 800abbe:	4770      	bx	lr

0800abc0 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 800abc0:	4770      	bx	lr

0800abc2 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 800abc2:	b510      	push	{r4, lr}
 800abc4:	2110      	movs	r1, #16
 800abc6:	4604      	mov	r4, r0
 800abc8:	f021 ff13 	bl	802c9f2 <_ZdlPvj>
 800abcc:	4620      	mov	r0, r4
 800abce:	bd10      	pop	{r4, pc}

0800abd0 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 800abd0:	f1a0 0004 	sub.w	r0, r0, #4
 800abd4:	e7f5      	b.n	800abc2 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

0800abd6 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 800abd6:	4770      	bx	lr

0800abd8 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 800abd8:	b510      	push	{r4, lr}
 800abda:	2200      	movs	r2, #0
 800abdc:	6082      	str	r2, [r0, #8]
    : view(v)
 800abde:	4a04      	ldr	r2, [pc, #16]	; (800abf0 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 800abe0:	60c1      	str	r1, [r0, #12]
 800abe2:	f102 0408 	add.w	r4, r2, #8
 800abe6:	3224      	adds	r2, #36	; 0x24
 800abe8:	6004      	str	r4, [r0, #0]
 800abea:	6042      	str	r2, [r0, #4]
}
 800abec:	bd10      	pop	{r4, pc}
 800abee:	bf00      	nop
 800abf0:	080310ec 	.word	0x080310ec

0800abf4 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 800abf4:	4770      	bx	lr
	...

0800abf8 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 800abf8:	b510      	push	{r4, lr}
 800abfa:	4b03      	ldr	r3, [pc, #12]	; (800ac08 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 800abfc:	6003      	str	r3, [r0, #0]
 800abfe:	4604      	mov	r4, r0
 800ac00:	f7fe f840 	bl	8008c84 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 800ac04:	4620      	mov	r0, r4
 800ac06:	bd10      	pop	{r4, pc}
 800ac08:	0803112c 	.word	0x0803112c

0800ac0c <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 800ac0c:	b510      	push	{r4, lr}
 800ac0e:	4604      	mov	r4, r0
 800ac10:	f7ff fff2 	bl	800abf8 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 800ac14:	4620      	mov	r0, r4
 800ac16:	f241 417c 	movw	r1, #5244	; 0x147c
 800ac1a:	f021 feea 	bl	802c9f2 <_ZdlPvj>
 800ac1e:	4620      	mov	r0, r4
 800ac20:	bd10      	pop	{r4, pc}
	...

0800ac24 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 800ac24:	b510      	push	{r4, lr}
 800ac26:	4604      	mov	r4, r0
 800ac28:	f7fe f864 	bl	8008cf4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 800ac2c:	4b01      	ldr	r3, [pc, #4]	; (800ac34 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800ac2e:	6023      	str	r3, [r4, #0]
}
 800ac30:	4620      	mov	r0, r4
 800ac32:	bd10      	pop	{r4, pc}
 800ac34:	0803112c 	.word	0x0803112c

0800ac38 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800ac38:	f7fd bfff 	b.w	8008c3a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

0800ac3c <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 800ac3c:	b510      	push	{r4, lr}
 800ac3e:	b088      	sub	sp, #32
 800ac40:	4604      	mov	r4, r0
#ifndef SIMULATOR

	// Start measurement
	uint32_t* Samples = MEAS_start_measure();
 800ac42:	f7f7 f9cd 	bl	8001fe0 <MEAS_start_measure>

	// calculate single measurement values
	SINGLE_MEAS single_meas = single_measurement(Samples);
 800ac46:	f7f6 fabb 	bl	80011c0 <single_measurement>

	//update GUI values
	//set gauge angle
	SMD1_Gauge.setValue(single_meas.angle);
 800ac4a:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 800ac4e:	f504 7027 	add.w	r0, r4, #668	; 0x29c
 800ac52:	ee17 1a90 	vmov	r1, s15
	SINGLE_MEAS single_meas = single_measurement(Samples);
 800ac56:	ed8d 0a04 	vstr	s0, [sp, #16]
 800ac5a:	ed8d 1a06 	vstr	s2, [sp, #24]
	SMD1_Gauge.setValue(single_meas.angle);
 800ac5e:	9001      	str	r0, [sp, #4]
 800ac60:	f00a fe7c 	bl	801595c <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_Gauge.invalidate();
 800ac64:	9801      	ldr	r0, [sp, #4]
 800ac66:	f00e fec3 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintfFloat(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%.2f", 420.69);
 800ac6a:	4b15      	ldr	r3, [pc, #84]	; (800acc0 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x84>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800ac6c:	4a15      	ldr	r2, [pc, #84]	; (800acc4 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 800ac6e:	9303      	str	r3, [sp, #12]
 800ac70:	210a      	movs	r1, #10
 800ac72:	ab03      	add	r3, sp, #12
 800ac74:	f204 601c 	addw	r0, r4, #1564	; 0x61c
 800ac78:	f011 f96c 	bl	801bf54 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Current.invalidate();
 800ac7c:	f504 70dc 	add.w	r0, r4, #440	; 0x1b8
 800ac80:	f00e feb6 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", single_meas.frequency);
 800ac84:	9b06      	ldr	r3, [sp, #24]
 800ac86:	4a0f      	ldr	r2, [pc, #60]	; (800acc4 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 800ac88:	9303      	str	r3, [sp, #12]
 800ac8a:	210a      	movs	r1, #10
 800ac8c:	ab03      	add	r3, sp, #12
 800ac8e:	f504 60c6 	add.w	r0, r4, #1584	; 0x630
 800ac92:	f011 f95f 	bl	801bf54 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 800ac96:	f504 7001 	add.w	r0, r4, #516	; 0x204
 800ac9a:	f00e fea9 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", single_meas.distance);
 800ac9e:	9b04      	ldr	r3, [sp, #16]
 800aca0:	9303      	str	r3, [sp, #12]
 800aca2:	4a08      	ldr	r2, [pc, #32]	; (800acc4 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 800aca4:	ab03      	add	r3, sp, #12
 800aca6:	210a      	movs	r1, #10
 800aca8:	f204 6044 	addw	r0, r4, #1604	; 0x644
 800acac:	f011 f952 	bl	801bf54 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 800acb0:	f504 7014 	add.w	r0, r4, #592	; 0x250

#endif
}
 800acb4:	b008      	add	sp, #32
 800acb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	SMD1_Distance.invalidate();
 800acba:	f00e be99 	b.w	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>
 800acbe:	bf00      	nop
 800acc0:	43d25852 	.word	0x43d25852
 800acc4:	0803111c 	.word	0x0803111c

0800acc8 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 800acc8:	4770      	bx	lr

0800acca <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 800acca:	3804      	subs	r0, #4
 800accc:	4770      	bx	lr

0800acce <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 800acce:	4770      	bx	lr

0800acd0 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 800acd0:	4770      	bx	lr

0800acd2 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 800acd2:	b510      	push	{r4, lr}
 800acd4:	2110      	movs	r1, #16
 800acd6:	4604      	mov	r4, r0
 800acd8:	f021 fe8b 	bl	802c9f2 <_ZdlPvj>
 800acdc:	4620      	mov	r0, r4
 800acde:	bd10      	pop	{r4, pc}

0800ace0 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 800ace0:	f1a0 0004 	sub.w	r0, r0, #4
 800ace4:	e7f5      	b.n	800acd2 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800ace6 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800ace6:	4770      	bx	lr

0800ace8 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 800ace8:	b510      	push	{r4, lr}
 800acea:	2200      	movs	r2, #0
 800acec:	6082      	str	r2, [r0, #8]
    : view(v)
 800acee:	4a04      	ldr	r2, [pc, #16]	; (800ad00 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 800acf0:	60c1      	str	r1, [r0, #12]
 800acf2:	f102 0408 	add.w	r4, r2, #8
 800acf6:	3224      	adds	r2, #36	; 0x24
 800acf8:	6004      	str	r4, [r0, #0]
 800acfa:	6042      	str	r2, [r0, #4]
}
 800acfc:	bd10      	pop	{r4, pc}
 800acfe:	bf00      	nop
 800ad00:	0803115c 	.word	0x0803115c

0800ad04 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 800ad04:	4770      	bx	lr
	...

0800ad08 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 800ad08:	b510      	push	{r4, lr}
 800ad0a:	4b03      	ldr	r3, [pc, #12]	; (800ad18 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 800ad0c:	6003      	str	r3, [r0, #0]
 800ad0e:	4604      	mov	r4, r0
 800ad10:	f7fe fb9c 	bl	800944c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800ad14:	4620      	mov	r0, r4
 800ad16:	bd10      	pop	{r4, pc}
 800ad18:	08031194 	.word	0x08031194

0800ad1c <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 800ad1c:	b510      	push	{r4, lr}
 800ad1e:	4604      	mov	r4, r0
 800ad20:	f7ff fff2 	bl	800ad08 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 800ad24:	4620      	mov	r0, r4
 800ad26:	f241 4178 	movw	r1, #5240	; 0x1478
 800ad2a:	f021 fe62 	bl	802c9f2 <_ZdlPvj>
 800ad2e:	4620      	mov	r0, r4
 800ad30:	bd10      	pop	{r4, pc}
	...

0800ad34 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 800ad34:	b510      	push	{r4, lr}
 800ad36:	4604      	mov	r4, r0
 800ad38:	f7fe fbb0 	bl	800949c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 800ad3c:	4b01      	ldr	r3, [pc, #4]	; (800ad44 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 800ad3e:	6023      	str	r3, [r4, #0]
}
 800ad40:	4620      	mov	r0, r4
 800ad42:	bd10      	pop	{r4, pc}
 800ad44:	08031194 	.word	0x08031194

0800ad48 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 800ad48:	f7fe bb5c 	b.w	8009404 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

0800ad4c <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 800ad4c:	2100      	movs	r1, #0
 800ad4e:	223c      	movs	r2, #60	; 0x3c
 800ad50:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 800ad54:	4770      	bx	lr
	...

0800ad58 <_ZN5Model4tickEv>:

void Model::tick()
{
 800ad58:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800ad5a:	4d0a      	ldr	r5, [pc, #40]	; (800ad84 <_ZN5Model4tickEv+0x2c>)
{
 800ad5c:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800ad5e:	6828      	ldr	r0, [r5, #0]
 800ad60:	f004 fe80 	bl	800fa64 <osMessageQueueGetCount>
 800ad64:	b168      	cbz	r0, 800ad82 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 800ad66:	2300      	movs	r3, #0
 800ad68:	6828      	ldr	r0, [r5, #0]
 800ad6a:	461a      	mov	r2, r3
 800ad6c:	1d21      	adds	r1, r4, #4
 800ad6e:	f004 fe45 	bl	800f9fc <osMessageQueueGet>
 800ad72:	b930      	cbnz	r0, 800ad82 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 800ad74:	6820      	ldr	r0, [r4, #0]
 800ad76:	6861      	ldr	r1, [r4, #4]
 800ad78:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 800ad7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 800ad7e:	689b      	ldr	r3, [r3, #8]
 800ad80:	4718      	bx	r3
}
 800ad82:	bd70      	pop	{r4, r5, r6, pc}
 800ad84:	200001f0 	.word	0x200001f0

0800ad88 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 800ad88:	4770      	bx	lr

0800ad8a <_ZThn4_N21Project_InfoPresenterD1Ev>:
 800ad8a:	3804      	subs	r0, #4
 800ad8c:	4770      	bx	lr

0800ad8e <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 800ad8e:	4770      	bx	lr

0800ad90 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800ad90:	68c0      	ldr	r0, [r0, #12]
 800ad92:	6803      	ldr	r3, [r0, #0]
 800ad94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ad96:	4718      	bx	r3

0800ad98 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800ad98:	f1a0 0004 	sub.w	r0, r0, #4
 800ad9c:	f7ff bff8 	b.w	800ad90 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

0800ada0 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 800ada0:	b510      	push	{r4, lr}
 800ada2:	2110      	movs	r1, #16
 800ada4:	4604      	mov	r4, r0
 800ada6:	f021 fe24 	bl	802c9f2 <_ZdlPvj>
 800adaa:	4620      	mov	r0, r4
 800adac:	bd10      	pop	{r4, pc}

0800adae <_ZThn4_N21Project_InfoPresenterD0Ev>:
 800adae:	f1a0 0004 	sub.w	r0, r0, #4
 800adb2:	e7f5      	b.n	800ada0 <_ZN21Project_InfoPresenterD0Ev>

0800adb4 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 800adb4:	b510      	push	{r4, lr}
 800adb6:	2200      	movs	r2, #0
 800adb8:	6082      	str	r2, [r0, #8]
    : view(v)
 800adba:	4a04      	ldr	r2, [pc, #16]	; (800adcc <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 800adbc:	60c1      	str	r1, [r0, #12]
 800adbe:	f102 0408 	add.w	r4, r2, #8
 800adc2:	3224      	adds	r2, #36	; 0x24
 800adc4:	6004      	str	r4, [r0, #0]
 800adc6:	6042      	str	r2, [r0, #4]
}
 800adc8:	bd10      	pop	{r4, pc}
 800adca:	bf00      	nop
 800adcc:	080311c0 	.word	0x080311c0

0800add0 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 800add0:	4770      	bx	lr
	...

0800add4 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 800add4:	b510      	push	{r4, lr}
 800add6:	4b03      	ldr	r3, [pc, #12]	; (800ade4 <_ZN16Project_InfoViewD1Ev+0x10>)
 800add8:	6003      	str	r3, [r0, #0]
 800adda:	4604      	mov	r4, r0
 800addc:	f7fe ff06 	bl	8009bec <_ZN20Project_InfoViewBaseD1Ev>
 800ade0:	4620      	mov	r0, r4
 800ade2:	bd10      	pop	{r4, pc}
 800ade4:	080311f8 	.word	0x080311f8

0800ade8 <_ZN16Project_InfoViewD0Ev>:
 800ade8:	b510      	push	{r4, lr}
 800adea:	4604      	mov	r4, r0
 800adec:	f7ff fff2 	bl	800add4 <_ZN16Project_InfoViewD1Ev>
 800adf0:	4620      	mov	r0, r4
 800adf2:	f241 117c 	movw	r1, #4476	; 0x117c
 800adf6:	f021 fdfc 	bl	802c9f2 <_ZdlPvj>
 800adfa:	4620      	mov	r0, r4
 800adfc:	bd10      	pop	{r4, pc}
	...

0800ae00 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 800ae00:	b510      	push	{r4, lr}
 800ae02:	4604      	mov	r4, r0
 800ae04:	f7fe ff1a 	bl	8009c3c <_ZN20Project_InfoViewBaseC1Ev>
 800ae08:	4b01      	ldr	r3, [pc, #4]	; (800ae10 <_ZN16Project_InfoViewC1Ev+0x10>)
 800ae0a:	6023      	str	r3, [r4, #0]
}
 800ae0c:	4620      	mov	r0, r4
 800ae0e:	bd10      	pop	{r4, pc}
 800ae10:	080311f8 	.word	0x080311f8

0800ae14 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 800ae14:	f7fe bec6 	b.w	8009ba4 <_ZN20Project_InfoViewBase11setupScreenEv>

0800ae18 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 800ae18:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ae1a:	4a0a      	ldr	r2, [pc, #40]	; (800ae44 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 800ae1c:	4605      	mov	r5, r0
 800ae1e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ae20:	460b      	mov	r3, r1
 800ae22:	f500 7055 	add.w	r0, r0, #852	; 0x354
 800ae26:	2104      	movs	r1, #4
 800ae28:	f010 fea8 	bl	801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800ae2c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800ae30:	f00e fdde 	bl	80199f0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 800ae34:	b92c      	cbnz	r4, 800ae42 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800ae36:	f00d fcf3 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800ae3a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800ae3e:	f7fa bb97 	b.w	8005570 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800ae42:	bd38      	pop	{r3, r4, r5, pc}
 800ae44:	0802f2ce 	.word	0x0802f2ce

0800ae48 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 800ae48:	4770      	bx	lr

0800ae4a <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 800ae4a:	3804      	subs	r0, #4
 800ae4c:	4770      	bx	lr

0800ae4e <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 800ae4e:	4770      	bx	lr

0800ae50 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 800ae50:	4770      	bx	lr

0800ae52 <_ZN21Shutting_OffPresenterD0Ev>:
 800ae52:	b510      	push	{r4, lr}
 800ae54:	2110      	movs	r1, #16
 800ae56:	4604      	mov	r4, r0
 800ae58:	f021 fdcb 	bl	802c9f2 <_ZdlPvj>
 800ae5c:	4620      	mov	r0, r4
 800ae5e:	bd10      	pop	{r4, pc}

0800ae60 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 800ae60:	f1a0 0004 	sub.w	r0, r0, #4
 800ae64:	e7f5      	b.n	800ae52 <_ZN21Shutting_OffPresenterD0Ev>

0800ae66 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 800ae66:	4770      	bx	lr

0800ae68 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 800ae68:	b510      	push	{r4, lr}
 800ae6a:	2200      	movs	r2, #0
 800ae6c:	6082      	str	r2, [r0, #8]
    : view(v)
 800ae6e:	4a04      	ldr	r2, [pc, #16]	; (800ae80 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 800ae70:	60c1      	str	r1, [r0, #12]
 800ae72:	f102 0408 	add.w	r4, r2, #8
 800ae76:	3224      	adds	r2, #36	; 0x24
 800ae78:	6004      	str	r4, [r0, #0]
 800ae7a:	6042      	str	r2, [r0, #4]
}
 800ae7c:	bd10      	pop	{r4, pc}
 800ae7e:	bf00      	nop
 800ae80:	08031228 	.word	0x08031228

0800ae84 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 800ae84:	4770      	bx	lr
	...

0800ae88 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 800ae88:	b510      	push	{r4, lr}
 800ae8a:	4b03      	ldr	r3, [pc, #12]	; (800ae98 <_ZN16Shutting_OffViewD1Ev+0x10>)
 800ae8c:	6003      	str	r3, [r0, #0]
 800ae8e:	4604      	mov	r4, r0
 800ae90:	f7ff f91e 	bl	800a0d0 <_ZN20Shutting_OffViewBaseD1Ev>
 800ae94:	4620      	mov	r0, r4
 800ae96:	bd10      	pop	{r4, pc}
 800ae98:	08031260 	.word	0x08031260

0800ae9c <_ZN16Shutting_OffViewD0Ev>:
 800ae9c:	b510      	push	{r4, lr}
 800ae9e:	4604      	mov	r4, r0
 800aea0:	f7ff fff2 	bl	800ae88 <_ZN16Shutting_OffViewD1Ev>
 800aea4:	4620      	mov	r0, r4
 800aea6:	2198      	movs	r1, #152	; 0x98
 800aea8:	f021 fda3 	bl	802c9f2 <_ZdlPvj>
 800aeac:	4620      	mov	r0, r4
 800aeae:	bd10      	pop	{r4, pc}

0800aeb0 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 800aeb0:	b510      	push	{r4, lr}
 800aeb2:	4604      	mov	r4, r0
 800aeb4:	f7ff f916 	bl	800a0e4 <_ZN20Shutting_OffViewBaseC1Ev>
 800aeb8:	4b01      	ldr	r3, [pc, #4]	; (800aec0 <_ZN16Shutting_OffViewC1Ev+0x10>)
 800aeba:	6023      	str	r3, [r4, #0]
}
 800aebc:	4620      	mov	r0, r4
 800aebe:	bd10      	pop	{r4, pc}
 800aec0:	08031260 	.word	0x08031260

0800aec4 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 800aec4:	f7ff b905 	b.w	800a0d2 <_ZN20Shutting_OffViewBase11setupScreenEv>

0800aec8 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800aec8:	20f0      	movs	r0, #240	; 0xf0
 800aeca:	4770      	bx	lr

0800aecc <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800aecc:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800aed0:	4770      	bx	lr
 800aed2:	bf00      	nop

0800aed4 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800aed4:	2029      	movs	r0, #41	; 0x29
 800aed6:	f7f6 befb 	b.w	8001cd0 <LCD_IO_WriteReg>
 800aeda:	bf00      	nop

0800aedc <ili9341_DisplayOff>:
 800aedc:	2028      	movs	r0, #40	; 0x28
 800aede:	f7f6 bef7 	b.w	8001cd0 <LCD_IO_WriteReg>
 800aee2:	bf00      	nop

0800aee4 <ili9341_Init>:
{
 800aee4:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800aee6:	f7f6 feb9 	bl	8001c5c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800aeea:	20ca      	movs	r0, #202	; 0xca
 800aeec:	f7f6 fef0 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800aef0:	20c3      	movs	r0, #195	; 0xc3
 800aef2:	f7f6 fec3 	bl	8001c7c <LCD_IO_WriteData>
 800aef6:	2008      	movs	r0, #8
 800aef8:	f7f6 fec0 	bl	8001c7c <LCD_IO_WriteData>
 800aefc:	2050      	movs	r0, #80	; 0x50
 800aefe:	f7f6 febd 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800af02:	20cf      	movs	r0, #207	; 0xcf
 800af04:	f7f6 fee4 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800af08:	2000      	movs	r0, #0
 800af0a:	f7f6 feb7 	bl	8001c7c <LCD_IO_WriteData>
 800af0e:	20c1      	movs	r0, #193	; 0xc1
 800af10:	f7f6 feb4 	bl	8001c7c <LCD_IO_WriteData>
 800af14:	2030      	movs	r0, #48	; 0x30
 800af16:	f7f6 feb1 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800af1a:	20ed      	movs	r0, #237	; 0xed
 800af1c:	f7f6 fed8 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800af20:	2064      	movs	r0, #100	; 0x64
 800af22:	f7f6 feab 	bl	8001c7c <LCD_IO_WriteData>
 800af26:	2003      	movs	r0, #3
 800af28:	f7f6 fea8 	bl	8001c7c <LCD_IO_WriteData>
 800af2c:	2012      	movs	r0, #18
 800af2e:	f7f6 fea5 	bl	8001c7c <LCD_IO_WriteData>
 800af32:	2081      	movs	r0, #129	; 0x81
 800af34:	f7f6 fea2 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800af38:	20e8      	movs	r0, #232	; 0xe8
 800af3a:	f7f6 fec9 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800af3e:	2085      	movs	r0, #133	; 0x85
 800af40:	f7f6 fe9c 	bl	8001c7c <LCD_IO_WriteData>
 800af44:	2000      	movs	r0, #0
 800af46:	f7f6 fe99 	bl	8001c7c <LCD_IO_WriteData>
 800af4a:	2078      	movs	r0, #120	; 0x78
 800af4c:	f7f6 fe96 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800af50:	20cb      	movs	r0, #203	; 0xcb
 800af52:	f7f6 febd 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800af56:	2039      	movs	r0, #57	; 0x39
 800af58:	f7f6 fe90 	bl	8001c7c <LCD_IO_WriteData>
 800af5c:	202c      	movs	r0, #44	; 0x2c
 800af5e:	f7f6 fe8d 	bl	8001c7c <LCD_IO_WriteData>
 800af62:	2000      	movs	r0, #0
 800af64:	f7f6 fe8a 	bl	8001c7c <LCD_IO_WriteData>
 800af68:	2034      	movs	r0, #52	; 0x34
 800af6a:	f7f6 fe87 	bl	8001c7c <LCD_IO_WriteData>
 800af6e:	2002      	movs	r0, #2
 800af70:	f7f6 fe84 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800af74:	20f7      	movs	r0, #247	; 0xf7
 800af76:	f7f6 feab 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800af7a:	2020      	movs	r0, #32
 800af7c:	f7f6 fe7e 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800af80:	20ea      	movs	r0, #234	; 0xea
 800af82:	f7f6 fea5 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800af86:	2000      	movs	r0, #0
 800af88:	f7f6 fe78 	bl	8001c7c <LCD_IO_WriteData>
 800af8c:	2000      	movs	r0, #0
 800af8e:	f7f6 fe75 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800af92:	20b1      	movs	r0, #177	; 0xb1
 800af94:	f7f6 fe9c 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800af98:	2000      	movs	r0, #0
 800af9a:	f7f6 fe6f 	bl	8001c7c <LCD_IO_WriteData>
 800af9e:	201b      	movs	r0, #27
 800afa0:	f7f6 fe6c 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800afa4:	20b6      	movs	r0, #182	; 0xb6
 800afa6:	f7f6 fe93 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800afaa:	200a      	movs	r0, #10
 800afac:	f7f6 fe66 	bl	8001c7c <LCD_IO_WriteData>
 800afb0:	20a2      	movs	r0, #162	; 0xa2
 800afb2:	f7f6 fe63 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800afb6:	20c0      	movs	r0, #192	; 0xc0
 800afb8:	f7f6 fe8a 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800afbc:	2010      	movs	r0, #16
 800afbe:	f7f6 fe5d 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800afc2:	20c1      	movs	r0, #193	; 0xc1
 800afc4:	f7f6 fe84 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800afc8:	2010      	movs	r0, #16
 800afca:	f7f6 fe57 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800afce:	20c5      	movs	r0, #197	; 0xc5
 800afd0:	f7f6 fe7e 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800afd4:	2045      	movs	r0, #69	; 0x45
 800afd6:	f7f6 fe51 	bl	8001c7c <LCD_IO_WriteData>
 800afda:	2015      	movs	r0, #21
 800afdc:	f7f6 fe4e 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800afe0:	20c7      	movs	r0, #199	; 0xc7
 800afe2:	f7f6 fe75 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800afe6:	2090      	movs	r0, #144	; 0x90
 800afe8:	f7f6 fe48 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800afec:	2036      	movs	r0, #54	; 0x36
 800afee:	f7f6 fe6f 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800aff2:	20c8      	movs	r0, #200	; 0xc8
 800aff4:	f7f6 fe42 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800aff8:	20f2      	movs	r0, #242	; 0xf2
 800affa:	f7f6 fe69 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800affe:	2000      	movs	r0, #0
 800b000:	f7f6 fe3c 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b004:	20b0      	movs	r0, #176	; 0xb0
 800b006:	f7f6 fe63 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b00a:	20c2      	movs	r0, #194	; 0xc2
 800b00c:	f7f6 fe36 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b010:	20b6      	movs	r0, #182	; 0xb6
 800b012:	f7f6 fe5d 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b016:	200a      	movs	r0, #10
 800b018:	f7f6 fe30 	bl	8001c7c <LCD_IO_WriteData>
 800b01c:	20a7      	movs	r0, #167	; 0xa7
 800b01e:	f7f6 fe2d 	bl	8001c7c <LCD_IO_WriteData>
 800b022:	2027      	movs	r0, #39	; 0x27
 800b024:	f7f6 fe2a 	bl	8001c7c <LCD_IO_WriteData>
 800b028:	2004      	movs	r0, #4
 800b02a:	f7f6 fe27 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b02e:	202a      	movs	r0, #42	; 0x2a
 800b030:	f7f6 fe4e 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b034:	2000      	movs	r0, #0
 800b036:	f7f6 fe21 	bl	8001c7c <LCD_IO_WriteData>
 800b03a:	2000      	movs	r0, #0
 800b03c:	f7f6 fe1e 	bl	8001c7c <LCD_IO_WriteData>
 800b040:	2000      	movs	r0, #0
 800b042:	f7f6 fe1b 	bl	8001c7c <LCD_IO_WriteData>
 800b046:	20ef      	movs	r0, #239	; 0xef
 800b048:	f7f6 fe18 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b04c:	202b      	movs	r0, #43	; 0x2b
 800b04e:	f7f6 fe3f 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b052:	2000      	movs	r0, #0
 800b054:	f7f6 fe12 	bl	8001c7c <LCD_IO_WriteData>
 800b058:	2000      	movs	r0, #0
 800b05a:	f7f6 fe0f 	bl	8001c7c <LCD_IO_WriteData>
 800b05e:	2001      	movs	r0, #1
 800b060:	f7f6 fe0c 	bl	8001c7c <LCD_IO_WriteData>
 800b064:	203f      	movs	r0, #63	; 0x3f
 800b066:	f7f6 fe09 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b06a:	20f6      	movs	r0, #246	; 0xf6
 800b06c:	f7f6 fe30 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b070:	2001      	movs	r0, #1
 800b072:	f7f6 fe03 	bl	8001c7c <LCD_IO_WriteData>
 800b076:	2000      	movs	r0, #0
 800b078:	f7f6 fe00 	bl	8001c7c <LCD_IO_WriteData>
 800b07c:	2006      	movs	r0, #6
 800b07e:	f7f6 fdfd 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b082:	202c      	movs	r0, #44	; 0x2c
 800b084:	f7f6 fe24 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b088:	20c8      	movs	r0, #200	; 0xc8
 800b08a:	f7f6 fe89 	bl	8001da0 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b08e:	2026      	movs	r0, #38	; 0x26
 800b090:	f7f6 fe1e 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b094:	2001      	movs	r0, #1
 800b096:	f7f6 fdf1 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b09a:	20e0      	movs	r0, #224	; 0xe0
 800b09c:	f7f6 fe18 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b0a0:	200f      	movs	r0, #15
 800b0a2:	f7f6 fdeb 	bl	8001c7c <LCD_IO_WriteData>
 800b0a6:	2029      	movs	r0, #41	; 0x29
 800b0a8:	f7f6 fde8 	bl	8001c7c <LCD_IO_WriteData>
 800b0ac:	2024      	movs	r0, #36	; 0x24
 800b0ae:	f7f6 fde5 	bl	8001c7c <LCD_IO_WriteData>
 800b0b2:	200c      	movs	r0, #12
 800b0b4:	f7f6 fde2 	bl	8001c7c <LCD_IO_WriteData>
 800b0b8:	200e      	movs	r0, #14
 800b0ba:	f7f6 fddf 	bl	8001c7c <LCD_IO_WriteData>
 800b0be:	2009      	movs	r0, #9
 800b0c0:	f7f6 fddc 	bl	8001c7c <LCD_IO_WriteData>
 800b0c4:	204e      	movs	r0, #78	; 0x4e
 800b0c6:	f7f6 fdd9 	bl	8001c7c <LCD_IO_WriteData>
 800b0ca:	2078      	movs	r0, #120	; 0x78
 800b0cc:	f7f6 fdd6 	bl	8001c7c <LCD_IO_WriteData>
 800b0d0:	203c      	movs	r0, #60	; 0x3c
 800b0d2:	f7f6 fdd3 	bl	8001c7c <LCD_IO_WriteData>
 800b0d6:	2009      	movs	r0, #9
 800b0d8:	f7f6 fdd0 	bl	8001c7c <LCD_IO_WriteData>
 800b0dc:	2013      	movs	r0, #19
 800b0de:	f7f6 fdcd 	bl	8001c7c <LCD_IO_WriteData>
 800b0e2:	2005      	movs	r0, #5
 800b0e4:	f7f6 fdca 	bl	8001c7c <LCD_IO_WriteData>
 800b0e8:	2017      	movs	r0, #23
 800b0ea:	f7f6 fdc7 	bl	8001c7c <LCD_IO_WriteData>
 800b0ee:	2011      	movs	r0, #17
 800b0f0:	f7f6 fdc4 	bl	8001c7c <LCD_IO_WriteData>
 800b0f4:	2000      	movs	r0, #0
 800b0f6:	f7f6 fdc1 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b0fa:	20e1      	movs	r0, #225	; 0xe1
 800b0fc:	f7f6 fde8 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b100:	2000      	movs	r0, #0
 800b102:	f7f6 fdbb 	bl	8001c7c <LCD_IO_WriteData>
 800b106:	2016      	movs	r0, #22
 800b108:	f7f6 fdb8 	bl	8001c7c <LCD_IO_WriteData>
 800b10c:	201b      	movs	r0, #27
 800b10e:	f7f6 fdb5 	bl	8001c7c <LCD_IO_WriteData>
 800b112:	2004      	movs	r0, #4
 800b114:	f7f6 fdb2 	bl	8001c7c <LCD_IO_WriteData>
 800b118:	2011      	movs	r0, #17
 800b11a:	f7f6 fdaf 	bl	8001c7c <LCD_IO_WriteData>
 800b11e:	2007      	movs	r0, #7
 800b120:	f7f6 fdac 	bl	8001c7c <LCD_IO_WriteData>
 800b124:	2031      	movs	r0, #49	; 0x31
 800b126:	f7f6 fda9 	bl	8001c7c <LCD_IO_WriteData>
 800b12a:	2033      	movs	r0, #51	; 0x33
 800b12c:	f7f6 fda6 	bl	8001c7c <LCD_IO_WriteData>
 800b130:	2042      	movs	r0, #66	; 0x42
 800b132:	f7f6 fda3 	bl	8001c7c <LCD_IO_WriteData>
 800b136:	2005      	movs	r0, #5
 800b138:	f7f6 fda0 	bl	8001c7c <LCD_IO_WriteData>
 800b13c:	200c      	movs	r0, #12
 800b13e:	f7f6 fd9d 	bl	8001c7c <LCD_IO_WriteData>
 800b142:	200a      	movs	r0, #10
 800b144:	f7f6 fd9a 	bl	8001c7c <LCD_IO_WriteData>
 800b148:	2028      	movs	r0, #40	; 0x28
 800b14a:	f7f6 fd97 	bl	8001c7c <LCD_IO_WriteData>
 800b14e:	202f      	movs	r0, #47	; 0x2f
 800b150:	f7f6 fd94 	bl	8001c7c <LCD_IO_WriteData>
 800b154:	200f      	movs	r0, #15
 800b156:	f7f6 fd91 	bl	8001c7c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b15a:	2011      	movs	r0, #17
 800b15c:	f7f6 fdb8 	bl	8001cd0 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b160:	20c8      	movs	r0, #200	; 0xc8
 800b162:	f7f6 fe1d 	bl	8001da0 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b166:	2029      	movs	r0, #41	; 0x29
 800b168:	f7f6 fdb2 	bl	8001cd0 <LCD_IO_WriteReg>
}
 800b16c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800b170:	202c      	movs	r0, #44	; 0x2c
 800b172:	f7f6 bdad 	b.w	8001cd0 <LCD_IO_WriteReg>
 800b176:	bf00      	nop

0800b178 <ili9341_ReadID>:
{
 800b178:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b17a:	f7f6 fd6f 	bl	8001c5c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800b17e:	2103      	movs	r1, #3
 800b180:	20d3      	movs	r0, #211	; 0xd3
 800b182:	f7f6 fdcf 	bl	8001d24 <LCD_IO_ReadData>
}
 800b186:	b280      	uxth	r0, r0
 800b188:	bd08      	pop	{r3, pc}
 800b18a:	bf00      	nop

0800b18c <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800b18c:	221f      	movs	r2, #31
 800b18e:	210b      	movs	r1, #11
 800b190:	b2c0      	uxtb	r0, r0
 800b192:	f7f6 bd15 	b.w	8001bc0 <IOE_Write>
 800b196:	bf00      	nop

0800b198 <stmpe811_Reset>:
{
 800b198:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800b19a:	b2c4      	uxtb	r4, r0
 800b19c:	2202      	movs	r2, #2
 800b19e:	2103      	movs	r1, #3
 800b1a0:	4620      	mov	r0, r4
 800b1a2:	f7f6 fd0d 	bl	8001bc0 <IOE_Write>
  IOE_Delay(10); 
 800b1a6:	200a      	movs	r0, #10
 800b1a8:	f7f6 fd56 	bl	8001c58 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800b1ac:	4620      	mov	r0, r4
 800b1ae:	2200      	movs	r2, #0
 800b1b0:	2103      	movs	r1, #3
 800b1b2:	f7f6 fd05 	bl	8001bc0 <IOE_Write>
}
 800b1b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b1ba:	2002      	movs	r0, #2
 800b1bc:	f7f6 bd4c 	b.w	8001c58 <IOE_Delay>

0800b1c0 <stmpe811_ReadID>:
{
 800b1c0:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b1c2:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 800b1c4:	f7f6 fcf8 	bl	8001bb8 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b1c8:	2100      	movs	r1, #0
 800b1ca:	4620      	mov	r0, r4
 800b1cc:	f7f6 fd10 	bl	8001bf0 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b1d0:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b1d2:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b1d4:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b1d6:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b1d8:	f7f6 fd0a 	bl	8001bf0 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b1dc:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 800b1e0:	b280      	uxth	r0, r0
 800b1e2:	bd10      	pop	{r4, pc}

0800b1e4 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800b1e4:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800b1e6:	b2c4      	uxtb	r4, r0
 800b1e8:	2140      	movs	r1, #64	; 0x40
 800b1ea:	4620      	mov	r0, r4
 800b1ec:	f7f6 fd00 	bl	8001bf0 <IOE_Read>
  
  if(state > 0)
 800b1f0:	0603      	lsls	r3, r0, #24
 800b1f2:	d40b      	bmi.n	800b20c <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b1f4:	4620      	mov	r0, r4
 800b1f6:	2201      	movs	r2, #1
 800b1f8:	214b      	movs	r1, #75	; 0x4b
 800b1fa:	f7f6 fce1 	bl	8001bc0 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b1fe:	4620      	mov	r0, r4
 800b200:	2200      	movs	r2, #0
 800b202:	214b      	movs	r1, #75	; 0x4b
 800b204:	f7f6 fcdc 	bl	8001bc0 <IOE_Write>
  uint8_t ret = 0;
 800b208:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800b20a:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800b20c:	214c      	movs	r1, #76	; 0x4c
 800b20e:	4620      	mov	r0, r4
 800b210:	f7f6 fcee 	bl	8001bf0 <IOE_Read>
      ret = 1;
 800b214:	3800      	subs	r0, #0
 800b216:	bf18      	it	ne
 800b218:	2001      	movne	r0, #1
}
 800b21a:	bd10      	pop	{r4, pc}

0800b21c <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 800b21c:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800b21e:	210b      	movs	r1, #11
 800b220:	b2c0      	uxtb	r0, r0
 800b222:	f7f6 fce5 	bl	8001bf0 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 800b226:	f000 001f 	and.w	r0, r0, #31
 800b22a:	bd08      	pop	{r3, pc}

0800b22c <stmpe811_TS_GetXY>:
{
 800b22c:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b22e:	2304      	movs	r3, #4
{
 800b230:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b232:	b2c4      	uxtb	r4, r0
{
 800b234:	4615      	mov	r5, r2
 800b236:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b238:	eb0d 0203 	add.w	r2, sp, r3
 800b23c:	21d7      	movs	r1, #215	; 0xd7
 800b23e:	4620      	mov	r0, r4
 800b240:	f7f6 fcf2 	bl	8001c28 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800b244:	9b01      	ldr	r3, [sp, #4]
 800b246:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b248:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b24a:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b24e:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b250:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b252:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b254:	2201      	movs	r2, #1
 800b256:	214b      	movs	r1, #75	; 0x4b
 800b258:	f7f6 fcb2 	bl	8001bc0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b25c:	2200      	movs	r2, #0
 800b25e:	214b      	movs	r1, #75	; 0x4b
 800b260:	4620      	mov	r0, r4
 800b262:	f7f6 fcad 	bl	8001bc0 <IOE_Write>
}
 800b266:	b002      	add	sp, #8
 800b268:	bd70      	pop	{r4, r5, r6, pc}
 800b26a:	bf00      	nop

0800b26c <stmpe811_TS_Start>:
{
 800b26c:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b26e:	b2c4      	uxtb	r4, r0
 800b270:	2104      	movs	r1, #4
 800b272:	4620      	mov	r0, r4
 800b274:	f7f6 fcbc 	bl	8001bf0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b278:	2104      	movs	r1, #4
 800b27a:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b27e:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b280:	4620      	mov	r0, r4
 800b282:	f7f6 fc9d 	bl	8001bc0 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800b286:	2117      	movs	r1, #23
 800b288:	4620      	mov	r0, r4
 800b28a:	f7f6 fcb1 	bl	8001bf0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800b28e:	2117      	movs	r1, #23
 800b290:	f000 020f 	and.w	r2, r0, #15
 800b294:	4620      	mov	r0, r4
 800b296:	f7f6 fc93 	bl	8001bc0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b29a:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800b29e:	4620      	mov	r0, r4
 800b2a0:	2104      	movs	r1, #4
 800b2a2:	f7f6 fc8d 	bl	8001bc0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800b2a6:	2249      	movs	r2, #73	; 0x49
 800b2a8:	2120      	movs	r1, #32
 800b2aa:	4620      	mov	r0, r4
 800b2ac:	f7f6 fc88 	bl	8001bc0 <IOE_Write>
  IOE_Delay(2); 
 800b2b0:	2002      	movs	r0, #2
 800b2b2:	f7f6 fcd1 	bl	8001c58 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800b2b6:	4620      	mov	r0, r4
 800b2b8:	2201      	movs	r2, #1
 800b2ba:	2121      	movs	r1, #33	; 0x21
 800b2bc:	f7f6 fc80 	bl	8001bc0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800b2c0:	4620      	mov	r0, r4
 800b2c2:	229a      	movs	r2, #154	; 0x9a
 800b2c4:	2141      	movs	r1, #65	; 0x41
 800b2c6:	f7f6 fc7b 	bl	8001bc0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800b2ca:	4620      	mov	r0, r4
 800b2cc:	2201      	movs	r2, #1
 800b2ce:	214a      	movs	r1, #74	; 0x4a
 800b2d0:	f7f6 fc76 	bl	8001bc0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b2d4:	4620      	mov	r0, r4
 800b2d6:	2201      	movs	r2, #1
 800b2d8:	214b      	movs	r1, #75	; 0x4b
 800b2da:	f7f6 fc71 	bl	8001bc0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b2de:	4620      	mov	r0, r4
 800b2e0:	2200      	movs	r2, #0
 800b2e2:	214b      	movs	r1, #75	; 0x4b
 800b2e4:	f7f6 fc6c 	bl	8001bc0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800b2e8:	4620      	mov	r0, r4
 800b2ea:	2201      	movs	r2, #1
 800b2ec:	2156      	movs	r1, #86	; 0x56
 800b2ee:	f7f6 fc67 	bl	8001bc0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800b2f2:	4620      	mov	r0, r4
 800b2f4:	2201      	movs	r2, #1
 800b2f6:	2158      	movs	r1, #88	; 0x58
 800b2f8:	f7f6 fc62 	bl	8001bc0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800b2fc:	4620      	mov	r0, r4
 800b2fe:	2201      	movs	r2, #1
 800b300:	2140      	movs	r1, #64	; 0x40
 800b302:	f7f6 fc5d 	bl	8001bc0 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800b306:	4620      	mov	r0, r4
 800b308:	22ff      	movs	r2, #255	; 0xff
 800b30a:	210b      	movs	r1, #11
 800b30c:	f7f6 fc58 	bl	8001bc0 <IOE_Write>
}
 800b310:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 800b314:	2002      	movs	r0, #2
 800b316:	f7f6 bc9f 	b.w	8001c58 <IOE_Delay>
 800b31a:	bf00      	nop

0800b31c <stmpe811_TS_DisableIT>:
{
 800b31c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b31e:	b2c4      	uxtb	r4, r0
 800b320:	2109      	movs	r1, #9
 800b322:	4620      	mov	r0, r4
 800b324:	f7f6 fc64 	bl	8001bf0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800b328:	2109      	movs	r1, #9
 800b32a:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800b32e:	4620      	mov	r0, r4
 800b330:	f7f6 fc46 	bl	8001bc0 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b334:	210a      	movs	r1, #10
 800b336:	4620      	mov	r0, r4
 800b338:	f7f6 fc5a 	bl	8001bf0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b33c:	210a      	movs	r1, #10
 800b33e:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 800b342:	4620      	mov	r0, r4
}
 800b344:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b348:	f7f6 bc3a 	b.w	8001bc0 <IOE_Write>

0800b34c <stmpe811_TS_EnableIT>:
{
 800b34c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b34e:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 800b350:	f7f6 fc34 	bl	8001bbc <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b354:	210a      	movs	r1, #10
 800b356:	4620      	mov	r0, r4
 800b358:	f7f6 fc4a 	bl	8001bf0 <IOE_Read>
  tmp |= Source; 
 800b35c:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b360:	b2c2      	uxtb	r2, r0
 800b362:	210a      	movs	r1, #10
 800b364:	4620      	mov	r0, r4
 800b366:	f7f6 fc2b 	bl	8001bc0 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b36a:	2109      	movs	r1, #9
 800b36c:	4620      	mov	r0, r4
 800b36e:	f7f6 fc3f 	bl	8001bf0 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800b372:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b376:	b2c2      	uxtb	r2, r0
 800b378:	2109      	movs	r1, #9
 800b37a:	4620      	mov	r0, r4
}
 800b37c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b380:	f7f6 bc1e 	b.w	8001bc0 <IOE_Write>

0800b384 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800b384:	4a10      	ldr	r2, [pc, #64]	; (800b3c8 <stmpe811_Init+0x44>)
 800b386:	7813      	ldrb	r3, [r2, #0]
 800b388:	4298      	cmp	r0, r3
 800b38a:	d004      	beq.n	800b396 <stmpe811_Init+0x12>
 800b38c:	7851      	ldrb	r1, [r2, #1]
 800b38e:	4288      	cmp	r0, r1
 800b390:	d001      	beq.n	800b396 <stmpe811_Init+0x12>
 800b392:	b113      	cbz	r3, 800b39a <stmpe811_Init+0x16>
 800b394:	b101      	cbz	r1, 800b398 <stmpe811_Init+0x14>
 800b396:	4770      	bx	lr
 800b398:	2301      	movs	r3, #1
{
 800b39a:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 800b39c:	b2c4      	uxtb	r4, r0
 800b39e:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800b3a0:	f7f6 fc0a 	bl	8001bb8 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800b3a4:	2202      	movs	r2, #2
 800b3a6:	2103      	movs	r1, #3
 800b3a8:	4620      	mov	r0, r4
 800b3aa:	f7f6 fc09 	bl	8001bc0 <IOE_Write>
  IOE_Delay(10); 
 800b3ae:	200a      	movs	r0, #10
 800b3b0:	f7f6 fc52 	bl	8001c58 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800b3b4:	4620      	mov	r0, r4
 800b3b6:	2200      	movs	r2, #0
 800b3b8:	2103      	movs	r1, #3
 800b3ba:	f7f6 fc01 	bl	8001bc0 <IOE_Write>
}
 800b3be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b3c2:	2002      	movs	r0, #2
 800b3c4:	f7f6 bc48 	b.w	8001c58 <IOE_Delay>
 800b3c8:	20002a34 	.word	0x20002a34

0800b3cc <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b3cc:	4b05      	ldr	r3, [pc, #20]	; (800b3e4 <SystemInit+0x18>)
 800b3ce:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b3d2:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b3d6:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800b3da:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b3de:	6099      	str	r1, [r3, #8]
#endif
}
 800b3e0:	4770      	bx	lr
 800b3e2:	bf00      	nop
 800b3e4:	e000ed00 	.word	0xe000ed00

0800b3e8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800b3e8:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800b3ea:	4b0b      	ldr	r3, [pc, #44]	; (800b418 <HAL_Init+0x30>)
 800b3ec:	681a      	ldr	r2, [r3, #0]
 800b3ee:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b3f2:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800b3f4:	681a      	ldr	r2, [r3, #0]
 800b3f6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b3fa:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800b3fc:	681a      	ldr	r2, [r3, #0]
 800b3fe:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b402:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800b404:	2003      	movs	r0, #3
 800b406:	f000 f82d 	bl	800b464 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800b40a:	2000      	movs	r0, #0
 800b40c:	f7f7 f8f8 	bl	8002600 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800b410:	f7f6 fe1a 	bl	8002048 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800b414:	2000      	movs	r0, #0
 800b416:	bd08      	pop	{r3, pc}
 800b418:	40023c00 	.word	0x40023c00

0800b41c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800b41c:	4a03      	ldr	r2, [pc, #12]	; (800b42c <HAL_IncTick+0x10>)
 800b41e:	4b04      	ldr	r3, [pc, #16]	; (800b430 <HAL_IncTick+0x14>)
 800b420:	6811      	ldr	r1, [r2, #0]
 800b422:	781b      	ldrb	r3, [r3, #0]
 800b424:	440b      	add	r3, r1
 800b426:	6013      	str	r3, [r2, #0]
}
 800b428:	4770      	bx	lr
 800b42a:	bf00      	nop
 800b42c:	20002a38 	.word	0x20002a38
 800b430:	20000080 	.word	0x20000080

0800b434 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800b434:	4b01      	ldr	r3, [pc, #4]	; (800b43c <HAL_GetTick+0x8>)
 800b436:	6818      	ldr	r0, [r3, #0]
}
 800b438:	4770      	bx	lr
 800b43a:	bf00      	nop
 800b43c:	20002a38 	.word	0x20002a38

0800b440 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800b440:	b538      	push	{r3, r4, r5, lr}
 800b442:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800b444:	f7ff fff6 	bl	800b434 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800b448:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800b44a:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 800b44c:	d002      	beq.n	800b454 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800b44e:	4b04      	ldr	r3, [pc, #16]	; (800b460 <HAL_Delay+0x20>)
 800b450:	781b      	ldrb	r3, [r3, #0]
 800b452:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800b454:	f7ff ffee 	bl	800b434 <HAL_GetTick>
 800b458:	1b43      	subs	r3, r0, r5
 800b45a:	42a3      	cmp	r3, r4
 800b45c:	d3fa      	bcc.n	800b454 <HAL_Delay+0x14>
  {
  }
}
 800b45e:	bd38      	pop	{r3, r4, r5, pc}
 800b460:	20000080 	.word	0x20000080

0800b464 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800b464:	4907      	ldr	r1, [pc, #28]	; (800b484 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800b466:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b468:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b46a:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b46e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b472:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800b474:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800b476:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800b47a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800b47e:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800b480:	4770      	bx	lr
 800b482:	bf00      	nop
 800b484:	e000ed00 	.word	0xe000ed00

0800b488 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800b488:	4b1c      	ldr	r3, [pc, #112]	; (800b4fc <HAL_NVIC_SetPriority+0x74>)
 800b48a:	68db      	ldr	r3, [r3, #12]
 800b48c:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800b490:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b492:	f1c3 0e07 	rsb	lr, r3, #7
 800b496:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b49a:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b49e:	bf28      	it	cs
 800b4a0:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b4a4:	f1bc 0f06 	cmp.w	ip, #6
 800b4a8:	d91b      	bls.n	800b4e2 <HAL_NVIC_SetPriority+0x5a>
 800b4aa:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800b4ac:	f04f 3cff 	mov.w	ip, #4294967295
 800b4b0:	fa0c fc03 	lsl.w	ip, ip, r3
 800b4b4:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b4b8:	f04f 3cff 	mov.w	ip, #4294967295
 800b4bc:	fa0c fc0e 	lsl.w	ip, ip, lr
 800b4c0:	ea21 010c 	bic.w	r1, r1, ip
 800b4c4:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800b4c6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b4c8:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800b4cc:	db0c      	blt.n	800b4e8 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b4ce:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800b4d2:	0109      	lsls	r1, r1, #4
 800b4d4:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800b4d8:	b2c9      	uxtb	r1, r1
 800b4da:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800b4de:	f85d fb04 	ldr.w	pc, [sp], #4
 800b4e2:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b4e4:	4613      	mov	r3, r2
 800b4e6:	e7e7      	b.n	800b4b8 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b4e8:	4b05      	ldr	r3, [pc, #20]	; (800b500 <HAL_NVIC_SetPriority+0x78>)
 800b4ea:	f000 000f 	and.w	r0, r0, #15
 800b4ee:	0109      	lsls	r1, r1, #4
 800b4f0:	4403      	add	r3, r0
 800b4f2:	b2c9      	uxtb	r1, r1
 800b4f4:	7619      	strb	r1, [r3, #24]
 800b4f6:	f85d fb04 	ldr.w	pc, [sp], #4
 800b4fa:	bf00      	nop
 800b4fc:	e000ed00 	.word	0xe000ed00
 800b500:	e000ecfc 	.word	0xe000ecfc

0800b504 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800b504:	2800      	cmp	r0, #0
 800b506:	db07      	blt.n	800b518 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800b508:	0941      	lsrs	r1, r0, #5
 800b50a:	4a04      	ldr	r2, [pc, #16]	; (800b51c <HAL_NVIC_EnableIRQ+0x18>)
 800b50c:	f000 001f 	and.w	r0, r0, #31
 800b510:	2301      	movs	r3, #1
 800b512:	4083      	lsls	r3, r0
 800b514:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800b518:	4770      	bx	lr
 800b51a:	bf00      	nop
 800b51c:	e000e100 	.word	0xe000e100

0800b520 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800b520:	b180      	cbz	r0, 800b544 <HAL_CRC_Init+0x24>
{
 800b522:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800b524:	7943      	ldrb	r3, [r0, #5]
 800b526:	4604      	mov	r4, r0
 800b528:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b52c:	b11b      	cbz	r3, 800b536 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800b52e:	2301      	movs	r3, #1
 800b530:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800b532:	2000      	movs	r0, #0
}
 800b534:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800b536:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800b538:	f7f6 fda6 	bl	8002088 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800b53c:	2301      	movs	r3, #1
 800b53e:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 800b540:	2000      	movs	r0, #0
}
 800b542:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b544:	2001      	movs	r0, #1
}
 800b546:	4770      	bx	lr

0800b548 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800b548:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800b54c:	2b02      	cmp	r3, #2
 800b54e:	d003      	beq.n	800b558 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800b550:	2380      	movs	r3, #128	; 0x80
 800b552:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800b554:	2001      	movs	r0, #1
 800b556:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800b558:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800b55a:	2305      	movs	r3, #5
 800b55c:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800b560:	6813      	ldr	r3, [r2, #0]
 800b562:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800b566:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800b568:	6013      	str	r3, [r2, #0]
}
 800b56a:	4770      	bx	lr

0800b56c <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 800b56c:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800b570:	4770      	bx	lr
 800b572:	bf00      	nop

0800b574 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 800b574:	4b21      	ldr	r3, [pc, #132]	; (800b5fc <FLASH_SetErrorCode+0x88>)
 800b576:	68da      	ldr	r2, [r3, #12]
 800b578:	06d0      	lsls	r0, r2, #27
 800b57a:	d505      	bpl.n	800b588 <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800b57c:	4920      	ldr	r1, [pc, #128]	; (800b600 <FLASH_SetErrorCode+0x8c>)
 800b57e:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800b580:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800b582:	4302      	orrs	r2, r0
 800b584:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800b586:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 800b588:	4b1c      	ldr	r3, [pc, #112]	; (800b5fc <FLASH_SetErrorCode+0x88>)
 800b58a:	68da      	ldr	r2, [r3, #12]
 800b58c:	0691      	lsls	r1, r2, #26
 800b58e:	d506      	bpl.n	800b59e <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800b590:	491b      	ldr	r1, [pc, #108]	; (800b600 <FLASH_SetErrorCode+0x8c>)
 800b592:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800b594:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800b596:	f042 0208 	orr.w	r2, r2, #8
 800b59a:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800b59c:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 800b59e:	4b17      	ldr	r3, [pc, #92]	; (800b5fc <FLASH_SetErrorCode+0x88>)
 800b5a0:	68da      	ldr	r2, [r3, #12]
 800b5a2:	0652      	lsls	r2, r2, #25
 800b5a4:	d506      	bpl.n	800b5b4 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800b5a6:	4916      	ldr	r1, [pc, #88]	; (800b600 <FLASH_SetErrorCode+0x8c>)
 800b5a8:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800b5aa:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800b5ac:	f042 0204 	orr.w	r2, r2, #4
 800b5b0:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800b5b2:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 800b5b4:	4b11      	ldr	r3, [pc, #68]	; (800b5fc <FLASH_SetErrorCode+0x88>)
 800b5b6:	68da      	ldr	r2, [r3, #12]
 800b5b8:	0610      	lsls	r0, r2, #24
 800b5ba:	d506      	bpl.n	800b5ca <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800b5bc:	4910      	ldr	r1, [pc, #64]	; (800b600 <FLASH_SetErrorCode+0x8c>)
 800b5be:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800b5c0:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800b5c2:	f042 0202 	orr.w	r2, r2, #2
 800b5c6:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800b5c8:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 800b5ca:	4b0c      	ldr	r3, [pc, #48]	; (800b5fc <FLASH_SetErrorCode+0x88>)
 800b5cc:	68da      	ldr	r2, [r3, #12]
 800b5ce:	05d1      	lsls	r1, r2, #23
 800b5d0:	d507      	bpl.n	800b5e2 <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800b5d2:	490b      	ldr	r1, [pc, #44]	; (800b600 <FLASH_SetErrorCode+0x8c>)
 800b5d4:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 800b5d6:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800b5da:	f042 0201 	orr.w	r2, r2, #1
 800b5de:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 800b5e0:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 800b5e2:	4b06      	ldr	r3, [pc, #24]	; (800b5fc <FLASH_SetErrorCode+0x88>)
 800b5e4:	68da      	ldr	r2, [r3, #12]
 800b5e6:	0792      	lsls	r2, r2, #30
 800b5e8:	d506      	bpl.n	800b5f8 <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800b5ea:	4905      	ldr	r1, [pc, #20]	; (800b600 <FLASH_SetErrorCode+0x8c>)
 800b5ec:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800b5ee:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800b5f0:	f042 0220 	orr.w	r2, r2, #32
 800b5f4:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800b5f6:	60d8      	str	r0, [r3, #12]
  }
}
 800b5f8:	4770      	bx	lr
 800b5fa:	bf00      	nop
 800b5fc:	40023c00 	.word	0x40023c00
 800b600:	20002a3c 	.word	0x20002a3c

0800b604 <HAL_FLASH_Program>:
{
 800b604:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 800b608:	4f4d      	ldr	r7, [pc, #308]	; (800b740 <HAL_FLASH_Program+0x13c>)
{
 800b60a:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 800b60c:	7e3b      	ldrb	r3, [r7, #24]
 800b60e:	2b01      	cmp	r3, #1
 800b610:	d060      	beq.n	800b6d4 <HAL_FLASH_Program+0xd0>
 800b612:	2301      	movs	r3, #1
 800b614:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b616:	2300      	movs	r3, #0
 800b618:	4681      	mov	r9, r0
 800b61a:	468a      	mov	sl, r1
 800b61c:	4690      	mov	r8, r2
 800b61e:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 800b620:	f7ff ff08 	bl	800b434 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b624:	4d47      	ldr	r5, [pc, #284]	; (800b744 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800b626:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b628:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b62c:	e004      	b.n	800b638 <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b62e:	f7ff ff01 	bl	800b434 <HAL_GetTick>
 800b632:	1b00      	subs	r0, r0, r4
 800b634:	42b0      	cmp	r0, r6
 800b636:	d848      	bhi.n	800b6ca <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b638:	68eb      	ldr	r3, [r5, #12]
 800b63a:	03d8      	lsls	r0, r3, #15
 800b63c:	d4f7      	bmi.n	800b62e <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b63e:	68eb      	ldr	r3, [r5, #12]
 800b640:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b642:	bf44      	itt	mi
 800b644:	2301      	movmi	r3, #1
 800b646:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b648:	4b3e      	ldr	r3, [pc, #248]	; (800b744 <HAL_FLASH_Program+0x140>)
 800b64a:	68da      	ldr	r2, [r3, #12]
 800b64c:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 800b650:	d154      	bne.n	800b6fc <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 800b652:	f1b9 0f00 	cmp.w	r9, #0
 800b656:	d040      	beq.n	800b6da <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800b658:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b65c:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800b65e:	d051      	beq.n	800b704 <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b660:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b664:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800b666:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 800b66a:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800b66c:	d05e      	beq.n	800b72c <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 800b66e:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 800b672:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b674:	691a      	ldr	r2, [r3, #16]
 800b676:	f042 0201 	orr.w	r2, r2, #1
 800b67a:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 800b67c:	f8ca 8000 	str.w	r8, [sl]
 800b680:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 800b684:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b688:	2300      	movs	r3, #0
 800b68a:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 800b68c:	f7ff fed2 	bl	800b434 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b690:	4d2c      	ldr	r5, [pc, #176]	; (800b744 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800b692:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b694:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b698:	e004      	b.n	800b6a4 <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b69a:	f7ff fecb 	bl	800b434 <HAL_GetTick>
 800b69e:	1b00      	subs	r0, r0, r4
 800b6a0:	42b0      	cmp	r0, r6
 800b6a2:	d829      	bhi.n	800b6f8 <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b6a4:	68eb      	ldr	r3, [r5, #12]
 800b6a6:	03da      	lsls	r2, r3, #15
 800b6a8:	d4f7      	bmi.n	800b69a <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b6aa:	68eb      	ldr	r3, [r5, #12]
 800b6ac:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b6ae:	bf44      	itt	mi
 800b6b0:	2301      	movmi	r3, #1
 800b6b2:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b6b4:	4b23      	ldr	r3, [pc, #140]	; (800b744 <HAL_FLASH_Program+0x140>)
 800b6b6:	68d8      	ldr	r0, [r3, #12]
 800b6b8:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800b6bc:	d132      	bne.n	800b724 <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 800b6be:	4a21      	ldr	r2, [pc, #132]	; (800b744 <HAL_FLASH_Program+0x140>)
 800b6c0:	6913      	ldr	r3, [r2, #16]
 800b6c2:	f023 0301 	bic.w	r3, r3, #1
 800b6c6:	6113      	str	r3, [r2, #16]
 800b6c8:	e000      	b.n	800b6cc <HAL_FLASH_Program+0xc8>
 800b6ca:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 800b6cc:	2300      	movs	r3, #0
 800b6ce:	763b      	strb	r3, [r7, #24]
}
 800b6d0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 800b6d4:	2002      	movs	r0, #2
}
 800b6d6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b6da:	691a      	ldr	r2, [r3, #16]
 800b6dc:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b6e0:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 800b6e2:	691a      	ldr	r2, [r3, #16]
 800b6e4:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b6e6:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 800b6e8:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800b6ec:	f042 0201 	orr.w	r2, r2, #1
 800b6f0:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 800b6f2:	f88a 8000 	strb.w	r8, [sl]
}
 800b6f6:	e7c7      	b.n	800b688 <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 800b6f8:	2003      	movs	r0, #3
 800b6fa:	e7e0      	b.n	800b6be <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 800b6fc:	f7ff ff3a 	bl	800b574 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b700:	2001      	movs	r0, #1
 800b702:	e7e3      	b.n	800b6cc <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b704:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b708:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 800b70a:	691a      	ldr	r2, [r3, #16]
 800b70c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b710:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b712:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 800b714:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800b718:	f042 0201 	orr.w	r2, r2, #1
 800b71c:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 800b71e:	f8aa 8000 	strh.w	r8, [sl]
}
 800b722:	e7b1      	b.n	800b688 <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 800b724:	f7ff ff26 	bl	800b574 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b728:	2001      	movs	r0, #1
 800b72a:	e7c8      	b.n	800b6be <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 800b72c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b730:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b732:	691a      	ldr	r2, [r3, #16]
 800b734:	f042 0201 	orr.w	r2, r2, #1
 800b738:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 800b73a:	f8ca 8000 	str.w	r8, [sl]
}
 800b73e:	e7a3      	b.n	800b688 <HAL_FLASH_Program+0x84>
 800b740:	20002a3c 	.word	0x20002a3c
 800b744:	40023c00 	.word	0x40023c00

0800b748 <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 800b748:	4b06      	ldr	r3, [pc, #24]	; (800b764 <HAL_FLASH_Unlock+0x1c>)
 800b74a:	691a      	ldr	r2, [r3, #16]
 800b74c:	2a00      	cmp	r2, #0
 800b74e:	db01      	blt.n	800b754 <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 800b750:	2000      	movs	r0, #0
}
 800b752:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800b754:	4904      	ldr	r1, [pc, #16]	; (800b768 <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800b756:	4a05      	ldr	r2, [pc, #20]	; (800b76c <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800b758:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800b75a:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 800b75c:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 800b75e:	0fc0      	lsrs	r0, r0, #31
 800b760:	4770      	bx	lr
 800b762:	bf00      	nop
 800b764:	40023c00 	.word	0x40023c00
 800b768:	45670123 	.word	0x45670123
 800b76c:	cdef89ab 	.word	0xcdef89ab

0800b770 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 800b770:	4a03      	ldr	r2, [pc, #12]	; (800b780 <HAL_FLASH_Lock+0x10>)
 800b772:	6913      	ldr	r3, [r2, #16]
 800b774:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 800b778:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 800b77a:	6113      	str	r3, [r2, #16]
}
 800b77c:	4770      	bx	lr
 800b77e:	bf00      	nop
 800b780:	40023c00 	.word	0x40023c00

0800b784 <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 800b784:	4b01      	ldr	r3, [pc, #4]	; (800b78c <HAL_FLASH_GetError+0x8>)
 800b786:	69d8      	ldr	r0, [r3, #28]
}  
 800b788:	4770      	bx	lr
 800b78a:	bf00      	nop
 800b78c:	20002a3c 	.word	0x20002a3c

0800b790 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b790:	4b14      	ldr	r3, [pc, #80]	; (800b7e4 <FLASH_WaitForLastOperation+0x54>)
{ 
 800b792:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b794:	2200      	movs	r2, #0
{ 
 800b796:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b798:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 800b79a:	f7ff fe4b 	bl	800b434 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b79e:	4e12      	ldr	r6, [pc, #72]	; (800b7e8 <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 800b7a0:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b7a2:	1c63      	adds	r3, r4, #1
 800b7a4:	d10f      	bne.n	800b7c6 <FLASH_WaitForLastOperation+0x36>
 800b7a6:	4a10      	ldr	r2, [pc, #64]	; (800b7e8 <FLASH_WaitForLastOperation+0x58>)
 800b7a8:	68d3      	ldr	r3, [r2, #12]
 800b7aa:	03d8      	lsls	r0, r3, #15
 800b7ac:	d4fc      	bmi.n	800b7a8 <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b7ae:	4b0e      	ldr	r3, [pc, #56]	; (800b7e8 <FLASH_WaitForLastOperation+0x58>)
 800b7b0:	68da      	ldr	r2, [r3, #12]
 800b7b2:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b7b4:	bf44      	itt	mi
 800b7b6:	2201      	movmi	r2, #1
 800b7b8:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b7ba:	4b0b      	ldr	r3, [pc, #44]	; (800b7e8 <FLASH_WaitForLastOperation+0x58>)
 800b7bc:	68d8      	ldr	r0, [r3, #12]
 800b7be:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800b7c2:	d10b      	bne.n	800b7dc <FLASH_WaitForLastOperation+0x4c>
}  
 800b7c4:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b7c6:	68f3      	ldr	r3, [r6, #12]
 800b7c8:	03d9      	lsls	r1, r3, #15
 800b7ca:	d5f0      	bpl.n	800b7ae <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b7cc:	b124      	cbz	r4, 800b7d8 <FLASH_WaitForLastOperation+0x48>
 800b7ce:	f7ff fe31 	bl	800b434 <HAL_GetTick>
 800b7d2:	1b40      	subs	r0, r0, r5
 800b7d4:	42a0      	cmp	r0, r4
 800b7d6:	d9e4      	bls.n	800b7a2 <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 800b7d8:	2003      	movs	r0, #3
}  
 800b7da:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 800b7dc:	f7ff feca 	bl	800b574 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b7e0:	2001      	movs	r0, #1
}  
 800b7e2:	bd70      	pop	{r4, r5, r6, pc}
 800b7e4:	20002a3c 	.word	0x20002a3c
 800b7e8:	40023c00 	.word	0x40023c00

0800b7ec <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 800b7ec:	4b14      	ldr	r3, [pc, #80]	; (800b840 <FLASH_FlushCaches+0x54>)
 800b7ee:	681a      	ldr	r2, [r3, #0]
 800b7f0:	0591      	lsls	r1, r2, #22
 800b7f2:	d50f      	bpl.n	800b814 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 800b7f4:	681a      	ldr	r2, [r3, #0]
 800b7f6:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800b7fa:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 800b7fc:	681a      	ldr	r2, [r3, #0]
 800b7fe:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b802:	601a      	str	r2, [r3, #0]
 800b804:	681a      	ldr	r2, [r3, #0]
 800b806:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b80a:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800b80c:	681a      	ldr	r2, [r3, #0]
 800b80e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b812:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 800b814:	4b0a      	ldr	r3, [pc, #40]	; (800b840 <FLASH_FlushCaches+0x54>)
 800b816:	681a      	ldr	r2, [r3, #0]
 800b818:	0552      	lsls	r2, r2, #21
 800b81a:	d50f      	bpl.n	800b83c <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 800b81c:	681a      	ldr	r2, [r3, #0]
 800b81e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b822:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 800b824:	681a      	ldr	r2, [r3, #0]
 800b826:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b82a:	601a      	str	r2, [r3, #0]
 800b82c:	681a      	ldr	r2, [r3, #0]
 800b82e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800b832:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 800b834:	681a      	ldr	r2, [r3, #0]
 800b836:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b83a:	601a      	str	r2, [r3, #0]
  }
}
 800b83c:	4770      	bx	lr
 800b83e:	bf00      	nop
 800b840:	40023c00 	.word	0x40023c00

0800b844 <HAL_FLASHEx_Erase>:
{
 800b844:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 800b848:	4f44      	ldr	r7, [pc, #272]	; (800b95c <HAL_FLASHEx_Erase+0x118>)
 800b84a:	7e3b      	ldrb	r3, [r7, #24]
 800b84c:	2b01      	cmp	r3, #1
 800b84e:	d053      	beq.n	800b8f8 <HAL_FLASHEx_Erase+0xb4>
 800b850:	2301      	movs	r3, #1
 800b852:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800b854:	f24c 3050 	movw	r0, #50000	; 0xc350
 800b858:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 800b85a:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800b85c:	f7ff ff98 	bl	800b790 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 800b860:	4606      	mov	r6, r0
 800b862:	2800      	cmp	r0, #0
 800b864:	d143      	bne.n	800b8ee <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 800b866:	f04f 33ff 	mov.w	r3, #4294967295
 800b86a:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 800b86e:	f8d9 3000 	ldr.w	r3, [r9]
 800b872:	2b01      	cmp	r3, #1
 800b874:	d044      	beq.n	800b900 <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800b876:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 800b87a:	442b      	add	r3, r5
 800b87c:	429d      	cmp	r5, r3
 800b87e:	d234      	bcs.n	800b8ea <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b880:	4c37      	ldr	r4, [pc, #220]	; (800b960 <HAL_FLASHEx_Erase+0x11c>)
 800b882:	e005      	b.n	800b890 <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800b884:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 800b888:	3501      	adds	r5, #1
 800b88a:	4413      	add	r3, r2
 800b88c:	42ab      	cmp	r3, r5
 800b88e:	d92c      	bls.n	800b8ea <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 800b890:	f899 3010 	ldrb.w	r3, [r9, #16]
 800b894:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 800b896:	f44f 7140 	mov.w	r1, #768	; 0x300
 800b89a:	bf98      	it	ls
 800b89c:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b89e:	6923      	ldr	r3, [r4, #16]
 800b8a0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b8a4:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 800b8a6:	6923      	ldr	r3, [r4, #16]
 800b8a8:	430b      	orrs	r3, r1
 800b8aa:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 800b8ac:	6923      	ldr	r3, [r4, #16]
 800b8ae:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800b8b2:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800b8b4:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 800b8b6:	2d0b      	cmp	r5, #11
    Sector += 4U;
 800b8b8:	bf8c      	ite	hi
 800b8ba:	1d2a      	addhi	r2, r5, #4
 800b8bc:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800b8be:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800b8c2:	f043 0302 	orr.w	r3, r3, #2
 800b8c6:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 800b8c8:	6923      	ldr	r3, [r4, #16]
 800b8ca:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b8ce:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800b8d0:	f24c 3050 	movw	r0, #50000	; 0xc350
 800b8d4:	f7ff ff5c 	bl	800b790 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 800b8d8:	6923      	ldr	r3, [r4, #16]
 800b8da:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 800b8de:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 800b8e0:	2800      	cmp	r0, #0
 800b8e2:	d0cf      	beq.n	800b884 <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 800b8e4:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800b8e8:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 800b8ea:	f7ff ff7f 	bl	800b7ec <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 800b8ee:	2300      	movs	r3, #0
 800b8f0:	763b      	strb	r3, [r7, #24]
}
 800b8f2:	4630      	mov	r0, r6
 800b8f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 800b8f8:	2602      	movs	r6, #2
}
 800b8fa:	4630      	mov	r0, r6
 800b8fc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b900:	4a17      	ldr	r2, [pc, #92]	; (800b960 <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800b902:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b906:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800b908:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b90c:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800b910:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800b912:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 800b914:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800b916:	d01a      	beq.n	800b94e <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 800b918:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 800b91a:	bf0c      	ite	eq
 800b91c:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 800b920:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 800b924:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 800b926:	4c0e      	ldr	r4, [pc, #56]	; (800b960 <HAL_FLASHEx_Erase+0x11c>)
 800b928:	021b      	lsls	r3, r3, #8
 800b92a:	6922      	ldr	r2, [r4, #16]
 800b92c:	b29b      	uxth	r3, r3
 800b92e:	4313      	orrs	r3, r2
 800b930:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b934:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800b936:	f24c 3050 	movw	r0, #50000	; 0xc350
 800b93a:	f7ff ff29 	bl	800b790 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 800b93e:	6923      	ldr	r3, [r4, #16]
 800b940:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800b944:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800b948:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 800b94a:	6123      	str	r3, [r4, #16]
 800b94c:	e7cd      	b.n	800b8ea <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 800b94e:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 800b952:	f041 0104 	orr.w	r1, r1, #4
 800b956:	6111      	str	r1, [r2, #16]
 800b958:	e7e5      	b.n	800b926 <HAL_FLASHEx_Erase+0xe2>
 800b95a:	bf00      	nop
 800b95c:	20002a3c 	.word	0x20002a3c
 800b960:	40023c00 	.word	0x40023c00

0800b964 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800b964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800b968:	2200      	movs	r2, #0
 800b96a:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800b96c:	f8df a260 	ldr.w	sl, [pc, #608]	; 800bbd0 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800b970:	4e90      	ldr	r6, [pc, #576]	; (800bbb4 <HAL_GPIO_Init+0x250>)
{
 800b972:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800b974:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800b976:	4689      	mov	r9, r1
 800b978:	e005      	b.n	800b986 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800b97a:	3301      	adds	r3, #1
 800b97c:	2b10      	cmp	r3, #16
 800b97e:	f102 0202 	add.w	r2, r2, #2
 800b982:	f000 8095 	beq.w	800bab0 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800b986:	2101      	movs	r1, #1
 800b988:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800b98a:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800b98e:	43a1      	bics	r1, r4
 800b990:	d1f3      	bne.n	800b97a <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800b992:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800b996:	f00c 0103 	and.w	r1, ip, #3
 800b99a:	1e4d      	subs	r5, r1, #1
 800b99c:	2d01      	cmp	r5, #1
 800b99e:	f240 808a 	bls.w	800bab6 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800b9a2:	2903      	cmp	r1, #3
 800b9a4:	f040 80ca 	bne.w	800bb3c <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800b9a8:	4091      	lsls	r1, r2
 800b9aa:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800b9ac:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800b9ae:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800b9b0:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800b9b2:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800b9b6:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800b9b8:	d0df      	beq.n	800b97a <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800b9ba:	2100      	movs	r1, #0
 800b9bc:	9103      	str	r1, [sp, #12]
 800b9be:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800b9c2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800b9c6:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800b9ca:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800b9ce:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800b9d2:	9103      	str	r1, [sp, #12]
 800b9d4:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800b9d6:	f023 0103 	bic.w	r1, r3, #3
 800b9da:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800b9de:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800b9e2:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800b9e6:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800b9e8:	00bf      	lsls	r7, r7, #2
 800b9ea:	f04f 0e0f 	mov.w	lr, #15
 800b9ee:	fa0e fe07 	lsl.w	lr, lr, r7
 800b9f2:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800b9f6:	4d70      	ldr	r5, [pc, #448]	; (800bbb8 <HAL_GPIO_Init+0x254>)
 800b9f8:	42a8      	cmp	r0, r5
 800b9fa:	d02e      	beq.n	800ba5a <HAL_GPIO_Init+0xf6>
 800b9fc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800ba00:	42a8      	cmp	r0, r5
 800ba02:	f000 809f 	beq.w	800bb44 <HAL_GPIO_Init+0x1e0>
 800ba06:	4d6d      	ldr	r5, [pc, #436]	; (800bbbc <HAL_GPIO_Init+0x258>)
 800ba08:	42a8      	cmp	r0, r5
 800ba0a:	f000 80a2 	beq.w	800bb52 <HAL_GPIO_Init+0x1ee>
 800ba0e:	4d6c      	ldr	r5, [pc, #432]	; (800bbc0 <HAL_GPIO_Init+0x25c>)
 800ba10:	42a8      	cmp	r0, r5
 800ba12:	f000 80a5 	beq.w	800bb60 <HAL_GPIO_Init+0x1fc>
 800ba16:	4d6b      	ldr	r5, [pc, #428]	; (800bbc4 <HAL_GPIO_Init+0x260>)
 800ba18:	42a8      	cmp	r0, r5
 800ba1a:	f000 80a8 	beq.w	800bb6e <HAL_GPIO_Init+0x20a>
 800ba1e:	4d6a      	ldr	r5, [pc, #424]	; (800bbc8 <HAL_GPIO_Init+0x264>)
 800ba20:	42a8      	cmp	r0, r5
 800ba22:	f000 80b2 	beq.w	800bb8a <HAL_GPIO_Init+0x226>
 800ba26:	4d69      	ldr	r5, [pc, #420]	; (800bbcc <HAL_GPIO_Init+0x268>)
 800ba28:	42a8      	cmp	r0, r5
 800ba2a:	f000 80b5 	beq.w	800bb98 <HAL_GPIO_Init+0x234>
 800ba2e:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800bbd4 <HAL_GPIO_Init+0x270>
 800ba32:	4570      	cmp	r0, lr
 800ba34:	f000 80a2 	beq.w	800bb7c <HAL_GPIO_Init+0x218>
 800ba38:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800bbd8 <HAL_GPIO_Init+0x274>
 800ba3c:	4570      	cmp	r0, lr
 800ba3e:	f000 80b2 	beq.w	800bba6 <HAL_GPIO_Init+0x242>
 800ba42:	f8df e198 	ldr.w	lr, [pc, #408]	; 800bbdc <HAL_GPIO_Init+0x278>
 800ba46:	4570      	cmp	r0, lr
 800ba48:	bf0c      	ite	eq
 800ba4a:	f04f 0e09 	moveq.w	lr, #9
 800ba4e:	f04f 0e0a 	movne.w	lr, #10
 800ba52:	fa0e f707 	lsl.w	r7, lr, r7
 800ba56:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800ba5a:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800ba5e:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800ba60:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800ba64:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800ba68:	bf0c      	ite	eq
 800ba6a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800ba6c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800ba70:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800ba72:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800ba74:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800ba78:	bf0c      	ite	eq
 800ba7a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800ba7c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800ba80:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800ba82:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800ba84:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800ba88:	bf0c      	ite	eq
 800ba8a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800ba8c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800ba90:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800ba92:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800ba94:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ba98:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800ba9c:	bf0c      	ite	eq
 800ba9e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800baa0:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800baa4:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800baa6:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800baa8:	f102 0202 	add.w	r2, r2, #2
 800baac:	f47f af6b 	bne.w	800b986 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800bab0:	b005      	add	sp, #20
 800bab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bab6:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800baba:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800babe:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bac2:	2503      	movs	r5, #3
 800bac4:	fa05 f802 	lsl.w	r8, r5, r2
 800bac8:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bacc:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800bad0:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800bad2:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800bad4:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800bad8:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800badc:	409f      	lsls	r7, r3
 800bade:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bae2:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800bae6:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800bae8:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800baea:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800baee:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800baf2:	4097      	lsls	r7, r2
 800baf4:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800baf8:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800bafa:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800bafc:	fa01 f102 	lsl.w	r1, r1, r2
 800bb00:	f47f af54 	bne.w	800b9ac <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800bb04:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800bb08:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bb0c:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800bb10:	f8de 7020 	ldr.w	r7, [lr, #32]
 800bb14:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bb16:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bb1a:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bb1e:	fa07 f708 	lsl.w	r7, r7, r8
 800bb22:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bb24:	270f      	movs	r7, #15
 800bb26:	fa07 f808 	lsl.w	r8, r7, r8
 800bb2a:	9f00      	ldr	r7, [sp, #0]
 800bb2c:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bb30:	9f01      	ldr	r7, [sp, #4]
 800bb32:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800bb36:	f8ce 7020 	str.w	r7, [lr, #32]
 800bb3a:	e737      	b.n	800b9ac <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bb3c:	2503      	movs	r5, #3
 800bb3e:	4095      	lsls	r5, r2
 800bb40:	43ed      	mvns	r5, r5
 800bb42:	e7d1      	b.n	800bae8 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bb44:	f04f 0e01 	mov.w	lr, #1
 800bb48:	fa0e f707 	lsl.w	r7, lr, r7
 800bb4c:	ea48 0807 	orr.w	r8, r8, r7
 800bb50:	e783      	b.n	800ba5a <HAL_GPIO_Init+0xf6>
 800bb52:	f04f 0e02 	mov.w	lr, #2
 800bb56:	fa0e f707 	lsl.w	r7, lr, r7
 800bb5a:	ea48 0807 	orr.w	r8, r8, r7
 800bb5e:	e77c      	b.n	800ba5a <HAL_GPIO_Init+0xf6>
 800bb60:	f04f 0e03 	mov.w	lr, #3
 800bb64:	fa0e f707 	lsl.w	r7, lr, r7
 800bb68:	ea48 0807 	orr.w	r8, r8, r7
 800bb6c:	e775      	b.n	800ba5a <HAL_GPIO_Init+0xf6>
 800bb6e:	f04f 0e04 	mov.w	lr, #4
 800bb72:	fa0e f707 	lsl.w	r7, lr, r7
 800bb76:	ea48 0807 	orr.w	r8, r8, r7
 800bb7a:	e76e      	b.n	800ba5a <HAL_GPIO_Init+0xf6>
 800bb7c:	f04f 0e07 	mov.w	lr, #7
 800bb80:	fa0e f707 	lsl.w	r7, lr, r7
 800bb84:	ea48 0807 	orr.w	r8, r8, r7
 800bb88:	e767      	b.n	800ba5a <HAL_GPIO_Init+0xf6>
 800bb8a:	f04f 0e05 	mov.w	lr, #5
 800bb8e:	fa0e f707 	lsl.w	r7, lr, r7
 800bb92:	ea48 0807 	orr.w	r8, r8, r7
 800bb96:	e760      	b.n	800ba5a <HAL_GPIO_Init+0xf6>
 800bb98:	f04f 0e06 	mov.w	lr, #6
 800bb9c:	fa0e f707 	lsl.w	r7, lr, r7
 800bba0:	ea48 0807 	orr.w	r8, r8, r7
 800bba4:	e759      	b.n	800ba5a <HAL_GPIO_Init+0xf6>
 800bba6:	f04f 0e08 	mov.w	lr, #8
 800bbaa:	fa0e f707 	lsl.w	r7, lr, r7
 800bbae:	ea48 0807 	orr.w	r8, r8, r7
 800bbb2:	e752      	b.n	800ba5a <HAL_GPIO_Init+0xf6>
 800bbb4:	40013c00 	.word	0x40013c00
 800bbb8:	40020000 	.word	0x40020000
 800bbbc:	40020800 	.word	0x40020800
 800bbc0:	40020c00 	.word	0x40020c00
 800bbc4:	40021000 	.word	0x40021000
 800bbc8:	40021400 	.word	0x40021400
 800bbcc:	40021800 	.word	0x40021800
 800bbd0:	40023800 	.word	0x40023800
 800bbd4:	40021c00 	.word	0x40021c00
 800bbd8:	40022000 	.word	0x40022000
 800bbdc:	40022400 	.word	0x40022400

0800bbe0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800bbe0:	6903      	ldr	r3, [r0, #16]
 800bbe2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800bbe4:	bf14      	ite	ne
 800bbe6:	2001      	movne	r0, #1
 800bbe8:	2000      	moveq	r0, #0
 800bbea:	4770      	bx	lr

0800bbec <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800bbec:	b902      	cbnz	r2, 800bbf0 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800bbee:	0409      	lsls	r1, r1, #16
 800bbf0:	6181      	str	r1, [r0, #24]
  }
}
 800bbf2:	4770      	bx	lr

0800bbf4 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800bbf4:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800bbf6:	ea01 0203 	and.w	r2, r1, r3
 800bbfa:	ea21 0103 	bic.w	r1, r1, r3
 800bbfe:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800bc02:	6181      	str	r1, [r0, #24]
}
 800bc04:	4770      	bx	lr
 800bc06:	bf00      	nop

0800bc08 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800bc08:	4770      	bx	lr
 800bc0a:	bf00      	nop

0800bc0c <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800bc0c:	4a04      	ldr	r2, [pc, #16]	; (800bc20 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800bc0e:	6951      	ldr	r1, [r2, #20]
 800bc10:	4201      	tst	r1, r0
 800bc12:	d100      	bne.n	800bc16 <HAL_GPIO_EXTI_IRQHandler+0xa>
 800bc14:	4770      	bx	lr
{
 800bc16:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800bc18:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800bc1a:	f7ff fff5 	bl	800bc08 <HAL_GPIO_EXTI_Callback>
}
 800bc1e:	bd08      	pop	{r3, pc}
 800bc20:	40013c00 	.word	0x40013c00

0800bc24 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800bc24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bc28:	6804      	ldr	r4, [r0, #0]
{
 800bc2a:	b083      	sub	sp, #12
 800bc2c:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bc2e:	6823      	ldr	r3, [r4, #0]
{
 800bc30:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800bc34:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bc38:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800bc3c:	4606      	mov	r6, r0
 800bc3e:	468a      	mov	sl, r1
 800bc40:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bc42:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800bc44:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bc48:	d136      	bne.n	800bcb8 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bc4a:	6965      	ldr	r5, [r4, #20]
 800bc4c:	07e8      	lsls	r0, r5, #31
 800bc4e:	d5fc      	bpl.n	800bc4a <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800bc50:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800bc54:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800bc56:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bc5a:	d003      	beq.n	800bc64 <I2C_RequestMemoryWrite+0x40>
 800bc5c:	e04f      	b.n	800bcfe <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bc5e:	6961      	ldr	r1, [r4, #20]
 800bc60:	054d      	lsls	r5, r1, #21
 800bc62:	d45d      	bmi.n	800bd20 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bc64:	6961      	ldr	r1, [r4, #20]
 800bc66:	078b      	lsls	r3, r1, #30
 800bc68:	d5f9      	bpl.n	800bc5e <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bc6a:	2300      	movs	r3, #0
 800bc6c:	9301      	str	r3, [sp, #4]
 800bc6e:	6963      	ldr	r3, [r4, #20]
 800bc70:	9301      	str	r3, [sp, #4]
 800bc72:	69a3      	ldr	r3, [r4, #24]
 800bc74:	9301      	str	r3, [sp, #4]
 800bc76:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bc78:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bc7c:	f040 8088 	bne.w	800bd90 <I2C_RequestMemoryWrite+0x16c>
 800bc80:	6963      	ldr	r3, [r4, #20]
 800bc82:	061a      	lsls	r2, r3, #24
 800bc84:	d464      	bmi.n	800bd50 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bc86:	6963      	ldr	r3, [r4, #20]
 800bc88:	055b      	lsls	r3, r3, #21
 800bc8a:	d5f9      	bpl.n	800bc80 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800bc8c:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bc8e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800bc92:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bc94:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800bc96:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800bc98:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bc9c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bca0:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800bca2:	f043 0304 	orr.w	r3, r3, #4
 800bca6:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800bca8:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800bcaa:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800bcac:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800bcae:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800bcb2:	d066      	beq.n	800bd82 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800bcb4:	2001      	movs	r0, #1
 800bcb6:	e01f      	b.n	800bcf8 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bcb8:	6963      	ldr	r3, [r4, #20]
 800bcba:	07d9      	lsls	r1, r3, #31
 800bcbc:	d4c8      	bmi.n	800bc50 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bcbe:	f7ff fbb9 	bl	800b434 <HAL_GetTick>
 800bcc2:	eba0 000b 	sub.w	r0, r0, fp
 800bcc6:	4581      	cmp	r9, r0
 800bcc8:	d304      	bcc.n	800bcd4 <I2C_RequestMemoryWrite+0xb0>
 800bcca:	f1b9 0f00 	cmp.w	r9, #0
 800bcce:	d001      	beq.n	800bcd4 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bcd0:	6834      	ldr	r4, [r6, #0]
 800bcd2:	e7b7      	b.n	800bc44 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bcd4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800bcd6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bcd8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800bcda:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800bcde:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800bce2:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bce4:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800bce6:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800bcea:	f042 0220 	orr.w	r2, r2, #32
 800bcee:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bcf0:	680b      	ldr	r3, [r1, #0]
 800bcf2:	05dc      	lsls	r4, r3, #23
 800bcf4:	d435      	bmi.n	800bd62 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800bcf6:	2003      	movs	r0, #3
}
 800bcf8:	b003      	add	sp, #12
 800bcfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bcfe:	6963      	ldr	r3, [r4, #20]
 800bd00:	0798      	lsls	r0, r3, #30
 800bd02:	d4b2      	bmi.n	800bc6a <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bd04:	6963      	ldr	r3, [r4, #20]
 800bd06:	055a      	lsls	r2, r3, #21
 800bd08:	d40a      	bmi.n	800bd20 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bd0a:	f7ff fb93 	bl	800b434 <HAL_GetTick>
 800bd0e:	eba0 000b 	sub.w	r0, r0, fp
 800bd12:	4581      	cmp	r9, r0
 800bd14:	d34e      	bcc.n	800bdb4 <I2C_RequestMemoryWrite+0x190>
 800bd16:	f1b9 0f00 	cmp.w	r9, #0
 800bd1a:	d04b      	beq.n	800bdb4 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bd1c:	6834      	ldr	r4, [r6, #0]
 800bd1e:	e79a      	b.n	800bc56 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bd20:	6823      	ldr	r3, [r4, #0]
 800bd22:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800bd26:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800bd28:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bd2a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800bd2e:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bd30:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800bd32:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800bd34:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bd38:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bd3c:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800bd3e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bd42:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800bd46:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bd48:	6433      	str	r3, [r6, #64]	; 0x40
}
 800bd4a:	b003      	add	sp, #12
 800bd4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800bd50:	f1b8 0f01 	cmp.w	r8, #1
 800bd54:	d109      	bne.n	800bd6a <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800bd56:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800bd58:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800bd5a:	6127      	str	r7, [r4, #16]
}
 800bd5c:	b003      	add	sp, #12
 800bd5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800bd62:	f44f 7300 	mov.w	r3, #512	; 0x200
 800bd66:	6433      	str	r3, [r6, #64]	; 0x40
 800bd68:	e7c5      	b.n	800bcf6 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800bd6a:	0a3b      	lsrs	r3, r7, #8
 800bd6c:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bd6e:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bd72:	d12e      	bne.n	800bdd2 <I2C_RequestMemoryWrite+0x1ae>
 800bd74:	6963      	ldr	r3, [r4, #20]
 800bd76:	0619      	lsls	r1, r3, #24
 800bd78:	d4ed      	bmi.n	800bd56 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bd7a:	6963      	ldr	r3, [r4, #20]
 800bd7c:	055a      	lsls	r2, r3, #21
 800bd7e:	d5f9      	bpl.n	800bd74 <I2C_RequestMemoryWrite+0x150>
 800bd80:	e784      	b.n	800bc8c <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bd82:	6832      	ldr	r2, [r6, #0]
 800bd84:	6813      	ldr	r3, [r2, #0]
 800bd86:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800bd8a:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bd8c:	6013      	str	r3, [r2, #0]
 800bd8e:	e7b3      	b.n	800bcf8 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bd90:	6963      	ldr	r3, [r4, #20]
 800bd92:	061d      	lsls	r5, r3, #24
 800bd94:	d4dc      	bmi.n	800bd50 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bd96:	6963      	ldr	r3, [r4, #20]
 800bd98:	0559      	lsls	r1, r3, #21
 800bd9a:	f53f af77 	bmi.w	800bc8c <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bd9e:	f7ff fb49 	bl	800b434 <HAL_GetTick>
 800bda2:	eba0 000b 	sub.w	r0, r0, fp
 800bda6:	4581      	cmp	r9, r0
 800bda8:	d325      	bcc.n	800bdf6 <I2C_RequestMemoryWrite+0x1d2>
 800bdaa:	f1b9 0f00 	cmp.w	r9, #0
 800bdae:	d022      	beq.n	800bdf6 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bdb0:	6834      	ldr	r4, [r6, #0]
 800bdb2:	e761      	b.n	800bc78 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bdb4:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800bdb6:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bdb8:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800bdba:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bdbe:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bdc2:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800bdc4:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bdc8:	f043 0320 	orr.w	r3, r3, #32
 800bdcc:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800bdce:	2001      	movs	r0, #1
 800bdd0:	e792      	b.n	800bcf8 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bdd2:	6963      	ldr	r3, [r4, #20]
 800bdd4:	061b      	lsls	r3, r3, #24
 800bdd6:	d4be      	bmi.n	800bd56 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bdd8:	6963      	ldr	r3, [r4, #20]
 800bdda:	0558      	lsls	r0, r3, #21
 800bddc:	f53f af56 	bmi.w	800bc8c <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bde0:	f7ff fb28 	bl	800b434 <HAL_GetTick>
 800bde4:	eba0 000b 	sub.w	r0, r0, fp
 800bde8:	4581      	cmp	r9, r0
 800bdea:	d304      	bcc.n	800bdf6 <I2C_RequestMemoryWrite+0x1d2>
 800bdec:	f1b9 0f00 	cmp.w	r9, #0
 800bdf0:	d001      	beq.n	800bdf6 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bdf2:	6834      	ldr	r4, [r6, #0]
 800bdf4:	e7bb      	b.n	800bd6e <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bdf6:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800bdf8:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bdfa:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800bdfc:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800be00:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800be04:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800be06:	4313      	orrs	r3, r2
 800be08:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800be0a:	e74d      	b.n	800bca8 <I2C_RequestMemoryWrite+0x84>

0800be0c <I2C_RequestMemoryRead>:
{
 800be0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800be10:	6804      	ldr	r4, [r0, #0]
{
 800be12:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800be14:	6823      	ldr	r3, [r4, #0]
 800be16:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800be1a:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800be1c:	6823      	ldr	r3, [r4, #0]
{
 800be1e:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800be20:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800be24:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800be28:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800be2c:	6023      	str	r3, [r4, #0]
{
 800be2e:	4606      	mov	r6, r0
 800be30:	468b      	mov	fp, r1
 800be32:	4617      	mov	r7, r2
 800be34:	f1ba 3fff 	cmp.w	sl, #4294967295
 800be38:	d13a      	bne.n	800beb0 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800be3a:	6965      	ldr	r5, [r4, #20]
 800be3c:	07eb      	lsls	r3, r5, #31
 800be3e:	d5fc      	bpl.n	800be3a <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800be40:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800be44:	6123      	str	r3, [r4, #16]
 800be46:	fa5f fb8b 	uxtb.w	fp, fp
 800be4a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800be4e:	d003      	beq.n	800be58 <I2C_RequestMemoryRead+0x4c>
 800be50:	e069      	b.n	800bf26 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800be52:	6965      	ldr	r5, [r4, #20]
 800be54:	056a      	lsls	r2, r5, #21
 800be56:	d44e      	bmi.n	800bef6 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800be58:	6965      	ldr	r5, [r4, #20]
 800be5a:	07a9      	lsls	r1, r5, #30
 800be5c:	d5f9      	bpl.n	800be52 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800be5e:	2300      	movs	r3, #0
 800be60:	9301      	str	r3, [sp, #4]
 800be62:	6963      	ldr	r3, [r4, #20]
 800be64:	9301      	str	r3, [sp, #4]
 800be66:	69a3      	ldr	r3, [r4, #24]
 800be68:	9301      	str	r3, [sp, #4]
 800be6a:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800be6c:	f1ba 3fff 	cmp.w	sl, #4294967295
 800be70:	f040 80bd 	bne.w	800bfee <I2C_RequestMemoryRead+0x1e2>
 800be74:	6963      	ldr	r3, [r4, #20]
 800be76:	0618      	lsls	r0, r3, #24
 800be78:	d468      	bmi.n	800bf4c <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800be7a:	6963      	ldr	r3, [r4, #20]
 800be7c:	0559      	lsls	r1, r3, #21
 800be7e:	d5f9      	bpl.n	800be74 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800be80:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800be82:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800be86:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800be88:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800be8a:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800be8c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800be90:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800be94:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800be96:	f043 0304 	orr.w	r3, r3, #4
 800be9a:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800be9c:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800be9e:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800bea0:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800bea2:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800bea6:	d070      	beq.n	800bf8a <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800bea8:	2001      	movs	r0, #1
}
 800beaa:	b003      	add	sp, #12
 800beac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800beb0:	6963      	ldr	r3, [r4, #20]
 800beb2:	07dd      	lsls	r5, r3, #31
 800beb4:	d4c4      	bmi.n	800be40 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800beb6:	f7ff fabd 	bl	800b434 <HAL_GetTick>
 800beba:	eba0 0009 	sub.w	r0, r0, r9
 800bebe:	4582      	cmp	sl, r0
 800bec0:	d304      	bcc.n	800becc <I2C_RequestMemoryRead+0xc0>
 800bec2:	f1ba 0f00 	cmp.w	sl, #0
 800bec6:	d001      	beq.n	800becc <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bec8:	6834      	ldr	r4, [r6, #0]
 800beca:	e7b3      	b.n	800be34 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800becc:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800bece:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bed0:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800bed2:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800bed6:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800beda:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bedc:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800bede:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800bee2:	f042 0220 	orr.w	r2, r2, #32
 800bee6:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bee8:	680b      	ldr	r3, [r1, #0]
 800beea:	05dc      	lsls	r4, r3, #23
 800beec:	d43d      	bmi.n	800bf6a <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800beee:	2003      	movs	r0, #3
}
 800bef0:	b003      	add	sp, #12
 800bef2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bef6:	6823      	ldr	r3, [r4, #0]
 800bef8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800befc:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800befe:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bf00:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800bf04:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800bf06:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800bf08:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800bf0a:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bf0e:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bf12:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800bf14:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bf18:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800bf1c:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bf1e:	6433      	str	r3, [r6, #64]	; 0x40
}
 800bf20:	b003      	add	sp, #12
 800bf22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bf26:	6963      	ldr	r3, [r4, #20]
 800bf28:	079b      	lsls	r3, r3, #30
 800bf2a:	d498      	bmi.n	800be5e <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bf2c:	6963      	ldr	r3, [r4, #20]
 800bf2e:	0558      	lsls	r0, r3, #21
 800bf30:	d4e1      	bmi.n	800bef6 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bf32:	f7ff fa7f 	bl	800b434 <HAL_GetTick>
 800bf36:	eba0 0009 	sub.w	r0, r0, r9
 800bf3a:	4582      	cmp	sl, r0
 800bf3c:	f0c0 808f 	bcc.w	800c05e <I2C_RequestMemoryRead+0x252>
 800bf40:	f1ba 0f00 	cmp.w	sl, #0
 800bf44:	f000 808b 	beq.w	800c05e <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bf48:	6834      	ldr	r4, [r6, #0]
 800bf4a:	e77e      	b.n	800be4a <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800bf4c:	f1b8 0f01 	cmp.w	r8, #1
 800bf50:	d10f      	bne.n	800bf72 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800bf52:	b2ff      	uxtb	r7, r7
 800bf54:	6127      	str	r7, [r4, #16]
 800bf56:	f1ba 3fff 	cmp.w	sl, #4294967295
 800bf5a:	d16e      	bne.n	800c03a <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf5c:	6963      	ldr	r3, [r4, #20]
 800bf5e:	061b      	lsls	r3, r3, #24
 800bf60:	d41a      	bmi.n	800bf98 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bf62:	6963      	ldr	r3, [r4, #20]
 800bf64:	055f      	lsls	r7, r3, #21
 800bf66:	d5f9      	bpl.n	800bf5c <I2C_RequestMemoryRead+0x150>
 800bf68:	e78a      	b.n	800be80 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800bf6a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800bf6e:	6433      	str	r3, [r6, #64]	; 0x40
 800bf70:	e7bd      	b.n	800beee <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800bf72:	0a3b      	lsrs	r3, r7, #8
 800bf74:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf76:	f1ba 3fff 	cmp.w	sl, #4294967295
 800bf7a:	d17e      	bne.n	800c07a <I2C_RequestMemoryRead+0x26e>
 800bf7c:	6963      	ldr	r3, [r4, #20]
 800bf7e:	061d      	lsls	r5, r3, #24
 800bf80:	d4e7      	bmi.n	800bf52 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bf82:	6963      	ldr	r3, [r4, #20]
 800bf84:	0558      	lsls	r0, r3, #21
 800bf86:	d5f9      	bpl.n	800bf7c <I2C_RequestMemoryRead+0x170>
 800bf88:	e77a      	b.n	800be80 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bf8a:	6832      	ldr	r2, [r6, #0]
 800bf8c:	6813      	ldr	r3, [r2, #0]
 800bf8e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800bf92:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bf94:	6013      	str	r3, [r2, #0]
 800bf96:	e7ab      	b.n	800bef0 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bf98:	6823      	ldr	r3, [r4, #0]
 800bf9a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800bf9e:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800bfa0:	f1ba 3fff 	cmp.w	sl, #4294967295
 800bfa4:	d113      	bne.n	800bfce <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bfa6:	6963      	ldr	r3, [r4, #20]
 800bfa8:	07d8      	lsls	r0, r3, #31
 800bfaa:	d5fc      	bpl.n	800bfa6 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800bfac:	f04b 0301 	orr.w	r3, fp, #1
 800bfb0:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800bfb2:	f1ba 3fff 	cmp.w	sl, #4294967295
 800bfb6:	d003      	beq.n	800bfc0 <I2C_RequestMemoryRead+0x1b4>
 800bfb8:	e02b      	b.n	800c012 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bfba:	6963      	ldr	r3, [r4, #20]
 800bfbc:	055b      	lsls	r3, r3, #21
 800bfbe:	d49a      	bmi.n	800bef6 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bfc0:	6963      	ldr	r3, [r4, #20]
 800bfc2:	43db      	mvns	r3, r3
 800bfc4:	f013 0302 	ands.w	r3, r3, #2
 800bfc8:	d1f7      	bne.n	800bfba <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800bfca:	4618      	mov	r0, r3
 800bfcc:	e790      	b.n	800bef0 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bfce:	6963      	ldr	r3, [r4, #20]
 800bfd0:	07d9      	lsls	r1, r3, #31
 800bfd2:	d4eb      	bmi.n	800bfac <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bfd4:	f7ff fa2e 	bl	800b434 <HAL_GetTick>
 800bfd8:	eba0 0009 	sub.w	r0, r0, r9
 800bfdc:	4582      	cmp	sl, r0
 800bfde:	f4ff af75 	bcc.w	800becc <I2C_RequestMemoryRead+0xc0>
 800bfe2:	f1ba 0f00 	cmp.w	sl, #0
 800bfe6:	f43f af71 	beq.w	800becc <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800bfea:	6834      	ldr	r4, [r6, #0]
 800bfec:	e7d8      	b.n	800bfa0 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bfee:	6963      	ldr	r3, [r4, #20]
 800bff0:	061a      	lsls	r2, r3, #24
 800bff2:	d4ab      	bmi.n	800bf4c <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bff4:	6963      	ldr	r3, [r4, #20]
 800bff6:	055d      	lsls	r5, r3, #21
 800bff8:	f53f af42 	bmi.w	800be80 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bffc:	f7ff fa1a 	bl	800b434 <HAL_GetTick>
 800c000:	eba0 0009 	sub.w	r0, r0, r9
 800c004:	4582      	cmp	sl, r0
 800c006:	d34b      	bcc.n	800c0a0 <I2C_RequestMemoryRead+0x294>
 800c008:	f1ba 0f00 	cmp.w	sl, #0
 800c00c:	d048      	beq.n	800c0a0 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c00e:	6834      	ldr	r4, [r6, #0]
 800c010:	e72c      	b.n	800be6c <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c012:	6963      	ldr	r3, [r4, #20]
 800c014:	43db      	mvns	r3, r3
 800c016:	f013 0302 	ands.w	r3, r3, #2
 800c01a:	d0d6      	beq.n	800bfca <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c01c:	6963      	ldr	r3, [r4, #20]
 800c01e:	055a      	lsls	r2, r3, #21
 800c020:	f53f af69 	bmi.w	800bef6 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c024:	f7ff fa06 	bl	800b434 <HAL_GetTick>
 800c028:	eba0 0009 	sub.w	r0, r0, r9
 800c02c:	4582      	cmp	sl, r0
 800c02e:	d316      	bcc.n	800c05e <I2C_RequestMemoryRead+0x252>
 800c030:	f1ba 0f00 	cmp.w	sl, #0
 800c034:	d013      	beq.n	800c05e <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c036:	6834      	ldr	r4, [r6, #0]
 800c038:	e7bb      	b.n	800bfb2 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c03a:	6963      	ldr	r3, [r4, #20]
 800c03c:	061d      	lsls	r5, r3, #24
 800c03e:	d4ab      	bmi.n	800bf98 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c040:	6963      	ldr	r3, [r4, #20]
 800c042:	055a      	lsls	r2, r3, #21
 800c044:	f53f af1c 	bmi.w	800be80 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c048:	f7ff f9f4 	bl	800b434 <HAL_GetTick>
 800c04c:	eba0 0009 	sub.w	r0, r0, r9
 800c050:	4582      	cmp	sl, r0
 800c052:	d325      	bcc.n	800c0a0 <I2C_RequestMemoryRead+0x294>
 800c054:	f1ba 0f00 	cmp.w	sl, #0
 800c058:	d022      	beq.n	800c0a0 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c05a:	6834      	ldr	r4, [r6, #0]
 800c05c:	e77b      	b.n	800bf56 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c05e:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800c060:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c062:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800c064:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c068:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c06c:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c06e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c072:	f043 0320 	orr.w	r3, r3, #32
 800c076:	6433      	str	r3, [r6, #64]	; 0x40
 800c078:	e716      	b.n	800bea8 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c07a:	6963      	ldr	r3, [r4, #20]
 800c07c:	0619      	lsls	r1, r3, #24
 800c07e:	f53f af68 	bmi.w	800bf52 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c082:	6963      	ldr	r3, [r4, #20]
 800c084:	055b      	lsls	r3, r3, #21
 800c086:	f53f aefb 	bmi.w	800be80 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c08a:	f7ff f9d3 	bl	800b434 <HAL_GetTick>
 800c08e:	eba0 0009 	sub.w	r0, r0, r9
 800c092:	4582      	cmp	sl, r0
 800c094:	d304      	bcc.n	800c0a0 <I2C_RequestMemoryRead+0x294>
 800c096:	f1ba 0f00 	cmp.w	sl, #0
 800c09a:	d001      	beq.n	800c0a0 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c09c:	6834      	ldr	r4, [r6, #0]
 800c09e:	e76a      	b.n	800bf76 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c0a0:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c0a2:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c0a4:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c0a6:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c0aa:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c0ae:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c0b0:	4313      	orrs	r3, r2
 800c0b2:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800c0b4:	e6f2      	b.n	800be9c <I2C_RequestMemoryRead+0x90>
 800c0b6:	bf00      	nop

0800c0b8 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800c0b8:	2800      	cmp	r0, #0
 800c0ba:	f000 80b9 	beq.w	800c230 <HAL_I2C_Init+0x178>
{
 800c0be:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800c0c0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c0c4:	4604      	mov	r4, r0
 800c0c6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c0ca:	2b00      	cmp	r3, #0
 800c0cc:	f000 8098 	beq.w	800c200 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800c0d0:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800c0d2:	2224      	movs	r2, #36	; 0x24
 800c0d4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800c0d8:	681a      	ldr	r2, [r3, #0]
 800c0da:	f022 0201 	bic.w	r2, r2, #1
 800c0de:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800c0e0:	681a      	ldr	r2, [r3, #0]
 800c0e2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800c0e6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800c0e8:	681a      	ldr	r2, [r3, #0]
 800c0ea:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800c0ee:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800c0f0:	f001 fe70 	bl	800ddd4 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c0f4:	6865      	ldr	r5, [r4, #4]
 800c0f6:	4b4f      	ldr	r3, [pc, #316]	; (800c234 <HAL_I2C_Init+0x17c>)
 800c0f8:	429d      	cmp	r5, r3
 800c0fa:	d84f      	bhi.n	800c19c <HAL_I2C_Init+0xe4>
 800c0fc:	4b4e      	ldr	r3, [pc, #312]	; (800c238 <HAL_I2C_Init+0x180>)
 800c0fe:	4298      	cmp	r0, r3
 800c100:	d97c      	bls.n	800c1fc <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800c102:	4b4e      	ldr	r3, [pc, #312]	; (800c23c <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c104:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800c106:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c10a:	1e43      	subs	r3, r0, #1
 800c10c:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c110:	6822      	ldr	r2, [r4, #0]
 800c112:	6851      	ldr	r1, [r2, #4]
 800c114:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c118:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800c11c:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c11e:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800c120:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c124:	f10c 0c01 	add.w	ip, ip, #1
 800c128:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c12c:	ea41 010c 	orr.w	r1, r1, ip
 800c130:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c132:	69d1      	ldr	r1, [r2, #28]
 800c134:	f640 70fc 	movw	r0, #4092	; 0xffc
 800c138:	3301      	adds	r3, #1
 800c13a:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800c13e:	4203      	tst	r3, r0
 800c140:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c144:	d161      	bne.n	800c20a <HAL_I2C_Init+0x152>
 800c146:	2304      	movs	r3, #4
 800c148:	430b      	orrs	r3, r1
 800c14a:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800c14c:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800c150:	6811      	ldr	r1, [r2, #0]
 800c152:	4303      	orrs	r3, r0
 800c154:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800c158:	430b      	orrs	r3, r1
 800c15a:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800c15c:	6891      	ldr	r1, [r2, #8]
 800c15e:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800c162:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800c166:	4303      	orrs	r3, r0
 800c168:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c16c:	430b      	orrs	r3, r1
 800c16e:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800c170:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800c174:	68d1      	ldr	r1, [r2, #12]
 800c176:	4303      	orrs	r3, r0
 800c178:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c17c:	430b      	orrs	r3, r1
 800c17e:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800c180:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c182:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800c184:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800c188:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800c18a:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c18c:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800c18e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800c192:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800c194:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800c198:	4618      	mov	r0, r3
}
 800c19a:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c19c:	4b28      	ldr	r3, [pc, #160]	; (800c240 <HAL_I2C_Init+0x188>)
 800c19e:	4298      	cmp	r0, r3
 800c1a0:	d92c      	bls.n	800c1fc <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c1a2:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800c1a4:	4b25      	ldr	r3, [pc, #148]	; (800c23c <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c1a6:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c1a8:	4e26      	ldr	r6, [pc, #152]	; (800c244 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800c1aa:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c1ae:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c1b2:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800c1b6:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800c1b8:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c1bc:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800c1c0:	fb01 f303 	mul.w	r3, r1, r3
 800c1c4:	fba6 6303 	umull	r6, r3, r6, r3
 800c1c8:	6a11      	ldr	r1, [r2, #32]
 800c1ca:	099b      	lsrs	r3, r3, #6
 800c1cc:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c1d0:	3301      	adds	r3, #1
 800c1d2:	430b      	orrs	r3, r1
 800c1d4:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c1d6:	69d1      	ldr	r1, [r2, #28]
 800c1d8:	68a3      	ldr	r3, [r4, #8]
 800c1da:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800c1de:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c1e2:	b9ab      	cbnz	r3, 800c210 <HAL_I2C_Init+0x158>
 800c1e4:	1e43      	subs	r3, r0, #1
 800c1e6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800c1ea:	fbb3 f3f5 	udiv	r3, r3, r5
 800c1ee:	3301      	adds	r3, #1
 800c1f0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c1f4:	b1d3      	cbz	r3, 800c22c <HAL_I2C_Init+0x174>
 800c1f6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800c1fa:	e7a5      	b.n	800c148 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800c1fc:	2001      	movs	r0, #1
}
 800c1fe:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800c200:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800c204:	f7f5 ff5a 	bl	80020bc <HAL_I2C_MspInit>
 800c208:	e762      	b.n	800c0d0 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c20a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c20e:	e79b      	b.n	800c148 <HAL_I2C_Init+0x90>
 800c210:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800c214:	1e43      	subs	r3, r0, #1
 800c216:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800c21a:	fbb3 f3f5 	udiv	r3, r3, r5
 800c21e:	3301      	adds	r3, #1
 800c220:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c224:	b113      	cbz	r3, 800c22c <HAL_I2C_Init+0x174>
 800c226:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800c22a:	e78d      	b.n	800c148 <HAL_I2C_Init+0x90>
 800c22c:	2301      	movs	r3, #1
 800c22e:	e78b      	b.n	800c148 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800c230:	2001      	movs	r0, #1
}
 800c232:	4770      	bx	lr
 800c234:	000186a0 	.word	0x000186a0
 800c238:	001e847f 	.word	0x001e847f
 800c23c:	431bde83 	.word	0x431bde83
 800c240:	003d08ff 	.word	0x003d08ff
 800c244:	10624dd3 	.word	0x10624dd3

0800c248 <HAL_I2C_Mem_Write>:
{
 800c248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c24c:	4604      	mov	r4, r0
 800c24e:	b083      	sub	sp, #12
 800c250:	4699      	mov	r9, r3
 800c252:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800c256:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800c258:	460f      	mov	r7, r1
 800c25a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c25c:	f7ff f8ea 	bl	800b434 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c260:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800c264:	2b20      	cmp	r3, #32
 800c266:	d004      	beq.n	800c272 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800c268:	2702      	movs	r7, #2
}
 800c26a:	4638      	mov	r0, r7
 800c26c:	b003      	add	sp, #12
 800c26e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c272:	4605      	mov	r5, r0
 800c274:	e005      	b.n	800c282 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c276:	f7ff f8dd 	bl	800b434 <HAL_GetTick>
 800c27a:	1b40      	subs	r0, r0, r5
 800c27c:	2819      	cmp	r0, #25
 800c27e:	f200 80a8 	bhi.w	800c3d2 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c282:	6820      	ldr	r0, [r4, #0]
 800c284:	6983      	ldr	r3, [r0, #24]
 800c286:	ea6f 0c03 	mvn.w	ip, r3
 800c28a:	f01c 0b02 	ands.w	fp, ip, #2
 800c28e:	d0f2      	beq.n	800c276 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800c290:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800c294:	2b01      	cmp	r3, #1
 800c296:	d0e7      	beq.n	800c268 <HAL_I2C_Mem_Write+0x20>
 800c298:	2301      	movs	r3, #1
 800c29a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c29e:	6803      	ldr	r3, [r0, #0]
 800c2a0:	07db      	lsls	r3, r3, #31
 800c2a2:	d572      	bpl.n	800c38a <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c2a4:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c2a6:	6807      	ldr	r7, [r0, #0]
 800c2a8:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800c2ac:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800c2ae:	980c      	ldr	r0, [sp, #48]	; 0x30
 800c2b0:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800c2b2:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c2b4:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800c2b8:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c2bc:	2040      	movs	r0, #64	; 0x40
 800c2be:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c2c2:	2000      	movs	r0, #0
 800c2c4:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800c2c6:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c2ca:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800c2cc:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c2ce:	4856      	ldr	r0, [pc, #344]	; (800c428 <HAL_I2C_Mem_Write+0x1e0>)
 800c2d0:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c2d2:	464b      	mov	r3, r9
 800c2d4:	4642      	mov	r2, r8
 800c2d6:	4620      	mov	r0, r4
 800c2d8:	f7ff fca4 	bl	800bc24 <I2C_RequestMemoryWrite>
 800c2dc:	4607      	mov	r7, r0
 800c2de:	bb00      	cbnz	r0, 800c322 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800c2e0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c2e2:	2b00      	cmp	r3, #0
 800c2e4:	f000 809e 	beq.w	800c424 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c2e8:	6823      	ldr	r3, [r4, #0]
 800c2ea:	1c72      	adds	r2, r6, #1
 800c2ec:	d159      	bne.n	800c3a2 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c2ee:	695a      	ldr	r2, [r3, #20]
 800c2f0:	0610      	lsls	r0, r2, #24
 800c2f2:	d41b      	bmi.n	800c32c <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c2f4:	695a      	ldr	r2, [r3, #20]
 800c2f6:	0551      	lsls	r1, r2, #21
 800c2f8:	d5f9      	bpl.n	800c2ee <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c2fa:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c2fc:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800c300:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c302:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c304:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800c306:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c30a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c30e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c310:	f043 0304 	orr.w	r3, r3, #4
 800c314:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c316:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800c318:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c31a:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800c31c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c320:	d038      	beq.n	800c394 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800c322:	2701      	movs	r7, #1
}
 800c324:	4638      	mov	r0, r7
 800c326:	b003      	add	sp, #12
 800c328:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c32c:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800c330:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c334:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800c336:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c33a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c33e:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800c340:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800c342:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800c344:	3a01      	subs	r2, #1
 800c346:	b292      	uxth	r2, r2
 800c348:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800c34a:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c34c:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800c34e:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c350:	0740      	lsls	r0, r0, #29
 800c352:	d517      	bpl.n	800c384 <HAL_I2C_Mem_Write+0x13c>
 800c354:	b942      	cbnz	r2, 800c368 <HAL_I2C_Mem_Write+0x120>
 800c356:	1c72      	adds	r2, r6, #1
 800c358:	d156      	bne.n	800c408 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c35a:	695a      	ldr	r2, [r3, #20]
 800c35c:	0750      	lsls	r0, r2, #29
 800c35e:	d446      	bmi.n	800c3ee <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c360:	695a      	ldr	r2, [r3, #20]
 800c362:	0551      	lsls	r1, r2, #21
 800c364:	d5f9      	bpl.n	800c35a <HAL_I2C_Mem_Write+0x112>
 800c366:	e7c8      	b.n	800c2fa <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c368:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800c36c:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800c36e:	f10c 0102 	add.w	r1, ip, #2
 800c372:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800c374:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800c376:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800c37a:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800c37c:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800c37e:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800c380:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800c382:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800c384:	2a00      	cmp	r2, #0
 800c386:	d1b0      	bne.n	800c2ea <HAL_I2C_Mem_Write+0xa2>
 800c388:	e7e5      	b.n	800c356 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800c38a:	6803      	ldr	r3, [r0, #0]
 800c38c:	f043 0301 	orr.w	r3, r3, #1
 800c390:	6003      	str	r3, [r0, #0]
 800c392:	e787      	b.n	800c2a4 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c394:	6822      	ldr	r2, [r4, #0]
 800c396:	6813      	ldr	r3, [r2, #0]
 800c398:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800c39c:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c39e:	6013      	str	r3, [r2, #0]
 800c3a0:	e763      	b.n	800c26a <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c3a2:	695a      	ldr	r2, [r3, #20]
 800c3a4:	0612      	lsls	r2, r2, #24
 800c3a6:	d4c1      	bmi.n	800c32c <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c3a8:	695a      	ldr	r2, [r3, #20]
 800c3aa:	0551      	lsls	r1, r2, #21
 800c3ac:	d4a5      	bmi.n	800c2fa <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c3ae:	f7ff f841 	bl	800b434 <HAL_GetTick>
 800c3b2:	1b40      	subs	r0, r0, r5
 800c3b4:	4286      	cmp	r6, r0
 800c3b6:	d301      	bcc.n	800c3bc <HAL_I2C_Mem_Write+0x174>
 800c3b8:	2e00      	cmp	r6, #0
 800c3ba:	d195      	bne.n	800c2e8 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c3bc:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c3be:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c3c0:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c3c2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c3c6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c3ca:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c3cc:	4313      	orrs	r3, r2
 800c3ce:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800c3d0:	e7a1      	b.n	800c316 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800c3d2:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c3d4:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c3d8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c3dc:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c3e0:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c3e2:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c3e6:	f043 0320 	orr.w	r3, r3, #32
 800c3ea:	6423      	str	r3, [r4, #64]	; 0x40
 800c3ec:	e73c      	b.n	800c268 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c3ee:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c3f0:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c3f2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800c3f6:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c3f8:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800c3fa:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800c3fe:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c402:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800c406:	e730      	b.n	800c26a <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c408:	695a      	ldr	r2, [r3, #20]
 800c40a:	0752      	lsls	r2, r2, #29
 800c40c:	d4ef      	bmi.n	800c3ee <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c40e:	695a      	ldr	r2, [r3, #20]
 800c410:	0551      	lsls	r1, r2, #21
 800c412:	f53f af72 	bmi.w	800c2fa <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c416:	f7ff f80d 	bl	800b434 <HAL_GetTick>
 800c41a:	1b40      	subs	r0, r0, r5
 800c41c:	4286      	cmp	r6, r0
 800c41e:	d3cd      	bcc.n	800c3bc <HAL_I2C_Mem_Write+0x174>
 800c420:	2e00      	cmp	r6, #0
 800c422:	d0cb      	beq.n	800c3bc <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c424:	6823      	ldr	r3, [r4, #0]
 800c426:	e796      	b.n	800c356 <HAL_I2C_Mem_Write+0x10e>
 800c428:	ffff0000 	.word	0xffff0000

0800c42c <HAL_I2C_Mem_Read>:
{
 800c42c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c430:	4604      	mov	r4, r0
 800c432:	b087      	sub	sp, #28
 800c434:	4699      	mov	r9, r3
 800c436:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800c43a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800c43c:	460f      	mov	r7, r1
 800c43e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c440:	f7fe fff8 	bl	800b434 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c444:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800c448:	2b20      	cmp	r3, #32
 800c44a:	d004      	beq.n	800c456 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800c44c:	2702      	movs	r7, #2
}
 800c44e:	4638      	mov	r0, r7
 800c450:	b007      	add	sp, #28
 800c452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c456:	4606      	mov	r6, r0
 800c458:	e005      	b.n	800c466 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c45a:	f7fe ffeb 	bl	800b434 <HAL_GetTick>
 800c45e:	1b80      	subs	r0, r0, r6
 800c460:	2819      	cmp	r0, #25
 800c462:	f200 80d2 	bhi.w	800c60a <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c466:	f8d4 c000 	ldr.w	ip, [r4]
 800c46a:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800c46e:	43c0      	mvns	r0, r0
 800c470:	f010 0b02 	ands.w	fp, r0, #2
 800c474:	d0f1      	beq.n	800c45a <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800c476:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800c47a:	2b01      	cmp	r3, #1
 800c47c:	d0e6      	beq.n	800c44c <HAL_I2C_Mem_Read+0x20>
 800c47e:	2301      	movs	r3, #1
 800c480:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c484:	f8dc 3000 	ldr.w	r3, [ip]
 800c488:	07d9      	lsls	r1, r3, #31
 800c48a:	d537      	bpl.n	800c4fc <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c48c:	f8dc 0000 	ldr.w	r0, [ip]
 800c490:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800c494:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800c498:	9810      	ldr	r0, [sp, #64]	; 0x40
 800c49a:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800c49c:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c49e:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800c4a2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c4a6:	2040      	movs	r0, #64	; 0x40
 800c4a8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c4ac:	2000      	movs	r0, #0
 800c4ae:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800c4b0:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c4b4:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800c4b6:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c4b8:	4893      	ldr	r0, [pc, #588]	; (800c708 <HAL_I2C_Mem_Read+0x2dc>)
 800c4ba:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c4bc:	4639      	mov	r1, r7
 800c4be:	464b      	mov	r3, r9
 800c4c0:	4642      	mov	r2, r8
 800c4c2:	4620      	mov	r0, r4
 800c4c4:	f7ff fca2 	bl	800be0c <I2C_RequestMemoryRead>
 800c4c8:	4607      	mov	r7, r0
 800c4ca:	2800      	cmp	r0, #0
 800c4cc:	f040 80ab 	bne.w	800c626 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800c4d0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800c4d2:	b9d2      	cbnz	r2, 800c50a <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c4d4:	6823      	ldr	r3, [r4, #0]
 800c4d6:	9002      	str	r0, [sp, #8]
 800c4d8:	695a      	ldr	r2, [r3, #20]
 800c4da:	9202      	str	r2, [sp, #8]
 800c4dc:	699a      	ldr	r2, [r3, #24]
 800c4de:	9202      	str	r2, [sp, #8]
 800c4e0:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c4e2:	681a      	ldr	r2, [r3, #0]
 800c4e4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c4e8:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c4ea:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800c4ec:	2220      	movs	r2, #32
 800c4ee:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800c4f2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c4f6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800c4fa:	e7a8      	b.n	800c44e <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800c4fc:	f8dc 3000 	ldr.w	r3, [ip]
 800c500:	f043 0301 	orr.w	r3, r3, #1
 800c504:	f8cc 3000 	str.w	r3, [ip]
 800c508:	e7c0      	b.n	800c48c <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800c50a:	2a01      	cmp	r2, #1
 800c50c:	f000 812c 	beq.w	800c768 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800c510:	2a02      	cmp	r2, #2
 800c512:	f000 80bd 	beq.w	800c690 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c516:	6823      	ldr	r3, [r4, #0]
 800c518:	9005      	str	r0, [sp, #20]
 800c51a:	6959      	ldr	r1, [r3, #20]
 800c51c:	9105      	str	r1, [sp, #20]
 800c51e:	6999      	ldr	r1, [r3, #24]
 800c520:	9105      	str	r1, [sp, #20]
 800c522:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800c524:	2a03      	cmp	r2, #3
 800c526:	d849      	bhi.n	800c5bc <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800c528:	2a01      	cmp	r2, #1
 800c52a:	f000 80eb 	beq.w	800c704 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800c52e:	2a02      	cmp	r2, #2
 800c530:	f000 8089 	beq.w	800c646 <HAL_I2C_Mem_Read+0x21a>
 800c534:	1c69      	adds	r1, r5, #1
 800c536:	f040 80bb 	bne.w	800c6b0 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c53a:	695a      	ldr	r2, [r3, #20]
 800c53c:	0752      	lsls	r2, r2, #29
 800c53e:	d5fc      	bpl.n	800c53a <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c540:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c542:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c544:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c548:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c54a:	691b      	ldr	r3, [r3, #16]
 800c54c:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800c54e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c550:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c552:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c554:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800c556:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800c558:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c55a:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800c55c:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c55e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c560:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800c562:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c564:	6822      	ldr	r2, [r4, #0]
 800c566:	f040 80af 	bne.w	800c6c8 <HAL_I2C_Mem_Read+0x29c>
 800c56a:	6953      	ldr	r3, [r2, #20]
 800c56c:	075b      	lsls	r3, r3, #29
 800c56e:	d5fc      	bpl.n	800c56a <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c570:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c572:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c574:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c578:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c57a:	6913      	ldr	r3, [r2, #16]
 800c57c:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800c57e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c580:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c582:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c584:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800c586:	3b01      	subs	r3, #1
 800c588:	b29b      	uxth	r3, r3
 800c58a:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c58c:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800c58e:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800c590:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800c594:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c596:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c59a:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800c59c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c59e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c5a0:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c5a2:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c5a4:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800c5a6:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800c5a8:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800c5aa:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800c5ac:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c5ae:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c5b0:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800c5b2:	2a00      	cmp	r2, #0
 800c5b4:	d099      	beq.n	800c4ea <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800c5b6:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c5b8:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800c5ba:	d9b5      	bls.n	800c528 <HAL_I2C_Mem_Read+0xfc>
 800c5bc:	b95d      	cbnz	r5, 800c5d6 <HAL_I2C_Mem_Read+0x1aa>
 800c5be:	e0c5      	b.n	800c74c <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c5c0:	695a      	ldr	r2, [r3, #20]
 800c5c2:	06d0      	lsls	r0, r2, #27
 800c5c4:	f100 80b2 	bmi.w	800c72c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c5c8:	f7fe ff34 	bl	800b434 <HAL_GetTick>
 800c5cc:	1b80      	subs	r0, r0, r6
 800c5ce:	4285      	cmp	r5, r0
 800c5d0:	f0c0 8086 	bcc.w	800c6e0 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c5d4:	6823      	ldr	r3, [r4, #0]
 800c5d6:	695a      	ldr	r2, [r3, #20]
 800c5d8:	0652      	lsls	r2, r2, #25
 800c5da:	d5f1      	bpl.n	800c5c0 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c5dc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c5de:	691b      	ldr	r3, [r3, #16]
 800c5e0:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800c5e2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c5e4:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800c5e6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800c5e8:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800c5ea:	3b01      	subs	r3, #1
 800c5ec:	b29b      	uxth	r3, r3
 800c5ee:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c5f0:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800c5f2:	3a01      	subs	r2, #1
 800c5f4:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800c5f6:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c5fa:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800c5fc:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800c5fe:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c602:	d5d6      	bpl.n	800c5b2 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c604:	6903      	ldr	r3, [r0, #16]
 800c606:	704b      	strb	r3, [r1, #1]
 800c608:	e036      	b.n	800c678 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800c60a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c60c:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c610:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c614:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c618:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c61a:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c61e:	f043 0320 	orr.w	r3, r3, #32
 800c622:	6423      	str	r3, [r4, #64]	; 0x40
 800c624:	e712      	b.n	800c44c <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800c626:	2701      	movs	r7, #1
}
 800c628:	4638      	mov	r0, r7
 800c62a:	b007      	add	sp, #28
 800c62c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c630:	695a      	ldr	r2, [r3, #20]
 800c632:	0750      	lsls	r0, r2, #29
 800c634:	d40c      	bmi.n	800c650 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c636:	f7fe fefd 	bl	800b434 <HAL_GetTick>
 800c63a:	1b80      	subs	r0, r0, r6
 800c63c:	4285      	cmp	r5, r0
 800c63e:	d34f      	bcc.n	800c6e0 <HAL_I2C_Mem_Read+0x2b4>
 800c640:	2d00      	cmp	r5, #0
 800c642:	d04d      	beq.n	800c6e0 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c644:	6823      	ldr	r3, [r4, #0]
 800c646:	1c69      	adds	r1, r5, #1
 800c648:	d1f2      	bne.n	800c630 <HAL_I2C_Mem_Read+0x204>
 800c64a:	695a      	ldr	r2, [r3, #20]
 800c64c:	0752      	lsls	r2, r2, #29
 800c64e:	d5fc      	bpl.n	800c64a <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c650:	681a      	ldr	r2, [r3, #0]
 800c652:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c656:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c658:	691a      	ldr	r2, [r3, #16]
 800c65a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c65c:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800c65e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c660:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800c662:	3b01      	subs	r3, #1
 800c664:	b29b      	uxth	r3, r3
 800c666:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c668:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c66a:	3b01      	subs	r3, #1
 800c66c:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c66e:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800c670:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c672:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800c674:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c676:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800c678:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c67a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c67c:	3301      	adds	r3, #1
 800c67e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800c680:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c682:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c684:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800c686:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800c688:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800c68a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c68c:	8563      	strh	r3, [r4, #42]	; 0x2a
 800c68e:	e790      	b.n	800c5b2 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c690:	6823      	ldr	r3, [r4, #0]
 800c692:	6819      	ldr	r1, [r3, #0]
 800c694:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800c698:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c69a:	6819      	ldr	r1, [r3, #0]
 800c69c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800c6a0:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c6a2:	9004      	str	r0, [sp, #16]
 800c6a4:	6959      	ldr	r1, [r3, #20]
 800c6a6:	9104      	str	r1, [sp, #16]
 800c6a8:	6999      	ldr	r1, [r3, #24]
 800c6aa:	9104      	str	r1, [sp, #16]
 800c6ac:	9904      	ldr	r1, [sp, #16]
 800c6ae:	e739      	b.n	800c524 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c6b0:	695a      	ldr	r2, [r3, #20]
 800c6b2:	0750      	lsls	r0, r2, #29
 800c6b4:	f53f af44 	bmi.w	800c540 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c6b8:	f7fe febc 	bl	800b434 <HAL_GetTick>
 800c6bc:	1b80      	subs	r0, r0, r6
 800c6be:	4285      	cmp	r5, r0
 800c6c0:	d30e      	bcc.n	800c6e0 <HAL_I2C_Mem_Read+0x2b4>
 800c6c2:	b16d      	cbz	r5, 800c6e0 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c6c4:	6823      	ldr	r3, [r4, #0]
 800c6c6:	e735      	b.n	800c534 <HAL_I2C_Mem_Read+0x108>
 800c6c8:	6953      	ldr	r3, [r2, #20]
 800c6ca:	0758      	lsls	r0, r3, #29
 800c6cc:	f53f af50 	bmi.w	800c570 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c6d0:	f7fe feb0 	bl	800b434 <HAL_GetTick>
 800c6d4:	1b80      	subs	r0, r0, r6
 800c6d6:	4285      	cmp	r5, r0
 800c6d8:	d302      	bcc.n	800c6e0 <HAL_I2C_Mem_Read+0x2b4>
 800c6da:	2d00      	cmp	r5, #0
 800c6dc:	f47f af41 	bne.w	800c562 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c6e0:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c6e2:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c6e4:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c6e6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c6ea:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c6ee:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c6f0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800c6f4:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c6f6:	f043 0320 	orr.w	r3, r3, #32
}
 800c6fa:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c6fc:	6423      	str	r3, [r4, #64]	; 0x40
}
 800c6fe:	b007      	add	sp, #28
 800c700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c704:	b95d      	cbnz	r5, 800c71e <HAL_I2C_Mem_Read+0x2f2>
 800c706:	e02b      	b.n	800c760 <HAL_I2C_Mem_Read+0x334>
 800c708:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c70c:	695a      	ldr	r2, [r3, #20]
 800c70e:	06d2      	lsls	r2, r2, #27
 800c710:	d40c      	bmi.n	800c72c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c712:	f7fe fe8f 	bl	800b434 <HAL_GetTick>
 800c716:	1b80      	subs	r0, r0, r6
 800c718:	4285      	cmp	r5, r0
 800c71a:	d3e1      	bcc.n	800c6e0 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c71c:	6823      	ldr	r3, [r4, #0]
 800c71e:	695a      	ldr	r2, [r3, #20]
 800c720:	0651      	lsls	r1, r2, #25
 800c722:	d5f3      	bpl.n	800c70c <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c724:	691a      	ldr	r2, [r3, #16]
 800c726:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c728:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800c72a:	e7a5      	b.n	800c678 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c72c:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800c72e:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800c732:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800c734:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c736:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c738:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c73c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800c740:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c742:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800c744:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800c748:	2701      	movs	r7, #1
 800c74a:	e680      	b.n	800c44e <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c74c:	695a      	ldr	r2, [r3, #20]
 800c74e:	0652      	lsls	r2, r2, #25
 800c750:	f53f af44 	bmi.w	800c5dc <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c754:	695a      	ldr	r2, [r3, #20]
 800c756:	06d1      	lsls	r1, r2, #27
 800c758:	d4e8      	bmi.n	800c72c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c75a:	f7fe fe6b 	bl	800b434 <HAL_GetTick>
 800c75e:	e7bf      	b.n	800c6e0 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c760:	695a      	ldr	r2, [r3, #20]
 800c762:	0650      	lsls	r0, r2, #25
 800c764:	d5f6      	bpl.n	800c754 <HAL_I2C_Mem_Read+0x328>
 800c766:	e7dd      	b.n	800c724 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c768:	6823      	ldr	r3, [r4, #0]
 800c76a:	6819      	ldr	r1, [r3, #0]
 800c76c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800c770:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c772:	9003      	str	r0, [sp, #12]
 800c774:	6959      	ldr	r1, [r3, #20]
 800c776:	9103      	str	r1, [sp, #12]
 800c778:	6999      	ldr	r1, [r3, #24]
 800c77a:	9103      	str	r1, [sp, #12]
 800c77c:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c77e:	6819      	ldr	r1, [r3, #0]
 800c780:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800c784:	6019      	str	r1, [r3, #0]
 800c786:	e6cd      	b.n	800c524 <HAL_I2C_Mem_Read+0xf8>

0800c788 <HAL_I2C_MasterTxCpltCallback>:
 800c788:	4770      	bx	lr
 800c78a:	bf00      	nop

0800c78c <HAL_I2C_MasterRxCpltCallback>:
 800c78c:	4770      	bx	lr
 800c78e:	bf00      	nop

0800c790 <HAL_I2C_SlaveTxCpltCallback>:
 800c790:	4770      	bx	lr
 800c792:	bf00      	nop

0800c794 <HAL_I2C_SlaveRxCpltCallback>:
 800c794:	4770      	bx	lr
 800c796:	bf00      	nop

0800c798 <HAL_I2C_AddrCallback>:
}
 800c798:	4770      	bx	lr
 800c79a:	bf00      	nop

0800c79c <HAL_I2C_ListenCpltCallback>:
 800c79c:	4770      	bx	lr
 800c79e:	bf00      	nop

0800c7a0 <HAL_I2C_MemTxCpltCallback>:
 800c7a0:	4770      	bx	lr
 800c7a2:	bf00      	nop

0800c7a4 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800c7a4:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800c7a8:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800c7aa:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800c7ac:	b959      	cbnz	r1, 800c7c6 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800c7ae:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c7b0:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800c7b2:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c7b4:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800c7b6:	d00d      	beq.n	800c7d4 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800c7b8:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800c7bc:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800c7be:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c7c0:	3201      	adds	r2, #1
 800c7c2:	6502      	str	r2, [r0, #80]	; 0x50
 800c7c4:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800c7c6:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800c7c8:	2901      	cmp	r1, #1
 800c7ca:	d009      	beq.n	800c7e0 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800c7cc:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800c7ce:	2902      	cmp	r1, #2
 800c7d0:	d00e      	beq.n	800c7f0 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800c7d2:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c7d4:	b2d2      	uxtb	r2, r2
 800c7d6:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800c7d8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c7da:	3202      	adds	r2, #2
 800c7dc:	6502      	str	r2, [r0, #80]	; 0x50
 800c7de:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c7e0:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800c7e2:	6801      	ldr	r1, [r0, #0]
 800c7e4:	b2d2      	uxtb	r2, r2
 800c7e6:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800c7e8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c7ea:	3201      	adds	r2, #1
 800c7ec:	6502      	str	r2, [r0, #80]	; 0x50
 800c7ee:	4770      	bx	lr
 800c7f0:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800c7f2:	2a22      	cmp	r2, #34	; 0x22
 800c7f4:	d01f      	beq.n	800c836 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c7f6:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800c7f8:	b289      	uxth	r1, r1
 800c7fa:	b9c1      	cbnz	r1, 800c82e <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c7fc:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800c7fe:	b289      	uxth	r1, r1
 800c800:	2900      	cmp	r1, #0
 800c802:	d1e6      	bne.n	800c7d2 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800c804:	2a21      	cmp	r2, #33	; 0x21
 800c806:	d1e4      	bne.n	800c7d2 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800c808:	6802      	ldr	r2, [r0, #0]
{
 800c80a:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800c80c:	6854      	ldr	r4, [r2, #4]
 800c80e:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800c812:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c814:	6814      	ldr	r4, [r2, #0]
 800c816:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800c81a:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800c81c:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800c81e:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800c820:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800c824:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800c828:	f7ff ffba 	bl	800c7a0 <HAL_I2C_MemTxCpltCallback>
}
 800c82c:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c82e:	2a21      	cmp	r2, #33	; 0x21
 800c830:	d00a      	beq.n	800c848 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c832:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c834:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800c836:	6801      	ldr	r1, [r0, #0]
 800c838:	680a      	ldr	r2, [r1, #0]
 800c83a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800c83e:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800c840:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c842:	3201      	adds	r2, #1
 800c844:	6502      	str	r2, [r0, #80]	; 0x50
 800c846:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c848:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800c84a:	6802      	ldr	r2, [r0, #0]
 800c84c:	f811 0b01 	ldrb.w	r0, [r1], #1
 800c850:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800c852:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800c854:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800c856:	3a01      	subs	r2, #1
 800c858:	b292      	uxth	r2, r2
 800c85a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800c85c:	4770      	bx	lr
 800c85e:	bf00      	nop

0800c860 <HAL_I2C_MemRxCpltCallback>:
 800c860:	4770      	bx	lr
 800c862:	bf00      	nop

0800c864 <HAL_I2C_ErrorCallback>:
 800c864:	4770      	bx	lr
 800c866:	bf00      	nop

0800c868 <HAL_I2C_AbortCpltCallback>:
 800c868:	4770      	bx	lr
 800c86a:	bf00      	nop

0800c86c <I2C_DMAAbort>:
{
 800c86c:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800c86e:	4b3a      	ldr	r3, [pc, #232]	; (800c958 <I2C_DMAAbort+0xec>)
 800c870:	4a3a      	ldr	r2, [pc, #232]	; (800c95c <I2C_DMAAbort+0xf0>)
 800c872:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800c874:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800c876:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800c878:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800c87a:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800c87c:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800c880:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800c882:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800c884:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800c888:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800c88a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800c88e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800c892:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800c894:	9301      	str	r3, [sp, #4]
 800c896:	e005      	b.n	800c8a4 <I2C_DMAAbort+0x38>
    count--;
 800c898:	9b01      	ldr	r3, [sp, #4]
 800c89a:	3b01      	subs	r3, #1
 800c89c:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800c89e:	6813      	ldr	r3, [r2, #0]
 800c8a0:	059b      	lsls	r3, r3, #22
 800c8a2:	d506      	bpl.n	800c8b2 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800c8a4:	9b01      	ldr	r3, [sp, #4]
 800c8a6:	2b00      	cmp	r3, #0
 800c8a8:	d1f6      	bne.n	800c898 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800c8aa:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800c8ac:	f043 0320 	orr.w	r3, r3, #32
 800c8b0:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800c8b2:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800c8b4:	b34c      	cbz	r4, 800c90a <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800c8b6:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800c8b8:	2500      	movs	r5, #0
 800c8ba:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800c8bc:	b1f3      	cbz	r3, 800c8fc <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c8be:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800c8c0:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c8c2:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800c8c6:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800c8c8:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800c8ca:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800c8cc:	2400      	movs	r4, #0
 800c8ce:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800c8d0:	6813      	ldr	r3, [r2, #0]
 800c8d2:	f023 0301 	bic.w	r3, r3, #1
 800c8d6:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800c8d8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c8dc:	2b60      	cmp	r3, #96	; 0x60
 800c8de:	d02a      	beq.n	800c936 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800c8e0:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800c8e4:	2928      	cmp	r1, #40	; 0x28
 800c8e6:	d019      	beq.n	800c91c <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800c8e8:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800c8ea:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800c8ec:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800c8f0:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800c8f4:	f7ff ffb6 	bl	800c864 <HAL_I2C_ErrorCallback>
}
 800c8f8:	b002      	add	sp, #8
 800c8fa:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c8fc:	6815      	ldr	r5, [r2, #0]
 800c8fe:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800c902:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800c904:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800c906:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800c908:	e7e2      	b.n	800c8d0 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800c90a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800c90c:	b1f3      	cbz	r3, 800c94c <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c90e:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800c910:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c912:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800c916:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800c918:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800c91a:	e7d7      	b.n	800c8cc <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800c91c:	6813      	ldr	r3, [r2, #0]
 800c91e:	f043 0301 	orr.w	r3, r3, #1
 800c922:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c924:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800c926:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c928:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800c92c:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800c92e:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800c930:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800c934:	e7de      	b.n	800c8f4 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800c936:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800c938:	2220      	movs	r2, #32
 800c93a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800c93e:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800c942:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800c944:	f7ff ff90 	bl	800c868 <HAL_I2C_AbortCpltCallback>
}
 800c948:	b002      	add	sp, #8
 800c94a:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c94c:	6814      	ldr	r4, [r2, #0]
 800c94e:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800c952:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800c954:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800c956:	e7bb      	b.n	800c8d0 <I2C_DMAAbort+0x64>
 800c958:	2000007c 	.word	0x2000007c
 800c95c:	14f8b589 	.word	0x14f8b589

0800c960 <I2C_ITError>:
{
 800c960:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800c962:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800c966:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800c96a:	2b10      	cmp	r3, #16
{
 800c96c:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800c96e:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800c970:	d039      	beq.n	800c9e6 <I2C_ITError+0x86>
 800c972:	b2d9      	uxtb	r1, r3
 800c974:	2940      	cmp	r1, #64	; 0x40
 800c976:	d036      	beq.n	800c9e6 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800c978:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800c97c:	2928      	cmp	r1, #40	; 0x28
 800c97e:	d03d      	beq.n	800c9fc <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800c980:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800c982:	6859      	ldr	r1, [r3, #4]
 800c984:	0508      	lsls	r0, r1, #20
 800c986:	d407      	bmi.n	800c998 <I2C_ITError+0x38>
 800c988:	2a60      	cmp	r2, #96	; 0x60
 800c98a:	d005      	beq.n	800c998 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800c98c:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800c98e:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800c990:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800c994:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800c998:	2200      	movs	r2, #0
 800c99a:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800c99c:	685a      	ldr	r2, [r3, #4]
 800c99e:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800c9a2:	d134      	bne.n	800ca0e <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800c9a4:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800c9a8:	2960      	cmp	r1, #96	; 0x60
 800c9aa:	d075      	beq.n	800ca98 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800c9ac:	695a      	ldr	r2, [r3, #20]
 800c9ae:	0650      	lsls	r0, r2, #25
 800c9b0:	d505      	bpl.n	800c9be <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c9b2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c9b4:	691b      	ldr	r3, [r3, #16]
 800c9b6:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800c9b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c9ba:	3301      	adds	r3, #1
 800c9bc:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800c9be:	4620      	mov	r0, r4
 800c9c0:	f7ff ff50 	bl	800c864 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800c9c4:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800c9c6:	0719      	lsls	r1, r3, #28
 800c9c8:	d004      	beq.n	800c9d4 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800c9ca:	6822      	ldr	r2, [r4, #0]
 800c9cc:	6853      	ldr	r3, [r2, #4]
 800c9ce:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800c9d2:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800c9d4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800c9d8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800c9da:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800c9dc:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800c9de:	d501      	bpl.n	800c9e4 <I2C_ITError+0x84>
 800c9e0:	2b28      	cmp	r3, #40	; 0x28
 800c9e2:	d02f      	beq.n	800ca44 <I2C_ITError+0xe4>
}
 800c9e4:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800c9e6:	2a22      	cmp	r2, #34	; 0x22
 800c9e8:	d1c6      	bne.n	800c978 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800c9ea:	6823      	ldr	r3, [r4, #0]
 800c9ec:	681a      	ldr	r2, [r3, #0]
 800c9ee:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800c9f2:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800c9f4:	685a      	ldr	r2, [r3, #4]
 800c9f6:	0512      	lsls	r2, r2, #20
 800c9f8:	d5c8      	bpl.n	800c98c <I2C_ITError+0x2c>
 800c9fa:	e7cd      	b.n	800c998 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800c9fc:	2300      	movs	r3, #0
 800c9fe:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800ca00:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800ca02:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ca06:	685a      	ldr	r2, [r3, #4]
 800ca08:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800ca0c:	d0ca      	beq.n	800c9a4 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800ca0e:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800ca10:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800ca12:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800ca16:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800ca18:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800ca1c:	2b01      	cmp	r3, #1
 800ca1e:	d01e      	beq.n	800ca5e <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800ca20:	4b28      	ldr	r3, [pc, #160]	; (800cac4 <I2C_ITError+0x164>)
 800ca22:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800ca24:	f7fe fd90 	bl	800b548 <HAL_DMA_Abort_IT>
 800ca28:	2800      	cmp	r0, #0
 800ca2a:	d0cb      	beq.n	800c9c4 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800ca2c:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800ca2e:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800ca30:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800ca32:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800ca34:	f023 0301 	bic.w	r3, r3, #1
 800ca38:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800ca3a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800ca3e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ca40:	4798      	blx	r3
 800ca42:	e7bf      	b.n	800c9c4 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800ca44:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800ca46:	4920      	ldr	r1, [pc, #128]	; (800cac8 <I2C_ITError+0x168>)
 800ca48:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800ca4a:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800ca4c:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800ca4e:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800ca50:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800ca54:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800ca58:	f7ff fea0 	bl	800c79c <HAL_I2C_ListenCpltCallback>
}
 800ca5c:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800ca5e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ca60:	4b18      	ldr	r3, [pc, #96]	; (800cac4 <I2C_ITError+0x164>)
 800ca62:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800ca64:	f7fe fd70 	bl	800b548 <HAL_DMA_Abort_IT>
 800ca68:	2800      	cmp	r0, #0
 800ca6a:	d0ab      	beq.n	800c9c4 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800ca6c:	6823      	ldr	r3, [r4, #0]
 800ca6e:	695a      	ldr	r2, [r3, #20]
 800ca70:	0651      	lsls	r1, r2, #25
 800ca72:	d506      	bpl.n	800ca82 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ca74:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ca76:	691b      	ldr	r3, [r3, #16]
 800ca78:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800ca7a:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800ca7c:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800ca7e:	3201      	adds	r2, #1
 800ca80:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800ca82:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800ca84:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800ca86:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800ca8a:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800ca8c:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800ca8e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800ca92:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ca94:	4798      	blx	r3
 800ca96:	e795      	b.n	800c9c4 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800ca98:	2120      	movs	r1, #32
 800ca9a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800ca9e:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800caa0:	695a      	ldr	r2, [r3, #20]
 800caa2:	0652      	lsls	r2, r2, #25
 800caa4:	d506      	bpl.n	800cab4 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800caa6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800caa8:	691b      	ldr	r3, [r3, #16]
 800caaa:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800caac:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800caae:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800cab0:	3201      	adds	r2, #1
 800cab2:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800cab4:	681a      	ldr	r2, [r3, #0]
 800cab6:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800caba:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800cabc:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800cabe:	f7ff fed3 	bl	800c868 <HAL_I2C_AbortCpltCallback>
 800cac2:	e77f      	b.n	800c9c4 <I2C_ITError+0x64>
 800cac4:	0800c86d 	.word	0x0800c86d
 800cac8:	ffff0000 	.word	0xffff0000

0800cacc <HAL_I2C_EV_IRQHandler>:
{
 800cacc:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800cace:	6803      	ldr	r3, [r0, #0]
{
 800cad0:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800cad2:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800cad4:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cad6:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cada:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800cade:	2910      	cmp	r1, #16
{
 800cae0:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cae2:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cae4:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800cae8:	d022      	beq.n	800cb30 <HAL_I2C_EV_IRQHandler+0x64>
 800caea:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800caee:	d01f      	beq.n	800cb30 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800caf0:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800caf2:	2900      	cmp	r1, #0
 800caf4:	f000 8094 	beq.w	800cc20 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800caf8:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800cafa:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cafc:	f011 0602 	ands.w	r6, r1, #2
 800cb00:	d059      	beq.n	800cbb6 <HAL_I2C_EV_IRQHandler+0xea>
 800cb02:	0586      	lsls	r6, r0, #22
 800cb04:	d559      	bpl.n	800cbba <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cb06:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cb08:	b102      	cbz	r2, 800cb0c <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800cb0a:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800cb0c:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800cb10:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800cb14:	2a28      	cmp	r2, #40	; 0x28
 800cb16:	f000 821e 	beq.w	800cf56 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cb1a:	2200      	movs	r2, #0
 800cb1c:	920c      	str	r2, [sp, #48]	; 0x30
 800cb1e:	6959      	ldr	r1, [r3, #20]
 800cb20:	910c      	str	r1, [sp, #48]	; 0x30
 800cb22:	699b      	ldr	r3, [r3, #24]
 800cb24:	930c      	str	r3, [sp, #48]	; 0x30
 800cb26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800cb28:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800cb2c:	b00e      	add	sp, #56	; 0x38
 800cb2e:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800cb30:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800cb32:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800cb34:	f011 0f01 	tst.w	r1, #1
 800cb38:	d11a      	bne.n	800cb70 <HAL_I2C_EV_IRQHandler+0xa4>
 800cb3a:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800cb3e:	d0f5      	beq.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
 800cb40:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800cb44:	d0f2      	beq.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cb46:	070d      	lsls	r5, r1, #28
 800cb48:	d56d      	bpl.n	800cc26 <HAL_I2C_EV_IRQHandler+0x15a>
 800cb4a:	0585      	lsls	r5, r0, #22
 800cb4c:	f140 8083 	bpl.w	800cc56 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800cb50:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800cb52:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800cb54:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800cb56:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800cb58:	2900      	cmp	r1, #0
 800cb5a:	f000 81e3 	beq.w	800cf24 <HAL_I2C_EV_IRQHandler+0x458>
 800cb5e:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800cb60:	2a00      	cmp	r2, #0
 800cb62:	f000 81df 	beq.w	800cf24 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800cb66:	685a      	ldr	r2, [r3, #4]
 800cb68:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800cb6c:	605a      	str	r2, [r3, #4]
 800cb6e:	e7dd      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cb70:	0585      	lsls	r5, r0, #22
 800cb72:	d56e      	bpl.n	800cc52 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800cb74:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cb76:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800cb7a:	f000 81e9 	beq.w	800cf50 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800cb7e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cb80:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800cb84:	bf04      	itt	eq
 800cb86:	2208      	moveq	r2, #8
 800cb88:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800cb8a:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800cb8e:	2a40      	cmp	r2, #64	; 0x40
 800cb90:	f000 81d7 	beq.w	800cf42 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800cb94:	6922      	ldr	r2, [r4, #16]
 800cb96:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800cb9a:	f000 81b2 	beq.w	800cf02 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800cb9e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800cba0:	2a00      	cmp	r2, #0
 800cba2:	f040 81ef 	bne.w	800cf84 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800cba6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800cba8:	11d2      	asrs	r2, r2, #7
 800cbaa:	f002 0206 	and.w	r2, r2, #6
 800cbae:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800cbb2:	611a      	str	r2, [r3, #16]
 800cbb4:	e7ba      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cbb6:	06cd      	lsls	r5, r1, #27
 800cbb8:	d47c      	bmi.n	800ccb4 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800cbba:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800cbbe:	2a21      	cmp	r2, #33	; 0x21
 800cbc0:	f000 80f5 	beq.w	800cdae <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cbc4:	064e      	lsls	r6, r1, #25
 800cbc6:	f140 8132 	bpl.w	800ce2e <HAL_I2C_EV_IRQHandler+0x362>
 800cbca:	0545      	lsls	r5, r0, #21
 800cbcc:	f140 812f 	bpl.w	800ce2e <HAL_I2C_EV_IRQHandler+0x362>
 800cbd0:	0749      	lsls	r1, r1, #29
 800cbd2:	f100 812f 	bmi.w	800ce34 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cbd6:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800cbda:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cbdc:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cbde:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800cbe0:	2a00      	cmp	r2, #0
 800cbe2:	d0a3      	beq.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cbe4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cbe6:	691b      	ldr	r3, [r3, #16]
 800cbe8:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800cbea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cbec:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cbee:	3b01      	subs	r3, #1
 800cbf0:	b29b      	uxth	r3, r3
 800cbf2:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cbf4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cbf6:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cbf8:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800cbfa:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cbfc:	2b00      	cmp	r3, #0
 800cbfe:	d195      	bne.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
 800cc00:	292a      	cmp	r1, #42	; 0x2a
 800cc02:	d193      	bne.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cc04:	6822      	ldr	r2, [r4, #0]
 800cc06:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800cc08:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cc0a:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cc0c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800cc10:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cc12:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800cc14:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cc16:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cc1a:	f7ff fdbb 	bl	800c794 <HAL_I2C_SlaveRxCpltCallback>
 800cc1e:	e785      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800cc20:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800cc22:	6959      	ldr	r1, [r3, #20]
 800cc24:	e76a      	b.n	800cafc <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cc26:	078d      	lsls	r5, r1, #30
 800cc28:	d515      	bpl.n	800cc56 <HAL_I2C_EV_IRQHandler+0x18a>
 800cc2a:	0585      	lsls	r5, r0, #22
 800cc2c:	d513      	bpl.n	800cc56 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800cc2e:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800cc32:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800cc34:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800cc36:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800cc3a:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800cc3c:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800cc3e:	f000 81b3 	beq.w	800cfa8 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cc42:	2200      	movs	r2, #0
 800cc44:	920a      	str	r2, [sp, #40]	; 0x28
 800cc46:	695a      	ldr	r2, [r3, #20]
 800cc48:	920a      	str	r2, [sp, #40]	; 0x28
 800cc4a:	699b      	ldr	r3, [r3, #24]
 800cc4c:	930a      	str	r3, [sp, #40]	; 0x28
 800cc4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cc50:	e76c      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cc52:	070d      	lsls	r5, r1, #28
 800cc54:	d5e7      	bpl.n	800cc26 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800cc56:	0776      	lsls	r6, r6, #29
 800cc58:	f140 80f5 	bpl.w	800ce46 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800cc5c:	685d      	ldr	r5, [r3, #4]
 800cc5e:	052d      	lsls	r5, r5, #20
 800cc60:	f53f af64 	bmi.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cc64:	060e      	lsls	r6, r1, #24
 800cc66:	f140 8115 	bpl.w	800ce94 <HAL_I2C_EV_IRQHandler+0x3c8>
 800cc6a:	0545      	lsls	r5, r0, #21
 800cc6c:	f140 8112 	bpl.w	800ce94 <HAL_I2C_EV_IRQHandler+0x3c8>
 800cc70:	074e      	lsls	r6, r1, #29
 800cc72:	f100 8112 	bmi.w	800ce9a <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cc76:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800cc7a:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cc7c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800cc80:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cc82:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cc84:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800cc86:	2800      	cmp	r0, #0
 800cc88:	f040 8235 	bne.w	800d0f6 <HAL_I2C_EV_IRQHandler+0x62a>
 800cc8c:	2a21      	cmp	r2, #33	; 0x21
 800cc8e:	f000 8347 	beq.w	800d320 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800cc92:	2940      	cmp	r1, #64	; 0x40
 800cc94:	f47f af4a 	bne.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800cc98:	2a22      	cmp	r2, #34	; 0x22
 800cc9a:	f47f af47 	bne.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800cc9e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cca0:	b292      	uxth	r2, r2
 800cca2:	2a00      	cmp	r2, #0
 800cca4:	f000 8268 	beq.w	800d178 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800cca8:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800ccac:	2a40      	cmp	r2, #64	; 0x40
 800ccae:	f040 80b4 	bne.w	800ce1a <HAL_I2C_EV_IRQHandler+0x34e>
 800ccb2:	e0fc      	b.n	800ceae <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ccb4:	0585      	lsls	r5, r0, #22
 800ccb6:	d580      	bpl.n	800cbba <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ccb8:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ccbc:	685a      	ldr	r2, [r3, #4]
 800ccbe:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ccc2:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800ccc4:	960d      	str	r6, [sp, #52]	; 0x34
 800ccc6:	695a      	ldr	r2, [r3, #20]
 800ccc8:	920d      	str	r2, [sp, #52]	; 0x34
 800ccca:	681a      	ldr	r2, [r3, #0]
 800cccc:	f042 0201 	orr.w	r2, r2, #1
 800ccd0:	601a      	str	r2, [r3, #0]
 800ccd2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ccd4:	681a      	ldr	r2, [r3, #0]
 800ccd6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ccda:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ccdc:	685a      	ldr	r2, [r3, #4]
 800ccde:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cce0:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800cce2:	d521      	bpl.n	800cd28 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cce4:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800cce8:	2a22      	cmp	r2, #34	; 0x22
 800ccea:	f000 817a 	beq.w	800cfe2 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800ccee:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ccf0:	6802      	ldr	r2, [r0, #0]
 800ccf2:	6852      	ldr	r2, [r2, #4]
 800ccf4:	b292      	uxth	r2, r2
 800ccf6:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800ccf8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ccfa:	b292      	uxth	r2, r2
 800ccfc:	b11a      	cbz	r2, 800cd06 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800ccfe:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cd00:	f042 0204 	orr.w	r2, r2, #4
 800cd04:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800cd06:	685a      	ldr	r2, [r3, #4]
 800cd08:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800cd0c:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800cd0e:	f7fe fc2d 	bl	800b56c <HAL_DMA_GetState>
 800cd12:	2801      	cmp	r0, #1
 800cd14:	d008      	beq.n	800cd28 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800cd16:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800cd18:	4b99      	ldr	r3, [pc, #612]	; (800cf80 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800cd1a:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800cd1c:	f7fe fc14 	bl	800b548 <HAL_DMA_Abort_IT>
 800cd20:	b110      	cbz	r0, 800cd28 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800cd22:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800cd24:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cd26:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800cd28:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cd2a:	b29b      	uxth	r3, r3
 800cd2c:	b313      	cbz	r3, 800cd74 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800cd2e:	6823      	ldr	r3, [r4, #0]
 800cd30:	695a      	ldr	r2, [r3, #20]
 800cd32:	0752      	lsls	r2, r2, #29
 800cd34:	d50a      	bpl.n	800cd4c <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd36:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cd38:	691b      	ldr	r3, [r3, #16]
 800cd3a:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800cd3c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800cd3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800cd40:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800cd42:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800cd44:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cd46:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800cd48:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800cd4a:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cd4c:	695a      	ldr	r2, [r3, #20]
 800cd4e:	0656      	lsls	r6, r2, #25
 800cd50:	d509      	bpl.n	800cd66 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd52:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cd54:	691b      	ldr	r3, [r3, #16]
 800cd56:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800cd58:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800cd5a:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800cd5c:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800cd5e:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800cd60:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800cd62:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800cd64:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800cd66:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cd68:	b29b      	uxth	r3, r3
 800cd6a:	b11b      	cbz	r3, 800cd74 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800cd6c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800cd6e:	f043 0304 	orr.w	r3, r3, #4
 800cd72:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cd74:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800cd76:	2b00      	cmp	r3, #0
 800cd78:	f040 80dd 	bne.w	800cf36 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800cd7c:	2d2a      	cmp	r5, #42	; 0x2a
 800cd7e:	f000 8151 	beq.w	800d024 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800cd82:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800cd86:	2b28      	cmp	r3, #40	; 0x28
 800cd88:	f000 8154 	beq.w	800d034 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cd8c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cd8e:	2b22      	cmp	r3, #34	; 0x22
 800cd90:	d002      	beq.n	800cd98 <HAL_I2C_EV_IRQHandler+0x2cc>
 800cd92:	2d22      	cmp	r5, #34	; 0x22
 800cd94:	f47f aeca 	bne.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800cd98:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800cd9a:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800cd9c:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cd9e:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800cda0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800cda4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cda8:	f7ff fcf4 	bl	800c794 <HAL_I2C_SlaveRxCpltCallback>
 800cdac:	e6be      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cdae:	060d      	lsls	r5, r1, #24
 800cdb0:	d528      	bpl.n	800ce04 <HAL_I2C_EV_IRQHandler+0x338>
 800cdb2:	0546      	lsls	r6, r0, #21
 800cdb4:	d526      	bpl.n	800ce04 <HAL_I2C_EV_IRQHandler+0x338>
 800cdb6:	074d      	lsls	r5, r1, #29
 800cdb8:	d427      	bmi.n	800ce0a <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cdba:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800cdbe:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800cdc0:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cdc2:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800cdc4:	2900      	cmp	r1, #0
 800cdc6:	f43f aeb1 	beq.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800cdca:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800cdcc:	f811 5b01 	ldrb.w	r5, [r1], #1
 800cdd0:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800cdd2:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cdd4:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800cdd6:	3901      	subs	r1, #1
 800cdd8:	b289      	uxth	r1, r1
 800cdda:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800cddc:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800cdde:	b289      	uxth	r1, r1
 800cde0:	2900      	cmp	r1, #0
 800cde2:	f47f aea3 	bne.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
 800cde6:	2829      	cmp	r0, #41	; 0x29
 800cde8:	f47f aea0 	bne.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cdec:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cdee:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cdf0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800cdf4:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800cdf6:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800cdf8:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cdfa:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800cdfe:	f7ff fcc7 	bl	800c790 <HAL_I2C_SlaveTxCpltCallback>
 800ce02:	e693      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ce04:	0749      	lsls	r1, r1, #29
 800ce06:	f57f ae91 	bpl.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
 800ce0a:	0582      	lsls	r2, r0, #22
 800ce0c:	f57f ae8e 	bpl.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800ce10:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ce12:	b292      	uxth	r2, r2
 800ce14:	2a00      	cmp	r2, #0
 800ce16:	f43f ae89 	beq.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ce1a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ce1c:	f812 1b01 	ldrb.w	r1, [r2], #1
 800ce20:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800ce22:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800ce24:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ce26:	3b01      	subs	r3, #1
 800ce28:	b29b      	uxth	r3, r3
 800ce2a:	8563      	strh	r3, [r4, #42]	; 0x2a
 800ce2c:	e67e      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ce2e:	074a      	lsls	r2, r1, #29
 800ce30:	f57f ae7c 	bpl.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
 800ce34:	0586      	lsls	r6, r0, #22
 800ce36:	f57f ae79 	bpl.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800ce3a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ce3c:	b292      	uxth	r2, r2
 800ce3e:	2a00      	cmp	r2, #0
 800ce40:	f43f ae74 	beq.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
 800ce44:	e01b      	b.n	800ce7e <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800ce46:	685a      	ldr	r2, [r3, #4]
 800ce48:	0512      	lsls	r2, r2, #20
 800ce4a:	f53f ae6f 	bmi.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800ce4e:	064e      	lsls	r6, r1, #25
 800ce50:	d433      	bmi.n	800ceba <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ce52:	0749      	lsls	r1, r1, #29
 800ce54:	f57f ae6a 	bpl.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
 800ce58:	0582      	lsls	r2, r0, #22
 800ce5a:	f57f ae67 	bpl.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800ce5e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800ce60:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ce62:	b292      	uxth	r2, r2
 800ce64:	2a04      	cmp	r2, #4
 800ce66:	f000 8113 	beq.w	800d090 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800ce6a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ce6c:	b292      	uxth	r2, r2
 800ce6e:	2a03      	cmp	r2, #3
 800ce70:	f000 8153 	beq.w	800d11a <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800ce74:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ce76:	b292      	uxth	r2, r2
 800ce78:	2a02      	cmp	r2, #2
 800ce7a:	f000 8182 	beq.w	800d182 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ce7e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ce80:	691b      	ldr	r3, [r3, #16]
 800ce82:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800ce84:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800ce86:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ce88:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800ce8a:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800ce8c:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800ce8e:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ce90:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800ce92:	e64b      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ce94:	074d      	lsls	r5, r1, #29
 800ce96:	f57f ae49 	bpl.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
 800ce9a:	0581      	lsls	r1, r0, #22
 800ce9c:	f57f ae46 	bpl.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800cea0:	2a21      	cmp	r2, #33	; 0x21
 800cea2:	f000 80fd 	beq.w	800d0a0 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800cea6:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800ceaa:	f47f ae3f 	bne.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800ceae:	4620      	mov	r0, r4
}
 800ceb0:	b00e      	add	sp, #56	; 0x38
 800ceb2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800ceb6:	f7ff bc75 	b.w	800c7a4 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800ceba:	0545      	lsls	r5, r0, #21
 800cebc:	d5c9      	bpl.n	800ce52 <HAL_I2C_EV_IRQHandler+0x386>
 800cebe:	f011 0104 	ands.w	r1, r1, #4
 800cec2:	d1c9      	bne.n	800ce58 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800cec4:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800cec8:	2a22      	cmp	r2, #34	; 0x22
 800ceca:	f47f ae2f 	bne.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800cece:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ced0:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800ced2:	2a03      	cmp	r2, #3
 800ced4:	f240 81ec 	bls.w	800d2b0 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ced8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ceda:	691b      	ldr	r3, [r3, #16]
 800cedc:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800cede:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800cee0:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800cee2:	3b01      	subs	r3, #1
 800cee4:	b29b      	uxth	r3, r3
 800cee6:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800cee8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ceea:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800ceec:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800ceee:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800cef0:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800cef2:	f47f ae1b 	bne.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cef6:	6822      	ldr	r2, [r4, #0]
 800cef8:	6853      	ldr	r3, [r2, #4]
 800cefa:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800cefe:	6053      	str	r3, [r2, #4]
 800cf00:	e614      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800cf02:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800cf06:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800cf08:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800cf0a:	bf16      	itet	ne
 800cf0c:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800cf10:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800cf14:	b2d2      	uxtbne	r2, r2
 800cf16:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800cf18:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800cf1a:	b11a      	cbz	r2, 800cf24 <HAL_I2C_EV_IRQHandler+0x458>
 800cf1c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800cf1e:	2a00      	cmp	r2, #0
 800cf20:	f47f ae21 	bne.w	800cb66 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800cf24:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cf26:	2a00      	cmp	r2, #0
 800cf28:	f43f ae00 	beq.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
 800cf2c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800cf2e:	2a00      	cmp	r2, #0
 800cf30:	f47f ae19 	bne.w	800cb66 <HAL_I2C_EV_IRQHandler+0x9a>
 800cf34:	e5fa      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800cf36:	4620      	mov	r0, r4
}
 800cf38:	b00e      	add	sp, #56	; 0x38
 800cf3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800cf3e:	f7ff bd0f 	b.w	800c960 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800cf42:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800cf44:	bb52      	cbnz	r2, 800cf9c <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800cf46:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800cf48:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800cf4c:	611a      	str	r2, [r3, #16]
 800cf4e:	e5ed      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800cf50:	2201      	movs	r2, #1
 800cf52:	62e2      	str	r2, [r4, #44]	; 0x2c
 800cf54:	e619      	b.n	800cb8a <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800cf56:	685a      	ldr	r2, [r3, #4]
 800cf58:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800cf5c:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800cf5e:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800cf60:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800cf64:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800cf68:	bf54      	ite	pl
 800cf6a:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800cf6c:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800cf6e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800cf72:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800cf76:	4620      	mov	r0, r4
 800cf78:	f7ff fc0e 	bl	800c798 <HAL_I2C_AddrCallback>
 800cf7c:	e5d6      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
 800cf7e:	bf00      	nop
 800cf80:	0800c86d 	.word	0x0800c86d
      else if (hi2c->EventCount == 1U)
 800cf84:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800cf86:	2a01      	cmp	r2, #1
 800cf88:	f47f add0 	bne.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800cf8c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800cf8e:	11d2      	asrs	r2, r2, #7
 800cf90:	f002 0206 	and.w	r2, r2, #6
 800cf94:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800cf98:	611a      	str	r2, [r3, #16]
 800cf9a:	e5c7      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800cf9c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800cf9e:	f042 0201 	orr.w	r2, r2, #1
 800cfa2:	b2d2      	uxtb	r2, r2
 800cfa4:	611a      	str	r2, [r3, #16]
 800cfa6:	e5c1      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800cfa8:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800cfaa:	b911      	cbnz	r1, 800cfb2 <HAL_I2C_EV_IRQHandler+0x4e6>
 800cfac:	2a40      	cmp	r2, #64	; 0x40
 800cfae:	f000 809b 	beq.w	800d0e8 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800cfb2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800cfb4:	b922      	cbnz	r2, 800cfc0 <HAL_I2C_EV_IRQHandler+0x4f4>
 800cfb6:	6921      	ldr	r1, [r4, #16]
 800cfb8:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800cfbc:	f000 809f 	beq.w	800d0fe <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800cfc0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cfc2:	b292      	uxth	r2, r2
 800cfc4:	2a00      	cmp	r2, #0
 800cfc6:	d142      	bne.n	800d04e <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cfc8:	9203      	str	r2, [sp, #12]
 800cfca:	695a      	ldr	r2, [r3, #20]
 800cfcc:	9203      	str	r2, [sp, #12]
 800cfce:	699a      	ldr	r2, [r3, #24]
 800cfd0:	9203      	str	r2, [sp, #12]
 800cfd2:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800cfd4:	681a      	ldr	r2, [r3, #0]
 800cfd6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800cfda:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800cfdc:	2300      	movs	r3, #0
 800cfde:	6523      	str	r3, [r4, #80]	; 0x50
 800cfe0:	e5a4      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800cfe2:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800cfe4:	6802      	ldr	r2, [r0, #0]
 800cfe6:	6852      	ldr	r2, [r2, #4]
 800cfe8:	b292      	uxth	r2, r2
 800cfea:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800cfec:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cfee:	b292      	uxth	r2, r2
 800cff0:	b11a      	cbz	r2, 800cffa <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800cff2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cff4:	f042 0204 	orr.w	r2, r2, #4
 800cff8:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800cffa:	685a      	ldr	r2, [r3, #4]
 800cffc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800d000:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800d002:	f7fe fab3 	bl	800b56c <HAL_DMA_GetState>
 800d006:	2801      	cmp	r0, #1
 800d008:	f43f ae8e 	beq.w	800cd28 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800d00c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d00e:	4b98      	ldr	r3, [pc, #608]	; (800d270 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800d010:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800d012:	f7fe fa99 	bl	800b548 <HAL_DMA_Abort_IT>
 800d016:	2800      	cmp	r0, #0
 800d018:	f43f ae86 	beq.w	800cd28 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800d01c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d01e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800d020:	4798      	blx	r3
 800d022:	e681      	b.n	800cd28 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d024:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800d026:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d028:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d02a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d02e:	f7ff fbb1 	bl	800c794 <HAL_I2C_SlaveRxCpltCallback>
 800d032:	e6a6      	b.n	800cd82 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800d034:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800d036:	498f      	ldr	r1, [pc, #572]	; (800d274 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800d038:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800d03a:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800d03c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800d03e:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800d040:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d044:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800d048:	f7ff fba8 	bl	800c79c <HAL_I2C_ListenCpltCallback>
 800d04c:	e56e      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800d04e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d050:	b292      	uxth	r2, r2
 800d052:	2a01      	cmp	r2, #1
 800d054:	d070      	beq.n	800d138 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800d056:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d058:	b292      	uxth	r2, r2
 800d05a:	2a02      	cmp	r2, #2
 800d05c:	f000 80d6 	beq.w	800d20c <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d060:	681a      	ldr	r2, [r3, #0]
 800d062:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d066:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d068:	685a      	ldr	r2, [r3, #4]
 800d06a:	0511      	lsls	r1, r2, #20
 800d06c:	d508      	bpl.n	800d080 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d06e:	2820      	cmp	r0, #32
 800d070:	f200 80f8 	bhi.w	800d264 <HAL_I2C_EV_IRQHandler+0x798>
 800d074:	2807      	cmp	r0, #7
 800d076:	f200 80ea 	bhi.w	800d24e <HAL_I2C_EV_IRQHandler+0x782>
 800d07a:	2801      	cmp	r0, #1
 800d07c:	f000 80ed 	beq.w	800d25a <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d080:	2200      	movs	r2, #0
 800d082:	9209      	str	r2, [sp, #36]	; 0x24
 800d084:	695a      	ldr	r2, [r3, #20]
 800d086:	9209      	str	r2, [sp, #36]	; 0x24
 800d088:	699b      	ldr	r3, [r3, #24]
 800d08a:	9309      	str	r3, [sp, #36]	; 0x24
 800d08c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d08e:	e7a5      	b.n	800cfdc <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d090:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d092:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d094:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d098:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d09a:	691b      	ldr	r3, [r3, #16]
 800d09c:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800d09e:	e6f1      	b.n	800ce84 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800d0a0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800d0a2:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d0a6:	2a21      	cmp	r2, #33	; 0x21
 800d0a8:	f47f ad40 	bne.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800d0ac:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d0ae:	b292      	uxth	r2, r2
 800d0b0:	2a00      	cmp	r2, #0
 800d0b2:	f47f aeb2 	bne.w	800ce1a <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800d0b6:	2908      	cmp	r1, #8
 800d0b8:	f000 80e2 	beq.w	800d280 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d0bc:	2920      	cmp	r1, #32
 800d0be:	f000 80df 	beq.w	800d280 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d0c2:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800d0c6:	f000 80db 	beq.w	800d280 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d0ca:	6859      	ldr	r1, [r3, #4]
 800d0cc:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d0d0:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d0d2:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800d0d4:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d0d6:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800d0d8:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800d0dc:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800d0de:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800d0e2:	f7ff fb51 	bl	800c788 <HAL_I2C_MasterTxCpltCallback>
 800d0e6:	e521      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d0e8:	9101      	str	r1, [sp, #4]
 800d0ea:	695a      	ldr	r2, [r3, #20]
 800d0ec:	9201      	str	r2, [sp, #4]
 800d0ee:	699b      	ldr	r3, [r3, #24]
 800d0f0:	9301      	str	r3, [sp, #4]
 800d0f2:	9b01      	ldr	r3, [sp, #4]
 800d0f4:	e51a      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800d0f6:	2a21      	cmp	r2, #33	; 0x21
 800d0f8:	f43f add1 	beq.w	800cc9e <HAL_I2C_EV_IRQHandler+0x1d2>
 800d0fc:	e5c9      	b.n	800cc92 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d0fe:	9202      	str	r2, [sp, #8]
 800d100:	695a      	ldr	r2, [r3, #20]
 800d102:	9202      	str	r2, [sp, #8]
 800d104:	699a      	ldr	r2, [r3, #24]
 800d106:	9202      	str	r2, [sp, #8]
 800d108:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800d10a:	681a      	ldr	r2, [r3, #0]
 800d10c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800d110:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800d112:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800d114:	3301      	adds	r3, #1
 800d116:	6523      	str	r3, [r4, #80]	; 0x50
 800d118:	e508      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d11a:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800d11c:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d11e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d122:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800d124:	f43f aeab 	beq.w	800ce7e <HAL_I2C_EV_IRQHandler+0x3b2>
 800d128:	2902      	cmp	r1, #2
 800d12a:	f43f aea8 	beq.w	800ce7e <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d12e:	681a      	ldr	r2, [r3, #0]
 800d130:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d134:	601a      	str	r2, [r3, #0]
 800d136:	e6a2      	b.n	800ce7e <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800d138:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d13c:	f000 811b 	beq.w	800d376 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800d140:	2808      	cmp	r0, #8
 800d142:	f000 8108 	beq.w	800d356 <HAL_I2C_EV_IRQHandler+0x88a>
 800d146:	2820      	cmp	r0, #32
 800d148:	f000 8105 	beq.w	800d356 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800d14c:	2d12      	cmp	r5, #18
 800d14e:	f000 80ff 	beq.w	800d350 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800d152:	2810      	cmp	r0, #16
 800d154:	d804      	bhi.n	800d160 <HAL_I2C_EV_IRQHandler+0x694>
 800d156:	4a48      	ldr	r2, [pc, #288]	; (800d278 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800d158:	40c2      	lsrs	r2, r0
 800d15a:	07d1      	lsls	r1, r2, #31
 800d15c:	f100 814c 	bmi.w	800d3f8 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d160:	681a      	ldr	r2, [r3, #0]
 800d162:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d166:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d168:	2200      	movs	r2, #0
 800d16a:	9206      	str	r2, [sp, #24]
 800d16c:	695a      	ldr	r2, [r3, #20]
 800d16e:	9206      	str	r2, [sp, #24]
 800d170:	699b      	ldr	r3, [r3, #24]
 800d172:	9306      	str	r3, [sp, #24]
 800d174:	9b06      	ldr	r3, [sp, #24]
 800d176:	e731      	b.n	800cfdc <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d178:	685a      	ldr	r2, [r3, #4]
 800d17a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d17e:	605a      	str	r2, [r3, #4]
 800d180:	e4d4      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800d182:	3901      	subs	r1, #1
 800d184:	290f      	cmp	r1, #15
 800d186:	d809      	bhi.n	800d19c <HAL_I2C_EV_IRQHandler+0x6d0>
 800d188:	e8df f001 	tbb	[pc, r1]
 800d18c:	3608363b 	.word	0x3608363b
 800d190:	08080808 	.word	0x08080808
 800d194:	08080808 	.word	0x08080808
 800d198:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d19c:	681a      	ldr	r2, [r3, #0]
 800d19e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d1a2:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d1a4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d1a6:	691b      	ldr	r3, [r3, #16]
 800d1a8:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800d1aa:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800d1ac:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d1ae:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800d1b0:	3b01      	subs	r3, #1
 800d1b2:	b29b      	uxth	r3, r3
 800d1b4:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d1b6:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800d1b8:	1c51      	adds	r1, r2, #1
 800d1ba:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d1bc:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800d1be:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d1c0:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800d1c2:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d1c4:	3b01      	subs	r3, #1
 800d1c6:	b29b      	uxth	r3, r3
 800d1c8:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d1ca:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800d1cc:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d1ce:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800d1d2:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800d1d4:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d1d6:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800d1d8:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d1dc:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800d1e0:	2b40      	cmp	r3, #64	; 0x40
 800d1e2:	f000 80f5 	beq.w	800d3d0 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d1e6:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800d1e8:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d1ea:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800d1ee:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800d1f0:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800d1f2:	f7ff facb 	bl	800c78c <HAL_I2C_MasterRxCpltCallback>
 800d1f6:	e499      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d1f8:	681a      	ldr	r2, [r3, #0]
 800d1fa:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d1fe:	601a      	str	r2, [r3, #0]
 800d200:	e7d0      	b.n	800d1a4 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d202:	681a      	ldr	r2, [r3, #0]
 800d204:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d208:	601a      	str	r2, [r3, #0]
 800d20a:	e7cb      	b.n	800d1a4 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800d20c:	2810      	cmp	r0, #16
 800d20e:	d804      	bhi.n	800d21a <HAL_I2C_EV_IRQHandler+0x74e>
 800d210:	4a19      	ldr	r2, [pc, #100]	; (800d278 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800d212:	40c2      	lsrs	r2, r0
 800d214:	07d2      	lsls	r2, r2, #31
 800d216:	f100 80c2 	bmi.w	800d39e <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d21a:	681a      	ldr	r2, [r3, #0]
 800d21c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d220:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800d222:	681a      	ldr	r2, [r3, #0]
 800d224:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800d228:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d22a:	685a      	ldr	r2, [r3, #4]
 800d22c:	0516      	lsls	r6, r2, #20
 800d22e:	d506      	bpl.n	800d23e <HAL_I2C_EV_IRQHandler+0x772>
 800d230:	2820      	cmp	r0, #32
 800d232:	f240 80bc 	bls.w	800d3ae <HAL_I2C_EV_IRQHandler+0x8e2>
 800d236:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d23a:	f000 80bd 	beq.w	800d3b8 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d23e:	2200      	movs	r2, #0
 800d240:	9208      	str	r2, [sp, #32]
 800d242:	695a      	ldr	r2, [r3, #20]
 800d244:	9208      	str	r2, [sp, #32]
 800d246:	699b      	ldr	r3, [r3, #24]
 800d248:	9308      	str	r3, [sp, #32]
 800d24a:	9b08      	ldr	r3, [sp, #32]
 800d24c:	e6c6      	b.n	800cfdc <HAL_I2C_EV_IRQHandler+0x510>
 800d24e:	4a0b      	ldr	r2, [pc, #44]	; (800d27c <HAL_I2C_EV_IRQHandler+0x7b0>)
 800d250:	3808      	subs	r0, #8
 800d252:	40c2      	lsrs	r2, r0
 800d254:	07d2      	lsls	r2, r2, #31
 800d256:	f57f af13 	bpl.w	800d080 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800d25a:	685a      	ldr	r2, [r3, #4]
 800d25c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800d260:	605a      	str	r2, [r3, #4]
 800d262:	e70d      	b.n	800d080 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d264:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d268:	f47f af0a 	bne.w	800d080 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d26c:	e7f5      	b.n	800d25a <HAL_I2C_EV_IRQHandler+0x78e>
 800d26e:	bf00      	nop
 800d270:	0800c86d 	.word	0x0800c86d
 800d274:	ffff0000 	.word	0xffff0000
 800d278:	00010014 	.word	0x00010014
 800d27c:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d280:	6859      	ldr	r1, [r3, #4]
 800d282:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d286:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d288:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800d28a:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800d28c:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d28e:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800d292:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800d294:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800d296:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d29a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800d29e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d2a2:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800d2a4:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d2a6:	f47f af1c 	bne.w	800d0e2 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800d2aa:	f7ff fa79 	bl	800c7a0 <HAL_I2C_MemTxCpltCallback>
 800d2ae:	e43d      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800d2b0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800d2b2:	2802      	cmp	r0, #2
 800d2b4:	f43f af60 	beq.w	800d178 <HAL_I2C_EV_IRQHandler+0x6ac>
 800d2b8:	2a01      	cmp	r2, #1
 800d2ba:	f63f af5d 	bhi.w	800d178 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800d2be:	4a62      	ldr	r2, [pc, #392]	; (800d448 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800d2c0:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800d2c2:	6812      	ldr	r2, [r2, #0]
 800d2c4:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800d2c8:	fbb2 f2f0 	udiv	r2, r2, r0
 800d2cc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800d2d0:	920b      	str	r2, [sp, #44]	; 0x2c
 800d2d2:	e004      	b.n	800d2de <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800d2d4:	681a      	ldr	r2, [r3, #0]
 800d2d6:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800d2da:	f000 8092 	beq.w	800d402 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800d2de:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d2e0:	3a01      	subs	r2, #1
 800d2e2:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800d2e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d2e6:	2900      	cmp	r1, #0
 800d2e8:	d1f4      	bne.n	800d2d4 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d2ea:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d2ec:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d2ee:	f042 0220 	orr.w	r2, r2, #32
 800d2f2:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d2f4:	685a      	ldr	r2, [r3, #4]
 800d2f6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800d2fa:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d2fc:	691b      	ldr	r3, [r3, #16]
 800d2fe:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800d300:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800d302:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800d304:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800d306:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800d308:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800d30a:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800d30c:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800d30e:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800d310:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800d314:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800d316:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800d31a:	f7ff faa3 	bl	800c864 <HAL_I2C_ErrorCallback>
 800d31e:	e405      	b.n	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800d320:	2d08      	cmp	r5, #8
 800d322:	d0ad      	beq.n	800d280 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d324:	2d20      	cmp	r5, #32
 800d326:	d0ab      	beq.n	800d280 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d328:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800d32c:	d0a8      	beq.n	800d280 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d32e:	685a      	ldr	r2, [r3, #4]
 800d330:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800d334:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d336:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d338:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800d33a:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d33c:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d33e:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800d342:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800d344:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800d348:	f7ff fa1e 	bl	800c788 <HAL_I2C_MasterTxCpltCallback>
 800d34c:	f7ff bbee 	b.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800d350:	2801      	cmp	r0, #1
 800d352:	f43f af05 	beq.w	800d160 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d356:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d358:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d35a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d35e:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d360:	9107      	str	r1, [sp, #28]
 800d362:	695a      	ldr	r2, [r3, #20]
 800d364:	9207      	str	r2, [sp, #28]
 800d366:	699a      	ldr	r2, [r3, #24]
 800d368:	9207      	str	r2, [sp, #28]
 800d36a:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d36c:	681a      	ldr	r2, [r3, #0]
 800d36e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d372:	601a      	str	r2, [r3, #0]
 800d374:	e632      	b.n	800cfdc <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d376:	681a      	ldr	r2, [r3, #0]
 800d378:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d37c:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800d37e:	685a      	ldr	r2, [r3, #4]
 800d380:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800d384:	d02d      	beq.n	800d3e2 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d386:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d388:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d38a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d38e:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d390:	9104      	str	r1, [sp, #16]
 800d392:	695a      	ldr	r2, [r3, #20]
 800d394:	9204      	str	r2, [sp, #16]
 800d396:	699b      	ldr	r3, [r3, #24]
 800d398:	9304      	str	r3, [sp, #16]
 800d39a:	9b04      	ldr	r3, [sp, #16]
 800d39c:	e61e      	b.n	800cfdc <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d39e:	681a      	ldr	r2, [r3, #0]
 800d3a0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d3a4:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d3a6:	685a      	ldr	r2, [r3, #4]
 800d3a8:	0515      	lsls	r5, r2, #20
 800d3aa:	f57f af48 	bpl.w	800d23e <HAL_I2C_EV_IRQHandler+0x772>
 800d3ae:	2807      	cmp	r0, #7
 800d3b0:	d807      	bhi.n	800d3c2 <HAL_I2C_EV_IRQHandler+0x8f6>
 800d3b2:	2801      	cmp	r0, #1
 800d3b4:	f47f af43 	bne.w	800d23e <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800d3b8:	685a      	ldr	r2, [r3, #4]
 800d3ba:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800d3be:	605a      	str	r2, [r3, #4]
 800d3c0:	e73d      	b.n	800d23e <HAL_I2C_EV_IRQHandler+0x772>
 800d3c2:	4a22      	ldr	r2, [pc, #136]	; (800d44c <HAL_I2C_EV_IRQHandler+0x980>)
 800d3c4:	3808      	subs	r0, #8
 800d3c6:	40c2      	lsrs	r2, r0
 800d3c8:	07d0      	lsls	r0, r2, #31
 800d3ca:	f57f af38 	bpl.w	800d23e <HAL_I2C_EV_IRQHandler+0x772>
 800d3ce:	e7f3      	b.n	800d3b8 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d3d0:	2300      	movs	r3, #0
 800d3d2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800d3d6:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800d3d8:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800d3da:	f7ff fa41 	bl	800c860 <HAL_I2C_MemRxCpltCallback>
 800d3de:	f7ff bba5 	b.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d3e2:	9205      	str	r2, [sp, #20]
 800d3e4:	695a      	ldr	r2, [r3, #20]
 800d3e6:	9205      	str	r2, [sp, #20]
 800d3e8:	699a      	ldr	r2, [r3, #24]
 800d3ea:	9205      	str	r2, [sp, #20]
 800d3ec:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d3ee:	681a      	ldr	r2, [r3, #0]
 800d3f0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d3f4:	601a      	str	r2, [r3, #0]
 800d3f6:	e5f1      	b.n	800cfdc <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d3f8:	681a      	ldr	r2, [r3, #0]
 800d3fa:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d3fe:	601a      	str	r2, [r3, #0]
 800d400:	e6b2      	b.n	800d168 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d402:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d404:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d406:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800d40a:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d40c:	6859      	ldr	r1, [r3, #4]
 800d40e:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d412:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d414:	691b      	ldr	r3, [r3, #16]
 800d416:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800d418:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d41a:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800d41c:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800d41e:	b29b      	uxth	r3, r3
 800d420:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800d422:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800d426:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d428:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800d42c:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d42e:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800d430:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d432:	f47f aed9 	bne.w	800d1e8 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800d436:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800d43a:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800d43c:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800d43e:	f7ff fa0f 	bl	800c860 <HAL_I2C_MemRxCpltCallback>
 800d442:	f7ff bb73 	b.w	800cb2c <HAL_I2C_EV_IRQHandler+0x60>
 800d446:	bf00      	nop
 800d448:	2000007c 	.word	0x2000007c
 800d44c:	01000101 	.word	0x01000101

0800d450 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d450:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800d454:	2a20      	cmp	r2, #32
{
 800d456:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800d458:	fa5f fc82 	uxtb.w	ip, r2
 800d45c:	d001      	beq.n	800d462 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800d45e:	2002      	movs	r0, #2
  }
}
 800d460:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800d462:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d464:	2024      	movs	r0, #36	; 0x24
 800d466:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800d46a:	6810      	ldr	r0, [r2, #0]
 800d46c:	f020 0001 	bic.w	r0, r0, #1
 800d470:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800d472:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800d474:	f020 0010 	bic.w	r0, r0, #16
 800d478:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800d47a:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800d47c:	4301      	orrs	r1, r0
 800d47e:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800d480:	6811      	ldr	r1, [r2, #0]
 800d482:	f041 0101 	orr.w	r1, r1, #1
 800d486:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800d488:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800d48a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800d48e:	4770      	bx	lr

0800d490 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d490:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800d494:	2a20      	cmp	r2, #32
 800d496:	d001      	beq.n	800d49c <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800d498:	2002      	movs	r0, #2
  }
}
 800d49a:	4770      	bx	lr
{
 800d49c:	b410      	push	{r4}
 800d49e:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800d4a2:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d4a4:	2224      	movs	r2, #36	; 0x24
 800d4a6:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800d4aa:	6822      	ldr	r2, [r4, #0]
 800d4ac:	f022 0201 	bic.w	r2, r2, #1
 800d4b0:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800d4b2:	4603      	mov	r3, r0
 800d4b4:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800d4b6:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800d4ba:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800d4bc:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800d4be:	b289      	uxth	r1, r1
 800d4c0:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800d4c2:	6822      	ldr	r2, [r4, #0]
 800d4c4:	f042 0201 	orr.w	r2, r2, #1
 800d4c8:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800d4ca:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800d4ce:	2000      	movs	r0, #0
}
 800d4d0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d4d4:	4770      	bx	lr
 800d4d6:	bf00      	nop

0800d4d8 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800d4d8:	2800      	cmp	r0, #0
 800d4da:	d069      	beq.n	800d5b0 <HAL_LTDC_Init+0xd8>
{
 800d4dc:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800d4de:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800d4e2:	4604      	mov	r4, r0
 800d4e4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d4e8:	2b00      	cmp	r3, #0
 800d4ea:	d05c      	beq.n	800d5a6 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d4ec:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d4ee:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d4f0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d4f4:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d4f8:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d4fa:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800d4fc:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d500:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800d504:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d506:	6999      	ldr	r1, [r3, #24]
 800d508:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800d50a:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d50c:	430a      	orrs	r2, r1
 800d50e:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d510:	689a      	ldr	r2, [r3, #8]
 800d512:	4928      	ldr	r1, [pc, #160]	; (800d5b4 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800d514:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d516:	400a      	ands	r2, r1
 800d518:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800d51a:	689a      	ldr	r2, [r3, #8]
 800d51c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d520:	69a0      	ldr	r0, [r4, #24]
 800d522:	4302      	orrs	r2, r0
 800d524:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d526:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800d528:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d52a:	400a      	ands	r2, r1
 800d52c:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800d52e:	68da      	ldr	r2, [r3, #12]
 800d530:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d534:	6a20      	ldr	r0, [r4, #32]
 800d536:	4302      	orrs	r2, r0
 800d538:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d53a:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800d53c:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d53e:	400a      	ands	r2, r1
 800d540:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800d542:	691a      	ldr	r2, [r3, #16]
 800d544:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d548:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d54a:	4302      	orrs	r2, r0
 800d54c:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800d54e:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800d550:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800d552:	400a      	ands	r2, r1
 800d554:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800d556:	695a      	ldr	r2, [r3, #20]
 800d558:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d55a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d55e:	430a      	orrs	r2, r1
 800d560:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d562:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800d564:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800d568:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d56c:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800d570:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800d572:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800d574:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800d578:	432a      	orrs	r2, r5
 800d57a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800d57e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800d582:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800d584:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d586:	f042 0206 	orr.w	r2, r2, #6
 800d58a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800d58c:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800d58e:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d592:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800d594:	ea42 020c 	orr.w	r2, r2, ip
 800d598:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d59a:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800d59e:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800d5a2:	4608      	mov	r0, r1
}
 800d5a4:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800d5a6:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800d5aa:	f7f4 fdef 	bl	800218c <HAL_LTDC_MspInit>
 800d5ae:	e79d      	b.n	800d4ec <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800d5b0:	2001      	movs	r0, #1
}
 800d5b2:	4770      	bx	lr
 800d5b4:	f000f800 	.word	0xf000f800

0800d5b8 <HAL_LTDC_ErrorCallback>:
 800d5b8:	4770      	bx	lr
 800d5ba:	bf00      	nop

0800d5bc <HAL_LTDC_ReloadEventCallback>:
 800d5bc:	4770      	bx	lr
 800d5be:	bf00      	nop

0800d5c0 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d5c0:	6803      	ldr	r3, [r0, #0]
{
 800d5c2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d5c4:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800d5c6:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d5c8:	076a      	lsls	r2, r5, #29
{
 800d5ca:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d5cc:	d501      	bpl.n	800d5d2 <HAL_LTDC_IRQHandler+0x12>
 800d5ce:	0771      	lsls	r1, r6, #29
 800d5d0:	d41d      	bmi.n	800d60e <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800d5d2:	07aa      	lsls	r2, r5, #30
 800d5d4:	d501      	bpl.n	800d5da <HAL_LTDC_IRQHandler+0x1a>
 800d5d6:	07b3      	lsls	r3, r6, #30
 800d5d8:	d42d      	bmi.n	800d636 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800d5da:	07e8      	lsls	r0, r5, #31
 800d5dc:	d501      	bpl.n	800d5e2 <HAL_LTDC_IRQHandler+0x22>
 800d5de:	07f1      	lsls	r1, r6, #31
 800d5e0:	d440      	bmi.n	800d664 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800d5e2:	072a      	lsls	r2, r5, #28
 800d5e4:	d501      	bpl.n	800d5ea <HAL_LTDC_IRQHandler+0x2a>
 800d5e6:	0733      	lsls	r3, r6, #28
 800d5e8:	d400      	bmi.n	800d5ec <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800d5ea:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d5ec:	6823      	ldr	r3, [r4, #0]
 800d5ee:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d5f0:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d5f2:	f022 0208 	bic.w	r2, r2, #8
 800d5f6:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800d5f8:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d5fa:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d5fc:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d5fe:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d602:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800d606:	4620      	mov	r0, r4
 800d608:	f7ff ffd8 	bl	800d5bc <HAL_LTDC_ReloadEventCallback>
}
 800d60c:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800d60e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d610:	f022 0204 	bic.w	r2, r2, #4
 800d614:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800d616:	2204      	movs	r2, #4
 800d618:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800d61a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800d61e:	f043 0301 	orr.w	r3, r3, #1
 800d622:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800d626:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d628:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d62c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d630:	f7ff ffc2 	bl	800d5b8 <HAL_LTDC_ErrorCallback>
 800d634:	e7cd      	b.n	800d5d2 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800d636:	6823      	ldr	r3, [r4, #0]
 800d638:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d63a:	f022 0202 	bic.w	r2, r2, #2
 800d63e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800d640:	2202      	movs	r2, #2
 800d642:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800d644:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800d648:	f043 0302 	orr.w	r3, r3, #2
 800d64c:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d650:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800d652:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d654:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d658:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d65c:	4620      	mov	r0, r4
 800d65e:	f7ff ffab 	bl	800d5b8 <HAL_LTDC_ErrorCallback>
 800d662:	e7ba      	b.n	800d5da <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d664:	6823      	ldr	r3, [r4, #0]
 800d666:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d668:	f022 0201 	bic.w	r2, r2, #1
 800d66c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800d66e:	2201      	movs	r2, #1
 800d670:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d672:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d674:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d678:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800d67c:	4620      	mov	r0, r4
 800d67e:	f7f5 fddf 	bl	8003240 <HAL_LTDC_LineEventCallback>
 800d682:	e7ae      	b.n	800d5e2 <HAL_LTDC_IRQHandler+0x22>

0800d684 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800d684:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d688:	2b01      	cmp	r3, #1
 800d68a:	f000 80c2 	beq.w	800d812 <HAL_LTDC_ConfigLayer+0x18e>
{
 800d68e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d692:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d696:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d69a:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d69e:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d6a0:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d6a2:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d6a6:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800d6aa:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d6ae:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800d6b2:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d6b6:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800d6ba:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d6bc:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d6c0:	460c      	mov	r4, r1
 800d6c2:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d6c4:	9301      	str	r3, [sp, #4]
 800d6c6:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d6c8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d6ca:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800d6ce:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d6d2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d6d4:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d6d6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d6da:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d6dc:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d6e0:	6823      	ldr	r3, [r4, #0]
 800d6e2:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d6e6:	9b01      	ldr	r3, [sp, #4]
 800d6e8:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d6ec:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800d6f0:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d6f2:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800d6f4:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d6f8:	1c51      	adds	r1, r2, #1
 800d6fa:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800d6fe:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d700:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d702:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800d706:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d70a:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800d70e:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800d712:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800d716:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d71a:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800d71e:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d720:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800d722:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800d726:	3301      	adds	r3, #1
 800d728:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800d72c:	4403      	add	r3, r0
 800d72e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d732:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800d736:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800d73a:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800d73c:	f023 0307 	bic.w	r3, r3, #7
 800d740:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800d744:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800d748:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800d74c:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800d750:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800d754:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800d758:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800d75c:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800d760:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800d764:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800d768:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800d76c:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800d770:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800d774:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800d778:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800d77c:	696b      	ldr	r3, [r5, #20]
 800d77e:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800d782:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800d786:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800d78a:	f023 0307 	bic.w	r3, r3, #7
 800d78e:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800d792:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800d796:	4303      	orrs	r3, r0
 800d798:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800d79c:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800d7a0:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800d7a2:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800d7a6:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800d7aa:	bb69      	cbnz	r1, 800d808 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800d7ac:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800d7ae:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800d7b0:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800d7b2:	fb03 f707 	mul.w	r7, r3, r7
 800d7b6:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800d7b8:	fb02 f303 	mul.w	r3, r2, r3
 800d7bc:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800d7c0:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800d7c4:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800d7c6:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800d7ca:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800d7ce:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800d7d2:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800d7d6:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800d7da:	f023 0307 	bic.w	r3, r3, #7
 800d7de:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800d7e2:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800d7e6:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d7ea:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800d7ec:	4313      	orrs	r3, r2
 800d7ee:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800d7f2:	2300      	movs	r3, #0
  return HAL_OK;
 800d7f4:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d7f6:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800d7fa:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800d7fe:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800d802:	b003      	add	sp, #12
 800d804:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800d808:	3901      	subs	r1, #1
 800d80a:	2906      	cmp	r1, #6
 800d80c:	d903      	bls.n	800d816 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800d80e:	2301      	movs	r3, #1
 800d810:	e7cd      	b.n	800d7ae <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800d812:	2002      	movs	r0, #2
}
 800d814:	4770      	bx	lr
 800d816:	4b02      	ldr	r3, [pc, #8]	; (800d820 <HAL_LTDC_ConfigLayer+0x19c>)
 800d818:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800d81c:	e7c7      	b.n	800d7ae <HAL_LTDC_ConfigLayer+0x12a>
 800d81e:	bf00      	nop
 800d820:	080312a4 	.word	0x080312a4

0800d824 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800d824:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d828:	2b01      	cmp	r3, #1
 800d82a:	d019      	beq.n	800d860 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d82c:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d82e:	2302      	movs	r3, #2
{
 800d830:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d832:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d836:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800d838:	4c0a      	ldr	r4, [pc, #40]	; (800d864 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d83a:	f023 0301 	bic.w	r3, r3, #1
 800d83e:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800d840:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d842:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800d844:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d846:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800d84a:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d84e:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800d850:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800d854:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800d858:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800d85c:	4618      	mov	r0, r3
}
 800d85e:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800d860:	2002      	movs	r0, #2
}
 800d862:	4770      	bx	lr
 800d864:	40016800 	.word	0x40016800

0800d868 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800d868:	2800      	cmp	r0, #0
 800d86a:	f000 81a2 	beq.w	800dbb2 <HAL_RCC_OscConfig+0x34a>
{
 800d86e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800d872:	6803      	ldr	r3, [r0, #0]
 800d874:	07dd      	lsls	r5, r3, #31
{
 800d876:	b082      	sub	sp, #8
 800d878:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800d87a:	d52f      	bpl.n	800d8dc <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800d87c:	499e      	ldr	r1, [pc, #632]	; (800daf8 <HAL_RCC_OscConfig+0x290>)
 800d87e:	688a      	ldr	r2, [r1, #8]
 800d880:	f002 020c 	and.w	r2, r2, #12
 800d884:	2a04      	cmp	r2, #4
 800d886:	f000 80ed 	beq.w	800da64 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800d88a:	688a      	ldr	r2, [r1, #8]
 800d88c:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800d890:	2a08      	cmp	r2, #8
 800d892:	f000 80e3 	beq.w	800da5c <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800d896:	6863      	ldr	r3, [r4, #4]
 800d898:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800d89c:	f000 80ec 	beq.w	800da78 <HAL_RCC_OscConfig+0x210>
 800d8a0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800d8a4:	f000 8175 	beq.w	800db92 <HAL_RCC_OscConfig+0x32a>
 800d8a8:	4d93      	ldr	r5, [pc, #588]	; (800daf8 <HAL_RCC_OscConfig+0x290>)
 800d8aa:	682a      	ldr	r2, [r5, #0]
 800d8ac:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800d8b0:	602a      	str	r2, [r5, #0]
 800d8b2:	682a      	ldr	r2, [r5, #0]
 800d8b4:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800d8b8:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800d8ba:	2b00      	cmp	r3, #0
 800d8bc:	f040 80e1 	bne.w	800da82 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800d8c0:	f7fd fdb8 	bl	800b434 <HAL_GetTick>
 800d8c4:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800d8c6:	e005      	b.n	800d8d4 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800d8c8:	f7fd fdb4 	bl	800b434 <HAL_GetTick>
 800d8cc:	1b80      	subs	r0, r0, r6
 800d8ce:	2864      	cmp	r0, #100	; 0x64
 800d8d0:	f200 8101 	bhi.w	800dad6 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800d8d4:	682b      	ldr	r3, [r5, #0]
 800d8d6:	039b      	lsls	r3, r3, #14
 800d8d8:	d4f6      	bmi.n	800d8c8 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800d8da:	6823      	ldr	r3, [r4, #0]
 800d8dc:	079f      	lsls	r7, r3, #30
 800d8de:	d528      	bpl.n	800d932 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800d8e0:	4a85      	ldr	r2, [pc, #532]	; (800daf8 <HAL_RCC_OscConfig+0x290>)
 800d8e2:	6891      	ldr	r1, [r2, #8]
 800d8e4:	f011 0f0c 	tst.w	r1, #12
 800d8e8:	f000 8090 	beq.w	800da0c <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800d8ec:	6891      	ldr	r1, [r2, #8]
 800d8ee:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800d8f2:	2908      	cmp	r1, #8
 800d8f4:	f000 8086 	beq.w	800da04 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800d8f8:	68e3      	ldr	r3, [r4, #12]
 800d8fa:	2b00      	cmp	r3, #0
 800d8fc:	f000 810e 	beq.w	800db1c <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800d900:	4b7e      	ldr	r3, [pc, #504]	; (800dafc <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d902:	4e7d      	ldr	r6, [pc, #500]	; (800daf8 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800d904:	2201      	movs	r2, #1
 800d906:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800d908:	f7fd fd94 	bl	800b434 <HAL_GetTick>
 800d90c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d90e:	e005      	b.n	800d91c <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800d910:	f7fd fd90 	bl	800b434 <HAL_GetTick>
 800d914:	1b40      	subs	r0, r0, r5
 800d916:	2802      	cmp	r0, #2
 800d918:	f200 80dd 	bhi.w	800dad6 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800d91c:	6833      	ldr	r3, [r6, #0]
 800d91e:	0798      	lsls	r0, r3, #30
 800d920:	d5f6      	bpl.n	800d910 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800d922:	6833      	ldr	r3, [r6, #0]
 800d924:	6922      	ldr	r2, [r4, #16]
 800d926:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800d92a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800d92e:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800d930:	6823      	ldr	r3, [r4, #0]
 800d932:	071a      	lsls	r2, r3, #28
 800d934:	d451      	bmi.n	800d9da <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800d936:	0758      	lsls	r0, r3, #29
 800d938:	d52f      	bpl.n	800d99a <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800d93a:	4a6f      	ldr	r2, [pc, #444]	; (800daf8 <HAL_RCC_OscConfig+0x290>)
 800d93c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800d93e:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800d942:	d07f      	beq.n	800da44 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800d944:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800d946:	4e6e      	ldr	r6, [pc, #440]	; (800db00 <HAL_RCC_OscConfig+0x298>)
 800d948:	6833      	ldr	r3, [r6, #0]
 800d94a:	05d9      	lsls	r1, r3, #23
 800d94c:	f140 80b3 	bpl.w	800dab6 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800d950:	68a3      	ldr	r3, [r4, #8]
 800d952:	2b01      	cmp	r3, #1
 800d954:	f000 80c3 	beq.w	800dade <HAL_RCC_OscConfig+0x276>
 800d958:	2b05      	cmp	r3, #5
 800d95a:	f000 812c 	beq.w	800dbb6 <HAL_RCC_OscConfig+0x34e>
 800d95e:	4e66      	ldr	r6, [pc, #408]	; (800daf8 <HAL_RCC_OscConfig+0x290>)
 800d960:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800d962:	f022 0201 	bic.w	r2, r2, #1
 800d966:	6732      	str	r2, [r6, #112]	; 0x70
 800d968:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800d96a:	f022 0204 	bic.w	r2, r2, #4
 800d96e:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800d970:	2b00      	cmp	r3, #0
 800d972:	f040 80b9 	bne.w	800dae8 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800d976:	f7fd fd5d 	bl	800b434 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d97a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800d97e:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800d980:	e005      	b.n	800d98e <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800d982:	f7fd fd57 	bl	800b434 <HAL_GetTick>
 800d986:	1bc0      	subs	r0, r0, r7
 800d988:	4540      	cmp	r0, r8
 800d98a:	f200 80a4 	bhi.w	800dad6 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800d98e:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800d990:	0798      	lsls	r0, r3, #30
 800d992:	d4f6      	bmi.n	800d982 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800d994:	2d00      	cmp	r5, #0
 800d996:	f040 8106 	bne.w	800dba6 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800d99a:	69a0      	ldr	r0, [r4, #24]
 800d99c:	b1c8      	cbz	r0, 800d9d2 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800d99e:	4d56      	ldr	r5, [pc, #344]	; (800daf8 <HAL_RCC_OscConfig+0x290>)
 800d9a0:	68ab      	ldr	r3, [r5, #8]
 800d9a2:	f003 030c 	and.w	r3, r3, #12
 800d9a6:	2b08      	cmp	r3, #8
 800d9a8:	f000 80c9 	beq.w	800db3e <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800d9ac:	4b53      	ldr	r3, [pc, #332]	; (800dafc <HAL_RCC_OscConfig+0x294>)
 800d9ae:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800d9b0:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800d9b2:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800d9b4:	f000 8109 	beq.w	800dbca <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800d9b8:	f7fd fd3c 	bl	800b434 <HAL_GetTick>
 800d9bc:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800d9be:	e005      	b.n	800d9cc <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800d9c0:	f7fd fd38 	bl	800b434 <HAL_GetTick>
 800d9c4:	1b00      	subs	r0, r0, r4
 800d9c6:	2802      	cmp	r0, #2
 800d9c8:	f200 8085 	bhi.w	800dad6 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800d9cc:	682b      	ldr	r3, [r5, #0]
 800d9ce:	019b      	lsls	r3, r3, #6
 800d9d0:	d4f6      	bmi.n	800d9c0 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800d9d2:	2000      	movs	r0, #0
}
 800d9d4:	b002      	add	sp, #8
 800d9d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800d9da:	6963      	ldr	r3, [r4, #20]
 800d9dc:	b30b      	cbz	r3, 800da22 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800d9de:	4b47      	ldr	r3, [pc, #284]	; (800dafc <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800d9e0:	4e45      	ldr	r6, [pc, #276]	; (800daf8 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800d9e2:	2201      	movs	r2, #1
 800d9e4:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800d9e8:	f7fd fd24 	bl	800b434 <HAL_GetTick>
 800d9ec:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800d9ee:	e004      	b.n	800d9fa <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800d9f0:	f7fd fd20 	bl	800b434 <HAL_GetTick>
 800d9f4:	1b40      	subs	r0, r0, r5
 800d9f6:	2802      	cmp	r0, #2
 800d9f8:	d86d      	bhi.n	800dad6 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800d9fa:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800d9fc:	079b      	lsls	r3, r3, #30
 800d9fe:	d5f7      	bpl.n	800d9f0 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800da00:	6823      	ldr	r3, [r4, #0]
 800da02:	e798      	b.n	800d936 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800da04:	6852      	ldr	r2, [r2, #4]
 800da06:	0256      	lsls	r6, r2, #9
 800da08:	f53f af76 	bmi.w	800d8f8 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800da0c:	4a3a      	ldr	r2, [pc, #232]	; (800daf8 <HAL_RCC_OscConfig+0x290>)
 800da0e:	6812      	ldr	r2, [r2, #0]
 800da10:	0795      	lsls	r5, r2, #30
 800da12:	d544      	bpl.n	800da9e <HAL_RCC_OscConfig+0x236>
 800da14:	68e2      	ldr	r2, [r4, #12]
 800da16:	2a01      	cmp	r2, #1
 800da18:	d041      	beq.n	800da9e <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800da1a:	2001      	movs	r0, #1
}
 800da1c:	b002      	add	sp, #8
 800da1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800da22:	4a36      	ldr	r2, [pc, #216]	; (800dafc <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800da24:	4e34      	ldr	r6, [pc, #208]	; (800daf8 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800da26:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800da2a:	f7fd fd03 	bl	800b434 <HAL_GetTick>
 800da2e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800da30:	e004      	b.n	800da3c <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800da32:	f7fd fcff 	bl	800b434 <HAL_GetTick>
 800da36:	1b40      	subs	r0, r0, r5
 800da38:	2802      	cmp	r0, #2
 800da3a:	d84c      	bhi.n	800dad6 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800da3c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800da3e:	079f      	lsls	r7, r3, #30
 800da40:	d4f7      	bmi.n	800da32 <HAL_RCC_OscConfig+0x1ca>
 800da42:	e7dd      	b.n	800da00 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800da44:	9301      	str	r3, [sp, #4]
 800da46:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800da48:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800da4c:	6413      	str	r3, [r2, #64]	; 0x40
 800da4e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800da50:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800da54:	9301      	str	r3, [sp, #4]
 800da56:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800da58:	2501      	movs	r5, #1
 800da5a:	e774      	b.n	800d946 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800da5c:	684a      	ldr	r2, [r1, #4]
 800da5e:	0250      	lsls	r0, r2, #9
 800da60:	f57f af19 	bpl.w	800d896 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800da64:	4a24      	ldr	r2, [pc, #144]	; (800daf8 <HAL_RCC_OscConfig+0x290>)
 800da66:	6812      	ldr	r2, [r2, #0]
 800da68:	0391      	lsls	r1, r2, #14
 800da6a:	f57f af37 	bpl.w	800d8dc <HAL_RCC_OscConfig+0x74>
 800da6e:	6862      	ldr	r2, [r4, #4]
 800da70:	2a00      	cmp	r2, #0
 800da72:	f47f af33 	bne.w	800d8dc <HAL_RCC_OscConfig+0x74>
 800da76:	e7d0      	b.n	800da1a <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800da78:	4a1f      	ldr	r2, [pc, #124]	; (800daf8 <HAL_RCC_OscConfig+0x290>)
 800da7a:	6813      	ldr	r3, [r2, #0]
 800da7c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800da80:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800da82:	f7fd fcd7 	bl	800b434 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800da86:	4e1c      	ldr	r6, [pc, #112]	; (800daf8 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800da88:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800da8a:	e004      	b.n	800da96 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800da8c:	f7fd fcd2 	bl	800b434 <HAL_GetTick>
 800da90:	1b40      	subs	r0, r0, r5
 800da92:	2864      	cmp	r0, #100	; 0x64
 800da94:	d81f      	bhi.n	800dad6 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800da96:	6833      	ldr	r3, [r6, #0]
 800da98:	039a      	lsls	r2, r3, #14
 800da9a:	d5f7      	bpl.n	800da8c <HAL_RCC_OscConfig+0x224>
 800da9c:	e71d      	b.n	800d8da <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800da9e:	4916      	ldr	r1, [pc, #88]	; (800daf8 <HAL_RCC_OscConfig+0x290>)
 800daa0:	6920      	ldr	r0, [r4, #16]
 800daa2:	680a      	ldr	r2, [r1, #0]
 800daa4:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800daa8:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800daac:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800daae:	071a      	lsls	r2, r3, #28
 800dab0:	f57f af41 	bpl.w	800d936 <HAL_RCC_OscConfig+0xce>
 800dab4:	e791      	b.n	800d9da <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800dab6:	6833      	ldr	r3, [r6, #0]
 800dab8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800dabc:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800dabe:	f7fd fcb9 	bl	800b434 <HAL_GetTick>
 800dac2:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800dac4:	6833      	ldr	r3, [r6, #0]
 800dac6:	05da      	lsls	r2, r3, #23
 800dac8:	f53f af42 	bmi.w	800d950 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800dacc:	f7fd fcb2 	bl	800b434 <HAL_GetTick>
 800dad0:	1bc0      	subs	r0, r0, r7
 800dad2:	2802      	cmp	r0, #2
 800dad4:	d9f6      	bls.n	800dac4 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800dad6:	2003      	movs	r0, #3
}
 800dad8:	b002      	add	sp, #8
 800dada:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dade:	4a06      	ldr	r2, [pc, #24]	; (800daf8 <HAL_RCC_OscConfig+0x290>)
 800dae0:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800dae2:	f043 0301 	orr.w	r3, r3, #1
 800dae6:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800dae8:	f7fd fca4 	bl	800b434 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800daec:	4f02      	ldr	r7, [pc, #8]	; (800daf8 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800daee:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800daf0:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800daf4:	e00b      	b.n	800db0e <HAL_RCC_OscConfig+0x2a6>
 800daf6:	bf00      	nop
 800daf8:	40023800 	.word	0x40023800
 800dafc:	42470000 	.word	0x42470000
 800db00:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800db04:	f7fd fc96 	bl	800b434 <HAL_GetTick>
 800db08:	1b80      	subs	r0, r0, r6
 800db0a:	4540      	cmp	r0, r8
 800db0c:	d8e3      	bhi.n	800dad6 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800db0e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800db10:	079b      	lsls	r3, r3, #30
 800db12:	d5f7      	bpl.n	800db04 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800db14:	2d00      	cmp	r5, #0
 800db16:	f43f af40 	beq.w	800d99a <HAL_RCC_OscConfig+0x132>
 800db1a:	e044      	b.n	800dba6 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800db1c:	4a42      	ldr	r2, [pc, #264]	; (800dc28 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800db1e:	4e43      	ldr	r6, [pc, #268]	; (800dc2c <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800db20:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800db22:	f7fd fc87 	bl	800b434 <HAL_GetTick>
 800db26:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800db28:	e004      	b.n	800db34 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800db2a:	f7fd fc83 	bl	800b434 <HAL_GetTick>
 800db2e:	1b40      	subs	r0, r0, r5
 800db30:	2802      	cmp	r0, #2
 800db32:	d8d0      	bhi.n	800dad6 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800db34:	6833      	ldr	r3, [r6, #0]
 800db36:	0799      	lsls	r1, r3, #30
 800db38:	d4f7      	bmi.n	800db2a <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800db3a:	6823      	ldr	r3, [r4, #0]
 800db3c:	e6f9      	b.n	800d932 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800db3e:	2801      	cmp	r0, #1
 800db40:	f43f af48 	beq.w	800d9d4 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800db44:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800db46:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800db48:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800db4c:	4291      	cmp	r1, r2
 800db4e:	f47f af64 	bne.w	800da1a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800db52:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800db54:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800db58:	4291      	cmp	r1, r2
 800db5a:	f47f af5e 	bne.w	800da1a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800db5e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800db60:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800db64:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800db66:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800db6a:	f47f af56 	bne.w	800da1a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800db6e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800db70:	0852      	lsrs	r2, r2, #1
 800db72:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800db76:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800db78:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800db7c:	f47f af4d 	bne.w	800da1a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800db80:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800db82:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800db86:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800db8a:	bf14      	ite	ne
 800db8c:	2001      	movne	r0, #1
 800db8e:	2000      	moveq	r0, #0
 800db90:	e720      	b.n	800d9d4 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800db92:	4b26      	ldr	r3, [pc, #152]	; (800dc2c <HAL_RCC_OscConfig+0x3c4>)
 800db94:	681a      	ldr	r2, [r3, #0]
 800db96:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800db9a:	601a      	str	r2, [r3, #0]
 800db9c:	681a      	ldr	r2, [r3, #0]
 800db9e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800dba2:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800dba4:	e76d      	b.n	800da82 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800dba6:	4a21      	ldr	r2, [pc, #132]	; (800dc2c <HAL_RCC_OscConfig+0x3c4>)
 800dba8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dbaa:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800dbae:	6413      	str	r3, [r2, #64]	; 0x40
 800dbb0:	e6f3      	b.n	800d99a <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800dbb2:	2001      	movs	r0, #1
}
 800dbb4:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dbb6:	4b1d      	ldr	r3, [pc, #116]	; (800dc2c <HAL_RCC_OscConfig+0x3c4>)
 800dbb8:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800dbba:	f042 0204 	orr.w	r2, r2, #4
 800dbbe:	671a      	str	r2, [r3, #112]	; 0x70
 800dbc0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800dbc2:	f042 0201 	orr.w	r2, r2, #1
 800dbc6:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800dbc8:	e78e      	b.n	800dae8 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800dbca:	f7fd fc33 	bl	800b434 <HAL_GetTick>
 800dbce:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dbd0:	e005      	b.n	800dbde <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800dbd2:	f7fd fc2f 	bl	800b434 <HAL_GetTick>
 800dbd6:	1b80      	subs	r0, r0, r6
 800dbd8:	2802      	cmp	r0, #2
 800dbda:	f63f af7c 	bhi.w	800dad6 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dbde:	682b      	ldr	r3, [r5, #0]
 800dbe0:	0199      	lsls	r1, r3, #6
 800dbe2:	d4f6      	bmi.n	800dbd2 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800dbe4:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800dbe8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800dbea:	430b      	orrs	r3, r1
 800dbec:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800dbf0:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800dbf4:	0852      	lsrs	r2, r2, #1
 800dbf6:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800dbfa:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800dbfc:	490a      	ldr	r1, [pc, #40]	; (800dc28 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800dbfe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800dc02:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800dc04:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800dc06:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800dc08:	f7fd fc14 	bl	800b434 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dc0c:	4d07      	ldr	r5, [pc, #28]	; (800dc2c <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800dc0e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dc10:	e005      	b.n	800dc1e <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800dc12:	f7fd fc0f 	bl	800b434 <HAL_GetTick>
 800dc16:	1b00      	subs	r0, r0, r4
 800dc18:	2802      	cmp	r0, #2
 800dc1a:	f63f af5c 	bhi.w	800dad6 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dc1e:	682b      	ldr	r3, [r5, #0]
 800dc20:	019a      	lsls	r2, r3, #6
 800dc22:	d5f6      	bpl.n	800dc12 <HAL_RCC_OscConfig+0x3aa>
 800dc24:	e6d5      	b.n	800d9d2 <HAL_RCC_OscConfig+0x16a>
 800dc26:	bf00      	nop
 800dc28:	42470000 	.word	0x42470000
 800dc2c:	40023800 	.word	0x40023800

0800dc30 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800dc30:	4916      	ldr	r1, [pc, #88]	; (800dc8c <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800dc32:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800dc34:	688b      	ldr	r3, [r1, #8]
 800dc36:	f003 030c 	and.w	r3, r3, #12
 800dc3a:	2b04      	cmp	r3, #4
 800dc3c:	d01b      	beq.n	800dc76 <HAL_RCC_GetSysClockFreq+0x46>
 800dc3e:	2b08      	cmp	r3, #8
 800dc40:	d117      	bne.n	800dc72 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800dc42:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800dc44:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800dc46:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800dc48:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800dc4c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800dc50:	d113      	bne.n	800dc7a <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800dc52:	480f      	ldr	r0, [pc, #60]	; (800dc90 <HAL_RCC_GetSysClockFreq+0x60>)
 800dc54:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800dc58:	fba1 0100 	umull	r0, r1, r1, r0
 800dc5c:	f7f2 feae 	bl	80009bc <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800dc60:	4b0a      	ldr	r3, [pc, #40]	; (800dc8c <HAL_RCC_GetSysClockFreq+0x5c>)
 800dc62:	685b      	ldr	r3, [r3, #4]
 800dc64:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800dc68:	3301      	adds	r3, #1
 800dc6a:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800dc6c:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800dc70:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800dc72:	4807      	ldr	r0, [pc, #28]	; (800dc90 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800dc74:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800dc76:	4807      	ldr	r0, [pc, #28]	; (800dc94 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800dc78:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800dc7a:	4806      	ldr	r0, [pc, #24]	; (800dc94 <HAL_RCC_GetSysClockFreq+0x64>)
 800dc7c:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800dc80:	2300      	movs	r3, #0
 800dc82:	fba1 0100 	umull	r0, r1, r1, r0
 800dc86:	f7f2 fe99 	bl	80009bc <__aeabi_uldivmod>
 800dc8a:	e7e9      	b.n	800dc60 <HAL_RCC_GetSysClockFreq+0x30>
 800dc8c:	40023800 	.word	0x40023800
 800dc90:	00f42400 	.word	0x00f42400
 800dc94:	007a1200 	.word	0x007a1200

0800dc98 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800dc98:	2800      	cmp	r0, #0
 800dc9a:	f000 8087 	beq.w	800ddac <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800dc9e:	4a48      	ldr	r2, [pc, #288]	; (800ddc0 <HAL_RCC_ClockConfig+0x128>)
 800dca0:	6813      	ldr	r3, [r2, #0]
 800dca2:	f003 030f 	and.w	r3, r3, #15
 800dca6:	428b      	cmp	r3, r1
{
 800dca8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dcac:	460d      	mov	r5, r1
 800dcae:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800dcb0:	d209      	bcs.n	800dcc6 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800dcb2:	b2cb      	uxtb	r3, r1
 800dcb4:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800dcb6:	6813      	ldr	r3, [r2, #0]
 800dcb8:	f003 030f 	and.w	r3, r3, #15
 800dcbc:	428b      	cmp	r3, r1
 800dcbe:	d002      	beq.n	800dcc6 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800dcc0:	2001      	movs	r0, #1
}
 800dcc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800dcc6:	6823      	ldr	r3, [r4, #0]
 800dcc8:	0798      	lsls	r0, r3, #30
 800dcca:	d514      	bpl.n	800dcf6 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800dccc:	0759      	lsls	r1, r3, #29
 800dcce:	d504      	bpl.n	800dcda <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800dcd0:	493c      	ldr	r1, [pc, #240]	; (800ddc4 <HAL_RCC_ClockConfig+0x12c>)
 800dcd2:	688a      	ldr	r2, [r1, #8]
 800dcd4:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800dcd8:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800dcda:	071a      	lsls	r2, r3, #28
 800dcdc:	d504      	bpl.n	800dce8 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800dcde:	4939      	ldr	r1, [pc, #228]	; (800ddc4 <HAL_RCC_ClockConfig+0x12c>)
 800dce0:	688a      	ldr	r2, [r1, #8]
 800dce2:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800dce6:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800dce8:	4936      	ldr	r1, [pc, #216]	; (800ddc4 <HAL_RCC_ClockConfig+0x12c>)
 800dcea:	68a0      	ldr	r0, [r4, #8]
 800dcec:	688a      	ldr	r2, [r1, #8]
 800dcee:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800dcf2:	4302      	orrs	r2, r0
 800dcf4:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800dcf6:	07df      	lsls	r7, r3, #31
 800dcf8:	d521      	bpl.n	800dd3e <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800dcfa:	6862      	ldr	r2, [r4, #4]
 800dcfc:	2a01      	cmp	r2, #1
 800dcfe:	d057      	beq.n	800ddb0 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800dd00:	1e93      	subs	r3, r2, #2
 800dd02:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dd04:	4b2f      	ldr	r3, [pc, #188]	; (800ddc4 <HAL_RCC_ClockConfig+0x12c>)
 800dd06:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800dd08:	d94d      	bls.n	800dda6 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800dd0a:	0799      	lsls	r1, r3, #30
 800dd0c:	d5d8      	bpl.n	800dcc0 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800dd0e:	4e2d      	ldr	r6, [pc, #180]	; (800ddc4 <HAL_RCC_ClockConfig+0x12c>)
 800dd10:	68b3      	ldr	r3, [r6, #8]
 800dd12:	f023 0303 	bic.w	r3, r3, #3
 800dd16:	4313      	orrs	r3, r2
 800dd18:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800dd1a:	f7fd fb8b 	bl	800b434 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800dd1e:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800dd22:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800dd24:	e004      	b.n	800dd30 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800dd26:	f7fd fb85 	bl	800b434 <HAL_GetTick>
 800dd2a:	1bc0      	subs	r0, r0, r7
 800dd2c:	4540      	cmp	r0, r8
 800dd2e:	d844      	bhi.n	800ddba <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800dd30:	68b3      	ldr	r3, [r6, #8]
 800dd32:	6862      	ldr	r2, [r4, #4]
 800dd34:	f003 030c 	and.w	r3, r3, #12
 800dd38:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800dd3c:	d1f3      	bne.n	800dd26 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800dd3e:	4a20      	ldr	r2, [pc, #128]	; (800ddc0 <HAL_RCC_ClockConfig+0x128>)
 800dd40:	6813      	ldr	r3, [r2, #0]
 800dd42:	f003 030f 	and.w	r3, r3, #15
 800dd46:	42ab      	cmp	r3, r5
 800dd48:	d906      	bls.n	800dd58 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800dd4a:	b2eb      	uxtb	r3, r5
 800dd4c:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800dd4e:	6813      	ldr	r3, [r2, #0]
 800dd50:	f003 030f 	and.w	r3, r3, #15
 800dd54:	42ab      	cmp	r3, r5
 800dd56:	d1b3      	bne.n	800dcc0 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800dd58:	6823      	ldr	r3, [r4, #0]
 800dd5a:	075a      	lsls	r2, r3, #29
 800dd5c:	d506      	bpl.n	800dd6c <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800dd5e:	4919      	ldr	r1, [pc, #100]	; (800ddc4 <HAL_RCC_ClockConfig+0x12c>)
 800dd60:	68e0      	ldr	r0, [r4, #12]
 800dd62:	688a      	ldr	r2, [r1, #8]
 800dd64:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800dd68:	4302      	orrs	r2, r0
 800dd6a:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800dd6c:	071b      	lsls	r3, r3, #28
 800dd6e:	d507      	bpl.n	800dd80 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800dd70:	4a14      	ldr	r2, [pc, #80]	; (800ddc4 <HAL_RCC_ClockConfig+0x12c>)
 800dd72:	6921      	ldr	r1, [r4, #16]
 800dd74:	6893      	ldr	r3, [r2, #8]
 800dd76:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800dd7a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800dd7e:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800dd80:	f7ff ff56 	bl	800dc30 <HAL_RCC_GetSysClockFreq>
 800dd84:	4a0f      	ldr	r2, [pc, #60]	; (800ddc4 <HAL_RCC_ClockConfig+0x12c>)
 800dd86:	4c10      	ldr	r4, [pc, #64]	; (800ddc8 <HAL_RCC_ClockConfig+0x130>)
 800dd88:	6892      	ldr	r2, [r2, #8]
 800dd8a:	4910      	ldr	r1, [pc, #64]	; (800ddcc <HAL_RCC_ClockConfig+0x134>)
 800dd8c:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800dd90:	4603      	mov	r3, r0
 800dd92:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800dd94:	480e      	ldr	r0, [pc, #56]	; (800ddd0 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800dd96:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800dd98:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800dd9a:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800dd9c:	f7f4 fc30 	bl	8002600 <HAL_InitTick>
  return HAL_OK;
 800dda0:	2000      	movs	r0, #0
}
 800dda2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dda6:	0198      	lsls	r0, r3, #6
 800dda8:	d4b1      	bmi.n	800dd0e <HAL_RCC_ClockConfig+0x76>
 800ddaa:	e789      	b.n	800dcc0 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800ddac:	2001      	movs	r0, #1
}
 800ddae:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800ddb0:	4b04      	ldr	r3, [pc, #16]	; (800ddc4 <HAL_RCC_ClockConfig+0x12c>)
 800ddb2:	681b      	ldr	r3, [r3, #0]
 800ddb4:	039e      	lsls	r6, r3, #14
 800ddb6:	d4aa      	bmi.n	800dd0e <HAL_RCC_ClockConfig+0x76>
 800ddb8:	e782      	b.n	800dcc0 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800ddba:	2003      	movs	r0, #3
 800ddbc:	e781      	b.n	800dcc2 <HAL_RCC_ClockConfig+0x2a>
 800ddbe:	bf00      	nop
 800ddc0:	40023c00 	.word	0x40023c00
 800ddc4:	40023800 	.word	0x40023800
 800ddc8:	0803128c 	.word	0x0803128c
 800ddcc:	2000007c 	.word	0x2000007c
 800ddd0:	20000084 	.word	0x20000084

0800ddd4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800ddd4:	4b04      	ldr	r3, [pc, #16]	; (800dde8 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800ddd6:	4905      	ldr	r1, [pc, #20]	; (800ddec <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800ddd8:	689b      	ldr	r3, [r3, #8]
 800ddda:	4a05      	ldr	r2, [pc, #20]	; (800ddf0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800dddc:	6808      	ldr	r0, [r1, #0]
 800ddde:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800dde2:	5cd3      	ldrb	r3, [r2, r3]
}
 800dde4:	40d8      	lsrs	r0, r3
 800dde6:	4770      	bx	lr
 800dde8:	40023800 	.word	0x40023800
 800ddec:	2000007c 	.word	0x2000007c
 800ddf0:	0803129c 	.word	0x0803129c

0800ddf4 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800ddf4:	4b0e      	ldr	r3, [pc, #56]	; (800de30 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800ddf6:	220f      	movs	r2, #15
 800ddf8:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800ddfa:	689a      	ldr	r2, [r3, #8]
 800ddfc:	f002 0203 	and.w	r2, r2, #3
 800de00:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800de02:	689a      	ldr	r2, [r3, #8]
 800de04:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800de08:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800de0a:	689a      	ldr	r2, [r3, #8]
 800de0c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800de10:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800de12:	689b      	ldr	r3, [r3, #8]
 800de14:	08db      	lsrs	r3, r3, #3
{
 800de16:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800de18:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800de1c:	4c05      	ldr	r4, [pc, #20]	; (800de34 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800de1e:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800de20:	6823      	ldr	r3, [r4, #0]
}
 800de22:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800de26:	f003 030f 	and.w	r3, r3, #15
 800de2a:	600b      	str	r3, [r1, #0]
}
 800de2c:	4770      	bx	lr
 800de2e:	bf00      	nop
 800de30:	40023800 	.word	0x40023800
 800de34:	40023c00 	.word	0x40023c00

0800de38 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800de38:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800de3a:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800de3c:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800de40:	b083      	sub	sp, #12
 800de42:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800de44:	d111      	bne.n	800de6a <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800de46:	f013 0f0c 	tst.w	r3, #12
 800de4a:	d16f      	bne.n	800df2c <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800de4c:	0698      	lsls	r0, r3, #26
 800de4e:	f100 80c2 	bmi.w	800dfd6 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800de52:	f013 0310 	ands.w	r3, r3, #16
 800de56:	f000 80bb 	beq.w	800dfd0 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800de5a:	4b89      	ldr	r3, [pc, #548]	; (800e080 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800de5c:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800de60:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800de64:	2000      	movs	r0, #0
}
 800de66:	b003      	add	sp, #12
 800de68:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800de6a:	4b86      	ldr	r3, [pc, #536]	; (800e084 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800de6c:	4e86      	ldr	r6, [pc, #536]	; (800e088 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800de6e:	2200      	movs	r2, #0
 800de70:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800de72:	f7fd fadf 	bl	800b434 <HAL_GetTick>
 800de76:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800de78:	e004      	b.n	800de84 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800de7a:	f7fd fadb 	bl	800b434 <HAL_GetTick>
 800de7e:	1b43      	subs	r3, r0, r5
 800de80:	2b02      	cmp	r3, #2
 800de82:	d850      	bhi.n	800df26 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800de84:	6833      	ldr	r3, [r6, #0]
 800de86:	0118      	lsls	r0, r3, #4
 800de88:	d4f7      	bmi.n	800de7a <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800de8a:	6823      	ldr	r3, [r4, #0]
 800de8c:	07d9      	lsls	r1, r3, #31
 800de8e:	d506      	bpl.n	800de9e <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800de90:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800de94:	0712      	lsls	r2, r2, #28
 800de96:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800de9a:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800de9e:	079a      	lsls	r2, r3, #30
 800dea0:	d515      	bpl.n	800dece <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800dea2:	4979      	ldr	r1, [pc, #484]	; (800e088 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800dea4:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800dea6:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800deaa:	6865      	ldr	r5, [r4, #4]
 800deac:	0612      	lsls	r2, r2, #24
 800deae:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800deb2:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800deb6:	4302      	orrs	r2, r0
 800deb8:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800debc:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800dec0:	69e2      	ldr	r2, [r4, #28]
 800dec2:	f020 001f 	bic.w	r0, r0, #31
 800dec6:	3a01      	subs	r2, #1
 800dec8:	4302      	orrs	r2, r0
 800deca:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800dece:	065b      	lsls	r3, r3, #25
 800ded0:	d509      	bpl.n	800dee6 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800ded2:	1d20      	adds	r0, r4, #4
 800ded4:	c80b      	ldmia	r0, {r0, r1, r3}
 800ded6:	061b      	lsls	r3, r3, #24
 800ded8:	4a6b      	ldr	r2, [pc, #428]	; (800e088 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800deda:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800dede:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800dee2:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800dee6:	4b67      	ldr	r3, [pc, #412]	; (800e084 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800dee8:	4e67      	ldr	r6, [pc, #412]	; (800e088 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800deea:	2201      	movs	r2, #1
 800deec:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800deee:	f7fd faa1 	bl	800b434 <HAL_GetTick>
 800def2:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800def4:	e004      	b.n	800df00 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800def6:	f7fd fa9d 	bl	800b434 <HAL_GetTick>
 800defa:	1b40      	subs	r0, r0, r5
 800defc:	2802      	cmp	r0, #2
 800defe:	d812      	bhi.n	800df26 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800df00:	6833      	ldr	r3, [r6, #0]
 800df02:	011f      	lsls	r7, r3, #4
 800df04:	d5f7      	bpl.n	800def6 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800df06:	6823      	ldr	r3, [r4, #0]
 800df08:	e79d      	b.n	800de46 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800df0a:	f7fd fa93 	bl	800b434 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800df0e:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800df12:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800df14:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800df16:	079b      	lsls	r3, r3, #30
 800df18:	f100 80a5 	bmi.w	800e066 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800df1c:	f7fd fa8a 	bl	800b434 <HAL_GetTick>
 800df20:	1b80      	subs	r0, r0, r6
 800df22:	42b8      	cmp	r0, r7
 800df24:	d9f6      	bls.n	800df14 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800df26:	2003      	movs	r0, #3
}
 800df28:	b003      	add	sp, #12
 800df2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800df2c:	4b55      	ldr	r3, [pc, #340]	; (800e084 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800df2e:	4e56      	ldr	r6, [pc, #344]	; (800e088 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800df30:	2200      	movs	r2, #0
 800df32:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800df34:	f7fd fa7e 	bl	800b434 <HAL_GetTick>
 800df38:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800df3a:	e004      	b.n	800df46 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800df3c:	f7fd fa7a 	bl	800b434 <HAL_GetTick>
 800df40:	1b43      	subs	r3, r0, r5
 800df42:	2b02      	cmp	r3, #2
 800df44:	d8ef      	bhi.n	800df26 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800df46:	6833      	ldr	r3, [r6, #0]
 800df48:	0098      	lsls	r0, r3, #2
 800df4a:	d4f7      	bmi.n	800df3c <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800df4c:	6822      	ldr	r2, [r4, #0]
 800df4e:	0751      	lsls	r1, r2, #29
 800df50:	d515      	bpl.n	800df7e <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800df52:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800df54:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800df58:	6920      	ldr	r0, [r4, #16]
 800df5a:	061b      	lsls	r3, r3, #24
 800df5c:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800df60:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800df64:	430b      	orrs	r3, r1
 800df66:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800df6a:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800df6e:	6a21      	ldr	r1, [r4, #32]
 800df70:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800df74:	3901      	subs	r1, #1
 800df76:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800df7a:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800df7e:	0713      	lsls	r3, r2, #28
 800df80:	d514      	bpl.n	800dfac <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800df82:	4a41      	ldr	r2, [pc, #260]	; (800e088 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800df84:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800df86:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800df8a:	6920      	ldr	r0, [r4, #16]
 800df8c:	071b      	lsls	r3, r3, #28
 800df8e:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800df92:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800df96:	430b      	orrs	r3, r1
 800df98:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800df9c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800dfa0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800dfa2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800dfa6:	430b      	orrs	r3, r1
 800dfa8:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800dfac:	4b35      	ldr	r3, [pc, #212]	; (800e084 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800dfae:	4e36      	ldr	r6, [pc, #216]	; (800e088 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800dfb0:	2201      	movs	r2, #1
 800dfb2:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800dfb4:	f7fd fa3e 	bl	800b434 <HAL_GetTick>
 800dfb8:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800dfba:	e004      	b.n	800dfc6 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800dfbc:	f7fd fa3a 	bl	800b434 <HAL_GetTick>
 800dfc0:	1b40      	subs	r0, r0, r5
 800dfc2:	2802      	cmp	r0, #2
 800dfc4:	d8af      	bhi.n	800df26 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800dfc6:	6833      	ldr	r3, [r6, #0]
 800dfc8:	009f      	lsls	r7, r3, #2
 800dfca:	d5f7      	bpl.n	800dfbc <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800dfcc:	6823      	ldr	r3, [r4, #0]
 800dfce:	e73d      	b.n	800de4c <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800dfd0:	4618      	mov	r0, r3
}
 800dfd2:	b003      	add	sp, #12
 800dfd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800dfd6:	4b2c      	ldr	r3, [pc, #176]	; (800e088 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800dfd8:	4d2c      	ldr	r5, [pc, #176]	; (800e08c <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800dfda:	2200      	movs	r2, #0
 800dfdc:	9201      	str	r2, [sp, #4]
 800dfde:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800dfe0:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800dfe4:	641a      	str	r2, [r3, #64]	; 0x40
 800dfe6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800dfe8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800dfec:	9301      	str	r3, [sp, #4]
 800dfee:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800dff0:	682b      	ldr	r3, [r5, #0]
 800dff2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800dff6:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800dff8:	f7fd fa1c 	bl	800b434 <HAL_GetTick>
 800dffc:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800dffe:	e004      	b.n	800e00a <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800e000:	f7fd fa18 	bl	800b434 <HAL_GetTick>
 800e004:	1b83      	subs	r3, r0, r6
 800e006:	2b02      	cmp	r3, #2
 800e008:	d88d      	bhi.n	800df26 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800e00a:	682b      	ldr	r3, [r5, #0]
 800e00c:	05d9      	lsls	r1, r3, #23
 800e00e:	d5f7      	bpl.n	800e000 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800e010:	4d1d      	ldr	r5, [pc, #116]	; (800e088 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e012:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800e014:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e016:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800e01a:	d111      	bne.n	800e040 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800e01c:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800e020:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800e024:	d021      	beq.n	800e06a <HAL_RCCEx_PeriphCLKConfig+0x232>
 800e026:	4918      	ldr	r1, [pc, #96]	; (800e088 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e028:	688a      	ldr	r2, [r1, #8]
 800e02a:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800e02e:	608a      	str	r2, [r1, #8]
 800e030:	4a15      	ldr	r2, [pc, #84]	; (800e088 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e032:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800e034:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800e038:	430b      	orrs	r3, r1
 800e03a:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800e03c:	6823      	ldr	r3, [r4, #0]
 800e03e:	e708      	b.n	800de52 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e040:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800e044:	4291      	cmp	r1, r2
 800e046:	d0eb      	beq.n	800e020 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800e048:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800e04a:	4a0e      	ldr	r2, [pc, #56]	; (800e084 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800e04c:	2101      	movs	r1, #1
 800e04e:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800e052:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800e056:	2100      	movs	r1, #0
 800e058:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800e05c:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800e05e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800e060:	07da      	lsls	r2, r3, #31
 800e062:	f53f af52 	bmi.w	800df0a <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800e066:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e068:	e7d8      	b.n	800e01c <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800e06a:	4807      	ldr	r0, [pc, #28]	; (800e088 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e06c:	6882      	ldr	r2, [r0, #8]
 800e06e:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800e072:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800e076:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800e07a:	430a      	orrs	r2, r1
 800e07c:	6082      	str	r2, [r0, #8]
 800e07e:	e7d7      	b.n	800e030 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800e080:	42471000 	.word	0x42471000
 800e084:	42470000 	.word	0x42470000
 800e088:	40023800 	.word	0x40023800
 800e08c:	40007000 	.word	0x40007000

0800e090 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800e090:	b1f0      	cbz	r0, 800e0d0 <HAL_SDRAM_Init+0x40>
{
 800e092:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800e094:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e098:	460d      	mov	r5, r1
 800e09a:	4604      	mov	r4, r0
 800e09c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800e0a0:	b18b      	cbz	r3, 800e0c6 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800e0a2:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e0a4:	2302      	movs	r3, #2
 800e0a6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800e0aa:	f851 0b04 	ldr.w	r0, [r1], #4
 800e0ae:	f001 fa2d 	bl	800f50c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800e0b2:	e9d4 0200 	ldrd	r0, r2, [r4]
 800e0b6:	4629      	mov	r1, r5
 800e0b8:	f001 fa66 	bl	800f588 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800e0bc:	2301      	movs	r3, #1
 800e0be:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800e0c2:	2000      	movs	r0, #0
}
 800e0c4:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800e0c6:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800e0ca:	f7f4 fa31 	bl	8002530 <HAL_SDRAM_MspInit>
 800e0ce:	e7e8      	b.n	800e0a2 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800e0d0:	2001      	movs	r0, #1
}
 800e0d2:	4770      	bx	lr

0800e0d4 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800e0d4:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800e0d6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800e0da:	2b02      	cmp	r3, #2
{
 800e0dc:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800e0de:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800e0e0:	d004      	beq.n	800e0ec <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800e0e2:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800e0e6:	2c01      	cmp	r4, #1
 800e0e8:	d001      	beq.n	800e0ee <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800e0ea:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800e0ec:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e0ee:	460e      	mov	r6, r1
 800e0f0:	2302      	movs	r3, #2
 800e0f2:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800e0f6:	6828      	ldr	r0, [r5, #0]
 800e0f8:	f001 fa92 	bl	800f620 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800e0fc:	6833      	ldr	r3, [r6, #0]
 800e0fe:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800e100:	bf06      	itte	eq
 800e102:	2305      	moveq	r3, #5
 800e104:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800e108:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800e10c:	2000      	movs	r0, #0
}
 800e10e:	bd70      	pop	{r4, r5, r6, pc}

0800e110 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800e110:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e112:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e116:	2b02      	cmp	r3, #2
{
 800e118:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e11a:	b2d8      	uxtb	r0, r3
 800e11c:	d005      	beq.n	800e12a <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800e11e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e122:	2b01      	cmp	r3, #1
 800e124:	b2dd      	uxtb	r5, r3
 800e126:	d001      	beq.n	800e12c <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800e128:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800e12a:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e12c:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800e12e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e130:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800e134:	f001 fa9e 	bl	800f674 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800e138:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800e13c:	2000      	movs	r0, #0
}
 800e13e:	bd38      	pop	{r3, r4, r5, pc}

0800e140 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800e140:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e144:	b082      	sub	sp, #8
 800e146:	461d      	mov	r5, r3
 800e148:	4616      	mov	r6, r2
 800e14a:	460c      	mov	r4, r1
 800e14c:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800e14e:	f7fd f971 	bl	800b434 <HAL_GetTick>
 800e152:	4435      	add	r5, r6
 800e154:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800e156:	f7fd f96d 	bl	800b434 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800e15a:	4b27      	ldr	r3, [pc, #156]	; (800e1f8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800e15c:	681b      	ldr	r3, [r3, #0]
 800e15e:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800e162:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800e166:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800e168:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800e16a:	1c73      	adds	r3, r6, #1
 800e16c:	6839      	ldr	r1, [r7, #0]
 800e16e:	d107      	bne.n	800e180 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800e170:	688b      	ldr	r3, [r1, #8]
 800e172:	ea34 0303 	bics.w	r3, r4, r3
 800e176:	d0fb      	beq.n	800e170 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800e178:	2000      	movs	r0, #0
}
 800e17a:	b002      	add	sp, #8
 800e17c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800e180:	688b      	ldr	r3, [r1, #8]
 800e182:	ea34 0303 	bics.w	r3, r4, r3
 800e186:	d1f7      	bne.n	800e178 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800e188:	f7fd f954 	bl	800b434 <HAL_GetTick>
 800e18c:	eba0 0008 	sub.w	r0, r0, r8
 800e190:	42a8      	cmp	r0, r5
 800e192:	d208      	bcs.n	800e1a6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800e194:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800e196:	2b00      	cmp	r3, #0
      count--;
 800e198:	9b01      	ldr	r3, [sp, #4]
 800e19a:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800e19e:	bf08      	it	eq
 800e1a0:	2500      	moveq	r5, #0
      count--;
 800e1a2:	9301      	str	r3, [sp, #4]
 800e1a4:	e7e1      	b.n	800e16a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e1a6:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800e1aa:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e1ac:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800e1b0:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800e1b4:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e1b6:	d013      	beq.n	800e1e0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800e1b8:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800e1ba:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800e1be:	d107      	bne.n	800e1d0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800e1c0:	681a      	ldr	r2, [r3, #0]
 800e1c2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800e1c6:	601a      	str	r2, [r3, #0]
 800e1c8:	681a      	ldr	r2, [r3, #0]
 800e1ca:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800e1ce:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800e1d0:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800e1d2:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800e1d4:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800e1d8:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800e1dc:	2003      	movs	r0, #3
 800e1de:	e7cc      	b.n	800e17a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e1e0:	68ba      	ldr	r2, [r7, #8]
 800e1e2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800e1e6:	d002      	beq.n	800e1ee <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800e1e8:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800e1ec:	d1e4      	bne.n	800e1b8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800e1ee:	681a      	ldr	r2, [r3, #0]
 800e1f0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e1f4:	601a      	str	r2, [r3, #0]
 800e1f6:	e7df      	b.n	800e1b8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800e1f8:	2000007c 	.word	0x2000007c

0800e1fc <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800e1fc:	b538      	push	{r3, r4, r5, lr}
 800e1fe:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e200:	6842      	ldr	r2, [r0, #4]
 800e202:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800e206:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e208:	d006      	beq.n	800e218 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e20a:	460a      	mov	r2, r1
 800e20c:	2101      	movs	r1, #1
 800e20e:	f7ff ff97 	bl	800e140 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e212:	b978      	cbnz	r0, 800e234 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800e214:	2000      	movs	r0, #0
}
 800e216:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e218:	6882      	ldr	r2, [r0, #8]
 800e21a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800e21e:	d01c      	beq.n	800e25a <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800e220:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800e224:	d00c      	beq.n	800e240 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e226:	460a      	mov	r2, r1
 800e228:	4620      	mov	r0, r4
 800e22a:	2180      	movs	r1, #128	; 0x80
 800e22c:	f7ff ff88 	bl	800e140 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e230:	2800      	cmp	r0, #0
 800e232:	d0ef      	beq.n	800e214 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e234:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800e236:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800e23a:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e23c:	6563      	str	r3, [r4, #84]	; 0x54
}
 800e23e:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800e240:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e242:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800e244:	6829      	ldr	r1, [r5, #0]
 800e246:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800e24a:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e24c:	2101      	movs	r1, #1
 800e24e:	f7ff ff77 	bl	800e140 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e252:	2800      	cmp	r0, #0
 800e254:	d1ee      	bne.n	800e234 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800e256:	2000      	movs	r0, #0
 800e258:	e7dd      	b.n	800e216 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800e25a:	6800      	ldr	r0, [r0, #0]
 800e25c:	6802      	ldr	r2, [r0, #0]
 800e25e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e262:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e264:	460a      	mov	r2, r1
 800e266:	4620      	mov	r0, r4
 800e268:	2180      	movs	r1, #128	; 0x80
 800e26a:	f7ff ff69 	bl	800e140 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e26e:	2800      	cmp	r0, #0
 800e270:	d0d0      	beq.n	800e214 <SPI_EndRxTransaction+0x18>
 800e272:	e7df      	b.n	800e234 <SPI_EndRxTransaction+0x38>

0800e274 <HAL_SPI_Init>:
  if (hspi == NULL)
 800e274:	2800      	cmp	r0, #0
 800e276:	d05c      	beq.n	800e332 <HAL_SPI_Init+0xbe>
{
 800e278:	b570      	push	{r4, r5, r6, lr}
 800e27a:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800e27c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800e27e:	2800      	cmp	r0, #0
 800e280:	d047      	beq.n	800e312 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800e282:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800e284:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800e288:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800e28c:	2200      	movs	r2, #0
 800e28e:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800e290:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800e294:	2b00      	cmp	r3, #0
 800e296:	d042      	beq.n	800e31e <HAL_SPI_Init+0xaa>
 800e298:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800e29a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e29c:	68a5      	ldr	r5, [r4, #8]
 800e29e:	69a2      	ldr	r2, [r4, #24]
 800e2a0:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800e2a2:	2302      	movs	r3, #2
 800e2a4:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800e2a8:	680b      	ldr	r3, [r1, #0]
 800e2aa:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e2ae:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e2b0:	6863      	ldr	r3, [r4, #4]
 800e2b2:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800e2b6:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800e2ba:	432b      	orrs	r3, r5
 800e2bc:	68e5      	ldr	r5, [r4, #12]
 800e2be:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800e2c2:	432b      	orrs	r3, r5
 800e2c4:	6925      	ldr	r5, [r4, #16]
 800e2c6:	f005 0502 	and.w	r5, r5, #2
 800e2ca:	432b      	orrs	r3, r5
 800e2cc:	6965      	ldr	r5, [r4, #20]
 800e2ce:	f005 0501 	and.w	r5, r5, #1
 800e2d2:	432b      	orrs	r3, r5
 800e2d4:	69e5      	ldr	r5, [r4, #28]
 800e2d6:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800e2da:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800e2de:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800e2e2:	4333      	orrs	r3, r6
 800e2e4:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e2e6:	0c12      	lsrs	r2, r2, #16
 800e2e8:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e2ec:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e2f0:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e2f4:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e2f8:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e2fa:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e2fc:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e2fe:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800e300:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e302:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800e306:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e308:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800e30a:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800e30c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800e310:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e312:	6863      	ldr	r3, [r4, #4]
 800e314:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800e318:	d0b6      	beq.n	800e288 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800e31a:	61e0      	str	r0, [r4, #28]
 800e31c:	e7b4      	b.n	800e288 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800e31e:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800e320:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800e324:	f7f4 f820 	bl	8002368 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e328:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e32c:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800e330:	e7b3      	b.n	800e29a <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800e332:	2001      	movs	r0, #1
}
 800e334:	4770      	bx	lr
 800e336:	bf00      	nop

0800e338 <HAL_SPI_Transmit>:
{
 800e338:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e33c:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800e33e:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800e342:	2801      	cmp	r0, #1
{
 800e344:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800e346:	f000 8085 	beq.w	800e454 <HAL_SPI_Transmit+0x11c>
 800e34a:	461d      	mov	r5, r3
 800e34c:	2301      	movs	r3, #1
 800e34e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e352:	4688      	mov	r8, r1
 800e354:	4617      	mov	r7, r2
 800e356:	f7fd f86d 	bl	800b434 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800e35a:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800e35e:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800e360:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800e362:	b2d8      	uxtb	r0, r3
 800e364:	d009      	beq.n	800e37a <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800e366:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800e368:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800e36a:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800e36c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e370:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e374:	b002      	add	sp, #8
 800e376:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800e37a:	f1b8 0f00 	cmp.w	r8, #0
 800e37e:	d0f3      	beq.n	800e368 <HAL_SPI_Transmit+0x30>
 800e380:	2f00      	cmp	r7, #0
 800e382:	d0f1      	beq.n	800e368 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e384:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800e386:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800e388:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e38c:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800e38e:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e390:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800e394:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800e398:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e39c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800e39e:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800e3a0:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800e3a2:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800e3a4:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800e3a6:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e3a8:	f000 8085 	beq.w	800e4b6 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e3ac:	6803      	ldr	r3, [r0, #0]
 800e3ae:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800e3b0:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e3b2:	d403      	bmi.n	800e3bc <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800e3b4:	6803      	ldr	r3, [r0, #0]
 800e3b6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e3ba:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800e3bc:	68e3      	ldr	r3, [r4, #12]
 800e3be:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800e3c2:	d04b      	beq.n	800e45c <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e3c4:	6863      	ldr	r3, [r4, #4]
 800e3c6:	2b00      	cmp	r3, #0
 800e3c8:	f000 8097 	beq.w	800e4fa <HAL_SPI_Transmit+0x1c2>
 800e3cc:	2f01      	cmp	r7, #1
 800e3ce:	f000 8094 	beq.w	800e4fa <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800e3d2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e3d4:	b29b      	uxth	r3, r3
 800e3d6:	b1ab      	cbz	r3, 800e404 <HAL_SPI_Transmit+0xcc>
 800e3d8:	1c68      	adds	r0, r5, #1
 800e3da:	f040 8083 	bne.w	800e4e4 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e3de:	6823      	ldr	r3, [r4, #0]
 800e3e0:	689a      	ldr	r2, [r3, #8]
 800e3e2:	0791      	lsls	r1, r2, #30
 800e3e4:	f140 8094 	bpl.w	800e510 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e3e8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e3ea:	7812      	ldrb	r2, [r2, #0]
 800e3ec:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800e3ee:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e3f0:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e3f2:	3901      	subs	r1, #1
 800e3f4:	b289      	uxth	r1, r1
 800e3f6:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e3f8:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e3fa:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800e3fc:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e3fe:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800e400:	2900      	cmp	r1, #0
 800e402:	d1ec      	bne.n	800e3de <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e404:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e406:	4b5b      	ldr	r3, [pc, #364]	; (800e574 <HAL_SPI_Transmit+0x23c>)
 800e408:	4a5b      	ldr	r2, [pc, #364]	; (800e578 <HAL_SPI_Transmit+0x240>)
 800e40a:	681b      	ldr	r3, [r3, #0]
 800e40c:	fba2 2303 	umull	r2, r3, r2, r3
 800e410:	0d5b      	lsrs	r3, r3, #21
 800e412:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800e416:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e41a:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e41e:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e420:	d107      	bne.n	800e432 <HAL_SPI_Transmit+0xfa>
 800e422:	e098      	b.n	800e556 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800e424:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e426:	6822      	ldr	r2, [r4, #0]
      count--;
 800e428:	3b01      	subs	r3, #1
 800e42a:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e42c:	6893      	ldr	r3, [r2, #8]
 800e42e:	061b      	lsls	r3, r3, #24
 800e430:	d502      	bpl.n	800e438 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800e432:	9b01      	ldr	r3, [sp, #4]
 800e434:	2b00      	cmp	r3, #0
 800e436:	d1f5      	bne.n	800e424 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800e438:	68a3      	ldr	r3, [r4, #8]
 800e43a:	b933      	cbnz	r3, 800e44a <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800e43c:	6822      	ldr	r2, [r4, #0]
 800e43e:	9300      	str	r3, [sp, #0]
 800e440:	68d3      	ldr	r3, [r2, #12]
 800e442:	9300      	str	r3, [sp, #0]
 800e444:	6893      	ldr	r3, [r2, #8]
 800e446:	9300      	str	r3, [sp, #0]
 800e448:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800e44a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800e44c:	3800      	subs	r0, #0
 800e44e:	bf18      	it	ne
 800e450:	2001      	movne	r0, #1
error:
 800e452:	e789      	b.n	800e368 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800e454:	2002      	movs	r0, #2
}
 800e456:	b002      	add	sp, #8
 800e458:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e45c:	6861      	ldr	r1, [r4, #4]
 800e45e:	2900      	cmp	r1, #0
 800e460:	d176      	bne.n	800e550 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e462:	4643      	mov	r3, r8
 800e464:	f833 7b02 	ldrh.w	r7, [r3], #2
 800e468:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800e46a:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e46c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e46e:	3b01      	subs	r3, #1
 800e470:	b29b      	uxth	r3, r3
 800e472:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e474:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e476:	b29b      	uxth	r3, r3
 800e478:	2b00      	cmp	r3, #0
 800e47a:	d0c4      	beq.n	800e406 <HAL_SPI_Transmit+0xce>
 800e47c:	1c6b      	adds	r3, r5, #1
 800e47e:	d15e      	bne.n	800e53e <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e480:	6883      	ldr	r3, [r0, #8]
 800e482:	079f      	lsls	r7, r3, #30
 800e484:	d50f      	bpl.n	800e4a6 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e486:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e488:	f832 3b02 	ldrh.w	r3, [r2], #2
 800e48c:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800e48e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e490:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e492:	3b01      	subs	r3, #1
 800e494:	b29b      	uxth	r3, r3
 800e496:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e498:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e49a:	b29b      	uxth	r3, r3
 800e49c:	2b00      	cmp	r3, #0
 800e49e:	d0b1      	beq.n	800e404 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e4a0:	6883      	ldr	r3, [r0, #8]
 800e4a2:	079f      	lsls	r7, r3, #30
 800e4a4:	d4ef      	bmi.n	800e486 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e4a6:	f7fc ffc5 	bl	800b434 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800e4aa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e4ac:	b29b      	uxth	r3, r3
 800e4ae:	2b00      	cmp	r3, #0
 800e4b0:	d0a8      	beq.n	800e404 <HAL_SPI_Transmit+0xcc>
 800e4b2:	6820      	ldr	r0, [r4, #0]
 800e4b4:	e7e4      	b.n	800e480 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800e4b6:	6803      	ldr	r3, [r0, #0]
 800e4b8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e4bc:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800e4be:	6803      	ldr	r3, [r0, #0]
 800e4c0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800e4c4:	6003      	str	r3, [r0, #0]
 800e4c6:	e771      	b.n	800e3ac <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e4c8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e4ca:	7812      	ldrb	r2, [r2, #0]
 800e4cc:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800e4ce:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e4d0:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e4d2:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e4d4:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e4d6:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e4d8:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e4da:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e4dc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e4de:	b29b      	uxth	r3, r3
 800e4e0:	2b00      	cmp	r3, #0
 800e4e2:	d08f      	beq.n	800e404 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e4e4:	6823      	ldr	r3, [r4, #0]
 800e4e6:	689a      	ldr	r2, [r3, #8]
 800e4e8:	0792      	lsls	r2, r2, #30
 800e4ea:	d4ed      	bmi.n	800e4c8 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e4ec:	f7fc ffa2 	bl	800b434 <HAL_GetTick>
 800e4f0:	1b80      	subs	r0, r0, r6
 800e4f2:	42a8      	cmp	r0, r5
 800e4f4:	d3f2      	bcc.n	800e4dc <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800e4f6:	2003      	movs	r0, #3
 800e4f8:	e736      	b.n	800e368 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e4fa:	f898 3000 	ldrb.w	r3, [r8]
 800e4fe:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800e500:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e502:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e504:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e506:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800e508:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e50a:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e50c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e50e:	e760      	b.n	800e3d2 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e510:	f7fc ff90 	bl	800b434 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800e514:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e516:	b29b      	uxth	r3, r3
 800e518:	2b00      	cmp	r3, #0
 800e51a:	f47f af60 	bne.w	800e3de <HAL_SPI_Transmit+0xa6>
 800e51e:	e771      	b.n	800e404 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e520:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e522:	f831 3b02 	ldrh.w	r3, [r1], #2
 800e526:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800e528:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e52a:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e52c:	3b01      	subs	r3, #1
 800e52e:	b29b      	uxth	r3, r3
 800e530:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e532:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e534:	b29b      	uxth	r3, r3
 800e536:	2b00      	cmp	r3, #0
 800e538:	f43f af64 	beq.w	800e404 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e53c:	6822      	ldr	r2, [r4, #0]
 800e53e:	6893      	ldr	r3, [r2, #8]
 800e540:	0799      	lsls	r1, r3, #30
 800e542:	d4ed      	bmi.n	800e520 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e544:	f7fc ff76 	bl	800b434 <HAL_GetTick>
 800e548:	1b80      	subs	r0, r0, r6
 800e54a:	42a8      	cmp	r0, r5
 800e54c:	d3f1      	bcc.n	800e532 <HAL_SPI_Transmit+0x1fa>
 800e54e:	e7d2      	b.n	800e4f6 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e550:	2f01      	cmp	r7, #1
 800e552:	d18f      	bne.n	800e474 <HAL_SPI_Transmit+0x13c>
 800e554:	e785      	b.n	800e462 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e556:	4633      	mov	r3, r6
 800e558:	462a      	mov	r2, r5
 800e55a:	2180      	movs	r1, #128	; 0x80
 800e55c:	4620      	mov	r0, r4
 800e55e:	f7ff fdef 	bl	800e140 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e562:	2800      	cmp	r0, #0
 800e564:	f43f af68 	beq.w	800e438 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e568:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e56a:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e56c:	4313      	orrs	r3, r2
 800e56e:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e570:	6562      	str	r2, [r4, #84]	; 0x54
 800e572:	e761      	b.n	800e438 <HAL_SPI_Transmit+0x100>
 800e574:	2000007c 	.word	0x2000007c
 800e578:	165e9f81 	.word	0x165e9f81

0800e57c <HAL_SPI_TransmitReceive>:
{
 800e57c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e580:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800e582:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800e586:	2801      	cmp	r0, #1
{
 800e588:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800e58a:	f000 80ac 	beq.w	800e6e6 <HAL_SPI_TransmitReceive+0x16a>
 800e58e:	461e      	mov	r6, r3
 800e590:	2301      	movs	r3, #1
 800e592:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e596:	4690      	mov	r8, r2
 800e598:	460f      	mov	r7, r1
 800e59a:	f7fc ff4b 	bl	800b434 <HAL_GetTick>
 800e59e:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800e5a0:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800e5a4:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800e5a6:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800e5a8:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800e5aa:	d011      	beq.n	800e5d0 <HAL_SPI_TransmitReceive+0x54>
 800e5ac:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800e5b0:	d009      	beq.n	800e5c6 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800e5b2:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800e5b4:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800e5b6:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800e5b8:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e5bc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e5c0:	b002      	add	sp, #8
 800e5c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800e5c6:	68a1      	ldr	r1, [r4, #8]
 800e5c8:	2900      	cmp	r1, #0
 800e5ca:	d1f2      	bne.n	800e5b2 <HAL_SPI_TransmitReceive+0x36>
 800e5cc:	2a04      	cmp	r2, #4
 800e5ce:	d1f0      	bne.n	800e5b2 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800e5d0:	2f00      	cmp	r7, #0
 800e5d2:	f000 808c 	beq.w	800e6ee <HAL_SPI_TransmitReceive+0x172>
 800e5d6:	f1b8 0f00 	cmp.w	r8, #0
 800e5da:	f000 8088 	beq.w	800e6ee <HAL_SPI_TransmitReceive+0x172>
 800e5de:	2e00      	cmp	r6, #0
 800e5e0:	f000 8085 	beq.w	800e6ee <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800e5e4:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800e5e8:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800e5ec:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800e5ee:	bf1c      	itt	ne
 800e5f0:	2205      	movne	r2, #5
 800e5f2:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e5f6:	2200      	movs	r2, #0
 800e5f8:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800e5fa:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e5fe:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800e600:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800e602:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e604:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800e606:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e608:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800e60a:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800e60c:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e60e:	d403      	bmi.n	800e618 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800e610:	6811      	ldr	r1, [r2, #0]
 800e612:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800e616:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800e618:	68e1      	ldr	r1, [r4, #12]
 800e61a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800e61e:	f000 809e 	beq.w	800e75e <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e622:	2b00      	cmp	r3, #0
 800e624:	f000 8091 	beq.w	800e74a <HAL_SPI_TransmitReceive+0x1ce>
 800e628:	2e01      	cmp	r6, #1
 800e62a:	f000 808e 	beq.w	800e74a <HAL_SPI_TransmitReceive+0x1ce>
 800e62e:	9b08      	ldr	r3, [sp, #32]
 800e630:	3301      	adds	r3, #1
        txallowed = 1U;
 800e632:	f04f 0601 	mov.w	r6, #1
 800e636:	d028      	beq.n	800e68a <HAL_SPI_TransmitReceive+0x10e>
 800e638:	e05b      	b.n	800e6f2 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e63a:	6821      	ldr	r1, [r4, #0]
 800e63c:	688b      	ldr	r3, [r1, #8]
 800e63e:	0798      	lsls	r0, r3, #30
 800e640:	d50f      	bpl.n	800e662 <HAL_SPI_TransmitReceive+0xe6>
 800e642:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e644:	b29b      	uxth	r3, r3
 800e646:	b163      	cbz	r3, 800e662 <HAL_SPI_TransmitReceive+0xe6>
 800e648:	b15e      	cbz	r6, 800e662 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800e64a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e64c:	781b      	ldrb	r3, [r3, #0]
 800e64e:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800e650:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e652:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e654:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800e656:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800e658:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e65a:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800e65c:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800e65e:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e660:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e662:	688a      	ldr	r2, [r1, #8]
 800e664:	f012 0201 	ands.w	r2, r2, #1
 800e668:	d00d      	beq.n	800e686 <HAL_SPI_TransmitReceive+0x10a>
 800e66a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e66c:	b29b      	uxth	r3, r3
 800e66e:	b153      	cbz	r3, 800e686 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800e670:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e672:	68c9      	ldr	r1, [r1, #12]
 800e674:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800e676:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800e678:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e67a:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800e67c:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800e67e:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800e680:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e682:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800e684:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800e686:	f7fc fed5 	bl	800b434 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e68a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e68c:	b292      	uxth	r2, r2
 800e68e:	2a00      	cmp	r2, #0
 800e690:	d1d3      	bne.n	800e63a <HAL_SPI_TransmitReceive+0xbe>
 800e692:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e694:	b29b      	uxth	r3, r3
 800e696:	2b00      	cmp	r3, #0
 800e698:	d1cf      	bne.n	800e63a <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e69a:	4b79      	ldr	r3, [pc, #484]	; (800e880 <HAL_SPI_TransmitReceive+0x304>)
 800e69c:	4a79      	ldr	r2, [pc, #484]	; (800e884 <HAL_SPI_TransmitReceive+0x308>)
 800e69e:	681b      	ldr	r3, [r3, #0]
 800e6a0:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e6a4:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e6a6:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800e6aa:	0d5b      	lsrs	r3, r3, #21
 800e6ac:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e6b0:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e6b4:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e6b6:	d107      	bne.n	800e6c8 <HAL_SPI_TransmitReceive+0x14c>
 800e6b8:	e0d2      	b.n	800e860 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800e6ba:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e6bc:	6822      	ldr	r2, [r4, #0]
      count--;
 800e6be:	3b01      	subs	r3, #1
 800e6c0:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e6c2:	6893      	ldr	r3, [r2, #8]
 800e6c4:	061b      	lsls	r3, r3, #24
 800e6c6:	d502      	bpl.n	800e6ce <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800e6c8:	9b01      	ldr	r3, [sp, #4]
 800e6ca:	2b00      	cmp	r3, #0
 800e6cc:	d1f5      	bne.n	800e6ba <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800e6ce:	68a0      	ldr	r0, [r4, #8]
 800e6d0:	2800      	cmp	r0, #0
 800e6d2:	f040 8082 	bne.w	800e7da <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800e6d6:	6823      	ldr	r3, [r4, #0]
 800e6d8:	9000      	str	r0, [sp, #0]
 800e6da:	68da      	ldr	r2, [r3, #12]
 800e6dc:	9200      	str	r2, [sp, #0]
 800e6de:	689b      	ldr	r3, [r3, #8]
 800e6e0:	9300      	str	r3, [sp, #0]
 800e6e2:	9b00      	ldr	r3, [sp, #0]
 800e6e4:	e766      	b.n	800e5b4 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800e6e6:	2002      	movs	r0, #2
}
 800e6e8:	b002      	add	sp, #8
 800e6ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800e6ee:	2001      	movs	r0, #1
 800e6f0:	e760      	b.n	800e5b4 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e6f2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e6f4:	b29b      	uxth	r3, r3
 800e6f6:	b91b      	cbnz	r3, 800e700 <HAL_SPI_TransmitReceive+0x184>
 800e6f8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e6fa:	b29b      	uxth	r3, r3
 800e6fc:	2b00      	cmp	r3, #0
 800e6fe:	d0cc      	beq.n	800e69a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e700:	6822      	ldr	r2, [r4, #0]
 800e702:	6893      	ldr	r3, [r2, #8]
 800e704:	0799      	lsls	r1, r3, #30
 800e706:	d50f      	bpl.n	800e728 <HAL_SPI_TransmitReceive+0x1ac>
 800e708:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e70a:	b29b      	uxth	r3, r3
 800e70c:	b163      	cbz	r3, 800e728 <HAL_SPI_TransmitReceive+0x1ac>
 800e70e:	b15e      	cbz	r6, 800e728 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800e710:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e712:	781b      	ldrb	r3, [r3, #0]
 800e714:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800e716:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e718:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e71a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800e71c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e71e:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800e720:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e722:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800e724:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800e726:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e728:	6893      	ldr	r3, [r2, #8]
 800e72a:	f013 0301 	ands.w	r3, r3, #1
 800e72e:	d004      	beq.n	800e73a <HAL_SPI_TransmitReceive+0x1be>
 800e730:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800e732:	b289      	uxth	r1, r1
 800e734:	2900      	cmp	r1, #0
 800e736:	f040 8087 	bne.w	800e848 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800e73a:	f7fc fe7b 	bl	800b434 <HAL_GetTick>
 800e73e:	9b08      	ldr	r3, [sp, #32]
 800e740:	1b40      	subs	r0, r0, r5
 800e742:	4298      	cmp	r0, r3
 800e744:	d3d5      	bcc.n	800e6f2 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800e746:	2003      	movs	r0, #3
 800e748:	e734      	b.n	800e5b4 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e74a:	783b      	ldrb	r3, [r7, #0]
 800e74c:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800e74e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e750:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e752:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e754:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800e756:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e758:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e75a:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e75c:	e767      	b.n	800e62e <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e75e:	2b00      	cmp	r3, #0
 800e760:	d13d      	bne.n	800e7de <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e762:	f837 3b02 	ldrh.w	r3, [r7], #2
 800e766:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800e768:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800e76a:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e76c:	3b01      	subs	r3, #1
 800e76e:	b29b      	uxth	r3, r3
 800e770:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e772:	9b08      	ldr	r3, [sp, #32]
 800e774:	3301      	adds	r3, #1
{
 800e776:	f04f 0601 	mov.w	r6, #1
 800e77a:	d025      	beq.n	800e7c8 <HAL_SPI_TransmitReceive+0x24c>
 800e77c:	e032      	b.n	800e7e4 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e77e:	6823      	ldr	r3, [r4, #0]
 800e780:	689a      	ldr	r2, [r3, #8]
 800e782:	0792      	lsls	r2, r2, #30
 800e784:	d50d      	bpl.n	800e7a2 <HAL_SPI_TransmitReceive+0x226>
 800e786:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e788:	b292      	uxth	r2, r2
 800e78a:	b152      	cbz	r2, 800e7a2 <HAL_SPI_TransmitReceive+0x226>
 800e78c:	b14e      	cbz	r6, 800e7a2 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e78e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e790:	f831 2b02 	ldrh.w	r2, [r1], #2
 800e794:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800e796:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e798:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e79a:	3a01      	subs	r2, #1
 800e79c:	b292      	uxth	r2, r2
        txallowed = 0U;
 800e79e:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800e7a0:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e7a2:	689a      	ldr	r2, [r3, #8]
 800e7a4:	f012 0201 	ands.w	r2, r2, #1
 800e7a8:	d00c      	beq.n	800e7c4 <HAL_SPI_TransmitReceive+0x248>
 800e7aa:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800e7ac:	b289      	uxth	r1, r1
 800e7ae:	b149      	cbz	r1, 800e7c4 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e7b0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800e7b2:	68db      	ldr	r3, [r3, #12]
 800e7b4:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800e7b8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e7ba:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e7bc:	3b01      	subs	r3, #1
 800e7be:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800e7c0:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800e7c2:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800e7c4:	f7fc fe36 	bl	800b434 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e7c8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e7ca:	b29b      	uxth	r3, r3
 800e7cc:	2b00      	cmp	r3, #0
 800e7ce:	d1d6      	bne.n	800e77e <HAL_SPI_TransmitReceive+0x202>
 800e7d0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e7d2:	b29b      	uxth	r3, r3
 800e7d4:	2b00      	cmp	r3, #0
 800e7d6:	d1d2      	bne.n	800e77e <HAL_SPI_TransmitReceive+0x202>
 800e7d8:	e75f      	b.n	800e69a <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800e7da:	2000      	movs	r0, #0
 800e7dc:	e6ea      	b.n	800e5b4 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e7de:	2e01      	cmp	r6, #1
 800e7e0:	d1c7      	bne.n	800e772 <HAL_SPI_TransmitReceive+0x1f6>
 800e7e2:	e7be      	b.n	800e762 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e7e4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e7e6:	b29b      	uxth	r3, r3
 800e7e8:	b923      	cbnz	r3, 800e7f4 <HAL_SPI_TransmitReceive+0x278>
 800e7ea:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e7ec:	b29b      	uxth	r3, r3
 800e7ee:	2b00      	cmp	r3, #0
 800e7f0:	f43f af53 	beq.w	800e69a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e7f4:	6822      	ldr	r2, [r4, #0]
 800e7f6:	6893      	ldr	r3, [r2, #8]
 800e7f8:	079f      	lsls	r7, r3, #30
 800e7fa:	d50d      	bpl.n	800e818 <HAL_SPI_TransmitReceive+0x29c>
 800e7fc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e7fe:	b29b      	uxth	r3, r3
 800e800:	b153      	cbz	r3, 800e818 <HAL_SPI_TransmitReceive+0x29c>
 800e802:	b14e      	cbz	r6, 800e818 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e804:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e806:	f831 3b02 	ldrh.w	r3, [r1], #2
 800e80a:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800e80c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e80e:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e810:	3b01      	subs	r3, #1
 800e812:	b29b      	uxth	r3, r3
 800e814:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800e816:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e818:	6893      	ldr	r3, [r2, #8]
 800e81a:	f013 0301 	ands.w	r3, r3, #1
 800e81e:	d00c      	beq.n	800e83a <HAL_SPI_TransmitReceive+0x2be>
 800e820:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800e822:	b289      	uxth	r1, r1
 800e824:	b149      	cbz	r1, 800e83a <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e826:	68d1      	ldr	r1, [r2, #12]
 800e828:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e82a:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800e82e:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800e830:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e832:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e834:	3b01      	subs	r3, #1
 800e836:	b29b      	uxth	r3, r3
 800e838:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800e83a:	f7fc fdfb 	bl	800b434 <HAL_GetTick>
 800e83e:	9b08      	ldr	r3, [sp, #32]
 800e840:	1b40      	subs	r0, r0, r5
 800e842:	4298      	cmp	r0, r3
 800e844:	d3ce      	bcc.n	800e7e4 <HAL_SPI_TransmitReceive+0x268>
 800e846:	e77e      	b.n	800e746 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800e848:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800e84a:	68d2      	ldr	r2, [r2, #12]
 800e84c:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800e84e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800e850:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e852:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800e854:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800e856:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800e858:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e85a:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800e85c:	461e      	mov	r6, r3
 800e85e:	e76c      	b.n	800e73a <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e860:	9a08      	ldr	r2, [sp, #32]
 800e862:	462b      	mov	r3, r5
 800e864:	2180      	movs	r1, #128	; 0x80
 800e866:	4620      	mov	r0, r4
 800e868:	f7ff fc6a 	bl	800e140 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e86c:	2800      	cmp	r0, #0
 800e86e:	f43f af2e 	beq.w	800e6ce <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e872:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e874:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e876:	4313      	orrs	r3, r2
 800e878:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800e87a:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e87c:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800e87e:	e699      	b.n	800e5b4 <HAL_SPI_TransmitReceive+0x38>
 800e880:	2000007c 	.word	0x2000007c
 800e884:	165e9f81 	.word	0x165e9f81

0800e888 <HAL_SPI_Receive>:
{
 800e888:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800e88c:	6846      	ldr	r6, [r0, #4]
 800e88e:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800e892:	b082      	sub	sp, #8
 800e894:	4604      	mov	r4, r0
 800e896:	4690      	mov	r8, r2
 800e898:	461d      	mov	r5, r3
 800e89a:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800e89c:	d06e      	beq.n	800e97c <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800e89e:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800e8a2:	2b01      	cmp	r3, #1
 800e8a4:	d076      	beq.n	800e994 <HAL_SPI_Receive+0x10c>
 800e8a6:	2301      	movs	r3, #1
 800e8a8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e8ac:	f7fc fdc2 	bl	800b434 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800e8b0:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800e8b4:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800e8b8:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800e8ba:	fa5f f08c 	uxtb.w	r0, ip
 800e8be:	d009      	beq.n	800e8d4 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800e8c0:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800e8c2:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800e8c4:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800e8c6:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e8ca:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e8ce:	b002      	add	sp, #8
 800e8d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800e8d4:	2f00      	cmp	r7, #0
 800e8d6:	d0f4      	beq.n	800e8c2 <HAL_SPI_Receive+0x3a>
 800e8d8:	f1b8 0f00 	cmp.w	r8, #0
 800e8dc:	d0f1      	beq.n	800e8c2 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e8de:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800e8e0:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e8e2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800e8e6:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800e8e8:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e8ec:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800e8f0:	f04f 0104 	mov.w	r1, #4
 800e8f4:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800e8f8:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e8fc:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800e8fe:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800e900:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800e902:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800e906:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800e908:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e90a:	d107      	bne.n	800e91c <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800e90c:	6811      	ldr	r1, [r2, #0]
 800e90e:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800e912:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800e914:	6811      	ldr	r1, [r2, #0]
 800e916:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800e91a:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e91c:	6811      	ldr	r1, [r2, #0]
 800e91e:	0648      	lsls	r0, r1, #25
 800e920:	d403      	bmi.n	800e92a <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800e922:	6811      	ldr	r1, [r2, #0]
 800e924:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800e928:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800e92a:	68e1      	ldr	r1, [r4, #12]
 800e92c:	2900      	cmp	r1, #0
 800e92e:	d054      	beq.n	800e9da <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800e930:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800e932:	b289      	uxth	r1, r1
 800e934:	b1a9      	cbz	r1, 800e962 <HAL_SPI_Receive+0xda>
 800e936:	1c69      	adds	r1, r5, #1
 800e938:	d13e      	bne.n	800e9b8 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800e93a:	6893      	ldr	r3, [r2, #8]
 800e93c:	07db      	lsls	r3, r3, #31
 800e93e:	d544      	bpl.n	800e9ca <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e940:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e942:	68d1      	ldr	r1, [r2, #12]
 800e944:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800e948:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e94c:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e94e:	f10c 3cff 	add.w	ip, ip, #4294967295
 800e952:	fa1f fc8c 	uxth.w	ip, ip
 800e956:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800e95a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e95c:	b29b      	uxth	r3, r3
 800e95e:	2b00      	cmp	r3, #0
 800e960:	d1eb      	bne.n	800e93a <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800e962:	4632      	mov	r2, r6
 800e964:	4629      	mov	r1, r5
 800e966:	4620      	mov	r0, r4
 800e968:	f7ff fc48 	bl	800e1fc <SPI_EndRxTransaction>
 800e96c:	b108      	cbz	r0, 800e972 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e96e:	2320      	movs	r3, #32
 800e970:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800e972:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800e974:	3800      	subs	r0, #0
 800e976:	bf18      	it	ne
 800e978:	2001      	movne	r0, #1
error :
 800e97a:	e7a2      	b.n	800e8c2 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800e97c:	6883      	ldr	r3, [r0, #8]
 800e97e:	2b00      	cmp	r3, #0
 800e980:	d18d      	bne.n	800e89e <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800e982:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800e984:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800e986:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800e988:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800e98c:	460a      	mov	r2, r1
 800e98e:	f7ff fdf5 	bl	800e57c <HAL_SPI_TransmitReceive>
 800e992:	e79c      	b.n	800e8ce <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800e994:	2002      	movs	r0, #2
}
 800e996:	b002      	add	sp, #8
 800e998:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e99c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e99e:	68db      	ldr	r3, [r3, #12]
 800e9a0:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800e9a4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e9a6:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e9a8:	3b01      	subs	r3, #1
 800e9aa:	b29b      	uxth	r3, r3
 800e9ac:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800e9ae:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e9b0:	b29b      	uxth	r3, r3
 800e9b2:	2b00      	cmp	r3, #0
 800e9b4:	d0d5      	beq.n	800e962 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800e9b6:	6823      	ldr	r3, [r4, #0]
 800e9b8:	689a      	ldr	r2, [r3, #8]
 800e9ba:	07d2      	lsls	r2, r2, #31
 800e9bc:	d4ee      	bmi.n	800e99c <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e9be:	f7fc fd39 	bl	800b434 <HAL_GetTick>
 800e9c2:	1b80      	subs	r0, r0, r6
 800e9c4:	42a8      	cmp	r0, r5
 800e9c6:	d243      	bcs.n	800ea50 <HAL_SPI_Receive+0x1c8>
 800e9c8:	e7f1      	b.n	800e9ae <HAL_SPI_Receive+0x126>
 800e9ca:	f7fc fd33 	bl	800b434 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800e9ce:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e9d0:	b29b      	uxth	r3, r3
 800e9d2:	2b00      	cmp	r3, #0
 800e9d4:	d0c5      	beq.n	800e962 <HAL_SPI_Receive+0xda>
 800e9d6:	6822      	ldr	r2, [r4, #0]
 800e9d8:	e7af      	b.n	800e93a <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800e9da:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800e9dc:	b292      	uxth	r2, r2
 800e9de:	2a00      	cmp	r2, #0
 800e9e0:	d0bf      	beq.n	800e962 <HAL_SPI_Receive+0xda>
 800e9e2:	1c6f      	adds	r7, r5, #1
 800e9e4:	d013      	beq.n	800ea0e <HAL_SPI_Receive+0x186>
 800e9e6:	e02b      	b.n	800ea40 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800e9e8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e9ea:	7b1b      	ldrb	r3, [r3, #12]
 800e9ec:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800e9ee:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800e9f2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e9f4:	f10c 3cff 	add.w	ip, ip, #4294967295
 800e9f8:	fa1f fc8c 	uxth.w	ip, ip
 800e9fc:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ea00:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ea02:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800ea04:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ea06:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800ea08:	2b00      	cmp	r3, #0
 800ea0a:	d0aa      	beq.n	800e962 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ea0c:	6823      	ldr	r3, [r4, #0]
 800ea0e:	689a      	ldr	r2, [r3, #8]
 800ea10:	07d0      	lsls	r0, r2, #31
 800ea12:	d4e9      	bmi.n	800e9e8 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ea14:	f7fc fd0e 	bl	800b434 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800ea18:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ea1a:	b29b      	uxth	r3, r3
 800ea1c:	2b00      	cmp	r3, #0
 800ea1e:	d1f5      	bne.n	800ea0c <HAL_SPI_Receive+0x184>
 800ea20:	e79f      	b.n	800e962 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800ea22:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ea24:	7b1b      	ldrb	r3, [r3, #12]
 800ea26:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800ea28:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ea2a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ea2c:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ea2e:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800ea30:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ea32:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ea34:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ea36:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ea38:	b29b      	uxth	r3, r3
 800ea3a:	2b00      	cmp	r3, #0
 800ea3c:	d091      	beq.n	800e962 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ea3e:	6823      	ldr	r3, [r4, #0]
 800ea40:	689a      	ldr	r2, [r3, #8]
 800ea42:	07d1      	lsls	r1, r2, #31
 800ea44:	d4ed      	bmi.n	800ea22 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ea46:	f7fc fcf5 	bl	800b434 <HAL_GetTick>
 800ea4a:	1b80      	subs	r0, r0, r6
 800ea4c:	42a8      	cmp	r0, r5
 800ea4e:	d3f2      	bcc.n	800ea36 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800ea50:	2003      	movs	r0, #3
 800ea52:	e736      	b.n	800e8c2 <HAL_SPI_Receive+0x3a>

0800ea54 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800ea54:	2800      	cmp	r0, #0
 800ea56:	f000 8087 	beq.w	800eb68 <HAL_TIM_Base_Init+0x114>
{
 800ea5a:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800ea5c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ea60:	4604      	mov	r4, r0
 800ea62:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ea66:	2b00      	cmp	r3, #0
 800ea68:	d079      	beq.n	800eb5e <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ea6a:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ea6c:	493f      	ldr	r1, [pc, #252]	; (800eb6c <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ea6e:	2302      	movs	r3, #2
 800ea70:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ea74:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800ea76:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ea78:	d05d      	beq.n	800eb36 <HAL_TIM_Base_Init+0xe2>
 800ea7a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800ea7e:	d031      	beq.n	800eae4 <HAL_TIM_Base_Init+0x90>
 800ea80:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800ea84:	428a      	cmp	r2, r1
 800ea86:	d02d      	beq.n	800eae4 <HAL_TIM_Base_Init+0x90>
 800ea88:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ea8c:	428a      	cmp	r2, r1
 800ea8e:	d029      	beq.n	800eae4 <HAL_TIM_Base_Init+0x90>
 800ea90:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ea94:	428a      	cmp	r2, r1
 800ea96:	d025      	beq.n	800eae4 <HAL_TIM_Base_Init+0x90>
 800ea98:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800ea9c:	428a      	cmp	r2, r1
 800ea9e:	d04a      	beq.n	800eb36 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800eaa0:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800eaa4:	428a      	cmp	r2, r1
 800eaa6:	d021      	beq.n	800eaec <HAL_TIM_Base_Init+0x98>
 800eaa8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eaac:	428a      	cmp	r2, r1
 800eaae:	d01d      	beq.n	800eaec <HAL_TIM_Base_Init+0x98>
 800eab0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eab4:	428a      	cmp	r2, r1
 800eab6:	d019      	beq.n	800eaec <HAL_TIM_Base_Init+0x98>
 800eab8:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800eabc:	428a      	cmp	r2, r1
 800eabe:	d015      	beq.n	800eaec <HAL_TIM_Base_Init+0x98>
 800eac0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eac4:	428a      	cmp	r2, r1
 800eac6:	d011      	beq.n	800eaec <HAL_TIM_Base_Init+0x98>
 800eac8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eacc:	428a      	cmp	r2, r1
 800eace:	d00d      	beq.n	800eaec <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ead0:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ead2:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ead4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ead8:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800eada:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800eadc:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800eade:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800eae0:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800eae2:	e010      	b.n	800eb06 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800eae4:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800eae6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800eaea:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800eaec:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800eaee:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800eaf0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800eaf4:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800eaf6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800eafa:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800eafc:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800eafe:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800eb00:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800eb02:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800eb04:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800eb06:	2301      	movs	r3, #1
 800eb08:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800eb0a:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800eb0e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800eb12:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800eb16:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800eb1a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800eb1e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800eb22:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800eb26:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800eb2a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800eb2e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800eb32:	2000      	movs	r0, #0
}
 800eb34:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800eb36:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800eb38:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800eb3a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800eb3e:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800eb40:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800eb44:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800eb46:	69a1      	ldr	r1, [r4, #24]
 800eb48:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800eb4c:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800eb4e:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800eb50:	68e3      	ldr	r3, [r4, #12]
 800eb52:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800eb54:	6863      	ldr	r3, [r4, #4]
 800eb56:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800eb58:	6963      	ldr	r3, [r4, #20]
 800eb5a:	6313      	str	r3, [r2, #48]	; 0x30
 800eb5c:	e7d3      	b.n	800eb06 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800eb5e:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800eb62:	f7f3 fc3d 	bl	80023e0 <HAL_TIM_Base_MspInit>
 800eb66:	e780      	b.n	800ea6a <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800eb68:	2001      	movs	r0, #1
}
 800eb6a:	4770      	bx	lr
 800eb6c:	40010000 	.word	0x40010000

0800eb70 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800eb70:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800eb74:	2b01      	cmp	r3, #1
 800eb76:	d12f      	bne.n	800ebd8 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800eb78:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800eb7a:	4919      	ldr	r1, [pc, #100]	; (800ebe0 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800eb7c:	2202      	movs	r2, #2
 800eb7e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800eb82:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800eb84:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800eb86:	f042 0201 	orr.w	r2, r2, #1
 800eb8a:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800eb8c:	d019      	beq.n	800ebc2 <HAL_TIM_Base_Start_IT+0x52>
 800eb8e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800eb92:	d016      	beq.n	800ebc2 <HAL_TIM_Base_Start_IT+0x52>
 800eb94:	4a13      	ldr	r2, [pc, #76]	; (800ebe4 <HAL_TIM_Base_Start_IT+0x74>)
 800eb96:	4293      	cmp	r3, r2
 800eb98:	d013      	beq.n	800ebc2 <HAL_TIM_Base_Start_IT+0x52>
 800eb9a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800eb9e:	4293      	cmp	r3, r2
 800eba0:	d00f      	beq.n	800ebc2 <HAL_TIM_Base_Start_IT+0x52>
 800eba2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800eba6:	4293      	cmp	r3, r2
 800eba8:	d00b      	beq.n	800ebc2 <HAL_TIM_Base_Start_IT+0x52>
 800ebaa:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ebae:	4293      	cmp	r3, r2
 800ebb0:	d007      	beq.n	800ebc2 <HAL_TIM_Base_Start_IT+0x52>
 800ebb2:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800ebb6:	4293      	cmp	r3, r2
 800ebb8:	d003      	beq.n	800ebc2 <HAL_TIM_Base_Start_IT+0x52>
 800ebba:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800ebbe:	4293      	cmp	r3, r2
 800ebc0:	d104      	bne.n	800ebcc <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800ebc2:	689a      	ldr	r2, [r3, #8]
 800ebc4:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800ebc8:	2a06      	cmp	r2, #6
 800ebca:	d007      	beq.n	800ebdc <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800ebcc:	681a      	ldr	r2, [r3, #0]
 800ebce:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800ebd2:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800ebd4:	601a      	str	r2, [r3, #0]
 800ebd6:	4770      	bx	lr
    return HAL_ERROR;
 800ebd8:	2001      	movs	r0, #1
 800ebda:	4770      	bx	lr
  return HAL_OK;
 800ebdc:	2000      	movs	r0, #0
}
 800ebde:	4770      	bx	lr
 800ebe0:	40010000 	.word	0x40010000
 800ebe4:	40000400 	.word	0x40000400

0800ebe8 <HAL_TIM_PWM_MspInit>:
 800ebe8:	4770      	bx	lr
 800ebea:	bf00      	nop

0800ebec <HAL_TIM_PWM_Init>:
  if (htim == NULL)
 800ebec:	2800      	cmp	r0, #0
 800ebee:	f000 8087 	beq.w	800ed00 <HAL_TIM_PWM_Init+0x114>
{
 800ebf2:	b510      	push	{r4, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 800ebf4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ebf8:	4604      	mov	r4, r0
 800ebfa:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ebfe:	2b00      	cmp	r3, #0
 800ec00:	d079      	beq.n	800ecf6 <HAL_TIM_PWM_Init+0x10a>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ec02:	6822      	ldr	r2, [r4, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ec04:	493f      	ldr	r1, [pc, #252]	; (800ed04 <HAL_TIM_PWM_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ec06:	2302      	movs	r3, #2
 800ec08:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ec0c:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800ec0e:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ec10:	d05d      	beq.n	800ecce <HAL_TIM_PWM_Init+0xe2>
 800ec12:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800ec16:	d031      	beq.n	800ec7c <HAL_TIM_PWM_Init+0x90>
 800ec18:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800ec1c:	428a      	cmp	r2, r1
 800ec1e:	d02d      	beq.n	800ec7c <HAL_TIM_PWM_Init+0x90>
 800ec20:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec24:	428a      	cmp	r2, r1
 800ec26:	d029      	beq.n	800ec7c <HAL_TIM_PWM_Init+0x90>
 800ec28:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec2c:	428a      	cmp	r2, r1
 800ec2e:	d025      	beq.n	800ec7c <HAL_TIM_PWM_Init+0x90>
 800ec30:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800ec34:	428a      	cmp	r2, r1
 800ec36:	d04a      	beq.n	800ecce <HAL_TIM_PWM_Init+0xe2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800ec38:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800ec3c:	428a      	cmp	r2, r1
 800ec3e:	d021      	beq.n	800ec84 <HAL_TIM_PWM_Init+0x98>
 800ec40:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec44:	428a      	cmp	r2, r1
 800ec46:	d01d      	beq.n	800ec84 <HAL_TIM_PWM_Init+0x98>
 800ec48:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec4c:	428a      	cmp	r2, r1
 800ec4e:	d019      	beq.n	800ec84 <HAL_TIM_PWM_Init+0x98>
 800ec50:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800ec54:	428a      	cmp	r2, r1
 800ec56:	d015      	beq.n	800ec84 <HAL_TIM_PWM_Init+0x98>
 800ec58:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec5c:	428a      	cmp	r2, r1
 800ec5e:	d011      	beq.n	800ec84 <HAL_TIM_PWM_Init+0x98>
 800ec60:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec64:	428a      	cmp	r2, r1
 800ec66:	d00d      	beq.n	800ec84 <HAL_TIM_PWM_Init+0x98>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec68:	69a0      	ldr	r0, [r4, #24]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec6a:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec6c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ec70:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800ec72:	6013      	str	r3, [r2, #0]
  TIMx->PSC = Structure->Prescaler;
 800ec74:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec76:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ec78:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800ec7a:	e010      	b.n	800ec9e <HAL_TIM_PWM_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800ec7c:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ec7e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ec82:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ec84:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec86:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800ec88:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ec8c:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec8e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec92:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec94:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800ec96:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800ec98:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec9a:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ec9c:	6291      	str	r1, [r2, #40]	; 0x28
  TIMx->EGR = TIM_EGR_UG;
 800ec9e:	2301      	movs	r3, #1
 800eca0:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800eca2:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800eca6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800ecaa:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800ecae:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ecb2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ecb6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800ecba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ecbe:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ecc2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800ecc6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800ecca:	2000      	movs	r0, #0
}
 800eccc:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800ecce:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ecd0:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ecd2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ecd6:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800ecd8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ecdc:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ecde:	69a1      	ldr	r1, [r4, #24]
 800ece0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ece4:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800ece6:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ece8:	68e3      	ldr	r3, [r4, #12]
 800ecea:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ecec:	6863      	ldr	r3, [r4, #4]
 800ecee:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800ecf0:	6963      	ldr	r3, [r4, #20]
 800ecf2:	6313      	str	r3, [r2, #48]	; 0x30
 800ecf4:	e7d3      	b.n	800ec9e <HAL_TIM_PWM_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800ecf6:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800ecfa:	f7ff ff75 	bl	800ebe8 <HAL_TIM_PWM_MspInit>
 800ecfe:	e780      	b.n	800ec02 <HAL_TIM_PWM_Init+0x16>
    return HAL_ERROR;
 800ed00:	2001      	movs	r0, #1
}
 800ed02:	4770      	bx	lr
 800ed04:	40010000 	.word	0x40010000

0800ed08 <HAL_TIM_PWM_Start>:
 800ed08:	2900      	cmp	r1, #0
 800ed0a:	d13c      	bne.n	800ed86 <HAL_TIM_PWM_Start+0x7e>
 800ed0c:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800ed10:	2b01      	cmp	r3, #1
 800ed12:	d140      	bne.n	800ed96 <HAL_TIM_PWM_Start+0x8e>
 800ed14:	2302      	movs	r3, #2
 800ed16:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800ed1a:	6803      	ldr	r3, [r0, #0]
 800ed1c:	f001 011f 	and.w	r1, r1, #31
 800ed20:	6a18      	ldr	r0, [r3, #32]
 800ed22:	2201      	movs	r2, #1
 800ed24:	408a      	lsls	r2, r1
 800ed26:	ea20 0002 	bic.w	r0, r0, r2
 800ed2a:	6218      	str	r0, [r3, #32]
 800ed2c:	6a18      	ldr	r0, [r3, #32]
 800ed2e:	492c      	ldr	r1, [pc, #176]	; (800ede0 <HAL_TIM_PWM_Start+0xd8>)
 800ed30:	4302      	orrs	r2, r0
 800ed32:	428b      	cmp	r3, r1
 800ed34:	621a      	str	r2, [r3, #32]
 800ed36:	d038      	beq.n	800edaa <HAL_TIM_PWM_Start+0xa2>
 800ed38:	4a2a      	ldr	r2, [pc, #168]	; (800ede4 <HAL_TIM_PWM_Start+0xdc>)
 800ed3a:	4293      	cmp	r3, r2
 800ed3c:	d035      	beq.n	800edaa <HAL_TIM_PWM_Start+0xa2>
 800ed3e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ed42:	d015      	beq.n	800ed70 <HAL_TIM_PWM_Start+0x68>
 800ed44:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800ed48:	428b      	cmp	r3, r1
 800ed4a:	d011      	beq.n	800ed70 <HAL_TIM_PWM_Start+0x68>
 800ed4c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ed50:	428b      	cmp	r3, r1
 800ed52:	d00d      	beq.n	800ed70 <HAL_TIM_PWM_Start+0x68>
 800ed54:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ed58:	428b      	cmp	r3, r1
 800ed5a:	d009      	beq.n	800ed70 <HAL_TIM_PWM_Start+0x68>
 800ed5c:	4293      	cmp	r3, r2
 800ed5e:	d007      	beq.n	800ed70 <HAL_TIM_PWM_Start+0x68>
 800ed60:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800ed64:	4293      	cmp	r3, r2
 800ed66:	d003      	beq.n	800ed70 <HAL_TIM_PWM_Start+0x68>
 800ed68:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800ed6c:	4293      	cmp	r3, r2
 800ed6e:	d104      	bne.n	800ed7a <HAL_TIM_PWM_Start+0x72>
 800ed70:	689a      	ldr	r2, [r3, #8]
 800ed72:	f002 0207 	and.w	r2, r2, #7
 800ed76:	2a06      	cmp	r2, #6
 800ed78:	d020      	beq.n	800edbc <HAL_TIM_PWM_Start+0xb4>
 800ed7a:	681a      	ldr	r2, [r3, #0]
 800ed7c:	f042 0201 	orr.w	r2, r2, #1
 800ed80:	2000      	movs	r0, #0
 800ed82:	601a      	str	r2, [r3, #0]
 800ed84:	4770      	bx	lr
 800ed86:	2904      	cmp	r1, #4
 800ed88:	d022      	beq.n	800edd0 <HAL_TIM_PWM_Start+0xc8>
 800ed8a:	2908      	cmp	r1, #8
 800ed8c:	d018      	beq.n	800edc0 <HAL_TIM_PWM_Start+0xb8>
 800ed8e:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 800ed92:	2b01      	cmp	r3, #1
 800ed94:	d001      	beq.n	800ed9a <HAL_TIM_PWM_Start+0x92>
 800ed96:	2001      	movs	r0, #1
 800ed98:	4770      	bx	lr
 800ed9a:	2904      	cmp	r1, #4
 800ed9c:	d01c      	beq.n	800edd8 <HAL_TIM_PWM_Start+0xd0>
 800ed9e:	2908      	cmp	r1, #8
 800eda0:	d012      	beq.n	800edc8 <HAL_TIM_PWM_Start+0xc0>
 800eda2:	2302      	movs	r3, #2
 800eda4:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
 800eda8:	e7b7      	b.n	800ed1a <HAL_TIM_PWM_Start+0x12>
 800edaa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800edac:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800edb0:	645a      	str	r2, [r3, #68]	; 0x44
 800edb2:	689a      	ldr	r2, [r3, #8]
 800edb4:	f002 0207 	and.w	r2, r2, #7
 800edb8:	2a06      	cmp	r2, #6
 800edba:	d1de      	bne.n	800ed7a <HAL_TIM_PWM_Start+0x72>
 800edbc:	2000      	movs	r0, #0
 800edbe:	4770      	bx	lr
 800edc0:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800edc4:	2b01      	cmp	r3, #1
 800edc6:	d1e6      	bne.n	800ed96 <HAL_TIM_PWM_Start+0x8e>
 800edc8:	2302      	movs	r3, #2
 800edca:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800edce:	e7a4      	b.n	800ed1a <HAL_TIM_PWM_Start+0x12>
 800edd0:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 800edd4:	2b01      	cmp	r3, #1
 800edd6:	d1de      	bne.n	800ed96 <HAL_TIM_PWM_Start+0x8e>
 800edd8:	2302      	movs	r3, #2
 800edda:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800edde:	e79c      	b.n	800ed1a <HAL_TIM_PWM_Start+0x12>
 800ede0:	40010000 	.word	0x40010000
 800ede4:	40010400 	.word	0x40010400

0800ede8 <HAL_TIM_PWM_Stop>:
 800ede8:	6803      	ldr	r3, [r0, #0]
 800edea:	b410      	push	{r4}
 800edec:	6a1a      	ldr	r2, [r3, #32]
 800edee:	f001 041f 	and.w	r4, r1, #31
 800edf2:	f04f 0c01 	mov.w	ip, #1
 800edf6:	fa0c fc04 	lsl.w	ip, ip, r4
 800edfa:	ea22 020c 	bic.w	r2, r2, ip
 800edfe:	621a      	str	r2, [r3, #32]
 800ee00:	4a20      	ldr	r2, [pc, #128]	; (800ee84 <HAL_TIM_PWM_Stop+0x9c>)
 800ee02:	6a1c      	ldr	r4, [r3, #32]
 800ee04:	621c      	str	r4, [r3, #32]
 800ee06:	4293      	cmp	r3, r2
 800ee08:	d015      	beq.n	800ee36 <HAL_TIM_PWM_Stop+0x4e>
 800ee0a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ee0e:	4293      	cmp	r3, r2
 800ee10:	d011      	beq.n	800ee36 <HAL_TIM_PWM_Stop+0x4e>
 800ee12:	6a1c      	ldr	r4, [r3, #32]
 800ee14:	f241 1211 	movw	r2, #4369	; 0x1111
 800ee18:	4214      	tst	r4, r2
 800ee1a:	d104      	bne.n	800ee26 <HAL_TIM_PWM_Stop+0x3e>
 800ee1c:	6a1c      	ldr	r4, [r3, #32]
 800ee1e:	f240 4244 	movw	r2, #1092	; 0x444
 800ee22:	4214      	tst	r4, r2
 800ee24:	d022      	beq.n	800ee6c <HAL_TIM_PWM_Stop+0x84>
 800ee26:	2301      	movs	r3, #1
 800ee28:	b9a1      	cbnz	r1, 800ee54 <HAL_TIM_PWM_Stop+0x6c>
 800ee2a:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800ee2e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ee32:	2000      	movs	r0, #0
 800ee34:	4770      	bx	lr
 800ee36:	6a1c      	ldr	r4, [r3, #32]
 800ee38:	f241 1211 	movw	r2, #4369	; 0x1111
 800ee3c:	4214      	tst	r4, r2
 800ee3e:	d1e8      	bne.n	800ee12 <HAL_TIM_PWM_Stop+0x2a>
 800ee40:	6a1c      	ldr	r4, [r3, #32]
 800ee42:	f240 4244 	movw	r2, #1092	; 0x444
 800ee46:	4214      	tst	r4, r2
 800ee48:	d1e3      	bne.n	800ee12 <HAL_TIM_PWM_Stop+0x2a>
 800ee4a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800ee4c:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800ee50:	645a      	str	r2, [r3, #68]	; 0x44
 800ee52:	e7de      	b.n	800ee12 <HAL_TIM_PWM_Stop+0x2a>
 800ee54:	2904      	cmp	r1, #4
 800ee56:	d00e      	beq.n	800ee76 <HAL_TIM_PWM_Stop+0x8e>
 800ee58:	2908      	cmp	r1, #8
 800ee5a:	bf0c      	ite	eq
 800ee5c:	f880 3040 	strbeq.w	r3, [r0, #64]	; 0x40
 800ee60:	f880 3041 	strbne.w	r3, [r0, #65]	; 0x41
 800ee64:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ee68:	2000      	movs	r0, #0
 800ee6a:	4770      	bx	lr
 800ee6c:	681a      	ldr	r2, [r3, #0]
 800ee6e:	f022 0201 	bic.w	r2, r2, #1
 800ee72:	601a      	str	r2, [r3, #0]
 800ee74:	e7d7      	b.n	800ee26 <HAL_TIM_PWM_Stop+0x3e>
 800ee76:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800ee7a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ee7e:	2000      	movs	r0, #0
 800ee80:	4770      	bx	lr
 800ee82:	bf00      	nop
 800ee84:	40010000 	.word	0x40010000

0800ee88 <HAL_TIM_PWM_ConfigChannel>:
  __HAL_LOCK(htim);
 800ee88:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800ee8c:	2b01      	cmp	r3, #1
 800ee8e:	f000 80d2 	beq.w	800f036 <HAL_TIM_PWM_ConfigChannel+0x1ae>
 800ee92:	2301      	movs	r3, #1
{
 800ee94:	b570      	push	{r4, r5, r6, lr}
 800ee96:	4684      	mov	ip, r0
  __HAL_LOCK(htim);
 800ee98:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  switch (Channel)
 800ee9c:	2a0c      	cmp	r2, #12
 800ee9e:	d808      	bhi.n	800eeb2 <HAL_TIM_PWM_ConfigChannel+0x2a>
 800eea0:	e8df f002 	tbb	[pc, r2]
 800eea4:	0707073e 	.word	0x0707073e
 800eea8:	0707076b 	.word	0x0707076b
 800eeac:	0707079b 	.word	0x0707079b
 800eeb0:	0c          	.byte	0x0c
 800eeb1:	00          	.byte	0x00
  __HAL_UNLOCK(htim);
 800eeb2:	2300      	movs	r3, #0
 800eeb4:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  switch (Channel)
 800eeb8:	2001      	movs	r0, #1
}
 800eeba:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800eebc:	6803      	ldr	r3, [r0, #0]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800eebe:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800eec0:	6a1a      	ldr	r2, [r3, #32]
 800eec2:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800eec6:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800eec8:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800eeca:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800eecc:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800eece:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800eed2:	ea40 2005 	orr.w	r0, r0, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800eed6:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 800eed8:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800eedc:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800eee0:	4d70      	ldr	r5, [pc, #448]	; (800f0a4 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800eee2:	42ab      	cmp	r3, r5
 800eee4:	f000 80c8 	beq.w	800f078 <HAL_TIM_PWM_ConfigChannel+0x1f0>
 800eee8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800eeec:	42ab      	cmp	r3, r5
 800eeee:	f000 80c3 	beq.w	800f078 <HAL_TIM_PWM_ConfigChannel+0x1f0>
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800eef2:	605c      	str	r4, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800eef4:	61d8      	str	r0, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800eef6:	6848      	ldr	r0, [r1, #4]
 800eef8:	6418      	str	r0, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800eefa:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800eefc:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800eefe:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800ef00:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800ef04:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800ef06:	69da      	ldr	r2, [r3, #28]
 800ef08:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ef0c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800ef0e:	69da      	ldr	r2, [r3, #28]
 800ef10:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800ef14:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800ef16:	2300      	movs	r3, #0
 800ef18:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800ef1c:	2000      	movs	r0, #0
}
 800ef1e:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800ef20:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800ef22:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800ef24:	6a1a      	ldr	r2, [r3, #32]
 800ef26:	f022 0201 	bic.w	r2, r2, #1
 800ef2a:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800ef2c:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800ef2e:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800ef30:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800ef32:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800ef36:	4328      	orrs	r0, r5
  tmpccer |= OC_Config->OCPolarity;
 800ef38:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 800ef3a:	f022 0202 	bic.w	r2, r2, #2
  tmpccer |= OC_Config->OCPolarity;
 800ef3e:	432a      	orrs	r2, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800ef40:	4d58      	ldr	r5, [pc, #352]	; (800f0a4 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800ef42:	42ab      	cmp	r3, r5
 800ef44:	d079      	beq.n	800f03a <HAL_TIM_PWM_ConfigChannel+0x1b2>
 800ef46:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800ef4a:	42ab      	cmp	r3, r5
 800ef4c:	d075      	beq.n	800f03a <HAL_TIM_PWM_ConfigChannel+0x1b2>
  TIMx->CR2 = tmpcr2;
 800ef4e:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800ef50:	6198      	str	r0, [r3, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 800ef52:	6848      	ldr	r0, [r1, #4]
 800ef54:	6358      	str	r0, [r3, #52]	; 0x34
  TIMx->CCER = tmpccer;
 800ef56:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800ef58:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800ef5a:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800ef5c:	f042 0208 	orr.w	r2, r2, #8
 800ef60:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800ef62:	699a      	ldr	r2, [r3, #24]
 800ef64:	f022 0204 	bic.w	r2, r2, #4
 800ef68:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800ef6a:	699a      	ldr	r2, [r3, #24]
 800ef6c:	430a      	orrs	r2, r1
 800ef6e:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800ef70:	2300      	movs	r3, #0
 800ef72:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800ef76:	2000      	movs	r0, #0
}
 800ef78:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800ef7a:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800ef7c:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800ef7e:	6a1a      	ldr	r2, [r3, #32]
 800ef80:	f022 0210 	bic.w	r2, r2, #16
 800ef84:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800ef86:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800ef88:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800ef8a:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800ef8c:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800ef90:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800ef94:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 800ef96:	f022 0220 	bic.w	r2, r2, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800ef9a:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800ef9e:	4d41      	ldr	r5, [pc, #260]	; (800f0a4 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800efa0:	42ab      	cmp	r3, r5
 800efa2:	d059      	beq.n	800f058 <HAL_TIM_PWM_ConfigChannel+0x1d0>
 800efa4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800efa8:	42ab      	cmp	r3, r5
 800efaa:	d055      	beq.n	800f058 <HAL_TIM_PWM_ConfigChannel+0x1d0>
  TIMx->CR2 = tmpcr2;
 800efac:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800efae:	6198      	str	r0, [r3, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800efb0:	6848      	ldr	r0, [r1, #4]
 800efb2:	6398      	str	r0, [r3, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800efb4:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800efb6:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800efb8:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800efba:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800efbe:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800efc0:	699a      	ldr	r2, [r3, #24]
 800efc2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800efc6:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800efc8:	699a      	ldr	r2, [r3, #24]
 800efca:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800efce:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800efd0:	2300      	movs	r3, #0
 800efd2:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800efd6:	2000      	movs	r0, #0
}
 800efd8:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800efda:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800efdc:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800efde:	6a1a      	ldr	r2, [r3, #32]
 800efe0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800efe4:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800efe6:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800efe8:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800efea:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800efec:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800eff0:	4328      	orrs	r0, r5
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800eff2:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800eff4:	f422 7200 	bic.w	r2, r2, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800eff8:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800effc:	4d29      	ldr	r5, [pc, #164]	; (800f0a4 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800effe:	42ab      	cmp	r3, r5
 800f000:	d040      	beq.n	800f084 <HAL_TIM_PWM_ConfigChannel+0x1fc>
 800f002:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f006:	42ab      	cmp	r3, r5
 800f008:	d03c      	beq.n	800f084 <HAL_TIM_PWM_ConfigChannel+0x1fc>
  TIMx->CR2 = tmpcr2;
 800f00a:	605c      	str	r4, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 800f00c:	61d8      	str	r0, [r3, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 800f00e:	6848      	ldr	r0, [r1, #4]
 800f010:	63d8      	str	r0, [r3, #60]	; 0x3c
  TIMx->CCER = tmpccer;
 800f012:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800f014:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800f016:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800f018:	f042 0208 	orr.w	r2, r2, #8
 800f01c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800f01e:	69da      	ldr	r2, [r3, #28]
 800f020:	f022 0204 	bic.w	r2, r2, #4
 800f024:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800f026:	69da      	ldr	r2, [r3, #28]
 800f028:	430a      	orrs	r2, r1
 800f02a:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800f02c:	2300      	movs	r3, #0
 800f02e:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f032:	2000      	movs	r0, #0
}
 800f034:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(htim);
 800f036:	2002      	movs	r0, #2
}
 800f038:	4770      	bx	lr
    tmpccer |= OC_Config->OCNPolarity;
 800f03a:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 800f03c:	f022 0208 	bic.w	r2, r2, #8
    tmpccer |= OC_Config->OCNPolarity;
 800f040:	432a      	orrs	r2, r5
    tmpcr2 |= OC_Config->OCNIdleState;
 800f042:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800f046:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 800f04a:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 800f04e:	f022 0204 	bic.w	r2, r2, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 800f052:	ea4e 0404 	orr.w	r4, lr, r4
 800f056:	e77a      	b.n	800ef4e <HAL_TIM_PWM_ConfigChannel+0xc6>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800f058:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800f05a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800f05e:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f062:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800f066:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f06a:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 800f06e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f072:	ea44 048e 	orr.w	r4, r4, lr, lsl #2
 800f076:	e799      	b.n	800efac <HAL_TIM_PWM_ConfigChannel+0x124>
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800f078:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 800f07a:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800f07e:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800f082:	e736      	b.n	800eef2 <HAL_TIM_PWM_ConfigChannel+0x6a>
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800f084:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 800f086:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800f08a:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f08e:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800f092:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f096:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800f09a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f09e:	ea44 140e 	orr.w	r4, r4, lr, lsl #4
 800f0a2:	e7b2      	b.n	800f00a <HAL_TIM_PWM_ConfigChannel+0x182>
 800f0a4:	40010000 	.word	0x40010000

0800f0a8 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800f0a8:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f0ac:	2b01      	cmp	r3, #1
 800f0ae:	d075      	beq.n	800f19c <HAL_TIM_ConfigClockSource+0xf4>
 800f0b0:	4602      	mov	r2, r0
{
 800f0b2:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f0b4:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800f0b6:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f0b8:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800f0bc:	2001      	movs	r0, #1
 800f0be:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800f0c2:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f0c4:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800f0c8:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800f0cc:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800f0ce:	680b      	ldr	r3, [r1, #0]
 800f0d0:	2b60      	cmp	r3, #96	; 0x60
 800f0d2:	d065      	beq.n	800f1a0 <HAL_TIM_ConfigClockSource+0xf8>
 800f0d4:	d824      	bhi.n	800f120 <HAL_TIM_ConfigClockSource+0x78>
 800f0d6:	2b40      	cmp	r3, #64	; 0x40
 800f0d8:	d07c      	beq.n	800f1d4 <HAL_TIM_ConfigClockSource+0x12c>
 800f0da:	d94b      	bls.n	800f174 <HAL_TIM_ConfigClockSource+0xcc>
 800f0dc:	2b50      	cmp	r3, #80	; 0x50
 800f0de:	d117      	bne.n	800f110 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f0e0:	684b      	ldr	r3, [r1, #4]
 800f0e2:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800f0e4:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f0e6:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f0ea:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f0ec:	6a23      	ldr	r3, [r4, #32]
 800f0ee:	f023 0301 	bic.w	r3, r3, #1
 800f0f2:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f0f4:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f0f6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f0fa:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800f0fe:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800f100:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800f102:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800f104:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f108:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800f10c:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800f10e:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800f110:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800f112:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800f114:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f118:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800f11c:	bc30      	pop	{r4, r5}
 800f11e:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800f120:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800f124:	d038      	beq.n	800f198 <HAL_TIM_ConfigClockSource+0xf0>
 800f126:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800f12a:	d110      	bne.n	800f14e <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f12c:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800f130:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f132:	432b      	orrs	r3, r5
 800f134:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f136:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f13a:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800f13e:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800f140:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800f142:	68a3      	ldr	r3, [r4, #8]
 800f144:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800f148:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800f14a:	60a3      	str	r3, [r4, #8]
      break;
 800f14c:	e7e0      	b.n	800f110 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f14e:	2b70      	cmp	r3, #112	; 0x70
 800f150:	d1de      	bne.n	800f110 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f152:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800f156:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f158:	432b      	orrs	r3, r5
 800f15a:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f15c:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f160:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800f164:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800f166:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800f168:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800f16a:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800f16e:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800f170:	60a3      	str	r3, [r4, #8]
      break;
 800f172:	e7cd      	b.n	800f110 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f174:	2b20      	cmp	r3, #32
 800f176:	d002      	beq.n	800f17e <HAL_TIM_ConfigClockSource+0xd6>
 800f178:	d90a      	bls.n	800f190 <HAL_TIM_ConfigClockSource+0xe8>
 800f17a:	2b30      	cmp	r3, #48	; 0x30
 800f17c:	d1c8      	bne.n	800f110 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800f17e:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f180:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f184:	430b      	orrs	r3, r1
 800f186:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800f18a:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f18c:	60a3      	str	r3, [r4, #8]
}
 800f18e:	e7bf      	b.n	800f110 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f190:	f033 0110 	bics.w	r1, r3, #16
 800f194:	d1bc      	bne.n	800f110 <HAL_TIM_ConfigClockSource+0x68>
 800f196:	e7f2      	b.n	800f17e <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800f198:	2000      	movs	r0, #0
 800f19a:	e7b9      	b.n	800f110 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800f19c:	2002      	movs	r0, #2
}
 800f19e:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f1a0:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800f1a2:	6848      	ldr	r0, [r1, #4]
 800f1a4:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f1a6:	f023 0310 	bic.w	r3, r3, #16
 800f1aa:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f1ac:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800f1ae:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800f1b0:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800f1b4:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800f1b8:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800f1bc:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800f1c0:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800f1c2:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800f1c4:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f1c6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f1ca:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800f1ce:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f1d0:	60a3      	str	r3, [r4, #8]
}
 800f1d2:	e79d      	b.n	800f110 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f1d4:	684b      	ldr	r3, [r1, #4]
 800f1d6:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800f1d8:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f1da:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f1de:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f1e0:	6a23      	ldr	r3, [r4, #32]
 800f1e2:	f023 0301 	bic.w	r3, r3, #1
 800f1e6:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f1e8:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f1ea:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f1ee:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800f1f2:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800f1f4:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800f1f6:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f1f8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f1fc:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800f200:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f202:	60a3      	str	r3, [r4, #8]
}
 800f204:	e784      	b.n	800f110 <HAL_TIM_ConfigClockSource+0x68>
 800f206:	bf00      	nop

0800f208 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800f208:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800f20c:	2a01      	cmp	r2, #1
 800f20e:	d050      	beq.n	800f2b2 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800f210:	4603      	mov	r3, r0
{
 800f212:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f214:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800f216:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f218:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800f21c:	2001      	movs	r0, #1
 800f21e:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800f222:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800f224:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800f226:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f228:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800f22c:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800f22e:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800f232:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800f234:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800f236:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800f238:	d060      	beq.n	800f2fc <HAL_TIM_SlaveConfigSynchro+0xf4>
 800f23a:	d90f      	bls.n	800f25c <HAL_TIM_SlaveConfigSynchro+0x54>
 800f23c:	2860      	cmp	r0, #96	; 0x60
 800f23e:	d03a      	beq.n	800f2b6 <HAL_TIM_SlaveConfigSynchro+0xae>
 800f240:	2870      	cmp	r0, #112	; 0x70
 800f242:	d10e      	bne.n	800f262 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f244:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800f248:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f24a:	432a      	orrs	r2, r5
 800f24c:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f24e:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f252:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800f256:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800f258:	60a2      	str	r2, [r4, #8]
 800f25a:	e00f      	b.n	800f27c <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800f25c:	2840      	cmp	r0, #64	; 0x40
 800f25e:	d03d      	beq.n	800f2dc <HAL_TIM_SlaveConfigSynchro+0xd4>
 800f260:	d907      	bls.n	800f272 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800f262:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800f264:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800f266:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800f26a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800f26e:	bc30      	pop	{r4, r5}
 800f270:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800f272:	2820      	cmp	r0, #32
 800f274:	d002      	beq.n	800f27c <HAL_TIM_SlaveConfigSynchro+0x74>
 800f276:	d912      	bls.n	800f29e <HAL_TIM_SlaveConfigSynchro+0x96>
 800f278:	2830      	cmp	r0, #48	; 0x30
 800f27a:	d1f2      	bne.n	800f262 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800f27c:	68e2      	ldr	r2, [r4, #12]
 800f27e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800f282:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800f284:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800f286:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800f288:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800f28a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800f28e:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800f290:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f294:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800f298:	4608      	mov	r0, r1
}
 800f29a:	bc30      	pop	{r4, r5}
 800f29c:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800f29e:	f030 0210 	bics.w	r2, r0, #16
 800f2a2:	d0eb      	beq.n	800f27c <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800f2a4:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800f2a6:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800f2a8:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800f2ac:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800f2b0:	e7dd      	b.n	800f26e <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800f2b2:	2002      	movs	r0, #2
}
 800f2b4:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f2b6:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800f2b8:	6888      	ldr	r0, [r1, #8]
 800f2ba:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f2bc:	f022 0210 	bic.w	r2, r2, #16
 800f2c0:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f2c2:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800f2c4:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800f2c6:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800f2ca:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800f2ce:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800f2d2:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800f2d6:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800f2d8:	6222      	str	r2, [r4, #32]
 800f2da:	e7cf      	b.n	800f27c <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800f2dc:	2d05      	cmp	r5, #5
 800f2de:	d0c0      	beq.n	800f262 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800f2e0:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800f2e2:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800f2e4:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800f2e6:	f022 0201 	bic.w	r2, r2, #1
 800f2ea:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800f2ec:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f2ee:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800f2f2:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800f2f6:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800f2f8:	6220      	str	r0, [r4, #32]
      break;
 800f2fa:	e7bf      	b.n	800f27c <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f2fc:	688a      	ldr	r2, [r1, #8]
 800f2fe:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800f300:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f302:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f306:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f308:	6a22      	ldr	r2, [r4, #32]
 800f30a:	f022 0201 	bic.w	r2, r2, #1
 800f30e:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f310:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f312:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f316:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800f31a:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800f31c:	6221      	str	r1, [r4, #32]
 800f31e:	e7ad      	b.n	800f27c <HAL_TIM_SlaveConfigSynchro+0x74>

0800f320 <HAL_TIM_OC_DelayElapsedCallback>:
 800f320:	4770      	bx	lr
 800f322:	bf00      	nop

0800f324 <HAL_TIM_IC_CaptureCallback>:
 800f324:	4770      	bx	lr
 800f326:	bf00      	nop

0800f328 <HAL_TIM_PWM_PulseFinishedCallback>:
 800f328:	4770      	bx	lr
 800f32a:	bf00      	nop

0800f32c <HAL_TIM_TriggerCallback>:
 800f32c:	4770      	bx	lr
 800f32e:	bf00      	nop

0800f330 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800f330:	6803      	ldr	r3, [r0, #0]
 800f332:	691a      	ldr	r2, [r3, #16]
 800f334:	0791      	lsls	r1, r2, #30
{
 800f336:	b510      	push	{r4, lr}
 800f338:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800f33a:	d502      	bpl.n	800f342 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800f33c:	68da      	ldr	r2, [r3, #12]
 800f33e:	0792      	lsls	r2, r2, #30
 800f340:	d45f      	bmi.n	800f402 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800f342:	691a      	ldr	r2, [r3, #16]
 800f344:	0750      	lsls	r0, r2, #29
 800f346:	d502      	bpl.n	800f34e <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800f348:	68da      	ldr	r2, [r3, #12]
 800f34a:	0751      	lsls	r1, r2, #29
 800f34c:	d446      	bmi.n	800f3dc <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800f34e:	691a      	ldr	r2, [r3, #16]
 800f350:	0712      	lsls	r2, r2, #28
 800f352:	d502      	bpl.n	800f35a <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800f354:	68da      	ldr	r2, [r3, #12]
 800f356:	0710      	lsls	r0, r2, #28
 800f358:	d42e      	bmi.n	800f3b8 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800f35a:	691a      	ldr	r2, [r3, #16]
 800f35c:	06d2      	lsls	r2, r2, #27
 800f35e:	d502      	bpl.n	800f366 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800f360:	68da      	ldr	r2, [r3, #12]
 800f362:	06d0      	lsls	r0, r2, #27
 800f364:	d418      	bmi.n	800f398 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800f366:	691a      	ldr	r2, [r3, #16]
 800f368:	07d1      	lsls	r1, r2, #31
 800f36a:	d502      	bpl.n	800f372 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800f36c:	68da      	ldr	r2, [r3, #12]
 800f36e:	07d2      	lsls	r2, r2, #31
 800f370:	d45d      	bmi.n	800f42e <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800f372:	691a      	ldr	r2, [r3, #16]
 800f374:	0610      	lsls	r0, r2, #24
 800f376:	d502      	bpl.n	800f37e <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800f378:	68da      	ldr	r2, [r3, #12]
 800f37a:	0611      	lsls	r1, r2, #24
 800f37c:	d45f      	bmi.n	800f43e <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800f37e:	691a      	ldr	r2, [r3, #16]
 800f380:	0652      	lsls	r2, r2, #25
 800f382:	d502      	bpl.n	800f38a <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800f384:	68da      	ldr	r2, [r3, #12]
 800f386:	0650      	lsls	r0, r2, #25
 800f388:	d461      	bmi.n	800f44e <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800f38a:	691a      	ldr	r2, [r3, #16]
 800f38c:	0691      	lsls	r1, r2, #26
 800f38e:	d502      	bpl.n	800f396 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800f390:	68da      	ldr	r2, [r3, #12]
 800f392:	0692      	lsls	r2, r2, #26
 800f394:	d443      	bmi.n	800f41e <HAL_TIM_IRQHandler+0xee>
}
 800f396:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800f398:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800f39c:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800f39e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800f3a0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800f3a2:	69db      	ldr	r3, [r3, #28]
 800f3a4:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800f3a8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800f3aa:	d064      	beq.n	800f476 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800f3ac:	f7ff ffba 	bl	800f324 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f3b0:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800f3b2:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f3b4:	7722      	strb	r2, [r4, #28]
 800f3b6:	e7d6      	b.n	800f366 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800f3b8:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800f3bc:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800f3be:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800f3c0:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800f3c2:	69db      	ldr	r3, [r3, #28]
 800f3c4:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800f3c6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800f3c8:	d152      	bne.n	800f470 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f3ca:	f7ff ffa9 	bl	800f320 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f3ce:	4620      	mov	r0, r4
 800f3d0:	f7ff ffaa 	bl	800f328 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f3d4:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800f3d6:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f3d8:	7722      	strb	r2, [r4, #28]
 800f3da:	e7be      	b.n	800f35a <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800f3dc:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800f3e0:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800f3e2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800f3e4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800f3e6:	699b      	ldr	r3, [r3, #24]
 800f3e8:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800f3ec:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800f3ee:	d13c      	bne.n	800f46a <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f3f0:	f7ff ff96 	bl	800f320 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f3f4:	4620      	mov	r0, r4
 800f3f6:	f7ff ff97 	bl	800f328 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f3fa:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800f3fc:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f3fe:	7722      	strb	r2, [r4, #28]
 800f400:	e7a5      	b.n	800f34e <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800f402:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800f406:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800f408:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800f40a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800f40c:	699b      	ldr	r3, [r3, #24]
 800f40e:	079b      	lsls	r3, r3, #30
 800f410:	d025      	beq.n	800f45e <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800f412:	f7ff ff87 	bl	800f324 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f416:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800f418:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f41a:	7722      	strb	r2, [r4, #28]
 800f41c:	e791      	b.n	800f342 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800f41e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800f422:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800f424:	611a      	str	r2, [r3, #16]
}
 800f426:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800f42a:	f000 b86b 	b.w	800f504 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800f42e:	f06f 0201 	mvn.w	r2, #1
 800f432:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800f434:	4620      	mov	r0, r4
 800f436:	f7f2 fcb5 	bl	8001da4 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800f43a:	6823      	ldr	r3, [r4, #0]
 800f43c:	e799      	b.n	800f372 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800f43e:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800f442:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800f444:	4620      	mov	r0, r4
 800f446:	f000 f85f 	bl	800f508 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800f44a:	6823      	ldr	r3, [r4, #0]
 800f44c:	e797      	b.n	800f37e <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800f44e:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800f452:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800f454:	4620      	mov	r0, r4
 800f456:	f7ff ff69 	bl	800f32c <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800f45a:	6823      	ldr	r3, [r4, #0]
 800f45c:	e795      	b.n	800f38a <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800f45e:	f7ff ff5f 	bl	800f320 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f462:	4620      	mov	r0, r4
 800f464:	f7ff ff60 	bl	800f328 <HAL_TIM_PWM_PulseFinishedCallback>
 800f468:	e7d5      	b.n	800f416 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800f46a:	f7ff ff5b 	bl	800f324 <HAL_TIM_IC_CaptureCallback>
 800f46e:	e7c4      	b.n	800f3fa <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800f470:	f7ff ff58 	bl	800f324 <HAL_TIM_IC_CaptureCallback>
 800f474:	e7ae      	b.n	800f3d4 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f476:	f7ff ff53 	bl	800f320 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f47a:	4620      	mov	r0, r4
 800f47c:	f7ff ff54 	bl	800f328 <HAL_TIM_PWM_PulseFinishedCallback>
 800f480:	e796      	b.n	800f3b0 <HAL_TIM_IRQHandler+0x80>
 800f482:	bf00      	nop

0800f484 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800f484:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f488:	2b01      	cmp	r3, #1
 800f48a:	d037      	beq.n	800f4fc <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800f48c:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f48e:	2202      	movs	r2, #2
{
 800f490:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f492:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800f496:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800f498:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800f49a:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800f49c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800f4a0:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800f4a2:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800f4a4:	4a16      	ldr	r2, [pc, #88]	; (800f500 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800f4a6:	4293      	cmp	r3, r2
 800f4a8:	d01a      	beq.n	800f4e0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f4aa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800f4ae:	d017      	beq.n	800f4e0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f4b0:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800f4b4:	4293      	cmp	r3, r2
 800f4b6:	d013      	beq.n	800f4e0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f4b8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800f4bc:	4293      	cmp	r3, r2
 800f4be:	d00f      	beq.n	800f4e0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f4c0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800f4c4:	4293      	cmp	r3, r2
 800f4c6:	d00b      	beq.n	800f4e0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f4c8:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800f4cc:	4293      	cmp	r3, r2
 800f4ce:	d007      	beq.n	800f4e0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f4d0:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800f4d4:	4293      	cmp	r3, r2
 800f4d6:	d003      	beq.n	800f4e0 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f4d8:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800f4dc:	4293      	cmp	r3, r2
 800f4de:	d104      	bne.n	800f4ea <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800f4e0:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800f4e2:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800f4e6:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800f4e8:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800f4ea:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800f4ec:	2201      	movs	r2, #1
 800f4ee:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f4f2:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800f4f6:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800f4f8:	4618      	mov	r0, r3
}
 800f4fa:	4770      	bx	lr
  __HAL_LOCK(htim);
 800f4fc:	2002      	movs	r0, #2
}
 800f4fe:	4770      	bx	lr
 800f500:	40010000 	.word	0x40010000

0800f504 <HAL_TIMEx_CommutCallback>:
 800f504:	4770      	bx	lr
 800f506:	bf00      	nop

0800f508 <HAL_TIMEx_BreakCallback>:
 800f508:	4770      	bx	lr
 800f50a:	bf00      	nop

0800f50c <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800f50c:	680b      	ldr	r3, [r1, #0]
{
 800f50e:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800f510:	b9d3      	cbnz	r3, 800f548 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f512:	6803      	ldr	r3, [r0, #0]
 800f514:	684c      	ldr	r4, [r1, #4]
 800f516:	688a      	ldr	r2, [r1, #8]
 800f518:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800f51c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800f520:	4323      	orrs	r3, r4
 800f522:	4313      	orrs	r3, r2
 800f524:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800f528:	4323      	orrs	r3, r4
 800f52a:	4313      	orrs	r3, r2
 800f52c:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800f530:	4323      	orrs	r3, r4
 800f532:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800f536:	4313      	orrs	r3, r2
 800f538:	432b      	orrs	r3, r5
 800f53a:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800f53c:	4323      	orrs	r3, r4
 800f53e:	4313      	orrs	r3, r2
 800f540:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800f542:	bc30      	pop	{r4, r5}
 800f544:	2000      	movs	r0, #0
 800f546:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f548:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800f54c:	6803      	ldr	r3, [r0, #0]
 800f54e:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800f552:	4323      	orrs	r3, r4
 800f554:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800f556:	4313      	orrs	r3, r2
 800f558:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800f55a:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f55c:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800f55e:	6843      	ldr	r3, [r0, #4]
 800f560:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800f564:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800f568:	4313      	orrs	r3, r2
 800f56a:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800f56e:	4323      	orrs	r3, r4
 800f570:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800f574:	4313      	orrs	r3, r2
 800f576:	432b      	orrs	r3, r5
 800f578:	698a      	ldr	r2, [r1, #24]
 800f57a:	4323      	orrs	r3, r4
 800f57c:	4313      	orrs	r3, r2
 800f57e:	6043      	str	r3, [r0, #4]
}
 800f580:	bc30      	pop	{r4, r5}
 800f582:	2000      	movs	r0, #0
 800f584:	4770      	bx	lr
 800f586:	bf00      	nop

0800f588 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800f588:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f58a:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800f58c:	bb02      	cbnz	r2, 800f5d0 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f58e:	e9d1 2400 	ldrd	r2, r4, [r1]
 800f592:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800f596:	3c01      	subs	r4, #1
 800f598:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800f59c:	3a01      	subs	r2, #1
 800f59e:	4313      	orrs	r3, r2
 800f5a0:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800f5a4:	3c01      	subs	r4, #1
 800f5a6:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800f5aa:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800f5ae:	3a01      	subs	r2, #1
 800f5b0:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800f5b4:	698a      	ldr	r2, [r1, #24]
 800f5b6:	1e69      	subs	r1, r5, #1
 800f5b8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800f5bc:	1e61      	subs	r1, r4, #1
 800f5be:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800f5c2:	3a01      	subs	r2, #1
 800f5c4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800f5c8:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800f5ca:	bc30      	pop	{r4, r5}
 800f5cc:	2000      	movs	r0, #0
 800f5ce:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f5d0:	68cc      	ldr	r4, [r1, #12]
 800f5d2:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800f5d4:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f5d6:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800f5da:	3c01      	subs	r4, #1
 800f5dc:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800f5e0:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800f5e4:	3a01      	subs	r2, #1
 800f5e6:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800f5ea:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800f5ec:	e9d1 2400 	ldrd	r2, r4, [r1]
 800f5f0:	68c3      	ldr	r3, [r0, #12]
 800f5f2:	3c01      	subs	r4, #1
 800f5f4:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800f5f8:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800f5fc:	3a01      	subs	r2, #1
 800f5fe:	690c      	ldr	r4, [r1, #16]
 800f600:	4313      	orrs	r3, r2
 800f602:	698a      	ldr	r2, [r1, #24]
 800f604:	1e69      	subs	r1, r5, #1
 800f606:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800f60a:	1e61      	subs	r1, r4, #1
 800f60c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800f610:	3a01      	subs	r2, #1
 800f612:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800f616:	60c3      	str	r3, [r0, #12]
}
 800f618:	bc30      	pop	{r4, r5}
 800f61a:	2000      	movs	r0, #0
 800f61c:	4770      	bx	lr
 800f61e:	bf00      	nop

0800f620 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800f620:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f622:	680b      	ldr	r3, [r1, #0]
{
 800f624:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f626:	684a      	ldr	r2, [r1, #4]
{
 800f628:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f62a:	4313      	orrs	r3, r2
 800f62c:	6900      	ldr	r0, [r0, #16]
 800f62e:	68ca      	ldr	r2, [r1, #12]
 800f630:	0d80      	lsrs	r0, r0, #22
 800f632:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800f636:	688a      	ldr	r2, [r1, #8]
 800f638:	0580      	lsls	r0, r0, #22
 800f63a:	4303      	orrs	r3, r0
 800f63c:	3a01      	subs	r2, #1
 800f63e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800f642:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800f644:	f7fb fef6 	bl	800b434 <HAL_GetTick>
 800f648:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800f64a:	1c6b      	adds	r3, r5, #1
 800f64c:	d105      	bne.n	800f65a <FMC_SDRAM_SendCommand+0x3a>
 800f64e:	69a3      	ldr	r3, [r4, #24]
 800f650:	f013 0320 	ands.w	r3, r3, #32
 800f654:	d1fb      	bne.n	800f64e <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800f656:	4618      	mov	r0, r3
}
 800f658:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800f65a:	69a3      	ldr	r3, [r4, #24]
 800f65c:	f013 0320 	ands.w	r3, r3, #32
 800f660:	d0f9      	beq.n	800f656 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800f662:	b125      	cbz	r5, 800f66e <FMC_SDRAM_SendCommand+0x4e>
 800f664:	f7fb fee6 	bl	800b434 <HAL_GetTick>
 800f668:	1b80      	subs	r0, r0, r6
 800f66a:	42a8      	cmp	r0, r5
 800f66c:	d9ed      	bls.n	800f64a <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800f66e:	2003      	movs	r0, #3
}
 800f670:	bd70      	pop	{r4, r5, r6, pc}
 800f672:	bf00      	nop

0800f674 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f674:	6943      	ldr	r3, [r0, #20]
 800f676:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800f67a:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f67c:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800f680:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800f684:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f686:	6151      	str	r1, [r2, #20]
}
 800f688:	4770      	bx	lr
 800f68a:	bf00      	nop

0800f68c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800f68c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800f68e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f692:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800f694:	f002 fafe 	bl	8011c94 <xTaskGetSchedulerState>
 800f698:	2801      	cmp	r0, #1
 800f69a:	d100      	bne.n	800f69e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800f69c:	bd08      	pop	{r3, pc}
 800f69e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800f6a2:	f000 bc3f 	b.w	800ff24 <xPortSysTickHandler>
 800f6a6:	bf00      	nop

0800f6a8 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f6a8:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800f6ac:	b92b      	cbnz	r3, 800f6ba <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800f6ae:	4b06      	ldr	r3, [pc, #24]	; (800f6c8 <osKernelInitialize+0x20>)
 800f6b0:	6818      	ldr	r0, [r3, #0]
 800f6b2:	b928      	cbnz	r0, 800f6c0 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800f6b4:	2201      	movs	r2, #1
 800f6b6:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800f6b8:	4770      	bx	lr
    stat = osErrorISR;
 800f6ba:	f06f 0005 	mvn.w	r0, #5
 800f6be:	4770      	bx	lr
    } else {
      stat = osError;
 800f6c0:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800f6c4:	4770      	bx	lr
 800f6c6:	bf00      	nop
 800f6c8:	20002d08 	.word	0x20002d08

0800f6cc <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800f6cc:	b510      	push	{r4, lr}
 800f6ce:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800f6d2:	b974      	cbnz	r4, 800f6f2 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800f6d4:	4b08      	ldr	r3, [pc, #32]	; (800f6f8 <osKernelStart+0x2c>)
 800f6d6:	681a      	ldr	r2, [r3, #0]
 800f6d8:	2a01      	cmp	r2, #1
 800f6da:	d107      	bne.n	800f6ec <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800f6dc:	4907      	ldr	r1, [pc, #28]	; (800f6fc <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800f6de:	2202      	movs	r2, #2
 800f6e0:	77cc      	strb	r4, [r1, #31]
 800f6e2:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800f6e4:	f002 f8b0 	bl	8011848 <vTaskStartScheduler>
      stat = osOK;
 800f6e8:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800f6ea:	bd10      	pop	{r4, pc}
      stat = osError;
 800f6ec:	f04f 30ff 	mov.w	r0, #4294967295
}
 800f6f0:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800f6f2:	f06f 0005 	mvn.w	r0, #5
}
 800f6f6:	bd10      	pop	{r4, pc}
 800f6f8:	20002d08 	.word	0x20002d08
 800f6fc:	e000ed00 	.word	0xe000ed00

0800f700 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800f700:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f702:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800f704:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800f706:	4615      	mov	r5, r2
  hTask = NULL;
 800f708:	9405      	str	r4, [sp, #20]
 800f70a:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800f70e:	b9ea      	cbnz	r2, 800f74c <osThreadNew+0x4c>
 800f710:	b350      	cbz	r0, 800f768 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800f712:	b1f5      	cbz	r5, 800f752 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800f714:	69ab      	ldr	r3, [r5, #24]
 800f716:	bb5b      	cbnz	r3, 800f770 <osThreadNew+0x70>
 800f718:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800f71a:	686a      	ldr	r2, [r5, #4]
 800f71c:	07d2      	lsls	r2, r2, #31
 800f71e:	d423      	bmi.n	800f768 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800f720:	696e      	ldr	r6, [r5, #20]
 800f722:	b34e      	cbz	r6, 800f778 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800f724:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f728:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800f72a:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f72c:	b34c      	cbz	r4, 800f782 <osThreadNew+0x82>
 800f72e:	68ea      	ldr	r2, [r5, #12]
 800f730:	2aab      	cmp	r2, #171	; 0xab
 800f732:	d919      	bls.n	800f768 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800f734:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f736:	b1bd      	cbz	r5, 800f768 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800f738:	b1b6      	cbz	r6, 800f768 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800f73a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800f73e:	9300      	str	r3, [sp, #0]
 800f740:	4662      	mov	r2, ip
 800f742:	460b      	mov	r3, r1
 800f744:	4639      	mov	r1, r7
 800f746:	f001 ffbd 	bl	80116c4 <xTaskCreateStatic>
 800f74a:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800f74c:	4620      	mov	r0, r4
 800f74e:	b007      	add	sp, #28
 800f750:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f752:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800f754:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800f756:	ac05      	add	r4, sp, #20
 800f758:	9300      	str	r3, [sp, #0]
 800f75a:	9401      	str	r4, [sp, #4]
 800f75c:	460b      	mov	r3, r1
 800f75e:	4629      	mov	r1, r5
 800f760:	f001 ffea 	bl	8011738 <xTaskCreate>
 800f764:	2801      	cmp	r0, #1
 800f766:	d00a      	beq.n	800f77e <osThreadNew+0x7e>
        return (NULL);
 800f768:	2400      	movs	r4, #0
}
 800f76a:	4620      	mov	r0, r4
 800f76c:	b007      	add	sp, #28
 800f76e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800f770:	1e5c      	subs	r4, r3, #1
 800f772:	2c37      	cmp	r4, #55	; 0x37
 800f774:	d9d1      	bls.n	800f71a <osThreadNew+0x1a>
 800f776:	e7f7      	b.n	800f768 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800f778:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800f77c:	e7d4      	b.n	800f728 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800f77e:	9c05      	ldr	r4, [sp, #20]
 800f780:	e7e4      	b.n	800f74c <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800f782:	68ee      	ldr	r6, [r5, #12]
 800f784:	2e00      	cmp	r6, #0
 800f786:	d1e1      	bne.n	800f74c <osThreadNew+0x4c>
 800f788:	692d      	ldr	r5, [r5, #16]
 800f78a:	2d00      	cmp	r5, #0
 800f78c:	d1de      	bne.n	800f74c <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800f78e:	fa1f f28c 	uxth.w	r2, ip
 800f792:	463d      	mov	r5, r7
 800f794:	e7df      	b.n	800f756 <osThreadNew+0x56>
 800f796:	bf00      	nop

0800f798 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800f798:	b510      	push	{r4, lr}
 800f79a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800f79e:	b92c      	cbnz	r4, 800f7ac <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800f7a0:	b900      	cbnz	r0, 800f7a4 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800f7a2:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800f7a4:	f001 fffa 	bl	801179c <vTaskDelay>
    stat = osOK;
 800f7a8:	4620      	mov	r0, r4
}
 800f7aa:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800f7ac:	f06f 0005 	mvn.w	r0, #5
}
 800f7b0:	bd10      	pop	{r4, pc}
 800f7b2:	bf00      	nop

0800f7b4 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800f7b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f7b6:	b083      	sub	sp, #12
 800f7b8:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800f7bc:	b9fe      	cbnz	r6, 800f7fe <osSemaphoreNew+0x4a>
 800f7be:	b1f0      	cbz	r0, 800f7fe <osSemaphoreNew+0x4a>
 800f7c0:	4288      	cmp	r0, r1
 800f7c2:	460f      	mov	r7, r1
 800f7c4:	d31b      	bcc.n	800f7fe <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800f7c6:	4615      	mov	r5, r2
 800f7c8:	b192      	cbz	r2, 800f7f0 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800f7ca:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800f7ce:	b1d2      	cbz	r2, 800f806 <osSemaphoreNew+0x52>
 800f7d0:	2b4f      	cmp	r3, #79	; 0x4f
 800f7d2:	d914      	bls.n	800f7fe <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800f7d4:	2801      	cmp	r0, #1
 800f7d6:	d038      	beq.n	800f84a <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800f7d8:	f000 fd8a 	bl	80102f0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800f7dc:	4604      	mov	r4, r0
 800f7de:	b170      	cbz	r0, 800f7fe <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800f7e0:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800f7e2:	4620      	mov	r0, r4
 800f7e4:	4629      	mov	r1, r5
 800f7e6:	f001 fc35 	bl	8011054 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800f7ea:	4620      	mov	r0, r4
 800f7ec:	b003      	add	sp, #12
 800f7ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800f7f0:	2801      	cmp	r0, #1
 800f7f2:	d012      	beq.n	800f81a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800f7f4:	f000 fddc 	bl	80103b0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800f7f8:	4604      	mov	r4, r0
 800f7fa:	2800      	cmp	r0, #0
 800f7fc:	d1f1      	bne.n	800f7e2 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800f7fe:	2400      	movs	r4, #0
}
 800f800:	4620      	mov	r0, r4
 800f802:	b003      	add	sp, #12
 800f804:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800f806:	2b00      	cmp	r3, #0
 800f808:	d1f9      	bne.n	800f7fe <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800f80a:	2801      	cmp	r0, #1
 800f80c:	d005      	beq.n	800f81a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800f80e:	f000 fdcf 	bl	80103b0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800f812:	4604      	mov	r4, r0
 800f814:	2800      	cmp	r0, #0
 800f816:	d1e3      	bne.n	800f7e0 <osSemaphoreNew+0x2c>
 800f818:	e7f1      	b.n	800f7fe <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800f81a:	2203      	movs	r2, #3
 800f81c:	2100      	movs	r1, #0
 800f81e:	2001      	movs	r0, #1
 800f820:	f000 fd24 	bl	801026c <xQueueGenericCreate>
 800f824:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800f826:	2c00      	cmp	r4, #0
 800f828:	d0e9      	beq.n	800f7fe <osSemaphoreNew+0x4a>
 800f82a:	b917      	cbnz	r7, 800f832 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800f82c:	2d00      	cmp	r5, #0
 800f82e:	d1d7      	bne.n	800f7e0 <osSemaphoreNew+0x2c>
 800f830:	e7d7      	b.n	800f7e2 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800f832:	2300      	movs	r3, #0
 800f834:	461a      	mov	r2, r3
 800f836:	4619      	mov	r1, r3
 800f838:	4620      	mov	r0, r4
 800f83a:	f000 fdff 	bl	801043c <xQueueGenericSend>
 800f83e:	2801      	cmp	r0, #1
 800f840:	d0f4      	beq.n	800f82c <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800f842:	4620      	mov	r0, r4
 800f844:	f001 fbc0 	bl	8010fc8 <vQueueDelete>
 800f848:	e7d9      	b.n	800f7fe <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800f84a:	4613      	mov	r3, r2
 800f84c:	2203      	movs	r2, #3
 800f84e:	9200      	str	r2, [sp, #0]
 800f850:	4631      	mov	r1, r6
 800f852:	4632      	mov	r2, r6
 800f854:	f000 fc9c 	bl	8010190 <xQueueGenericCreateStatic>
 800f858:	4604      	mov	r4, r0
 800f85a:	e7e4      	b.n	800f826 <osSemaphoreNew+0x72>

0800f85c <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800f85c:	b370      	cbz	r0, 800f8bc <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800f85e:	b510      	push	{r4, lr}
 800f860:	460c      	mov	r4, r1
 800f862:	b082      	sub	sp, #8
 800f864:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800f868:	b1c3      	cbz	r3, 800f89c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800f86a:	bb21      	cbnz	r1, 800f8b6 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800f86c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800f86e:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800f870:	f001 fb28 	bl	8010ec4 <xQueueReceiveFromISR>
 800f874:	2801      	cmp	r0, #1
 800f876:	d11a      	bne.n	800f8ae <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800f878:	9b01      	ldr	r3, [sp, #4]
 800f87a:	b913      	cbnz	r3, 800f882 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800f87c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800f87e:	b002      	add	sp, #8
 800f880:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800f882:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f886:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f88a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f88e:	f3bf 8f4f 	dsb	sy
 800f892:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800f896:	4620      	mov	r0, r4
}
 800f898:	b002      	add	sp, #8
 800f89a:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800f89c:	f001 f988 	bl	8010bb0 <xQueueSemaphoreTake>
 800f8a0:	2801      	cmp	r0, #1
 800f8a2:	d0eb      	beq.n	800f87c <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800f8a4:	b11c      	cbz	r4, 800f8ae <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800f8a6:	f06f 0001 	mvn.w	r0, #1
}
 800f8aa:	b002      	add	sp, #8
 800f8ac:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800f8ae:	f06f 0002 	mvn.w	r0, #2
}
 800f8b2:	b002      	add	sp, #8
 800f8b4:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800f8b6:	f06f 0003 	mvn.w	r0, #3
 800f8ba:	e7e0      	b.n	800f87e <osSemaphoreAcquire+0x22>
 800f8bc:	f06f 0003 	mvn.w	r0, #3
}
 800f8c0:	4770      	bx	lr
 800f8c2:	bf00      	nop

0800f8c4 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800f8c4:	b330      	cbz	r0, 800f914 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800f8c6:	b510      	push	{r4, lr}
 800f8c8:	b082      	sub	sp, #8
 800f8ca:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800f8ce:	b1ab      	cbz	r3, 800f8fc <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800f8d0:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800f8d2:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800f8d4:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800f8d6:	f000 ff95 	bl	8010804 <xQueueGiveFromISR>
 800f8da:	2801      	cmp	r0, #1
 800f8dc:	d117      	bne.n	800f90e <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800f8de:	9b01      	ldr	r3, [sp, #4]
 800f8e0:	b193      	cbz	r3, 800f908 <osSemaphoreRelease+0x44>
 800f8e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f8e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f8ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f8ee:	f3bf 8f4f 	dsb	sy
 800f8f2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800f8f6:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800f8f8:	b002      	add	sp, #8
 800f8fa:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800f8fc:	461a      	mov	r2, r3
 800f8fe:	4619      	mov	r1, r3
 800f900:	f000 fd9c 	bl	801043c <xQueueGenericSend>
 800f904:	2801      	cmp	r0, #1
 800f906:	d102      	bne.n	800f90e <osSemaphoreRelease+0x4a>
  stat = osOK;
 800f908:	2000      	movs	r0, #0
}
 800f90a:	b002      	add	sp, #8
 800f90c:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800f90e:	f06f 0002 	mvn.w	r0, #2
 800f912:	e7fa      	b.n	800f90a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800f914:	f06f 0003 	mvn.w	r0, #3
}
 800f918:	4770      	bx	lr
 800f91a:	bf00      	nop

0800f91c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800f91c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f91e:	b085      	sub	sp, #20
 800f920:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800f924:	b987      	cbnz	r7, 800f948 <osMessageQueueNew+0x2c>
 800f926:	4605      	mov	r5, r0
 800f928:	b170      	cbz	r0, 800f948 <osMessageQueueNew+0x2c>
 800f92a:	b169      	cbz	r1, 800f948 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800f92c:	4614      	mov	r4, r2
 800f92e:	b1ea      	cbz	r2, 800f96c <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800f930:	6893      	ldr	r3, [r2, #8]
 800f932:	b163      	cbz	r3, 800f94e <osMessageQueueNew+0x32>
 800f934:	68d2      	ldr	r2, [r2, #12]
 800f936:	2a4f      	cmp	r2, #79	; 0x4f
 800f938:	d906      	bls.n	800f948 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800f93a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800f93c:	b122      	cbz	r2, 800f948 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800f93e:	6966      	ldr	r6, [r4, #20]
 800f940:	fb01 f505 	mul.w	r5, r1, r5
 800f944:	42ae      	cmp	r6, r5
 800f946:	d21c      	bcs.n	800f982 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800f948:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800f94a:	b005      	add	sp, #20
 800f94c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800f94e:	68d3      	ldr	r3, [r2, #12]
 800f950:	2b00      	cmp	r3, #0
 800f952:	d1f9      	bne.n	800f948 <osMessageQueueNew+0x2c>
 800f954:	6913      	ldr	r3, [r2, #16]
 800f956:	2b00      	cmp	r3, #0
 800f958:	d1f6      	bne.n	800f948 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800f95a:	6952      	ldr	r2, [r2, #20]
 800f95c:	2a00      	cmp	r2, #0
 800f95e:	d1f3      	bne.n	800f948 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800f960:	f000 fc84 	bl	801026c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800f964:	2800      	cmp	r0, #0
 800f966:	d0ef      	beq.n	800f948 <osMessageQueueNew+0x2c>
        name = attr->name;
 800f968:	6824      	ldr	r4, [r4, #0]
 800f96a:	e003      	b.n	800f974 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800f96c:	f000 fc7e 	bl	801026c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800f970:	2800      	cmp	r0, #0
 800f972:	d0e9      	beq.n	800f948 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800f974:	4621      	mov	r1, r4
 800f976:	9003      	str	r0, [sp, #12]
 800f978:	f001 fb6c 	bl	8011054 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800f97c:	9803      	ldr	r0, [sp, #12]
}
 800f97e:	b005      	add	sp, #20
 800f980:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800f982:	9700      	str	r7, [sp, #0]
 800f984:	f000 fc04 	bl	8010190 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800f988:	2800      	cmp	r0, #0
 800f98a:	d1ed      	bne.n	800f968 <osMessageQueueNew+0x4c>
 800f98c:	e7dc      	b.n	800f948 <osMessageQueueNew+0x2c>
 800f98e:	bf00      	nop

0800f990 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800f990:	b570      	push	{r4, r5, r6, lr}
 800f992:	461c      	mov	r4, r3
 800f994:	b082      	sub	sp, #8
 800f996:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800f99a:	b1be      	cbz	r6, 800f9cc <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800f99c:	b350      	cbz	r0, 800f9f4 <osMessageQueuePut+0x64>
 800f99e:	b349      	cbz	r1, 800f9f4 <osMessageQueuePut+0x64>
 800f9a0:	bb43      	cbnz	r3, 800f9f4 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800f9a2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800f9a4:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800f9a6:	f000 fec7 	bl	8010738 <xQueueGenericSendFromISR>
 800f9aa:	2801      	cmp	r0, #1
 800f9ac:	d11e      	bne.n	800f9ec <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800f9ae:	9b01      	ldr	r3, [sp, #4]
 800f9b0:	b1cb      	cbz	r3, 800f9e6 <osMessageQueuePut+0x56>
 800f9b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f9b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f9ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f9be:	f3bf 8f4f 	dsb	sy
 800f9c2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800f9c6:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800f9c8:	b002      	add	sp, #8
 800f9ca:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800f9cc:	b190      	cbz	r0, 800f9f4 <osMessageQueuePut+0x64>
 800f9ce:	b189      	cbz	r1, 800f9f4 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800f9d0:	4633      	mov	r3, r6
 800f9d2:	4622      	mov	r2, r4
 800f9d4:	f000 fd32 	bl	801043c <xQueueGenericSend>
 800f9d8:	2801      	cmp	r0, #1
 800f9da:	d004      	beq.n	800f9e6 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800f9dc:	b134      	cbz	r4, 800f9ec <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800f9de:	f06f 0001 	mvn.w	r0, #1
}
 800f9e2:	b002      	add	sp, #8
 800f9e4:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800f9e6:	2000      	movs	r0, #0
}
 800f9e8:	b002      	add	sp, #8
 800f9ea:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800f9ec:	f06f 0002 	mvn.w	r0, #2
}
 800f9f0:	b002      	add	sp, #8
 800f9f2:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800f9f4:	f06f 0003 	mvn.w	r0, #3
 800f9f8:	e7e6      	b.n	800f9c8 <osMessageQueuePut+0x38>
 800f9fa:	bf00      	nop

0800f9fc <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800f9fc:	b530      	push	{r4, r5, lr}
 800f9fe:	461c      	mov	r4, r3
 800fa00:	b083      	sub	sp, #12
 800fa02:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800fa06:	b1bb      	cbz	r3, 800fa38 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800fa08:	b348      	cbz	r0, 800fa5e <osMessageQueueGet+0x62>
 800fa0a:	b341      	cbz	r1, 800fa5e <osMessageQueueGet+0x62>
 800fa0c:	bb3c      	cbnz	r4, 800fa5e <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800fa0e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800fa10:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800fa12:	f001 fa57 	bl	8010ec4 <xQueueReceiveFromISR>
 800fa16:	2801      	cmp	r0, #1
 800fa18:	d11d      	bne.n	800fa56 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fa1a:	9b01      	ldr	r3, [sp, #4]
 800fa1c:	b1c3      	cbz	r3, 800fa50 <osMessageQueueGet+0x54>
 800fa1e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fa22:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fa26:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fa2a:	f3bf 8f4f 	dsb	sy
 800fa2e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fa32:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800fa34:	b003      	add	sp, #12
 800fa36:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800fa38:	b188      	cbz	r0, 800fa5e <osMessageQueueGet+0x62>
 800fa3a:	b181      	cbz	r1, 800fa5e <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800fa3c:	4622      	mov	r2, r4
 800fa3e:	f000 ff39 	bl	80108b4 <xQueueReceive>
 800fa42:	2801      	cmp	r0, #1
 800fa44:	d004      	beq.n	800fa50 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800fa46:	b134      	cbz	r4, 800fa56 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800fa48:	f06f 0001 	mvn.w	r0, #1
}
 800fa4c:	b003      	add	sp, #12
 800fa4e:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800fa50:	2000      	movs	r0, #0
}
 800fa52:	b003      	add	sp, #12
 800fa54:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800fa56:	f06f 0002 	mvn.w	r0, #2
}
 800fa5a:	b003      	add	sp, #12
 800fa5c:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800fa5e:	f06f 0003 	mvn.w	r0, #3
 800fa62:	e7e7      	b.n	800fa34 <osMessageQueueGet+0x38>

0800fa64 <osMessageQueueGetCount>:
 800fa64:	b130      	cbz	r0, 800fa74 <osMessageQueueGetCount+0x10>
 800fa66:	f3ef 8305 	mrs	r3, IPSR
 800fa6a:	b10b      	cbz	r3, 800fa70 <osMessageQueueGetCount+0xc>
 800fa6c:	f001 ba9e 	b.w	8010fac <uxQueueMessagesWaitingFromISR>
 800fa70:	f001 ba86 	b.w	8010f80 <uxQueueMessagesWaiting>
 800fa74:	4770      	bx	lr
 800fa76:	bf00      	nop

0800fa78 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800fa78:	4b04      	ldr	r3, [pc, #16]	; (800fa8c <vApplicationGetIdleTaskMemory+0x14>)
 800fa7a:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800fa7c:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800fa7e:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800fa80:	4c03      	ldr	r4, [pc, #12]	; (800fa90 <vApplicationGetIdleTaskMemory+0x18>)
 800fa82:	600c      	str	r4, [r1, #0]
}
 800fa84:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800fa88:	6013      	str	r3, [r2, #0]
}
 800fa8a:	4770      	bx	lr
 800fa8c:	20002c5c 	.word	0x20002c5c
 800fa90:	20002a5c 	.word	0x20002a5c

0800fa94 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800fa94:	4b05      	ldr	r3, [pc, #20]	; (800faac <vApplicationGetTimerTaskMemory+0x18>)
 800fa96:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800fa98:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800fa9a:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800fa9e:	4c04      	ldr	r4, [pc, #16]	; (800fab0 <vApplicationGetTimerTaskMemory+0x1c>)
 800faa0:	600c      	str	r4, [r1, #0]
}
 800faa2:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800faa6:	6013      	str	r3, [r2, #0]
}
 800faa8:	4770      	bx	lr
 800faaa:	bf00      	nop
 800faac:	2000310c 	.word	0x2000310c
 800fab0:	20002d0c 	.word	0x20002d0c

0800fab4 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800fab4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fab8:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800faba:	f001 ff41 	bl	8011940 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800fabe:	4a54      	ldr	r2, [pc, #336]	; (800fc10 <pvPortMalloc+0x15c>)
 800fac0:	6816      	ldr	r6, [r2, #0]
 800fac2:	2e00      	cmp	r6, #0
 800fac4:	d06e      	beq.n	800fba4 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800fac6:	4b53      	ldr	r3, [pc, #332]	; (800fc14 <pvPortMalloc+0x160>)
 800fac8:	681f      	ldr	r7, [r3, #0]
 800faca:	423d      	tst	r5, r7
 800facc:	d12e      	bne.n	800fb2c <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800face:	b36d      	cbz	r5, 800fb2c <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800fad0:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800fad4:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800fad6:	bf1c      	itt	ne
 800fad8:	f024 0407 	bicne.w	r4, r4, #7
 800fadc:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800fade:	b32c      	cbz	r4, 800fb2c <pvPortMalloc+0x78>
 800fae0:	f8df c144 	ldr.w	ip, [pc, #324]	; 800fc28 <pvPortMalloc+0x174>
 800fae4:	f8dc 5000 	ldr.w	r5, [ip]
 800fae8:	42a5      	cmp	r5, r4
 800faea:	d31f      	bcc.n	800fb2c <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800faec:	484a      	ldr	r0, [pc, #296]	; (800fc18 <pvPortMalloc+0x164>)
 800faee:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800faf0:	e003      	b.n	800fafa <pvPortMalloc+0x46>
 800faf2:	681a      	ldr	r2, [r3, #0]
 800faf4:	b122      	cbz	r2, 800fb00 <pvPortMalloc+0x4c>
 800faf6:	4618      	mov	r0, r3
 800faf8:	4613      	mov	r3, r2
 800fafa:	6859      	ldr	r1, [r3, #4]
 800fafc:	42a1      	cmp	r1, r4
 800fafe:	d3f8      	bcc.n	800faf2 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800fb00:	42b3      	cmp	r3, r6
 800fb02:	d013      	beq.n	800fb2c <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800fb04:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800fb06:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800fb08:	f858 eb08 	ldr.w	lr, [r8], #8
 800fb0c:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800fb10:	2a10      	cmp	r2, #16
 800fb12:	d929      	bls.n	800fb68 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800fb14:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800fb16:	0748      	lsls	r0, r1, #29
 800fb18:	d00f      	beq.n	800fb3a <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800fb1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb1e:	f383 8811 	msr	BASEPRI, r3
 800fb22:	f3bf 8f6f 	isb	sy
 800fb26:	f3bf 8f4f 	dsb	sy
 800fb2a:	e7fe      	b.n	800fb2a <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800fb2c:	f001 ff10 	bl	8011950 <xTaskResumeAll>
 800fb30:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800fb34:	4640      	mov	r0, r8
 800fb36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800fb3a:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fb3c:	4a36      	ldr	r2, [pc, #216]	; (800fc18 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800fb3e:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fb40:	4614      	mov	r4, r2
 800fb42:	6812      	ldr	r2, [r2, #0]
 800fb44:	4291      	cmp	r1, r2
 800fb46:	d8fb      	bhi.n	800fb40 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800fb48:	6860      	ldr	r0, [r4, #4]
 800fb4a:	eb04 0e00 	add.w	lr, r4, r0
 800fb4e:	4571      	cmp	r1, lr
 800fb50:	d04b      	beq.n	800fbea <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fb52:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fb56:	eb01 000e 	add.w	r0, r1, lr
 800fb5a:	4282      	cmp	r2, r0
 800fb5c:	d051      	beq.n	800fc02 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800fb5e:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fb60:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800fb62:	bf18      	it	ne
 800fb64:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fb66:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800fb68:	4a2c      	ldr	r2, [pc, #176]	; (800fc1c <pvPortMalloc+0x168>)
 800fb6a:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fb6c:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800fb6e:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800fb70:	bf38      	it	cc
 800fb72:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800fb74:	4a2a      	ldr	r2, [pc, #168]	; (800fc20 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fb76:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800fb7a:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800fb7c:	2000      	movs	r0, #0
 800fb7e:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800fb82:	6813      	ldr	r3, [r2, #0]
 800fb84:	3301      	adds	r3, #1
 800fb86:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800fb88:	f001 fee2 	bl	8011950 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800fb8c:	f018 0f07 	tst.w	r8, #7
 800fb90:	d0d0      	beq.n	800fb34 <pvPortMalloc+0x80>
 800fb92:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb96:	f383 8811 	msr	BASEPRI, r3
 800fb9a:	f3bf 8f6f 	isb	sy
 800fb9e:	f3bf 8f4f 	dsb	sy
 800fba2:	e7fe      	b.n	800fba2 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800fba4:	4b1f      	ldr	r3, [pc, #124]	; (800fc24 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800fba6:	075e      	lsls	r6, r3, #29
 800fba8:	d118      	bne.n	800fbdc <pvPortMalloc+0x128>
 800fbaa:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800fbae:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800fbb0:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800fbb2:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800fbb6:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fbb8:	4a18      	ldr	r2, [pc, #96]	; (800fc1c <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800fbba:	4817      	ldr	r0, [pc, #92]	; (800fc18 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fbbc:	4c15      	ldr	r4, [pc, #84]	; (800fc14 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800fbbe:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800fbc0:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fbc2:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fbc4:	4a18      	ldr	r2, [pc, #96]	; (800fc28 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fbc6:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fbca:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800fbcc:	2200      	movs	r2, #0
 800fbce:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fbd0:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800fbd2:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800fbd6:	e9c1 6300 	strd	r6, r3, [r1]
}
 800fbda:	e776      	b.n	800faca <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800fbdc:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800fbde:	f021 0107 	bic.w	r1, r1, #7
 800fbe2:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800fbe6:	460b      	mov	r3, r1
 800fbe8:	e7e2      	b.n	800fbb0 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fbea:	6849      	ldr	r1, [r1, #4]
 800fbec:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fbf0:	eb04 010e 	add.w	r1, r4, lr
 800fbf4:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fbf6:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fbfa:	d001      	beq.n	800fc00 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fbfc:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800fbfe:	e7b2      	b.n	800fb66 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fc00:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800fc02:	42b2      	cmp	r2, r6
 800fc04:	d0ab      	beq.n	800fb5e <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fc06:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fc08:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fc0a:	4470      	add	r0, lr
 800fc0c:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fc0e:	e7a6      	b.n	800fb5e <pvPortMalloc+0xaa>
 800fc10:	200031b8 	.word	0x200031b8
 800fc14:	200131bc 	.word	0x200131bc
 800fc18:	200131d0 	.word	0x200131d0
 800fc1c:	200131c4 	.word	0x200131c4
 800fc20:	200131c8 	.word	0x200131c8
 800fc24:	200031bc 	.word	0x200031bc
 800fc28:	200131c0 	.word	0x200131c0

0800fc2c <vPortFree>:
	if( pv != NULL )
 800fc2c:	b1d0      	cbz	r0, 800fc64 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800fc2e:	4a2c      	ldr	r2, [pc, #176]	; (800fce0 <vPortFree+0xb4>)
 800fc30:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800fc34:	6812      	ldr	r2, [r2, #0]
 800fc36:	4213      	tst	r3, r2
 800fc38:	d00b      	beq.n	800fc52 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800fc3a:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800fc3e:	b191      	cbz	r1, 800fc66 <vPortFree+0x3a>
 800fc40:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc44:	f383 8811 	msr	BASEPRI, r3
 800fc48:	f3bf 8f6f 	isb	sy
 800fc4c:	f3bf 8f4f 	dsb	sy
 800fc50:	e7fe      	b.n	800fc50 <vPortFree+0x24>
 800fc52:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc56:	f383 8811 	msr	BASEPRI, r3
 800fc5a:	f3bf 8f6f 	isb	sy
 800fc5e:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800fc62:	e7fe      	b.n	800fc62 <vPortFree+0x36>
 800fc64:	4770      	bx	lr
{
 800fc66:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800fc68:	ea23 0302 	bic.w	r3, r3, r2
{
 800fc6c:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800fc6e:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fc72:	4c1c      	ldr	r4, [pc, #112]	; (800fce4 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800fc74:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800fc76:	f001 fe63 	bl	8011940 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fc7a:	9801      	ldr	r0, [sp, #4]
 800fc7c:	6822      	ldr	r2, [r4, #0]
 800fc7e:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fc82:	4b19      	ldr	r3, [pc, #100]	; (800fce8 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fc84:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800fc86:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fc88:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fc8a:	461a      	mov	r2, r3
 800fc8c:	681b      	ldr	r3, [r3, #0]
 800fc8e:	4298      	cmp	r0, r3
 800fc90:	d8fb      	bhi.n	800fc8a <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800fc92:	6854      	ldr	r4, [r2, #4]
 800fc94:	eb02 0e04 	add.w	lr, r2, r4
 800fc98:	4570      	cmp	r0, lr
 800fc9a:	d010      	beq.n	800fcbe <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fc9c:	eb00 0c01 	add.w	ip, r0, r1
 800fca0:	4563      	cmp	r3, ip
 800fca2:	d014      	beq.n	800fcce <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800fca4:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fca6:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800fca8:	bf18      	it	ne
 800fcaa:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800fcac:	4a0f      	ldr	r2, [pc, #60]	; (800fcec <vPortFree+0xc0>)
 800fcae:	6813      	ldr	r3, [r2, #0]
 800fcb0:	3301      	adds	r3, #1
 800fcb2:	6013      	str	r3, [r2, #0]
}
 800fcb4:	b002      	add	sp, #8
 800fcb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800fcba:	f001 be49 	b.w	8011950 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fcbe:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fcc0:	1850      	adds	r0, r2, r1
 800fcc2:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fcc4:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fcc6:	d001      	beq.n	800fccc <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fcc8:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800fcca:	e7ef      	b.n	800fcac <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fccc:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800fcce:	4c08      	ldr	r4, [pc, #32]	; (800fcf0 <vPortFree+0xc4>)
 800fcd0:	6824      	ldr	r4, [r4, #0]
 800fcd2:	42a3      	cmp	r3, r4
 800fcd4:	d0e6      	beq.n	800fca4 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fcd6:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fcda:	4421      	add	r1, r4
 800fcdc:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fcde:	e7e1      	b.n	800fca4 <vPortFree+0x78>
 800fce0:	200131bc 	.word	0x200131bc
 800fce4:	200131c0 	.word	0x200131c0
 800fce8:	200131d0 	.word	0x200131d0
 800fcec:	200131cc 	.word	0x200131cc
 800fcf0:	200031b8 	.word	0x200031b8

0800fcf4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800fcf4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800fcf8:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800fcfc:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800fcfe:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800fd02:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800fd06:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800fd08:	4770      	bx	lr
 800fd0a:	bf00      	nop

0800fd0c <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800fd0c:	2300      	movs	r3, #0
 800fd0e:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800fd10:	4770      	bx	lr
 800fd12:	bf00      	nop

0800fd14 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800fd14:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800fd16:	689a      	ldr	r2, [r3, #8]
 800fd18:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800fd1a:	6802      	ldr	r2, [r0, #0]
{
 800fd1c:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800fd1e:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800fd20:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800fd22:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800fd24:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800fd26:	6099      	str	r1, [r3, #8]
}
 800fd28:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800fd2c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800fd2e:	6002      	str	r2, [r0, #0]
}
 800fd30:	4770      	bx	lr
 800fd32:	bf00      	nop

0800fd34 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800fd34:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800fd36:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800fd38:	1c6b      	adds	r3, r5, #1
 800fd3a:	d010      	beq.n	800fd5e <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800fd3c:	f100 0308 	add.w	r3, r0, #8
 800fd40:	461c      	mov	r4, r3
 800fd42:	685b      	ldr	r3, [r3, #4]
 800fd44:	681a      	ldr	r2, [r3, #0]
 800fd46:	42aa      	cmp	r2, r5
 800fd48:	d9fa      	bls.n	800fd40 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800fd4a:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800fd4c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800fd4e:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800fd50:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800fd52:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800fd54:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800fd56:	6108      	str	r0, [r1, #16]
}
 800fd58:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800fd5a:	6002      	str	r2, [r0, #0]
}
 800fd5c:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800fd5e:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800fd60:	6863      	ldr	r3, [r4, #4]
 800fd62:	e7f2      	b.n	800fd4a <vListInsert+0x16>

0800fd64 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800fd64:	6903      	ldr	r3, [r0, #16]
{
 800fd66:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800fd68:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800fd6c:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800fd6e:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800fd70:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800fd72:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800fd74:	bf08      	it	eq
 800fd76:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800fd78:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800fd7a:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800fd7e:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800fd80:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800fd82:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800fd84:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800fd86:	6818      	ldr	r0, [r3, #0]
}
 800fd88:	4770      	bx	lr
 800fd8a:	bf00      	nop

0800fd8c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800fd8c:	4808      	ldr	r0, [pc, #32]	; (800fdb0 <prvPortStartFirstTask+0x24>)
 800fd8e:	6800      	ldr	r0, [r0, #0]
 800fd90:	6800      	ldr	r0, [r0, #0]
 800fd92:	f380 8808 	msr	MSP, r0
 800fd96:	f04f 0000 	mov.w	r0, #0
 800fd9a:	f380 8814 	msr	CONTROL, r0
 800fd9e:	b662      	cpsie	i
 800fda0:	b661      	cpsie	f
 800fda2:	f3bf 8f4f 	dsb	sy
 800fda6:	f3bf 8f6f 	isb	sy
 800fdaa:	df00      	svc	0
 800fdac:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800fdae:	0000      	.short	0x0000
 800fdb0:	e000ed08 	.word	0xe000ed08

0800fdb4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800fdb4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800fdc4 <vPortEnableVFP+0x10>
 800fdb8:	6801      	ldr	r1, [r0, #0]
 800fdba:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800fdbe:	6001      	str	r1, [r0, #0]
 800fdc0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800fdc2:	0000      	.short	0x0000
 800fdc4:	e000ed88 	.word	0xe000ed88

0800fdc8 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800fdc8:	4b0e      	ldr	r3, [pc, #56]	; (800fe04 <prvTaskExitError+0x3c>)
 800fdca:	681b      	ldr	r3, [r3, #0]
{
 800fdcc:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800fdce:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800fdd0:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800fdd2:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800fdd4:	d008      	beq.n	800fde8 <prvTaskExitError+0x20>
 800fdd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdda:	f383 8811 	msr	BASEPRI, r3
 800fdde:	f3bf 8f6f 	isb	sy
 800fde2:	f3bf 8f4f 	dsb	sy
 800fde6:	e7fe      	b.n	800fde6 <prvTaskExitError+0x1e>
 800fde8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdec:	f383 8811 	msr	BASEPRI, r3
 800fdf0:	f3bf 8f6f 	isb	sy
 800fdf4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800fdf8:	9b01      	ldr	r3, [sp, #4]
 800fdfa:	2b00      	cmp	r3, #0
 800fdfc:	d0fc      	beq.n	800fdf8 <prvTaskExitError+0x30>
}
 800fdfe:	b002      	add	sp, #8
 800fe00:	4770      	bx	lr
 800fe02:	bf00      	nop
 800fe04:	20000088 	.word	0x20000088

0800fe08 <pxPortInitialiseStack>:
{
 800fe08:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800fe0a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800fe0e:	4c07      	ldr	r4, [pc, #28]	; (800fe2c <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800fe10:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800fe14:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800fe18:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800fe1c:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800fe20:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800fe24:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fe28:	3844      	subs	r0, #68	; 0x44
 800fe2a:	4770      	bx	lr
 800fe2c:	0800fdc9 	.word	0x0800fdc9

0800fe30 <SVC_Handler>:
	__asm volatile (
 800fe30:	4b07      	ldr	r3, [pc, #28]	; (800fe50 <pxCurrentTCBConst2>)
 800fe32:	6819      	ldr	r1, [r3, #0]
 800fe34:	6808      	ldr	r0, [r1, #0]
 800fe36:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe3a:	f380 8809 	msr	PSP, r0
 800fe3e:	f3bf 8f6f 	isb	sy
 800fe42:	f04f 0000 	mov.w	r0, #0
 800fe46:	f380 8811 	msr	BASEPRI, r0
 800fe4a:	4770      	bx	lr
 800fe4c:	f3af 8000 	nop.w

0800fe50 <pxCurrentTCBConst2>:
 800fe50:	20013220 	.word	0x20013220

0800fe54 <vPortEnterCritical>:
 800fe54:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe58:	f383 8811 	msr	BASEPRI, r3
 800fe5c:	f3bf 8f6f 	isb	sy
 800fe60:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800fe64:	4a0b      	ldr	r2, [pc, #44]	; (800fe94 <vPortEnterCritical+0x40>)
 800fe66:	6813      	ldr	r3, [r2, #0]
 800fe68:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800fe6a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800fe6c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800fe6e:	d000      	beq.n	800fe72 <vPortEnterCritical+0x1e>
}
 800fe70:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800fe72:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fe76:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800fe7a:	b2db      	uxtb	r3, r3
 800fe7c:	2b00      	cmp	r3, #0
 800fe7e:	d0f7      	beq.n	800fe70 <vPortEnterCritical+0x1c>
 800fe80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe84:	f383 8811 	msr	BASEPRI, r3
 800fe88:	f3bf 8f6f 	isb	sy
 800fe8c:	f3bf 8f4f 	dsb	sy
 800fe90:	e7fe      	b.n	800fe90 <vPortEnterCritical+0x3c>
 800fe92:	bf00      	nop
 800fe94:	20000088 	.word	0x20000088

0800fe98 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800fe98:	4a08      	ldr	r2, [pc, #32]	; (800febc <vPortExitCritical+0x24>)
 800fe9a:	6813      	ldr	r3, [r2, #0]
 800fe9c:	b943      	cbnz	r3, 800feb0 <vPortExitCritical+0x18>
 800fe9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fea2:	f383 8811 	msr	BASEPRI, r3
 800fea6:	f3bf 8f6f 	isb	sy
 800feaa:	f3bf 8f4f 	dsb	sy
 800feae:	e7fe      	b.n	800feae <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800feb0:	3b01      	subs	r3, #1
 800feb2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800feb4:	b90b      	cbnz	r3, 800feba <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800feb6:	f383 8811 	msr	BASEPRI, r3
}
 800feba:	4770      	bx	lr
 800febc:	20000088 	.word	0x20000088

0800fec0 <PendSV_Handler>:
	__asm volatile
 800fec0:	f3ef 8009 	mrs	r0, PSP
 800fec4:	f3bf 8f6f 	isb	sy
 800fec8:	4b15      	ldr	r3, [pc, #84]	; (800ff20 <pxCurrentTCBConst>)
 800feca:	681a      	ldr	r2, [r3, #0]
 800fecc:	f01e 0f10 	tst.w	lr, #16
 800fed0:	bf08      	it	eq
 800fed2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800fed6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800feda:	6010      	str	r0, [r2, #0]
 800fedc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800fee0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800fee4:	f380 8811 	msr	BASEPRI, r0
 800fee8:	f3bf 8f4f 	dsb	sy
 800feec:	f3bf 8f6f 	isb	sy
 800fef0:	f001 fd54 	bl	801199c <vTaskSwitchContext>
 800fef4:	f04f 0000 	mov.w	r0, #0
 800fef8:	f380 8811 	msr	BASEPRI, r0
 800fefc:	bc09      	pop	{r0, r3}
 800fefe:	6819      	ldr	r1, [r3, #0]
 800ff00:	6808      	ldr	r0, [r1, #0]
 800ff02:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff06:	f01e 0f10 	tst.w	lr, #16
 800ff0a:	bf08      	it	eq
 800ff0c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800ff10:	f380 8809 	msr	PSP, r0
 800ff14:	f3bf 8f6f 	isb	sy
 800ff18:	4770      	bx	lr
 800ff1a:	bf00      	nop
 800ff1c:	f3af 8000 	nop.w

0800ff20 <pxCurrentTCBConst>:
 800ff20:	20013220 	.word	0x20013220

0800ff24 <xPortSysTickHandler>:
{
 800ff24:	b508      	push	{r3, lr}
	__asm volatile
 800ff26:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff2a:	f383 8811 	msr	BASEPRI, r3
 800ff2e:	f3bf 8f6f 	isb	sy
 800ff32:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800ff36:	f001 fd21 	bl	801197c <xTaskIncrementTick>
 800ff3a:	b128      	cbz	r0, 800ff48 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800ff3c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ff40:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ff44:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800ff48:	2300      	movs	r3, #0
 800ff4a:	f383 8811 	msr	BASEPRI, r3
}
 800ff4e:	bd08      	pop	{r3, pc}

0800ff50 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800ff50:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800ff54:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800ff56:	4906      	ldr	r1, [pc, #24]	; (800ff70 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800ff58:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800ff5a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800ff5c:	680b      	ldr	r3, [r1, #0]
 800ff5e:	4905      	ldr	r1, [pc, #20]	; (800ff74 <vPortSetupTimerInterrupt+0x24>)
 800ff60:	fba1 1303 	umull	r1, r3, r1, r3
 800ff64:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800ff66:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800ff68:	3b01      	subs	r3, #1
 800ff6a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800ff6c:	6110      	str	r0, [r2, #16]
}
 800ff6e:	4770      	bx	lr
 800ff70:	2000007c 	.word	0x2000007c
 800ff74:	10624dd3 	.word	0x10624dd3

0800ff78 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800ff78:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ff7c:	4a49      	ldr	r2, [pc, #292]	; (80100a4 <xPortStartScheduler+0x12c>)
 800ff7e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800ff82:	4291      	cmp	r1, r2
 800ff84:	d043      	beq.n	801000e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800ff86:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800ff8a:	4b47      	ldr	r3, [pc, #284]	; (80100a8 <xPortStartScheduler+0x130>)
 800ff8c:	429a      	cmp	r2, r3
 800ff8e:	d035      	beq.n	800fffc <xPortStartScheduler+0x84>
{
 800ff90:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800ff92:	4b46      	ldr	r3, [pc, #280]	; (80100ac <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ff94:	4846      	ldr	r0, [pc, #280]	; (80100b0 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800ff96:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800ff98:	4c46      	ldr	r4, [pc, #280]	; (80100b4 <xPortStartScheduler+0x13c>)
{
 800ff9a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800ff9c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800ff9e:	b2d2      	uxtb	r2, r2
 800ffa0:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800ffa2:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800ffa4:	781b      	ldrb	r3, [r3, #0]
 800ffa6:	b2db      	uxtb	r3, r3
 800ffa8:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ffac:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800ffb0:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ffb4:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800ffb8:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800ffba:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800ffbc:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800ffbe:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800ffc0:	bf48      	it	mi
 800ffc2:	2206      	movmi	r2, #6
 800ffc4:	d511      	bpl.n	800ffea <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800ffc6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800ffca:	005b      	lsls	r3, r3, #1
 800ffcc:	b2db      	uxtb	r3, r3
 800ffce:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800ffd2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800ffd6:	0609      	lsls	r1, r1, #24
 800ffd8:	4610      	mov	r0, r2
 800ffda:	f102 32ff 	add.w	r2, r2, #4294967295
 800ffde:	d4f2      	bmi.n	800ffc6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800ffe0:	2803      	cmp	r0, #3
 800ffe2:	6020      	str	r0, [r4, #0]
 800ffe4:	f88d 3007 	strb.w	r3, [sp, #7]
 800ffe8:	d01a      	beq.n	8010020 <xPortStartScheduler+0xa8>
	__asm volatile
 800ffea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffee:	f383 8811 	msr	BASEPRI, r3
 800fff2:	f3bf 8f6f 	isb	sy
 800fff6:	f3bf 8f4f 	dsb	sy
 800fffa:	e7fe      	b.n	800fffa <xPortStartScheduler+0x82>
 800fffc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010000:	f383 8811 	msr	BASEPRI, r3
 8010004:	f3bf 8f6f 	isb	sy
 8010008:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 801000c:	e7fe      	b.n	801000c <xPortStartScheduler+0x94>
 801000e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010012:	f383 8811 	msr	BASEPRI, r3
 8010016:	f3bf 8f6f 	isb	sy
 801001a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 801001e:	e7fe      	b.n	801001e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8010020:	9b02      	ldr	r3, [sp, #8]
 8010022:	4a22      	ldr	r2, [pc, #136]	; (80100ac <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8010024:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8010028:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 801002c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 801002e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8010030:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8010032:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 8010036:	4c20      	ldr	r4, [pc, #128]	; (80100b8 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8010038:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 801003c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8010040:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 8010044:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8010048:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 801004c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 801004e:	f7ff ff7f 	bl	800ff50 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8010052:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 8010054:	f7ff feae 	bl	800fdb4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8010058:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 801005c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8010060:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 8010064:	f7ff fe92 	bl	800fd8c <prvPortStartFirstTask>
	vTaskSwitchContext();
 8010068:	f001 fc98 	bl	801199c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 801006c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 801006e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 8010070:	3301      	adds	r3, #1
 8010072:	d008      	beq.n	8010086 <xPortStartScheduler+0x10e>
 8010074:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010078:	f383 8811 	msr	BASEPRI, r3
 801007c:	f3bf 8f6f 	isb	sy
 8010080:	f3bf 8f4f 	dsb	sy
 8010084:	e7fe      	b.n	8010084 <xPortStartScheduler+0x10c>
 8010086:	f04f 0350 	mov.w	r3, #80	; 0x50
 801008a:	f383 8811 	msr	BASEPRI, r3
 801008e:	f3bf 8f6f 	isb	sy
 8010092:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8010096:	9b03      	ldr	r3, [sp, #12]
 8010098:	2b00      	cmp	r3, #0
 801009a:	d0fc      	beq.n	8010096 <xPortStartScheduler+0x11e>
}
 801009c:	2000      	movs	r0, #0
 801009e:	b004      	add	sp, #16
 80100a0:	bd70      	pop	{r4, r5, r6, pc}
 80100a2:	bf00      	nop
 80100a4:	410fc271 	.word	0x410fc271
 80100a8:	410fc270 	.word	0x410fc270
 80100ac:	e000e400 	.word	0xe000e400
 80100b0:	200131d8 	.word	0x200131d8
 80100b4:	200131dc 	.word	0x200131dc
 80100b8:	20000088 	.word	0x20000088

080100bc <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80100bc:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80100c0:	2b0f      	cmp	r3, #15
 80100c2:	d90e      	bls.n	80100e2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80100c4:	4911      	ldr	r1, [pc, #68]	; (801010c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80100c6:	4a12      	ldr	r2, [pc, #72]	; (8010110 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80100c8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80100ca:	7812      	ldrb	r2, [r2, #0]
 80100cc:	429a      	cmp	r2, r3
 80100ce:	d908      	bls.n	80100e2 <vPortValidateInterruptPriority+0x26>
 80100d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100d4:	f383 8811 	msr	BASEPRI, r3
 80100d8:	f3bf 8f6f 	isb	sy
 80100dc:	f3bf 8f4f 	dsb	sy
 80100e0:	e7fe      	b.n	80100e0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80100e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80100e6:	4a0b      	ldr	r2, [pc, #44]	; (8010114 <vPortValidateInterruptPriority+0x58>)
 80100e8:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 80100ec:	6812      	ldr	r2, [r2, #0]
 80100ee:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80100f2:	4293      	cmp	r3, r2
 80100f4:	d908      	bls.n	8010108 <vPortValidateInterruptPriority+0x4c>
 80100f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100fa:	f383 8811 	msr	BASEPRI, r3
 80100fe:	f3bf 8f6f 	isb	sy
 8010102:	f3bf 8f4f 	dsb	sy
 8010106:	e7fe      	b.n	8010106 <vPortValidateInterruptPriority+0x4a>
	}
 8010108:	4770      	bx	lr
 801010a:	bf00      	nop
 801010c:	e000e3f0 	.word	0xe000e3f0
 8010110:	200131d8 	.word	0x200131d8
 8010114:	200131dc 	.word	0x200131dc

08010118 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 8010118:	b570      	push	{r4, r5, r6, lr}
 801011a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 801011c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801011e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8010120:	b920      	cbnz	r0, 801012c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8010122:	6825      	ldr	r5, [r4, #0]
 8010124:	b34d      	cbz	r5, 801017a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010126:	3601      	adds	r6, #1
 8010128:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 801012a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 801012c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 801012e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 8010130:	b97d      	cbnz	r5, 8010152 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8010132:	6860      	ldr	r0, [r4, #4]
 8010134:	f01d fe6f 	bl	802de16 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010138:	6863      	ldr	r3, [r4, #4]
 801013a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801013c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 801013e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010140:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8010142:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8010144:	bf24      	itt	cs
 8010146:	6823      	ldrcs	r3, [r4, #0]
 8010148:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 801014a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 801014c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 801014e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8010150:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8010152:	68e0      	ldr	r0, [r4, #12]
 8010154:	f01d fe5f 	bl	802de16 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8010158:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801015a:	68e3      	ldr	r3, [r4, #12]
 801015c:	4251      	negs	r1, r2
 801015e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8010160:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8010162:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8010164:	4293      	cmp	r3, r2
 8010166:	d202      	bcs.n	801016e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8010168:	68a3      	ldr	r3, [r4, #8]
 801016a:	440b      	add	r3, r1
 801016c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 801016e:	2d02      	cmp	r5, #2
 8010170:	d008      	beq.n	8010184 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010172:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 8010174:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8010176:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8010178:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 801017a:	68a0      	ldr	r0, [r4, #8]
 801017c:	f001 fde0 	bl	8011d40 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8010180:	60a5      	str	r5, [r4, #8]
 8010182:	e7d0      	b.n	8010126 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010184:	2e01      	cmp	r6, #1
 8010186:	bf38      	it	cc
 8010188:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 801018a:	2000      	movs	r0, #0
 801018c:	e7cc      	b.n	8010128 <prvCopyDataToQueue+0x10>
 801018e:	bf00      	nop

08010190 <xQueueGenericCreateStatic>:
	{
 8010190:	b530      	push	{r4, r5, lr}
 8010192:	b083      	sub	sp, #12
 8010194:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8010198:	b940      	cbnz	r0, 80101ac <xQueueGenericCreateStatic+0x1c>
 801019a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801019e:	f383 8811 	msr	BASEPRI, r3
 80101a2:	f3bf 8f6f 	isb	sy
 80101a6:	f3bf 8f4f 	dsb	sy
 80101aa:	e7fe      	b.n	80101aa <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 80101ac:	461d      	mov	r5, r3
 80101ae:	b17b      	cbz	r3, 80101d0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80101b0:	b302      	cbz	r2, 80101f4 <xQueueGenericCreateStatic+0x64>
 80101b2:	b1b1      	cbz	r1, 80101e2 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80101b4:	2350      	movs	r3, #80	; 0x50
 80101b6:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80101b8:	9b01      	ldr	r3, [sp, #4]
 80101ba:	2b50      	cmp	r3, #80	; 0x50
 80101bc:	d023      	beq.n	8010206 <xQueueGenericCreateStatic+0x76>
 80101be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101c2:	f383 8811 	msr	BASEPRI, r3
 80101c6:	f3bf 8f6f 	isb	sy
 80101ca:	f3bf 8f4f 	dsb	sy
 80101ce:	e7fe      	b.n	80101ce <xQueueGenericCreateStatic+0x3e>
 80101d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101d4:	f383 8811 	msr	BASEPRI, r3
 80101d8:	f3bf 8f6f 	isb	sy
 80101dc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 80101e0:	e7fe      	b.n	80101e0 <xQueueGenericCreateStatic+0x50>
 80101e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101e6:	f383 8811 	msr	BASEPRI, r3
 80101ea:	f3bf 8f6f 	isb	sy
 80101ee:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80101f2:	e7fe      	b.n	80101f2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80101f4:	bb89      	cbnz	r1, 801025a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80101f6:	2250      	movs	r2, #80	; 0x50
 80101f8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80101fa:	9a01      	ldr	r2, [sp, #4]
 80101fc:	2a50      	cmp	r2, #80	; 0x50
 80101fe:	d1de      	bne.n	80101be <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8010200:	9a01      	ldr	r2, [sp, #4]
 8010202:	462a      	mov	r2, r5
 8010204:	e000      	b.n	8010208 <xQueueGenericCreateStatic+0x78>
 8010206:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 8010208:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 801020a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 801020c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8010210:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 8010214:	f7ff fe1e 	bl	800fe54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010218:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 801021c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 801021e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010220:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010224:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010226:	4401      	add	r1, r0
 8010228:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801022a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801022c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801022e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8010230:	21ff      	movs	r1, #255	; 0xff
 8010232:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010236:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 8010238:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 801023c:	f105 0010 	add.w	r0, r5, #16
 8010240:	f7ff fd58 	bl	800fcf4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010244:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8010248:	f7ff fd54 	bl	800fcf4 <vListInitialise>
	taskEXIT_CRITICAL();
 801024c:	f7ff fe24 	bl	800fe98 <vPortExitCritical>
	}
 8010250:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 8010252:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 8010256:	b003      	add	sp, #12
 8010258:	bd30      	pop	{r4, r5, pc}
 801025a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801025e:	f383 8811 	msr	BASEPRI, r3
 8010262:	f3bf 8f6f 	isb	sy
 8010266:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 801026a:	e7fe      	b.n	801026a <xQueueGenericCreateStatic+0xda>

0801026c <xQueueGenericCreate>:
	{
 801026c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 801026e:	b940      	cbnz	r0, 8010282 <xQueueGenericCreate+0x16>
 8010270:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010274:	f383 8811 	msr	BASEPRI, r3
 8010278:	f3bf 8f6f 	isb	sy
 801027c:	f3bf 8f4f 	dsb	sy
 8010280:	e7fe      	b.n	8010280 <xQueueGenericCreate+0x14>
 8010282:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010284:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8010288:	3050      	adds	r0, #80	; 0x50
 801028a:	460e      	mov	r6, r1
 801028c:	4617      	mov	r7, r2
 801028e:	f7ff fc11 	bl	800fab4 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8010292:	4604      	mov	r4, r0
 8010294:	b340      	cbz	r0, 80102e8 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8010296:	2300      	movs	r3, #0
 8010298:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 801029c:	b336      	cbz	r6, 80102ec <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801029e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 80102a2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 80102a4:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 80102a8:	f7ff fdd4 	bl	800fe54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80102ac:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 80102b0:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80102b2:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80102b4:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80102b8:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80102ba:	440a      	add	r2, r1
 80102bc:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80102be:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80102c0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80102c2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 80102c4:	22ff      	movs	r2, #255	; 0xff
 80102c6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80102ca:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 80102cc:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80102d0:	f104 0010 	add.w	r0, r4, #16
 80102d4:	f7ff fd0e 	bl	800fcf4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80102d8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80102dc:	f7ff fd0a 	bl	800fcf4 <vListInitialise>
	taskEXIT_CRITICAL();
 80102e0:	f7ff fdda 	bl	800fe98 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 80102e4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 80102e8:	4620      	mov	r0, r4
 80102ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80102ec:	4603      	mov	r3, r0
 80102ee:	e7d8      	b.n	80102a2 <xQueueGenericCreate+0x36>

080102f0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 80102f0:	b940      	cbnz	r0, 8010304 <xQueueCreateCountingSemaphoreStatic+0x14>
 80102f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80102f6:	f383 8811 	msr	BASEPRI, r3
 80102fa:	f3bf 8f6f 	isb	sy
 80102fe:	f3bf 8f4f 	dsb	sy
 8010302:	e7fe      	b.n	8010302 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 8010304:	4288      	cmp	r0, r1
 8010306:	d208      	bcs.n	801031a <xQueueCreateCountingSemaphoreStatic+0x2a>
 8010308:	f04f 0350 	mov.w	r3, #80	; 0x50
 801030c:	f383 8811 	msr	BASEPRI, r3
 8010310:	f3bf 8f6f 	isb	sy
 8010314:	f3bf 8f4f 	dsb	sy
 8010318:	e7fe      	b.n	8010318 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 801031a:	b530      	push	{r4, r5, lr}
 801031c:	4615      	mov	r5, r2
 801031e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 8010320:	2a00      	cmp	r2, #0
 8010322:	d03c      	beq.n	801039e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010324:	2350      	movs	r3, #80	; 0x50
 8010326:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 8010328:	9b03      	ldr	r3, [sp, #12]
 801032a:	2b50      	cmp	r3, #80	; 0x50
 801032c:	d008      	beq.n	8010340 <xQueueCreateCountingSemaphoreStatic+0x50>
 801032e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010332:	f383 8811 	msr	BASEPRI, r3
 8010336:	f3bf 8f6f 	isb	sy
 801033a:	f3bf 8f4f 	dsb	sy
 801033e:	e7fe      	b.n	801033e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 8010340:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8010342:	2301      	movs	r3, #1
 8010344:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8010348:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 801034a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 801034e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8010350:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 8010352:	f7ff fd7f 	bl	800fe54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010356:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 801035a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801035c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801035e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010362:	1ac3      	subs	r3, r0, r3
 8010364:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010366:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 8010368:	f04f 0eff 	mov.w	lr, #255	; 0xff
 801036c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010370:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010372:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 8010374:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010378:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 801037a:	f105 0010 	add.w	r0, r5, #16
 801037e:	f7ff fcb9 	bl	800fcf4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010382:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8010386:	f7ff fcb5 	bl	800fcf4 <vListInitialise>
	taskEXIT_CRITICAL();
 801038a:	f7ff fd85 	bl	800fe98 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 801038e:	9901      	ldr	r1, [sp, #4]
 8010390:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 8010392:	2302      	movs	r3, #2
	}
 8010394:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 8010396:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 801039a:	b005      	add	sp, #20
 801039c:	bd30      	pop	{r4, r5, pc}
 801039e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103a2:	f383 8811 	msr	BASEPRI, r3
 80103a6:	f3bf 8f6f 	isb	sy
 80103aa:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 80103ae:	e7fe      	b.n	80103ae <xQueueCreateCountingSemaphoreStatic+0xbe>

080103b0 <xQueueCreateCountingSemaphore>:
	{
 80103b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 80103b2:	b940      	cbnz	r0, 80103c6 <xQueueCreateCountingSemaphore+0x16>
 80103b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103b8:	f383 8811 	msr	BASEPRI, r3
 80103bc:	f3bf 8f6f 	isb	sy
 80103c0:	f3bf 8f4f 	dsb	sy
 80103c4:	e7fe      	b.n	80103c4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 80103c6:	4288      	cmp	r0, r1
 80103c8:	460e      	mov	r6, r1
 80103ca:	4604      	mov	r4, r0
 80103cc:	d208      	bcs.n	80103e0 <xQueueCreateCountingSemaphore+0x30>
 80103ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103d2:	f383 8811 	msr	BASEPRI, r3
 80103d6:	f3bf 8f6f 	isb	sy
 80103da:	f3bf 8f4f 	dsb	sy
 80103de:	e7fe      	b.n	80103de <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80103e0:	2050      	movs	r0, #80	; 0x50
 80103e2:	f7ff fb67 	bl	800fab4 <pvPortMalloc>
		if( pxNewQueue != NULL )
 80103e6:	4605      	mov	r5, r0
 80103e8:	b330      	cbz	r0, 8010438 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80103ea:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 80103ec:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80103f0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80103f4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 80103f6:	f7ff fd2d 	bl	800fe54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103fa:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 80103fe:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8010400:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010402:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010406:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010408:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801040a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801040c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 801040e:	22ff      	movs	r2, #255	; 0xff
 8010410:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010414:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010416:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 8010418:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 801041c:	f105 0010 	add.w	r0, r5, #16
 8010420:	f7ff fc68 	bl	800fcf4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010424:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8010428:	f7ff fc64 	bl	800fcf4 <vListInitialise>
	taskEXIT_CRITICAL();
 801042c:	f7ff fd34 	bl	800fe98 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 8010430:	2302      	movs	r3, #2
 8010432:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8010436:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 8010438:	4628      	mov	r0, r5
 801043a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801043c <xQueueGenericSend>:
{
 801043c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010440:	b085      	sub	sp, #20
 8010442:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 8010444:	2800      	cmp	r0, #0
 8010446:	f000 80a4 	beq.w	8010592 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 801044a:	4688      	mov	r8, r1
 801044c:	461f      	mov	r7, r3
 801044e:	4604      	mov	r4, r0
 8010450:	2900      	cmp	r1, #0
 8010452:	f000 8091 	beq.w	8010578 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8010456:	2f02      	cmp	r7, #2
 8010458:	d10b      	bne.n	8010472 <xQueueGenericSend+0x36>
 801045a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801045c:	2b01      	cmp	r3, #1
 801045e:	d008      	beq.n	8010472 <xQueueGenericSend+0x36>
 8010460:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010464:	f383 8811 	msr	BASEPRI, r3
 8010468:	f3bf 8f6f 	isb	sy
 801046c:	f3bf 8f4f 	dsb	sy
 8010470:	e7fe      	b.n	8010470 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010472:	f001 fc0f 	bl	8011c94 <xTaskGetSchedulerState>
 8010476:	4605      	mov	r5, r0
 8010478:	2800      	cmp	r0, #0
 801047a:	f000 8093 	beq.w	80105a4 <xQueueGenericSend+0x168>
 801047e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010480:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 8010484:	f7ff fce6 	bl	800fe54 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8010488:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801048a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801048c:	429a      	cmp	r2, r3
 801048e:	f0c0 80ef 	bcc.w	8010670 <xQueueGenericSend+0x234>
 8010492:	2f02      	cmp	r7, #2
 8010494:	f000 80ec 	beq.w	8010670 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010498:	9801      	ldr	r0, [sp, #4]
 801049a:	2800      	cmp	r0, #0
 801049c:	f000 8101 	beq.w	80106a2 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 80104a0:	2d00      	cmp	r5, #0
 80104a2:	f000 80e1 	beq.w	8010668 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 80104a6:	f7ff fcf7 	bl	800fe98 <vPortExitCritical>
		vTaskSuspendAll();
 80104aa:	f001 fa49 	bl	8011940 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80104ae:	f7ff fcd1 	bl	800fe54 <vPortEnterCritical>
 80104b2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80104b6:	2bff      	cmp	r3, #255	; 0xff
 80104b8:	bf04      	itt	eq
 80104ba:	2300      	moveq	r3, #0
 80104bc:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 80104c0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80104c4:	2bff      	cmp	r3, #255	; 0xff
 80104c6:	bf04      	itt	eq
 80104c8:	2300      	moveq	r3, #0
 80104ca:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 80104ce:	f7ff fce3 	bl	800fe98 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80104d2:	a901      	add	r1, sp, #4
 80104d4:	a802      	add	r0, sp, #8
 80104d6:	f001 fb8f 	bl	8011bf8 <xTaskCheckForTimeOut>
 80104da:	2800      	cmp	r0, #0
 80104dc:	f040 80e6 	bne.w	80106ac <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80104e0:	f7ff fcb8 	bl	800fe54 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80104e4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80104e6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80104e8:	429a      	cmp	r2, r3
 80104ea:	d068      	beq.n	80105be <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80104ec:	f7ff fcd4 	bl	800fe98 <vPortExitCritical>
	taskENTER_CRITICAL();
 80104f0:	f7ff fcb0 	bl	800fe54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80104f4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 80104f8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80104fa:	2d00      	cmp	r5, #0
 80104fc:	dc04      	bgt.n	8010508 <xQueueGenericSend+0xcc>
 80104fe:	e011      	b.n	8010524 <xQueueGenericSend+0xe8>
			--cTxLock;
 8010500:	1e6a      	subs	r2, r5, #1
 8010502:	b2d3      	uxtb	r3, r2
 8010504:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010506:	b16b      	cbz	r3, 8010524 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010508:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801050a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801050c:	b153      	cbz	r3, 8010524 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801050e:	f001 fb1f 	bl	8011b50 <xTaskRemoveFromEventList>
 8010512:	2800      	cmp	r0, #0
 8010514:	d0f4      	beq.n	8010500 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 8010516:	f001 fbb7 	bl	8011c88 <vTaskMissedYield>
			--cTxLock;
 801051a:	1e6a      	subs	r2, r5, #1
 801051c:	b2d3      	uxtb	r3, r2
 801051e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010520:	2b00      	cmp	r3, #0
 8010522:	d1f1      	bne.n	8010508 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 8010524:	23ff      	movs	r3, #255	; 0xff
 8010526:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 801052a:	f7ff fcb5 	bl	800fe98 <vPortExitCritical>
	taskENTER_CRITICAL();
 801052e:	f7ff fc91 	bl	800fe54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010532:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8010536:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010538:	2d00      	cmp	r5, #0
 801053a:	dd14      	ble.n	8010566 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801053c:	f104 0910 	add.w	r9, r4, #16
 8010540:	e003      	b.n	801054a <xQueueGenericSend+0x10e>
				--cRxLock;
 8010542:	1e6a      	subs	r2, r5, #1
 8010544:	b2d3      	uxtb	r3, r2
 8010546:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010548:	b16b      	cbz	r3, 8010566 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801054a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801054c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801054e:	b153      	cbz	r3, 8010566 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010550:	f001 fafe 	bl	8011b50 <xTaskRemoveFromEventList>
 8010554:	2800      	cmp	r0, #0
 8010556:	d0f4      	beq.n	8010542 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 8010558:	f001 fb96 	bl	8011c88 <vTaskMissedYield>
				--cRxLock;
 801055c:	1e6a      	subs	r2, r5, #1
 801055e:	b2d3      	uxtb	r3, r2
 8010560:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010562:	2b00      	cmp	r3, #0
 8010564:	d1f1      	bne.n	801054a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 8010566:	23ff      	movs	r3, #255	; 0xff
 8010568:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 801056c:	f7ff fc94 	bl	800fe98 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010570:	f001 f9ee 	bl	8011950 <xTaskResumeAll>
 8010574:	2501      	movs	r5, #1
 8010576:	e785      	b.n	8010484 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010578:	6c03      	ldr	r3, [r0, #64]	; 0x40
 801057a:	2b00      	cmp	r3, #0
 801057c:	f43f af6b 	beq.w	8010456 <xQueueGenericSend+0x1a>
 8010580:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010584:	f383 8811 	msr	BASEPRI, r3
 8010588:	f3bf 8f6f 	isb	sy
 801058c:	f3bf 8f4f 	dsb	sy
 8010590:	e7fe      	b.n	8010590 <xQueueGenericSend+0x154>
 8010592:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010596:	f383 8811 	msr	BASEPRI, r3
 801059a:	f3bf 8f6f 	isb	sy
 801059e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 80105a2:	e7fe      	b.n	80105a2 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80105a4:	9b01      	ldr	r3, [sp, #4]
 80105a6:	2b00      	cmp	r3, #0
 80105a8:	f43f af6a 	beq.w	8010480 <xQueueGenericSend+0x44>
 80105ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80105b0:	f383 8811 	msr	BASEPRI, r3
 80105b4:	f3bf 8f6f 	isb	sy
 80105b8:	f3bf 8f4f 	dsb	sy
 80105bc:	e7fe      	b.n	80105bc <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80105be:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 80105c2:	f7ff fc69 	bl	800fe98 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80105c6:	9901      	ldr	r1, [sp, #4]
 80105c8:	4648      	mov	r0, r9
 80105ca:	f001 fa33 	bl	8011a34 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 80105ce:	f7ff fc41 	bl	800fe54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80105d2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80105d6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80105d8:	2d00      	cmp	r5, #0
 80105da:	dc04      	bgt.n	80105e6 <xQueueGenericSend+0x1aa>
 80105dc:	e011      	b.n	8010602 <xQueueGenericSend+0x1c6>
			--cTxLock;
 80105de:	1e6b      	subs	r3, r5, #1
 80105e0:	b2da      	uxtb	r2, r3
 80105e2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80105e4:	b16a      	cbz	r2, 8010602 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80105e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80105e8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80105ea:	b153      	cbz	r3, 8010602 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80105ec:	f001 fab0 	bl	8011b50 <xTaskRemoveFromEventList>
 80105f0:	2800      	cmp	r0, #0
 80105f2:	d0f4      	beq.n	80105de <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 80105f4:	f001 fb48 	bl	8011c88 <vTaskMissedYield>
			--cTxLock;
 80105f8:	1e6b      	subs	r3, r5, #1
 80105fa:	b2da      	uxtb	r2, r3
 80105fc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80105fe:	2a00      	cmp	r2, #0
 8010600:	d1f1      	bne.n	80105e6 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 8010602:	23ff      	movs	r3, #255	; 0xff
 8010604:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010608:	f7ff fc46 	bl	800fe98 <vPortExitCritical>
	taskENTER_CRITICAL();
 801060c:	f7ff fc22 	bl	800fe54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010610:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010614:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010616:	2d00      	cmp	r5, #0
 8010618:	dc04      	bgt.n	8010624 <xQueueGenericSend+0x1e8>
 801061a:	e011      	b.n	8010640 <xQueueGenericSend+0x204>
				--cRxLock;
 801061c:	1e6b      	subs	r3, r5, #1
 801061e:	b2da      	uxtb	r2, r3
 8010620:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010622:	b16a      	cbz	r2, 8010640 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010624:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010626:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010628:	b153      	cbz	r3, 8010640 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801062a:	f001 fa91 	bl	8011b50 <xTaskRemoveFromEventList>
 801062e:	2800      	cmp	r0, #0
 8010630:	d0f4      	beq.n	801061c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 8010632:	f001 fb29 	bl	8011c88 <vTaskMissedYield>
				--cRxLock;
 8010636:	1e6b      	subs	r3, r5, #1
 8010638:	b2da      	uxtb	r2, r3
 801063a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801063c:	2a00      	cmp	r2, #0
 801063e:	d1f1      	bne.n	8010624 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 8010640:	23ff      	movs	r3, #255	; 0xff
 8010642:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010646:	f7ff fc27 	bl	800fe98 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 801064a:	f001 f981 	bl	8011950 <xTaskResumeAll>
 801064e:	2800      	cmp	r0, #0
 8010650:	d190      	bne.n	8010574 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 8010652:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010656:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801065a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801065e:	f3bf 8f4f 	dsb	sy
 8010662:	f3bf 8f6f 	isb	sy
 8010666:	e785      	b.n	8010574 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010668:	a802      	add	r0, sp, #8
 801066a:	f001 fab9 	bl	8011be0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 801066e:	e71a      	b.n	80104a6 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010670:	463a      	mov	r2, r7
 8010672:	4641      	mov	r1, r8
 8010674:	4620      	mov	r0, r4
 8010676:	f7ff fd4f 	bl	8010118 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801067a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801067c:	2b00      	cmp	r3, #0
 801067e:	d153      	bne.n	8010728 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 8010680:	b148      	cbz	r0, 8010696 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 8010682:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010686:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801068a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801068e:	f3bf 8f4f 	dsb	sy
 8010692:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8010696:	f7ff fbff 	bl	800fe98 <vPortExitCritical>
				return pdPASS;
 801069a:	2001      	movs	r0, #1
}
 801069c:	b005      	add	sp, #20
 801069e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80106a2:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 80106a4:	f7ff fbf8 	bl	800fe98 <vPortExitCritical>
					return errQUEUE_FULL;
 80106a8:	9800      	ldr	r0, [sp, #0]
 80106aa:	e7f7      	b.n	801069c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 80106ac:	f7ff fbd2 	bl	800fe54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80106b0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80106b4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80106b6:	2d00      	cmp	r5, #0
 80106b8:	dd10      	ble.n	80106dc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80106ba:	f104 0624 	add.w	r6, r4, #36	; 0x24
 80106be:	e003      	b.n	80106c8 <xQueueGenericSend+0x28c>
			--cTxLock;
 80106c0:	1e6b      	subs	r3, r5, #1
 80106c2:	b2da      	uxtb	r2, r3
 80106c4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80106c6:	b14a      	cbz	r2, 80106dc <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80106c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80106ca:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80106cc:	b133      	cbz	r3, 80106dc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80106ce:	f001 fa3f 	bl	8011b50 <xTaskRemoveFromEventList>
 80106d2:	2800      	cmp	r0, #0
 80106d4:	d0f4      	beq.n	80106c0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 80106d6:	f001 fad7 	bl	8011c88 <vTaskMissedYield>
 80106da:	e7f1      	b.n	80106c0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 80106dc:	23ff      	movs	r3, #255	; 0xff
 80106de:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80106e2:	f7ff fbd9 	bl	800fe98 <vPortExitCritical>
	taskENTER_CRITICAL();
 80106e6:	f7ff fbb5 	bl	800fe54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80106ea:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80106ee:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80106f0:	2d00      	cmp	r5, #0
 80106f2:	dd10      	ble.n	8010716 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80106f4:	f104 0610 	add.w	r6, r4, #16
 80106f8:	e003      	b.n	8010702 <xQueueGenericSend+0x2c6>
				--cRxLock;
 80106fa:	1e6b      	subs	r3, r5, #1
 80106fc:	b2da      	uxtb	r2, r3
 80106fe:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010700:	b14a      	cbz	r2, 8010716 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010702:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010704:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010706:	b133      	cbz	r3, 8010716 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010708:	f001 fa22 	bl	8011b50 <xTaskRemoveFromEventList>
 801070c:	2800      	cmp	r0, #0
 801070e:	d0f4      	beq.n	80106fa <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 8010710:	f001 faba 	bl	8011c88 <vTaskMissedYield>
 8010714:	e7f1      	b.n	80106fa <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 8010716:	23ff      	movs	r3, #255	; 0xff
 8010718:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 801071c:	f7ff fbbc 	bl	800fe98 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010720:	f001 f916 	bl	8011950 <xTaskResumeAll>
			return errQUEUE_FULL;
 8010724:	2000      	movs	r0, #0
 8010726:	e7b9      	b.n	801069c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010728:	f104 0024 	add.w	r0, r4, #36	; 0x24
 801072c:	f001 fa10 	bl	8011b50 <xTaskRemoveFromEventList>
 8010730:	2800      	cmp	r0, #0
 8010732:	d0b0      	beq.n	8010696 <xQueueGenericSend+0x25a>
 8010734:	e7a5      	b.n	8010682 <xQueueGenericSend+0x246>
 8010736:	bf00      	nop

08010738 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 8010738:	2800      	cmp	r0, #0
 801073a:	d04b      	beq.n	80107d4 <xQueueGenericSendFromISR+0x9c>
{
 801073c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010740:	460e      	mov	r6, r1
 8010742:	4617      	mov	r7, r2
 8010744:	461d      	mov	r5, r3
 8010746:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010748:	b321      	cbz	r1, 8010794 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 801074a:	2d02      	cmp	r5, #2
 801074c:	d10b      	bne.n	8010766 <xQueueGenericSendFromISR+0x2e>
 801074e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010750:	2b01      	cmp	r3, #1
 8010752:	d008      	beq.n	8010766 <xQueueGenericSendFromISR+0x2e>
 8010754:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010758:	f383 8811 	msr	BASEPRI, r3
 801075c:	f3bf 8f6f 	isb	sy
 8010760:	f3bf 8f4f 	dsb	sy
 8010764:	e7fe      	b.n	8010764 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8010766:	f7ff fca9 	bl	80100bc <vPortValidateInterruptPriority>
	__asm volatile
 801076a:	f3ef 8811 	mrs	r8, BASEPRI
 801076e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010772:	f383 8811 	msr	BASEPRI, r3
 8010776:	f3bf 8f6f 	isb	sy
 801077a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 801077e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010780:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010782:	429a      	cmp	r2, r3
 8010784:	d312      	bcc.n	80107ac <xQueueGenericSendFromISR+0x74>
 8010786:	2d02      	cmp	r5, #2
 8010788:	d010      	beq.n	80107ac <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 801078a:	2000      	movs	r0, #0
	__asm volatile
 801078c:	f388 8811 	msr	BASEPRI, r8
}
 8010790:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010794:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010796:	2b00      	cmp	r3, #0
 8010798:	d0d7      	beq.n	801074a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 801079a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801079e:	f383 8811 	msr	BASEPRI, r3
 80107a2:	f3bf 8f6f 	isb	sy
 80107a6:	f3bf 8f4f 	dsb	sy
 80107aa:	e7fe      	b.n	80107aa <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80107ac:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 80107ae:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 80107b2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80107b4:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 80107b6:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80107b8:	4620      	mov	r0, r4
 80107ba:	f7ff fcad 	bl	8010118 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80107be:	1c6b      	adds	r3, r5, #1
 80107c0:	d011      	beq.n	80107e6 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80107c2:	1c6b      	adds	r3, r5, #1
 80107c4:	b25b      	sxtb	r3, r3
 80107c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 80107ca:	2001      	movs	r0, #1
	__asm volatile
 80107cc:	f388 8811 	msr	BASEPRI, r8
}
 80107d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 80107d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80107d8:	f383 8811 	msr	BASEPRI, r3
 80107dc:	f3bf 8f6f 	isb	sy
 80107e0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 80107e4:	e7fe      	b.n	80107e4 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80107e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80107e8:	2b00      	cmp	r3, #0
 80107ea:	d0ee      	beq.n	80107ca <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80107ec:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80107f0:	f001 f9ae 	bl	8011b50 <xTaskRemoveFromEventList>
 80107f4:	2800      	cmp	r0, #0
 80107f6:	d0e8      	beq.n	80107ca <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 80107f8:	2f00      	cmp	r7, #0
 80107fa:	d0e6      	beq.n	80107ca <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80107fc:	2001      	movs	r0, #1
 80107fe:	6038      	str	r0, [r7, #0]
 8010800:	e7c4      	b.n	801078c <xQueueGenericSendFromISR+0x54>
 8010802:	bf00      	nop

08010804 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 8010804:	b370      	cbz	r0, 8010864 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 8010806:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 8010808:	b570      	push	{r4, r5, r6, lr}
 801080a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 801080c:	b143      	cbz	r3, 8010820 <xQueueGiveFromISR+0x1c>
 801080e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010812:	f383 8811 	msr	BASEPRI, r3
 8010816:	f3bf 8f6f 	isb	sy
 801081a:	f3bf 8f4f 	dsb	sy
 801081e:	e7fe      	b.n	801081e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8010820:	6803      	ldr	r3, [r0, #0]
 8010822:	460c      	mov	r4, r1
 8010824:	b33b      	cbz	r3, 8010876 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8010826:	f7ff fc49 	bl	80100bc <vPortValidateInterruptPriority>
	__asm volatile
 801082a:	f3ef 8511 	mrs	r5, BASEPRI
 801082e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010832:	f383 8811 	msr	BASEPRI, r3
 8010836:	f3bf 8f6f 	isb	sy
 801083a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801083e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8010840:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 8010842:	429a      	cmp	r2, r3
 8010844:	d923      	bls.n	801088e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 8010846:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 801084a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 801084c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 801084e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8010850:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 8010852:	d020      	beq.n	8010896 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8010854:	3301      	adds	r3, #1
 8010856:	b25b      	sxtb	r3, r3
 8010858:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 801085c:	2001      	movs	r0, #1
	__asm volatile
 801085e:	f385 8811 	msr	BASEPRI, r5
}
 8010862:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 8010864:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010868:	f383 8811 	msr	BASEPRI, r3
 801086c:	f3bf 8f6f 	isb	sy
 8010870:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010874:	e7fe      	b.n	8010874 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8010876:	6883      	ldr	r3, [r0, #8]
 8010878:	2b00      	cmp	r3, #0
 801087a:	d0d4      	beq.n	8010826 <xQueueGiveFromISR+0x22>
 801087c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010880:	f383 8811 	msr	BASEPRI, r3
 8010884:	f3bf 8f6f 	isb	sy
 8010888:	f3bf 8f4f 	dsb	sy
 801088c:	e7fe      	b.n	801088c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 801088e:	2000      	movs	r0, #0
	__asm volatile
 8010890:	f385 8811 	msr	BASEPRI, r5
}
 8010894:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010896:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8010898:	2b00      	cmp	r3, #0
 801089a:	d0df      	beq.n	801085c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801089c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 80108a0:	f001 f956 	bl	8011b50 <xTaskRemoveFromEventList>
 80108a4:	2800      	cmp	r0, #0
 80108a6:	d0d9      	beq.n	801085c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 80108a8:	2c00      	cmp	r4, #0
 80108aa:	d0d7      	beq.n	801085c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80108ac:	2001      	movs	r0, #1
 80108ae:	6020      	str	r0, [r4, #0]
 80108b0:	e7ee      	b.n	8010890 <xQueueGiveFromISR+0x8c>
 80108b2:	bf00      	nop

080108b4 <xQueueReceive>:
{
 80108b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80108b8:	b085      	sub	sp, #20
 80108ba:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80108bc:	2800      	cmp	r0, #0
 80108be:	f000 815c 	beq.w	8010b7a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80108c2:	460f      	mov	r7, r1
 80108c4:	4604      	mov	r4, r0
 80108c6:	2900      	cmp	r1, #0
 80108c8:	d079      	beq.n	80109be <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80108ca:	f001 f9e3 	bl	8011c94 <xTaskGetSchedulerState>
 80108ce:	2800      	cmp	r0, #0
 80108d0:	f000 8081 	beq.w	80109d6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 80108d4:	f7ff fabe 	bl	800fe54 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80108d8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80108da:	2d00      	cmp	r5, #0
 80108dc:	f040 8138 	bne.w	8010b50 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 80108e0:	9b01      	ldr	r3, [sp, #4]
 80108e2:	2b00      	cmp	r3, #0
 80108e4:	f000 80d5 	beq.w	8010a92 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80108e8:	a802      	add	r0, sp, #8
 80108ea:	f001 f979 	bl	8011be0 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 80108ee:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80108f0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 80108f4:	f7ff fad0 	bl	800fe98 <vPortExitCritical>
		vTaskSuspendAll();
 80108f8:	f001 f822 	bl	8011940 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80108fc:	f7ff faaa 	bl	800fe54 <vPortEnterCritical>
 8010900:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010904:	2bff      	cmp	r3, #255	; 0xff
 8010906:	bf08      	it	eq
 8010908:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 801090c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010910:	2bff      	cmp	r3, #255	; 0xff
 8010912:	bf08      	it	eq
 8010914:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8010918:	f7ff fabe 	bl	800fe98 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 801091c:	a901      	add	r1, sp, #4
 801091e:	a802      	add	r0, sp, #8
 8010920:	f001 f96a 	bl	8011bf8 <xTaskCheckForTimeOut>
 8010924:	2800      	cmp	r0, #0
 8010926:	d163      	bne.n	80109f0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 8010928:	f7ff fa94 	bl	800fe54 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 801092c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 801092e:	2b00      	cmp	r3, #0
 8010930:	f000 80b5 	beq.w	8010a9e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 8010934:	f7ff fab0 	bl	800fe98 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010938:	f7ff fa8c 	bl	800fe54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 801093c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010940:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010942:	2d00      	cmp	r5, #0
 8010944:	dc04      	bgt.n	8010950 <xQueueReceive+0x9c>
 8010946:	e011      	b.n	801096c <xQueueReceive+0xb8>
			--cTxLock;
 8010948:	1e6b      	subs	r3, r5, #1
 801094a:	b2da      	uxtb	r2, r3
 801094c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801094e:	b16a      	cbz	r2, 801096c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010950:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010952:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010954:	b153      	cbz	r3, 801096c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010956:	f001 f8fb 	bl	8011b50 <xTaskRemoveFromEventList>
 801095a:	2800      	cmp	r0, #0
 801095c:	d0f4      	beq.n	8010948 <xQueueReceive+0x94>
						vTaskMissedYield();
 801095e:	f001 f993 	bl	8011c88 <vTaskMissedYield>
			--cTxLock;
 8010962:	1e6b      	subs	r3, r5, #1
 8010964:	b2da      	uxtb	r2, r3
 8010966:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010968:	2a00      	cmp	r2, #0
 801096a:	d1f1      	bne.n	8010950 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 801096c:	23ff      	movs	r3, #255	; 0xff
 801096e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010972:	f7ff fa91 	bl	800fe98 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010976:	f7ff fa6d 	bl	800fe54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 801097a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801097e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010980:	2d00      	cmp	r5, #0
 8010982:	dd14      	ble.n	80109ae <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010984:	f104 0910 	add.w	r9, r4, #16
 8010988:	e003      	b.n	8010992 <xQueueReceive+0xde>
				--cRxLock;
 801098a:	1e6b      	subs	r3, r5, #1
 801098c:	b2da      	uxtb	r2, r3
 801098e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010990:	b16a      	cbz	r2, 80109ae <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010992:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010994:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010996:	b153      	cbz	r3, 80109ae <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010998:	f001 f8da 	bl	8011b50 <xTaskRemoveFromEventList>
 801099c:	2800      	cmp	r0, #0
 801099e:	d0f4      	beq.n	801098a <xQueueReceive+0xd6>
					vTaskMissedYield();
 80109a0:	f001 f972 	bl	8011c88 <vTaskMissedYield>
				--cRxLock;
 80109a4:	1e6b      	subs	r3, r5, #1
 80109a6:	b2da      	uxtb	r2, r3
 80109a8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80109aa:	2a00      	cmp	r2, #0
 80109ac:	d1f1      	bne.n	8010992 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 80109ae:	23ff      	movs	r3, #255	; 0xff
 80109b0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 80109b4:	f7ff fa70 	bl	800fe98 <vPortExitCritical>
				( void ) xTaskResumeAll();
 80109b8:	f000 ffca 	bl	8011950 <xTaskResumeAll>
		taskENTER_CRITICAL();
 80109bc:	e060      	b.n	8010a80 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80109be:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80109c0:	2b00      	cmp	r3, #0
 80109c2:	d082      	beq.n	80108ca <xQueueReceive+0x16>
	__asm volatile
 80109c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80109c8:	f383 8811 	msr	BASEPRI, r3
 80109cc:	f3bf 8f6f 	isb	sy
 80109d0:	f3bf 8f4f 	dsb	sy
 80109d4:	e7fe      	b.n	80109d4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80109d6:	9b01      	ldr	r3, [sp, #4]
 80109d8:	2b00      	cmp	r3, #0
 80109da:	f43f af7b 	beq.w	80108d4 <xQueueReceive+0x20>
 80109de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80109e2:	f383 8811 	msr	BASEPRI, r3
 80109e6:	f3bf 8f6f 	isb	sy
 80109ea:	f3bf 8f4f 	dsb	sy
 80109ee:	e7fe      	b.n	80109ee <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 80109f0:	f7ff fa30 	bl	800fe54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80109f4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80109f8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80109fa:	2d00      	cmp	r5, #0
 80109fc:	dc04      	bgt.n	8010a08 <xQueueReceive+0x154>
 80109fe:	e011      	b.n	8010a24 <xQueueReceive+0x170>
			--cTxLock;
 8010a00:	1e6b      	subs	r3, r5, #1
 8010a02:	b2da      	uxtb	r2, r3
 8010a04:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010a06:	b16a      	cbz	r2, 8010a24 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010a08:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010a0a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010a0c:	b153      	cbz	r3, 8010a24 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010a0e:	f001 f89f 	bl	8011b50 <xTaskRemoveFromEventList>
 8010a12:	2800      	cmp	r0, #0
 8010a14:	d0f4      	beq.n	8010a00 <xQueueReceive+0x14c>
						vTaskMissedYield();
 8010a16:	f001 f937 	bl	8011c88 <vTaskMissedYield>
			--cTxLock;
 8010a1a:	1e6b      	subs	r3, r5, #1
 8010a1c:	b2da      	uxtb	r2, r3
 8010a1e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010a20:	2a00      	cmp	r2, #0
 8010a22:	d1f1      	bne.n	8010a08 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 8010a24:	23ff      	movs	r3, #255	; 0xff
 8010a26:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010a2a:	f7ff fa35 	bl	800fe98 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010a2e:	f7ff fa11 	bl	800fe54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010a32:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010a36:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010a38:	2d00      	cmp	r5, #0
 8010a3a:	dd14      	ble.n	8010a66 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010a3c:	f104 0910 	add.w	r9, r4, #16
 8010a40:	e003      	b.n	8010a4a <xQueueReceive+0x196>
				--cRxLock;
 8010a42:	1e6b      	subs	r3, r5, #1
 8010a44:	b2da      	uxtb	r2, r3
 8010a46:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010a48:	b16a      	cbz	r2, 8010a66 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010a4a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010a4c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010a4e:	b153      	cbz	r3, 8010a66 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010a50:	f001 f87e 	bl	8011b50 <xTaskRemoveFromEventList>
 8010a54:	2800      	cmp	r0, #0
 8010a56:	d0f4      	beq.n	8010a42 <xQueueReceive+0x18e>
					vTaskMissedYield();
 8010a58:	f001 f916 	bl	8011c88 <vTaskMissedYield>
				--cRxLock;
 8010a5c:	1e6b      	subs	r3, r5, #1
 8010a5e:	b2da      	uxtb	r2, r3
 8010a60:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010a62:	2a00      	cmp	r2, #0
 8010a64:	d1f1      	bne.n	8010a4a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 8010a66:	23ff      	movs	r3, #255	; 0xff
 8010a68:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010a6c:	f7ff fa14 	bl	800fe98 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010a70:	f000 ff6e 	bl	8011950 <xTaskResumeAll>
	taskENTER_CRITICAL();
 8010a74:	f7ff f9ee 	bl	800fe54 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010a78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010a7a:	b153      	cbz	r3, 8010a92 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 8010a7c:	f7ff fa0c 	bl	800fe98 <vPortExitCritical>
		taskENTER_CRITICAL();
 8010a80:	f7ff f9e8 	bl	800fe54 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010a84:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010a86:	2d00      	cmp	r5, #0
 8010a88:	d162      	bne.n	8010b50 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010a8a:	9b01      	ldr	r3, [sp, #4]
 8010a8c:	2b00      	cmp	r3, #0
 8010a8e:	f47f af31 	bne.w	80108f4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 8010a92:	f7ff fa01 	bl	800fe98 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8010a96:	2000      	movs	r0, #0
}
 8010a98:	b005      	add	sp, #20
 8010a9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8010a9e:	f7ff f9fb 	bl	800fe98 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8010aa2:	9901      	ldr	r1, [sp, #4]
 8010aa4:	4630      	mov	r0, r6
 8010aa6:	f000 ffc5 	bl	8011a34 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 8010aaa:	f7ff f9d3 	bl	800fe54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010aae:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010ab2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010ab4:	2d00      	cmp	r5, #0
 8010ab6:	dc04      	bgt.n	8010ac2 <xQueueReceive+0x20e>
 8010ab8:	e011      	b.n	8010ade <xQueueReceive+0x22a>
			--cTxLock;
 8010aba:	1e6b      	subs	r3, r5, #1
 8010abc:	b2da      	uxtb	r2, r3
 8010abe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010ac0:	b16a      	cbz	r2, 8010ade <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010ac2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010ac4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010ac6:	b153      	cbz	r3, 8010ade <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010ac8:	f001 f842 	bl	8011b50 <xTaskRemoveFromEventList>
 8010acc:	2800      	cmp	r0, #0
 8010ace:	d0f4      	beq.n	8010aba <xQueueReceive+0x206>
						vTaskMissedYield();
 8010ad0:	f001 f8da 	bl	8011c88 <vTaskMissedYield>
			--cTxLock;
 8010ad4:	1e6b      	subs	r3, r5, #1
 8010ad6:	b2da      	uxtb	r2, r3
 8010ad8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010ada:	2a00      	cmp	r2, #0
 8010adc:	d1f1      	bne.n	8010ac2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 8010ade:	23ff      	movs	r3, #255	; 0xff
 8010ae0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010ae4:	f7ff f9d8 	bl	800fe98 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010ae8:	f7ff f9b4 	bl	800fe54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010aec:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010af0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010af2:	2d00      	cmp	r5, #0
 8010af4:	dd14      	ble.n	8010b20 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010af6:	f104 0910 	add.w	r9, r4, #16
 8010afa:	e003      	b.n	8010b04 <xQueueReceive+0x250>
				--cRxLock;
 8010afc:	1e6b      	subs	r3, r5, #1
 8010afe:	b2da      	uxtb	r2, r3
 8010b00:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010b02:	b16a      	cbz	r2, 8010b20 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010b04:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010b06:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010b08:	b153      	cbz	r3, 8010b20 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010b0a:	f001 f821 	bl	8011b50 <xTaskRemoveFromEventList>
 8010b0e:	2800      	cmp	r0, #0
 8010b10:	d0f4      	beq.n	8010afc <xQueueReceive+0x248>
					vTaskMissedYield();
 8010b12:	f001 f8b9 	bl	8011c88 <vTaskMissedYield>
				--cRxLock;
 8010b16:	1e6b      	subs	r3, r5, #1
 8010b18:	b2da      	uxtb	r2, r3
 8010b1a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010b1c:	2a00      	cmp	r2, #0
 8010b1e:	d1f1      	bne.n	8010b04 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 8010b20:	23ff      	movs	r3, #255	; 0xff
 8010b22:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010b26:	f7ff f9b7 	bl	800fe98 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 8010b2a:	f000 ff11 	bl	8011950 <xTaskResumeAll>
 8010b2e:	2800      	cmp	r0, #0
 8010b30:	d1a6      	bne.n	8010a80 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 8010b32:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010b36:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010b3a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010b3e:	f3bf 8f4f 	dsb	sy
 8010b42:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 8010b46:	f7ff f985 	bl	800fe54 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010b4a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010b4c:	2d00      	cmp	r5, #0
 8010b4e:	d09c      	beq.n	8010a8a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8010b50:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8010b52:	b152      	cbz	r2, 8010b6a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010b54:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010b56:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010b58:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010b5a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010b5c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8010b5e:	bf24      	itt	cs
 8010b60:	6821      	ldrcs	r1, [r4, #0]
 8010b62:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8010b64:	4638      	mov	r0, r7
 8010b66:	f01d f956 	bl	802de16 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8010b6a:	3d01      	subs	r5, #1
 8010b6c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010b6e:	6923      	ldr	r3, [r4, #16]
 8010b70:	b963      	cbnz	r3, 8010b8c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 8010b72:	f7ff f991 	bl	800fe98 <vPortExitCritical>
				return pdPASS;
 8010b76:	2001      	movs	r0, #1
 8010b78:	e78e      	b.n	8010a98 <xQueueReceive+0x1e4>
 8010b7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b7e:	f383 8811 	msr	BASEPRI, r3
 8010b82:	f3bf 8f6f 	isb	sy
 8010b86:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 8010b8a:	e7fe      	b.n	8010b8a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010b8c:	f104 0010 	add.w	r0, r4, #16
 8010b90:	f000 ffde 	bl	8011b50 <xTaskRemoveFromEventList>
 8010b94:	2800      	cmp	r0, #0
 8010b96:	d0ec      	beq.n	8010b72 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 8010b98:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010b9c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010ba0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010ba4:	f3bf 8f4f 	dsb	sy
 8010ba8:	f3bf 8f6f 	isb	sy
 8010bac:	e7e1      	b.n	8010b72 <xQueueReceive+0x2be>
 8010bae:	bf00      	nop

08010bb0 <xQueueSemaphoreTake>:
{
 8010bb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010bb4:	b084      	sub	sp, #16
 8010bb6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8010bb8:	2800      	cmp	r0, #0
 8010bba:	d05c      	beq.n	8010c76 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 8010bbc:	6c07      	ldr	r7, [r0, #64]	; 0x40
 8010bbe:	4604      	mov	r4, r0
 8010bc0:	b147      	cbz	r7, 8010bd4 <xQueueSemaphoreTake+0x24>
 8010bc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010bc6:	f383 8811 	msr	BASEPRI, r3
 8010bca:	f3bf 8f6f 	isb	sy
 8010bce:	f3bf 8f4f 	dsb	sy
 8010bd2:	e7fe      	b.n	8010bd2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010bd4:	f001 f85e 	bl	8011c94 <xTaskGetSchedulerState>
 8010bd8:	4605      	mov	r5, r0
 8010bda:	2800      	cmp	r0, #0
 8010bdc:	d054      	beq.n	8010c88 <xQueueSemaphoreTake+0xd8>
 8010bde:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010be0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 8010be4:	f7ff f936 	bl	800fe54 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8010be8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8010bea:	2b00      	cmp	r3, #0
 8010bec:	f040 8148 	bne.w	8010e80 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010bf0:	9b01      	ldr	r3, [sp, #4]
 8010bf2:	2b00      	cmp	r3, #0
 8010bf4:	f000 813a 	beq.w	8010e6c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 8010bf8:	2d00      	cmp	r5, #0
 8010bfa:	f000 809d 	beq.w	8010d38 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 8010bfe:	f7ff f94b 	bl	800fe98 <vPortExitCritical>
		vTaskSuspendAll();
 8010c02:	f000 fe9d 	bl	8011940 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010c06:	f7ff f925 	bl	800fe54 <vPortEnterCritical>
 8010c0a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010c0e:	2bff      	cmp	r3, #255	; 0xff
 8010c10:	bf04      	itt	eq
 8010c12:	2300      	moveq	r3, #0
 8010c14:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8010c18:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010c1c:	2bff      	cmp	r3, #255	; 0xff
 8010c1e:	bf04      	itt	eq
 8010c20:	2300      	moveq	r3, #0
 8010c22:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8010c26:	f7ff f937 	bl	800fe98 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010c2a:	a901      	add	r1, sp, #4
 8010c2c:	a802      	add	r0, sp, #8
 8010c2e:	f000 ffe3 	bl	8011bf8 <xTaskCheckForTimeOut>
 8010c32:	2800      	cmp	r0, #0
 8010c34:	d135      	bne.n	8010ca2 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 8010c36:	f7ff f90d 	bl	800fe54 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010c3a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010c3c:	2b00      	cmp	r3, #0
 8010c3e:	f000 80a4 	beq.w	8010d8a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 8010c42:	f7ff f929 	bl	800fe98 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010c46:	f7ff f905 	bl	800fe54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010c4a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010c4e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c50:	2d00      	cmp	r5, #0
 8010c52:	dc05      	bgt.n	8010c60 <xQueueSemaphoreTake+0xb0>
 8010c54:	e074      	b.n	8010d40 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 8010c56:	1e6b      	subs	r3, r5, #1
 8010c58:	b2da      	uxtb	r2, r3
 8010c5a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c5c:	2a00      	cmp	r2, #0
 8010c5e:	d06f      	beq.n	8010d40 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010c60:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010c62:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010c64:	2b00      	cmp	r3, #0
 8010c66:	d06b      	beq.n	8010d40 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010c68:	f000 ff72 	bl	8011b50 <xTaskRemoveFromEventList>
 8010c6c:	2800      	cmp	r0, #0
 8010c6e:	d0f2      	beq.n	8010c56 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 8010c70:	f001 f80a 	bl	8011c88 <vTaskMissedYield>
 8010c74:	e7ef      	b.n	8010c56 <xQueueSemaphoreTake+0xa6>
 8010c76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010c7a:	f383 8811 	msr	BASEPRI, r3
 8010c7e:	f3bf 8f6f 	isb	sy
 8010c82:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 8010c86:	e7fe      	b.n	8010c86 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010c88:	9b01      	ldr	r3, [sp, #4]
 8010c8a:	2b00      	cmp	r3, #0
 8010c8c:	f000 80d4 	beq.w	8010e38 <xQueueSemaphoreTake+0x288>
 8010c90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010c94:	f383 8811 	msr	BASEPRI, r3
 8010c98:	f3bf 8f6f 	isb	sy
 8010c9c:	f3bf 8f4f 	dsb	sy
 8010ca0:	e7fe      	b.n	8010ca0 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 8010ca2:	f7ff f8d7 	bl	800fe54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010ca6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010caa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010cac:	2d00      	cmp	r5, #0
 8010cae:	dc04      	bgt.n	8010cba <xQueueSemaphoreTake+0x10a>
 8010cb0:	e011      	b.n	8010cd6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 8010cb2:	1e6b      	subs	r3, r5, #1
 8010cb4:	b2da      	uxtb	r2, r3
 8010cb6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010cb8:	b16a      	cbz	r2, 8010cd6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010cba:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010cbc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010cbe:	b153      	cbz	r3, 8010cd6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010cc0:	f000 ff46 	bl	8011b50 <xTaskRemoveFromEventList>
 8010cc4:	2800      	cmp	r0, #0
 8010cc6:	d0f4      	beq.n	8010cb2 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 8010cc8:	f000 ffde 	bl	8011c88 <vTaskMissedYield>
			--cTxLock;
 8010ccc:	1e6b      	subs	r3, r5, #1
 8010cce:	b2da      	uxtb	r2, r3
 8010cd0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010cd2:	2a00      	cmp	r2, #0
 8010cd4:	d1f1      	bne.n	8010cba <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 8010cd6:	23ff      	movs	r3, #255	; 0xff
 8010cd8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010cdc:	f7ff f8dc 	bl	800fe98 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010ce0:	f7ff f8b8 	bl	800fe54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010ce4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010ce8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010cea:	2d00      	cmp	r5, #0
 8010cec:	dd14      	ble.n	8010d18 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010cee:	f104 0810 	add.w	r8, r4, #16
 8010cf2:	e003      	b.n	8010cfc <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 8010cf4:	1e6b      	subs	r3, r5, #1
 8010cf6:	b2da      	uxtb	r2, r3
 8010cf8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010cfa:	b16a      	cbz	r2, 8010d18 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010cfc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010cfe:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010d00:	b153      	cbz	r3, 8010d18 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010d02:	f000 ff25 	bl	8011b50 <xTaskRemoveFromEventList>
 8010d06:	2800      	cmp	r0, #0
 8010d08:	d0f4      	beq.n	8010cf4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 8010d0a:	f000 ffbd 	bl	8011c88 <vTaskMissedYield>
				--cRxLock;
 8010d0e:	1e6b      	subs	r3, r5, #1
 8010d10:	b2da      	uxtb	r2, r3
 8010d12:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010d14:	2a00      	cmp	r2, #0
 8010d16:	d1f1      	bne.n	8010cfc <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 8010d18:	23ff      	movs	r3, #255	; 0xff
 8010d1a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010d1e:	f7ff f8bb 	bl	800fe98 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010d22:	f000 fe15 	bl	8011950 <xTaskResumeAll>
	taskENTER_CRITICAL();
 8010d26:	f7ff f895 	bl	800fe54 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010d2a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010d2c:	2b00      	cmp	r3, #0
 8010d2e:	d07c      	beq.n	8010e2a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 8010d30:	f7ff f8b2 	bl	800fe98 <vPortExitCritical>
	return xReturn;
 8010d34:	2501      	movs	r5, #1
 8010d36:	e755      	b.n	8010be4 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010d38:	a802      	add	r0, sp, #8
 8010d3a:	f000 ff51 	bl	8011be0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 8010d3e:	e75e      	b.n	8010bfe <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 8010d40:	23ff      	movs	r3, #255	; 0xff
 8010d42:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010d46:	f7ff f8a7 	bl	800fe98 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010d4a:	f7ff f883 	bl	800fe54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010d4e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010d52:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010d54:	2d00      	cmp	r5, #0
 8010d56:	dd10      	ble.n	8010d7a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010d58:	f104 0810 	add.w	r8, r4, #16
 8010d5c:	e003      	b.n	8010d66 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 8010d5e:	1e6b      	subs	r3, r5, #1
 8010d60:	b2da      	uxtb	r2, r3
 8010d62:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010d64:	b14a      	cbz	r2, 8010d7a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010d66:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010d68:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010d6a:	b133      	cbz	r3, 8010d7a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010d6c:	f000 fef0 	bl	8011b50 <xTaskRemoveFromEventList>
 8010d70:	2800      	cmp	r0, #0
 8010d72:	d0f4      	beq.n	8010d5e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 8010d74:	f000 ff88 	bl	8011c88 <vTaskMissedYield>
 8010d78:	e7f1      	b.n	8010d5e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 8010d7a:	23ff      	movs	r3, #255	; 0xff
 8010d7c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010d80:	f7ff f88a 	bl	800fe98 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010d84:	f000 fde4 	bl	8011950 <xTaskResumeAll>
 8010d88:	e7d4      	b.n	8010d34 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 8010d8a:	f7ff f885 	bl	800fe98 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8010d8e:	6823      	ldr	r3, [r4, #0]
 8010d90:	2b00      	cmp	r3, #0
 8010d92:	d062      	beq.n	8010e5a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8010d94:	9901      	ldr	r1, [sp, #4]
 8010d96:	4630      	mov	r0, r6
 8010d98:	f000 fe4c 	bl	8011a34 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 8010d9c:	f7ff f85a 	bl	800fe54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010da0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010da4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010da6:	2d00      	cmp	r5, #0
 8010da8:	dc04      	bgt.n	8010db4 <xQueueSemaphoreTake+0x204>
 8010daa:	e00d      	b.n	8010dc8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 8010dac:	1e6b      	subs	r3, r5, #1
 8010dae:	b2da      	uxtb	r2, r3
 8010db0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010db2:	b14a      	cbz	r2, 8010dc8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010db4:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010db6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010db8:	b133      	cbz	r3, 8010dc8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010dba:	f000 fec9 	bl	8011b50 <xTaskRemoveFromEventList>
 8010dbe:	2800      	cmp	r0, #0
 8010dc0:	d0f4      	beq.n	8010dac <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 8010dc2:	f000 ff61 	bl	8011c88 <vTaskMissedYield>
 8010dc6:	e7f1      	b.n	8010dac <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 8010dc8:	23ff      	movs	r3, #255	; 0xff
 8010dca:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010dce:	f7ff f863 	bl	800fe98 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010dd2:	f7ff f83f 	bl	800fe54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010dd6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010dda:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010ddc:	2d00      	cmp	r5, #0
 8010dde:	dd10      	ble.n	8010e02 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010de0:	f104 0810 	add.w	r8, r4, #16
 8010de4:	e003      	b.n	8010dee <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 8010de6:	1e6b      	subs	r3, r5, #1
 8010de8:	b2da      	uxtb	r2, r3
 8010dea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010dec:	b14a      	cbz	r2, 8010e02 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010dee:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010df0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010df2:	b133      	cbz	r3, 8010e02 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010df4:	f000 feac 	bl	8011b50 <xTaskRemoveFromEventList>
 8010df8:	2800      	cmp	r0, #0
 8010dfa:	d0f4      	beq.n	8010de6 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 8010dfc:	f000 ff44 	bl	8011c88 <vTaskMissedYield>
 8010e00:	e7f1      	b.n	8010de6 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 8010e02:	23ff      	movs	r3, #255	; 0xff
 8010e04:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010e08:	f7ff f846 	bl	800fe98 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 8010e0c:	f000 fda0 	bl	8011950 <xTaskResumeAll>
 8010e10:	2800      	cmp	r0, #0
 8010e12:	d18f      	bne.n	8010d34 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 8010e14:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010e18:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010e1c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010e20:	f3bf 8f4f 	dsb	sy
 8010e24:	f3bf 8f6f 	isb	sy
 8010e28:	e784      	b.n	8010d34 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 8010e2a:	f7ff f835 	bl	800fe98 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 8010e2e:	b92f      	cbnz	r7, 8010e3c <xQueueSemaphoreTake+0x28c>
}
 8010e30:	4638      	mov	r0, r7
 8010e32:	b004      	add	sp, #16
 8010e34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010e38:	4607      	mov	r7, r0
 8010e3a:	e6d1      	b.n	8010be0 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 8010e3c:	f7ff f80a 	bl	800fe54 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8010e40:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010e42:	b119      	cbz	r1, 8010e4c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8010e44:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010e46:	6819      	ldr	r1, [r3, #0]
 8010e48:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8010e4c:	68a0      	ldr	r0, [r4, #8]
 8010e4e:	f000 ffbd 	bl	8011dcc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8010e52:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 8010e54:	f7ff f820 	bl	800fe98 <vPortExitCritical>
 8010e58:	e7ea      	b.n	8010e30 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 8010e5a:	f7fe fffb 	bl	800fe54 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8010e5e:	68a0      	ldr	r0, [r4, #8]
 8010e60:	f000 ff28 	bl	8011cb4 <xTaskPriorityInherit>
 8010e64:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 8010e66:	f7ff f817 	bl	800fe98 <vPortExitCritical>
 8010e6a:	e793      	b.n	8010d94 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8010e6c:	b197      	cbz	r7, 8010e94 <xQueueSemaphoreTake+0x2e4>
 8010e6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010e72:	f383 8811 	msr	BASEPRI, r3
 8010e76:	f3bf 8f6f 	isb	sy
 8010e7a:	f3bf 8f4f 	dsb	sy
 8010e7e:	e7fe      	b.n	8010e7e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8010e80:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8010e82:	3b01      	subs	r3, #1
 8010e84:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8010e86:	b1ca      	cbz	r2, 8010ebc <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010e88:	6923      	ldr	r3, [r4, #16]
 8010e8a:	b933      	cbnz	r3, 8010e9a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 8010e8c:	f7ff f804 	bl	800fe98 <vPortExitCritical>
				return pdPASS;
 8010e90:	2701      	movs	r7, #1
 8010e92:	e7cd      	b.n	8010e30 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 8010e94:	f7ff f800 	bl	800fe98 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8010e98:	e7ca      	b.n	8010e30 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010e9a:	f104 0010 	add.w	r0, r4, #16
 8010e9e:	f000 fe57 	bl	8011b50 <xTaskRemoveFromEventList>
 8010ea2:	2800      	cmp	r0, #0
 8010ea4:	d0f2      	beq.n	8010e8c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 8010ea6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010eaa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010eae:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010eb2:	f3bf 8f4f 	dsb	sy
 8010eb6:	f3bf 8f6f 	isb	sy
 8010eba:	e7e7      	b.n	8010e8c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8010ebc:	f000 ffda 	bl	8011e74 <pvTaskIncrementMutexHeldCount>
 8010ec0:	60a0      	str	r0, [r4, #8]
 8010ec2:	e7e1      	b.n	8010e88 <xQueueSemaphoreTake+0x2d8>

08010ec4 <xQueueReceiveFromISR>:
{
 8010ec4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 8010ec8:	b310      	cbz	r0, 8010f10 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010eca:	460e      	mov	r6, r1
 8010ecc:	4617      	mov	r7, r2
 8010ece:	4604      	mov	r4, r0
 8010ed0:	b191      	cbz	r1, 8010ef8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8010ed2:	f7ff f8f3 	bl	80100bc <vPortValidateInterruptPriority>
	__asm volatile
 8010ed6:	f3ef 8911 	mrs	r9, BASEPRI
 8010eda:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ede:	f383 8811 	msr	BASEPRI, r3
 8010ee2:	f3bf 8f6f 	isb	sy
 8010ee6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010eea:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010eec:	b9cd      	cbnz	r5, 8010f22 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 8010eee:	4628      	mov	r0, r5
	__asm volatile
 8010ef0:	f389 8811 	msr	BASEPRI, r9
}
 8010ef4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010ef8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010efa:	2b00      	cmp	r3, #0
 8010efc:	d0e9      	beq.n	8010ed2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 8010efe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010f02:	f383 8811 	msr	BASEPRI, r3
 8010f06:	f3bf 8f6f 	isb	sy
 8010f0a:	f3bf 8f4f 	dsb	sy
 8010f0e:	e7fe      	b.n	8010f0e <xQueueReceiveFromISR+0x4a>
 8010f10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010f14:	f383 8811 	msr	BASEPRI, r3
 8010f18:	f3bf 8f6f 	isb	sy
 8010f1c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010f20:	e7fe      	b.n	8010f20 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 8010f22:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8010f26:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 8010f28:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8010f2c:	b152      	cbz	r2, 8010f44 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010f2e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010f30:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010f32:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010f34:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010f36:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8010f38:	bf24      	itt	cs
 8010f3a:	6821      	ldrcs	r1, [r4, #0]
 8010f3c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8010f3e:	4630      	mov	r0, r6
 8010f40:	f01c ff69 	bl	802de16 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8010f44:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 8010f46:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8010f4a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8010f4c:	d009      	beq.n	8010f62 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8010f4e:	f108 0301 	add.w	r3, r8, #1
 8010f52:	b25b      	sxtb	r3, r3
 8010f54:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 8010f58:	2001      	movs	r0, #1
	__asm volatile
 8010f5a:	f389 8811 	msr	BASEPRI, r9
}
 8010f5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010f62:	6923      	ldr	r3, [r4, #16]
 8010f64:	2b00      	cmp	r3, #0
 8010f66:	d0f7      	beq.n	8010f58 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f68:	f104 0010 	add.w	r0, r4, #16
 8010f6c:	f000 fdf0 	bl	8011b50 <xTaskRemoveFromEventList>
 8010f70:	2800      	cmp	r0, #0
 8010f72:	d0f1      	beq.n	8010f58 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 8010f74:	2f00      	cmp	r7, #0
 8010f76:	d0ef      	beq.n	8010f58 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8010f78:	2001      	movs	r0, #1
 8010f7a:	6038      	str	r0, [r7, #0]
 8010f7c:	e7b8      	b.n	8010ef0 <xQueueReceiveFromISR+0x2c>
 8010f7e:	bf00      	nop

08010f80 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 8010f80:	b158      	cbz	r0, 8010f9a <uxQueueMessagesWaiting+0x1a>
{
 8010f82:	b510      	push	{r4, lr}
 8010f84:	4604      	mov	r4, r0
 8010f86:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 8010f88:	f7fe ff64 	bl	800fe54 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 8010f8c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8010f8e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8010f90:	f7fe ff82 	bl	800fe98 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8010f94:	9801      	ldr	r0, [sp, #4]
 8010f96:	b002      	add	sp, #8
 8010f98:	bd10      	pop	{r4, pc}
	__asm volatile
 8010f9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010f9e:	f383 8811 	msr	BASEPRI, r3
 8010fa2:	f3bf 8f6f 	isb	sy
 8010fa6:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 8010faa:	e7fe      	b.n	8010faa <uxQueueMessagesWaiting+0x2a>

08010fac <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 8010fac:	b108      	cbz	r0, 8010fb2 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 8010fae:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8010fb0:	4770      	bx	lr
 8010fb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010fb6:	f383 8811 	msr	BASEPRI, r3
 8010fba:	f3bf 8f6f 	isb	sy
 8010fbe:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010fc2:	e7fe      	b.n	8010fc2 <uxQueueMessagesWaitingFromISR+0x16>
 8010fc4:	0000      	movs	r0, r0
	...

08010fc8 <vQueueDelete>:
	configASSERT( pxQueue );
 8010fc8:	b1f0      	cbz	r0, 8011008 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8010fca:	4b21      	ldr	r3, [pc, #132]	; (8011050 <vQueueDelete+0x88>)
 8010fcc:	685a      	ldr	r2, [r3, #4]
 8010fce:	4290      	cmp	r0, r2
 8010fd0:	d025      	beq.n	801101e <vQueueDelete+0x56>
 8010fd2:	68da      	ldr	r2, [r3, #12]
 8010fd4:	4290      	cmp	r0, r2
 8010fd6:	d02c      	beq.n	8011032 <vQueueDelete+0x6a>
 8010fd8:	695a      	ldr	r2, [r3, #20]
 8010fda:	4290      	cmp	r0, r2
 8010fdc:	d02b      	beq.n	8011036 <vQueueDelete+0x6e>
 8010fde:	69da      	ldr	r2, [r3, #28]
 8010fe0:	4290      	cmp	r0, r2
 8010fe2:	d02a      	beq.n	801103a <vQueueDelete+0x72>
 8010fe4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8010fe6:	4290      	cmp	r0, r2
 8010fe8:	d029      	beq.n	801103e <vQueueDelete+0x76>
 8010fea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8010fec:	4290      	cmp	r0, r2
 8010fee:	d01e      	beq.n	801102e <vQueueDelete+0x66>
 8010ff0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8010ff2:	4290      	cmp	r0, r2
 8010ff4:	d025      	beq.n	8011042 <vQueueDelete+0x7a>
 8010ff6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8010ff8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8010ffa:	bf08      	it	eq
 8010ffc:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8010ffe:	d00f      	beq.n	8011020 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8011000:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 8011004:	b14b      	cbz	r3, 801101a <vQueueDelete+0x52>
}
 8011006:	4770      	bx	lr
 8011008:	f04f 0350 	mov.w	r3, #80	; 0x50
 801100c:	f383 8811 	msr	BASEPRI, r3
 8011010:	f3bf 8f6f 	isb	sy
 8011014:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8011018:	e7fe      	b.n	8011018 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 801101a:	f7fe be07 	b.w	800fc2c <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801101e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8011020:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8011048 <vQueueDelete+0x80>
 8011024:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8011028:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 801102c:	e7e8      	b.n	8011000 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801102e:	2205      	movs	r2, #5
 8011030:	e7f6      	b.n	8011020 <vQueueDelete+0x58>
 8011032:	2201      	movs	r2, #1
 8011034:	e7f4      	b.n	8011020 <vQueueDelete+0x58>
 8011036:	2202      	movs	r2, #2
 8011038:	e7f2      	b.n	8011020 <vQueueDelete+0x58>
 801103a:	2203      	movs	r2, #3
 801103c:	e7f0      	b.n	8011020 <vQueueDelete+0x58>
 801103e:	2204      	movs	r2, #4
 8011040:	e7ee      	b.n	8011020 <vQueueDelete+0x58>
 8011042:	2206      	movs	r2, #6
 8011044:	e7ec      	b.n	8011020 <vQueueDelete+0x58>
 8011046:	bf00      	nop
	...
 8011050:	200131e0 	.word	0x200131e0

08011054 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8011054:	4b12      	ldr	r3, [pc, #72]	; (80110a0 <vQueueAddToRegistry+0x4c>)
 8011056:	681a      	ldr	r2, [r3, #0]
 8011058:	b17a      	cbz	r2, 801107a <vQueueAddToRegistry+0x26>
 801105a:	689a      	ldr	r2, [r3, #8]
 801105c:	b162      	cbz	r2, 8011078 <vQueueAddToRegistry+0x24>
 801105e:	691a      	ldr	r2, [r3, #16]
 8011060:	b192      	cbz	r2, 8011088 <vQueueAddToRegistry+0x34>
 8011062:	699a      	ldr	r2, [r3, #24]
 8011064:	b192      	cbz	r2, 801108c <vQueueAddToRegistry+0x38>
 8011066:	6a1a      	ldr	r2, [r3, #32]
 8011068:	b192      	cbz	r2, 8011090 <vQueueAddToRegistry+0x3c>
 801106a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 801106c:	b192      	cbz	r2, 8011094 <vQueueAddToRegistry+0x40>
 801106e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8011070:	b192      	cbz	r2, 8011098 <vQueueAddToRegistry+0x44>
 8011072:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8011074:	b192      	cbz	r2, 801109c <vQueueAddToRegistry+0x48>
	}
 8011076:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8011078:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 801107a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 801107e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8011082:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 8011086:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8011088:	2202      	movs	r2, #2
 801108a:	e7f6      	b.n	801107a <vQueueAddToRegistry+0x26>
 801108c:	2203      	movs	r2, #3
 801108e:	e7f4      	b.n	801107a <vQueueAddToRegistry+0x26>
 8011090:	2204      	movs	r2, #4
 8011092:	e7f2      	b.n	801107a <vQueueAddToRegistry+0x26>
 8011094:	2205      	movs	r2, #5
 8011096:	e7f0      	b.n	801107a <vQueueAddToRegistry+0x26>
 8011098:	2206      	movs	r2, #6
 801109a:	e7ee      	b.n	801107a <vQueueAddToRegistry+0x26>
 801109c:	2207      	movs	r2, #7
 801109e:	e7ec      	b.n	801107a <vQueueAddToRegistry+0x26>
 80110a0:	200131e0 	.word	0x200131e0

080110a4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 80110a4:	b570      	push	{r4, r5, r6, lr}
 80110a6:	4605      	mov	r5, r0
 80110a8:	460e      	mov	r6, r1
 80110aa:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 80110ac:	f7fe fed2 	bl	800fe54 <vPortEnterCritical>
 80110b0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 80110b4:	2bff      	cmp	r3, #255	; 0xff
 80110b6:	bf04      	itt	eq
 80110b8:	2300      	moveq	r3, #0
 80110ba:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 80110be:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 80110c2:	2bff      	cmp	r3, #255	; 0xff
 80110c4:	bf04      	itt	eq
 80110c6:	2300      	moveq	r3, #0
 80110c8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 80110cc:	f7fe fee4 	bl	800fe98 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80110d0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 80110d2:	2b00      	cmp	r3, #0
 80110d4:	d043      	beq.n	801115e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 80110d6:	f7fe febd 	bl	800fe54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80110da:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 80110de:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80110e0:	2c00      	cmp	r4, #0
 80110e2:	dd14      	ble.n	801110e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80110e4:	f105 0624 	add.w	r6, r5, #36	; 0x24
 80110e8:	e003      	b.n	80110f2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 80110ea:	1e63      	subs	r3, r4, #1
 80110ec:	b2da      	uxtb	r2, r3
 80110ee:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80110f0:	b16a      	cbz	r2, 801110e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80110f2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80110f4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80110f6:	b153      	cbz	r3, 801110e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80110f8:	f000 fd2a 	bl	8011b50 <xTaskRemoveFromEventList>
 80110fc:	2800      	cmp	r0, #0
 80110fe:	d0f4      	beq.n	80110ea <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 8011100:	f000 fdc2 	bl	8011c88 <vTaskMissedYield>
			--cTxLock;
 8011104:	1e63      	subs	r3, r4, #1
 8011106:	b2da      	uxtb	r2, r3
 8011108:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801110a:	2a00      	cmp	r2, #0
 801110c:	d1f1      	bne.n	80110f2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 801110e:	23ff      	movs	r3, #255	; 0xff
 8011110:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 8011114:	f7fe fec0 	bl	800fe98 <vPortExitCritical>
	taskENTER_CRITICAL();
 8011118:	f7fe fe9c 	bl	800fe54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 801111c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 8011120:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011122:	2c00      	cmp	r4, #0
 8011124:	dd14      	ble.n	8011150 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011126:	f105 0610 	add.w	r6, r5, #16
 801112a:	e003      	b.n	8011134 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 801112c:	1e63      	subs	r3, r4, #1
 801112e:	b2da      	uxtb	r2, r3
 8011130:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8011132:	b16a      	cbz	r2, 8011150 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011134:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8011136:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011138:	b153      	cbz	r3, 8011150 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801113a:	f000 fd09 	bl	8011b50 <xTaskRemoveFromEventList>
 801113e:	2800      	cmp	r0, #0
 8011140:	d0f4      	beq.n	801112c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 8011142:	f000 fda1 	bl	8011c88 <vTaskMissedYield>
				--cRxLock;
 8011146:	1e63      	subs	r3, r4, #1
 8011148:	b2da      	uxtb	r2, r3
 801114a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 801114c:	2a00      	cmp	r2, #0
 801114e:	d1f1      	bne.n	8011134 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 8011150:	23ff      	movs	r3, #255	; 0xff
 8011152:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 8011156:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 801115a:	f7fe be9d 	b.w	800fe98 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 801115e:	4622      	mov	r2, r4
 8011160:	4631      	mov	r1, r6
 8011162:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8011166:	f000 fca9 	bl	8011abc <vTaskPlaceOnEventListRestricted>
 801116a:	e7b4      	b.n	80110d6 <vQueueWaitForMessageRestricted+0x32>

0801116c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 801116c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011170:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8011172:	f7fe fe6f 	bl	800fe54 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8011176:	4a34      	ldr	r2, [pc, #208]	; (8011248 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 8011178:	4e34      	ldr	r6, [pc, #208]	; (801124c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 801117a:	6813      	ldr	r3, [r2, #0]
 801117c:	3301      	adds	r3, #1
 801117e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 8011180:	6833      	ldr	r3, [r6, #0]
 8011182:	2b00      	cmp	r3, #0
 8011184:	d032      	beq.n	80111ec <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 8011186:	4c32      	ldr	r4, [pc, #200]	; (8011250 <prvAddNewTaskToReadyList+0xe4>)
 8011188:	6823      	ldr	r3, [r4, #0]
 801118a:	b33b      	cbz	r3, 80111dc <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 801118c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 801118e:	4f31      	ldr	r7, [pc, #196]	; (8011254 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 8011190:	4a31      	ldr	r2, [pc, #196]	; (8011258 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 8011192:	4932      	ldr	r1, [pc, #200]	; (801125c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 8011194:	6813      	ldr	r3, [r2, #0]
 8011196:	3301      	adds	r3, #1
 8011198:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 801119a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 801119c:	680b      	ldr	r3, [r1, #0]
 801119e:	4283      	cmp	r3, r0
 80111a0:	bf38      	it	cc
 80111a2:	6008      	strcc	r0, [r1, #0]
 80111a4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80111a8:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 80111ac:	1d29      	adds	r1, r5, #4
 80111ae:	f7fe fdb1 	bl	800fd14 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 80111b2:	f7fe fe71 	bl	800fe98 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 80111b6:	6823      	ldr	r3, [r4, #0]
 80111b8:	b173      	cbz	r3, 80111d8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 80111ba:	6832      	ldr	r2, [r6, #0]
 80111bc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 80111be:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80111c0:	429a      	cmp	r2, r3
 80111c2:	d209      	bcs.n	80111d8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 80111c4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80111c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80111cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80111d0:	f3bf 8f4f 	dsb	sy
 80111d4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80111d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80111dc:	6833      	ldr	r3, [r6, #0]
 80111de:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 80111e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80111e2:	4f1c      	ldr	r7, [pc, #112]	; (8011254 <prvAddNewTaskToReadyList+0xe8>)
 80111e4:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 80111e6:	bf98      	it	ls
 80111e8:	6035      	strls	r5, [r6, #0]
 80111ea:	e7d1      	b.n	8011190 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 80111ec:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80111ee:	6813      	ldr	r3, [r2, #0]
 80111f0:	2b01      	cmp	r3, #1
 80111f2:	d003      	beq.n	80111fc <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 80111f4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 80111f6:	4f17      	ldr	r7, [pc, #92]	; (8011254 <prvAddNewTaskToReadyList+0xe8>)
 80111f8:	4c15      	ldr	r4, [pc, #84]	; (8011250 <prvAddNewTaskToReadyList+0xe4>)
 80111fa:	e7c9      	b.n	8011190 <prvAddNewTaskToReadyList+0x24>
 80111fc:	4f15      	ldr	r7, [pc, #84]	; (8011254 <prvAddNewTaskToReadyList+0xe8>)
 80111fe:	463c      	mov	r4, r7
 8011200:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8011204:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8011206:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8011208:	f7fe fd74 	bl	800fcf4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 801120c:	45a0      	cmp	r8, r4
 801120e:	d1f9      	bne.n	8011204 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 8011210:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8011274 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 8011214:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8011278 <prvAddNewTaskToReadyList+0x10c>
 8011218:	4c0d      	ldr	r4, [pc, #52]	; (8011250 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 801121a:	4648      	mov	r0, r9
 801121c:	f7fe fd6a 	bl	800fcf4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8011220:	4640      	mov	r0, r8
 8011222:	f7fe fd67 	bl	800fcf4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8011226:	480e      	ldr	r0, [pc, #56]	; (8011260 <prvAddNewTaskToReadyList+0xf4>)
 8011228:	f7fe fd64 	bl	800fcf4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 801122c:	480d      	ldr	r0, [pc, #52]	; (8011264 <prvAddNewTaskToReadyList+0xf8>)
 801122e:	f7fe fd61 	bl	800fcf4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8011232:	480d      	ldr	r0, [pc, #52]	; (8011268 <prvAddNewTaskToReadyList+0xfc>)
 8011234:	f7fe fd5e 	bl	800fcf4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8011238:	4b0c      	ldr	r3, [pc, #48]	; (801126c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 801123a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 801123c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8011240:	4b0b      	ldr	r3, [pc, #44]	; (8011270 <prvAddNewTaskToReadyList+0x104>)
 8011242:	f8c3 8000 	str.w	r8, [r3]
}
 8011246:	e7a3      	b.n	8011190 <prvAddNewTaskToReadyList+0x24>
 8011248:	2001368c 	.word	0x2001368c
 801124c:	20013220 	.word	0x20013220
 8011250:	200136e8 	.word	0x200136e8
 8011254:	2001322c 	.word	0x2001322c
 8011258:	20013698 	.word	0x20013698
 801125c:	2001369c 	.word	0x2001369c
 8011260:	200136d4 	.word	0x200136d4
 8011264:	20013700 	.word	0x20013700
 8011268:	200136ec 	.word	0x200136ec
 801126c:	20013224 	.word	0x20013224
 8011270:	20013228 	.word	0x20013228
 8011274:	200136a0 	.word	0x200136a0
 8011278:	200136b4 	.word	0x200136b4

0801127c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 801127c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011280:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8011282:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8011286:	ea4f 0982 	mov.w	r9, r2, lsl #2
 801128a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 801128c:	4606      	mov	r6, r0
 801128e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8011290:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011292:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8011294:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8011296:	f01c fc98 	bl	802dbca <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 801129a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801129c:	f1a9 0904 	sub.w	r9, r9, #4
 80112a0:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80112a2:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 80112a6:	2d00      	cmp	r5, #0
 80112a8:	d079      	beq.n	801139e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80112aa:	782b      	ldrb	r3, [r5, #0]
 80112ac:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 80112b0:	2b00      	cmp	r3, #0
 80112b2:	d03b      	beq.n	801132c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80112b4:	786b      	ldrb	r3, [r5, #1]
 80112b6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 80112ba:	2b00      	cmp	r3, #0
 80112bc:	d036      	beq.n	801132c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80112be:	78ab      	ldrb	r3, [r5, #2]
 80112c0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 80112c4:	b393      	cbz	r3, 801132c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80112c6:	78eb      	ldrb	r3, [r5, #3]
 80112c8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 80112cc:	b373      	cbz	r3, 801132c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80112ce:	792b      	ldrb	r3, [r5, #4]
 80112d0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 80112d4:	b353      	cbz	r3, 801132c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80112d6:	796b      	ldrb	r3, [r5, #5]
 80112d8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 80112dc:	b333      	cbz	r3, 801132c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80112de:	79ab      	ldrb	r3, [r5, #6]
 80112e0:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 80112e4:	b313      	cbz	r3, 801132c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80112e6:	79eb      	ldrb	r3, [r5, #7]
 80112e8:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 80112ec:	b1f3      	cbz	r3, 801132c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80112ee:	7a2b      	ldrb	r3, [r5, #8]
 80112f0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 80112f4:	b1d3      	cbz	r3, 801132c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80112f6:	7a6b      	ldrb	r3, [r5, #9]
 80112f8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 80112fc:	b1b3      	cbz	r3, 801132c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80112fe:	7aab      	ldrb	r3, [r5, #10]
 8011300:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 8011304:	b193      	cbz	r3, 801132c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011306:	7aeb      	ldrb	r3, [r5, #11]
 8011308:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 801130c:	b173      	cbz	r3, 801132c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801130e:	7b2b      	ldrb	r3, [r5, #12]
 8011310:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 8011314:	b153      	cbz	r3, 801132c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011316:	7b6b      	ldrb	r3, [r5, #13]
 8011318:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 801131c:	b133      	cbz	r3, 801132c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801131e:	7bab      	ldrb	r3, [r5, #14]
 8011320:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 8011324:	b113      	cbz	r3, 801132c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011326:	7beb      	ldrb	r3, [r5, #15]
 8011328:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 801132c:	2300      	movs	r3, #0
 801132e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8011332:	9d08      	ldr	r5, [sp, #32]
 8011334:	2d37      	cmp	r5, #55	; 0x37
 8011336:	bf28      	it	cs
 8011338:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 801133a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 801133e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8011340:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8011342:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8011344:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8011348:	f7fe fce0 	bl	800fd0c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801134c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8011350:	f104 0018 	add.w	r0, r4, #24
 8011354:	f7fe fcda 	bl	800fd0c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011358:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 801135a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 801135e:	4651      	mov	r1, sl
 8011360:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8011362:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8011364:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8011366:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 801136a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 801136e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8011372:	f01c fc2a 	bl	802dbca <memset>
 8011376:	4b0b      	ldr	r3, [pc, #44]	; (80113a4 <prvInitialiseNewTask.constprop.0+0x128>)
 8011378:	65e3      	str	r3, [r4, #92]	; 0x5c
 801137a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 801137e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8011380:	463a      	mov	r2, r7
 8011382:	4631      	mov	r1, r6
 8011384:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8011386:	6625      	str	r5, [r4, #96]	; 0x60
 8011388:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 801138a:	f7fe fd3d 	bl	800fe08 <pxPortInitialiseStack>
 801138e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8011390:	f1b8 0f00 	cmp.w	r8, #0
 8011394:	d001      	beq.n	801139a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8011396:	f8c8 4000 	str.w	r4, [r8]
}
 801139a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 801139e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 80113a2:	e7c6      	b.n	8011332 <prvInitialiseNewTask.constprop.0+0xb6>
 80113a4:	200141b0 	.word	0x200141b0

080113a8 <prvIdleTask>:
{
 80113a8:	b580      	push	{r7, lr}
 80113aa:	4d23      	ldr	r5, [pc, #140]	; (8011438 <prvIdleTask+0x90>)
 80113ac:	4f23      	ldr	r7, [pc, #140]	; (801143c <prvIdleTask+0x94>)
 80113ae:	4e24      	ldr	r6, [pc, #144]	; (8011440 <prvIdleTask+0x98>)
 80113b0:	f8df 8090 	ldr.w	r8, [pc, #144]	; 8011444 <prvIdleTask+0x9c>
				taskYIELD();
 80113b4:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 80113b8:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 80113bc:	682b      	ldr	r3, [r5, #0]
 80113be:	b35b      	cbz	r3, 8011418 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 80113c0:	f7fe fd48 	bl	800fe54 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80113c4:	68fb      	ldr	r3, [r7, #12]
 80113c6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80113c8:	1d20      	adds	r0, r4, #4
 80113ca:	f7fe fccb 	bl	800fd64 <uxListRemove>
				--uxCurrentNumberOfTasks;
 80113ce:	6833      	ldr	r3, [r6, #0]
 80113d0:	3b01      	subs	r3, #1
 80113d2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 80113d4:	682b      	ldr	r3, [r5, #0]
 80113d6:	3b01      	subs	r3, #1
 80113d8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 80113da:	f7fe fd5d 	bl	800fe98 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 80113de:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80113e2:	f01c fc3b 	bl	802dc5c <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 80113e6:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 80113ea:	b163      	cbz	r3, 8011406 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 80113ec:	2b01      	cmp	r3, #1
 80113ee:	d01e      	beq.n	801142e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 80113f0:	2b02      	cmp	r3, #2
 80113f2:	d0e3      	beq.n	80113bc <prvIdleTask+0x14>
 80113f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80113f8:	f383 8811 	msr	BASEPRI, r3
 80113fc:	f3bf 8f6f 	isb	sy
 8011400:	f3bf 8f4f 	dsb	sy
 8011404:	e7fe      	b.n	8011404 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 8011406:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011408:	f7fe fc10 	bl	800fc2c <vPortFree>
				vPortFree( pxTCB );
 801140c:	4620      	mov	r0, r4
 801140e:	f7fe fc0d 	bl	800fc2c <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8011412:	682b      	ldr	r3, [r5, #0]
 8011414:	2b00      	cmp	r3, #0
 8011416:	d1d3      	bne.n	80113c0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8011418:	f8d8 3000 	ldr.w	r3, [r8]
 801141c:	2b01      	cmp	r3, #1
 801141e:	d9cd      	bls.n	80113bc <prvIdleTask+0x14>
				taskYIELD();
 8011420:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 8011424:	f3bf 8f4f 	dsb	sy
 8011428:	f3bf 8f6f 	isb	sy
 801142c:	e7c6      	b.n	80113bc <prvIdleTask+0x14>
				vPortFree( pxTCB );
 801142e:	4620      	mov	r0, r4
 8011430:	f7fe fbfc 	bl	800fc2c <vPortFree>
 8011434:	e7c2      	b.n	80113bc <prvIdleTask+0x14>
 8011436:	bf00      	nop
 8011438:	20013690 	.word	0x20013690
 801143c:	20013700 	.word	0x20013700
 8011440:	2001368c 	.word	0x2001368c
 8011444:	2001322c 	.word	0x2001322c

08011448 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 8011448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 801144c:	4b47      	ldr	r3, [pc, #284]	; (801156c <xTaskIncrementTick.part.0+0x124>)
 801144e:	681e      	ldr	r6, [r3, #0]
 8011450:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 8011452:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 8011454:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8011456:	2e00      	cmp	r6, #0
 8011458:	d040      	beq.n	80114dc <xTaskIncrementTick.part.0+0x94>
 801145a:	f8df b124 	ldr.w	fp, [pc, #292]	; 8011580 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 801145e:	f8db 3000 	ldr.w	r3, [fp]
 8011462:	429e      	cmp	r6, r3
 8011464:	d347      	bcc.n	80114f6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011466:	4f42      	ldr	r7, [pc, #264]	; (8011570 <xTaskIncrementTick.part.0+0x128>)
 8011468:	f8df 9118 	ldr.w	r9, [pc, #280]	; 8011584 <xTaskIncrementTick.part.0+0x13c>
 801146c:	683b      	ldr	r3, [r7, #0]
 801146e:	f8df a118 	ldr.w	sl, [pc, #280]	; 8011588 <xTaskIncrementTick.part.0+0x140>
 8011472:	681d      	ldr	r5, [r3, #0]
 8011474:	2d00      	cmp	r5, #0
 8011476:	d073      	beq.n	8011560 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 8011478:	f8df 8110 	ldr.w	r8, [pc, #272]	; 801158c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 801147c:	2500      	movs	r5, #0
 801147e:	e022      	b.n	80114c6 <xTaskIncrementTick.part.0+0x7e>
 8011480:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011482:	f7fe fc6f 	bl	800fd64 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8011486:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8011488:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 801148a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 801148e:	b113      	cbz	r3, 8011496 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8011490:	f7fe fc68 	bl	800fd64 <uxListRemove>
 8011494:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8011496:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011498:	f8d8 2000 	ldr.w	r2, [r8]
 801149c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 80114a0:	4293      	cmp	r3, r2
 80114a2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 80114a6:	bf88      	it	hi
 80114a8:	f8c8 3000 	strhi.w	r3, [r8]
 80114ac:	f7fe fc32 	bl	800fd14 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80114b0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80114b4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80114b6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80114b8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80114ba:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 80114bc:	4291      	cmp	r1, r2
 80114be:	bf28      	it	cs
 80114c0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80114c2:	2b00      	cmp	r3, #0
 80114c4:	d04c      	beq.n	8011560 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80114c6:	683b      	ldr	r3, [r7, #0]
 80114c8:	68db      	ldr	r3, [r3, #12]
 80114ca:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80114cc:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80114ce:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 80114d0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80114d2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 80114d4:	d2d4      	bcs.n	8011480 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 80114d6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80114da:	e011      	b.n	8011500 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 80114dc:	4b24      	ldr	r3, [pc, #144]	; (8011570 <xTaskIncrementTick.part.0+0x128>)
 80114de:	681a      	ldr	r2, [r3, #0]
 80114e0:	6812      	ldr	r2, [r2, #0]
 80114e2:	b30a      	cbz	r2, 8011528 <xTaskIncrementTick.part.0+0xe0>
 80114e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80114e8:	f383 8811 	msr	BASEPRI, r3
 80114ec:	f3bf 8f6f 	isb	sy
 80114f0:	f3bf 8f4f 	dsb	sy
 80114f4:	e7fe      	b.n	80114f4 <xTaskIncrementTick.part.0+0xac>
 80114f6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 8011584 <xTaskIncrementTick.part.0+0x13c>
 80114fa:	f8df a08c 	ldr.w	sl, [pc, #140]	; 8011588 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 80114fe:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8011500:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 8011504:	491b      	ldr	r1, [pc, #108]	; (8011574 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8011506:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011508:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801150c:	009b      	lsls	r3, r3, #2
 801150e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 8011512:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 8011514:	2a02      	cmp	r2, #2
 8011516:	bf28      	it	cs
 8011518:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 801151a:	2b00      	cmp	r3, #0
}
 801151c:	bf0c      	ite	eq
 801151e:	4628      	moveq	r0, r5
 8011520:	2001      	movne	r0, #1
 8011522:	b003      	add	sp, #12
 8011524:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 8011528:	4a13      	ldr	r2, [pc, #76]	; (8011578 <xTaskIncrementTick.part.0+0x130>)
 801152a:	6818      	ldr	r0, [r3, #0]
 801152c:	6811      	ldr	r1, [r2, #0]
 801152e:	6019      	str	r1, [r3, #0]
 8011530:	4912      	ldr	r1, [pc, #72]	; (801157c <xTaskIncrementTick.part.0+0x134>)
 8011532:	6010      	str	r0, [r2, #0]
 8011534:	680a      	ldr	r2, [r1, #0]
 8011536:	3201      	adds	r2, #1
 8011538:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801153a:	681a      	ldr	r2, [r3, #0]
 801153c:	6812      	ldr	r2, [r2, #0]
 801153e:	b932      	cbnz	r2, 801154e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 8011540:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8011580 <xTaskIncrementTick.part.0+0x138>
 8011544:	f04f 33ff 	mov.w	r3, #4294967295
 8011548:	f8cb 3000 	str.w	r3, [fp]
 801154c:	e787      	b.n	801145e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801154e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8011550:	f8df b02c 	ldr.w	fp, [pc, #44]	; 8011580 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011554:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8011556:	68db      	ldr	r3, [r3, #12]
 8011558:	685b      	ldr	r3, [r3, #4]
 801155a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 801155e:	e77e      	b.n	801145e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011560:	f04f 33ff 	mov.w	r3, #4294967295
 8011564:	f8cb 3000 	str.w	r3, [fp]
					break;
 8011568:	e7ca      	b.n	8011500 <xTaskIncrementTick.part.0+0xb8>
 801156a:	bf00      	nop
 801156c:	20013714 	.word	0x20013714
 8011570:	20013224 	.word	0x20013224
 8011574:	20013718 	.word	0x20013718
 8011578:	20013228 	.word	0x20013228
 801157c:	200136cc 	.word	0x200136cc
 8011580:	200136c8 	.word	0x200136c8
 8011584:	2001322c 	.word	0x2001322c
 8011588:	20013220 	.word	0x20013220
 801158c:	2001369c 	.word	0x2001369c

08011590 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 8011590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 8011594:	4d41      	ldr	r5, [pc, #260]	; (801169c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 8011596:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 8011598:	f7fe fc5c 	bl	800fe54 <vPortEnterCritical>
		--uxSchedulerSuspended;
 801159c:	682b      	ldr	r3, [r5, #0]
 801159e:	3b01      	subs	r3, #1
 80115a0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80115a2:	682b      	ldr	r3, [r5, #0]
 80115a4:	2b00      	cmp	r3, #0
 80115a6:	d161      	bne.n	801166c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80115a8:	4b3d      	ldr	r3, [pc, #244]	; (80116a0 <xTaskResumeAll.part.0+0x110>)
 80115aa:	681b      	ldr	r3, [r3, #0]
 80115ac:	2b00      	cmp	r3, #0
 80115ae:	d05d      	beq.n	801166c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80115b0:	4e3c      	ldr	r6, [pc, #240]	; (80116a4 <xTaskResumeAll.part.0+0x114>)
 80115b2:	6833      	ldr	r3, [r6, #0]
 80115b4:	2b00      	cmp	r3, #0
 80115b6:	d06e      	beq.n	8011696 <xTaskResumeAll.part.0+0x106>
 80115b8:	4f3b      	ldr	r7, [pc, #236]	; (80116a8 <xTaskResumeAll.part.0+0x118>)
 80115ba:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 80116b8 <xTaskResumeAll.part.0+0x128>
 80115be:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 80116bc <xTaskResumeAll.part.0+0x12c>
 80115c2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 80116c0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80115c6:	68f3      	ldr	r3, [r6, #12]
 80115c8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80115ca:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80115ce:	f104 0018 	add.w	r0, r4, #24
 80115d2:	f7fe fbc7 	bl	800fd64 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80115d6:	4658      	mov	r0, fp
 80115d8:	f7fe fbc4 	bl	800fd64 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80115dc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80115de:	683a      	ldr	r2, [r7, #0]
 80115e0:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 80115e4:	4293      	cmp	r3, r2
 80115e6:	4659      	mov	r1, fp
 80115e8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 80115ec:	bf88      	it	hi
 80115ee:	603b      	strhi	r3, [r7, #0]
 80115f0:	f7fe fb90 	bl	800fd14 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80115f4:	f8d8 3000 	ldr.w	r3, [r8]
 80115f8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80115fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80115fc:	429a      	cmp	r2, r3
 80115fe:	d33d      	bcc.n	801167c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 8011600:	2301      	movs	r3, #1
 8011602:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8011606:	6833      	ldr	r3, [r6, #0]
 8011608:	2b00      	cmp	r3, #0
 801160a:	d1dc      	bne.n	80115c6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801160c:	4b27      	ldr	r3, [pc, #156]	; (80116ac <xTaskResumeAll.part.0+0x11c>)
 801160e:	681a      	ldr	r2, [r3, #0]
 8011610:	6812      	ldr	r2, [r2, #0]
 8011612:	2a00      	cmp	r2, #0
 8011614:	d03a      	beq.n	801168c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011616:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8011618:	4b25      	ldr	r3, [pc, #148]	; (80116b0 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801161a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 801161c:	68d2      	ldr	r2, [r2, #12]
 801161e:	6852      	ldr	r2, [r2, #4]
 8011620:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8011622:	4e24      	ldr	r6, [pc, #144]	; (80116b4 <xTaskResumeAll.part.0+0x124>)
 8011624:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8011626:	b194      	cbz	r4, 801164e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 8011628:	2701      	movs	r7, #1
 801162a:	e006      	b.n	801163a <xTaskResumeAll.part.0+0xaa>
 801162c:	f7ff ff0c 	bl	8011448 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 8011630:	b108      	cbz	r0, 8011636 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 8011632:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8011636:	3c01      	subs	r4, #1
 8011638:	d008      	beq.n	801164c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 801163a:	682b      	ldr	r3, [r5, #0]
 801163c:	2b00      	cmp	r3, #0
 801163e:	d0f5      	beq.n	801162c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 8011640:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8011642:	3c01      	subs	r4, #1
		++xPendedTicks;
 8011644:	f103 0301 	add.w	r3, r3, #1
 8011648:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 801164a:	d1f6      	bne.n	801163a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 801164c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 801164e:	f8da 3000 	ldr.w	r3, [sl]
 8011652:	b15b      	cbz	r3, 801166c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 8011654:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8011658:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801165c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011660:	f3bf 8f4f 	dsb	sy
 8011664:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8011668:	2001      	movs	r0, #1
 801166a:	e000      	b.n	801166e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 801166c:	2000      	movs	r0, #0
 801166e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8011670:	f7fe fc12 	bl	800fe98 <vPortExitCritical>
}
 8011674:	9801      	ldr	r0, [sp, #4]
 8011676:	b003      	add	sp, #12
 8011678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 801167c:	6833      	ldr	r3, [r6, #0]
 801167e:	2b00      	cmp	r3, #0
 8011680:	d1a1      	bne.n	80115c6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011682:	4b0a      	ldr	r3, [pc, #40]	; (80116ac <xTaskResumeAll.part.0+0x11c>)
 8011684:	681a      	ldr	r2, [r3, #0]
 8011686:	6812      	ldr	r2, [r2, #0]
 8011688:	2a00      	cmp	r2, #0
 801168a:	d1c4      	bne.n	8011616 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 801168c:	4b08      	ldr	r3, [pc, #32]	; (80116b0 <xTaskResumeAll.part.0+0x120>)
 801168e:	f04f 32ff 	mov.w	r2, #4294967295
 8011692:	601a      	str	r2, [r3, #0]
 8011694:	e7c5      	b.n	8011622 <xTaskResumeAll.part.0+0x92>
 8011696:	f8df a028 	ldr.w	sl, [pc, #40]	; 80116c0 <xTaskResumeAll.part.0+0x130>
 801169a:	e7c2      	b.n	8011622 <xTaskResumeAll.part.0+0x92>
 801169c:	20013694 	.word	0x20013694
 80116a0:	2001368c 	.word	0x2001368c
 80116a4:	200136d4 	.word	0x200136d4
 80116a8:	2001369c 	.word	0x2001369c
 80116ac:	20013224 	.word	0x20013224
 80116b0:	200136c8 	.word	0x200136c8
 80116b4:	200136d0 	.word	0x200136d0
 80116b8:	2001322c 	.word	0x2001322c
 80116bc:	20013220 	.word	0x20013220
 80116c0:	20013718 	.word	0x20013718

080116c4 <xTaskCreateStatic>:
	{
 80116c4:	b530      	push	{r4, r5, lr}
 80116c6:	b087      	sub	sp, #28
 80116c8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 80116ca:	b1c4      	cbz	r4, 80116fe <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 80116cc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80116ce:	b16d      	cbz	r5, 80116ec <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 80116d0:	25ac      	movs	r5, #172	; 0xac
 80116d2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80116d4:	9d05      	ldr	r5, [sp, #20]
 80116d6:	2dac      	cmp	r5, #172	; 0xac
 80116d8:	d01a      	beq.n	8011710 <xTaskCreateStatic+0x4c>
 80116da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80116de:	f383 8811 	msr	BASEPRI, r3
 80116e2:	f3bf 8f6f 	isb	sy
 80116e6:	f3bf 8f4f 	dsb	sy
 80116ea:	e7fe      	b.n	80116ea <xTaskCreateStatic+0x26>
 80116ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80116f0:	f383 8811 	msr	BASEPRI, r3
 80116f4:	f3bf 8f6f 	isb	sy
 80116f8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 80116fc:	e7fe      	b.n	80116fc <xTaskCreateStatic+0x38>
 80116fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011702:	f383 8811 	msr	BASEPRI, r3
 8011706:	f3bf 8f6f 	isb	sy
 801170a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 801170e:	e7fe      	b.n	801170e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8011710:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8011712:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011714:	2402      	movs	r4, #2
 8011716:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 801171a:	ac04      	add	r4, sp, #16
 801171c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 8011720:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8011722:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8011724:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011726:	f7ff fda9 	bl	801127c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 801172a:	980c      	ldr	r0, [sp, #48]	; 0x30
 801172c:	f7ff fd1e 	bl	801116c <prvAddNewTaskToReadyList>
	}
 8011730:	9804      	ldr	r0, [sp, #16]
 8011732:	b007      	add	sp, #28
 8011734:	bd30      	pop	{r4, r5, pc}
 8011736:	bf00      	nop

08011738 <xTaskCreate>:
	{
 8011738:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801173c:	4607      	mov	r7, r0
 801173e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8011740:	0090      	lsls	r0, r2, #2
	{
 8011742:	4615      	mov	r5, r2
 8011744:	4688      	mov	r8, r1
 8011746:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8011748:	f7fe f9b4 	bl	800fab4 <pvPortMalloc>
			if( pxStack != NULL )
 801174c:	b1d8      	cbz	r0, 8011786 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 801174e:	4604      	mov	r4, r0
 8011750:	20ac      	movs	r0, #172	; 0xac
 8011752:	f7fe f9af 	bl	800fab4 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8011756:	4606      	mov	r6, r0
 8011758:	b1d0      	cbz	r0, 8011790 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 801175a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 801175c:	2400      	movs	r4, #0
 801175e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8011762:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8011764:	9401      	str	r4, [sp, #4]
 8011766:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8011768:	9602      	str	r6, [sp, #8]
 801176a:	464b      	mov	r3, r9
 801176c:	462a      	mov	r2, r5
 801176e:	4641      	mov	r1, r8
 8011770:	4638      	mov	r0, r7
 8011772:	9400      	str	r4, [sp, #0]
 8011774:	f7ff fd82 	bl	801127c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8011778:	4630      	mov	r0, r6
 801177a:	f7ff fcf7 	bl	801116c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 801177e:	2001      	movs	r0, #1
	}
 8011780:	b005      	add	sp, #20
 8011782:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8011786:	f04f 30ff 	mov.w	r0, #4294967295
	}
 801178a:	b005      	add	sp, #20
 801178c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8011790:	4620      	mov	r0, r4
 8011792:	f7fe fa4b 	bl	800fc2c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8011796:	f04f 30ff 	mov.w	r0, #4294967295
 801179a:	e7f1      	b.n	8011780 <xTaskCreate+0x48>

0801179c <vTaskDelay>:
	{
 801179c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 801179e:	b950      	cbnz	r0, 80117b6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 80117a0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80117a4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80117a8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80117ac:	f3bf 8f4f 	dsb	sy
 80117b0:	f3bf 8f6f 	isb	sy
	}
 80117b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 80117b6:	4d1e      	ldr	r5, [pc, #120]	; (8011830 <vTaskDelay+0x94>)
 80117b8:	682b      	ldr	r3, [r5, #0]
 80117ba:	b143      	cbz	r3, 80117ce <vTaskDelay+0x32>
 80117bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80117c0:	f383 8811 	msr	BASEPRI, r3
 80117c4:	f3bf 8f6f 	isb	sy
 80117c8:	f3bf 8f4f 	dsb	sy
 80117cc:	e7fe      	b.n	80117cc <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 80117ce:	682b      	ldr	r3, [r5, #0]
 80117d0:	3301      	adds	r3, #1
 80117d2:	4604      	mov	r4, r0
 80117d4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80117d6:	4b17      	ldr	r3, [pc, #92]	; (8011834 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80117d8:	4e17      	ldr	r6, [pc, #92]	; (8011838 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 80117da:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80117dc:	6830      	ldr	r0, [r6, #0]
 80117de:	3004      	adds	r0, #4
 80117e0:	f7fe fac0 	bl	800fd64 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80117e4:	6833      	ldr	r3, [r6, #0]
 80117e6:	19e4      	adds	r4, r4, r7
 80117e8:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 80117ea:	d310      	bcc.n	801180e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80117ec:	4b13      	ldr	r3, [pc, #76]	; (801183c <vTaskDelay+0xa0>)
 80117ee:	6818      	ldr	r0, [r3, #0]
 80117f0:	6831      	ldr	r1, [r6, #0]
 80117f2:	3104      	adds	r1, #4
 80117f4:	f7fe fa9e 	bl	800fd34 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 80117f8:	682b      	ldr	r3, [r5, #0]
 80117fa:	b9a3      	cbnz	r3, 8011826 <vTaskDelay+0x8a>
 80117fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011800:	f383 8811 	msr	BASEPRI, r3
 8011804:	f3bf 8f6f 	isb	sy
 8011808:	f3bf 8f4f 	dsb	sy
 801180c:	e7fe      	b.n	801180c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801180e:	4b0c      	ldr	r3, [pc, #48]	; (8011840 <vTaskDelay+0xa4>)
 8011810:	6818      	ldr	r0, [r3, #0]
 8011812:	6831      	ldr	r1, [r6, #0]
 8011814:	3104      	adds	r1, #4
 8011816:	f7fe fa8d 	bl	800fd34 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 801181a:	4b0a      	ldr	r3, [pc, #40]	; (8011844 <vTaskDelay+0xa8>)
 801181c:	681a      	ldr	r2, [r3, #0]
 801181e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 8011820:	bf38      	it	cc
 8011822:	601c      	strcc	r4, [r3, #0]
 8011824:	e7e8      	b.n	80117f8 <vTaskDelay+0x5c>
 8011826:	f7ff feb3 	bl	8011590 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 801182a:	2800      	cmp	r0, #0
 801182c:	d0b8      	beq.n	80117a0 <vTaskDelay+0x4>
	}
 801182e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011830:	20013694 	.word	0x20013694
 8011834:	20013714 	.word	0x20013714
 8011838:	20013220 	.word	0x20013220
 801183c:	20013228 	.word	0x20013228
 8011840:	20013224 	.word	0x20013224
 8011844:	200136c8 	.word	0x200136c8

08011848 <vTaskStartScheduler>:
{
 8011848:	b530      	push	{r4, r5, lr}
 801184a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 801184c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 801184e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8011850:	a906      	add	r1, sp, #24
 8011852:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8011854:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8011858:	f7fe f90e 	bl	800fa78 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 801185c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011860:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 8011862:	b1bb      	cbz	r3, 8011894 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 8011864:	b16d      	cbz	r5, 8011882 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 8011866:	21ac      	movs	r1, #172	; 0xac
 8011868:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 801186a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801186c:	29ac      	cmp	r1, #172	; 0xac
 801186e:	d01a      	beq.n	80118a6 <vTaskStartScheduler+0x5e>
 8011870:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011874:	f383 8811 	msr	BASEPRI, r3
 8011878:	f3bf 8f6f 	isb	sy
 801187c:	f3bf 8f4f 	dsb	sy
 8011880:	e7fe      	b.n	8011880 <vTaskStartScheduler+0x38>
 8011882:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011886:	f383 8811 	msr	BASEPRI, r3
 801188a:	f3bf 8f6f 	isb	sy
 801188e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 8011892:	e7fe      	b.n	8011892 <vTaskStartScheduler+0x4a>
 8011894:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011898:	f383 8811 	msr	BASEPRI, r3
 801189c:	f3bf 8f6f 	isb	sy
 80118a0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 80118a4:	e7fe      	b.n	80118a4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80118a6:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80118a8:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80118aa:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80118ac:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80118b0:	4623      	mov	r3, r4
 80118b2:	e9cd 0501 	strd	r0, r5, [sp, #4]
 80118b6:	491b      	ldr	r1, [pc, #108]	; (8011924 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80118b8:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80118ba:	9400      	str	r4, [sp, #0]
 80118bc:	481a      	ldr	r0, [pc, #104]	; (8011928 <vTaskStartScheduler+0xe0>)
 80118be:	f7ff fcdd 	bl	801127c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80118c2:	4628      	mov	r0, r5
 80118c4:	f7ff fc52 	bl	801116c <prvAddNewTaskToReadyList>
		return xReturn;
 80118c8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 80118ca:	b1eb      	cbz	r3, 8011908 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 80118cc:	f000 fc6e 	bl	80121ac <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 80118d0:	2801      	cmp	r0, #1
 80118d2:	d11b      	bne.n	801190c <vTaskStartScheduler+0xc4>
 80118d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80118d8:	f383 8811 	msr	BASEPRI, r3
 80118dc:	f3bf 8f6f 	isb	sy
 80118e0:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 80118e4:	4b11      	ldr	r3, [pc, #68]	; (801192c <vTaskStartScheduler+0xe4>)
 80118e6:	4a12      	ldr	r2, [pc, #72]	; (8011930 <vTaskStartScheduler+0xe8>)
 80118e8:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 80118ea:	4912      	ldr	r1, [pc, #72]	; (8011934 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 80118ec:	3358      	adds	r3, #88	; 0x58
 80118ee:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 80118f0:	4a11      	ldr	r2, [pc, #68]	; (8011938 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 80118f2:	4b12      	ldr	r3, [pc, #72]	; (801193c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 80118f4:	f04f 35ff 	mov.w	r5, #4294967295
 80118f8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 80118fa:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 80118fc:	601c      	str	r4, [r3, #0]
}
 80118fe:	b00b      	add	sp, #44	; 0x2c
 8011900:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 8011904:	f7fe bb38 	b.w	800ff78 <xPortStartScheduler>
}
 8011908:	b00b      	add	sp, #44	; 0x2c
 801190a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 801190c:	3001      	adds	r0, #1
 801190e:	d1fb      	bne.n	8011908 <vTaskStartScheduler+0xc0>
 8011910:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011914:	f383 8811 	msr	BASEPRI, r3
 8011918:	f3bf 8f6f 	isb	sy
 801191c:	f3bf 8f4f 	dsb	sy
 8011920:	e7fe      	b.n	8011920 <vTaskStartScheduler+0xd8>
 8011922:	bf00      	nop
 8011924:	080312c0 	.word	0x080312c0
 8011928:	080113a9 	.word	0x080113a9
 801192c:	20013220 	.word	0x20013220
 8011930:	20000164 	.word	0x20000164
 8011934:	200136c8 	.word	0x200136c8
 8011938:	200136e8 	.word	0x200136e8
 801193c:	20013714 	.word	0x20013714

08011940 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8011940:	4a02      	ldr	r2, [pc, #8]	; (801194c <vTaskSuspendAll+0xc>)
 8011942:	6813      	ldr	r3, [r2, #0]
 8011944:	3301      	adds	r3, #1
 8011946:	6013      	str	r3, [r2, #0]
}
 8011948:	4770      	bx	lr
 801194a:	bf00      	nop
 801194c:	20013694 	.word	0x20013694

08011950 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 8011950:	4b06      	ldr	r3, [pc, #24]	; (801196c <xTaskResumeAll+0x1c>)
 8011952:	681b      	ldr	r3, [r3, #0]
 8011954:	b943      	cbnz	r3, 8011968 <xTaskResumeAll+0x18>
 8011956:	f04f 0350 	mov.w	r3, #80	; 0x50
 801195a:	f383 8811 	msr	BASEPRI, r3
 801195e:	f3bf 8f6f 	isb	sy
 8011962:	f3bf 8f4f 	dsb	sy
 8011966:	e7fe      	b.n	8011966 <xTaskResumeAll+0x16>
 8011968:	f7ff be12 	b.w	8011590 <xTaskResumeAll.part.0>
 801196c:	20013694 	.word	0x20013694

08011970 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8011970:	4b01      	ldr	r3, [pc, #4]	; (8011978 <xTaskGetTickCount+0x8>)
 8011972:	6818      	ldr	r0, [r3, #0]
}
 8011974:	4770      	bx	lr
 8011976:	bf00      	nop
 8011978:	20013714 	.word	0x20013714

0801197c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 801197c:	4b05      	ldr	r3, [pc, #20]	; (8011994 <xTaskIncrementTick+0x18>)
 801197e:	681b      	ldr	r3, [r3, #0]
 8011980:	b90b      	cbnz	r3, 8011986 <xTaskIncrementTick+0xa>
 8011982:	f7ff bd61 	b.w	8011448 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 8011986:	4a04      	ldr	r2, [pc, #16]	; (8011998 <xTaskIncrementTick+0x1c>)
 8011988:	6813      	ldr	r3, [r2, #0]
 801198a:	3301      	adds	r3, #1
}
 801198c:	2000      	movs	r0, #0
		++xPendedTicks;
 801198e:	6013      	str	r3, [r2, #0]
}
 8011990:	4770      	bx	lr
 8011992:	bf00      	nop
 8011994:	20013694 	.word	0x20013694
 8011998:	200136d0 	.word	0x200136d0

0801199c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 801199c:	4b1f      	ldr	r3, [pc, #124]	; (8011a1c <vTaskSwitchContext+0x80>)
 801199e:	681b      	ldr	r3, [r3, #0]
 80119a0:	b11b      	cbz	r3, 80119aa <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 80119a2:	4b1f      	ldr	r3, [pc, #124]	; (8011a20 <vTaskSwitchContext+0x84>)
 80119a4:	2201      	movs	r2, #1
 80119a6:	601a      	str	r2, [r3, #0]
 80119a8:	4770      	bx	lr
		xYieldPending = pdFALSE;
 80119aa:	4a1d      	ldr	r2, [pc, #116]	; (8011a20 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80119ac:	491d      	ldr	r1, [pc, #116]	; (8011a24 <vTaskSwitchContext+0x88>)
{
 80119ae:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80119b0:	4c1d      	ldr	r4, [pc, #116]	; (8011a28 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 80119b2:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80119b4:	6823      	ldr	r3, [r4, #0]
 80119b6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 80119ba:	0092      	lsls	r2, r2, #2
 80119bc:	0098      	lsls	r0, r3, #2
 80119be:	588a      	ldr	r2, [r1, r2]
 80119c0:	b942      	cbnz	r2, 80119d4 <vTaskSwitchContext+0x38>
 80119c2:	b313      	cbz	r3, 8011a0a <vTaskSwitchContext+0x6e>
 80119c4:	3b01      	subs	r3, #1
 80119c6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 80119ca:	0098      	lsls	r0, r3, #2
 80119cc:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80119d0:	2a00      	cmp	r2, #0
 80119d2:	d0f6      	beq.n	80119c2 <vTaskSwitchContext+0x26>
 80119d4:	4418      	add	r0, r3
 80119d6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 80119da:	4662      	mov	r2, ip
 80119dc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80119e0:	6849      	ldr	r1, [r1, #4]
 80119e2:	f8cc 1004 	str.w	r1, [ip, #4]
 80119e6:	3208      	adds	r2, #8
 80119e8:	4291      	cmp	r1, r2
 80119ea:	bf08      	it	eq
 80119ec:	6849      	ldreq	r1, [r1, #4]
 80119ee:	4a0f      	ldr	r2, [pc, #60]	; (8011a2c <vTaskSwitchContext+0x90>)
 80119f0:	bf08      	it	eq
 80119f2:	f8cc 1004 	streq.w	r1, [ip, #4]
 80119f6:	68c9      	ldr	r1, [r1, #12]
 80119f8:	6011      	str	r1, [r2, #0]
 80119fa:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 80119fc:	6813      	ldr	r3, [r2, #0]
 80119fe:	4a0c      	ldr	r2, [pc, #48]	; (8011a30 <vTaskSwitchContext+0x94>)
}
 8011a00:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011a04:	3358      	adds	r3, #88	; 0x58
 8011a06:	6013      	str	r3, [r2, #0]
}
 8011a08:	4770      	bx	lr
 8011a0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a0e:	f383 8811 	msr	BASEPRI, r3
 8011a12:	f3bf 8f6f 	isb	sy
 8011a16:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011a1a:	e7fe      	b.n	8011a1a <vTaskSwitchContext+0x7e>
 8011a1c:	20013694 	.word	0x20013694
 8011a20:	20013718 	.word	0x20013718
 8011a24:	2001322c 	.word	0x2001322c
 8011a28:	2001369c 	.word	0x2001369c
 8011a2c:	20013220 	.word	0x20013220
 8011a30:	20000164 	.word	0x20000164

08011a34 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 8011a34:	b1d0      	cbz	r0, 8011a6c <vTaskPlaceOnEventList+0x38>
{
 8011a36:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8011a38:	4d1a      	ldr	r5, [pc, #104]	; (8011aa4 <vTaskPlaceOnEventList+0x70>)
 8011a3a:	460c      	mov	r4, r1
 8011a3c:	6829      	ldr	r1, [r5, #0]
 8011a3e:	3118      	adds	r1, #24
 8011a40:	f7fe f978 	bl	800fd34 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8011a44:	4b18      	ldr	r3, [pc, #96]	; (8011aa8 <vTaskPlaceOnEventList+0x74>)
 8011a46:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011a48:	6828      	ldr	r0, [r5, #0]
 8011a4a:	3004      	adds	r0, #4
 8011a4c:	f7fe f98a 	bl	800fd64 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8011a50:	1c63      	adds	r3, r4, #1
 8011a52:	d014      	beq.n	8011a7e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011a54:	682b      	ldr	r3, [r5, #0]
 8011a56:	19a4      	adds	r4, r4, r6
 8011a58:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8011a5a:	d317      	bcc.n	8011a8c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011a5c:	4b13      	ldr	r3, [pc, #76]	; (8011aac <vTaskPlaceOnEventList+0x78>)
 8011a5e:	6818      	ldr	r0, [r3, #0]
 8011a60:	6829      	ldr	r1, [r5, #0]
}
 8011a62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011a66:	3104      	adds	r1, #4
 8011a68:	f7fe b964 	b.w	800fd34 <vListInsert>
 8011a6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a70:	f383 8811 	msr	BASEPRI, r3
 8011a74:	f3bf 8f6f 	isb	sy
 8011a78:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 8011a7c:	e7fe      	b.n	8011a7c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011a7e:	6829      	ldr	r1, [r5, #0]
 8011a80:	480b      	ldr	r0, [pc, #44]	; (8011ab0 <vTaskPlaceOnEventList+0x7c>)
}
 8011a82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011a86:	3104      	adds	r1, #4
 8011a88:	f7fe b944 	b.w	800fd14 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011a8c:	4b09      	ldr	r3, [pc, #36]	; (8011ab4 <vTaskPlaceOnEventList+0x80>)
 8011a8e:	6818      	ldr	r0, [r3, #0]
 8011a90:	6829      	ldr	r1, [r5, #0]
 8011a92:	3104      	adds	r1, #4
 8011a94:	f7fe f94e 	bl	800fd34 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8011a98:	4b07      	ldr	r3, [pc, #28]	; (8011ab8 <vTaskPlaceOnEventList+0x84>)
 8011a9a:	681a      	ldr	r2, [r3, #0]
 8011a9c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8011a9e:	bf38      	it	cc
 8011aa0:	601c      	strcc	r4, [r3, #0]
}
 8011aa2:	bd70      	pop	{r4, r5, r6, pc}
 8011aa4:	20013220 	.word	0x20013220
 8011aa8:	20013714 	.word	0x20013714
 8011aac:	20013228 	.word	0x20013228
 8011ab0:	200136ec 	.word	0x200136ec
 8011ab4:	20013224 	.word	0x20013224
 8011ab8:	200136c8 	.word	0x200136c8

08011abc <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 8011abc:	b330      	cbz	r0, 8011b0c <vTaskPlaceOnEventListRestricted+0x50>
	{
 8011abe:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8011ac0:	4e1d      	ldr	r6, [pc, #116]	; (8011b38 <vTaskPlaceOnEventListRestricted+0x7c>)
 8011ac2:	460c      	mov	r4, r1
 8011ac4:	6831      	ldr	r1, [r6, #0]
 8011ac6:	4615      	mov	r5, r2
 8011ac8:	3118      	adds	r1, #24
 8011aca:	f7fe f923 	bl	800fd14 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 8011ace:	4b1b      	ldr	r3, [pc, #108]	; (8011b3c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 8011ad0:	b985      	cbnz	r5, 8011af4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 8011ad2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011ad4:	6830      	ldr	r0, [r6, #0]
 8011ad6:	3004      	adds	r0, #4
 8011ad8:	f7fe f944 	bl	800fd64 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011adc:	6833      	ldr	r3, [r6, #0]
 8011ade:	1964      	adds	r4, r4, r5
 8011ae0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8011ae2:	d31c      	bcc.n	8011b1e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011ae4:	4b16      	ldr	r3, [pc, #88]	; (8011b40 <vTaskPlaceOnEventListRestricted+0x84>)
 8011ae6:	6818      	ldr	r0, [r3, #0]
 8011ae8:	6831      	ldr	r1, [r6, #0]
	}
 8011aea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011aee:	3104      	adds	r1, #4
 8011af0:	f7fe b920 	b.w	800fd34 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8011af4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011af6:	6830      	ldr	r0, [r6, #0]
 8011af8:	3004      	adds	r0, #4
 8011afa:	f7fe f933 	bl	800fd64 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011afe:	6831      	ldr	r1, [r6, #0]
 8011b00:	4810      	ldr	r0, [pc, #64]	; (8011b44 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 8011b02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011b06:	3104      	adds	r1, #4
 8011b08:	f7fe b904 	b.w	800fd14 <vListInsertEnd>
 8011b0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011b10:	f383 8811 	msr	BASEPRI, r3
 8011b14:	f3bf 8f6f 	isb	sy
 8011b18:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 8011b1c:	e7fe      	b.n	8011b1c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011b1e:	4b0a      	ldr	r3, [pc, #40]	; (8011b48 <vTaskPlaceOnEventListRestricted+0x8c>)
 8011b20:	6818      	ldr	r0, [r3, #0]
 8011b22:	6831      	ldr	r1, [r6, #0]
 8011b24:	3104      	adds	r1, #4
 8011b26:	f7fe f905 	bl	800fd34 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8011b2a:	4b08      	ldr	r3, [pc, #32]	; (8011b4c <vTaskPlaceOnEventListRestricted+0x90>)
 8011b2c:	681a      	ldr	r2, [r3, #0]
 8011b2e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8011b30:	bf38      	it	cc
 8011b32:	601c      	strcc	r4, [r3, #0]
	}
 8011b34:	bd70      	pop	{r4, r5, r6, pc}
 8011b36:	bf00      	nop
 8011b38:	20013220 	.word	0x20013220
 8011b3c:	20013714 	.word	0x20013714
 8011b40:	20013228 	.word	0x20013228
 8011b44:	200136ec 	.word	0x200136ec
 8011b48:	20013224 	.word	0x20013224
 8011b4c:	200136c8 	.word	0x200136c8

08011b50 <xTaskRemoveFromEventList>:
{
 8011b50:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b52:	68c3      	ldr	r3, [r0, #12]
 8011b54:	68dc      	ldr	r4, [r3, #12]
{
 8011b56:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 8011b58:	2c00      	cmp	r4, #0
 8011b5a:	d02b      	beq.n	8011bb4 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8011b5c:	f104 0518 	add.w	r5, r4, #24
 8011b60:	4628      	mov	r0, r5
 8011b62:	f7fe f8ff 	bl	800fd64 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011b66:	4b18      	ldr	r3, [pc, #96]	; (8011bc8 <xTaskRemoveFromEventList+0x78>)
 8011b68:	681b      	ldr	r3, [r3, #0]
 8011b6a:	b17b      	cbz	r3, 8011b8c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8011b6c:	4817      	ldr	r0, [pc, #92]	; (8011bcc <xTaskRemoveFromEventList+0x7c>)
 8011b6e:	4629      	mov	r1, r5
 8011b70:	f7fe f8d0 	bl	800fd14 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8011b74:	4b16      	ldr	r3, [pc, #88]	; (8011bd0 <xTaskRemoveFromEventList+0x80>)
 8011b76:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011b78:	681b      	ldr	r3, [r3, #0]
 8011b7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011b7c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8011b7e:	bf85      	ittet	hi
 8011b80:	4b14      	ldrhi	r3, [pc, #80]	; (8011bd4 <xTaskRemoveFromEventList+0x84>)
 8011b82:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8011b84:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8011b86:	6018      	strhi	r0, [r3, #0]
}
 8011b88:	b003      	add	sp, #12
 8011b8a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8011b8c:	1d21      	adds	r1, r4, #4
 8011b8e:	4608      	mov	r0, r1
 8011b90:	9101      	str	r1, [sp, #4]
 8011b92:	f7fe f8e7 	bl	800fd64 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8011b96:	4a10      	ldr	r2, [pc, #64]	; (8011bd8 <xTaskRemoveFromEventList+0x88>)
 8011b98:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011b9a:	6810      	ldr	r0, [r2, #0]
 8011b9c:	9901      	ldr	r1, [sp, #4]
 8011b9e:	4283      	cmp	r3, r0
 8011ba0:	480e      	ldr	r0, [pc, #56]	; (8011bdc <xTaskRemoveFromEventList+0x8c>)
 8011ba2:	bf88      	it	hi
 8011ba4:	6013      	strhi	r3, [r2, #0]
 8011ba6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011baa:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8011bae:	f7fe f8b1 	bl	800fd14 <vListInsertEnd>
 8011bb2:	e7df      	b.n	8011b74 <xTaskRemoveFromEventList+0x24>
 8011bb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011bb8:	f383 8811 	msr	BASEPRI, r3
 8011bbc:	f3bf 8f6f 	isb	sy
 8011bc0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 8011bc4:	e7fe      	b.n	8011bc4 <xTaskRemoveFromEventList+0x74>
 8011bc6:	bf00      	nop
 8011bc8:	20013694 	.word	0x20013694
 8011bcc:	200136d4 	.word	0x200136d4
 8011bd0:	20013220 	.word	0x20013220
 8011bd4:	20013718 	.word	0x20013718
 8011bd8:	2001369c 	.word	0x2001369c
 8011bdc:	2001322c 	.word	0x2001322c

08011be0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011be0:	4a03      	ldr	r2, [pc, #12]	; (8011bf0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011be2:	4b04      	ldr	r3, [pc, #16]	; (8011bf4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011be4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011be6:	681b      	ldr	r3, [r3, #0]
 8011be8:	e9c0 2300 	strd	r2, r3, [r0]
}
 8011bec:	4770      	bx	lr
 8011bee:	bf00      	nop
 8011bf0:	200136cc 	.word	0x200136cc
 8011bf4:	20013714 	.word	0x20013714

08011bf8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 8011bf8:	b328      	cbz	r0, 8011c46 <xTaskCheckForTimeOut+0x4e>
{
 8011bfa:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011bfc:	460d      	mov	r5, r1
 8011bfe:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 8011c00:	b1c1      	cbz	r1, 8011c34 <xTaskCheckForTimeOut+0x3c>
 8011c02:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8011c04:	f7fe f926 	bl	800fe54 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 8011c08:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 8011c0a:	4a1d      	ldr	r2, [pc, #116]	; (8011c80 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 8011c0c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 8011c0e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8011c10:	d030      	beq.n	8011c74 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8011c12:	f8df c070 	ldr.w	ip, [pc, #112]	; 8011c84 <xTaskCheckForTimeOut+0x8c>
 8011c16:	e9d4 6000 	ldrd	r6, r0, [r4]
 8011c1a:	f8dc 7000 	ldr.w	r7, [ip]
 8011c1e:	42be      	cmp	r6, r7
 8011c20:	d01a      	beq.n	8011c58 <xTaskCheckForTimeOut+0x60>
 8011c22:	4288      	cmp	r0, r1
 8011c24:	d818      	bhi.n	8011c58 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 8011c26:	2001      	movs	r0, #1
 8011c28:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8011c2a:	f7fe f935 	bl	800fe98 <vPortExitCritical>
}
 8011c2e:	9801      	ldr	r0, [sp, #4]
 8011c30:	b003      	add	sp, #12
 8011c32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011c34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011c38:	f383 8811 	msr	BASEPRI, r3
 8011c3c:	f3bf 8f6f 	isb	sy
 8011c40:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 8011c44:	e7fe      	b.n	8011c44 <xTaskCheckForTimeOut+0x4c>
 8011c46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011c4a:	f383 8811 	msr	BASEPRI, r3
 8011c4e:	f3bf 8f6f 	isb	sy
 8011c52:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 8011c56:	e7fe      	b.n	8011c56 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8011c58:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8011c5c:	4573      	cmp	r3, lr
 8011c5e:	d90b      	bls.n	8011c78 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 8011c60:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011c62:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011c66:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 8011c68:	4403      	add	r3, r0
 8011c6a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 8011c6c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011c6e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 8011c72:	e7d9      	b.n	8011c28 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 8011c74:	2000      	movs	r0, #0
 8011c76:	e7d7      	b.n	8011c28 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 8011c78:	2300      	movs	r3, #0
 8011c7a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 8011c7c:	2001      	movs	r0, #1
 8011c7e:	e7d3      	b.n	8011c28 <xTaskCheckForTimeOut+0x30>
 8011c80:	20013714 	.word	0x20013714
 8011c84:	200136cc 	.word	0x200136cc

08011c88 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8011c88:	4b01      	ldr	r3, [pc, #4]	; (8011c90 <vTaskMissedYield+0x8>)
 8011c8a:	2201      	movs	r2, #1
 8011c8c:	601a      	str	r2, [r3, #0]
}
 8011c8e:	4770      	bx	lr
 8011c90:	20013718 	.word	0x20013718

08011c94 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8011c94:	4b05      	ldr	r3, [pc, #20]	; (8011cac <xTaskGetSchedulerState+0x18>)
 8011c96:	681b      	ldr	r3, [r3, #0]
 8011c98:	b133      	cbz	r3, 8011ca8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011c9a:	4b05      	ldr	r3, [pc, #20]	; (8011cb0 <xTaskGetSchedulerState+0x1c>)
 8011c9c:	6818      	ldr	r0, [r3, #0]
 8011c9e:	fab0 f080 	clz	r0, r0
 8011ca2:	0940      	lsrs	r0, r0, #5
 8011ca4:	0040      	lsls	r0, r0, #1
 8011ca6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8011ca8:	2001      	movs	r0, #1
	}
 8011caa:	4770      	bx	lr
 8011cac:	200136e8 	.word	0x200136e8
 8011cb0:	20013694 	.word	0x20013694

08011cb4 <xTaskPriorityInherit>:
	{
 8011cb4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8011cb6:	4604      	mov	r4, r0
	{
 8011cb8:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 8011cba:	b1c8      	cbz	r0, 8011cf0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8011cbc:	4d1d      	ldr	r5, [pc, #116]	; (8011d34 <xTaskPriorityInherit+0x80>)
 8011cbe:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011cc0:	682a      	ldr	r2, [r5, #0]
 8011cc2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011cc4:	4293      	cmp	r3, r2
 8011cc6:	d215      	bcs.n	8011cf4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011cc8:	6982      	ldr	r2, [r0, #24]
 8011cca:	2a00      	cmp	r2, #0
 8011ccc:	db04      	blt.n	8011cd8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011cce:	682a      	ldr	r2, [r5, #0]
 8011cd0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011cd2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 8011cd6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8011cd8:	4e17      	ldr	r6, [pc, #92]	; (8011d38 <xTaskPriorityInherit+0x84>)
 8011cda:	6962      	ldr	r2, [r4, #20]
 8011cdc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011ce0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8011ce4:	429a      	cmp	r2, r3
 8011ce6:	d00e      	beq.n	8011d06 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011ce8:	682b      	ldr	r3, [r5, #0]
 8011cea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011cec:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 8011cee:	2001      	movs	r0, #1
	}
 8011cf0:	b002      	add	sp, #8
 8011cf2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8011cf4:	682b      	ldr	r3, [r5, #0]
 8011cf6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8011cf8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011cfa:	4298      	cmp	r0, r3
 8011cfc:	bf2c      	ite	cs
 8011cfe:	2000      	movcs	r0, #0
 8011d00:	2001      	movcc	r0, #1
	}
 8011d02:	b002      	add	sp, #8
 8011d04:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011d06:	1d21      	adds	r1, r4, #4
 8011d08:	4608      	mov	r0, r1
 8011d0a:	9101      	str	r1, [sp, #4]
 8011d0c:	f7fe f82a 	bl	800fd64 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011d10:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011d12:	4b0a      	ldr	r3, [pc, #40]	; (8011d3c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011d14:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011d16:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011d18:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011d1a:	4290      	cmp	r0, r2
 8011d1c:	bf88      	it	hi
 8011d1e:	6018      	strhi	r0, [r3, #0]
 8011d20:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011d24:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 8011d28:	9901      	ldr	r1, [sp, #4]
 8011d2a:	f7fd fff3 	bl	800fd14 <vListInsertEnd>
				xReturn = pdTRUE;
 8011d2e:	2001      	movs	r0, #1
 8011d30:	e7de      	b.n	8011cf0 <xTaskPriorityInherit+0x3c>
 8011d32:	bf00      	nop
 8011d34:	20013220 	.word	0x20013220
 8011d38:	2001322c 	.word	0x2001322c
 8011d3c:	2001369c 	.word	0x2001369c

08011d40 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 8011d40:	b318      	cbz	r0, 8011d8a <xTaskPriorityDisinherit+0x4a>
	{
 8011d42:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 8011d44:	4b1e      	ldr	r3, [pc, #120]	; (8011dc0 <xTaskPriorityDisinherit+0x80>)
 8011d46:	681c      	ldr	r4, [r3, #0]
 8011d48:	4284      	cmp	r4, r0
	{
 8011d4a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 8011d4c:	d008      	beq.n	8011d60 <xTaskPriorityDisinherit+0x20>
 8011d4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011d52:	f383 8811 	msr	BASEPRI, r3
 8011d56:	f3bf 8f6f 	isb	sy
 8011d5a:	f3bf 8f4f 	dsb	sy
 8011d5e:	e7fe      	b.n	8011d5e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 8011d60:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8011d62:	b14b      	cbz	r3, 8011d78 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011d64:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011d66:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8011d68:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011d6a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8011d6c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011d6e:	d000      	beq.n	8011d72 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8011d70:	b16b      	cbz	r3, 8011d8e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 8011d72:	2000      	movs	r0, #0
	}
 8011d74:	b002      	add	sp, #8
 8011d76:	bd10      	pop	{r4, pc}
 8011d78:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011d7c:	f383 8811 	msr	BASEPRI, r3
 8011d80:	f3bf 8f6f 	isb	sy
 8011d84:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8011d88:	e7fe      	b.n	8011d88 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 8011d8a:	2000      	movs	r0, #0
	}
 8011d8c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011d8e:	1d21      	adds	r1, r4, #4
 8011d90:	4608      	mov	r0, r1
 8011d92:	9101      	str	r1, [sp, #4]
 8011d94:	f7fd ffe6 	bl	800fd64 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8011d98:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8011d9a:	4a0a      	ldr	r2, [pc, #40]	; (8011dc4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8011d9c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011d9e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 8011da2:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8011da4:	6810      	ldr	r0, [r2, #0]
 8011da6:	9901      	ldr	r1, [sp, #4]
 8011da8:	4283      	cmp	r3, r0
 8011daa:	4807      	ldr	r0, [pc, #28]	; (8011dc8 <xTaskPriorityDisinherit+0x88>)
 8011dac:	bf88      	it	hi
 8011dae:	6013      	strhi	r3, [r2, #0]
 8011db0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011db4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8011db8:	f7fd ffac 	bl	800fd14 <vListInsertEnd>
					xReturn = pdTRUE;
 8011dbc:	2001      	movs	r0, #1
		return xReturn;
 8011dbe:	e7d9      	b.n	8011d74 <xTaskPriorityDisinherit+0x34>
 8011dc0:	20013220 	.word	0x20013220
 8011dc4:	2001369c 	.word	0x2001369c
 8011dc8:	2001322c 	.word	0x2001322c

08011dcc <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 8011dcc:	2800      	cmp	r0, #0
 8011dce:	d041      	beq.n	8011e54 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 8011dd0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 8011dd2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 8011dd4:	b083      	sub	sp, #12
 8011dd6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 8011dd8:	b153      	cbz	r3, 8011df0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8011dda:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 8011ddc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011dde:	4281      	cmp	r1, r0
 8011de0:	bf38      	it	cc
 8011de2:	4601      	movcc	r1, r0
 8011de4:	428a      	cmp	r2, r1
 8011de6:	d001      	beq.n	8011dec <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8011de8:	2b01      	cmp	r3, #1
 8011dea:	d00a      	beq.n	8011e02 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 8011dec:	b003      	add	sp, #12
 8011dee:	bd30      	pop	{r4, r5, pc}
 8011df0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011df4:	f383 8811 	msr	BASEPRI, r3
 8011df8:	f3bf 8f6f 	isb	sy
 8011dfc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8011e00:	e7fe      	b.n	8011e00 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 8011e02:	4b19      	ldr	r3, [pc, #100]	; (8011e68 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 8011e04:	681b      	ldr	r3, [r3, #0]
 8011e06:	42a3      	cmp	r3, r4
 8011e08:	d025      	beq.n	8011e56 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011e0a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 8011e0c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011e0e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011e10:	bfa8      	it	ge
 8011e12:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8011e16:	4d15      	ldr	r5, [pc, #84]	; (8011e6c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011e18:	bfa8      	it	ge
 8011e1a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8011e1c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8011e20:	6961      	ldr	r1, [r4, #20]
 8011e22:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 8011e26:	4299      	cmp	r1, r3
 8011e28:	d1e0      	bne.n	8011dec <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011e2a:	1d21      	adds	r1, r4, #4
 8011e2c:	4608      	mov	r0, r1
 8011e2e:	9101      	str	r1, [sp, #4]
 8011e30:	f7fd ff98 	bl	800fd64 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8011e34:	4b0e      	ldr	r3, [pc, #56]	; (8011e70 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 8011e36:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011e38:	681a      	ldr	r2, [r3, #0]
 8011e3a:	9901      	ldr	r1, [sp, #4]
 8011e3c:	4290      	cmp	r0, r2
 8011e3e:	bf88      	it	hi
 8011e40:	6018      	strhi	r0, [r3, #0]
 8011e42:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011e46:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 8011e4a:	b003      	add	sp, #12
 8011e4c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8011e50:	f7fd bf60 	b.w	800fd14 <vListInsertEnd>
 8011e54:	4770      	bx	lr
 8011e56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011e5a:	f383 8811 	msr	BASEPRI, r3
 8011e5e:	f3bf 8f6f 	isb	sy
 8011e62:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 8011e66:	e7fe      	b.n	8011e66 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 8011e68:	20013220 	.word	0x20013220
 8011e6c:	2001322c 	.word	0x2001322c
 8011e70:	2001369c 	.word	0x2001369c

08011e74 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8011e74:	4b04      	ldr	r3, [pc, #16]	; (8011e88 <pvTaskIncrementMutexHeldCount+0x14>)
 8011e76:	681a      	ldr	r2, [r3, #0]
 8011e78:	b11a      	cbz	r2, 8011e82 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8011e7a:	6819      	ldr	r1, [r3, #0]
 8011e7c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8011e7e:	3201      	adds	r2, #1
 8011e80:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8011e82:	6818      	ldr	r0, [r3, #0]
	}
 8011e84:	4770      	bx	lr
 8011e86:	bf00      	nop
 8011e88:	20013220 	.word	0x20013220

08011e8c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 8011e8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011e90:	4e22      	ldr	r6, [pc, #136]	; (8011f1c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 8011e92:	f8df 9090 	ldr.w	r9, [pc, #144]	; 8011f24 <prvSwitchTimerLists+0x98>
{
 8011e96:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 8011e98:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8011e9c:	e00d      	b.n	8011eba <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8011e9e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011ea0:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8011ea2:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8011ea4:	1d25      	adds	r5, r4, #4
 8011ea6:	4628      	mov	r0, r5
 8011ea8:	f7fd ff5c 	bl	800fd64 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8011eac:	6a23      	ldr	r3, [r4, #32]
 8011eae:	4620      	mov	r0, r4
 8011eb0:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8011eb2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8011eb6:	075b      	lsls	r3, r3, #29
 8011eb8:	d40a      	bmi.n	8011ed0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8011eba:	6833      	ldr	r3, [r6, #0]
 8011ebc:	681a      	ldr	r2, [r3, #0]
 8011ebe:	2a00      	cmp	r2, #0
 8011ec0:	d1ed      	bne.n	8011e9e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 8011ec2:	4a17      	ldr	r2, [pc, #92]	; (8011f20 <prvSwitchTimerLists+0x94>)
 8011ec4:	6811      	ldr	r1, [r2, #0]
 8011ec6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 8011ec8:	6013      	str	r3, [r2, #0]
}
 8011eca:	b005      	add	sp, #20
 8011ecc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8011ed0:	69a3      	ldr	r3, [r4, #24]
 8011ed2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 8011ed4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8011ed6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 8011ed8:	d205      	bcs.n	8011ee6 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8011eda:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8011edc:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8011ede:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8011ee0:	f7fd ff28 	bl	800fd34 <vListInsert>
 8011ee4:	e7e9      	b.n	8011eba <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 8011ee6:	f8d9 3000 	ldr.w	r3, [r9]
 8011eea:	b16b      	cbz	r3, 8011f08 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8011eec:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8011ef0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8011ef2:	f7ff fecf 	bl	8011c94 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8011ef6:	2300      	movs	r3, #0
 8011ef8:	f8d9 0000 	ldr.w	r0, [r9]
 8011efc:	461a      	mov	r2, r3
 8011efe:	4669      	mov	r1, sp
 8011f00:	f7fe fa9c 	bl	801043c <xQueueGenericSend>
				configASSERT( xResult );
 8011f04:	2800      	cmp	r0, #0
 8011f06:	d1d8      	bne.n	8011eba <prvSwitchTimerLists+0x2e>
 8011f08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011f0c:	f383 8811 	msr	BASEPRI, r3
 8011f10:	f3bf 8f6f 	isb	sy
 8011f14:	f3bf 8f4f 	dsb	sy
 8011f18:	e7fe      	b.n	8011f18 <prvSwitchTimerLists+0x8c>
 8011f1a:	bf00      	nop
 8011f1c:	2001371c 	.word	0x2001371c
 8011f20:	20013720 	.word	0x20013720
 8011f24:	20013840 	.word	0x20013840

08011f28 <prvTimerTask>:
{
 8011f28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f2c:	4e9b      	ldr	r6, [pc, #620]	; (801219c <prvTimerTask+0x274>)
 8011f2e:	4d9c      	ldr	r5, [pc, #624]	; (80121a0 <prvTimerTask+0x278>)
 8011f30:	4c9c      	ldr	r4, [pc, #624]	; (80121a4 <prvTimerTask+0x27c>)
 8011f32:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 8011f34:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 8011f38:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8011f3c:	6833      	ldr	r3, [r6, #0]
 8011f3e:	681f      	ldr	r7, [r3, #0]
 8011f40:	2f00      	cmp	r7, #0
 8011f42:	f000 80a8 	beq.w	8012096 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8011f46:	68db      	ldr	r3, [r3, #12]
 8011f48:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 8011f4a:	f7ff fcf9 	bl	8011940 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 8011f4e:	f7ff fd0f 	bl	8011970 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8011f52:	682a      	ldr	r2, [r5, #0]
 8011f54:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 8011f56:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8011f58:	f0c0 80ae 	bcc.w	80120b8 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8011f5c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 8011f5e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8011f60:	f240 80b4 	bls.w	80120cc <prvTimerTask+0x1a4>
 8011f64:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8011f66:	6820      	ldr	r0, [r4, #0]
 8011f68:	eba7 010a 	sub.w	r1, r7, sl
 8011f6c:	f7ff f89a 	bl	80110a4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8011f70:	f7ff fcee 	bl	8011950 <xTaskResumeAll>
 8011f74:	b928      	cbnz	r0, 8011f82 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 8011f76:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 8011f7a:	f3bf 8f4f 	dsb	sy
 8011f7e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8011f82:	6820      	ldr	r0, [r4, #0]
 8011f84:	2200      	movs	r2, #0
 8011f86:	a902      	add	r1, sp, #8
 8011f88:	f7fe fc94 	bl	80108b4 <xQueueReceive>
 8011f8c:	2800      	cmp	r0, #0
 8011f8e:	d0d5      	beq.n	8011f3c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8011f90:	9b02      	ldr	r3, [sp, #8]
 8011f92:	2b00      	cmp	r3, #0
 8011f94:	db76      	blt.n	8012084 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8011f96:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8011f98:	697b      	ldr	r3, [r7, #20]
 8011f9a:	b113      	cbz	r3, 8011fa2 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8011f9c:	1d38      	adds	r0, r7, #4
 8011f9e:	f7fd fee1 	bl	800fd64 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 8011fa2:	f7ff fce5 	bl	8011970 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8011fa6:	682b      	ldr	r3, [r5, #0]
 8011fa8:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8011faa:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8011fac:	f0c0 808b 	bcc.w	80120c6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 8011fb0:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8011fb2:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 8011fb6:	2b09      	cmp	r3, #9
 8011fb8:	d8e3      	bhi.n	8011f82 <prvTimerTask+0x5a>
 8011fba:	e8df f003 	tbb	[pc, r3]
 8011fbe:	0505      	.short	0x0505
 8011fc0:	5a3d5305 	.word	0x5a3d5305
 8011fc4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8011fc8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8011fcc:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8011fce:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8011fd0:	f043 0301 	orr.w	r3, r3, #1
 8011fd4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8011fd8:	9b03      	ldr	r3, [sp, #12]
 8011fda:	1899      	adds	r1, r3, r2
 8011fdc:	bf2c      	ite	cs
 8011fde:	2001      	movcs	r0, #1
 8011fe0:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 8011fe2:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8011fe4:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 8011fe6:	f200 808c 	bhi.w	8012102 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011fea:	ebaa 0303 	sub.w	r3, sl, r3
 8011fee:	429a      	cmp	r2, r3
 8011ff0:	d832      	bhi.n	8012058 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8011ff2:	6a3b      	ldr	r3, [r7, #32]
 8011ff4:	4638      	mov	r0, r7
 8011ff6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8011ff8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8011ffc:	075b      	lsls	r3, r3, #29
 8011ffe:	d5c0      	bpl.n	8011f82 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 8012000:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8012002:	9903      	ldr	r1, [sp, #12]
 8012004:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 8012006:	b172      	cbz	r2, 8012026 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8012008:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 801200a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 801200e:	2300      	movs	r3, #0
 8012010:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8012012:	f7ff fe3f 	bl	8011c94 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8012016:	2300      	movs	r3, #0
 8012018:	6820      	ldr	r0, [r4, #0]
 801201a:	461a      	mov	r2, r3
 801201c:	a906      	add	r1, sp, #24
 801201e:	f7fe fa0d 	bl	801043c <xQueueGenericSend>
							configASSERT( xResult );
 8012022:	2800      	cmp	r0, #0
 8012024:	d1ad      	bne.n	8011f82 <prvTimerTask+0x5a>
 8012026:	f04f 0350 	mov.w	r3, #80	; 0x50
 801202a:	f383 8811 	msr	BASEPRI, r3
 801202e:	f3bf 8f6f 	isb	sy
 8012032:	f3bf 8f4f 	dsb	sy
 8012036:	e7fe      	b.n	8012036 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012038:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801203c:	f043 0301 	orr.w	r3, r3, #1
 8012040:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8012044:	9b03      	ldr	r3, [sp, #12]
 8012046:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8012048:	2b00      	cmp	r3, #0
 801204a:	f000 809d 	beq.w	8012188 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 801204e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 8012050:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8012052:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8012054:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 8012056:	d85e      	bhi.n	8012116 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8012058:	4b53      	ldr	r3, [pc, #332]	; (80121a8 <prvTimerTask+0x280>)
 801205a:	1d39      	adds	r1, r7, #4
 801205c:	6818      	ldr	r0, [r3, #0]
 801205e:	f7fd fe69 	bl	800fd34 <vListInsert>
	return xProcessTimerNow;
 8012062:	e78e      	b.n	8011f82 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8012064:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8012068:	f023 0301 	bic.w	r3, r3, #1
 801206c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 8012070:	e787      	b.n	8011f82 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8012072:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8012076:	079a      	lsls	r2, r3, #30
 8012078:	d552      	bpl.n	8012120 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801207a:	f023 0301 	bic.w	r3, r3, #1
 801207e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8012082:	e77e      	b.n	8011f82 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8012084:	9b03      	ldr	r3, [sp, #12]
 8012086:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801208a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 801208c:	9b02      	ldr	r3, [sp, #8]
 801208e:	2b00      	cmp	r3, #0
 8012090:	f6ff af77 	blt.w	8011f82 <prvTimerTask+0x5a>
 8012094:	e77f      	b.n	8011f96 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 8012096:	f7ff fc53 	bl	8011940 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801209a:	f7ff fc69 	bl	8011970 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801209e:	682a      	ldr	r2, [r5, #0]
 80120a0:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 80120a2:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80120a4:	d808      	bhi.n	80120b8 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80120a6:	4b40      	ldr	r3, [pc, #256]	; (80121a8 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 80120a8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80120ac:	681a      	ldr	r2, [r3, #0]
 80120ae:	6812      	ldr	r2, [r2, #0]
 80120b0:	fab2 f282 	clz	r2, r2
 80120b4:	0952      	lsrs	r2, r2, #5
 80120b6:	e756      	b.n	8011f66 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 80120b8:	f7ff fee8 	bl	8011e8c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 80120bc:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 80120c0:	f7ff fc46 	bl	8011950 <xTaskResumeAll>
 80120c4:	e75d      	b.n	8011f82 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 80120c6:	f7ff fee1 	bl	8011e8c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 80120ca:	e771      	b.n	8011fb0 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 80120cc:	f7ff fc40 	bl	8011950 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80120d0:	6832      	ldr	r2, [r6, #0]
 80120d2:	68d2      	ldr	r2, [r2, #12]
 80120d4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80120d8:	f10b 0104 	add.w	r1, fp, #4
 80120dc:	4608      	mov	r0, r1
 80120de:	9101      	str	r1, [sp, #4]
 80120e0:	f7fd fe40 	bl	800fd64 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80120e4:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 80120e8:	9901      	ldr	r1, [sp, #4]
 80120ea:	f010 0f04 	tst.w	r0, #4
 80120ee:	d11b      	bne.n	8012128 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80120f0:	f020 0001 	bic.w	r0, r0, #1
 80120f4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80120f8:	f8db 3020 	ldr.w	r3, [fp, #32]
 80120fc:	4658      	mov	r0, fp
 80120fe:	4798      	blx	r3
}
 8012100:	e73f      	b.n	8011f82 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8012102:	4553      	cmp	r3, sl
 8012104:	d902      	bls.n	801210c <prvTimerTask+0x1e4>
 8012106:	2800      	cmp	r0, #0
 8012108:	f43f af73 	beq.w	8011ff2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801210c:	6830      	ldr	r0, [r6, #0]
 801210e:	1d39      	adds	r1, r7, #4
 8012110:	f7fd fe10 	bl	800fd34 <vListInsert>
	return xProcessTimerNow;
 8012114:	e735      	b.n	8011f82 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012116:	6830      	ldr	r0, [r6, #0]
 8012118:	1d39      	adds	r1, r7, #4
 801211a:	f7fd fe0b 	bl	800fd34 <vListInsert>
 801211e:	e730      	b.n	8011f82 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 8012120:	4638      	mov	r0, r7
 8012122:	f7fd fd83 	bl	800fc2c <vPortFree>
 8012126:	e72c      	b.n	8011f82 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8012128:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801212c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8012130:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 8012132:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8012134:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 8012138:	d903      	bls.n	8012142 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801213a:	6830      	ldr	r0, [r6, #0]
 801213c:	f7fd fdfa 	bl	800fd34 <vListInsert>
	return xProcessTimerNow;
 8012140:	e7da      	b.n	80120f8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8012142:	ebaa 0307 	sub.w	r3, sl, r7
 8012146:	429a      	cmp	r2, r3
 8012148:	d819      	bhi.n	801217e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 801214a:	6823      	ldr	r3, [r4, #0]
 801214c:	b173      	cbz	r3, 801216c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 801214e:	2300      	movs	r3, #0
 8012150:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8012152:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8012154:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8012158:	f7ff fd9c 	bl	8011c94 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 801215c:	2300      	movs	r3, #0
 801215e:	6820      	ldr	r0, [r4, #0]
 8012160:	461a      	mov	r2, r3
 8012162:	a906      	add	r1, sp, #24
 8012164:	f7fe f96a 	bl	801043c <xQueueGenericSend>
			configASSERT( xResult );
 8012168:	2800      	cmp	r0, #0
 801216a:	d1c5      	bne.n	80120f8 <prvTimerTask+0x1d0>
 801216c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8012170:	f383 8811 	msr	BASEPRI, r3
 8012174:	f3bf 8f6f 	isb	sy
 8012178:	f3bf 8f4f 	dsb	sy
 801217c:	e7fe      	b.n	801217c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 801217e:	4b0a      	ldr	r3, [pc, #40]	; (80121a8 <prvTimerTask+0x280>)
 8012180:	6818      	ldr	r0, [r3, #0]
 8012182:	f7fd fdd7 	bl	800fd34 <vListInsert>
	return xProcessTimerNow;
 8012186:	e7b7      	b.n	80120f8 <prvTimerTask+0x1d0>
 8012188:	f04f 0350 	mov.w	r3, #80	; 0x50
 801218c:	f383 8811 	msr	BASEPRI, r3
 8012190:	f3bf 8f6f 	isb	sy
 8012194:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8012198:	e7fe      	b.n	8012198 <prvTimerTask+0x270>
 801219a:	bf00      	nop
 801219c:	2001371c 	.word	0x2001371c
 80121a0:	200137ec 	.word	0x200137ec
 80121a4:	20013840 	.word	0x20013840
 80121a8:	20013720 	.word	0x20013720

080121ac <xTimerCreateTimerTask>:
{
 80121ac:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80121ae:	4c23      	ldr	r4, [pc, #140]	; (801223c <xTimerCreateTimerTask+0x90>)
{
 80121b0:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 80121b2:	f7fd fe4f 	bl	800fe54 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80121b6:	6825      	ldr	r5, [r4, #0]
 80121b8:	b335      	cbz	r5, 8012208 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 80121ba:	f7fd fe6d 	bl	800fe98 <vPortExitCritical>
	if( xTimerQueue != NULL )
 80121be:	6823      	ldr	r3, [r4, #0]
 80121c0:	b1cb      	cbz	r3, 80121f6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80121c2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80121c4:	aa07      	add	r2, sp, #28
 80121c6:	a906      	add	r1, sp, #24
 80121c8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80121ca:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80121ce:	f7fd fc61 	bl	800fa94 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80121d2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 80121d6:	2302      	movs	r3, #2
 80121d8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80121dc:	9300      	str	r3, [sp, #0]
 80121de:	9a07      	ldr	r2, [sp, #28]
 80121e0:	4917      	ldr	r1, [pc, #92]	; (8012240 <xTimerCreateTimerTask+0x94>)
 80121e2:	4818      	ldr	r0, [pc, #96]	; (8012244 <xTimerCreateTimerTask+0x98>)
 80121e4:	4623      	mov	r3, r4
 80121e6:	f7ff fa6d 	bl	80116c4 <xTaskCreateStatic>
 80121ea:	4b17      	ldr	r3, [pc, #92]	; (8012248 <xTimerCreateTimerTask+0x9c>)
 80121ec:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80121ee:	b110      	cbz	r0, 80121f6 <xTimerCreateTimerTask+0x4a>
}
 80121f0:	2001      	movs	r0, #1
 80121f2:	b009      	add	sp, #36	; 0x24
 80121f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80121f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80121fa:	f383 8811 	msr	BASEPRI, r3
 80121fe:	f3bf 8f6f 	isb	sy
 8012202:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8012206:	e7fe      	b.n	8012206 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 8012208:	4f10      	ldr	r7, [pc, #64]	; (801224c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 801220a:	4e11      	ldr	r6, [pc, #68]	; (8012250 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 801220c:	4638      	mov	r0, r7
 801220e:	f7fd fd71 	bl	800fcf4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8012212:	4630      	mov	r0, r6
 8012214:	f7fd fd6e 	bl	800fcf4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8012218:	4a0e      	ldr	r2, [pc, #56]	; (8012254 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 801221a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 801221c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 801221e:	4a0e      	ldr	r2, [pc, #56]	; (8012258 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8012220:	4b0e      	ldr	r3, [pc, #56]	; (801225c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 8012222:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8012224:	2110      	movs	r1, #16
 8012226:	4a0e      	ldr	r2, [pc, #56]	; (8012260 <xTimerCreateTimerTask+0xb4>)
 8012228:	200a      	movs	r0, #10
 801222a:	f7fd ffb1 	bl	8010190 <xQueueGenericCreateStatic>
 801222e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 8012230:	2800      	cmp	r0, #0
 8012232:	d0c2      	beq.n	80121ba <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8012234:	490b      	ldr	r1, [pc, #44]	; (8012264 <xTimerCreateTimerTask+0xb8>)
 8012236:	f7fe ff0d 	bl	8011054 <vQueueAddToRegistry>
 801223a:	e7be      	b.n	80121ba <xTimerCreateTimerTask+0xe>
 801223c:	20013840 	.word	0x20013840
 8012240:	080312d0 	.word	0x080312d0
 8012244:	08011f29 	.word	0x08011f29
 8012248:	20013844 	.word	0x20013844
 801224c:	200137c4 	.word	0x200137c4
 8012250:	200137d8 	.word	0x200137d8
 8012254:	2001371c 	.word	0x2001371c
 8012258:	20013720 	.word	0x20013720
 801225c:	200137f0 	.word	0x200137f0
 8012260:	20013724 	.word	0x20013724
 8012264:	080312c8 	.word	0x080312c8

08012268 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8012268:	8880      	ldrh	r0, [r0, #4]
 801226a:	4770      	bx	lr

0801226c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 801226c:	b570      	push	{r4, r5, r6, lr}
 801226e:	6803      	ldr	r3, [r0, #0]
 8012270:	4605      	mov	r5, r0
 8012272:	460c      	mov	r4, r1
 8012274:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012276:	2100      	movs	r1, #0
 8012278:	4798      	blx	r3
 801227a:	682b      	ldr	r3, [r5, #0]
 801227c:	4606      	mov	r6, r0
 801227e:	6a1b      	ldr	r3, [r3, #32]
 8012280:	4628      	mov	r0, r5
 8012282:	4798      	blx	r3
 8012284:	1ba4      	subs	r4, r4, r6
 8012286:	b2a4      	uxth	r4, r4
 8012288:	fbb4 f0f0 	udiv	r0, r4, r0
 801228c:	bd70      	pop	{r4, r5, r6, pc}

0801228e <_ZN8touchgfx17AbstractPartition5clearEv>:
 801228e:	2300      	movs	r3, #0
 8012290:	8083      	strh	r3, [r0, #4]
 8012292:	4770      	bx	lr

08012294 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8012294:	b510      	push	{r4, lr}
 8012296:	6803      	ldr	r3, [r0, #0]
 8012298:	8881      	ldrh	r1, [r0, #4]
 801229a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801229c:	4604      	mov	r4, r0
 801229e:	4798      	blx	r3
 80122a0:	88a3      	ldrh	r3, [r4, #4]
 80122a2:	3301      	adds	r3, #1
 80122a4:	80a3      	strh	r3, [r4, #4]
 80122a6:	bd10      	pop	{r4, pc}

080122a8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80122a8:	6803      	ldr	r3, [r0, #0]
 80122aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80122ac:	4718      	bx	r3

080122ae <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80122ae:	4770      	bx	lr

080122b0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80122b0:	4a02      	ldr	r2, [pc, #8]	; (80122bc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80122b2:	6002      	str	r2, [r0, #0]
 80122b4:	2200      	movs	r2, #0
 80122b6:	8082      	strh	r2, [r0, #4]
 80122b8:	4770      	bx	lr
 80122ba:	bf00      	nop
 80122bc:	080312e0 	.word	0x080312e0

080122c0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 80122c0:	b510      	push	{r4, lr}
 80122c2:	6803      	ldr	r3, [r0, #0]
 80122c4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80122c8:	4604      	mov	r4, r0
 80122ca:	4798      	blx	r3
 80122cc:	b110      	cbz	r0, 80122d4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 80122ce:	4620      	mov	r0, r4
 80122d0:	f7f0 ff2e 	bl	8003130 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 80122d4:	bd10      	pop	{r4, pc}

080122d6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 80122d6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 80122da:	4770      	bx	lr

080122dc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 80122dc:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 80122e0:	4770      	bx	lr

080122e2 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 80122e2:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 80122e6:	4770      	bx	lr

080122e8 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 80122e8:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 80122ec:	4770      	bx	lr

080122ee <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 80122ee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80122f0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 80122f4:	461e      	mov	r6, r3
 80122f6:	6803      	ldr	r3, [r0, #0]
 80122f8:	460f      	mov	r7, r1
 80122fa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80122fe:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8012302:	4604      	mov	r4, r0
 8012304:	4615      	mov	r5, r2
 8012306:	4798      	blx	r3
 8012308:	b93e      	cbnz	r6, 801231a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 801230a:	1bed      	subs	r5, r5, r7
 801230c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8012310:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8012314:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8012318:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801231a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 801231e:	e7f7      	b.n	8012310 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

08012320 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8012320:	b510      	push	{r4, lr}
 8012322:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8012326:	600c      	str	r4, [r1, #0]
 8012328:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801232c:	6011      	str	r1, [r2, #0]
 801232e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8012332:	801a      	strh	r2, [r3, #0]
 8012334:	9b02      	ldr	r3, [sp, #8]
 8012336:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 801233a:	801a      	strh	r2, [r3, #0]
 801233c:	bd10      	pop	{r4, pc}

0801233e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 801233e:	b510      	push	{r4, lr}
 8012340:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8012344:	600c      	str	r4, [r1, #0]
 8012346:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801234a:	6011      	str	r1, [r2, #0]
 801234c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8012350:	801a      	strh	r2, [r3, #0]
 8012352:	bd10      	pop	{r4, pc}

08012354 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 8012354:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8012358:	600b      	str	r3, [r1, #0]
 801235a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 801235e:	6013      	str	r3, [r2, #0]
 8012360:	4770      	bx	lr

08012362 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8012362:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8012366:	4770      	bx	lr

08012368 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8012368:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 801236c:	4770      	bx	lr

0801236e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 801236e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8012372:	4770      	bx	lr

08012374 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8012374:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8012378:	4770      	bx	lr

0801237a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 801237a:	4770      	bx	lr

0801237c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 801237c:	b510      	push	{r4, lr}
 801237e:	21b4      	movs	r1, #180	; 0xb4
 8012380:	4604      	mov	r4, r0
 8012382:	f01a fb36 	bl	802c9f2 <_ZdlPvj>
 8012386:	4620      	mov	r0, r4
 8012388:	bd10      	pop	{r4, pc}

0801238a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801238a:	b570      	push	{r4, r5, r6, lr}
 801238c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8012390:	428d      	cmp	r5, r1
 8012392:	bfb8      	it	lt
 8012394:	460d      	movlt	r5, r1
 8012396:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801239a:	428d      	cmp	r5, r1
 801239c:	4604      	mov	r4, r0
 801239e:	bfa8      	it	ge
 80123a0:	460d      	movge	r5, r1
 80123a2:	4616      	mov	r6, r2
 80123a4:	b99a      	cbnz	r2, 80123ce <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 80123a6:	6803      	ldr	r3, [r0, #0]
 80123a8:	4629      	mov	r1, r5
 80123aa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80123ae:	4798      	blx	r3
 80123b0:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80123b4:	b368      	cbz	r0, 8012412 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 80123b6:	6803      	ldr	r3, [r0, #0]
 80123b8:	68db      	ldr	r3, [r3, #12]
 80123ba:	4798      	blx	r3
 80123bc:	b348      	cbz	r0, 8012412 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 80123be:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80123c2:	6803      	ldr	r3, [r0, #0]
 80123c4:	4621      	mov	r1, r4
 80123c6:	689b      	ldr	r3, [r3, #8]
 80123c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80123cc:	4718      	bx	r3
 80123ce:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80123d2:	2b00      	cmp	r3, #0
 80123d4:	dd08      	ble.n	80123e8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 80123d6:	f006 fa23 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
 80123da:	4621      	mov	r1, r4
 80123dc:	3004      	adds	r0, #4
 80123de:	f006 fa6c 	bl	80188ba <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80123e2:	2300      	movs	r3, #0
 80123e4:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80123e8:	6823      	ldr	r3, [r4, #0]
 80123ea:	4620      	mov	r0, r4
 80123ec:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80123f0:	4798      	blx	r3
 80123f2:	2300      	movs	r3, #0
 80123f4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 80123f8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 80123fc:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8012400:	f006 fa0e 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
 8012404:	4621      	mov	r1, r4
 8012406:	3004      	adds	r0, #4
 8012408:	f006 fb00 	bl	8018a0c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 801240c:	2301      	movs	r3, #1
 801240e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8012412:	bd70      	pop	{r4, r5, r6, pc}

08012414 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8012414:	b510      	push	{r4, lr}
 8012416:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 801241a:	4299      	cmp	r1, r3
 801241c:	bfb8      	it	lt
 801241e:	4619      	movlt	r1, r3
 8012420:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8012424:	4299      	cmp	r1, r3
 8012426:	bfa8      	it	ge
 8012428:	4619      	movge	r1, r3
 801242a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 801242e:	428b      	cmp	r3, r1
 8012430:	4604      	mov	r4, r0
 8012432:	d010      	beq.n	8012456 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8012434:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8012438:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 801243c:	b158      	cbz	r0, 8012456 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 801243e:	6803      	ldr	r3, [r0, #0]
 8012440:	68db      	ldr	r3, [r3, #12]
 8012442:	4798      	blx	r3
 8012444:	b138      	cbz	r0, 8012456 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8012446:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 801244a:	6803      	ldr	r3, [r0, #0]
 801244c:	4621      	mov	r1, r4
 801244e:	689b      	ldr	r3, [r3, #8]
 8012450:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012454:	4718      	bx	r3
 8012456:	bd10      	pop	{r4, pc}

08012458 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8012458:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801245a:	4604      	mov	r4, r0
 801245c:	460d      	mov	r5, r1
 801245e:	b1a9      	cbz	r1, 801248c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8012460:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8012464:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8012468:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 801246c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8012470:	ab01      	add	r3, sp, #4
 8012472:	1a12      	subs	r2, r2, r0
 8012474:	1b89      	subs	r1, r1, r6
 8012476:	1a38      	subs	r0, r7, r0
 8012478:	f007 fc88 	bl	8019d8c <_ZN8touchgfx6muldivElllRl>
 801247c:	4629      	mov	r1, r5
 801247e:	ab01      	add	r3, sp, #4
 8012480:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8012484:	4430      	add	r0, r6
 8012486:	f007 fc81 	bl	8019d8c <_ZN8touchgfx6muldivElllRl>
 801248a:	b285      	uxth	r5, r0
 801248c:	4628      	mov	r0, r5
 801248e:	b003      	add	sp, #12
 8012490:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012492 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8012492:	b570      	push	{r4, r5, r6, lr}
 8012494:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8012498:	4604      	mov	r4, r0
 801249a:	2b00      	cmp	r3, #0
 801249c:	d035      	beq.n	801250a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801249e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 80124a2:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 80124a6:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 80124aa:	3001      	adds	r0, #1
 80124ac:	1ad2      	subs	r2, r2, r3
 80124ae:	b212      	sxth	r2, r2
 80124b0:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 80124b4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80124b8:	2100      	movs	r1, #0
 80124ba:	b280      	uxth	r0, r0
 80124bc:	47a8      	blx	r5
 80124be:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 80124c2:	6823      	ldr	r3, [r4, #0]
 80124c4:	4401      	add	r1, r0
 80124c6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80124ca:	4620      	mov	r0, r4
 80124cc:	4798      	blx	r3
 80124ce:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 80124d2:	429a      	cmp	r2, r3
 80124d4:	db19      	blt.n	801250a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80124d6:	2500      	movs	r5, #0
 80124d8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80124dc:	f006 f9a0 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
 80124e0:	4621      	mov	r1, r4
 80124e2:	3004      	adds	r0, #4
 80124e4:	f006 f9e9 	bl	80188ba <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80124e8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80124ec:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80124f0:	b158      	cbz	r0, 801250a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80124f2:	6803      	ldr	r3, [r0, #0]
 80124f4:	68db      	ldr	r3, [r3, #12]
 80124f6:	4798      	blx	r3
 80124f8:	b138      	cbz	r0, 801250a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80124fa:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80124fe:	6803      	ldr	r3, [r0, #0]
 8012500:	4621      	mov	r1, r4
 8012502:	689b      	ldr	r3, [r3, #8]
 8012504:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012508:	4718      	bx	r3
 801250a:	bd70      	pop	{r4, r5, r6, pc}

0801250c <_ZN8touchgfx8DrawableC1Ev>:
 801250c:	4a0a      	ldr	r2, [pc, #40]	; (8012538 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 801250e:	6002      	str	r2, [r0, #0]
 8012510:	2200      	movs	r2, #0
 8012512:	8082      	strh	r2, [r0, #4]
 8012514:	80c2      	strh	r2, [r0, #6]
 8012516:	8102      	strh	r2, [r0, #8]
 8012518:	8142      	strh	r2, [r0, #10]
 801251a:	8182      	strh	r2, [r0, #12]
 801251c:	81c2      	strh	r2, [r0, #14]
 801251e:	8202      	strh	r2, [r0, #16]
 8012520:	8242      	strh	r2, [r0, #18]
 8012522:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012526:	61c2      	str	r2, [r0, #28]
 8012528:	8402      	strh	r2, [r0, #32]
 801252a:	8442      	strh	r2, [r0, #34]	; 0x22
 801252c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8012530:	2201      	movs	r2, #1
 8012532:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8012536:	4770      	bx	lr
 8012538:	08031c60 	.word	0x08031c60

0801253c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 801253c:	b570      	push	{r4, r5, r6, lr}
 801253e:	6803      	ldr	r3, [r0, #0]
 8012540:	4604      	mov	r4, r0
 8012542:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012544:	4615      	mov	r5, r2
 8012546:	4798      	blx	r3
 8012548:	6823      	ldr	r3, [r4, #0]
 801254a:	4629      	mov	r1, r5
 801254c:	4620      	mov	r0, r4
 801254e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012550:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012554:	4718      	bx	r3

08012556 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8012556:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801255a:	4604      	mov	r4, r0
 801255c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8012560:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8012564:	460e      	mov	r6, r1
 8012566:	4615      	mov	r5, r2
 8012568:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801256c:	4619      	mov	r1, r3
 801256e:	463a      	mov	r2, r7
 8012570:	3058      	adds	r0, #88	; 0x58
 8012572:	4698      	mov	r8, r3
 8012574:	f7ff ffe2 	bl	801253c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012578:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801257c:	4446      	add	r6, r8
 801257e:	42b3      	cmp	r3, r6
 8012580:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012584:	bfb8      	it	lt
 8012586:	8126      	strhlt	r6, [r4, #8]
 8012588:	443d      	add	r5, r7
 801258a:	42ab      	cmp	r3, r5
 801258c:	bfb8      	it	lt
 801258e:	8165      	strhlt	r5, [r4, #10]
 8012590:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012594 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8012594:	b510      	push	{r4, lr}
 8012596:	4604      	mov	r4, r0
 8012598:	302c      	adds	r0, #44	; 0x2c
 801259a:	f003 fc42 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801259e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 80125a2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 80125a6:	4620      	mov	r0, r4
 80125a8:	f7ff ffc8 	bl	801253c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80125ac:	bd10      	pop	{r4, pc}
	...

080125b0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 80125b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80125b2:	4604      	mov	r4, r0
 80125b4:	4626      	mov	r6, r4
 80125b6:	2500      	movs	r5, #0
 80125b8:	f7ff ffa8 	bl	801250c <_ZN8touchgfx8DrawableC1Ev>
 80125bc:	4b23      	ldr	r3, [pc, #140]	; (801264c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 80125be:	62a5      	str	r5, [r4, #40]	; 0x28
 80125c0:	f846 3b2c 	str.w	r3, [r6], #44
 80125c4:	2226      	movs	r2, #38	; 0x26
 80125c6:	4629      	mov	r1, r5
 80125c8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80125cc:	4630      	mov	r0, r6
 80125ce:	f8ad 7004 	strh.w	r7, [sp, #4]
 80125d2:	f01b fafa 	bl	802dbca <memset>
 80125d6:	4630      	mov	r0, r6
 80125d8:	f7ff ff98 	bl	801250c <_ZN8touchgfx8DrawableC1Ev>
 80125dc:	a902      	add	r1, sp, #8
 80125de:	4b1c      	ldr	r3, [pc, #112]	; (8012650 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 80125e0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80125e2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 80125e6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 80125ea:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 80125ee:	4630      	mov	r0, r6
 80125f0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 80125f4:	f003 fc15 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80125f8:	4638      	mov	r0, r7
 80125fa:	f7ff ff87 	bl	801250c <_ZN8touchgfx8DrawableC1Ev>
 80125fe:	4b15      	ldr	r3, [pc, #84]	; (8012654 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8012600:	65a3      	str	r3, [r4, #88]	; 0x58
 8012602:	2364      	movs	r3, #100	; 0x64
 8012604:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8012608:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 801260c:	4b12      	ldr	r3, [pc, #72]	; (8012658 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 801260e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8012612:	4629      	mov	r1, r5
 8012614:	4630      	mov	r0, r6
 8012616:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 801261a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 801261e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8012622:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8012626:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 801262a:	f7f0 fcdd 	bl	8002fe8 <_ZN8touchgfx8Drawable4setXEs>
 801262e:	4629      	mov	r1, r5
 8012630:	4630      	mov	r0, r6
 8012632:	f7f0 fcdb 	bl	8002fec <_ZN8touchgfx8Drawable4setYEs>
 8012636:	4631      	mov	r1, r6
 8012638:	4620      	mov	r0, r4
 801263a:	f000 f819 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801263e:	4620      	mov	r0, r4
 8012640:	4639      	mov	r1, r7
 8012642:	f000 f815 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012646:	4620      	mov	r0, r4
 8012648:	b003      	add	sp, #12
 801264a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801264c:	08031314 	.word	0x08031314
 8012650:	08031b1c 	.word	0x08031b1c
 8012654:	080313e8 	.word	0x080313e8
 8012658:	0801a567 	.word	0x0801a567

0801265c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 801265c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801265e:	2000      	movs	r0, #0
 8012660:	b12b      	cbz	r3, 801266e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8012662:	b920      	cbnz	r0, 801266e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8012664:	1a5a      	subs	r2, r3, r1
 8012666:	4250      	negs	r0, r2
 8012668:	4150      	adcs	r0, r2
 801266a:	699b      	ldr	r3, [r3, #24]
 801266c:	e7f8      	b.n	8012660 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 801266e:	4770      	bx	lr

08012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8012670:	2300      	movs	r3, #0
 8012672:	6148      	str	r0, [r1, #20]
 8012674:	618b      	str	r3, [r1, #24]
 8012676:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012678:	b913      	cbnz	r3, 8012680 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 801267a:	6281      	str	r1, [r0, #40]	; 0x28
 801267c:	4770      	bx	lr
 801267e:	4613      	mov	r3, r2
 8012680:	699a      	ldr	r2, [r3, #24]
 8012682:	2a00      	cmp	r2, #0
 8012684:	d1fb      	bne.n	801267e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8012686:	6199      	str	r1, [r3, #24]
 8012688:	4770      	bx	lr

0801268a <_ZN8touchgfx9Container9removeAllEv>:
 801268a:	2200      	movs	r2, #0
 801268c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801268e:	b123      	cbz	r3, 801269a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8012690:	6999      	ldr	r1, [r3, #24]
 8012692:	6281      	str	r1, [r0, #40]	; 0x28
 8012694:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8012698:	e7f8      	b.n	801268c <_ZN8touchgfx9Container9removeAllEv+0x2>
 801269a:	4770      	bx	lr

0801269c <_ZN8touchgfx9Container6unlinkEv>:
 801269c:	2300      	movs	r3, #0
 801269e:	6283      	str	r3, [r0, #40]	; 0x28
 80126a0:	4770      	bx	lr

080126a2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 80126a2:	2200      	movs	r2, #0
 80126a4:	8002      	strh	r2, [r0, #0]
 80126a6:	8042      	strh	r2, [r0, #2]
 80126a8:	8082      	strh	r2, [r0, #4]
 80126aa:	80c2      	strh	r2, [r0, #6]
 80126ac:	4770      	bx	lr

080126ae <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80126ae:	b570      	push	{r4, r5, r6, lr}
 80126b0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80126b2:	460d      	mov	r5, r1
 80126b4:	4616      	mov	r6, r2
 80126b6:	b13c      	cbz	r4, 80126c8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80126b8:	6823      	ldr	r3, [r4, #0]
 80126ba:	4620      	mov	r0, r4
 80126bc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80126be:	4632      	mov	r2, r6
 80126c0:	4629      	mov	r1, r5
 80126c2:	4798      	blx	r3
 80126c4:	69a4      	ldr	r4, [r4, #24]
 80126c6:	e7f6      	b.n	80126b6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80126c8:	bd70      	pop	{r4, r5, r6, pc}

080126ca <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80126ca:	b538      	push	{r3, r4, r5, lr}
 80126cc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80126ce:	460d      	mov	r5, r1
 80126d0:	b134      	cbz	r4, 80126e0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80126d2:	682b      	ldr	r3, [r5, #0]
 80126d4:	4621      	mov	r1, r4
 80126d6:	689b      	ldr	r3, [r3, #8]
 80126d8:	4628      	mov	r0, r5
 80126da:	4798      	blx	r3
 80126dc:	69a4      	ldr	r4, [r4, #24]
 80126de:	e7f7      	b.n	80126d0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80126e0:	bd38      	pop	{r3, r4, r5, pc}

080126e2 <_ZN8touchgfx9ContainerD1Ev>:
 80126e2:	4770      	bx	lr

080126e4 <_ZN8touchgfx9ContainerD0Ev>:
 80126e4:	b510      	push	{r4, lr}
 80126e6:	212c      	movs	r1, #44	; 0x2c
 80126e8:	4604      	mov	r4, r0
 80126ea:	f01a f982 	bl	802c9f2 <_ZdlPvj>
 80126ee:	4620      	mov	r0, r4
 80126f0:	bd10      	pop	{r4, pc}

080126f2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80126f2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80126f4:	b19b      	cbz	r3, 801271e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80126f6:	428b      	cmp	r3, r1
 80126f8:	d109      	bne.n	801270e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80126fa:	699a      	ldr	r2, [r3, #24]
 80126fc:	2100      	movs	r1, #0
 80126fe:	6159      	str	r1, [r3, #20]
 8012700:	6282      	str	r2, [r0, #40]	; 0x28
 8012702:	b902      	cbnz	r2, 8012706 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8012704:	4770      	bx	lr
 8012706:	6199      	str	r1, [r3, #24]
 8012708:	4770      	bx	lr
 801270a:	4613      	mov	r3, r2
 801270c:	b13a      	cbz	r2, 801271e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801270e:	699a      	ldr	r2, [r3, #24]
 8012710:	428a      	cmp	r2, r1
 8012712:	d1fa      	bne.n	801270a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8012714:	698a      	ldr	r2, [r1, #24]
 8012716:	619a      	str	r2, [r3, #24]
 8012718:	2300      	movs	r3, #0
 801271a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801271e:	4770      	bx	lr

08012720 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8012720:	b410      	push	{r4}
 8012722:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012724:	4604      	mov	r4, r0
 8012726:	b92b      	cbnz	r3, 8012734 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8012728:	6803      	ldr	r3, [r0, #0]
 801272a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801272e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8012730:	4611      	mov	r1, r2
 8012732:	4718      	bx	r3
 8012734:	b941      	cbnz	r1, 8012748 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8012736:	6193      	str	r3, [r2, #24]
 8012738:	6282      	str	r2, [r0, #40]	; 0x28
 801273a:	6154      	str	r4, [r2, #20]
 801273c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012740:	4770      	bx	lr
 8012742:	4603      	mov	r3, r0
 8012744:	2800      	cmp	r0, #0
 8012746:	d0f9      	beq.n	801273c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8012748:	4299      	cmp	r1, r3
 801274a:	6998      	ldr	r0, [r3, #24]
 801274c:	d1f9      	bne.n	8012742 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 801274e:	6190      	str	r0, [r2, #24]
 8012750:	618a      	str	r2, [r1, #24]
 8012752:	e7f2      	b.n	801273a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08012754 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8012754:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012758:	461f      	mov	r7, r3
 801275a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 801275e:	460d      	mov	r5, r1
 8012760:	4616      	mov	r6, r2
 8012762:	b103      	cbz	r3, 8012766 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8012764:	6038      	str	r0, [r7, #0]
 8012766:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012768:	b314      	cbz	r4, 80127b0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801276a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801276e:	b1eb      	cbz	r3, 80127ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012770:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012774:	428d      	cmp	r5, r1
 8012776:	db19      	blt.n	80127ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012778:	8923      	ldrh	r3, [r4, #8]
 801277a:	b289      	uxth	r1, r1
 801277c:	440b      	add	r3, r1
 801277e:	b21b      	sxth	r3, r3
 8012780:	429d      	cmp	r5, r3
 8012782:	da13      	bge.n	80127ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012784:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8012788:	4296      	cmp	r6, r2
 801278a:	db0f      	blt.n	80127ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801278c:	8963      	ldrh	r3, [r4, #10]
 801278e:	b292      	uxth	r2, r2
 8012790:	4413      	add	r3, r2
 8012792:	b21b      	sxth	r3, r3
 8012794:	429e      	cmp	r6, r3
 8012796:	da09      	bge.n	80127ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012798:	6823      	ldr	r3, [r4, #0]
 801279a:	1ab2      	subs	r2, r6, r2
 801279c:	1a69      	subs	r1, r5, r1
 801279e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 80127a2:	b212      	sxth	r2, r2
 80127a4:	463b      	mov	r3, r7
 80127a6:	b209      	sxth	r1, r1
 80127a8:	4620      	mov	r0, r4
 80127aa:	47c0      	blx	r8
 80127ac:	69a4      	ldr	r4, [r4, #24]
 80127ae:	e7db      	b.n	8012768 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80127b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080127b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80127b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127b8:	4c6e      	ldr	r4, [pc, #440]	; (8012974 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80127ba:	b0a1      	sub	sp, #132	; 0x84
 80127bc:	6824      	ldr	r4, [r4, #0]
 80127be:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80127c0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80127c4:	9303      	str	r3, [sp, #12]
 80127c6:	2400      	movs	r4, #0
 80127c8:	802c      	strh	r4, [r5, #0]
 80127ca:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 80127cc:	802c      	strh	r4, [r5, #0]
 80127ce:	601c      	str	r4, [r3, #0]
 80127d0:	4606      	mov	r6, r0
 80127d2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80127d6:	f7ff ffbd 	bl	8012754 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80127da:	f1b9 0f03 	cmp.w	r9, #3
 80127de:	f340 80c2 	ble.w	8012966 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 80127e2:	4631      	mov	r1, r6
 80127e4:	a80c      	add	r0, sp, #48	; 0x30
 80127e6:	f007 f99f 	bl	8019b28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80127ea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80127ee:	9306      	str	r3, [sp, #24]
 80127f0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80127f4:	9307      	str	r3, [sp, #28]
 80127f6:	9b03      	ldr	r3, [sp, #12]
 80127f8:	f8d3 a000 	ldr.w	sl, [r3]
 80127fc:	f1ba 0f00 	cmp.w	sl, #0
 8012800:	f000 80b4 	beq.w	801296c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8012804:	4651      	mov	r1, sl
 8012806:	a810      	add	r0, sp, #64	; 0x40
 8012808:	f007 f98e 	bl	8019b28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801280c:	9b01      	ldr	r3, [sp, #4]
 801280e:	9a06      	ldr	r2, [sp, #24]
 8012810:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8012814:	189d      	adds	r5, r3, r2
 8012816:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 801281a:	9a07      	ldr	r2, [sp, #28]
 801281c:	2002      	movs	r0, #2
 801281e:	fb91 f1f0 	sdiv	r1, r1, r0
 8012822:	4419      	add	r1, r3
 8012824:	1a6d      	subs	r5, r5, r1
 8012826:	9b02      	ldr	r3, [sp, #8]
 8012828:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801282c:	4413      	add	r3, r2
 801282e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8012832:	fb92 f2f0 	sdiv	r2, r2, r0
 8012836:	440a      	add	r2, r1
 8012838:	1a9b      	subs	r3, r3, r2
 801283a:	435b      	muls	r3, r3
 801283c:	fb05 3505 	mla	r5, r5, r5, r3
 8012840:	4f4d      	ldr	r7, [pc, #308]	; (8012978 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8012842:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012844:	ac10      	add	r4, sp, #64	; 0x40
 8012846:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012848:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801284a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 801284c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801284e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012850:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8012854:	f1b9 0f0c 	cmp.w	r9, #12
 8012858:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801285c:	f04f 0303 	mov.w	r3, #3
 8012860:	bfc8      	it	gt
 8012862:	4698      	movgt	r8, r3
 8012864:	f8cd 9000 	str.w	r9, [sp]
 8012868:	f04f 0400 	mov.w	r4, #0
 801286c:	bfdc      	itt	le
 801286e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8012872:	fb92 f8f3 	sdivle	r8, r2, r3
 8012876:	1c63      	adds	r3, r4, #1
 8012878:	aa10      	add	r2, sp, #64	; 0x40
 801287a:	f004 0401 	and.w	r4, r4, #1
 801287e:	9308      	str	r3, [sp, #32]
 8012880:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8012884:	9b00      	ldr	r3, [sp, #0]
 8012886:	fb93 f3f8 	sdiv	r3, r3, r8
 801288a:	b29b      	uxth	r3, r3
 801288c:	3404      	adds	r4, #4
 801288e:	f04f 0b00 	mov.w	fp, #0
 8012892:	9304      	str	r3, [sp, #16]
 8012894:	9a04      	ldr	r2, [sp, #16]
 8012896:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801289a:	fb13 f302 	smulbb	r3, r3, r2
 801289e:	9a01      	ldr	r2, [sp, #4]
 80128a0:	b29b      	uxth	r3, r3
 80128a2:	1899      	adds	r1, r3, r2
 80128a4:	9305      	str	r3, [sp, #20]
 80128a6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80128aa:	b209      	sxth	r1, r1
 80128ac:	4299      	cmp	r1, r3
 80128ae:	db4d      	blt.n	801294c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80128b0:	8932      	ldrh	r2, [r6, #8]
 80128b2:	4413      	add	r3, r2
 80128b4:	b21b      	sxth	r3, r3
 80128b6:	4299      	cmp	r1, r3
 80128b8:	da48      	bge.n	801294c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80128ba:	9b04      	ldr	r3, [sp, #16]
 80128bc:	6827      	ldr	r7, [r4, #0]
 80128be:	fb17 f703 	smulbb	r7, r7, r3
 80128c2:	9b02      	ldr	r3, [sp, #8]
 80128c4:	b2bf      	uxth	r7, r7
 80128c6:	18fa      	adds	r2, r7, r3
 80128c8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80128cc:	b212      	sxth	r2, r2
 80128ce:	429a      	cmp	r2, r3
 80128d0:	db3c      	blt.n	801294c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80128d2:	8970      	ldrh	r0, [r6, #10]
 80128d4:	4403      	add	r3, r0
 80128d6:	b21b      	sxth	r3, r3
 80128d8:	429a      	cmp	r2, r3
 80128da:	da37      	bge.n	801294c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80128dc:	2300      	movs	r3, #0
 80128de:	930b      	str	r3, [sp, #44]	; 0x2c
 80128e0:	4630      	mov	r0, r6
 80128e2:	ab0b      	add	r3, sp, #44	; 0x2c
 80128e4:	f7ff ff36 	bl	8012754 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80128e8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80128ea:	b37a      	cbz	r2, 801294c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80128ec:	4552      	cmp	r2, sl
 80128ee:	d02d      	beq.n	801294c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80128f0:	4611      	mov	r1, r2
 80128f2:	a80e      	add	r0, sp, #56	; 0x38
 80128f4:	9209      	str	r2, [sp, #36]	; 0x24
 80128f6:	f007 f917 	bl	8019b28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80128fa:	9a06      	ldr	r2, [sp, #24]
 80128fc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8012900:	9b01      	ldr	r3, [sp, #4]
 8012902:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8012906:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 801290a:	4413      	add	r3, r2
 801290c:	f04f 0e02 	mov.w	lr, #2
 8012910:	fb91 f1fe 	sdiv	r1, r1, lr
 8012914:	4401      	add	r1, r0
 8012916:	1a58      	subs	r0, r3, r1
 8012918:	9a07      	ldr	r2, [sp, #28]
 801291a:	9b02      	ldr	r3, [sp, #8]
 801291c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8012920:	fb9c fcfe 	sdiv	ip, ip, lr
 8012924:	4413      	add	r3, r2
 8012926:	448c      	add	ip, r1
 8012928:	eba3 030c 	sub.w	r3, r3, ip
 801292c:	435b      	muls	r3, r3
 801292e:	fb00 3300 	mla	r3, r0, r0, r3
 8012932:	42ab      	cmp	r3, r5
 8012934:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012936:	d208      	bcs.n	801294a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8012938:	9803      	ldr	r0, [sp, #12]
 801293a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801293c:	6001      	str	r1, [r0, #0]
 801293e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8012940:	9805      	ldr	r0, [sp, #20]
 8012942:	8008      	strh	r0, [r1, #0]
 8012944:	992b      	ldr	r1, [sp, #172]	; 0xac
 8012946:	461d      	mov	r5, r3
 8012948:	800f      	strh	r7, [r1, #0]
 801294a:	4692      	mov	sl, r2
 801294c:	f10b 0b01 	add.w	fp, fp, #1
 8012950:	f1bb 0f04 	cmp.w	fp, #4
 8012954:	f104 0408 	add.w	r4, r4, #8
 8012958:	d19c      	bne.n	8012894 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 801295a:	9b00      	ldr	r3, [sp, #0]
 801295c:	9c08      	ldr	r4, [sp, #32]
 801295e:	444b      	add	r3, r9
 8012960:	4544      	cmp	r4, r8
 8012962:	9300      	str	r3, [sp, #0]
 8012964:	d187      	bne.n	8012876 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8012966:	b021      	add	sp, #132	; 0x84
 8012968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801296c:	f04f 35ff 	mov.w	r5, #4294967295
 8012970:	e766      	b.n	8012840 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8012972:	bf00      	nop
 8012974:	20013854 	.word	0x20013854
 8012978:	0802e8d8 	.word	0x0802e8d8

0801297c <_ZN8touchgfx4RectaNERKS0_>:
 801297c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012980:	f9b1 7000 	ldrsh.w	r7, [r1]
 8012984:	888c      	ldrh	r4, [r1, #4]
 8012986:	f9b0 9000 	ldrsh.w	r9, [r0]
 801298a:	443c      	add	r4, r7
 801298c:	b2a4      	uxth	r4, r4
 801298e:	fa0f f884 	sxth.w	r8, r4
 8012992:	45c1      	cmp	r9, r8
 8012994:	da2f      	bge.n	80129f6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012996:	8882      	ldrh	r2, [r0, #4]
 8012998:	444a      	add	r2, r9
 801299a:	b292      	uxth	r2, r2
 801299c:	fa0f fe82 	sxth.w	lr, r2
 80129a0:	4577      	cmp	r7, lr
 80129a2:	da28      	bge.n	80129f6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80129a4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80129a8:	88cb      	ldrh	r3, [r1, #6]
 80129aa:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80129ae:	442b      	add	r3, r5
 80129b0:	b21b      	sxth	r3, r3
 80129b2:	429e      	cmp	r6, r3
 80129b4:	da1f      	bge.n	80129f6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80129b6:	88c3      	ldrh	r3, [r0, #6]
 80129b8:	4433      	add	r3, r6
 80129ba:	b29b      	uxth	r3, r3
 80129bc:	fa0f fc83 	sxth.w	ip, r3
 80129c0:	4565      	cmp	r5, ip
 80129c2:	da18      	bge.n	80129f6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80129c4:	454f      	cmp	r7, r9
 80129c6:	bfb8      	it	lt
 80129c8:	464f      	movlt	r7, r9
 80129ca:	42b5      	cmp	r5, r6
 80129cc:	bfb8      	it	lt
 80129ce:	4635      	movlt	r5, r6
 80129d0:	45f0      	cmp	r8, lr
 80129d2:	bfd8      	it	le
 80129d4:	4622      	movle	r2, r4
 80129d6:	1bd2      	subs	r2, r2, r7
 80129d8:	8082      	strh	r2, [r0, #4]
 80129da:	884a      	ldrh	r2, [r1, #2]
 80129dc:	88c9      	ldrh	r1, [r1, #6]
 80129de:	8007      	strh	r7, [r0, #0]
 80129e0:	440a      	add	r2, r1
 80129e2:	b292      	uxth	r2, r2
 80129e4:	b211      	sxth	r1, r2
 80129e6:	458c      	cmp	ip, r1
 80129e8:	bfa8      	it	ge
 80129ea:	4613      	movge	r3, r2
 80129ec:	1b5b      	subs	r3, r3, r5
 80129ee:	80c3      	strh	r3, [r0, #6]
 80129f0:	8045      	strh	r5, [r0, #2]
 80129f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80129f6:	2300      	movs	r3, #0
 80129f8:	8003      	strh	r3, [r0, #0]
 80129fa:	8043      	strh	r3, [r0, #2]
 80129fc:	8083      	strh	r3, [r0, #4]
 80129fe:	80c3      	strh	r3, [r0, #6]
 8012a00:	e7f7      	b.n	80129f2 <_ZN8touchgfx4RectaNERKS0_+0x76>

08012a02 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8012a02:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012a06:	2b00      	cmp	r3, #0
 8012a08:	dd06      	ble.n	8012a18 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8012a0a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8012a0e:	2800      	cmp	r0, #0
 8012a10:	bfcc      	ite	gt
 8012a12:	2000      	movgt	r0, #0
 8012a14:	2001      	movle	r0, #1
 8012a16:	4770      	bx	lr
 8012a18:	2001      	movs	r0, #1
 8012a1a:	4770      	bx	lr

08012a1c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8012a1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012a20:	2300      	movs	r3, #0
 8012a22:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8012a24:	8003      	strh	r3, [r0, #0]
 8012a26:	4604      	mov	r4, r0
 8012a28:	8043      	strh	r3, [r0, #2]
 8012a2a:	8083      	strh	r3, [r0, #4]
 8012a2c:	80c3      	strh	r3, [r0, #6]
 8012a2e:	2d00      	cmp	r5, #0
 8012a30:	d040      	beq.n	8012ab4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8012a32:	1d28      	adds	r0, r5, #4
 8012a34:	f7ff ffe5 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012a38:	b988      	cbnz	r0, 8012a5e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012a3a:	4620      	mov	r0, r4
 8012a3c:	f7ff ffe1 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012a40:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8012a44:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8012a48:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8012a4c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8012a50:	b138      	cbz	r0, 8012a62 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8012a52:	8022      	strh	r2, [r4, #0]
 8012a54:	8063      	strh	r3, [r4, #2]
 8012a56:	f8a4 e004 	strh.w	lr, [r4, #4]
 8012a5a:	f8a4 c006 	strh.w	ip, [r4, #6]
 8012a5e:	69ad      	ldr	r5, [r5, #24]
 8012a60:	e7e5      	b.n	8012a2e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8012a62:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012a66:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8012a6a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8012a6e:	4290      	cmp	r0, r2
 8012a70:	4607      	mov	r7, r0
 8012a72:	bfa8      	it	ge
 8012a74:	4617      	movge	r7, r2
 8012a76:	4472      	add	r2, lr
 8012a78:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8012a7c:	8027      	strh	r7, [r4, #0]
 8012a7e:	4299      	cmp	r1, r3
 8012a80:	460e      	mov	r6, r1
 8012a82:	4440      	add	r0, r8
 8012a84:	bfa8      	it	ge
 8012a86:	461e      	movge	r6, r3
 8012a88:	4471      	add	r1, lr
 8012a8a:	4463      	add	r3, ip
 8012a8c:	b200      	sxth	r0, r0
 8012a8e:	b212      	sxth	r2, r2
 8012a90:	b209      	sxth	r1, r1
 8012a92:	b21b      	sxth	r3, r3
 8012a94:	4290      	cmp	r0, r2
 8012a96:	bfac      	ite	ge
 8012a98:	ebc7 0200 	rsbge	r2, r7, r0
 8012a9c:	ebc7 0202 	rsblt	r2, r7, r2
 8012aa0:	4299      	cmp	r1, r3
 8012aa2:	bfac      	ite	ge
 8012aa4:	ebc6 0301 	rsbge	r3, r6, r1
 8012aa8:	ebc6 0303 	rsblt	r3, r6, r3
 8012aac:	8066      	strh	r6, [r4, #2]
 8012aae:	80a2      	strh	r2, [r4, #4]
 8012ab0:	80e3      	strh	r3, [r4, #6]
 8012ab2:	e7d4      	b.n	8012a5e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012ab4:	4620      	mov	r0, r4
 8012ab6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012aba <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8012aba:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8012abe:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012ac2:	b383      	cbz	r3, 8012b26 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012ac4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012ac6:	b374      	cbz	r4, 8012b26 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012ac8:	f9b1 5000 	ldrsh.w	r5, [r1]
 8012acc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8012ad0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8012ad4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8012ad8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012adc:	b303      	cbz	r3, 8012b20 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012ade:	4668      	mov	r0, sp
 8012ae0:	1d21      	adds	r1, r4, #4
 8012ae2:	f8ad 5000 	strh.w	r5, [sp]
 8012ae6:	f8ad 6002 	strh.w	r6, [sp, #2]
 8012aea:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012aee:	f8ad 8006 	strh.w	r8, [sp, #6]
 8012af2:	f7ff ff43 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 8012af6:	4668      	mov	r0, sp
 8012af8:	f7ff ff83 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012afc:	b980      	cbnz	r0, 8012b20 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012afe:	f8bd 3000 	ldrh.w	r3, [sp]
 8012b02:	88a2      	ldrh	r2, [r4, #4]
 8012b04:	1a9b      	subs	r3, r3, r2
 8012b06:	f8ad 3000 	strh.w	r3, [sp]
 8012b0a:	88e2      	ldrh	r2, [r4, #6]
 8012b0c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012b10:	1a9b      	subs	r3, r3, r2
 8012b12:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012b16:	6823      	ldr	r3, [r4, #0]
 8012b18:	4669      	mov	r1, sp
 8012b1a:	689b      	ldr	r3, [r3, #8]
 8012b1c:	4620      	mov	r0, r4
 8012b1e:	4798      	blx	r3
 8012b20:	69a4      	ldr	r4, [r4, #24]
 8012b22:	2c00      	cmp	r4, #0
 8012b24:	d1d8      	bne.n	8012ad8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8012b26:	b002      	add	sp, #8
 8012b28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012b2c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8012b2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012b2e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012b32:	460d      	mov	r5, r1
 8012b34:	4616      	mov	r6, r2
 8012b36:	b323      	cbz	r3, 8012b82 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012b38:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012b3a:	b314      	cbz	r4, 8012b82 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012b3c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012b40:	b1eb      	cbz	r3, 8012b7e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012b42:	6828      	ldr	r0, [r5, #0]
 8012b44:	6869      	ldr	r1, [r5, #4]
 8012b46:	466b      	mov	r3, sp
 8012b48:	c303      	stmia	r3!, {r0, r1}
 8012b4a:	4668      	mov	r0, sp
 8012b4c:	1d21      	adds	r1, r4, #4
 8012b4e:	f7ff ff15 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 8012b52:	4668      	mov	r0, sp
 8012b54:	f7ff ff55 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012b58:	b988      	cbnz	r0, 8012b7e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012b5a:	f8bd 3000 	ldrh.w	r3, [sp]
 8012b5e:	88a2      	ldrh	r2, [r4, #4]
 8012b60:	1a9b      	subs	r3, r3, r2
 8012b62:	f8ad 3000 	strh.w	r3, [sp]
 8012b66:	88e2      	ldrh	r2, [r4, #6]
 8012b68:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012b6c:	1a9b      	subs	r3, r3, r2
 8012b6e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012b72:	6823      	ldr	r3, [r4, #0]
 8012b74:	4632      	mov	r2, r6
 8012b76:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8012b78:	4669      	mov	r1, sp
 8012b7a:	4620      	mov	r0, r4
 8012b7c:	4798      	blx	r3
 8012b7e:	69a4      	ldr	r4, [r4, #24]
 8012b80:	e7db      	b.n	8012b3a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8012b82:	b002      	add	sp, #8
 8012b84:	bd70      	pop	{r4, r5, r6, pc}

08012b86 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 8012b86:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012b88:	4770      	bx	lr
	...

08012b8c <_ZN8touchgfx14SwipeContainerD1Ev>:
 8012b8c:	4b05      	ldr	r3, [pc, #20]	; (8012ba4 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 8012b8e:	b510      	push	{r4, lr}
 8012b90:	6003      	str	r3, [r0, #0]
 8012b92:	4604      	mov	r4, r0
 8012b94:	f005 fe44 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
 8012b98:	4621      	mov	r1, r4
 8012b9a:	3004      	adds	r0, #4
 8012b9c:	f005 fe8d 	bl	80188ba <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012ba0:	4620      	mov	r0, r4
 8012ba2:	bd10      	pop	{r4, pc}
 8012ba4:	08031478 	.word	0x08031478

08012ba8 <_ZN8touchgfx14SwipeContainerD0Ev>:
 8012ba8:	b510      	push	{r4, lr}
 8012baa:	4604      	mov	r4, r0
 8012bac:	f7ff ffee 	bl	8012b8c <_ZN8touchgfx14SwipeContainerD1Ev>
 8012bb0:	4620      	mov	r0, r4
 8012bb2:	21f4      	movs	r1, #244	; 0xf4
 8012bb4:	f019 ff1d 	bl	802c9f2 <_ZdlPvj>
 8012bb8:	4620      	mov	r0, r4
 8012bba:	bd10      	pop	{r4, pc}

08012bbc <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 8012bbc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012bc0:	2b04      	cmp	r3, #4
 8012bc2:	d117      	bne.n	8012bf4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012bc4:	790b      	ldrb	r3, [r1, #4]
 8012bc6:	2b01      	cmp	r3, #1
 8012bc8:	d114      	bne.n	8012bf4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012bca:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 8012bce:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8012bd0:	8643      	strh	r3, [r0, #50]	; 0x32
 8012bd2:	2b00      	cmp	r3, #0
 8012bd4:	8682      	strh	r2, [r0, #52]	; 0x34
 8012bd6:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012bda:	da0e      	bge.n	8012bfa <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 8012bdc:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8012be0:	3a01      	subs	r2, #1
 8012be2:	4291      	cmp	r1, r2
 8012be4:	d007      	beq.n	8012bf6 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8012be6:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8012be8:	4252      	negs	r2, r2
 8012bea:	4293      	cmp	r3, r2
 8012bec:	dc03      	bgt.n	8012bf6 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8012bee:	2302      	movs	r3, #2
 8012bf0:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012bf4:	4770      	bx	lr
 8012bf6:	2300      	movs	r3, #0
 8012bf8:	e7fa      	b.n	8012bf0 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8012bfa:	d0fb      	beq.n	8012bf4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012bfc:	b111      	cbz	r1, 8012c04 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 8012bfe:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8012c00:	4293      	cmp	r3, r2
 8012c02:	da01      	bge.n	8012c08 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 8012c04:	2301      	movs	r3, #1
 8012c06:	e7f3      	b.n	8012bf0 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8012c08:	2303      	movs	r3, #3
 8012c0a:	e7f1      	b.n	8012bf0 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

08012c0c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 8012c0c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012c10:	2b04      	cmp	r3, #4
 8012c12:	d113      	bne.n	8012c3c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012c14:	790b      	ldrb	r3, [r1, #4]
 8012c16:	b98b      	cbnz	r3, 8012c3c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012c18:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012c1a:	8643      	strh	r3, [r0, #50]	; 0x32
 8012c1c:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 8012c1e:	8683      	strh	r3, [r0, #52]	; 0x34
 8012c20:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012c24:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 8012c28:	2b00      	cmp	r3, #0
 8012c2a:	da08      	bge.n	8012c3e <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 8012c2c:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8012c30:	3b01      	subs	r3, #1
 8012c32:	429a      	cmp	r2, r3
 8012c34:	da02      	bge.n	8012c3c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012c36:	2302      	movs	r3, #2
 8012c38:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012c3c:	4770      	bx	lr
 8012c3e:	d0fd      	beq.n	8012c3c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012c40:	2a00      	cmp	r2, #0
 8012c42:	d0fb      	beq.n	8012c3c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012c44:	2303      	movs	r3, #3
 8012c46:	e7f7      	b.n	8012c38 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

08012c48 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8012c48:	b538      	push	{r3, r4, r5, lr}
 8012c4a:	2226      	movs	r2, #38	; 0x26
 8012c4c:	4604      	mov	r4, r0
 8012c4e:	460d      	mov	r5, r1
 8012c50:	2100      	movs	r1, #0
 8012c52:	f01a ffba 	bl	802dbca <memset>
 8012c56:	4620      	mov	r0, r4
 8012c58:	f7ff fc58 	bl	801250c <_ZN8touchgfx8DrawableC1Ev>
 8012c5c:	4b06      	ldr	r3, [pc, #24]	; (8012c78 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8012c5e:	6023      	str	r3, [r4, #0]
 8012c60:	882b      	ldrh	r3, [r5, #0]
 8012c62:	84e3      	strh	r3, [r4, #38]	; 0x26
 8012c64:	23ff      	movs	r3, #255	; 0xff
 8012c66:	4620      	mov	r0, r4
 8012c68:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8012c6c:	4629      	mov	r1, r5
 8012c6e:	f003 f8d8 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012c72:	4620      	mov	r0, r4
 8012c74:	bd38      	pop	{r3, r4, r5, pc}
 8012c76:	bf00      	nop
 8012c78:	08031b1c 	.word	0x08031b1c

08012c7c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 8012c7c:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012c7e:	4770      	bx	lr

08012c80 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 8012c80:	b508      	push	{r3, lr}
 8012c82:	3068      	adds	r0, #104	; 0x68
 8012c84:	f7f0 fc32 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8012c88:	bd08      	pop	{r3, pc}

08012c8a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 8012c8a:	b508      	push	{r3, lr}
 8012c8c:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 8012c8e:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012c92:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012c96:	fb03 2111 	mls	r1, r3, r1, r2
 8012c9a:	b209      	sxth	r1, r1
 8012c9c:	2200      	movs	r2, #0
 8012c9e:	3038      	adds	r0, #56	; 0x38
 8012ca0:	f7f0 f9af 	bl	8003002 <_ZN8touchgfx8Drawable6moveToEss>
 8012ca4:	bd08      	pop	{r3, pc}

08012ca6 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 8012ca6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012caa:	2b04      	cmp	r3, #4
 8012cac:	d119      	bne.n	8012ce2 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 8012cae:	88ca      	ldrh	r2, [r1, #6]
 8012cb0:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012cb2:	1a9b      	subs	r3, r3, r2
 8012cb4:	894a      	ldrh	r2, [r1, #10]
 8012cb6:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012cba:	4413      	add	r3, r2
 8012cbc:	b21b      	sxth	r3, r3
 8012cbe:	8603      	strh	r3, [r0, #48]	; 0x30
 8012cc0:	b921      	cbnz	r1, 8012ccc <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8012cc2:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8012cc4:	4293      	cmp	r3, r2
 8012cc6:	dd01      	ble.n	8012ccc <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8012cc8:	8602      	strh	r2, [r0, #48]	; 0x30
 8012cca:	e008      	b.n	8012cde <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8012ccc:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8012cd0:	3a01      	subs	r2, #1
 8012cd2:	4291      	cmp	r1, r2
 8012cd4:	d103      	bne.n	8012cde <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8012cd6:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8012cd8:	4252      	negs	r2, r2
 8012cda:	4293      	cmp	r3, r2
 8012cdc:	dbf4      	blt.n	8012cc8 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 8012cde:	f7ff bfd4 	b.w	8012c8a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012ce2:	4770      	bx	lr

08012ce4 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8012ce4:	b538      	push	{r3, r4, r5, lr}
 8012ce6:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8012cea:	2d0e      	cmp	r5, #14
 8012cec:	4604      	mov	r4, r0
 8012cee:	d813      	bhi.n	8012d18 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8012cf0:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8012cf2:	4252      	negs	r2, r2
 8012cf4:	230e      	movs	r3, #14
 8012cf6:	b212      	sxth	r2, r2
 8012cf8:	2100      	movs	r1, #0
 8012cfa:	4628      	mov	r0, r5
 8012cfc:	f007 fbc2 	bl	801a484 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8012d00:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012d02:	4418      	add	r0, r3
 8012d04:	8620      	strh	r0, [r4, #48]	; 0x30
 8012d06:	4620      	mov	r0, r4
 8012d08:	f7ff ffbf 	bl	8012c8a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012d0c:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8012d10:	3301      	adds	r3, #1
 8012d12:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012d16:	bd38      	pop	{r3, r4, r5, pc}
 8012d18:	2304      	movs	r3, #4
 8012d1a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012d1e:	2300      	movs	r3, #0
 8012d20:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8012d24:	8603      	strh	r3, [r0, #48]	; 0x30
 8012d26:	e7ef      	b.n	8012d08 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

08012d28 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 8012d28:	b538      	push	{r3, r4, r5, lr}
 8012d2a:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8012d2e:	2d0e      	cmp	r5, #14
 8012d30:	4604      	mov	r4, r0
 8012d32:	d812      	bhi.n	8012d5a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 8012d34:	230e      	movs	r3, #14
 8012d36:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 8012d3a:	2100      	movs	r1, #0
 8012d3c:	4628      	mov	r0, r5
 8012d3e:	f007 fba1 	bl	801a484 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8012d42:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012d44:	1a18      	subs	r0, r3, r0
 8012d46:	8620      	strh	r0, [r4, #48]	; 0x30
 8012d48:	4620      	mov	r0, r4
 8012d4a:	f7ff ff9e 	bl	8012c8a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012d4e:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8012d52:	3301      	adds	r3, #1
 8012d54:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012d58:	bd38      	pop	{r3, r4, r5, pc}
 8012d5a:	2304      	movs	r3, #4
 8012d5c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012d60:	2300      	movs	r3, #0
 8012d62:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8012d66:	8603      	strh	r3, [r0, #48]	; 0x30
 8012d68:	e7ef      	b.n	8012d4a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

08012d6c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 8012d6c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012d70:	4604      	mov	r4, r0
 8012d72:	4626      	mov	r6, r4
 8012d74:	af02      	add	r7, sp, #8
 8012d76:	f7ff fbc9 	bl	801250c <_ZN8touchgfx8DrawableC1Ev>
 8012d7a:	2500      	movs	r5, #0
 8012d7c:	4b18      	ldr	r3, [pc, #96]	; (8012de0 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 8012d7e:	62a5      	str	r5, [r4, #40]	; 0x28
 8012d80:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8012d84:	f846 3b2c 	str.w	r3, [r6], #44
 8012d88:	f827 9d04 	strh.w	r9, [r7, #-4]!
 8012d8c:	4630      	mov	r0, r6
 8012d8e:	4639      	mov	r1, r7
 8012d90:	f7ff ff5a 	bl	8012c48 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8012d94:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 8012d98:	4b12      	ldr	r3, [pc, #72]	; (8012de4 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 8012d9a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8012d9c:	4639      	mov	r1, r7
 8012d9e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8012da2:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 8012da6:	4640      	mov	r0, r8
 8012da8:	f8ad 9004 	strh.w	r9, [sp, #4]
 8012dac:	f7ff ff4c 	bl	8012c48 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8012db0:	462a      	mov	r2, r5
 8012db2:	4629      	mov	r1, r5
 8012db4:	4630      	mov	r0, r6
 8012db6:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 8012dba:	f7f0 fb97 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8012dbe:	462a      	mov	r2, r5
 8012dc0:	4629      	mov	r1, r5
 8012dc2:	4640      	mov	r0, r8
 8012dc4:	f7f0 fb92 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8012dc8:	4631      	mov	r1, r6
 8012dca:	4620      	mov	r0, r4
 8012dcc:	f7ff fc50 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012dd0:	4620      	mov	r0, r4
 8012dd2:	4641      	mov	r1, r8
 8012dd4:	f7ff fc4c 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012dd8:	4620      	mov	r0, r4
 8012dda:	b003      	add	sp, #12
 8012ddc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012de0:	0802f38c 	.word	0x0802f38c
 8012de4:	08031938 	.word	0x08031938

08012de8 <_ZN8touchgfx14SwipeContainerC1Ev>:
 8012de8:	b570      	push	{r4, r5, r6, lr}
 8012dea:	4604      	mov	r4, r0
 8012dec:	f7ff fb8e 	bl	801250c <_ZN8touchgfx8DrawableC1Ev>
 8012df0:	4b1a      	ldr	r3, [pc, #104]	; (8012e5c <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 8012df2:	6023      	str	r3, [r4, #0]
 8012df4:	2304      	movs	r3, #4
 8012df6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8012dfa:	2350      	movs	r3, #80	; 0x50
 8012dfc:	2500      	movs	r5, #0
 8012dfe:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8012e00:	f104 0638 	add.w	r6, r4, #56	; 0x38
 8012e04:	231e      	movs	r3, #30
 8012e06:	62a5      	str	r5, [r4, #40]	; 0x28
 8012e08:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 8012e0c:	8625      	strh	r5, [r4, #48]	; 0x30
 8012e0e:	8665      	strh	r5, [r4, #50]	; 0x32
 8012e10:	86a5      	strh	r5, [r4, #52]	; 0x34
 8012e12:	86e3      	strh	r3, [r4, #54]	; 0x36
 8012e14:	4630      	mov	r0, r6
 8012e16:	f7ff fb79 	bl	801250c <_ZN8touchgfx8DrawableC1Ev>
 8012e1a:	4b11      	ldr	r3, [pc, #68]	; (8012e60 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 8012e1c:	6625      	str	r5, [r4, #96]	; 0x60
 8012e1e:	63a3      	str	r3, [r4, #56]	; 0x38
 8012e20:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8012e24:	2302      	movs	r3, #2
 8012e26:	f104 0568 	add.w	r5, r4, #104	; 0x68
 8012e2a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8012e2e:	4628      	mov	r0, r5
 8012e30:	f7ff ff9c 	bl	8012d6c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 8012e34:	f005 fcf4 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
 8012e38:	4621      	mov	r1, r4
 8012e3a:	3004      	adds	r0, #4
 8012e3c:	f005 fde6 	bl	8018a0c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8012e40:	2301      	movs	r3, #1
 8012e42:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8012e46:	4631      	mov	r1, r6
 8012e48:	4620      	mov	r0, r4
 8012e4a:	f7ff fc11 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012e4e:	4620      	mov	r0, r4
 8012e50:	4629      	mov	r1, r5
 8012e52:	f7ff fc0d 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012e56:	4620      	mov	r0, r4
 8012e58:	bd70      	pop	{r4, r5, r6, pc}
 8012e5a:	bf00      	nop
 8012e5c:	08031478 	.word	0x08031478
 8012e60:	0803153c 	.word	0x0803153c

08012e64 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 8012e64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012e66:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 8012e6a:	428b      	cmp	r3, r1
 8012e6c:	4604      	mov	r4, r0
 8012e6e:	460d      	mov	r5, r1
 8012e70:	d915      	bls.n	8012e9e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8012e72:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 8012e76:	428b      	cmp	r3, r1
 8012e78:	d011      	beq.n	8012e9e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8012e7a:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 8012e7e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8012e82:	a802      	add	r0, sp, #8
 8012e84:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8012e88:	f009 f91a 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012e8c:	fb15 f100 	smulbb	r1, r5, r0
 8012e90:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 8012e94:	b209      	sxth	r1, r1
 8012e96:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8012e9a:	f7f0 f8b2 	bl	8003002 <_ZN8touchgfx8Drawable6moveToEss>
 8012e9e:	b003      	add	sp, #12
 8012ea0:	bd30      	pop	{r4, r5, pc}

08012ea2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 8012ea2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012ea4:	4604      	mov	r4, r0
 8012ea6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012eaa:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 8012eae:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8012eb2:	4293      	cmp	r3, r2
 8012eb4:	460d      	mov	r5, r1
 8012eb6:	d01e      	beq.n	8012ef6 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 8012eb8:	a802      	add	r0, sp, #8
 8012eba:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8012ebe:	f009 f8ff 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012ec2:	6823      	ldr	r3, [r4, #0]
 8012ec4:	fb15 f000 	smulbb	r0, r5, r0
 8012ec8:	86a0      	strh	r0, [r4, #52]	; 0x34
 8012eca:	695b      	ldr	r3, [r3, #20]
 8012ecc:	4620      	mov	r0, r4
 8012ece:	4798      	blx	r3
 8012ed0:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8012ed4:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8012ed8:	4620      	mov	r0, r4
 8012eda:	f7ff fb2f 	bl	801253c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012ede:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 8012ee2:	42a9      	cmp	r1, r5
 8012ee4:	4620      	mov	r0, r4
 8012ee6:	bf28      	it	cs
 8012ee8:	4629      	movcs	r1, r5
 8012eea:	f7ff ffbb 	bl	8012e64 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 8012eee:	6823      	ldr	r3, [r4, #0]
 8012ef0:	4620      	mov	r0, r4
 8012ef2:	695b      	ldr	r3, [r3, #20]
 8012ef4:	4798      	blx	r3
 8012ef6:	b003      	add	sp, #12
 8012ef8:	bd30      	pop	{r4, r5, pc}

08012efa <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 8012efa:	b538      	push	{r3, r4, r5, lr}
 8012efc:	4604      	mov	r4, r0
 8012efe:	460d      	mov	r5, r1
 8012f00:	305c      	adds	r0, #92	; 0x5c
 8012f02:	4611      	mov	r1, r2
 8012f04:	f002 ff8d 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012f08:	4629      	mov	r1, r5
 8012f0a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8012f0e:	f002 fa53 	bl	80153b8 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 8012f12:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 8012f16:	b121      	cbz	r1, 8012f22 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 8012f18:	4620      	mov	r0, r4
 8012f1a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012f1e:	f7ff bfc0 	b.w	8012ea2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8012f22:	bd38      	pop	{r3, r4, r5, pc}

08012f24 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 8012f24:	3068      	adds	r0, #104	; 0x68
 8012f26:	f7ff bfe8 	b.w	8012efa <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

08012f2a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 8012f2a:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8012f2e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8012f32:	3101      	adds	r1, #1
 8012f34:	fb91 f3f2 	sdiv	r3, r1, r2
 8012f38:	fb02 1113 	mls	r1, r2, r3, r1
 8012f3c:	b2c9      	uxtb	r1, r1
 8012f3e:	f7ff bf91 	b.w	8012e64 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08012f42 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 8012f42:	b510      	push	{r4, lr}
 8012f44:	4604      	mov	r4, r0
 8012f46:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8012f4a:	280a      	cmp	r0, #10
 8012f4c:	d813      	bhi.n	8012f76 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 8012f4e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012f50:	8922      	ldrh	r2, [r4, #8]
 8012f52:	441a      	add	r2, r3
 8012f54:	b212      	sxth	r2, r2
 8012f56:	230a      	movs	r3, #10
 8012f58:	2100      	movs	r1, #0
 8012f5a:	f007 fad1 	bl	801a500 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8012f5e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012f60:	1a18      	subs	r0, r3, r0
 8012f62:	8620      	strh	r0, [r4, #48]	; 0x30
 8012f64:	4620      	mov	r0, r4
 8012f66:	f7ff fe90 	bl	8012c8a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012f6a:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8012f6e:	3301      	adds	r3, #1
 8012f70:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012f74:	bd10      	pop	{r4, pc}
 8012f76:	2304      	movs	r3, #4
 8012f78:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8012f7c:	2300      	movs	r3, #0
 8012f7e:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012f82:	8623      	strh	r3, [r4, #48]	; 0x30
 8012f84:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8012f88:	f7ff ffcf 	bl	8012f2a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 8012f8c:	e7ea      	b.n	8012f64 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

08012f8e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 8012f8e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8012f92:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8012f96:	4411      	add	r1, r2
 8012f98:	3901      	subs	r1, #1
 8012f9a:	fb91 f3f2 	sdiv	r3, r1, r2
 8012f9e:	fb02 1113 	mls	r1, r2, r3, r1
 8012fa2:	b2c9      	uxtb	r1, r1
 8012fa4:	f7ff bf5e 	b.w	8012e64 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08012fa8 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 8012fa8:	b510      	push	{r4, lr}
 8012faa:	4604      	mov	r4, r0
 8012fac:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8012fb0:	280a      	cmp	r0, #10
 8012fb2:	d813      	bhi.n	8012fdc <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 8012fb4:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012fb6:	8922      	ldrh	r2, [r4, #8]
 8012fb8:	1ad2      	subs	r2, r2, r3
 8012fba:	b212      	sxth	r2, r2
 8012fbc:	230a      	movs	r3, #10
 8012fbe:	2100      	movs	r1, #0
 8012fc0:	f007 fa9e 	bl	801a500 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8012fc4:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012fc6:	4418      	add	r0, r3
 8012fc8:	8620      	strh	r0, [r4, #48]	; 0x30
 8012fca:	4620      	mov	r0, r4
 8012fcc:	f7ff fe5d 	bl	8012c8a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012fd0:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8012fd4:	3301      	adds	r3, #1
 8012fd6:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012fda:	bd10      	pop	{r4, pc}
 8012fdc:	2304      	movs	r3, #4
 8012fde:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8012fe2:	2300      	movs	r3, #0
 8012fe4:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012fe8:	8623      	strh	r3, [r4, #48]	; 0x30
 8012fea:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8012fee:	f7ff ffce 	bl	8012f8e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 8012ff2:	e7ea      	b.n	8012fca <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

08012ff4 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 8012ff4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012ff8:	b90b      	cbnz	r3, 8012ffe <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 8012ffa:	f7ff be73 	b.w	8012ce4 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 8012ffe:	2b01      	cmp	r3, #1
 8013000:	d101      	bne.n	8013006 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 8013002:	f7ff be91 	b.w	8012d28 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 8013006:	2b02      	cmp	r3, #2
 8013008:	d101      	bne.n	801300e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 801300a:	f7ff bf9a 	b.w	8012f42 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 801300e:	2b03      	cmp	r3, #3
 8013010:	d101      	bne.n	8013016 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 8013012:	f7ff bfc9 	b.w	8012fa8 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 8013016:	4770      	bx	lr

08013018 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 8013018:	b510      	push	{r4, lr}
 801301a:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 801301e:	428b      	cmp	r3, r1
 8013020:	4604      	mov	r4, r0
 8013022:	d907      	bls.n	8013034 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 8013024:	3068      	adds	r0, #104	; 0x68
 8013026:	f7ff ff1d 	bl	8012e64 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801302a:	4620      	mov	r0, r4
 801302c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013030:	f7ff be2b 	b.w	8012c8a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8013034:	bd10      	pop	{r4, pc}

08013036 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 8013036:	b538      	push	{r3, r4, r5, lr}
 8013038:	4604      	mov	r4, r0
 801303a:	3038      	adds	r0, #56	; 0x38
 801303c:	460d      	mov	r5, r1
 801303e:	f000 f963 	bl	8013308 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8013042:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 8013046:	3101      	adds	r1, #1
 8013048:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801304c:	b2c9      	uxtb	r1, r1
 801304e:	f7ff ff28 	bl	8012ea2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8013052:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8013056:	4620      	mov	r0, r4
 8013058:	f7ff ffde 	bl	8013018 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801305c:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 8013060:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8013064:	4620      	mov	r0, r4
 8013066:	f7ff fa69 	bl	801253c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801306a:	bd38      	pop	{r3, r4, r5, pc}

0801306c <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 801306c:	b538      	push	{r3, r4, r5, lr}
 801306e:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8013072:	4604      	mov	r4, r0
 8013074:	b1e3      	cbz	r3, 80130b0 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 8013076:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8013078:	b1d3      	cbz	r3, 80130b0 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 801307a:	428b      	cmp	r3, r1
 801307c:	d125      	bne.n	80130ca <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 801307e:	4619      	mov	r1, r3
 8013080:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8013084:	f000 f9c0 	bl	8013408 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 8013088:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 801308c:	3901      	subs	r1, #1
 801308e:	b2c9      	uxtb	r1, r1
 8013090:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8013094:	f7ff ff05 	bl	8012ea2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8013098:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 801309c:	b94d      	cbnz	r5, 80130b2 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 801309e:	6823      	ldr	r3, [r4, #0]
 80130a0:	4620      	mov	r0, r4
 80130a2:	695b      	ldr	r3, [r3, #20]
 80130a4:	4798      	blx	r3
 80130a6:	462a      	mov	r2, r5
 80130a8:	4629      	mov	r1, r5
 80130aa:	4620      	mov	r0, r4
 80130ac:	f7ff fa46 	bl	801253c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80130b0:	bd38      	pop	{r3, r4, r5, pc}
 80130b2:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 80130b6:	3d01      	subs	r5, #1
 80130b8:	42a9      	cmp	r1, r5
 80130ba:	bfa8      	it	ge
 80130bc:	4629      	movge	r1, r5
 80130be:	4620      	mov	r0, r4
 80130c0:	b2c9      	uxtb	r1, r1
 80130c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80130c6:	f7ff bfa7 	b.w	8013018 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 80130ca:	699b      	ldr	r3, [r3, #24]
 80130cc:	e7d4      	b.n	8013078 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

080130ce <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 80130ce:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 80130d2:	4770      	bx	lr

080130d4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 80130d4:	b538      	push	{r3, r4, r5, lr}
 80130d6:	7882      	ldrb	r2, [r0, #2]
 80130d8:	6843      	ldr	r3, [r0, #4]
 80130da:	4604      	mov	r4, r0
 80130dc:	460d      	mov	r5, r1
 80130de:	b98a      	cbnz	r2, 8013104 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 80130e0:	4299      	cmp	r1, r3
 80130e2:	d101      	bne.n	80130e8 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80130e4:	2301      	movs	r3, #1
 80130e6:	7083      	strb	r3, [r0, #2]
 80130e8:	6863      	ldr	r3, [r4, #4]
 80130ea:	42ab      	cmp	r3, r5
 80130ec:	d009      	beq.n	8013102 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 80130ee:	7a23      	ldrb	r3, [r4, #8]
 80130f0:	2b01      	cmp	r3, #1
 80130f2:	d11b      	bne.n	801312c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 80130f4:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 80130f8:	f9b4 2000 	ldrsh.w	r2, [r4]
 80130fc:	429a      	cmp	r2, r3
 80130fe:	bfb8      	it	lt
 8013100:	8023      	strhlt	r3, [r4, #0]
 8013102:	bd38      	pop	{r3, r4, r5, pc}
 8013104:	7a02      	ldrb	r2, [r0, #8]
 8013106:	2a01      	cmp	r2, #1
 8013108:	d108      	bne.n	801311c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 801310a:	895b      	ldrh	r3, [r3, #10]
 801310c:	88c9      	ldrh	r1, [r1, #6]
 801310e:	1ac9      	subs	r1, r1, r3
 8013110:	682b      	ldr	r3, [r5, #0]
 8013112:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013114:	b209      	sxth	r1, r1
 8013116:	4628      	mov	r0, r5
 8013118:	4798      	blx	r3
 801311a:	e7e5      	b.n	80130e8 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 801311c:	2a02      	cmp	r2, #2
 801311e:	d1e3      	bne.n	80130e8 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8013120:	891b      	ldrh	r3, [r3, #8]
 8013122:	8889      	ldrh	r1, [r1, #4]
 8013124:	1ac9      	subs	r1, r1, r3
 8013126:	682b      	ldr	r3, [r5, #0]
 8013128:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801312a:	e7f3      	b.n	8013114 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 801312c:	2b02      	cmp	r3, #2
 801312e:	d1e8      	bne.n	8013102 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 8013130:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8013134:	e7e0      	b.n	80130f8 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

08013136 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 8013136:	4770      	bx	lr

08013138 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 8013138:	4770      	bx	lr

0801313a <_ZN8touchgfx10ListLayoutD1Ev>:
 801313a:	4770      	bx	lr

0801313c <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 801313c:	b430      	push	{r4, r5}
 801313e:	68c5      	ldr	r5, [r0, #12]
 8013140:	6844      	ldr	r4, [r0, #4]
 8013142:	106a      	asrs	r2, r5, #1
 8013144:	4603      	mov	r3, r0
 8013146:	07ed      	lsls	r5, r5, #31
 8013148:	eb04 0002 	add.w	r0, r4, r2
 801314c:	689b      	ldr	r3, [r3, #8]
 801314e:	bf48      	it	mi
 8013150:	58a2      	ldrmi	r2, [r4, r2]
 8013152:	bc30      	pop	{r4, r5}
 8013154:	bf48      	it	mi
 8013156:	58d3      	ldrmi	r3, [r2, r3]
 8013158:	4718      	bx	r3

0801315a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 801315a:	6843      	ldr	r3, [r0, #4]
 801315c:	b12b      	cbz	r3, 801316a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 801315e:	6883      	ldr	r3, [r0, #8]
 8013160:	b92b      	cbnz	r3, 801316e <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 8013162:	68c0      	ldr	r0, [r0, #12]
 8013164:	f000 0001 	and.w	r0, r0, #1
 8013168:	4770      	bx	lr
 801316a:	4618      	mov	r0, r3
 801316c:	4770      	bx	lr
 801316e:	2001      	movs	r0, #1
 8013170:	4770      	bx	lr

08013172 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 8013172:	b430      	push	{r4, r5}
 8013174:	68c5      	ldr	r5, [r0, #12]
 8013176:	6844      	ldr	r4, [r0, #4]
 8013178:	106a      	asrs	r2, r5, #1
 801317a:	4603      	mov	r3, r0
 801317c:	07ed      	lsls	r5, r5, #31
 801317e:	eb04 0002 	add.w	r0, r4, r2
 8013182:	689b      	ldr	r3, [r3, #8]
 8013184:	bf48      	it	mi
 8013186:	58a2      	ldrmi	r2, [r4, r2]
 8013188:	bc30      	pop	{r4, r5}
 801318a:	bf48      	it	mi
 801318c:	58d3      	ldrmi	r3, [r2, r3]
 801318e:	4718      	bx	r3

08013190 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 8013190:	6843      	ldr	r3, [r0, #4]
 8013192:	b12b      	cbz	r3, 80131a0 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 8013194:	6883      	ldr	r3, [r0, #8]
 8013196:	b92b      	cbnz	r3, 80131a4 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 8013198:	68c0      	ldr	r0, [r0, #12]
 801319a:	f000 0001 	and.w	r0, r0, #1
 801319e:	4770      	bx	lr
 80131a0:	4618      	mov	r0, r3
 80131a2:	4770      	bx	lr
 80131a4:	2001      	movs	r0, #1
 80131a6:	4770      	bx	lr

080131a8 <_ZN8touchgfx10ListLayoutD0Ev>:
 80131a8:	b510      	push	{r4, lr}
 80131aa:	2130      	movs	r1, #48	; 0x30
 80131ac:	4604      	mov	r4, r0
 80131ae:	f019 fc20 	bl	802c9f2 <_ZdlPvj>
 80131b2:	4620      	mov	r0, r4
 80131b4:	bd10      	pop	{r4, pc}

080131b6 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 80131b6:	b510      	push	{r4, lr}
 80131b8:	2110      	movs	r1, #16
 80131ba:	4604      	mov	r4, r0
 80131bc:	f019 fc19 	bl	802c9f2 <_ZdlPvj>
 80131c0:	4620      	mov	r0, r4
 80131c2:	bd10      	pop	{r4, pc}

080131c4 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 80131c4:	b510      	push	{r4, lr}
 80131c6:	2110      	movs	r1, #16
 80131c8:	4604      	mov	r4, r0
 80131ca:	f019 fc12 	bl	802c9f2 <_ZdlPvj>
 80131ce:	4620      	mov	r0, r4
 80131d0:	bd10      	pop	{r4, pc}

080131d2 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 80131d2:	4603      	mov	r3, r0
 80131d4:	4608      	mov	r0, r1
 80131d6:	789a      	ldrb	r2, [r3, #2]
 80131d8:	b992      	cbnz	r2, 8013200 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 80131da:	685a      	ldr	r2, [r3, #4]
 80131dc:	428a      	cmp	r2, r1
 80131de:	d102      	bne.n	80131e6 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 80131e0:	2201      	movs	r2, #1
 80131e2:	709a      	strb	r2, [r3, #2]
 80131e4:	4770      	bx	lr
 80131e6:	7a1a      	ldrb	r2, [r3, #8]
 80131e8:	2a01      	cmp	r2, #1
 80131ea:	d104      	bne.n	80131f6 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 80131ec:	88ca      	ldrh	r2, [r1, #6]
 80131ee:	8949      	ldrh	r1, [r1, #10]
 80131f0:	440a      	add	r2, r1
 80131f2:	801a      	strh	r2, [r3, #0]
 80131f4:	4770      	bx	lr
 80131f6:	2a02      	cmp	r2, #2
 80131f8:	d116      	bne.n	8013228 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 80131fa:	888a      	ldrh	r2, [r1, #4]
 80131fc:	8909      	ldrh	r1, [r1, #8]
 80131fe:	e7f7      	b.n	80131f0 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 8013200:	7a1a      	ldrb	r2, [r3, #8]
 8013202:	2a01      	cmp	r2, #1
 8013204:	d107      	bne.n	8013216 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 8013206:	685b      	ldr	r3, [r3, #4]
 8013208:	8959      	ldrh	r1, [r3, #10]
 801320a:	88c3      	ldrh	r3, [r0, #6]
 801320c:	4419      	add	r1, r3
 801320e:	6803      	ldr	r3, [r0, #0]
 8013210:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013212:	b209      	sxth	r1, r1
 8013214:	4718      	bx	r3
 8013216:	2a02      	cmp	r2, #2
 8013218:	d106      	bne.n	8013228 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801321a:	685b      	ldr	r3, [r3, #4]
 801321c:	8919      	ldrh	r1, [r3, #8]
 801321e:	8883      	ldrh	r3, [r0, #4]
 8013220:	4419      	add	r1, r3
 8013222:	6803      	ldr	r3, [r0, #0]
 8013224:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013226:	e7f4      	b.n	8013212 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 8013228:	4770      	bx	lr

0801322a <_ZN8touchgfx10ListLayout9removeAllEv>:
 801322a:	2200      	movs	r2, #0
 801322c:	b510      	push	{r4, lr}
 801322e:	4611      	mov	r1, r2
 8013230:	4604      	mov	r4, r0
 8013232:	85c2      	strh	r2, [r0, #46]	; 0x2e
 8013234:	f7ff f982 	bl	801253c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013238:	4620      	mov	r0, r4
 801323a:	f7ff fa26 	bl	801268a <_ZN8touchgfx9Container9removeAllEv>
 801323e:	6960      	ldr	r0, [r4, #20]
 8013240:	b120      	cbz	r0, 801324c <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 8013242:	6803      	ldr	r3, [r0, #0]
 8013244:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013248:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801324a:	4718      	bx	r3
 801324c:	bd10      	pop	{r4, pc}
	...

08013250 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 8013250:	b530      	push	{r4, r5, lr}
 8013252:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013256:	428b      	cmp	r3, r1
 8013258:	b085      	sub	sp, #20
 801325a:	4604      	mov	r4, r0
 801325c:	d017      	beq.n	801328e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 801325e:	2500      	movs	r5, #0
 8013260:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8013264:	85c5      	strh	r5, [r0, #46]	; 0x2e
 8013266:	462a      	mov	r2, r5
 8013268:	4629      	mov	r1, r5
 801326a:	f7ff f967 	bl	801253c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801326e:	4b09      	ldr	r3, [pc, #36]	; (8013294 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 8013270:	e9cd 3400 	strd	r3, r4, [sp]
 8013274:	4b08      	ldr	r3, [pc, #32]	; (8013298 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 8013276:	e9cd 3502 	strd	r3, r5, [sp, #8]
 801327a:	6823      	ldr	r3, [r4, #0]
 801327c:	4620      	mov	r0, r4
 801327e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013280:	4669      	mov	r1, sp
 8013282:	4798      	blx	r3
 8013284:	6960      	ldr	r0, [r4, #20]
 8013286:	b110      	cbz	r0, 801328e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 8013288:	6803      	ldr	r3, [r0, #0]
 801328a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801328c:	4798      	blx	r3
 801328e:	b005      	add	sp, #20
 8013290:	bd30      	pop	{r4, r5, pc}
 8013292:	bf00      	nop
 8013294:	0803150c 	.word	0x0803150c
 8013298:	08013301 	.word	0x08013301

0801329c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 801329c:	b538      	push	{r3, r4, r5, lr}
 801329e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80132a2:	2b01      	cmp	r3, #1
 80132a4:	460d      	mov	r5, r1
 80132a6:	4604      	mov	r4, r0
 80132a8:	4611      	mov	r1, r2
 80132aa:	d002      	beq.n	80132b2 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 80132ac:	2b02      	cmp	r3, #2
 80132ae:	d015      	beq.n	80132dc <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 80132b0:	bd38      	pop	{r3, r4, r5, pc}
 80132b2:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 80132b6:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 80132ba:	429a      	cmp	r2, r3
 80132bc:	bfb8      	it	lt
 80132be:	8103      	strhlt	r3, [r0, #8]
 80132c0:	896a      	ldrh	r2, [r5, #10]
 80132c2:	8943      	ldrh	r3, [r0, #10]
 80132c4:	4413      	add	r3, r2
 80132c6:	8143      	strh	r3, [r0, #10]
 80132c8:	460a      	mov	r2, r1
 80132ca:	4628      	mov	r0, r5
 80132cc:	2100      	movs	r1, #0
 80132ce:	f7f0 f90d 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 80132d2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80132d4:	896a      	ldrh	r2, [r5, #10]
 80132d6:	4413      	add	r3, r2
 80132d8:	85e3      	strh	r3, [r4, #46]	; 0x2e
 80132da:	e7e9      	b.n	80132b0 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 80132dc:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80132e0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80132e4:	429a      	cmp	r2, r3
 80132e6:	bfb8      	it	lt
 80132e8:	8143      	strhlt	r3, [r0, #10]
 80132ea:	892a      	ldrh	r2, [r5, #8]
 80132ec:	8903      	ldrh	r3, [r0, #8]
 80132ee:	4413      	add	r3, r2
 80132f0:	8103      	strh	r3, [r0, #8]
 80132f2:	2200      	movs	r2, #0
 80132f4:	4628      	mov	r0, r5
 80132f6:	f7f0 f8f9 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 80132fa:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80132fc:	892a      	ldrh	r2, [r5, #8]
 80132fe:	e7ea      	b.n	80132d6 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

08013300 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 8013300:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 8013304:	f7ff bfca 	b.w	801329c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

08013308 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 8013308:	b570      	push	{r4, r5, r6, lr}
 801330a:	4604      	mov	r4, r0
 801330c:	460d      	mov	r5, r1
 801330e:	f7ff fff7 	bl	8013300 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 8013312:	4620      	mov	r0, r4
 8013314:	4629      	mov	r1, r5
 8013316:	f7ff f9ab 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801331a:	6960      	ldr	r0, [r4, #20]
 801331c:	b120      	cbz	r0, 8013328 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 801331e:	6803      	ldr	r3, [r0, #0]
 8013320:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013324:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013326:	4718      	bx	r3
 8013328:	bd70      	pop	{r4, r5, r6, pc}
	...

0801332c <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 801332c:	b530      	push	{r4, r5, lr}
 801332e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8013330:	b089      	sub	sp, #36	; 0x24
 8013332:	4604      	mov	r4, r0
 8013334:	4615      	mov	r5, r2
 8013336:	b92b      	cbnz	r3, 8013344 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 8013338:	6803      	ldr	r3, [r0, #0]
 801333a:	4611      	mov	r1, r2
 801333c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801333e:	4798      	blx	r3
 8013340:	b009      	add	sp, #36	; 0x24
 8013342:	bd30      	pop	{r4, r5, pc}
 8013344:	f7ff f9ec 	bl	8012720 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 8013348:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 801334c:	f88d 200c 	strb.w	r2, [sp, #12]
 8013350:	4a0f      	ldr	r2, [pc, #60]	; (8013390 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 8013352:	9204      	str	r2, [sp, #16]
 8013354:	aa01      	add	r2, sp, #4
 8013356:	9205      	str	r2, [sp, #20]
 8013358:	4a0e      	ldr	r2, [pc, #56]	; (8013394 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 801335a:	9502      	str	r5, [sp, #8]
 801335c:	2300      	movs	r3, #0
 801335e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8013362:	f8ad 3004 	strh.w	r3, [sp, #4]
 8013366:	f88d 3006 	strb.w	r3, [sp, #6]
 801336a:	6823      	ldr	r3, [r4, #0]
 801336c:	a904      	add	r1, sp, #16
 801336e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013370:	4620      	mov	r0, r4
 8013372:	4798      	blx	r3
 8013374:	4620      	mov	r0, r4
 8013376:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801337a:	4629      	mov	r1, r5
 801337c:	f7ff ff8e 	bl	801329c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 8013380:	6960      	ldr	r0, [r4, #20]
 8013382:	2800      	cmp	r0, #0
 8013384:	d0dc      	beq.n	8013340 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8013386:	6803      	ldr	r3, [r0, #0]
 8013388:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801338a:	4798      	blx	r3
 801338c:	e7d8      	b.n	8013340 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 801338e:	bf00      	nop
 8013390:	08031524 	.word	0x08031524
 8013394:	080131d3 	.word	0x080131d3

08013398 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 8013398:	b538      	push	{r3, r4, r5, lr}
 801339a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801339e:	2b01      	cmp	r3, #1
 80133a0:	4604      	mov	r4, r0
 80133a2:	460d      	mov	r5, r1
 80133a4:	d002      	beq.n	80133ac <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 80133a6:	2b02      	cmp	r3, #2
 80133a8:	d018      	beq.n	80133dc <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 80133aa:	bd38      	pop	{r3, r4, r5, pc}
 80133ac:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80133b0:	4293      	cmp	r3, r2
 80133b2:	bfc8      	it	gt
 80133b4:	8102      	strhgt	r2, [r0, #8]
 80133b6:	894a      	ldrh	r2, [r1, #10]
 80133b8:	8943      	ldrh	r3, [r0, #10]
 80133ba:	1a9b      	subs	r3, r3, r2
 80133bc:	8143      	strh	r3, [r0, #10]
 80133be:	680b      	ldr	r3, [r1, #0]
 80133c0:	4628      	mov	r0, r5
 80133c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80133c4:	2100      	movs	r1, #0
 80133c6:	4798      	blx	r3
 80133c8:	682b      	ldr	r3, [r5, #0]
 80133ca:	2100      	movs	r1, #0
 80133cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80133ce:	4628      	mov	r0, r5
 80133d0:	4798      	blx	r3
 80133d2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80133d4:	896a      	ldrh	r2, [r5, #10]
 80133d6:	1a9b      	subs	r3, r3, r2
 80133d8:	85e3      	strh	r3, [r4, #46]	; 0x2e
 80133da:	e7e6      	b.n	80133aa <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 80133dc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80133e0:	4293      	cmp	r3, r2
 80133e2:	bfc8      	it	gt
 80133e4:	8142      	strhgt	r2, [r0, #10]
 80133e6:	890a      	ldrh	r2, [r1, #8]
 80133e8:	8903      	ldrh	r3, [r0, #8]
 80133ea:	1a9b      	subs	r3, r3, r2
 80133ec:	8103      	strh	r3, [r0, #8]
 80133ee:	680b      	ldr	r3, [r1, #0]
 80133f0:	4628      	mov	r0, r5
 80133f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80133f4:	2100      	movs	r1, #0
 80133f6:	4798      	blx	r3
 80133f8:	682b      	ldr	r3, [r5, #0]
 80133fa:	2100      	movs	r1, #0
 80133fc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80133fe:	4628      	mov	r0, r5
 8013400:	4798      	blx	r3
 8013402:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013404:	892a      	ldrh	r2, [r5, #8]
 8013406:	e7e6      	b.n	80133d6 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

08013408 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 8013408:	b530      	push	{r4, r5, lr}
 801340a:	b089      	sub	sp, #36	; 0x24
 801340c:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8013410:	f88d 200c 	strb.w	r2, [sp, #12]
 8013414:	4a13      	ldr	r2, [pc, #76]	; (8013464 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 8013416:	9204      	str	r2, [sp, #16]
 8013418:	aa01      	add	r2, sp, #4
 801341a:	9205      	str	r2, [sp, #20]
 801341c:	4a12      	ldr	r2, [pc, #72]	; (8013468 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 801341e:	9102      	str	r1, [sp, #8]
 8013420:	2300      	movs	r3, #0
 8013422:	f8ad 3004 	strh.w	r3, [sp, #4]
 8013426:	f88d 3006 	strb.w	r3, [sp, #6]
 801342a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801342e:	6803      	ldr	r3, [r0, #0]
 8013430:	460d      	mov	r5, r1
 8013432:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013434:	a904      	add	r1, sp, #16
 8013436:	4604      	mov	r4, r0
 8013438:	4798      	blx	r3
 801343a:	f89d 3006 	ldrb.w	r3, [sp, #6]
 801343e:	b14b      	cbz	r3, 8013454 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 8013440:	4629      	mov	r1, r5
 8013442:	4620      	mov	r0, r4
 8013444:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8013448:	f7ff ffa6 	bl	8013398 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 801344c:	4629      	mov	r1, r5
 801344e:	4620      	mov	r0, r4
 8013450:	f7ff f94f 	bl	80126f2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8013454:	6960      	ldr	r0, [r4, #20]
 8013456:	b110      	cbz	r0, 801345e <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 8013458:	6803      	ldr	r3, [r0, #0]
 801345a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801345c:	4798      	blx	r3
 801345e:	b009      	add	sp, #36	; 0x24
 8013460:	bd30      	pop	{r4, r5, pc}
 8013462:	bf00      	nop
 8013464:	08031524 	.word	0x08031524
 8013468:	080130d5 	.word	0x080130d5

0801346c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 801346c:	b513      	push	{r0, r1, r4, lr}
 801346e:	6803      	ldr	r3, [r0, #0]
 8013470:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8013474:	2300      	movs	r3, #0
 8013476:	e9cd 3300 	strd	r3, r3, [sp]
 801347a:	466b      	mov	r3, sp
 801347c:	47a0      	blx	r4
 801347e:	b002      	add	sp, #8
 8013480:	bd10      	pop	{r4, pc}

08013482 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8013482:	2301      	movs	r3, #1
 8013484:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8013488:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801348c:	4770      	bx	lr

0801348e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 801348e:	2301      	movs	r3, #1
 8013490:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8013494:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8013498:	4770      	bx	lr

0801349a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801349a:	6843      	ldr	r3, [r0, #4]
 801349c:	2201      	movs	r2, #1
 801349e:	725a      	strb	r2, [r3, #9]
 80134a0:	6840      	ldr	r0, [r0, #4]
 80134a2:	6803      	ldr	r3, [r0, #0]
 80134a4:	691b      	ldr	r3, [r3, #16]
 80134a6:	4718      	bx	r3

080134a8 <_ZN8touchgfx3HAL8flushDMAEv>:
 80134a8:	6840      	ldr	r0, [r0, #4]
 80134aa:	6803      	ldr	r3, [r0, #0]
 80134ac:	689b      	ldr	r3, [r3, #8]
 80134ae:	4718      	bx	r3

080134b0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 80134b0:	b530      	push	{r4, r5, lr}
 80134b2:	b08b      	sub	sp, #44	; 0x2c
 80134b4:	6804      	ldr	r4, [r0, #0]
 80134b6:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80134ba:	9509      	str	r5, [sp, #36]	; 0x24
 80134bc:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 80134c0:	9508      	str	r5, [sp, #32]
 80134c2:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80134c6:	9507      	str	r5, [sp, #28]
 80134c8:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80134cc:	9506      	str	r5, [sp, #24]
 80134ce:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80134d2:	9505      	str	r5, [sp, #20]
 80134d4:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80134d8:	9504      	str	r5, [sp, #16]
 80134da:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 80134de:	9503      	str	r5, [sp, #12]
 80134e0:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 80134e4:	9502      	str	r5, [sp, #8]
 80134e6:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80134ea:	e9cd 3500 	strd	r3, r5, [sp]
 80134ee:	4613      	mov	r3, r2
 80134f0:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 80134f2:	2200      	movs	r2, #0
 80134f4:	47a0      	blx	r4
 80134f6:	b00b      	add	sp, #44	; 0x2c
 80134f8:	bd30      	pop	{r4, r5, pc}
	...

080134fc <_ZN8touchgfx3HAL10beginFrameEv>:
 80134fc:	4b04      	ldr	r3, [pc, #16]	; (8013510 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80134fe:	781b      	ldrb	r3, [r3, #0]
 8013500:	b123      	cbz	r3, 801350c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8013502:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8013506:	f080 0001 	eor.w	r0, r0, #1
 801350a:	4770      	bx	lr
 801350c:	2001      	movs	r0, #1
 801350e:	4770      	bx	lr
 8013510:	20013852 	.word	0x20013852

08013514 <_ZN8touchgfx3HAL8endFrameEv>:
 8013514:	b510      	push	{r4, lr}
 8013516:	4604      	mov	r4, r0
 8013518:	6840      	ldr	r0, [r0, #4]
 801351a:	6803      	ldr	r3, [r0, #0]
 801351c:	689b      	ldr	r3, [r3, #8]
 801351e:	4798      	blx	r3
 8013520:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8013524:	b113      	cbz	r3, 801352c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8013526:	2301      	movs	r3, #1
 8013528:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801352c:	bd10      	pop	{r4, pc}

0801352e <_ZN8touchgfx3HAL10initializeEv>:
 801352e:	b510      	push	{r4, lr}
 8013530:	4604      	mov	r4, r0
 8013532:	f7ef fb43 	bl	8002bbc <_ZN8touchgfx10OSWrappers10initializeEv>
 8013536:	f7ef fa4f 	bl	80029d8 <_ZN8touchgfx4GPIO4initEv>
 801353a:	6860      	ldr	r0, [r4, #4]
 801353c:	6803      	ldr	r3, [r0, #0]
 801353e:	68db      	ldr	r3, [r3, #12]
 8013540:	4798      	blx	r3
 8013542:	68e0      	ldr	r0, [r4, #12]
 8013544:	6803      	ldr	r3, [r0, #0]
 8013546:	689b      	ldr	r3, [r3, #8]
 8013548:	4798      	blx	r3
 801354a:	6823      	ldr	r3, [r4, #0]
 801354c:	4620      	mov	r0, r4
 801354e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8013550:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013554:	4718      	bx	r3
	...

08013558 <_ZN8touchgfx3HAL4tickEv>:
 8013558:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801355a:	6803      	ldr	r3, [r0, #0]
 801355c:	4d5b      	ldr	r5, [pc, #364]	; (80136cc <_ZN8touchgfx3HAL4tickEv+0x174>)
 801355e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8013562:	4604      	mov	r4, r0
 8013564:	4798      	blx	r3
 8013566:	2800      	cmp	r0, #0
 8013568:	f000 8095 	beq.w	8013696 <_ZN8touchgfx3HAL4tickEv+0x13e>
 801356c:	2001      	movs	r0, #1
 801356e:	f7ef f9e5 	bl	800293c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8013572:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8013576:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801357a:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 801357e:	2600      	movs	r6, #0
 8013580:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8013584:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8013588:	b133      	cbz	r3, 8013598 <_ZN8touchgfx3HAL4tickEv+0x40>
 801358a:	6823      	ldr	r3, [r4, #0]
 801358c:	4620      	mov	r0, r4
 801358e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8013592:	4798      	blx	r3
 8013594:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8013598:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801359c:	6862      	ldr	r2, [r4, #4]
 801359e:	f083 0301 	eor.w	r3, r3, #1
 80135a2:	7253      	strb	r3, [r2, #9]
 80135a4:	2601      	movs	r6, #1
 80135a6:	702e      	strb	r6, [r5, #0]
 80135a8:	f005 f93a 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
 80135ac:	6803      	ldr	r3, [r0, #0]
 80135ae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80135b0:	4798      	blx	r3
 80135b2:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80135b6:	b90b      	cbnz	r3, 80135bc <_ZN8touchgfx3HAL4tickEv+0x64>
 80135b8:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 80135bc:	f005 f930 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
 80135c0:	6803      	ldr	r3, [r0, #0]
 80135c2:	695b      	ldr	r3, [r3, #20]
 80135c4:	4798      	blx	r3
 80135c6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80135c8:	6803      	ldr	r3, [r0, #0]
 80135ca:	691b      	ldr	r3, [r3, #16]
 80135cc:	4798      	blx	r3
 80135ce:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80135d2:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 80135d6:	3b01      	subs	r3, #1
 80135d8:	b2db      	uxtb	r3, r3
 80135da:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80135de:	b10a      	cbz	r2, 80135e4 <_ZN8touchgfx3HAL4tickEv+0x8c>
 80135e0:	2b00      	cmp	r3, #0
 80135e2:	d1eb      	bne.n	80135bc <_ZN8touchgfx3HAL4tickEv+0x64>
 80135e4:	4a3a      	ldr	r2, [pc, #232]	; (80136d0 <_ZN8touchgfx3HAL4tickEv+0x178>)
 80135e6:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 80135ea:	7813      	ldrb	r3, [r2, #0]
 80135ec:	3301      	adds	r3, #1
 80135ee:	b25b      	sxtb	r3, r3
 80135f0:	4299      	cmp	r1, r3
 80135f2:	7013      	strb	r3, [r2, #0]
 80135f4:	dc10      	bgt.n	8013618 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80135f6:	68e0      	ldr	r0, [r4, #12]
 80135f8:	2300      	movs	r3, #0
 80135fa:	7013      	strb	r3, [r2, #0]
 80135fc:	6803      	ldr	r3, [r0, #0]
 80135fe:	aa03      	add	r2, sp, #12
 8013600:	68db      	ldr	r3, [r3, #12]
 8013602:	a902      	add	r1, sp, #8
 8013604:	4798      	blx	r3
 8013606:	6823      	ldr	r3, [r4, #0]
 8013608:	2800      	cmp	r0, #0
 801360a:	d050      	beq.n	80136ae <_ZN8touchgfx3HAL4tickEv+0x156>
 801360c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8013610:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8013614:	4620      	mov	r0, r4
 8013616:	4798      	blx	r3
 8013618:	6960      	ldr	r0, [r4, #20]
 801361a:	2300      	movs	r3, #0
 801361c:	f88d 3007 	strb.w	r3, [sp, #7]
 8013620:	b158      	cbz	r0, 801363a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8013622:	6803      	ldr	r3, [r0, #0]
 8013624:	f10d 0107 	add.w	r1, sp, #7
 8013628:	68db      	ldr	r3, [r3, #12]
 801362a:	4798      	blx	r3
 801362c:	b128      	cbz	r0, 801363a <_ZN8touchgfx3HAL4tickEv+0xe2>
 801362e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8013630:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8013634:	6803      	ldr	r3, [r0, #0]
 8013636:	68db      	ldr	r3, [r3, #12]
 8013638:	4798      	blx	r3
 801363a:	f104 001c 	add.w	r0, r4, #28
 801363e:	f016 f8c3 	bl	80297c8 <_ZN8touchgfx8Gestures4tickEv>
 8013642:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8013646:	b30b      	cbz	r3, 801368c <_ZN8touchgfx3HAL4tickEv+0x134>
 8013648:	6920      	ldr	r0, [r4, #16]
 801364a:	6803      	ldr	r3, [r0, #0]
 801364c:	691b      	ldr	r3, [r3, #16]
 801364e:	4798      	blx	r3
 8013650:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8013652:	4606      	mov	r6, r0
 8013654:	b903      	cbnz	r3, 8013658 <_ZN8touchgfx3HAL4tickEv+0x100>
 8013656:	6760      	str	r0, [r4, #116]	; 0x74
 8013658:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801365a:	4a1e      	ldr	r2, [pc, #120]	; (80136d4 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 801365c:	1af3      	subs	r3, r6, r3
 801365e:	4293      	cmp	r3, r2
 8013660:	d914      	bls.n	801368c <_ZN8touchgfx3HAL4tickEv+0x134>
 8013662:	6920      	ldr	r0, [r4, #16]
 8013664:	6803      	ldr	r3, [r0, #0]
 8013666:	699b      	ldr	r3, [r3, #24]
 8013668:	4798      	blx	r3
 801366a:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801366c:	2264      	movs	r2, #100	; 0x64
 801366e:	1af3      	subs	r3, r6, r3
 8013670:	fbb3 f3f2 	udiv	r3, r3, r2
 8013674:	fbb0 f0f3 	udiv	r0, r0, r3
 8013678:	2800      	cmp	r0, #0
 801367a:	dc1d      	bgt.n	80136b8 <_ZN8touchgfx3HAL4tickEv+0x160>
 801367c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8013680:	6920      	ldr	r0, [r4, #16]
 8013682:	6803      	ldr	r3, [r0, #0]
 8013684:	2100      	movs	r1, #0
 8013686:	69db      	ldr	r3, [r3, #28]
 8013688:	4798      	blx	r3
 801368a:	6766      	str	r6, [r4, #116]	; 0x74
 801368c:	f005 f8c8 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
 8013690:	6803      	ldr	r3, [r0, #0]
 8013692:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013694:	4798      	blx	r3
 8013696:	6823      	ldr	r3, [r4, #0]
 8013698:	4620      	mov	r0, r4
 801369a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801369e:	4798      	blx	r3
 80136a0:	2001      	movs	r0, #1
 80136a2:	f7ef f963 	bl	800296c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80136a6:	2300      	movs	r3, #0
 80136a8:	702b      	strb	r3, [r5, #0]
 80136aa:	b004      	add	sp, #16
 80136ac:	bd70      	pop	{r4, r5, r6, pc}
 80136ae:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80136b2:	4620      	mov	r0, r4
 80136b4:	4798      	blx	r3
 80136b6:	e7af      	b.n	8013618 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80136b8:	2863      	cmp	r0, #99	; 0x63
 80136ba:	bfcb      	itete	gt
 80136bc:	2300      	movgt	r3, #0
 80136be:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80136c2:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 80136c6:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 80136ca:	e7d9      	b.n	8013680 <_ZN8touchgfx3HAL4tickEv+0x128>
 80136cc:	20013858 	.word	0x20013858
 80136d0:	20013859 	.word	0x20013859
 80136d4:	05f5e100 	.word	0x05f5e100

080136d8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80136d8:	b510      	push	{r4, lr}
 80136da:	4604      	mov	r4, r0
 80136dc:	f7ef fa9e 	bl	8002c1c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80136e0:	6863      	ldr	r3, [r4, #4]
 80136e2:	2200      	movs	r2, #0
 80136e4:	729a      	strb	r2, [r3, #10]
 80136e6:	bd10      	pop	{r4, pc}

080136e8 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80136e8:	65c1      	str	r1, [r0, #92]	; 0x5c
 80136ea:	301c      	adds	r0, #28
 80136ec:	f016 b86a 	b.w	80297c4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080136f0 <_ZN8touchgfx3HAL5touchEll>:
 80136f0:	b530      	push	{r4, r5, lr}
 80136f2:	b087      	sub	sp, #28
 80136f4:	4604      	mov	r4, r0
 80136f6:	a804      	add	r0, sp, #16
 80136f8:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80136fc:	f004 fe5c 	bl	80183b8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8013700:	9b04      	ldr	r3, [sp, #16]
 8013702:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013706:	a906      	add	r1, sp, #24
 8013708:	9b05      	ldr	r3, [sp, #20]
 801370a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 801370e:	a803      	add	r0, sp, #12
 8013710:	f004 fea4 	bl	801845c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8013714:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8013718:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801371c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8013720:	f104 001c 	add.w	r0, r4, #28
 8013724:	b189      	cbz	r1, 801374a <_ZN8touchgfx3HAL5touchEll+0x5a>
 8013726:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 801372a:	9300      	str	r3, [sp, #0]
 801372c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8013730:	4613      	mov	r3, r2
 8013732:	462a      	mov	r2, r5
 8013734:	f016 f856 	bl	80297e4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8013738:	b128      	cbz	r0, 8013746 <_ZN8touchgfx3HAL5touchEll+0x56>
 801373a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801373e:	6623      	str	r3, [r4, #96]	; 0x60
 8013740:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8013744:	6663      	str	r3, [r4, #100]	; 0x64
 8013746:	b007      	add	sp, #28
 8013748:	bd30      	pop	{r4, r5, pc}
 801374a:	f016 f88b 	bl	8029864 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 801374e:	2301      	movs	r3, #1
 8013750:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8013754:	e7f1      	b.n	801373a <_ZN8touchgfx3HAL5touchEll+0x4a>

08013756 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8013756:	b510      	push	{r4, lr}
 8013758:	2b00      	cmp	r3, #0
 801375a:	d046      	beq.n	80137ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801375c:	ea81 0002 	eor.w	r0, r1, r2
 8013760:	07c4      	lsls	r4, r0, #31
 8013762:	d508      	bpl.n	8013776 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8013764:	440b      	add	r3, r1
 8013766:	3a01      	subs	r2, #1
 8013768:	428b      	cmp	r3, r1
 801376a:	d93e      	bls.n	80137ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801376c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013770:	f801 0b01 	strb.w	r0, [r1], #1
 8013774:	e7f8      	b.n	8013768 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8013776:	07d0      	lsls	r0, r2, #31
 8013778:	bf42      	ittt	mi
 801377a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 801377e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8013782:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8013786:	2b01      	cmp	r3, #1
 8013788:	d911      	bls.n	80137ae <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801378a:	ea81 0402 	eor.w	r4, r1, r2
 801378e:	07a4      	lsls	r4, r4, #30
 8013790:	4610      	mov	r0, r2
 8013792:	d022      	beq.n	80137da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8013794:	f023 0401 	bic.w	r4, r3, #1
 8013798:	440c      	add	r4, r1
 801379a:	428c      	cmp	r4, r1
 801379c:	4602      	mov	r2, r0
 801379e:	d904      	bls.n	80137aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 80137a0:	8812      	ldrh	r2, [r2, #0]
 80137a2:	f821 2b02 	strh.w	r2, [r1], #2
 80137a6:	3002      	adds	r0, #2
 80137a8:	e7f7      	b.n	801379a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80137aa:	f003 0301 	and.w	r3, r3, #1
 80137ae:	f023 0003 	bic.w	r0, r3, #3
 80137b2:	4408      	add	r0, r1
 80137b4:	4288      	cmp	r0, r1
 80137b6:	4614      	mov	r4, r2
 80137b8:	d904      	bls.n	80137c4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80137ba:	6824      	ldr	r4, [r4, #0]
 80137bc:	f841 4b04 	str.w	r4, [r1], #4
 80137c0:	3204      	adds	r2, #4
 80137c2:	e7f7      	b.n	80137b4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80137c4:	f003 0303 	and.w	r3, r3, #3
 80137c8:	440b      	add	r3, r1
 80137ca:	3a01      	subs	r2, #1
 80137cc:	428b      	cmp	r3, r1
 80137ce:	d90c      	bls.n	80137ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80137d0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80137d4:	f801 0b01 	strb.w	r0, [r1], #1
 80137d8:	e7f8      	b.n	80137cc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80137da:	0790      	lsls	r0, r2, #30
 80137dc:	d0e7      	beq.n	80137ae <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80137de:	f832 0b02 	ldrh.w	r0, [r2], #2
 80137e2:	f821 0b02 	strh.w	r0, [r1], #2
 80137e6:	3b02      	subs	r3, #2
 80137e8:	e7e1      	b.n	80137ae <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80137ea:	2001      	movs	r0, #1
 80137ec:	bd10      	pop	{r4, pc}

080137ee <_ZN8touchgfx3HAL7noTouchEv>:
 80137ee:	b510      	push	{r4, lr}
 80137f0:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 80137f4:	4604      	mov	r4, r0
 80137f6:	b153      	cbz	r3, 801380e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80137f8:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 80137fc:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8013800:	2101      	movs	r1, #1
 8013802:	301c      	adds	r0, #28
 8013804:	f016 f82e 	bl	8029864 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8013808:	2300      	movs	r3, #0
 801380a:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801380e:	bd10      	pop	{r4, pc}

08013810 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8013810:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013814:	b085      	sub	sp, #20
 8013816:	ad04      	add	r5, sp, #16
 8013818:	4604      	mov	r4, r0
 801381a:	2000      	movs	r0, #0
 801381c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8013820:	69a0      	ldr	r0, [r4, #24]
 8013822:	6806      	ldr	r6, [r0, #0]
 8013824:	9501      	str	r5, [sp, #4]
 8013826:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 801382a:	9500      	str	r5, [sp, #0]
 801382c:	6835      	ldr	r5, [r6, #0]
 801382e:	4699      	mov	r9, r3
 8013830:	460f      	mov	r7, r1
 8013832:	4690      	mov	r8, r2
 8013834:	47a8      	blx	r5
 8013836:	4d10      	ldr	r5, [pc, #64]	; (8013878 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8013838:	4606      	mov	r6, r0
 801383a:	f8a5 9000 	strh.w	r9, [r5]
 801383e:	f7f1 fd8b 	bl	8005358 <_ZN8touchgfx3HAL3lcdEv>
 8013842:	6803      	ldr	r3, [r0, #0]
 8013844:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013846:	4798      	blx	r3
 8013848:	b128      	cbz	r0, 8013856 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 801384a:	2801      	cmp	r0, #1
 801384c:	d00b      	beq.n	8013866 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 801384e:	4630      	mov	r0, r6
 8013850:	b005      	add	sp, #20
 8013852:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013856:	882b      	ldrh	r3, [r5, #0]
 8013858:	fb08 7203 	mla	r2, r8, r3, r7
 801385c:	9b03      	ldr	r3, [sp, #12]
 801385e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8013862:	63e3      	str	r3, [r4, #60]	; 0x3c
 8013864:	e7f3      	b.n	801384e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8013866:	882a      	ldrh	r2, [r5, #0]
 8013868:	9b03      	ldr	r3, [sp, #12]
 801386a:	fb08 7202 	mla	r2, r8, r2, r7
 801386e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013872:	1a9a      	subs	r2, r3, r2
 8013874:	63e2      	str	r2, [r4, #60]	; 0x3c
 8013876:	e7ea      	b.n	801384e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8013878:	2001384e 	.word	0x2001384e

0801387c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 801387c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801387e:	b08b      	sub	sp, #44	; 0x2c
 8013880:	4617      	mov	r7, r2
 8013882:	4604      	mov	r4, r0
 8013884:	460e      	mov	r6, r1
 8013886:	461d      	mov	r5, r3
 8013888:	f7f1 fd66 	bl	8005358 <_ZN8touchgfx3HAL3lcdEv>
 801388c:	6803      	ldr	r3, [r0, #0]
 801388e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013890:	4798      	blx	r3
 8013892:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8013896:	9007      	str	r0, [sp, #28]
 8013898:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801389c:	4b0d      	ldr	r3, [pc, #52]	; (80138d4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 801389e:	6822      	ldr	r2, [r4, #0]
 80138a0:	881b      	ldrh	r3, [r3, #0]
 80138a2:	9306      	str	r3, [sp, #24]
 80138a4:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80138a8:	9305      	str	r3, [sp, #20]
 80138aa:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80138ae:	9304      	str	r3, [sp, #16]
 80138b0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80138b4:	9303      	str	r3, [sp, #12]
 80138b6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80138ba:	9302      	str	r3, [sp, #8]
 80138bc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80138c0:	e9cd 5300 	strd	r5, r3, [sp]
 80138c4:	4631      	mov	r1, r6
 80138c6:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80138c8:	463b      	mov	r3, r7
 80138ca:	2200      	movs	r2, #0
 80138cc:	4620      	mov	r0, r4
 80138ce:	47a8      	blx	r5
 80138d0:	b00b      	add	sp, #44	; 0x2c
 80138d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80138d4:	2001384e 	.word	0x2001384e

080138d8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80138d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80138dc:	4698      	mov	r8, r3
 80138de:	6803      	ldr	r3, [r0, #0]
 80138e0:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80138e2:	4b15      	ldr	r3, [pc, #84]	; (8013938 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80138e4:	b08b      	sub	sp, #44	; 0x2c
 80138e6:	4617      	mov	r7, r2
 80138e8:	f8b3 9000 	ldrh.w	r9, [r3]
 80138ec:	460e      	mov	r6, r1
 80138ee:	4604      	mov	r4, r0
 80138f0:	f7f1 fd32 	bl	8005358 <_ZN8touchgfx3HAL3lcdEv>
 80138f4:	6803      	ldr	r3, [r0, #0]
 80138f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80138f8:	4798      	blx	r3
 80138fa:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80138fe:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8013902:	2302      	movs	r3, #2
 8013904:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8013908:	2301      	movs	r3, #1
 801390a:	9305      	str	r3, [sp, #20]
 801390c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8013910:	9304      	str	r3, [sp, #16]
 8013912:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013916:	9303      	str	r3, [sp, #12]
 8013918:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801391c:	9302      	str	r3, [sp, #8]
 801391e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013922:	2200      	movs	r2, #0
 8013924:	e9cd 8300 	strd	r8, r3, [sp]
 8013928:	4631      	mov	r1, r6
 801392a:	463b      	mov	r3, r7
 801392c:	4620      	mov	r0, r4
 801392e:	47a8      	blx	r5
 8013930:	b00b      	add	sp, #44	; 0x2c
 8013932:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013936:	bf00      	nop
 8013938:	2001384e 	.word	0x2001384e

0801393c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 801393c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013940:	4698      	mov	r8, r3
 8013942:	6803      	ldr	r3, [r0, #0]
 8013944:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8013946:	4b11      	ldr	r3, [pc, #68]	; (801398c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8013948:	b087      	sub	sp, #28
 801394a:	f8b3 9000 	ldrh.w	r9, [r3]
 801394e:	460e      	mov	r6, r1
 8013950:	4617      	mov	r7, r2
 8013952:	4604      	mov	r4, r0
 8013954:	f7f1 fd00 	bl	8005358 <_ZN8touchgfx3HAL3lcdEv>
 8013958:	6803      	ldr	r3, [r0, #0]
 801395a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801395c:	4798      	blx	r3
 801395e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8013962:	f8cd 900c 	str.w	r9, [sp, #12]
 8013966:	e9cd 0304 	strd	r0, r3, [sp, #16]
 801396a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 801396e:	9302      	str	r3, [sp, #8]
 8013970:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8013974:	9301      	str	r3, [sp, #4]
 8013976:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801397a:	9300      	str	r3, [sp, #0]
 801397c:	463a      	mov	r2, r7
 801397e:	4643      	mov	r3, r8
 8013980:	4631      	mov	r1, r6
 8013982:	4620      	mov	r0, r4
 8013984:	47a8      	blx	r5
 8013986:	b007      	add	sp, #28
 8013988:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801398c:	2001384e 	.word	0x2001384e

08013990 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8013990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013994:	4604      	mov	r4, r0
 8013996:	b08f      	sub	sp, #60	; 0x3c
 8013998:	4610      	mov	r0, r2
 801399a:	460d      	mov	r5, r1
 801399c:	4691      	mov	r9, r2
 801399e:	461e      	mov	r6, r3
 80139a0:	f008 fafa 	bl	801bf98 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80139a4:	2800      	cmp	r0, #0
 80139a6:	f000 809d 	beq.w	8013ae4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 80139aa:	6823      	ldr	r3, [r4, #0]
 80139ac:	f8df b198 	ldr.w	fp, [pc, #408]	; 8013b48 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80139b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80139b2:	f8df a198 	ldr.w	sl, [pc, #408]	; 8013b4c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80139b6:	4f61      	ldr	r7, [pc, #388]	; (8013b3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80139b8:	4620      	mov	r0, r4
 80139ba:	4798      	blx	r3
 80139bc:	6823      	ldr	r3, [r4, #0]
 80139be:	4620      	mov	r0, r4
 80139c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80139c2:	4798      	blx	r3
 80139c4:	f8bb 3000 	ldrh.w	r3, [fp]
 80139c8:	9301      	str	r3, [sp, #4]
 80139ca:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80139ce:	f8ba 3000 	ldrh.w	r3, [sl]
 80139d2:	9302      	str	r3, [sp, #8]
 80139d4:	883b      	ldrh	r3, [r7, #0]
 80139d6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80139da:	9303      	str	r3, [sp, #12]
 80139dc:	4b58      	ldr	r3, [pc, #352]	; (8013b40 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80139de:	9305      	str	r3, [sp, #20]
 80139e0:	881a      	ldrh	r2, [r3, #0]
 80139e2:	9204      	str	r2, [sp, #16]
 80139e4:	4640      	mov	r0, r8
 80139e6:	f008 fb6b 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80139ea:	8038      	strh	r0, [r7, #0]
 80139ec:	4640      	mov	r0, r8
 80139ee:	f008 fb9b 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80139f2:	9b05      	ldr	r3, [sp, #20]
 80139f4:	b280      	uxth	r0, r0
 80139f6:	8018      	strh	r0, [r3, #0]
 80139f8:	4b52      	ldr	r3, [pc, #328]	; (8013b44 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80139fa:	781b      	ldrb	r3, [r3, #0]
 80139fc:	2b00      	cmp	r3, #0
 80139fe:	d174      	bne.n	8013aea <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8013a00:	883b      	ldrh	r3, [r7, #0]
 8013a02:	f8ab 3000 	strh.w	r3, [fp]
 8013a06:	f8aa 0000 	strh.w	r0, [sl]
 8013a0a:	4648      	mov	r0, r9
 8013a0c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8013a10:	f008 fac2 	bl	801bf98 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013a14:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8013a18:	2200      	movs	r2, #0
 8013a1a:	4611      	mov	r1, r2
 8013a1c:	4628      	mov	r0, r5
 8013a1e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8013a22:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8013a26:	f7ef fd61 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8013a2a:	2301      	movs	r3, #1
 8013a2c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8013a30:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8013a34:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8013a38:	2b00      	cmp	r3, #0
 8013a3a:	dd5c      	ble.n	8013af6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013a3c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8013a40:	2b00      	cmp	r3, #0
 8013a42:	dd58      	ble.n	8013af6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013a44:	462a      	mov	r2, r5
 8013a46:	ab0a      	add	r3, sp, #40	; 0x28
 8013a48:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013a4c:	6851      	ldr	r1, [r2, #4]
 8013a4e:	c303      	stmia	r3!, {r0, r1}
 8013a50:	4631      	mov	r1, r6
 8013a52:	a80a      	add	r0, sp, #40	; 0x28
 8013a54:	f7fe ff92 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 8013a58:	4b38      	ldr	r3, [pc, #224]	; (8013b3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013a5a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013a5e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8013a62:	2100      	movs	r1, #0
 8013a64:	aa0a      	add	r2, sp, #40	; 0x28
 8013a66:	4b36      	ldr	r3, [pc, #216]	; (8013b40 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013a68:	910c      	str	r1, [sp, #48]	; 0x30
 8013a6a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013a6e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013a72:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013a76:	ab08      	add	r3, sp, #32
 8013a78:	e883 0003 	stmia.w	r3, {r0, r1}
 8013a7c:	4618      	mov	r0, r3
 8013a7e:	a90c      	add	r1, sp, #48	; 0x30
 8013a80:	f7fe ff7c 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 8013a84:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8013a86:	2b00      	cmp	r3, #0
 8013a88:	d13c      	bne.n	8013b04 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8013a8a:	2000      	movs	r0, #0
 8013a8c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8013a90:	2600      	movs	r6, #0
 8013a92:	682a      	ldr	r2, [r5, #0]
 8013a94:	696b      	ldr	r3, [r5, #20]
 8013a96:	616e      	str	r6, [r5, #20]
 8013a98:	9305      	str	r3, [sp, #20]
 8013a9a:	6892      	ldr	r2, [r2, #8]
 8013a9c:	a908      	add	r1, sp, #32
 8013a9e:	4628      	mov	r0, r5
 8013aa0:	4790      	blx	r2
 8013aa2:	9b05      	ldr	r3, [sp, #20]
 8013aa4:	616b      	str	r3, [r5, #20]
 8013aa6:	4652      	mov	r2, sl
 8013aa8:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8013aac:	4649      	mov	r1, r9
 8013aae:	4628      	mov	r0, r5
 8013ab0:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8013ab4:	f7ef fd1a 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8013ab8:	4b23      	ldr	r3, [pc, #140]	; (8013b48 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8013aba:	9a01      	ldr	r2, [sp, #4]
 8013abc:	801a      	strh	r2, [r3, #0]
 8013abe:	4b23      	ldr	r3, [pc, #140]	; (8013b4c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8013ac0:	9a02      	ldr	r2, [sp, #8]
 8013ac2:	801a      	strh	r2, [r3, #0]
 8013ac4:	4b1d      	ldr	r3, [pc, #116]	; (8013b3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013ac6:	9a03      	ldr	r2, [sp, #12]
 8013ac8:	801a      	strh	r2, [r3, #0]
 8013aca:	4b1d      	ldr	r3, [pc, #116]	; (8013b40 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013acc:	9a04      	ldr	r2, [sp, #16]
 8013ace:	801a      	strh	r2, [r3, #0]
 8013ad0:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8013ad4:	6823      	ldr	r3, [r4, #0]
 8013ad6:	4620      	mov	r0, r4
 8013ad8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013ada:	4798      	blx	r3
 8013adc:	6823      	ldr	r3, [r4, #0]
 8013ade:	4620      	mov	r0, r4
 8013ae0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013ae2:	4798      	blx	r3
 8013ae4:	b00f      	add	sp, #60	; 0x3c
 8013ae6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013aea:	883b      	ldrh	r3, [r7, #0]
 8013aec:	f8ab 0000 	strh.w	r0, [fp]
 8013af0:	f8aa 3000 	strh.w	r3, [sl]
 8013af4:	e789      	b.n	8013a0a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8013af6:	462a      	mov	r2, r5
 8013af8:	ab0a      	add	r3, sp, #40	; 0x28
 8013afa:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013afe:	6851      	ldr	r1, [r2, #4]
 8013b00:	c303      	stmia	r3!, {r0, r1}
 8013b02:	e7a9      	b.n	8013a58 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8013b04:	a807      	add	r0, sp, #28
 8013b06:	f008 fc4b 	bl	801c3a0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013b0a:	4606      	mov	r6, r0
 8013b0c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8013b0e:	6803      	ldr	r3, [r0, #0]
 8013b10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b12:	4798      	blx	r3
 8013b14:	4286      	cmp	r6, r0
 8013b16:	d1b8      	bne.n	8013a8a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8013b18:	f7f1 fc1e 	bl	8005358 <_ZN8touchgfx3HAL3lcdEv>
 8013b1c:	6803      	ldr	r3, [r0, #0]
 8013b1e:	4606      	mov	r6, r0
 8013b20:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013b22:	9305      	str	r3, [sp, #20]
 8013b24:	a807      	add	r0, sp, #28
 8013b26:	f008 fc3b 	bl	801c3a0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013b2a:	9b05      	ldr	r3, [sp, #20]
 8013b2c:	4601      	mov	r1, r0
 8013b2e:	4630      	mov	r0, r6
 8013b30:	4798      	blx	r3
 8013b32:	f080 0001 	eor.w	r0, r0, #1
 8013b36:	b2c0      	uxtb	r0, r0
 8013b38:	e7a8      	b.n	8013a8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8013b3a:	bf00      	nop
 8013b3c:	20013848 	.word	0x20013848
 8013b40:	2001384a 	.word	0x2001384a
 8013b44:	2001384c 	.word	0x2001384c
 8013b48:	2001384e 	.word	0x2001384e
 8013b4c:	20013850 	.word	0x20013850

08013b50 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8013b50:	b510      	push	{r4, lr}
 8013b52:	4b07      	ldr	r3, [pc, #28]	; (8013b70 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8013b54:	781b      	ldrb	r3, [r3, #0]
 8013b56:	4604      	mov	r4, r0
 8013b58:	b13b      	cbz	r3, 8013b6a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013b5a:	6803      	ldr	r3, [r0, #0]
 8013b5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013b5e:	4798      	blx	r3
 8013b60:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8013b62:	4283      	cmp	r3, r0
 8013b64:	d101      	bne.n	8013b6a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013b66:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8013b68:	bd10      	pop	{r4, pc}
 8013b6a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8013b6c:	e7fc      	b.n	8013b68 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8013b6e:	bf00      	nop
 8013b70:	20013852 	.word	0x20013852

08013b74 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8013b74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013b78:	b08a      	sub	sp, #40	; 0x28
 8013b7a:	461d      	mov	r5, r3
 8013b7c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013b80:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013b84:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013b88:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013b8c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013b90:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013b94:	2400      	movs	r4, #0
 8013b96:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013b9a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8013b9e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013ba2:	4690      	mov	r8, r2
 8013ba4:	4607      	mov	r7, r0
 8013ba6:	9404      	str	r4, [sp, #16]
 8013ba8:	f88d 4020 	strb.w	r4, [sp, #32]
 8013bac:	f7ff ffd0 	bl	8013b50 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013bb0:	fb06 8505 	mla	r5, r6, r5, r8
 8013bb4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013bb8:	6878      	ldr	r0, [r7, #4]
 8013bba:	9505      	str	r5, [sp, #20]
 8013bbc:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013bc0:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013bc4:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8013bc8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013bcc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013bd0:	6803      	ldr	r3, [r0, #0]
 8013bd2:	a901      	add	r1, sp, #4
 8013bd4:	685b      	ldr	r3, [r3, #4]
 8013bd6:	4798      	blx	r3
 8013bd8:	b00a      	add	sp, #40	; 0x28
 8013bda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013bde <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8013bde:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013be2:	b08b      	sub	sp, #44	; 0x2c
 8013be4:	2400      	movs	r4, #0
 8013be6:	461d      	mov	r5, r3
 8013be8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013bec:	4688      	mov	r8, r1
 8013bee:	4691      	mov	r9, r2
 8013bf0:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8013bf4:	9404      	str	r4, [sp, #16]
 8013bf6:	4607      	mov	r7, r0
 8013bf8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013bfc:	f7ff ffa8 	bl	8013b50 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013c00:	fb06 9505 	mla	r5, r6, r5, r9
 8013c04:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013c08:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013c0c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013c10:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013c14:	6878      	ldr	r0, [r7, #4]
 8013c16:	9505      	str	r5, [sp, #20]
 8013c18:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013c1c:	f8ad 401c 	strh.w	r4, [sp, #28]
 8013c20:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013c24:	f8cd 8010 	str.w	r8, [sp, #16]
 8013c28:	f8ad 4020 	strh.w	r4, [sp, #32]
 8013c2c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013c30:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013c34:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013c38:	6803      	ldr	r3, [r0, #0]
 8013c3a:	a901      	add	r1, sp, #4
 8013c3c:	685b      	ldr	r3, [r3, #4]
 8013c3e:	4798      	blx	r3
 8013c40:	b00b      	add	sp, #44	; 0x2c
 8013c42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08013c48 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8013c48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013c4c:	b08a      	sub	sp, #40	; 0x28
 8013c4e:	4698      	mov	r8, r3
 8013c50:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8013c54:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8013c58:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8013c5c:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8013c60:	2300      	movs	r3, #0
 8013c62:	2d0b      	cmp	r5, #11
 8013c64:	4606      	mov	r6, r0
 8013c66:	9304      	str	r3, [sp, #16]
 8013c68:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8013c6c:	d138      	bne.n	8013ce0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8013c6e:	2380      	movs	r3, #128	; 0x80
 8013c70:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013c74:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013c78:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013c7c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013c80:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013c84:	f88d 0020 	strb.w	r0, [sp, #32]
 8013c88:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013c8c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013c90:	4630      	mov	r0, r6
 8013c92:	9203      	str	r2, [sp, #12]
 8013c94:	f7ff ff5c 	bl	8013b50 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013c98:	2c0b      	cmp	r4, #11
 8013c9a:	bf98      	it	ls
 8013c9c:	4b1b      	ldrls	r3, [pc, #108]	; (8013d0c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8013c9e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013ca2:	bf98      	it	ls
 8013ca4:	5d19      	ldrbls	r1, [r3, r4]
 8013ca6:	f8ad 701e 	strh.w	r7, [sp, #30]
 8013caa:	bf88      	it	hi
 8013cac:	2100      	movhi	r1, #0
 8013cae:	fb02 8307 	mla	r3, r2, r7, r8
 8013cb2:	10c9      	asrs	r1, r1, #3
 8013cb4:	fb01 0003 	mla	r0, r1, r3, r0
 8013cb8:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8013cbc:	9005      	str	r0, [sp, #20]
 8013cbe:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013cc2:	6870      	ldr	r0, [r6, #4]
 8013cc4:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8013cc8:	2300      	movs	r3, #0
 8013cca:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013cce:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013cd2:	6803      	ldr	r3, [r0, #0]
 8013cd4:	a901      	add	r1, sp, #4
 8013cd6:	685b      	ldr	r3, [r3, #4]
 8013cd8:	4798      	blx	r3
 8013cda:	b00a      	add	sp, #40	; 0x28
 8013cdc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013ce0:	2d02      	cmp	r5, #2
 8013ce2:	d109      	bne.n	8013cf8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8013ce4:	28ff      	cmp	r0, #255	; 0xff
 8013ce6:	d105      	bne.n	8013cf4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8013ce8:	f1bc 0f00 	cmp.w	ip, #0
 8013cec:	bf14      	ite	ne
 8013cee:	2340      	movne	r3, #64	; 0x40
 8013cf0:	2320      	moveq	r3, #32
 8013cf2:	e7bd      	b.n	8013c70 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013cf4:	2340      	movs	r3, #64	; 0x40
 8013cf6:	e7bb      	b.n	8013c70 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013cf8:	28ff      	cmp	r0, #255	; 0xff
 8013cfa:	d105      	bne.n	8013d08 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8013cfc:	f1bc 0f00 	cmp.w	ip, #0
 8013d00:	bf14      	ite	ne
 8013d02:	2304      	movne	r3, #4
 8013d04:	2301      	moveq	r3, #1
 8013d06:	e7b3      	b.n	8013c70 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013d08:	2304      	movs	r3, #4
 8013d0a:	e7b1      	b.n	8013c70 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013d0c:	080315cc 	.word	0x080315cc

08013d10 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8013d10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d14:	b08b      	sub	sp, #44	; 0x2c
 8013d16:	461d      	mov	r5, r3
 8013d18:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8013d1c:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8013d20:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8013d24:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013d28:	bf14      	ite	ne
 8013d2a:	2308      	movne	r3, #8
 8013d2c:	2302      	moveq	r3, #2
 8013d2e:	2400      	movs	r4, #0
 8013d30:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013d34:	4688      	mov	r8, r1
 8013d36:	4693      	mov	fp, r2
 8013d38:	9404      	str	r4, [sp, #16]
 8013d3a:	4607      	mov	r7, r0
 8013d3c:	f7ff ff08 	bl	8013b50 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013d40:	2e0b      	cmp	r6, #11
 8013d42:	bf98      	it	ls
 8013d44:	4b15      	ldrls	r3, [pc, #84]	; (8013d9c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8013d46:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013d4a:	bf98      	it	ls
 8013d4c:	5d9c      	ldrbls	r4, [r3, r6]
 8013d4e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013d52:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013d56:	fb05 b50a 	mla	r5, r5, sl, fp
 8013d5a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013d5e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013d62:	10e4      	asrs	r4, r4, #3
 8013d64:	fb04 0405 	mla	r4, r4, r5, r0
 8013d68:	2300      	movs	r3, #0
 8013d6a:	6878      	ldr	r0, [r7, #4]
 8013d6c:	9405      	str	r4, [sp, #20]
 8013d6e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013d72:	f8ad a01e 	strh.w	sl, [sp, #30]
 8013d76:	f8cd 8010 	str.w	r8, [sp, #16]
 8013d7a:	f88d 9020 	strb.w	r9, [sp, #32]
 8013d7e:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8013d82:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013d86:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8013d8a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8013d8e:	6803      	ldr	r3, [r0, #0]
 8013d90:	a901      	add	r1, sp, #4
 8013d92:	685b      	ldr	r3, [r3, #4]
 8013d94:	4798      	blx	r3
 8013d96:	b00b      	add	sp, #44	; 0x2c
 8013d98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d9c:	080315cc 	.word	0x080315cc

08013da0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8013da0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013da4:	461e      	mov	r6, r3
 8013da6:	4b0a      	ldr	r3, [pc, #40]	; (8013dd0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8013da8:	460f      	mov	r7, r1
 8013daa:	881d      	ldrh	r5, [r3, #0]
 8013dac:	4690      	mov	r8, r2
 8013dae:	f7f1 fad3 	bl	8005358 <_ZN8touchgfx3HAL3lcdEv>
 8013db2:	6803      	ldr	r3, [r0, #0]
 8013db4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013db6:	4798      	blx	r3
 8013db8:	280b      	cmp	r0, #11
 8013dba:	bf9a      	itte	ls
 8013dbc:	4b05      	ldrls	r3, [pc, #20]	; (8013dd4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8013dbe:	5c1c      	ldrbls	r4, [r3, r0]
 8013dc0:	2400      	movhi	r4, #0
 8013dc2:	fb08 7005 	mla	r0, r8, r5, r7
 8013dc6:	10e4      	asrs	r4, r4, #3
 8013dc8:	fb04 6000 	mla	r0, r4, r0, r6
 8013dcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013dd0:	2001384e 	.word	0x2001384e
 8013dd4:	080315cc 	.word	0x080315cc

08013dd8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8013dd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013dda:	b08b      	sub	sp, #44	; 0x2c
 8013ddc:	461f      	mov	r7, r3
 8013dde:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013de2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013de6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013dea:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013dee:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013df2:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013df6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013dfa:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013dfe:	2500      	movs	r5, #0
 8013e00:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013e04:	f88d 3020 	strb.w	r3, [sp, #32]
 8013e08:	4604      	mov	r4, r0
 8013e0a:	4616      	mov	r6, r2
 8013e0c:	9504      	str	r5, [sp, #16]
 8013e0e:	f7ff fe9f 	bl	8013b50 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013e12:	463a      	mov	r2, r7
 8013e14:	4631      	mov	r1, r6
 8013e16:	4603      	mov	r3, r0
 8013e18:	4620      	mov	r0, r4
 8013e1a:	f7ff ffc1 	bl	8013da0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013e1e:	4b0e      	ldr	r3, [pc, #56]	; (8013e58 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8013e20:	9005      	str	r0, [sp, #20]
 8013e22:	881b      	ldrh	r3, [r3, #0]
 8013e24:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013e28:	f7f1 fa96 	bl	8005358 <_ZN8touchgfx3HAL3lcdEv>
 8013e2c:	6803      	ldr	r3, [r0, #0]
 8013e2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013e30:	4798      	blx	r3
 8013e32:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013e34:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8013e38:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8013e3c:	9304      	str	r3, [sp, #16]
 8013e3e:	6860      	ldr	r0, [r4, #4]
 8013e40:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013e44:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013e48:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8013e4c:	6803      	ldr	r3, [r0, #0]
 8013e4e:	a901      	add	r1, sp, #4
 8013e50:	685b      	ldr	r3, [r3, #4]
 8013e52:	4798      	blx	r3
 8013e54:	b00b      	add	sp, #44	; 0x2c
 8013e56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013e58:	2001384e 	.word	0x2001384e

08013e5c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8013e5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013e5e:	b08d      	sub	sp, #52	; 0x34
 8013e60:	466b      	mov	r3, sp
 8013e62:	e883 0006 	stmia.w	r3, {r1, r2}
 8013e66:	2300      	movs	r3, #0
 8013e68:	9306      	str	r3, [sp, #24]
 8013e6a:	6803      	ldr	r3, [r0, #0]
 8013e6c:	f8bd 6000 	ldrh.w	r6, [sp]
 8013e70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013e72:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8013e76:	2501      	movs	r5, #1
 8013e78:	9503      	str	r5, [sp, #12]
 8013e7a:	4604      	mov	r4, r0
 8013e7c:	4798      	blx	r3
 8013e7e:	463a      	mov	r2, r7
 8013e80:	4631      	mov	r1, r6
 8013e82:	4603      	mov	r3, r0
 8013e84:	4620      	mov	r0, r4
 8013e86:	f7ff ff8b 	bl	8013da0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013e8a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013e8c:	9307      	str	r3, [sp, #28]
 8013e8e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013e92:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013e96:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8013e9a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8013e9e:	4b0f      	ldr	r3, [pc, #60]	; (8013edc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8013ea0:	9004      	str	r0, [sp, #16]
 8013ea2:	881b      	ldrh	r3, [r3, #0]
 8013ea4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8013ea8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8013eac:	f7f1 fa54 	bl	8005358 <_ZN8touchgfx3HAL3lcdEv>
 8013eb0:	6803      	ldr	r3, [r0, #0]
 8013eb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013eb4:	4798      	blx	r3
 8013eb6:	23ff      	movs	r3, #255	; 0xff
 8013eb8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8013ebc:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013ec0:	6860      	ldr	r0, [r4, #4]
 8013ec2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8013ec6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8013eca:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8013ece:	6803      	ldr	r3, [r0, #0]
 8013ed0:	a903      	add	r1, sp, #12
 8013ed2:	685b      	ldr	r3, [r3, #4]
 8013ed4:	4798      	blx	r3
 8013ed6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8013ed8:	b00d      	add	sp, #52	; 0x34
 8013eda:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013edc:	2001384e 	.word	0x2001384e

08013ee0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8013ee0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013ee4:	b08c      	sub	sp, #48	; 0x30
 8013ee6:	461e      	mov	r6, r3
 8013ee8:	466d      	mov	r5, sp
 8013eea:	2300      	movs	r3, #0
 8013eec:	e885 0006 	stmia.w	r5, {r1, r2}
 8013ef0:	9306      	str	r3, [sp, #24]
 8013ef2:	6803      	ldr	r3, [r0, #0]
 8013ef4:	f8bd 7000 	ldrh.w	r7, [sp]
 8013ef8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013efa:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8013efe:	2501      	movs	r5, #1
 8013f00:	9503      	str	r5, [sp, #12]
 8013f02:	4604      	mov	r4, r0
 8013f04:	4798      	blx	r3
 8013f06:	4642      	mov	r2, r8
 8013f08:	4639      	mov	r1, r7
 8013f0a:	4603      	mov	r3, r0
 8013f0c:	4620      	mov	r0, r4
 8013f0e:	f7ff ff47 	bl	8013da0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013f12:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013f16:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013f1a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8013f1e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8013f22:	4b11      	ldr	r3, [pc, #68]	; (8013f68 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8013f24:	9004      	str	r0, [sp, #16]
 8013f26:	881b      	ldrh	r3, [r3, #0]
 8013f28:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8013f2c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013f2e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8013f32:	9607      	str	r6, [sp, #28]
 8013f34:	f7f1 fa10 	bl	8005358 <_ZN8touchgfx3HAL3lcdEv>
 8013f38:	6803      	ldr	r3, [r0, #0]
 8013f3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013f3c:	4798      	blx	r3
 8013f3e:	23ff      	movs	r3, #255	; 0xff
 8013f40:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8013f44:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013f48:	6860      	ldr	r0, [r4, #4]
 8013f4a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8013f4e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8013f52:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8013f56:	6803      	ldr	r3, [r0, #0]
 8013f58:	a903      	add	r1, sp, #12
 8013f5a:	685b      	ldr	r3, [r3, #4]
 8013f5c:	4798      	blx	r3
 8013f5e:	4630      	mov	r0, r6
 8013f60:	b00c      	add	sp, #48	; 0x30
 8013f62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f66:	bf00      	nop
 8013f68:	2001384e 	.word	0x2001384e

08013f6c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8013f6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f6e:	b085      	sub	sp, #20
 8013f70:	ac02      	add	r4, sp, #8
 8013f72:	e884 0006 	stmia.w	r4, {r1, r2}
 8013f76:	4605      	mov	r5, r0
 8013f78:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8013f7c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8013f80:	f7ff fde6 	bl	8013b50 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013f84:	463a      	mov	r2, r7
 8013f86:	4603      	mov	r3, r0
 8013f88:	4631      	mov	r1, r6
 8013f8a:	4628      	mov	r0, r5
 8013f8c:	f7ff ff08 	bl	8013da0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013f90:	4a05      	ldr	r2, [pc, #20]	; (8013fa8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8013f92:	682b      	ldr	r3, [r5, #0]
 8013f94:	8812      	ldrh	r2, [r2, #0]
 8013f96:	9200      	str	r2, [sp, #0]
 8013f98:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8013f9a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8013f9e:	4603      	mov	r3, r0
 8013fa0:	4628      	mov	r0, r5
 8013fa2:	47b0      	blx	r6
 8013fa4:	b005      	add	sp, #20
 8013fa6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013fa8:	2001384e 	.word	0x2001384e

08013fac <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8013fac:	b570      	push	{r4, r5, r6, lr}
 8013fae:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8013fb2:	4604      	mov	r4, r0
 8013fb4:	b19b      	cbz	r3, 8013fde <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8013fb6:	2002      	movs	r0, #2
 8013fb8:	f7ee fcf0 	bl	800299c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8013fbc:	2300      	movs	r3, #0
 8013fbe:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8013fc2:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8013fc6:	6823      	ldr	r3, [r4, #0]
 8013fc8:	4620      	mov	r0, r4
 8013fca:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8013fce:	f7ff fdbf 	bl	8013b50 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013fd2:	462b      	mov	r3, r5
 8013fd4:	4601      	mov	r1, r0
 8013fd6:	4620      	mov	r0, r4
 8013fd8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013fdc:	4718      	bx	r3
 8013fde:	bd70      	pop	{r4, r5, r6, pc}

08013fe0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8013fe0:	b538      	push	{r3, r4, r5, lr}
 8013fe2:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8013fe6:	428b      	cmp	r3, r1
 8013fe8:	4604      	mov	r4, r0
 8013fea:	460d      	mov	r5, r1
 8013fec:	d006      	beq.n	8013ffc <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8013fee:	6803      	ldr	r3, [r0, #0]
 8013ff0:	b929      	cbnz	r1, 8013ffe <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8013ff2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013ff6:	4798      	blx	r3
 8013ff8:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8013ffc:	bd38      	pop	{r3, r4, r5, pc}
 8013ffe:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8014002:	e7f8      	b.n	8013ff6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08014004 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8014004:	b510      	push	{r4, lr}
 8014006:	4b0d      	ldr	r3, [pc, #52]	; (801403c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8014008:	781b      	ldrb	r3, [r3, #0]
 801400a:	4604      	mov	r4, r0
 801400c:	b95b      	cbnz	r3, 8014026 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801400e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8014012:	2b02      	cmp	r3, #2
 8014014:	d007      	beq.n	8014026 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8014016:	6840      	ldr	r0, [r0, #4]
 8014018:	f000 f92c 	bl	8014274 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 801401c:	b118      	cbz	r0, 8014026 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801401e:	6862      	ldr	r2, [r4, #4]
 8014020:	7a53      	ldrb	r3, [r2, #9]
 8014022:	2b00      	cmp	r3, #0
 8014024:	d0fc      	beq.n	8014020 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8014026:	f7ee fdf1 	bl	8002c0c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801402a:	4620      	mov	r0, r4
 801402c:	2100      	movs	r1, #0
 801402e:	f7ff ffd7 	bl	8013fe0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8014032:	4620      	mov	r0, r4
 8014034:	f7ff fd8c 	bl	8013b50 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014038:	bd10      	pop	{r4, pc}
 801403a:	bf00      	nop
 801403c:	20013852 	.word	0x20013852

08014040 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8014040:	b570      	push	{r4, r5, r6, lr}
 8014042:	4604      	mov	r4, r0
 8014044:	6803      	ldr	r3, [r0, #0]
 8014046:	b919      	cbnz	r1, 8014050 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8014048:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801404a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801404e:	4718      	bx	r3
 8014050:	2200      	movs	r2, #0
 8014052:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8014056:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 801405a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801405c:	4798      	blx	r3
 801405e:	6863      	ldr	r3, [r4, #4]
 8014060:	2101      	movs	r1, #1
 8014062:	4605      	mov	r5, r0
 8014064:	7299      	strb	r1, [r3, #10]
 8014066:	4620      	mov	r0, r4
 8014068:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 801406c:	f7ff ffb8 	bl	8013fe0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8014070:	4628      	mov	r0, r5
 8014072:	bd70      	pop	{r4, r5, r6, pc}

08014074 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8014074:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8014078:	1a13      	subs	r3, r2, r0
 801407a:	4258      	negs	r0, r3
 801407c:	4158      	adcs	r0, r3
 801407e:	4770      	bx	lr

08014080 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8014080:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8014084:	1a9b      	subs	r3, r3, r2
 8014086:	2b00      	cmp	r3, #0
 8014088:	bfdc      	itt	le
 801408a:	6882      	ldrle	r2, [r0, #8]
 801408c:	189b      	addle	r3, r3, r2
 801408e:	2b01      	cmp	r3, #1
 8014090:	bfcc      	ite	gt
 8014092:	2000      	movgt	r0, #0
 8014094:	2001      	movle	r0, #1
 8014096:	4770      	bx	lr

08014098 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8014098:	6902      	ldr	r2, [r0, #16]
 801409a:	6843      	ldr	r3, [r0, #4]
 801409c:	2024      	movs	r0, #36	; 0x24
 801409e:	fb00 3002 	mla	r0, r0, r2, r3
 80140a2:	4770      	bx	lr

080140a4 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80140a4:	6803      	ldr	r3, [r0, #0]
 80140a6:	691b      	ldr	r3, [r3, #16]
 80140a8:	4718      	bx	r3

080140aa <_ZN8touchgfx13DMA_Interface7executeEv>:
 80140aa:	b570      	push	{r4, r5, r6, lr}
 80140ac:	2301      	movs	r3, #1
 80140ae:	7203      	strb	r3, [r0, #8]
 80140b0:	4604      	mov	r4, r0
 80140b2:	6840      	ldr	r0, [r0, #4]
 80140b4:	6803      	ldr	r3, [r0, #0]
 80140b6:	699b      	ldr	r3, [r3, #24]
 80140b8:	4798      	blx	r3
 80140ba:	6803      	ldr	r3, [r0, #0]
 80140bc:	2b40      	cmp	r3, #64	; 0x40
 80140be:	4605      	mov	r5, r0
 80140c0:	d00c      	beq.n	80140dc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80140c2:	d810      	bhi.n	80140e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80140c4:	2b04      	cmp	r3, #4
 80140c6:	d01d      	beq.n	8014104 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80140c8:	d804      	bhi.n	80140d4 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80140ca:	2b01      	cmp	r3, #1
 80140cc:	d006      	beq.n	80140dc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80140ce:	2b02      	cmp	r3, #2
 80140d0:	d02c      	beq.n	801412c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80140d2:	bd70      	pop	{r4, r5, r6, pc}
 80140d4:	2b08      	cmp	r3, #8
 80140d6:	d01d      	beq.n	8014114 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80140d8:	2b20      	cmp	r3, #32
 80140da:	d1fa      	bne.n	80140d2 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80140dc:	6823      	ldr	r3, [r4, #0]
 80140de:	4620      	mov	r0, r4
 80140e0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80140e2:	4798      	blx	r3
 80140e4:	e013      	b.n	801410e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80140e6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80140ea:	d0f7      	beq.n	80140dc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80140ec:	d804      	bhi.n	80140f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 80140ee:	2b80      	cmp	r3, #128	; 0x80
 80140f0:	d0f4      	beq.n	80140dc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80140f2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80140f6:	e7f0      	b.n	80140da <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 80140f8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80140fc:	d0ee      	beq.n	80140dc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80140fe:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8014102:	e7e5      	b.n	80140d0 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8014104:	6823      	ldr	r3, [r4, #0]
 8014106:	7f01      	ldrb	r1, [r0, #28]
 8014108:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801410a:	4620      	mov	r0, r4
 801410c:	4798      	blx	r3
 801410e:	6823      	ldr	r3, [r4, #0]
 8014110:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014112:	e006      	b.n	8014122 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8014114:	6823      	ldr	r3, [r4, #0]
 8014116:	7f01      	ldrb	r1, [r0, #28]
 8014118:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801411a:	4620      	mov	r0, r4
 801411c:	4798      	blx	r3
 801411e:	6823      	ldr	r3, [r4, #0]
 8014120:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8014122:	4629      	mov	r1, r5
 8014124:	4620      	mov	r0, r4
 8014126:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801412a:	4718      	bx	r3
 801412c:	6823      	ldr	r3, [r4, #0]
 801412e:	4620      	mov	r0, r4
 8014130:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014132:	4798      	blx	r3
 8014134:	e7f3      	b.n	801411e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08014136 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8014136:	4770      	bx	lr

08014138 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8014138:	4770      	bx	lr

0801413a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 801413a:	4770      	bx	lr

0801413c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 801413c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8014140:	1ad2      	subs	r2, r2, r3
 8014142:	2a00      	cmp	r2, #0
 8014144:	b510      	push	{r4, lr}
 8014146:	bfdc      	itt	le
 8014148:	6884      	ldrle	r4, [r0, #8]
 801414a:	1912      	addle	r2, r2, r4
 801414c:	2a01      	cmp	r2, #1
 801414e:	dd16      	ble.n	801417e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8014150:	6842      	ldr	r2, [r0, #4]
 8014152:	2424      	movs	r4, #36	; 0x24
 8014154:	fb04 2303 	mla	r3, r4, r3, r2
 8014158:	f101 0220 	add.w	r2, r1, #32
 801415c:	f851 4b04 	ldr.w	r4, [r1], #4
 8014160:	f843 4b04 	str.w	r4, [r3], #4
 8014164:	4291      	cmp	r1, r2
 8014166:	d1f9      	bne.n	801415c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8014168:	780a      	ldrb	r2, [r1, #0]
 801416a:	701a      	strb	r2, [r3, #0]
 801416c:	68c3      	ldr	r3, [r0, #12]
 801416e:	6882      	ldr	r2, [r0, #8]
 8014170:	f3bf 8f5b 	dmb	ish
 8014174:	3301      	adds	r3, #1
 8014176:	429a      	cmp	r2, r3
 8014178:	bfd8      	it	le
 801417a:	1a9b      	suble	r3, r3, r2
 801417c:	60c3      	str	r3, [r0, #12]
 801417e:	bd10      	pop	{r4, pc}

08014180 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8014180:	6903      	ldr	r3, [r0, #16]
 8014182:	6882      	ldr	r2, [r0, #8]
 8014184:	f3bf 8f5b 	dmb	ish
 8014188:	3301      	adds	r3, #1
 801418a:	429a      	cmp	r2, r3
 801418c:	bfd8      	it	le
 801418e:	1a9b      	suble	r3, r3, r2
 8014190:	6103      	str	r3, [r0, #16]
 8014192:	4770      	bx	lr

08014194 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8014194:	b570      	push	{r4, r5, r6, lr}
 8014196:	4604      	mov	r4, r0
 8014198:	460e      	mov	r6, r1
 801419a:	6860      	ldr	r0, [r4, #4]
 801419c:	6803      	ldr	r3, [r0, #0]
 801419e:	685b      	ldr	r3, [r3, #4]
 80141a0:	4798      	blx	r3
 80141a2:	2800      	cmp	r0, #0
 80141a4:	d1f9      	bne.n	801419a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80141a6:	4d0d      	ldr	r5, [pc, #52]	; (80141dc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80141a8:	6828      	ldr	r0, [r5, #0]
 80141aa:	6803      	ldr	r3, [r0, #0]
 80141ac:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80141ae:	4798      	blx	r3
 80141b0:	f7ee fd3a 	bl	8002c28 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80141b4:	6828      	ldr	r0, [r5, #0]
 80141b6:	2101      	movs	r1, #1
 80141b8:	f7ff ff12 	bl	8013fe0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80141bc:	6860      	ldr	r0, [r4, #4]
 80141be:	6803      	ldr	r3, [r0, #0]
 80141c0:	4631      	mov	r1, r6
 80141c2:	689b      	ldr	r3, [r3, #8]
 80141c4:	4798      	blx	r3
 80141c6:	6823      	ldr	r3, [r4, #0]
 80141c8:	4620      	mov	r0, r4
 80141ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80141cc:	4798      	blx	r3
 80141ce:	6828      	ldr	r0, [r5, #0]
 80141d0:	6803      	ldr	r3, [r0, #0]
 80141d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80141d6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80141d8:	4718      	bx	r3
 80141da:	bf00      	nop
 80141dc:	20013854 	.word	0x20013854

080141e0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80141e0:	b508      	push	{r3, lr}
 80141e2:	f7ee fd13 	bl	8002c0c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80141e6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80141ea:	f7ee bd17 	b.w	8002c1c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080141ee <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 80141ee:	b510      	push	{r4, lr}
 80141f0:	2114      	movs	r1, #20
 80141f2:	4604      	mov	r4, r0
 80141f4:	f018 fbfd 	bl	802c9f2 <_ZdlPvj>
 80141f8:	4620      	mov	r0, r4
 80141fa:	bd10      	pop	{r4, pc}

080141fc <_ZN8touchgfx13DMA_Interface5startEv>:
 80141fc:	b510      	push	{r4, lr}
 80141fe:	4604      	mov	r4, r0
 8014200:	6840      	ldr	r0, [r0, #4]
 8014202:	6803      	ldr	r3, [r0, #0]
 8014204:	681b      	ldr	r3, [r3, #0]
 8014206:	4798      	blx	r3
 8014208:	b948      	cbnz	r0, 801421e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801420a:	7a63      	ldrb	r3, [r4, #9]
 801420c:	b13b      	cbz	r3, 801421e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801420e:	7a23      	ldrb	r3, [r4, #8]
 8014210:	b92b      	cbnz	r3, 801421e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8014212:	6823      	ldr	r3, [r4, #0]
 8014214:	4620      	mov	r0, r4
 8014216:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014218:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801421c:	4718      	bx	r3
 801421e:	bd10      	pop	{r4, pc}

08014220 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8014220:	b570      	push	{r4, r5, r6, lr}
 8014222:	4604      	mov	r4, r0
 8014224:	6840      	ldr	r0, [r0, #4]
 8014226:	6803      	ldr	r3, [r0, #0]
 8014228:	681b      	ldr	r3, [r3, #0]
 801422a:	4798      	blx	r3
 801422c:	4605      	mov	r5, r0
 801422e:	b930      	cbnz	r0, 801423e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8014230:	7a23      	ldrb	r3, [r4, #8]
 8014232:	b123      	cbz	r3, 801423e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8014234:	6860      	ldr	r0, [r4, #4]
 8014236:	6803      	ldr	r3, [r0, #0]
 8014238:	695b      	ldr	r3, [r3, #20]
 801423a:	4798      	blx	r3
 801423c:	7225      	strb	r5, [r4, #8]
 801423e:	6860      	ldr	r0, [r4, #4]
 8014240:	6803      	ldr	r3, [r0, #0]
 8014242:	681b      	ldr	r3, [r3, #0]
 8014244:	4798      	blx	r3
 8014246:	b928      	cbnz	r0, 8014254 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8014248:	6823      	ldr	r3, [r4, #0]
 801424a:	4620      	mov	r0, r4
 801424c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801424e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014252:	4718      	bx	r3
 8014254:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014258:	f7ee bcee 	b.w	8002c38 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0801425c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 801425c:	b510      	push	{r4, lr}
 801425e:	4c04      	ldr	r4, [pc, #16]	; (8014270 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8014260:	6082      	str	r2, [r0, #8]
 8014262:	2200      	movs	r2, #0
 8014264:	e9c0 4100 	strd	r4, r1, [r0]
 8014268:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801426c:	bd10      	pop	{r4, pc}
 801426e:	bf00      	nop
 8014270:	080315e0 	.word	0x080315e0

08014274 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8014274:	6840      	ldr	r0, [r0, #4]
 8014276:	6803      	ldr	r3, [r0, #0]
 8014278:	681b      	ldr	r3, [r3, #0]
 801427a:	4718      	bx	r3

0801427c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801427c:	4b06      	ldr	r3, [pc, #24]	; (8014298 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 801427e:	60c1      	str	r1, [r0, #12]
 8014280:	094a      	lsrs	r2, r1, #5
 8014282:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8014286:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801428a:	4313      	orrs	r3, r2
 801428c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8014290:	4319      	orrs	r1, r3
 8014292:	8201      	strh	r1, [r0, #16]
 8014294:	4770      	bx	lr
 8014296:	bf00      	nop
 8014298:	fffff800 	.word	0xfffff800

0801429c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801429c:	f1a0 0008 	sub.w	r0, r0, #8
 80142a0:	e7ec      	b.n	801427c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 80142a2:	bf00      	nop

080142a4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 80142a4:	b508      	push	{r3, lr}
 80142a6:	4b05      	ldr	r3, [pc, #20]	; (80142bc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80142a8:	6818      	ldr	r0, [r3, #0]
 80142aa:	6803      	ldr	r3, [r0, #0]
 80142ac:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80142b0:	4798      	blx	r3
 80142b2:	1e43      	subs	r3, r0, #1
 80142b4:	4258      	negs	r0, r3
 80142b6:	4158      	adcs	r0, r3
 80142b8:	bd08      	pop	{r3, pc}
 80142ba:	bf00      	nop
 80142bc:	20013854 	.word	0x20013854

080142c0 <_ZN8touchgfx13PainterRGB565D1Ev>:
 80142c0:	4770      	bx	lr

080142c2 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 80142c2:	3808      	subs	r0, #8
 80142c4:	4770      	bx	lr

080142c6 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 80142c6:	b430      	push	{r4, r5}
 80142c8:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 80142cc:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 80142d0:	8a02      	ldrh	r2, [r0, #16]
 80142d2:	9202      	str	r2, [sp, #8]
 80142d4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80142d8:	68c2      	ldr	r2, [r0, #12]
 80142da:	4629      	mov	r1, r5
 80142dc:	4620      	mov	r0, r4
 80142de:	bc30      	pop	{r4, r5}
 80142e0:	f7ee bf6e 	b.w	80031c0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

080142e4 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 80142e4:	f7ee bf6a 	b.w	80031bc <_ZN8touchgfx5paint8tearDownEv>

080142e8 <_ZN8touchgfx13PainterRGB565D0Ev>:
 80142e8:	b510      	push	{r4, lr}
 80142ea:	2114      	movs	r1, #20
 80142ec:	4604      	mov	r4, r0
 80142ee:	f018 fb80 	bl	802c9f2 <_ZdlPvj>
 80142f2:	4620      	mov	r0, r4
 80142f4:	bd10      	pop	{r4, pc}

080142f6 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 80142f6:	f1a0 0008 	sub.w	r0, r0, #8
 80142fa:	e7f5      	b.n	80142e8 <_ZN8touchgfx13PainterRGB565D0Ev>

080142fc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 80142fc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80142fe:	6803      	ldr	r3, [r0, #0]
 8014300:	460d      	mov	r5, r1
 8014302:	4604      	mov	r4, r0
 8014304:	4601      	mov	r1, r0
 8014306:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014308:	a802      	add	r0, sp, #8
 801430a:	4798      	blx	r3
 801430c:	6828      	ldr	r0, [r5, #0]
 801430e:	6869      	ldr	r1, [r5, #4]
 8014310:	466b      	mov	r3, sp
 8014312:	c303      	stmia	r3!, {r0, r1}
 8014314:	4668      	mov	r0, sp
 8014316:	4619      	mov	r1, r3
 8014318:	f7fe fb30 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 801431c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801431e:	b188      	cbz	r0, 8014344 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014320:	6803      	ldr	r3, [r0, #0]
 8014322:	1d21      	adds	r1, r4, #4
 8014324:	68db      	ldr	r3, [r3, #12]
 8014326:	4798      	blx	r3
 8014328:	b160      	cbz	r0, 8014344 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801432a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801432e:	2b00      	cmp	r3, #0
 8014330:	dd08      	ble.n	8014344 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8014332:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8014336:	2d00      	cmp	r5, #0
 8014338:	dd04      	ble.n	8014344 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801433a:	4a2b      	ldr	r2, [pc, #172]	; (80143e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 801433c:	7812      	ldrb	r2, [r2, #0]
 801433e:	b11a      	cbz	r2, 8014348 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8014340:	2a01      	cmp	r2, #1
 8014342:	d029      	beq.n	8014398 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8014344:	b004      	add	sp, #16
 8014346:	bd70      	pop	{r4, r5, r6, pc}
 8014348:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801434c:	441d      	add	r5, r3
 801434e:	b2ad      	uxth	r5, r5
 8014350:	b22e      	sxth	r6, r5
 8014352:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8014356:	42b3      	cmp	r3, r6
 8014358:	daf4      	bge.n	8014344 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801435a:	6823      	ldr	r3, [r4, #0]
 801435c:	4669      	mov	r1, sp
 801435e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014360:	4620      	mov	r0, r4
 8014362:	4798      	blx	r3
 8014364:	b940      	cbnz	r0, 8014378 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8014366:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801436a:	2b01      	cmp	r3, #1
 801436c:	d004      	beq.n	8014378 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801436e:	3301      	adds	r3, #1
 8014370:	105b      	asrs	r3, r3, #1
 8014372:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014376:	e7f0      	b.n	801435a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8014378:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801437c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014380:	4413      	add	r3, r2
 8014382:	b29b      	uxth	r3, r3
 8014384:	441a      	add	r2, r3
 8014386:	b212      	sxth	r2, r2
 8014388:	4296      	cmp	r6, r2
 801438a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801438e:	dae0      	bge.n	8014352 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014390:	1aeb      	subs	r3, r5, r3
 8014392:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014396:	e7dc      	b.n	8014352 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014398:	f8bd 5000 	ldrh.w	r5, [sp]
 801439c:	441d      	add	r5, r3
 801439e:	b2ad      	uxth	r5, r5
 80143a0:	b22e      	sxth	r6, r5
 80143a2:	f9bd 3000 	ldrsh.w	r3, [sp]
 80143a6:	42b3      	cmp	r3, r6
 80143a8:	dacc      	bge.n	8014344 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80143aa:	6823      	ldr	r3, [r4, #0]
 80143ac:	4669      	mov	r1, sp
 80143ae:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80143b0:	4620      	mov	r0, r4
 80143b2:	4798      	blx	r3
 80143b4:	b940      	cbnz	r0, 80143c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80143b6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80143ba:	2b01      	cmp	r3, #1
 80143bc:	d004      	beq.n	80143c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80143be:	3301      	adds	r3, #1
 80143c0:	105b      	asrs	r3, r3, #1
 80143c2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80143c6:	e7f0      	b.n	80143aa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 80143c8:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 80143cc:	f8bd 3000 	ldrh.w	r3, [sp]
 80143d0:	4413      	add	r3, r2
 80143d2:	b29b      	uxth	r3, r3
 80143d4:	441a      	add	r2, r3
 80143d6:	b212      	sxth	r2, r2
 80143d8:	4296      	cmp	r6, r2
 80143da:	f8ad 3000 	strh.w	r3, [sp]
 80143de:	dae0      	bge.n	80143a2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80143e0:	1aeb      	subs	r3, r5, r3
 80143e2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80143e6:	e7dc      	b.n	80143a2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80143e8:	2001384c 	.word	0x2001384c

080143ec <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 80143ec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80143ee:	6803      	ldr	r3, [r0, #0]
 80143f0:	4604      	mov	r4, r0
 80143f2:	4601      	mov	r1, r0
 80143f4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80143f6:	4668      	mov	r0, sp
 80143f8:	4798      	blx	r3
 80143fa:	2100      	movs	r1, #0
 80143fc:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8014400:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014404:	9102      	str	r1, [sp, #8]
 8014406:	4668      	mov	r0, sp
 8014408:	a902      	add	r1, sp, #8
 801440a:	f8ad 200c 	strh.w	r2, [sp, #12]
 801440e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8014412:	f7fe fab3 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 8014416:	6823      	ldr	r3, [r4, #0]
 8014418:	4669      	mov	r1, sp
 801441a:	691b      	ldr	r3, [r3, #16]
 801441c:	4620      	mov	r0, r4
 801441e:	4798      	blx	r3
 8014420:	b004      	add	sp, #16
 8014422:	bd10      	pop	{r4, pc}

08014424 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8014424:	2101      	movs	r1, #1
 8014426:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801442a:	490b      	ldr	r1, [pc, #44]	; (8014458 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 801442c:	6001      	str	r1, [r0, #0]
 801442e:	2200      	movs	r2, #0
 8014430:	21ff      	movs	r1, #255	; 0xff
 8014432:	8082      	strh	r2, [r0, #4]
 8014434:	80c2      	strh	r2, [r0, #6]
 8014436:	8102      	strh	r2, [r0, #8]
 8014438:	8142      	strh	r2, [r0, #10]
 801443a:	8182      	strh	r2, [r0, #12]
 801443c:	81c2      	strh	r2, [r0, #14]
 801443e:	8202      	strh	r2, [r0, #16]
 8014440:	8242      	strh	r2, [r0, #18]
 8014442:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8014446:	61c2      	str	r2, [r0, #28]
 8014448:	8402      	strh	r2, [r0, #32]
 801444a:	8442      	strh	r2, [r0, #34]	; 0x22
 801444c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8014450:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8014454:	6282      	str	r2, [r0, #40]	; 0x28
 8014456:	4770      	bx	lr
 8014458:	0803163c 	.word	0x0803163c

0801445c <_ZNK8touchgfx4Line14getMinimalRectEv>:
 801445c:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8014460:	4602      	mov	r2, r0
 8014462:	cb03      	ldmia	r3!, {r0, r1}
 8014464:	6010      	str	r0, [r2, #0]
 8014466:	6051      	str	r1, [r2, #4]
 8014468:	4610      	mov	r0, r2
 801446a:	4770      	bx	lr

0801446c <_ZN8touchgfx4LineD1Ev>:
 801446c:	4770      	bx	lr

0801446e <_ZN8touchgfx4LineD0Ev>:
 801446e:	b510      	push	{r4, lr}
 8014470:	2170      	movs	r1, #112	; 0x70
 8014472:	4604      	mov	r4, r0
 8014474:	f018 fabd 	bl	802c9f2 <_ZdlPvj>
 8014478:	4620      	mov	r0, r4
 801447a:	bd10      	pop	{r4, pc}

0801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 801447c:	b507      	push	{r0, r1, r2, lr}
 801447e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8014482:	ab01      	add	r3, sp, #4
 8014484:	6809      	ldr	r1, [r1, #0]
 8014486:	6800      	ldr	r0, [r0, #0]
 8014488:	f005 fc80 	bl	8019d8c <_ZN8touchgfx6muldivElllRl>
 801448c:	b003      	add	sp, #12
 801448e:	f85d fb04 	ldr.w	pc, [sp], #4

08014492 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8014492:	6800      	ldr	r0, [r0, #0]
 8014494:	2800      	cmp	r0, #0
 8014496:	bfb9      	ittee	lt
 8014498:	2320      	movlt	r3, #32
 801449a:	fb90 f0f3 	sdivlt	r0, r0, r3
 801449e:	301f      	addge	r0, #31
 80144a0:	1140      	asrge	r0, r0, #5
 80144a2:	4770      	bx	lr

080144a4 <_ZNK8touchgfx4Line17invalidateContentEv>:
 80144a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144a8:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 80144ac:	b089      	sub	sp, #36	; 0x24
 80144ae:	4604      	mov	r4, r0
 80144b0:	b353      	cbz	r3, 8014508 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 80144b2:	6803      	ldr	r3, [r0, #0]
 80144b4:	4601      	mov	r1, r0
 80144b6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80144b8:	a802      	add	r0, sp, #8
 80144ba:	4798      	blx	r3
 80144bc:	2220      	movs	r2, #32
 80144be:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 80144c2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80144c4:	fb9a f0f2 	sdiv	r0, sl, r2
 80144c8:	fb91 f5f2 	sdiv	r5, r1, r2
 80144cc:	1b40      	subs	r0, r0, r5
 80144ce:	2800      	cmp	r0, #0
 80144d0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80144d2:	fb93 f6f2 	sdiv	r6, r3, r2
 80144d6:	bfb8      	it	lt
 80144d8:	4240      	neglt	r0, r0
 80144da:	0076      	lsls	r6, r6, #1
 80144dc:	4286      	cmp	r6, r0
 80144de:	f8d4 b000 	ldr.w	fp, [r4]
 80144e2:	dc0c      	bgt.n	80144fe <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 80144e4:	6b25      	ldr	r5, [r4, #48]	; 0x30
 80144e6:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 80144ea:	fb95 f0f2 	sdiv	r0, r5, r2
 80144ee:	fb98 f7f2 	sdiv	r7, r8, r2
 80144f2:	1bc0      	subs	r0, r0, r7
 80144f4:	2800      	cmp	r0, #0
 80144f6:	bfb8      	it	lt
 80144f8:	4240      	neglt	r0, r0
 80144fa:	4286      	cmp	r6, r0
 80144fc:	dd07      	ble.n	801450e <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 80144fe:	f8db 3010 	ldr.w	r3, [fp, #16]
 8014502:	a902      	add	r1, sp, #8
 8014504:	4620      	mov	r0, r4
 8014506:	4798      	blx	r3
 8014508:	b009      	add	sp, #36	; 0x24
 801450a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801450e:	3301      	adds	r3, #1
 8014510:	2002      	movs	r0, #2
 8014512:	f10d 0920 	add.w	r9, sp, #32
 8014516:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801451a:	4103      	asrs	r3, r0
 801451c:	f849 3d08 	str.w	r3, [r9, #-8]!
 8014520:	eb01 060a 	add.w	r6, r1, sl
 8014524:	eb08 0705 	add.w	r7, r8, r5
 8014528:	fb96 f6f0 	sdiv	r6, r6, r0
 801452c:	fb97 f7f0 	sdiv	r7, r7, r0
 8014530:	4648      	mov	r0, r9
 8014532:	9101      	str	r1, [sp, #4]
 8014534:	b236      	sxth	r6, r6
 8014536:	b23f      	sxth	r7, r7
 8014538:	fb96 f6f2 	sdiv	r6, r6, r2
 801453c:	fb97 f7f2 	sdiv	r7, r7, r2
 8014540:	f7ff ffa7 	bl	8014492 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8014544:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8014548:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 801454c:	9901      	ldr	r1, [sp, #4]
 801454e:	4293      	cmp	r3, r2
 8014550:	fa1f fe87 	uxth.w	lr, r7
 8014554:	fa1f fc86 	uxth.w	ip, r6
 8014558:	eba1 0a0a 	sub.w	sl, r1, sl
 801455c:	b280      	uxth	r0, r0
 801455e:	da54      	bge.n	801460a <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8014560:	ebac 0100 	sub.w	r1, ip, r0
 8014564:	b289      	uxth	r1, r1
 8014566:	4460      	add	r0, ip
 8014568:	f1ba 0f00 	cmp.w	sl, #0
 801456c:	b20e      	sxth	r6, r1
 801456e:	b280      	uxth	r0, r0
 8014570:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8014574:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8014578:	da29      	bge.n	80145ce <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 801457a:	eba8 0505 	sub.w	r5, r8, r5
 801457e:	2d00      	cmp	r5, #0
 8014580:	da2a      	bge.n	80145d8 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8014582:	fa1f f88a 	uxth.w	r8, sl
 8014586:	eba0 0008 	sub.w	r0, r0, r8
 801458a:	fa1f f58c 	uxth.w	r5, ip
 801458e:	4443      	add	r3, r8
 8014590:	f8ad 0014 	strh.w	r0, [sp, #20]
 8014594:	1a59      	subs	r1, r3, r1
 8014596:	ebae 0005 	sub.w	r0, lr, r5
 801459a:	f8ad a010 	strh.w	sl, [sp, #16]
 801459e:	f8ad c012 	strh.w	ip, [sp, #18]
 80145a2:	f8ad 0016 	strh.w	r0, [sp, #22]
 80145a6:	f8ad 6018 	strh.w	r6, [sp, #24]
 80145aa:	f8ad 701a 	strh.w	r7, [sp, #26]
 80145ae:	f8ad 101c 	strh.w	r1, [sp, #28]
 80145b2:	442a      	add	r2, r5
 80145b4:	eba2 0e0e 	sub.w	lr, r2, lr
 80145b8:	f8ad e01e 	strh.w	lr, [sp, #30]
 80145bc:	f8db 3010 	ldr.w	r3, [fp, #16]
 80145c0:	a904      	add	r1, sp, #16
 80145c2:	4620      	mov	r0, r4
 80145c4:	4798      	blx	r3
 80145c6:	6823      	ldr	r3, [r4, #0]
 80145c8:	4649      	mov	r1, r9
 80145ca:	691b      	ldr	r3, [r3, #16]
 80145cc:	e79a      	b.n	8014504 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 80145ce:	d003      	beq.n	80145d8 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 80145d0:	eba8 0505 	sub.w	r5, r8, r5
 80145d4:	2d00      	cmp	r5, #0
 80145d6:	dcd4      	bgt.n	8014582 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 80145d8:	fa1f f88a 	uxth.w	r8, sl
 80145dc:	4443      	add	r3, r8
 80145de:	fa1f f58c 	uxth.w	r5, ip
 80145e2:	1a59      	subs	r1, r3, r1
 80145e4:	eba0 0008 	sub.w	r0, r0, r8
 80145e8:	ebae 0305 	sub.w	r3, lr, r5
 80145ec:	f8ad 6010 	strh.w	r6, [sp, #16]
 80145f0:	f8ad c012 	strh.w	ip, [sp, #18]
 80145f4:	f8ad 1014 	strh.w	r1, [sp, #20]
 80145f8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80145fc:	f8ad a018 	strh.w	sl, [sp, #24]
 8014600:	f8ad 701a 	strh.w	r7, [sp, #26]
 8014604:	f8ad 001c 	strh.w	r0, [sp, #28]
 8014608:	e7d3      	b.n	80145b2 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 801460a:	ebae 0100 	sub.w	r1, lr, r0
 801460e:	b289      	uxth	r1, r1
 8014610:	4470      	add	r0, lr
 8014612:	f1ba 0f00 	cmp.w	sl, #0
 8014616:	b20f      	sxth	r7, r1
 8014618:	b280      	uxth	r0, r0
 801461a:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 801461e:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8014622:	da20      	bge.n	8014666 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8014624:	eba8 0505 	sub.w	r5, r8, r5
 8014628:	2d00      	cmp	r5, #0
 801462a:	da21      	bge.n	8014670 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 801462c:	fa1f f88e 	uxth.w	r8, lr
 8014630:	fa1f f58a 	uxth.w	r5, sl
 8014634:	4443      	add	r3, r8
 8014636:	442a      	add	r2, r5
 8014638:	f8ad e010 	strh.w	lr, [sp, #16]
 801463c:	1b40      	subs	r0, r0, r5
 801463e:	ebac 0e08 	sub.w	lr, ip, r8
 8014642:	1a51      	subs	r1, r2, r1
 8014644:	eba3 0c0c 	sub.w	ip, r3, ip
 8014648:	f8ad a012 	strh.w	sl, [sp, #18]
 801464c:	f8ad e014 	strh.w	lr, [sp, #20]
 8014650:	f8ad 0016 	strh.w	r0, [sp, #22]
 8014654:	f8ad 6018 	strh.w	r6, [sp, #24]
 8014658:	f8ad 701a 	strh.w	r7, [sp, #26]
 801465c:	f8ad c01c 	strh.w	ip, [sp, #28]
 8014660:	f8ad 101e 	strh.w	r1, [sp, #30]
 8014664:	e7aa      	b.n	80145bc <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8014666:	d003      	beq.n	8014670 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8014668:	eba8 0505 	sub.w	r5, r8, r5
 801466c:	2d00      	cmp	r5, #0
 801466e:	dcdd      	bgt.n	801462c <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8014670:	fa1f f58e 	uxth.w	r5, lr
 8014674:	fa1f f88a 	uxth.w	r8, sl
 8014678:	4442      	add	r2, r8
 801467a:	442b      	add	r3, r5
 801467c:	f8ad 7012 	strh.w	r7, [sp, #18]
 8014680:	1a51      	subs	r1, r2, r1
 8014682:	ebac 0705 	sub.w	r7, ip, r5
 8014686:	eba0 0008 	sub.w	r0, r0, r8
 801468a:	eba3 0c0c 	sub.w	ip, r3, ip
 801468e:	f8ad e010 	strh.w	lr, [sp, #16]
 8014692:	f8ad 7014 	strh.w	r7, [sp, #20]
 8014696:	f8ad 1016 	strh.w	r1, [sp, #22]
 801469a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801469e:	f8ad a01a 	strh.w	sl, [sp, #26]
 80146a2:	f8ad c01c 	strh.w	ip, [sp, #28]
 80146a6:	f8ad 001e 	strh.w	r0, [sp, #30]
 80146aa:	e787      	b.n	80145bc <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

080146ac <_ZN8touchgfx7CWRUtil4sineEi>:
 80146ac:	f44f 73b4 	mov.w	r3, #360	; 0x168
 80146b0:	fb90 f2f3 	sdiv	r2, r0, r3
 80146b4:	fb02 0013 	mls	r0, r2, r3, r0
 80146b8:	2800      	cmp	r0, #0
 80146ba:	bfb8      	it	lt
 80146bc:	18c0      	addlt	r0, r0, r3
 80146be:	285a      	cmp	r0, #90	; 0x5a
 80146c0:	4b09      	ldr	r3, [pc, #36]	; (80146e8 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 80146c2:	dc02      	bgt.n	80146ca <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 80146c4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80146c8:	4770      	bx	lr
 80146ca:	28b4      	cmp	r0, #180	; 0xb4
 80146cc:	dc02      	bgt.n	80146d4 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 80146ce:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 80146d2:	e7f7      	b.n	80146c4 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 80146d4:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 80146d8:	bfd4      	ite	le
 80146da:	38b4      	suble	r0, #180	; 0xb4
 80146dc:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 80146e0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80146e4:	4240      	negs	r0, r0
 80146e6:	4770      	bx	lr
 80146e8:	08031708 	.word	0x08031708

080146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 80146ec:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 80146f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80146f2:	fb90 f2f3 	sdiv	r2, r0, r3
 80146f6:	fb02 0013 	mls	r0, r2, r3, r0
 80146fa:	2800      	cmp	r0, #0
 80146fc:	bfb8      	it	lt
 80146fe:	18c0      	addlt	r0, r0, r3
 8014700:	1144      	asrs	r4, r0, #5
 8014702:	f000 061f 	and.w	r6, r0, #31
 8014706:	4620      	mov	r0, r4
 8014708:	f7ff ffd0 	bl	80146ac <_ZN8touchgfx7CWRUtil4sineEi>
 801470c:	4605      	mov	r5, r0
 801470e:	b90e      	cbnz	r6, 8014714 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8014710:	b002      	add	sp, #8
 8014712:	bd70      	pop	{r4, r5, r6, pc}
 8014714:	1c60      	adds	r0, r4, #1
 8014716:	f7ff ffc9 	bl	80146ac <_ZN8touchgfx7CWRUtil4sineEi>
 801471a:	ab01      	add	r3, sp, #4
 801471c:	2220      	movs	r2, #32
 801471e:	4631      	mov	r1, r6
 8014720:	1b40      	subs	r0, r0, r5
 8014722:	f005 fb33 	bl	8019d8c <_ZN8touchgfx6muldivElllRl>
 8014726:	4428      	add	r0, r5
 8014728:	e7f2      	b.n	8014710 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0801472a <_ZN8touchgfx7CWRUtil5isqrtEm>:
 801472a:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 801472e:	bf2c      	ite	cs
 8014730:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8014734:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8014738:	2300      	movs	r3, #0
 801473a:	1899      	adds	r1, r3, r2
 801473c:	4288      	cmp	r0, r1
 801473e:	bf24      	itt	cs
 8014740:	1853      	addcs	r3, r2, r1
 8014742:	1a40      	subcs	r0, r0, r1
 8014744:	0892      	lsrs	r2, r2, #2
 8014746:	ea4f 0353 	mov.w	r3, r3, lsr #1
 801474a:	d1f6      	bne.n	801473a <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 801474c:	4618      	mov	r0, r3
 801474e:	4770      	bx	lr

08014750 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8014750:	b510      	push	{r4, lr}
 8014752:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8014756:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 801475a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 801475e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8014762:	13a4      	asrs	r4, r4, #14
 8014764:	139b      	asrs	r3, r3, #14
 8014766:	429c      	cmp	r4, r3
 8014768:	bfb8      	it	lt
 801476a:	461c      	movlt	r4, r3
 801476c:	2c01      	cmp	r4, #1
 801476e:	dd07      	ble.n	8014780 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8014770:	fb91 f1f4 	sdiv	r1, r1, r4
 8014774:	fb90 f0f4 	sdiv	r0, r0, r4
 8014778:	f7ff ffea 	bl	8014750 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801477c:	4360      	muls	r0, r4
 801477e:	bd10      	pop	{r4, pc}
 8014780:	4340      	muls	r0, r0
 8014782:	fb01 0001 	mla	r0, r1, r1, r0
 8014786:	f7ff ffd0 	bl	801472a <_ZN8touchgfx7CWRUtil5isqrtEm>
 801478a:	e7f8      	b.n	801477e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0801478c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 801478c:	2800      	cmp	r0, #0
 801478e:	b508      	push	{r3, lr}
 8014790:	da05      	bge.n	801479e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8014792:	4240      	negs	r0, r0
 8014794:	f7ff fffa 	bl	801478c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014798:	4240      	negs	r0, r0
 801479a:	b240      	sxtb	r0, r0
 801479c:	bd08      	pop	{r3, pc}
 801479e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 80147a2:	dc11      	bgt.n	80147c8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 80147a4:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 80147a8:	dd09      	ble.n	80147be <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 80147aa:	4340      	muls	r0, r0
 80147ac:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 80147b0:	f7ff ffbb 	bl	801472a <_ZN8touchgfx7CWRUtil5isqrtEm>
 80147b4:	f7ff ffea 	bl	801478c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80147b8:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80147bc:	e7ed      	b.n	801479a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 80147be:	3003      	adds	r0, #3
 80147c0:	10c0      	asrs	r0, r0, #3
 80147c2:	4b02      	ldr	r3, [pc, #8]	; (80147cc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 80147c4:	5618      	ldrsb	r0, [r3, r0]
 80147c6:	e7e9      	b.n	801479c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80147c8:	2000      	movs	r0, #0
 80147ca:	e7e7      	b.n	801479c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80147cc:	080316ac 	.word	0x080316ac

080147d0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 80147d0:	4281      	cmp	r1, r0
 80147d2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80147d4:	460c      	mov	r4, r1
 80147d6:	4615      	mov	r5, r2
 80147d8:	dd07      	ble.n	80147ea <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 80147da:	4601      	mov	r1, r0
 80147dc:	4620      	mov	r0, r4
 80147de:	f7ff fff7 	bl	80147d0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80147e2:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80147e6:	b003      	add	sp, #12
 80147e8:	bd30      	pop	{r4, r5, pc}
 80147ea:	f7ff ffb1 	bl	8014750 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80147ee:	6028      	str	r0, [r5, #0]
 80147f0:	2800      	cmp	r0, #0
 80147f2:	d0f8      	beq.n	80147e6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 80147f4:	4602      	mov	r2, r0
 80147f6:	ab01      	add	r3, sp, #4
 80147f8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80147fc:	4620      	mov	r0, r4
 80147fe:	f005 fac5 	bl	8019d8c <_ZN8touchgfx6muldivElllRl>
 8014802:	f7ff ffc3 	bl	801478c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014806:	e7ee      	b.n	80147e6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08014808 <_ZN8touchgfx4LineC1Ev>:
 8014808:	b510      	push	{r4, lr}
 801480a:	4604      	mov	r4, r0
 801480c:	f7ff fe0a 	bl	8014424 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8014810:	4b0c      	ldr	r3, [pc, #48]	; (8014844 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8014812:	6023      	str	r3, [r4, #0]
 8014814:	2220      	movs	r2, #32
 8014816:	2300      	movs	r3, #0
 8014818:	63e2      	str	r2, [r4, #60]	; 0x3c
 801481a:	2212      	movs	r2, #18
 801481c:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8014820:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8014824:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8014828:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 801482c:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8014830:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8014834:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8014838:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 801483c:	66e2      	str	r2, [r4, #108]	; 0x6c
 801483e:	60a3      	str	r3, [r4, #8]
 8014840:	4620      	mov	r0, r4
 8014842:	bd10      	pop	{r4, pc}
 8014844:	080317c8 	.word	0x080317c8

08014848 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8014848:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801484c:	6b47      	ldr	r7, [r0, #52]	; 0x34
 801484e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014850:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8014852:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8014854:	1aff      	subs	r7, r7, r3
 8014856:	4604      	mov	r4, r0
 8014858:	eba5 0502 	sub.w	r5, r5, r2
 801485c:	d142      	bne.n	80148e4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 801485e:	b955      	cbnz	r5, 8014876 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8014860:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8014864:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8014868:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 801486c:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8014870:	b002      	add	sp, #8
 8014872:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014876:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 801487a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 801487e:	4629      	mov	r1, r5
 8014880:	4642      	mov	r2, r8
 8014882:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8014884:	f005 faa1 	bl	8019dca <_ZN8touchgfx6muldivElll>
 8014888:	2502      	movs	r5, #2
 801488a:	4642      	mov	r2, r8
 801488c:	fb90 f6f5 	sdiv	r6, r0, r5
 8014890:	4639      	mov	r1, r7
 8014892:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8014894:	f005 fa99 	bl	8019dca <_ZN8touchgfx6muldivElll>
 8014898:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 801489c:	fb90 f5f5 	sdiv	r5, r0, r5
 80148a0:	f1b9 0f00 	cmp.w	r9, #0
 80148a4:	d067      	beq.n	8014976 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 80148a6:	f1b9 0f02 	cmp.w	r9, #2
 80148aa:	d878      	bhi.n	801499e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 80148ac:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80148ae:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80148b0:	1b93      	subs	r3, r2, r6
 80148b2:	1b5b      	subs	r3, r3, r5
 80148b4:	6463      	str	r3, [r4, #68]	; 0x44
 80148b6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80148b8:	18e9      	adds	r1, r5, r3
 80148ba:	1b89      	subs	r1, r1, r6
 80148bc:	6561      	str	r1, [r4, #84]	; 0x54
 80148be:	1b81      	subs	r1, r0, r6
 80148c0:	4429      	add	r1, r5
 80148c2:	64a1      	str	r1, [r4, #72]	; 0x48
 80148c4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80148c6:	4430      	add	r0, r6
 80148c8:	186f      	adds	r7, r5, r1
 80148ca:	4432      	add	r2, r6
 80148cc:	1b49      	subs	r1, r1, r5
 80148ce:	4437      	add	r7, r6
 80148d0:	4428      	add	r0, r5
 80148d2:	4431      	add	r1, r6
 80148d4:	1b52      	subs	r2, r2, r5
 80148d6:	1b5b      	subs	r3, r3, r5
 80148d8:	65a7      	str	r7, [r4, #88]	; 0x58
 80148da:	64e0      	str	r0, [r4, #76]	; 0x4c
 80148dc:	65e1      	str	r1, [r4, #92]	; 0x5c
 80148de:	6522      	str	r2, [r4, #80]	; 0x50
 80148e0:	1b9b      	subs	r3, r3, r6
 80148e2:	e05b      	b.n	801499c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 80148e4:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 80148e8:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 80148ec:	2d00      	cmp	r5, #0
 80148ee:	d0c6      	beq.n	801487e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80148f0:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 80148f4:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 80148f8:	fb93 f2f8 	sdiv	r2, r3, r8
 80148fc:	fb08 3312 	mls	r3, r8, r2, r3
 8014900:	b353      	cbz	r3, 8014958 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8014902:	fb98 f2f3 	sdiv	r2, r8, r3
 8014906:	fb03 8812 	mls	r8, r3, r2, r8
 801490a:	f1b8 0f00 	cmp.w	r8, #0
 801490e:	d1f3      	bne.n	80148f8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8014910:	2b01      	cmp	r3, #1
 8014912:	bf1c      	itt	ne
 8014914:	fb95 f5f3 	sdivne	r5, r5, r3
 8014918:	fb97 f7f3 	sdivne	r7, r7, r3
 801491c:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8014920:	f24b 5104 	movw	r1, #46340	; 0xb504
 8014924:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8014928:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 801492c:	428b      	cmp	r3, r1
 801492e:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8014932:	4608      	mov	r0, r1
 8014934:	dd01      	ble.n	801493a <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8014936:	428a      	cmp	r2, r1
 8014938:	dc10      	bgt.n	801495c <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 801493a:	fb90 f3f3 	sdiv	r3, r0, r3
 801493e:	fb90 f2f2 	sdiv	r2, r0, r2
 8014942:	4293      	cmp	r3, r2
 8014944:	bfa8      	it	ge
 8014946:	4613      	movge	r3, r2
 8014948:	435f      	muls	r7, r3
 801494a:	435d      	muls	r5, r3
 801494c:	4629      	mov	r1, r5
 801494e:	4638      	mov	r0, r7
 8014950:	f7ff fefe 	bl	8014750 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8014954:	4680      	mov	r8, r0
 8014956:	e792      	b.n	801487e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8014958:	4643      	mov	r3, r8
 801495a:	e7d9      	b.n	8014910 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 801495c:	fb93 f3f1 	sdiv	r3, r3, r1
 8014960:	fb92 f2f1 	sdiv	r2, r2, r1
 8014964:	4293      	cmp	r3, r2
 8014966:	bfcc      	ite	gt
 8014968:	3301      	addgt	r3, #1
 801496a:	1c53      	addle	r3, r2, #1
 801496c:	fb97 f7f3 	sdiv	r7, r7, r3
 8014970:	fb95 f5f3 	sdiv	r5, r5, r3
 8014974:	e7ea      	b.n	801494c <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8014976:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014978:	6b60      	ldr	r0, [r4, #52]	; 0x34
 801497a:	1b93      	subs	r3, r2, r6
 801497c:	6463      	str	r3, [r4, #68]	; 0x44
 801497e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014980:	18e9      	adds	r1, r5, r3
 8014982:	6561      	str	r1, [r4, #84]	; 0x54
 8014984:	1b81      	subs	r1, r0, r6
 8014986:	64a1      	str	r1, [r4, #72]	; 0x48
 8014988:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801498a:	4430      	add	r0, r6
 801498c:	186f      	adds	r7, r5, r1
 801498e:	4432      	add	r2, r6
 8014990:	1b49      	subs	r1, r1, r5
 8014992:	65a7      	str	r7, [r4, #88]	; 0x58
 8014994:	64e0      	str	r0, [r4, #76]	; 0x4c
 8014996:	65e1      	str	r1, [r4, #92]	; 0x5c
 8014998:	6522      	str	r2, [r4, #80]	; 0x50
 801499a:	1b5b      	subs	r3, r3, r5
 801499c:	6623      	str	r3, [r4, #96]	; 0x60
 801499e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80149a0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80149a2:	9200      	str	r2, [sp, #0]
 80149a4:	9301      	str	r3, [sp, #4]
 80149a6:	f104 0148 	add.w	r1, r4, #72	; 0x48
 80149aa:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 80149ae:	680f      	ldr	r7, [r1, #0]
 80149b0:	9800      	ldr	r0, [sp, #0]
 80149b2:	42ba      	cmp	r2, r7
 80149b4:	bfa8      	it	ge
 80149b6:	463a      	movge	r2, r7
 80149b8:	4287      	cmp	r7, r0
 80149ba:	bfc8      	it	gt
 80149bc:	9700      	strgt	r7, [sp, #0]
 80149be:	690f      	ldr	r7, [r1, #16]
 80149c0:	9801      	ldr	r0, [sp, #4]
 80149c2:	42bb      	cmp	r3, r7
 80149c4:	bfa8      	it	ge
 80149c6:	463b      	movge	r3, r7
 80149c8:	3104      	adds	r1, #4
 80149ca:	4287      	cmp	r7, r0
 80149cc:	bfc8      	it	gt
 80149ce:	9701      	strgt	r7, [sp, #4]
 80149d0:	458c      	cmp	ip, r1
 80149d2:	d1ec      	bne.n	80149ae <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 80149d4:	4668      	mov	r0, sp
 80149d6:	2720      	movs	r7, #32
 80149d8:	fb92 f8f7 	sdiv	r8, r2, r7
 80149dc:	fb93 f7f7 	sdiv	r7, r3, r7
 80149e0:	f7ff fd57 	bl	8014492 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80149e4:	4682      	mov	sl, r0
 80149e6:	a801      	add	r0, sp, #4
 80149e8:	f7ff fd53 	bl	8014492 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80149ec:	ebaa 0208 	sub.w	r2, sl, r8
 80149f0:	1bc0      	subs	r0, r0, r7
 80149f2:	f1b9 0f01 	cmp.w	r9, #1
 80149f6:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 80149fa:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 80149fe:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8014a02:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8014a06:	f47f af33 	bne.w	8014870 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8014a0a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8014a0c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014a0e:	1b83      	subs	r3, r0, r6
 8014a10:	6463      	str	r3, [r4, #68]	; 0x44
 8014a12:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014a14:	18ea      	adds	r2, r5, r3
 8014a16:	6562      	str	r2, [r4, #84]	; 0x54
 8014a18:	1b8a      	subs	r2, r1, r6
 8014a1a:	64a2      	str	r2, [r4, #72]	; 0x48
 8014a1c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014a1e:	4431      	add	r1, r6
 8014a20:	18af      	adds	r7, r5, r2
 8014a22:	4406      	add	r6, r0
 8014a24:	1b52      	subs	r2, r2, r5
 8014a26:	1b5d      	subs	r5, r3, r5
 8014a28:	65a7      	str	r7, [r4, #88]	; 0x58
 8014a2a:	64e1      	str	r1, [r4, #76]	; 0x4c
 8014a2c:	65e2      	str	r2, [r4, #92]	; 0x5c
 8014a2e:	6526      	str	r6, [r4, #80]	; 0x50
 8014a30:	6625      	str	r5, [r4, #96]	; 0x60
 8014a32:	e71d      	b.n	8014870 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08014a34 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8014a34:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014a36:	428b      	cmp	r3, r1
 8014a38:	d102      	bne.n	8014a40 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8014a3a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8014a3c:	4293      	cmp	r3, r2
 8014a3e:	d003      	beq.n	8014a48 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8014a40:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8014a44:	f7ff bf00 	b.w	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8014a48:	4770      	bx	lr

08014a4a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8014a4a:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8014a4c:	428b      	cmp	r3, r1
 8014a4e:	d102      	bne.n	8014a56 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8014a50:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014a52:	4293      	cmp	r3, r2
 8014a54:	d003      	beq.n	8014a5e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8014a56:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8014a5a:	f7ff bef5 	b.w	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8014a5e:	4770      	bx	lr

08014a60 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8014a60:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8014a64:	f7ff bef0 	b.w	8014848 <_ZN8touchgfx4Line17updateCachedShapeEv>

08014a68 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8014a68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014a6c:	b0a0      	sub	sp, #128	; 0x80
 8014a6e:	4604      	mov	r4, r0
 8014a70:	460a      	mov	r2, r1
 8014a72:	4601      	mov	r1, r0
 8014a74:	a804      	add	r0, sp, #16
 8014a76:	f015 f845 	bl	8029b04 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8014a7a:	2300      	movs	r3, #0
 8014a7c:	9301      	str	r3, [sp, #4]
 8014a7e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8014a82:	2b01      	cmp	r3, #1
 8014a84:	d17c      	bne.n	8014b80 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8014a86:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8014a88:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014a8a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8014a8c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014a8e:	1ac0      	subs	r0, r0, r3
 8014a90:	eba1 0102 	sub.w	r1, r1, r2
 8014a94:	d437      	bmi.n	8014b06 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8014a96:	2900      	cmp	r1, #0
 8014a98:	aa01      	add	r2, sp, #4
 8014a9a:	db2e      	blt.n	8014afa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8014a9c:	f7ff fe98 	bl	80147d0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014aa0:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8014aa4:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8014aa6:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8014aa8:	a804      	add	r0, sp, #16
 8014aaa:	f015 f9ab 	bl	8029e04 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014aae:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8014ab0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8014ab2:	a804      	add	r0, sp, #16
 8014ab4:	f015 f9f3 	bl	8029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014ab8:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8014aba:	2db3      	cmp	r5, #179	; 0xb3
 8014abc:	dc33      	bgt.n	8014b26 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8014abe:	eba6 0805 	sub.w	r8, r6, r5
 8014ac2:	4640      	mov	r0, r8
 8014ac4:	f7ff fdf2 	bl	80146ac <_ZN8touchgfx7CWRUtil4sineEi>
 8014ac8:	a902      	add	r1, sp, #8
 8014aca:	9002      	str	r0, [sp, #8]
 8014acc:	a801      	add	r0, sp, #4
 8014ace:	f7ff fcd5 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014ad2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014ad4:	1847      	adds	r7, r0, r1
 8014ad6:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8014ada:	f7ff fde7 	bl	80146ac <_ZN8touchgfx7CWRUtil4sineEi>
 8014ade:	a903      	add	r1, sp, #12
 8014ae0:	9003      	str	r0, [sp, #12]
 8014ae2:	a801      	add	r0, sp, #4
 8014ae4:	f7ff fcca 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014ae8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014aea:	4639      	mov	r1, r7
 8014aec:	1a12      	subs	r2, r2, r0
 8014aee:	a804      	add	r0, sp, #16
 8014af0:	f015 f9d5 	bl	8029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014af4:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8014af6:	441d      	add	r5, r3
 8014af8:	e7df      	b.n	8014aba <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8014afa:	4249      	negs	r1, r1
 8014afc:	f7ff fe68 	bl	80147d0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014b00:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8014b04:	e7ce      	b.n	8014aa4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014b06:	2900      	cmp	r1, #0
 8014b08:	f1c0 0000 	rsb	r0, r0, #0
 8014b0c:	aa01      	add	r2, sp, #4
 8014b0e:	db04      	blt.n	8014b1a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8014b10:	f7ff fe5e 	bl	80147d0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014b14:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8014b18:	e7c4      	b.n	8014aa4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014b1a:	4249      	negs	r1, r1
 8014b1c:	f7ff fe58 	bl	80147d0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014b20:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8014b24:	e7be      	b.n	8014aa4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014b26:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8014b28:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8014b2a:	a804      	add	r0, sp, #16
 8014b2c:	f015 f9b7 	bl	8029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014b30:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8014b32:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8014b34:	a804      	add	r0, sp, #16
 8014b36:	f015 f9b2 	bl	8029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014b3a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8014b3c:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8014b40:	2d00      	cmp	r5, #0
 8014b42:	dd31      	ble.n	8014ba8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8014b44:	eb05 0806 	add.w	r8, r5, r6
 8014b48:	4640      	mov	r0, r8
 8014b4a:	f7ff fdaf 	bl	80146ac <_ZN8touchgfx7CWRUtil4sineEi>
 8014b4e:	a902      	add	r1, sp, #8
 8014b50:	9002      	str	r0, [sp, #8]
 8014b52:	a801      	add	r0, sp, #4
 8014b54:	f7ff fc92 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014b58:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014b5a:	1847      	adds	r7, r0, r1
 8014b5c:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8014b60:	f7ff fda4 	bl	80146ac <_ZN8touchgfx7CWRUtil4sineEi>
 8014b64:	a903      	add	r1, sp, #12
 8014b66:	9003      	str	r0, [sp, #12]
 8014b68:	a801      	add	r0, sp, #4
 8014b6a:	f7ff fc87 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014b6e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014b70:	4639      	mov	r1, r7
 8014b72:	1a12      	subs	r2, r2, r0
 8014b74:	a804      	add	r0, sp, #16
 8014b76:	f015 f992 	bl	8029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014b7a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8014b7c:	1aed      	subs	r5, r5, r3
 8014b7e:	e7df      	b.n	8014b40 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8014b80:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8014b82:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8014b84:	a804      	add	r0, sp, #16
 8014b86:	f015 f93d 	bl	8029e04 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014b8a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8014b8c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8014b8e:	a804      	add	r0, sp, #16
 8014b90:	f015 f985 	bl	8029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014b94:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8014b96:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8014b98:	a804      	add	r0, sp, #16
 8014b9a:	f015 f980 	bl	8029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014b9e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8014ba0:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8014ba2:	a804      	add	r0, sp, #16
 8014ba4:	f015 f97b 	bl	8029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014ba8:	21ff      	movs	r1, #255	; 0xff
 8014baa:	a804      	add	r0, sp, #16
 8014bac:	f015 f866 	bl	8029c7c <_ZN8touchgfx6Canvas6renderEh>
 8014bb0:	4b04      	ldr	r3, [pc, #16]	; (8014bc4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8014bb2:	9304      	str	r3, [sp, #16]
 8014bb4:	4604      	mov	r4, r0
 8014bb6:	a80c      	add	r0, sp, #48	; 0x30
 8014bb8:	f001 fa98 	bl	80160ec <_ZN8touchgfx7OutlineD1Ev>
 8014bbc:	4620      	mov	r0, r4
 8014bbe:	b020      	add	sp, #128	; 0x80
 8014bc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014bc4:	08032074 	.word	0x08032074

08014bc8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8014bc8:	2000      	movs	r0, #0
 8014bca:	4770      	bx	lr

08014bcc <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8014bcc:	4b07      	ldr	r3, [pc, #28]	; (8014bec <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8014bce:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014bd0:	881b      	ldrh	r3, [r3, #0]
 8014bd2:	4293      	cmp	r3, r2
 8014bd4:	bf81      	itttt	hi
 8014bd6:	4b06      	ldrhi	r3, [pc, #24]	; (8014bf0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8014bd8:	681b      	ldrhi	r3, [r3, #0]
 8014bda:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8014bde:	7858      	ldrbhi	r0, [r3, #1]
 8014be0:	bf8c      	ite	hi
 8014be2:	f000 0003 	andhi.w	r0, r0, #3
 8014be6:	2000      	movls	r0, #0
 8014be8:	4770      	bx	lr
 8014bea:	bf00      	nop
 8014bec:	200138b0 	.word	0x200138b0
 8014bf0:	200138ac 	.word	0x200138ac

08014bf4 <_ZN8touchgfx8TextAreaD1Ev>:
 8014bf4:	4770      	bx	lr
	...

08014bf8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8014bf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014bfc:	4b10      	ldr	r3, [pc, #64]	; (8014c40 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8014bfe:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014c00:	881b      	ldrh	r3, [r3, #0]
 8014c02:	428b      	cmp	r3, r1
 8014c04:	4604      	mov	r4, r0
 8014c06:	d918      	bls.n	8014c3a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8014c08:	6803      	ldr	r3, [r0, #0]
 8014c0a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8014c0c:	4b0d      	ldr	r3, [pc, #52]	; (8014c44 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8014c0e:	6818      	ldr	r0, [r3, #0]
 8014c10:	f7f5 fc7a 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8014c14:	6823      	ldr	r3, [r4, #0]
 8014c16:	4606      	mov	r6, r0
 8014c18:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014c1a:	4620      	mov	r0, r4
 8014c1c:	4798      	blx	r3
 8014c1e:	6823      	ldr	r3, [r4, #0]
 8014c20:	4607      	mov	r7, r0
 8014c22:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014c26:	4620      	mov	r0, r4
 8014c28:	4798      	blx	r3
 8014c2a:	463a      	mov	r2, r7
 8014c2c:	4603      	mov	r3, r0
 8014c2e:	4631      	mov	r1, r6
 8014c30:	4620      	mov	r0, r4
 8014c32:	46ac      	mov	ip, r5
 8014c34:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8014c38:	4760      	bx	ip
 8014c3a:	2000      	movs	r0, #0
 8014c3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014c40:	200138b0 	.word	0x200138b0
 8014c44:	200138b8 	.word	0x200138b8

08014c48 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8014c48:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8014c4c:	4b17      	ldr	r3, [pc, #92]	; (8014cac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8014c4e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014c50:	881b      	ldrh	r3, [r3, #0]
 8014c52:	428b      	cmp	r3, r1
 8014c54:	4604      	mov	r4, r0
 8014c56:	d926      	bls.n	8014ca6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8014c58:	4b15      	ldr	r3, [pc, #84]	; (8014cb0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8014c5a:	681b      	ldr	r3, [r3, #0]
 8014c5c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8014c60:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8014c64:	4b13      	ldr	r3, [pc, #76]	; (8014cb4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8014c66:	7855      	ldrb	r5, [r2, #1]
 8014c68:	681b      	ldr	r3, [r3, #0]
 8014c6a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8014c6e:	6833      	ldr	r3, [r6, #0]
 8014c70:	69df      	ldr	r7, [r3, #28]
 8014c72:	4b11      	ldr	r3, [pc, #68]	; (8014cb8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8014c74:	6818      	ldr	r0, [r3, #0]
 8014c76:	f7f5 fc47 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8014c7a:	6823      	ldr	r3, [r4, #0]
 8014c7c:	4680      	mov	r8, r0
 8014c7e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014c80:	4620      	mov	r0, r4
 8014c82:	4798      	blx	r3
 8014c84:	6823      	ldr	r3, [r4, #0]
 8014c86:	4681      	mov	r9, r0
 8014c88:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014c8c:	4620      	mov	r0, r4
 8014c8e:	4798      	blx	r3
 8014c90:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8014c94:	9000      	str	r0, [sp, #0]
 8014c96:	464b      	mov	r3, r9
 8014c98:	4642      	mov	r2, r8
 8014c9a:	4629      	mov	r1, r5
 8014c9c:	4630      	mov	r0, r6
 8014c9e:	47b8      	blx	r7
 8014ca0:	b003      	add	sp, #12
 8014ca2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014ca6:	2000      	movs	r0, #0
 8014ca8:	e7fa      	b.n	8014ca0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8014caa:	bf00      	nop
 8014cac:	200138b0 	.word	0x200138b0
 8014cb0:	200138ac 	.word	0x200138ac
 8014cb4:	200138b4 	.word	0x200138b4
 8014cb8:	200138b8 	.word	0x200138b8

08014cbc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8014cbc:	b40e      	push	{r1, r2, r3}
 8014cbe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014cc2:	4b2f      	ldr	r3, [pc, #188]	; (8014d80 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8014cc4:	881a      	ldrh	r2, [r3, #0]
 8014cc6:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8014cc8:	429a      	cmp	r2, r3
 8014cca:	b09d      	sub	sp, #116	; 0x74
 8014ccc:	4604      	mov	r4, r0
 8014cce:	d954      	bls.n	8014d7a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8014cd0:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8014d84 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8014cd4:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8014d88 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8014cd8:	aa26      	add	r2, sp, #152	; 0x98
 8014cda:	9202      	str	r2, [sp, #8]
 8014cdc:	f8d9 2000 	ldr.w	r2, [r9]
 8014ce0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8014ce4:	f8d8 3000 	ldr.w	r3, [r8]
 8014ce8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014cec:	682b      	ldr	r3, [r5, #0]
 8014cee:	4628      	mov	r0, r5
 8014cf0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014cf2:	4798      	blx	r3
 8014cf4:	b207      	sxth	r7, r0
 8014cf6:	4606      	mov	r6, r0
 8014cf8:	a803      	add	r0, sp, #12
 8014cfa:	f005 fc61 	bl	801a5c0 <_ZN8touchgfx12TextProviderC1Ev>
 8014cfe:	682b      	ldr	r3, [r5, #0]
 8014d00:	4628      	mov	r0, r5
 8014d02:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014d04:	4798      	blx	r3
 8014d06:	682b      	ldr	r3, [r5, #0]
 8014d08:	4682      	mov	sl, r0
 8014d0a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014d0c:	4628      	mov	r0, r5
 8014d0e:	4798      	blx	r3
 8014d10:	4653      	mov	r3, sl
 8014d12:	9000      	str	r0, [sp, #0]
 8014d14:	9a02      	ldr	r2, [sp, #8]
 8014d16:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014d18:	a803      	add	r0, sp, #12
 8014d1a:	f005 fcac 	bl	801a676 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014d1e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014d20:	f8d9 3000 	ldr.w	r3, [r9]
 8014d24:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8014d28:	8925      	ldrh	r5, [r4, #8]
 8014d2a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8014d2e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8014d32:	eba5 050c 	sub.w	r5, r5, ip
 8014d36:	784a      	ldrb	r2, [r1, #1]
 8014d38:	f8d8 3000 	ldr.w	r3, [r8]
 8014d3c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8014d40:	b22d      	sxth	r5, r5
 8014d42:	9500      	str	r5, [sp, #0]
 8014d44:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8014d48:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8014d4c:	a803      	add	r0, sp, #12
 8014d4e:	f003 f8b9 	bl	8017ec4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8014d52:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8014d56:	18b9      	adds	r1, r7, r2
 8014d58:	2900      	cmp	r1, #0
 8014d5a:	b203      	sxth	r3, r0
 8014d5c:	dd0b      	ble.n	8014d76 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8014d5e:	3b01      	subs	r3, #1
 8014d60:	fb13 f302 	smulbb	r3, r3, r2
 8014d64:	fb16 3300 	smlabb	r3, r6, r0, r3
 8014d68:	b21f      	sxth	r7, r3
 8014d6a:	4638      	mov	r0, r7
 8014d6c:	b01d      	add	sp, #116	; 0x74
 8014d6e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014d72:	b003      	add	sp, #12
 8014d74:	4770      	bx	lr
 8014d76:	2b00      	cmp	r3, #0
 8014d78:	dcf7      	bgt.n	8014d6a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8014d7a:	2700      	movs	r7, #0
 8014d7c:	e7f5      	b.n	8014d6a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8014d7e:	bf00      	nop
 8014d80:	200138b0 	.word	0x200138b0
 8014d84:	200138ac 	.word	0x200138ac
 8014d88:	200138b4 	.word	0x200138b4

08014d8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8014d8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d90:	4bbc      	ldr	r3, [pc, #752]	; (8015084 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8014d92:	460c      	mov	r4, r1
 8014d94:	881b      	ldrh	r3, [r3, #0]
 8014d96:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8014d98:	428b      	cmp	r3, r1
 8014d9a:	b0a9      	sub	sp, #164	; 0xa4
 8014d9c:	4680      	mov	r8, r0
 8014d9e:	d809      	bhi.n	8014db4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8014da0:	2300      	movs	r3, #0
 8014da2:	f04f 32ff 	mov.w	r2, #4294967295
 8014da6:	e9c0 3200 	strd	r3, r2, [r0]
 8014daa:	6083      	str	r3, [r0, #8]
 8014dac:	4640      	mov	r0, r8
 8014dae:	b029      	add	sp, #164	; 0xa4
 8014db0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014db4:	4eb4      	ldr	r6, [pc, #720]	; (8015088 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8014db6:	6833      	ldr	r3, [r6, #0]
 8014db8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8014dbc:	4bb3      	ldr	r3, [pc, #716]	; (801508c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8014dbe:	681b      	ldr	r3, [r3, #0]
 8014dc0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014dc4:	4bb2      	ldr	r3, [pc, #712]	; (8015090 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8014dc6:	6818      	ldr	r0, [r3, #0]
 8014dc8:	f7f5 fb9e 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8014dcc:	682b      	ldr	r3, [r5, #0]
 8014dce:	4681      	mov	r9, r0
 8014dd0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014dd2:	4628      	mov	r0, r5
 8014dd4:	4798      	blx	r3
 8014dd6:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8014dd8:	b203      	sxth	r3, r0
 8014dda:	4407      	add	r7, r0
 8014ddc:	9304      	str	r3, [sp, #16]
 8014dde:	b2bb      	uxth	r3, r7
 8014de0:	9303      	str	r3, [sp, #12]
 8014de2:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8014de6:	4682      	mov	sl, r0
 8014de8:	a80f      	add	r0, sp, #60	; 0x3c
 8014dea:	2b00      	cmp	r3, #0
 8014dec:	f040 80a6 	bne.w	8014f3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8014df0:	f005 fbe6 	bl	801a5c0 <_ZN8touchgfx12TextProviderC1Ev>
 8014df4:	682b      	ldr	r3, [r5, #0]
 8014df6:	4628      	mov	r0, r5
 8014df8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014dfa:	4798      	blx	r3
 8014dfc:	682b      	ldr	r3, [r5, #0]
 8014dfe:	4606      	mov	r6, r0
 8014e00:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014e02:	4628      	mov	r0, r5
 8014e04:	4798      	blx	r3
 8014e06:	6823      	ldr	r3, [r4, #0]
 8014e08:	4607      	mov	r7, r0
 8014e0a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014e0c:	4620      	mov	r0, r4
 8014e0e:	4798      	blx	r3
 8014e10:	6823      	ldr	r3, [r4, #0]
 8014e12:	4683      	mov	fp, r0
 8014e14:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014e18:	4620      	mov	r0, r4
 8014e1a:	4798      	blx	r3
 8014e1c:	463b      	mov	r3, r7
 8014e1e:	e9cd b000 	strd	fp, r0, [sp]
 8014e22:	4649      	mov	r1, r9
 8014e24:	4632      	mov	r2, r6
 8014e26:	a80f      	add	r0, sp, #60	; 0x3c
 8014e28:	f005 fc3a 	bl	801a6a0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8014e2c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014e30:	f8df b254 	ldr.w	fp, [pc, #596]	; 8015088 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8014e34:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014e38:	f04f 0600 	mov.w	r6, #0
 8014e3c:	bf0c      	ite	eq
 8014e3e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8014e42:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8014e46:	4637      	mov	r7, r6
 8014e48:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014e4a:	f8db 3000 	ldr.w	r3, [fp]
 8014e4e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8014e52:	4629      	mov	r1, r5
 8014e54:	785b      	ldrb	r3, [r3, #1]
 8014e56:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014e5a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8014e5e:	a80f      	add	r0, sp, #60	; 0x3c
 8014e60:	f002 fd4b 	bl	80178fa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014e64:	9b03      	ldr	r3, [sp, #12]
 8014e66:	4286      	cmp	r6, r0
 8014e68:	bfb8      	it	lt
 8014e6a:	4606      	movlt	r6, r0
 8014e6c:	3701      	adds	r7, #1
 8014e6e:	eba9 0903 	sub.w	r9, r9, r3
 8014e72:	a80f      	add	r0, sp, #60	; 0x3c
 8014e74:	b236      	sxth	r6, r6
 8014e76:	b2bf      	uxth	r7, r7
 8014e78:	fa0f f989 	sxth.w	r9, r9
 8014e7c:	f005 fbc7 	bl	801a60e <_ZN8touchgfx12TextProvider11endOfStringEv>
 8014e80:	b918      	cbnz	r0, 8014e8a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8014e82:	7a2b      	ldrb	r3, [r5, #8]
 8014e84:	444b      	add	r3, r9
 8014e86:	2b00      	cmp	r3, #0
 8014e88:	dcde      	bgt.n	8014e48 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8014e8a:	9b03      	ldr	r3, [sp, #12]
 8014e8c:	9a04      	ldr	r2, [sp, #16]
 8014e8e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8014e92:	fb13 f707 	smulbb	r7, r3, r7
 8014e96:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8014e98:	1aff      	subs	r7, r7, r3
 8014e9a:	b2bf      	uxth	r7, r7
 8014e9c:	b23b      	sxth	r3, r7
 8014e9e:	429a      	cmp	r2, r3
 8014ea0:	bfa8      	it	ge
 8014ea2:	4657      	movge	r7, sl
 8014ea4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014ea8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014eac:	6823      	ldr	r3, [r4, #0]
 8014eae:	bf08      	it	eq
 8014eb0:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8014eb4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014eb6:	bf18      	it	ne
 8014eb8:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8014ebc:	4620      	mov	r0, r4
 8014ebe:	4798      	blx	r3
 8014ec0:	444f      	add	r7, r9
 8014ec2:	fa1f f987 	uxth.w	r9, r7
 8014ec6:	2801      	cmp	r0, #1
 8014ec8:	fa0f f789 	sxth.w	r7, r9
 8014ecc:	b2b3      	uxth	r3, r6
 8014ece:	f000 80e1 	beq.w	8015094 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8014ed2:	2802      	cmp	r0, #2
 8014ed4:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8014ed8:	f000 80e2 	beq.w	80150a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8014edc:	7aea      	ldrb	r2, [r5, #11]
 8014ede:	7b2d      	ldrb	r5, [r5, #12]
 8014ee0:	b236      	sxth	r6, r6
 8014ee2:	1ab6      	subs	r6, r6, r2
 8014ee4:	442a      	add	r2, r5
 8014ee6:	4413      	add	r3, r2
 8014ee8:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8014eec:	fa1f fa86 	uxth.w	sl, r6
 8014ef0:	b29b      	uxth	r3, r3
 8014ef2:	2a02      	cmp	r2, #2
 8014ef4:	fa0f fb8a 	sxth.w	fp, sl
 8014ef8:	b21e      	sxth	r6, r3
 8014efa:	f000 80d5 	beq.w	80150a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8014efe:	2a03      	cmp	r2, #3
 8014f00:	f000 80dd 	beq.w	80150be <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8014f04:	2a01      	cmp	r2, #1
 8014f06:	f040 80e5 	bne.w	80150d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8014f0a:	8925      	ldrh	r5, [r4, #8]
 8014f0c:	4633      	mov	r3, r6
 8014f0e:	eba5 0909 	sub.w	r9, r5, r9
 8014f12:	463e      	mov	r6, r7
 8014f14:	465d      	mov	r5, fp
 8014f16:	461f      	mov	r7, r3
 8014f18:	fa0f fb89 	sxth.w	fp, r9
 8014f1c:	4b5c      	ldr	r3, [pc, #368]	; (8015090 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8014f1e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8014f20:	6818      	ldr	r0, [r3, #0]
 8014f22:	f7f5 faf1 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8014f26:	f8a8 b000 	strh.w	fp, [r8]
 8014f2a:	f8a8 5002 	strh.w	r5, [r8, #2]
 8014f2e:	f8a8 6004 	strh.w	r6, [r8, #4]
 8014f32:	f8a8 7006 	strh.w	r7, [r8, #6]
 8014f36:	f8c8 0008 	str.w	r0, [r8, #8]
 8014f3a:	e737      	b.n	8014dac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8014f3c:	f005 fb40 	bl	801a5c0 <_ZN8touchgfx12TextProviderC1Ev>
 8014f40:	682b      	ldr	r3, [r5, #0]
 8014f42:	4628      	mov	r0, r5
 8014f44:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014f46:	4798      	blx	r3
 8014f48:	682b      	ldr	r3, [r5, #0]
 8014f4a:	4607      	mov	r7, r0
 8014f4c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014f4e:	4628      	mov	r0, r5
 8014f50:	4798      	blx	r3
 8014f52:	6823      	ldr	r3, [r4, #0]
 8014f54:	4683      	mov	fp, r0
 8014f56:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014f58:	4620      	mov	r0, r4
 8014f5a:	4798      	blx	r3
 8014f5c:	6822      	ldr	r2, [r4, #0]
 8014f5e:	9005      	str	r0, [sp, #20]
 8014f60:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8014f64:	4620      	mov	r0, r4
 8014f66:	4790      	blx	r2
 8014f68:	9b05      	ldr	r3, [sp, #20]
 8014f6a:	9001      	str	r0, [sp, #4]
 8014f6c:	463a      	mov	r2, r7
 8014f6e:	4649      	mov	r1, r9
 8014f70:	9300      	str	r3, [sp, #0]
 8014f72:	a80f      	add	r0, sp, #60	; 0x3c
 8014f74:	465b      	mov	r3, fp
 8014f76:	f005 fb93 	bl	801a6a0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8014f7a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014f7e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8014f82:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8014f84:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8014f88:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014f8c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014f90:	bf0a      	itet	eq
 8014f92:	464a      	moveq	r2, r9
 8014f94:	461a      	movne	r2, r3
 8014f96:	4699      	moveq	r9, r3
 8014f98:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8014f9c:	1ad2      	subs	r2, r2, r3
 8014f9e:	6833      	ldr	r3, [r6, #0]
 8014fa0:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8014fa4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8014fa8:	af0f      	add	r7, sp, #60	; 0x3c
 8014faa:	7859      	ldrb	r1, [r3, #1]
 8014fac:	9707      	str	r7, [sp, #28]
 8014fae:	2300      	movs	r3, #0
 8014fb0:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8014fb4:	f8ad 3018 	strh.w	r3, [sp, #24]
 8014fb8:	f88d 1020 	strb.w	r1, [sp, #32]
 8014fbc:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8014fc0:	9509      	str	r5, [sp, #36]	; 0x24
 8014fc2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8014fc6:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8014fca:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8014fce:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8014fd2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8014fd6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014fda:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8014fde:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014fe2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8014fe6:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8014fea:	b350      	cbz	r0, 8015042 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8014fec:	682b      	ldr	r3, [r5, #0]
 8014fee:	4628      	mov	r0, r5
 8014ff0:	695b      	ldr	r3, [r3, #20]
 8014ff2:	4798      	blx	r3
 8014ff4:	4607      	mov	r7, r0
 8014ff6:	b320      	cbz	r0, 8015042 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8014ff8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014ffa:	6803      	ldr	r3, [r0, #0]
 8014ffc:	4639      	mov	r1, r7
 8014ffe:	68db      	ldr	r3, [r3, #12]
 8015000:	4798      	blx	r3
 8015002:	4606      	mov	r6, r0
 8015004:	b1e8      	cbz	r0, 8015042 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015006:	7b43      	ldrb	r3, [r0, #13]
 8015008:	7a82      	ldrb	r2, [r0, #10]
 801500a:	005b      	lsls	r3, r3, #1
 801500c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015010:	4313      	orrs	r3, r2
 8015012:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015016:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 801501a:	2b06      	cmp	r3, #6
 801501c:	d111      	bne.n	8015042 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801501e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015020:	6803      	ldr	r3, [r0, #0]
 8015022:	4632      	mov	r2, r6
 8015024:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015026:	4639      	mov	r1, r7
 8015028:	4798      	blx	r3
 801502a:	7b73      	ldrb	r3, [r6, #13]
 801502c:	005b      	lsls	r3, r3, #1
 801502e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015032:	7ab3      	ldrb	r3, [r6, #10]
 8015034:	4313      	orrs	r3, r2
 8015036:	4418      	add	r0, r3
 8015038:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801503c:	4418      	add	r0, r3
 801503e:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8015042:	2600      	movs	r6, #0
 8015044:	4637      	mov	r7, r6
 8015046:	a806      	add	r0, sp, #24
 8015048:	f002 fe38 	bl	8017cbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801504c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8015050:	9b03      	ldr	r3, [sp, #12]
 8015052:	4286      	cmp	r6, r0
 8015054:	eba9 0903 	sub.w	r9, r9, r3
 8015058:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 801505c:	bfb8      	it	lt
 801505e:	4606      	movlt	r6, r0
 8015060:	3701      	adds	r7, #1
 8015062:	b236      	sxth	r6, r6
 8015064:	b2bf      	uxth	r7, r7
 8015066:	fa0f f989 	sxth.w	r9, r9
 801506a:	2b00      	cmp	r3, #0
 801506c:	f43f af0d 	beq.w	8014e8a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015070:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8015074:	2b00      	cmp	r3, #0
 8015076:	f47f af08 	bne.w	8014e8a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801507a:	7a2b      	ldrb	r3, [r5, #8]
 801507c:	444b      	add	r3, r9
 801507e:	2b00      	cmp	r3, #0
 8015080:	dce1      	bgt.n	8015046 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8015082:	e702      	b.n	8014e8a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015084:	200138b0 	.word	0x200138b0
 8015088:	200138ac 	.word	0x200138ac
 801508c:	200138b4 	.word	0x200138b4
 8015090:	200138b8 	.word	0x200138b8
 8015094:	ebaa 0606 	sub.w	r6, sl, r6
 8015098:	2002      	movs	r0, #2
 801509a:	fb96 f6f0 	sdiv	r6, r6, r0
 801509e:	e71d      	b.n	8014edc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80150a0:	441e      	add	r6, r3
 80150a2:	ebaa 0606 	sub.w	r6, sl, r6
 80150a6:	e719      	b.n	8014edc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80150a8:	8925      	ldrh	r5, [r4, #8]
 80150aa:	1aed      	subs	r5, r5, r3
 80150ac:	eba5 050a 	sub.w	r5, r5, sl
 80150b0:	fa0f fb85 	sxth.w	fp, r5
 80150b4:	8965      	ldrh	r5, [r4, #10]
 80150b6:	eba5 0509 	sub.w	r5, r5, r9
 80150ba:	b22d      	sxth	r5, r5
 80150bc:	e72e      	b.n	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80150be:	8965      	ldrh	r5, [r4, #10]
 80150c0:	1aed      	subs	r5, r5, r3
 80150c2:	eba5 050a 	sub.w	r5, r5, sl
 80150c6:	4633      	mov	r3, r6
 80150c8:	b22d      	sxth	r5, r5
 80150ca:	463e      	mov	r6, r7
 80150cc:	f04f 0b00 	mov.w	fp, #0
 80150d0:	461f      	mov	r7, r3
 80150d2:	e723      	b.n	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80150d4:	2500      	movs	r5, #0
 80150d6:	e721      	b.n	8014f1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

080150d8 <_ZN8touchgfx8TextAreaD0Ev>:
 80150d8:	b510      	push	{r4, lr}
 80150da:	2148      	movs	r1, #72	; 0x48
 80150dc:	4604      	mov	r4, r0
 80150de:	f017 fc88 	bl	802c9f2 <_ZdlPvj>
 80150e2:	4620      	mov	r0, r4
 80150e4:	bd10      	pop	{r4, pc}
	...

080150e8 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 80150e8:	b513      	push	{r0, r1, r4, lr}
 80150ea:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 80150ee:	4604      	mov	r4, r0
 80150f0:	b1fb      	cbz	r3, 8015132 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80150f2:	4b16      	ldr	r3, [pc, #88]	; (801514c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 80150f4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80150f6:	881b      	ldrh	r3, [r3, #0]
 80150f8:	428b      	cmp	r3, r1
 80150fa:	d91a      	bls.n	8015132 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80150fc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8015100:	2b00      	cmp	r3, #0
 8015102:	dd16      	ble.n	8015132 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015104:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015108:	2b00      	cmp	r3, #0
 801510a:	dd12      	ble.n	8015132 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801510c:	4b10      	ldr	r3, [pc, #64]	; (8015150 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801510e:	6818      	ldr	r0, [r3, #0]
 8015110:	f7f5 f9fa 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8015114:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8015118:	6822      	ldr	r2, [r4, #0]
 801511a:	2b00      	cmp	r3, #0
 801511c:	db06      	blt.n	801512c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801511e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8015122:	2b00      	cmp	r3, #0
 8015124:	db02      	blt.n	801512c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8015126:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8015128:	4298      	cmp	r0, r3
 801512a:	d004      	beq.n	8015136 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 801512c:	6953      	ldr	r3, [r2, #20]
 801512e:	4620      	mov	r0, r4
 8015130:	4798      	blx	r3
 8015132:	b002      	add	sp, #8
 8015134:	bd10      	pop	{r4, pc}
 8015136:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 801513a:	c903      	ldmia	r1, {r0, r1}
 801513c:	466b      	mov	r3, sp
 801513e:	e883 0003 	stmia.w	r3, {r0, r1}
 8015142:	6912      	ldr	r2, [r2, #16]
 8015144:	4619      	mov	r1, r3
 8015146:	4620      	mov	r0, r4
 8015148:	4790      	blx	r2
 801514a:	e7f2      	b.n	8015132 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801514c:	200138b0 	.word	0x200138b0
 8015150:	200138b8 	.word	0x200138b8

08015154 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8015154:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015158:	4b44      	ldr	r3, [pc, #272]	; (801526c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 801515a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801515c:	881b      	ldrh	r3, [r3, #0]
 801515e:	4293      	cmp	r3, r2
 8015160:	b08e      	sub	sp, #56	; 0x38
 8015162:	4604      	mov	r4, r0
 8015164:	d97e      	bls.n	8015264 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8015166:	6808      	ldr	r0, [r1, #0]
 8015168:	4d41      	ldr	r5, [pc, #260]	; (8015270 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 801516a:	6849      	ldr	r1, [r1, #4]
 801516c:	ab05      	add	r3, sp, #20
 801516e:	c303      	stmia	r3!, {r0, r1}
 8015170:	4611      	mov	r1, r2
 8015172:	6828      	ldr	r0, [r5, #0]
 8015174:	f7f5 f9c8 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8015178:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801517c:	2b00      	cmp	r3, #0
 801517e:	db11      	blt.n	80151a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8015180:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8015184:	2b00      	cmp	r3, #0
 8015186:	db0d      	blt.n	80151a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8015188:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801518a:	4298      	cmp	r0, r3
 801518c:	d10a      	bne.n	80151a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801518e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8015192:	e892 0003 	ldmia.w	r2, {r0, r1}
 8015196:	ab09      	add	r3, sp, #36	; 0x24
 8015198:	e883 0003 	stmia.w	r3, {r0, r1}
 801519c:	4619      	mov	r1, r3
 801519e:	a805      	add	r0, sp, #20
 80151a0:	f7fd fbec 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 80151a4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80151a8:	2b00      	cmp	r3, #0
 80151aa:	dd5b      	ble.n	8015264 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80151ac:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80151b0:	2b00      	cmp	r3, #0
 80151b2:	dd57      	ble.n	8015264 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80151b4:	4f2f      	ldr	r7, [pc, #188]	; (8015274 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80151b6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80151b8:	683b      	ldr	r3, [r7, #0]
 80151ba:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80151be:	4b2e      	ldr	r3, [pc, #184]	; (8015278 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80151c0:	681b      	ldr	r3, [r3, #0]
 80151c2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80151c6:	2e00      	cmp	r6, #0
 80151c8:	d04c      	beq.n	8015264 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80151ca:	6823      	ldr	r3, [r4, #0]
 80151cc:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 80151d0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80151d2:	4620      	mov	r0, r4
 80151d4:	4798      	blx	r3
 80151d6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80151d8:	683b      	ldr	r3, [r7, #0]
 80151da:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 80151de:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 80151e2:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 80151e6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80151e8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80151ec:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 80151f0:	785b      	ldrb	r3, [r3, #1]
 80151f2:	9609      	str	r6, [sp, #36]	; 0x24
 80151f4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80151f8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80151fc:	4b1f      	ldr	r3, [pc, #124]	; (801527c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 80151fe:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8015202:	681b      	ldr	r3, [r3, #0]
 8015204:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8015208:	910b      	str	r1, [sp, #44]	; 0x2c
 801520a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 801520e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8015212:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8015216:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801521a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801521e:	b10a      	cbz	r2, 8015224 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8015220:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8015222:	b906      	cbnz	r6, 8015226 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8015224:	689e      	ldr	r6, [r3, #8]
 8015226:	af07      	add	r7, sp, #28
 8015228:	4621      	mov	r1, r4
 801522a:	4638      	mov	r0, r7
 801522c:	f004 fc7c 	bl	8019b28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015230:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015232:	6828      	ldr	r0, [r5, #0]
 8015234:	f7f5 f968 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8015238:	6823      	ldr	r3, [r4, #0]
 801523a:	4605      	mov	r5, r0
 801523c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801523e:	4620      	mov	r0, r4
 8015240:	4798      	blx	r3
 8015242:	6823      	ldr	r3, [r4, #0]
 8015244:	4680      	mov	r8, r0
 8015246:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801524a:	4620      	mov	r0, r4
 801524c:	4798      	blx	r3
 801524e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8015252:	ab09      	add	r3, sp, #36	; 0x24
 8015254:	9300      	str	r3, [sp, #0]
 8015256:	9501      	str	r5, [sp, #4]
 8015258:	ab05      	add	r3, sp, #20
 801525a:	e897 0006 	ldmia.w	r7, {r1, r2}
 801525e:	4630      	mov	r0, r6
 8015260:	f7f5 f904 	bl	800a46c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8015264:	b00e      	add	sp, #56	; 0x38
 8015266:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801526a:	bf00      	nop
 801526c:	200138b0 	.word	0x200138b0
 8015270:	200138b8 	.word	0x200138b8
 8015274:	200138ac 	.word	0x200138ac
 8015278:	200138b4 	.word	0x200138b4
 801527c:	20013854 	.word	0x20013854

08015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8015280:	b538      	push	{r3, r4, r5, lr}
 8015282:	4b0e      	ldr	r3, [pc, #56]	; (80152bc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8015284:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015286:	881b      	ldrh	r3, [r3, #0]
 8015288:	429a      	cmp	r2, r3
 801528a:	4604      	mov	r4, r0
 801528c:	d214      	bcs.n	80152b8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801528e:	6803      	ldr	r3, [r0, #0]
 8015290:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8015292:	4798      	blx	r3
 8015294:	6823      	ldr	r3, [r4, #0]
 8015296:	4605      	mov	r5, r0
 8015298:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801529a:	4620      	mov	r0, r4
 801529c:	4798      	blx	r3
 801529e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80152a2:	b22d      	sxth	r5, r5
 80152a4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80152a8:	4601      	mov	r1, r0
 80152aa:	bf06      	itte	eq
 80152ac:	4602      	moveq	r2, r0
 80152ae:	4629      	moveq	r1, r5
 80152b0:	462a      	movne	r2, r5
 80152b2:	4620      	mov	r0, r4
 80152b4:	f7fd f942 	bl	801253c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80152b8:	bd38      	pop	{r3, r4, r5, pc}
 80152ba:	bf00      	nop
 80152bc:	200138b0 	.word	0x200138b0

080152c0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80152c0:	b530      	push	{r4, r5, lr}
 80152c2:	888b      	ldrh	r3, [r1, #4]
 80152c4:	8583      	strh	r3, [r0, #44]	; 0x2c
 80152c6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80152ca:	b085      	sub	sp, #20
 80152cc:	4604      	mov	r4, r0
 80152ce:	b923      	cbnz	r3, 80152da <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80152d0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80152d4:	b90b      	cbnz	r3, 80152da <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80152d6:	f7ff ffd3 	bl	8015280 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80152da:	6823      	ldr	r3, [r4, #0]
 80152dc:	466d      	mov	r5, sp
 80152de:	4621      	mov	r1, r4
 80152e0:	4628      	mov	r0, r5
 80152e2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80152e6:	4798      	blx	r3
 80152e8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80152ec:	343c      	adds	r4, #60	; 0x3c
 80152ee:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80152f2:	b005      	add	sp, #20
 80152f4:	bd30      	pop	{r4, r5, pc}

080152f6 <_ZNK8touchgfx3Box12getSolidRectEv>:
 80152f6:	2300      	movs	r3, #0
 80152f8:	8083      	strh	r3, [r0, #4]
 80152fa:	80c3      	strh	r3, [r0, #6]
 80152fc:	8003      	strh	r3, [r0, #0]
 80152fe:	8043      	strh	r3, [r0, #2]
 8015300:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8015304:	2bff      	cmp	r3, #255	; 0xff
 8015306:	bf01      	itttt	eq
 8015308:	890b      	ldrheq	r3, [r1, #8]
 801530a:	8083      	strheq	r3, [r0, #4]
 801530c:	894b      	ldrheq	r3, [r1, #10]
 801530e:	80c3      	strheq	r3, [r0, #6]
 8015310:	4770      	bx	lr
	...

08015314 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8015314:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015316:	4604      	mov	r4, r0
 8015318:	6808      	ldr	r0, [r1, #0]
 801531a:	6849      	ldr	r1, [r1, #4]
 801531c:	466b      	mov	r3, sp
 801531e:	c303      	stmia	r3!, {r0, r1}
 8015320:	6823      	ldr	r3, [r4, #0]
 8015322:	4669      	mov	r1, sp
 8015324:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015326:	4620      	mov	r0, r4
 8015328:	4798      	blx	r3
 801532a:	4b08      	ldr	r3, [pc, #32]	; (801534c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 801532c:	681b      	ldr	r3, [r3, #0]
 801532e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015332:	b10a      	cbz	r2, 8015338 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8015334:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015336:	b900      	cbnz	r0, 801533a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8015338:	6898      	ldr	r0, [r3, #8]
 801533a:	6803      	ldr	r3, [r0, #0]
 801533c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 801533e:	6a1d      	ldr	r5, [r3, #32]
 8015340:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8015344:	4669      	mov	r1, sp
 8015346:	47a8      	blx	r5
 8015348:	b003      	add	sp, #12
 801534a:	bd30      	pop	{r4, r5, pc}
 801534c:	20013854 	.word	0x20013854

08015350 <_ZN8touchgfx3BoxD1Ev>:
 8015350:	4770      	bx	lr

08015352 <_ZN8touchgfx3BoxD0Ev>:
 8015352:	b510      	push	{r4, lr}
 8015354:	212c      	movs	r1, #44	; 0x2c
 8015356:	4604      	mov	r4, r0
 8015358:	f017 fb4b 	bl	802c9f2 <_ZdlPvj>
 801535c:	4620      	mov	r0, r4
 801535e:	bd10      	pop	{r4, pc}

08015360 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8015360:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8015364:	b12a      	cbz	r2, 8015372 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8015366:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801536a:	b112      	cbz	r2, 8015372 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801536c:	6803      	ldr	r3, [r0, #0]
 801536e:	695b      	ldr	r3, [r3, #20]
 8015370:	4718      	bx	r3
 8015372:	4770      	bx	lr

08015374 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 8015374:	b570      	push	{r4, r5, r6, lr}
 8015376:	6803      	ldr	r3, [r0, #0]
 8015378:	4604      	mov	r4, r0
 801537a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801537c:	4615      	mov	r5, r2
 801537e:	4798      	blx	r3
 8015380:	6823      	ldr	r3, [r4, #0]
 8015382:	4629      	mov	r1, r5
 8015384:	4620      	mov	r0, r4
 8015386:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015388:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801538c:	4718      	bx	r3

0801538e <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 801538e:	b570      	push	{r4, r5, r6, lr}
 8015390:	6803      	ldr	r3, [r0, #0]
 8015392:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8015394:	4604      	mov	r4, r0
 8015396:	460e      	mov	r6, r1
 8015398:	4615      	mov	r5, r2
 801539a:	4798      	blx	r3
 801539c:	8030      	strh	r0, [r6, #0]
 801539e:	6823      	ldr	r3, [r4, #0]
 80153a0:	4620      	mov	r0, r4
 80153a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80153a4:	4798      	blx	r3
 80153a6:	8028      	strh	r0, [r5, #0]
 80153a8:	bd70      	pop	{r4, r5, r6, pc}

080153aa <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 80153aa:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 80153ae:	4770      	bx	lr

080153b0 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 80153b0:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 80153b4:	4770      	bx	lr

080153b6 <_ZN8touchgfx10TiledImageD1Ev>:
 80153b6:	4770      	bx	lr

080153b8 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 80153b8:	b510      	push	{r4, lr}
 80153ba:	4604      	mov	r4, r0
 80153bc:	f000 fd31 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80153c0:	6823      	ldr	r3, [r4, #0]
 80153c2:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 80153c6:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 80153ca:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80153cc:	4620      	mov	r0, r4
 80153ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80153d2:	4718      	bx	r3

080153d4 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 80153d4:	b538      	push	{r3, r4, r5, lr}
 80153d6:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80153da:	4604      	mov	r4, r0
 80153dc:	8541      	strh	r1, [r0, #42]	; 0x2a
 80153de:	4628      	mov	r0, r5
 80153e0:	f006 fe6e 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80153e4:	b188      	cbz	r0, 801540a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 80153e6:	4628      	mov	r0, r5
 80153e8:	f006 fe6a 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80153ec:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 80153f0:	fb92 f3f0 	sdiv	r3, r2, r0
 80153f4:	fb03 2010 	mls	r0, r3, r0, r2
 80153f8:	2800      	cmp	r0, #0
 80153fa:	8560      	strh	r0, [r4, #42]	; 0x2a
 80153fc:	da05      	bge.n	801540a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 80153fe:	4628      	mov	r0, r5
 8015400:	f006 fe5e 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015404:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8015406:	4418      	add	r0, r3
 8015408:	8560      	strh	r0, [r4, #42]	; 0x2a
 801540a:	bd38      	pop	{r3, r4, r5, pc}

0801540c <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 801540c:	b538      	push	{r3, r4, r5, lr}
 801540e:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8015412:	4604      	mov	r4, r0
 8015414:	8581      	strh	r1, [r0, #44]	; 0x2c
 8015416:	4628      	mov	r0, r5
 8015418:	f006 fe86 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801541c:	b188      	cbz	r0, 8015442 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 801541e:	4628      	mov	r0, r5
 8015420:	f006 fe82 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015424:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8015428:	fb92 f3f0 	sdiv	r3, r2, r0
 801542c:	fb03 2010 	mls	r0, r3, r0, r2
 8015430:	2800      	cmp	r0, #0
 8015432:	85a0      	strh	r0, [r4, #44]	; 0x2c
 8015434:	da05      	bge.n	8015442 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 8015436:	4628      	mov	r0, r5
 8015438:	f006 fe76 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801543c:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 801543e:	4418      	add	r0, r3
 8015440:	85a0      	strh	r0, [r4, #44]	; 0x2c
 8015442:	bd38      	pop	{r3, r4, r5, pc}

08015444 <_ZN8touchgfx10TiledImageD0Ev>:
 8015444:	b510      	push	{r4, lr}
 8015446:	2130      	movs	r1, #48	; 0x30
 8015448:	4604      	mov	r4, r0
 801544a:	f017 fad2 	bl	802c9f2 <_ZdlPvj>
 801544e:	4620      	mov	r0, r4
 8015450:	bd10      	pop	{r4, pc}
	...

08015454 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 8015454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015458:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 801545c:	b093      	sub	sp, #76	; 0x4c
 801545e:	4607      	mov	r7, r0
 8015460:	4658      	mov	r0, fp
 8015462:	460e      	mov	r6, r1
 8015464:	f006 fe2c 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015468:	4681      	mov	r9, r0
 801546a:	4658      	mov	r0, fp
 801546c:	f006 fe5c 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015470:	4605      	mov	r5, r0
 8015472:	f1b9 0f00 	cmp.w	r9, #0
 8015476:	f000 80c4 	beq.w	8015602 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 801547a:	2800      	cmp	r0, #0
 801547c:	f000 80c1 	beq.w	8015602 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8015480:	2300      	movs	r3, #0
 8015482:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 8015486:	683b      	ldr	r3, [r7, #0]
 8015488:	a90e      	add	r1, sp, #56	; 0x38
 801548a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801548c:	4638      	mov	r0, r7
 801548e:	4798      	blx	r3
 8015490:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 8015494:	f9b6 3000 	ldrsh.w	r3, [r6]
 8015498:	88b1      	ldrh	r1, [r6, #4]
 801549a:	fa1f f889 	uxth.w	r8, r9
 801549e:	189c      	adds	r4, r3, r2
 80154a0:	440b      	add	r3, r1
 80154a2:	fa02 f383 	sxtah	r3, r2, r3
 80154a6:	fb94 f4f9 	sdiv	r4, r4, r9
 80154aa:	fb14 f408 	smulbb	r4, r4, r8
 80154ae:	1aa4      	subs	r4, r4, r2
 80154b0:	3b01      	subs	r3, #1
 80154b2:	b2aa      	uxth	r2, r5
 80154b4:	fb93 f3f9 	sdiv	r3, r3, r9
 80154b8:	fb13 f308 	smulbb	r3, r3, r8
 80154bc:	b21b      	sxth	r3, r3
 80154be:	9205      	str	r2, [sp, #20]
 80154c0:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 80154c4:	9805      	ldr	r0, [sp, #20]
 80154c6:	930b      	str	r3, [sp, #44]	; 0x2c
 80154c8:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80154cc:	185a      	adds	r2, r3, r1
 80154ce:	fb92 f2f5 	sdiv	r2, r2, r5
 80154d2:	fb12 f200 	smulbb	r2, r2, r0
 80154d6:	1a52      	subs	r2, r2, r1
 80154d8:	b212      	sxth	r2, r2
 80154da:	920c      	str	r2, [sp, #48]	; 0x30
 80154dc:	88f2      	ldrh	r2, [r6, #6]
 80154de:	4413      	add	r3, r2
 80154e0:	fa01 f383 	sxtah	r3, r1, r3
 80154e4:	3b01      	subs	r3, #1
 80154e6:	fb93 f3f5 	sdiv	r3, r3, r5
 80154ea:	fb13 f300 	smulbb	r3, r3, r0
 80154ee:	b2a4      	uxth	r4, r4
 80154f0:	b21b      	sxth	r3, r3
 80154f2:	930d      	str	r3, [sp, #52]	; 0x34
 80154f4:	eb08 0504 	add.w	r5, r8, r4
 80154f8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80154fa:	b223      	sxth	r3, r4
 80154fc:	4293      	cmp	r3, r2
 80154fe:	b2ad      	uxth	r5, r5
 8015500:	9306      	str	r3, [sp, #24]
 8015502:	dc7e      	bgt.n	8015602 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8015504:	b22b      	sxth	r3, r5
 8015506:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801550a:	930a      	str	r3, [sp, #40]	; 0x28
 801550c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801550e:	4599      	cmp	r9, r3
 8015510:	dd03      	ble.n	801551a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 8015512:	4444      	add	r4, r8
 8015514:	b2a4      	uxth	r4, r4
 8015516:	4445      	add	r5, r8
 8015518:	e7ee      	b.n	80154f8 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 801551a:	f9b6 c000 	ldrsh.w	ip, [r6]
 801551e:	88b2      	ldrh	r2, [r6, #4]
 8015520:	9806      	ldr	r0, [sp, #24]
 8015522:	9905      	ldr	r1, [sp, #20]
 8015524:	4462      	add	r2, ip
 8015526:	b292      	uxth	r2, r2
 8015528:	b213      	sxth	r3, r2
 801552a:	9308      	str	r3, [sp, #32]
 801552c:	fa1f f389 	uxth.w	r3, r9
 8015530:	4419      	add	r1, r3
 8015532:	9307      	str	r3, [sp, #28]
 8015534:	4603      	mov	r3, r0
 8015536:	9808      	ldr	r0, [sp, #32]
 8015538:	b289      	uxth	r1, r1
 801553a:	4283      	cmp	r3, r0
 801553c:	fa0f fa81 	sxth.w	sl, r1
 8015540:	da5b      	bge.n	80155fa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8015542:	980a      	ldr	r0, [sp, #40]	; 0x28
 8015544:	4584      	cmp	ip, r0
 8015546:	da58      	bge.n	80155fa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8015548:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 801554c:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 8015550:	4486      	add	lr, r0
 8015552:	fa1f fe8e 	uxth.w	lr, lr
 8015556:	fa0f f38e 	sxth.w	r3, lr
 801555a:	4599      	cmp	r9, r3
 801555c:	9309      	str	r3, [sp, #36]	; 0x24
 801555e:	da4c      	bge.n	80155fa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8015560:	4550      	cmp	r0, sl
 8015562:	da4a      	bge.n	80155fa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8015564:	9b06      	ldr	r3, [sp, #24]
 8015566:	459c      	cmp	ip, r3
 8015568:	bfb8      	it	lt
 801556a:	469c      	movlt	ip, r3
 801556c:	9b08      	ldr	r3, [sp, #32]
 801556e:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 8015572:	4548      	cmp	r0, r9
 8015574:	bfb8      	it	lt
 8015576:	4648      	movlt	r0, r9
 8015578:	4699      	mov	r9, r3
 801557a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801557c:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 8015580:	4599      	cmp	r9, r3
 8015582:	bfc8      	it	gt
 8015584:	462a      	movgt	r2, r5
 8015586:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015588:	4553      	cmp	r3, sl
 801558a:	bfd8      	it	le
 801558c:	4671      	movle	r1, lr
 801558e:	eba2 020c 	sub.w	r2, r2, ip
 8015592:	1a09      	subs	r1, r1, r0
 8015594:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 8015598:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 801559c:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80155a0:	9b07      	ldr	r3, [sp, #28]
 80155a2:	1b12      	subs	r2, r2, r4
 80155a4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80155a8:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80155ac:	1ad2      	subs	r2, r2, r3
 80155ae:	4b16      	ldr	r3, [pc, #88]	; (8015608 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 80155b0:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 80155b4:	681a      	ldr	r2, [r3, #0]
 80155b6:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 80155ba:	b109      	cbz	r1, 80155c0 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 80155bc:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 80155be:	b900      	cbnz	r0, 80155c2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 80155c0:	6890      	ldr	r0, [r2, #8]
 80155c2:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80155c6:	9b07      	ldr	r3, [sp, #28]
 80155c8:	6801      	ldr	r1, [r0, #0]
 80155ca:	f04f 0c01 	mov.w	ip, #1
 80155ce:	f8cd c008 	str.w	ip, [sp, #8]
 80155d2:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 80155d6:	f8cd c004 	str.w	ip, [sp, #4]
 80155da:	4413      	add	r3, r2
 80155dc:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 80155e0:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 80155e4:	f8cd c000 	str.w	ip, [sp]
 80155e8:	4422      	add	r2, r4
 80155ea:	f8d1 9008 	ldr.w	r9, [r1, #8]
 80155ee:	b21b      	sxth	r3, r3
 80155f0:	b212      	sxth	r2, r2
 80155f2:	4659      	mov	r1, fp
 80155f4:	47c8      	blx	r9
 80155f6:	46d1      	mov	r9, sl
 80155f8:	e788      	b.n	801550c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 80155fa:	2300      	movs	r3, #0
 80155fc:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 8015600:	e7cc      	b.n	801559c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 8015602:	b013      	add	sp, #76	; 0x4c
 8015604:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015608:	20013854 	.word	0x20013854

0801560c <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 801560c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015610:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8015614:	2bff      	cmp	r3, #255	; 0xff
 8015616:	4606      	mov	r6, r0
 8015618:	4689      	mov	r9, r1
 801561a:	d008      	beq.n	801562e <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 801561c:	2300      	movs	r3, #0
 801561e:	8003      	strh	r3, [r0, #0]
 8015620:	8043      	strh	r3, [r0, #2]
 8015622:	8083      	strh	r3, [r0, #4]
 8015624:	4630      	mov	r0, r6
 8015626:	80f3      	strh	r3, [r6, #6]
 8015628:	b003      	add	sp, #12
 801562a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801562e:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 8015632:	4659      	mov	r1, fp
 8015634:	4668      	mov	r0, sp
 8015636:	f006 fdab 	bl	801c190 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801563a:	4658      	mov	r0, fp
 801563c:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 8015640:	f9bd 7000 	ldrsh.w	r7, [sp]
 8015644:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 8015648:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 801564c:	f006 fd38 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015650:	4284      	cmp	r4, r0
 8015652:	d10d      	bne.n	8015670 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 8015654:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 8015658:	4658      	mov	r0, fp
 801565a:	f006 fd65 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801565e:	4580      	cmp	r8, r0
 8015660:	d129      	bne.n	80156b6 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 8015662:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 8015666:	8037      	strh	r7, [r6, #0]
 8015668:	f8a6 a002 	strh.w	sl, [r6, #2]
 801566c:	80b5      	strh	r5, [r6, #4]
 801566e:	e7d9      	b.n	8015624 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 8015670:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 8015674:	4658      	mov	r0, fp
 8015676:	f006 fd23 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801567a:	1b7f      	subs	r7, r7, r5
 801567c:	b2bd      	uxth	r5, r7
 801567e:	b22f      	sxth	r7, r5
 8015680:	4428      	add	r0, r5
 8015682:	2f00      	cmp	r7, #0
 8015684:	b2a3      	uxth	r3, r4
 8015686:	b280      	uxth	r0, r0
 8015688:	bfb8      	it	lt
 801568a:	18ed      	addlt	r5, r5, r3
 801568c:	4403      	add	r3, r0
 801568e:	b29b      	uxth	r3, r3
 8015690:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 8015694:	bfb8      	it	lt
 8015696:	b22d      	sxthlt	r5, r5
 8015698:	b219      	sxth	r1, r3
 801569a:	bfae      	itee	ge
 801569c:	4625      	movge	r5, r4
 801569e:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 80156a2:	2700      	movlt	r7, #0
 80156a4:	4291      	cmp	r1, r2
 80156a6:	bfc4      	itt	gt
 80156a8:	1a9c      	subgt	r4, r3, r2
 80156aa:	b224      	sxthgt	r4, r4
 80156ac:	42ac      	cmp	r4, r5
 80156ae:	bfc4      	itt	gt
 80156b0:	b207      	sxthgt	r7, r0
 80156b2:	4625      	movgt	r5, r4
 80156b4:	e7d0      	b.n	8015658 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 80156b6:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 80156ba:	4658      	mov	r0, fp
 80156bc:	f006 fd34 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80156c0:	ebaa 0404 	sub.w	r4, sl, r4
 80156c4:	b2a4      	uxth	r4, r4
 80156c6:	fa0f fa84 	sxth.w	sl, r4
 80156ca:	4420      	add	r0, r4
 80156cc:	f1ba 0f00 	cmp.w	sl, #0
 80156d0:	fa1f f288 	uxth.w	r2, r8
 80156d4:	b280      	uxth	r0, r0
 80156d6:	bfb8      	it	lt
 80156d8:	18a3      	addlt	r3, r4, r2
 80156da:	4402      	add	r2, r0
 80156dc:	b292      	uxth	r2, r2
 80156de:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 80156e2:	bfb8      	it	lt
 80156e4:	b21b      	sxthlt	r3, r3
 80156e6:	b214      	sxth	r4, r2
 80156e8:	bfae      	itee	ge
 80156ea:	4643      	movge	r3, r8
 80156ec:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80156f0:	f04f 0a00 	movlt.w	sl, #0
 80156f4:	428c      	cmp	r4, r1
 80156f6:	bfc4      	itt	gt
 80156f8:	eba2 0801 	subgt.w	r8, r2, r1
 80156fc:	fa0f f888 	sxthgt.w	r8, r8
 8015700:	4598      	cmp	r8, r3
 8015702:	bfc4      	itt	gt
 8015704:	fa0f fa80 	sxthgt.w	sl, r0
 8015708:	4643      	movgt	r3, r8
 801570a:	e7ac      	b.n	8015666 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

0801570c <_ZNK8touchgfx5Image17invalidateContentEv>:
 801570c:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8015710:	b12a      	cbz	r2, 801571e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8015712:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8015716:	b112      	cbz	r2, 801571e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8015718:	6803      	ldr	r3, [r0, #0]
 801571a:	695b      	ldr	r3, [r3, #20]
 801571c:	4718      	bx	r3
 801571e:	4770      	bx	lr

08015720 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8015720:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8015724:	600b      	str	r3, [r1, #0]
 8015726:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 801572a:	6013      	str	r3, [r2, #0]
 801572c:	4770      	bx	lr

0801572e <_ZN8touchgfx5Gauge8setWidthEs>:
 801572e:	8101      	strh	r1, [r0, #8]
 8015730:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8015734:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8015738:	4770      	bx	lr

0801573a <_ZN8touchgfx5Gauge9setHeightEs>:
 801573a:	8141      	strh	r1, [r0, #10]
 801573c:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8015740:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8015744:	4770      	bx	lr

08015746 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8015746:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 801574a:	4770      	bx	lr

0801574c <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 801574c:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8015750:	4770      	bx	lr

08015752 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8015752:	4770      	bx	lr

08015754 <_ZN8touchgfx5GaugeD1Ev>:
 8015754:	4770      	bx	lr

08015756 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8015756:	b538      	push	{r3, r4, r5, lr}
 8015758:	4604      	mov	r4, r0
 801575a:	460d      	mov	r5, r1
 801575c:	f7fc fe07 	bl	801236e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8015760:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8015764:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8015768:	bd38      	pop	{r3, r4, r5, pc}

0801576a <_ZN8touchgfx5GaugeD0Ev>:
 801576a:	b510      	push	{r4, lr}
 801576c:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8015770:	4604      	mov	r4, r0
 8015772:	f017 f93e 	bl	802c9f2 <_ZdlPvj>
 8015776:	4620      	mov	r0, r4
 8015778:	bd10      	pop	{r4, pc}

0801577a <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 801577a:	b510      	push	{r4, lr}
 801577c:	6803      	ldr	r3, [r0, #0]
 801577e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8015782:	4604      	mov	r4, r0
 8015784:	4798      	blx	r3
 8015786:	b170      	cbz	r0, 80157a6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8015788:	6823      	ldr	r3, [r4, #0]
 801578a:	4620      	mov	r0, r4
 801578c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8015790:	4798      	blx	r3
 8015792:	b140      	cbz	r0, 80157a6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8015794:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8015798:	b12b      	cbz	r3, 80157a6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 801579a:	6823      	ldr	r3, [r4, #0]
 801579c:	4620      	mov	r0, r4
 801579e:	695b      	ldr	r3, [r3, #20]
 80157a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80157a4:	4718      	bx	r3
 80157a6:	bd10      	pop	{r4, pc}

080157a8 <_ZN8touchgfx5GaugeC1Ev>:
 80157a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80157aa:	4604      	mov	r4, r0
 80157ac:	4626      	mov	r6, r4
 80157ae:	f7fc feff 	bl	80125b0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 80157b2:	4b18      	ldr	r3, [pc, #96]	; (8015814 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 80157b4:	f846 3bb4 	str.w	r3, [r6], #180
 80157b8:	a902      	add	r1, sp, #8
 80157ba:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80157be:	f821 3d04 	strh.w	r3, [r1, #-4]!
 80157c2:	4630      	mov	r0, r6
 80157c4:	f015 f9a4 	bl	802ab10 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 80157c8:	2500      	movs	r5, #0
 80157ca:	2301      	movs	r3, #1
 80157cc:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 80157d0:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 80157d4:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 80157d8:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 80157dc:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 80157e0:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 80157e4:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 80157e8:	4638      	mov	r0, r7
 80157ea:	f014 fbd5 	bl	8029f98 <_ZN8touchgfx6CircleC1Ev>
 80157ee:	f104 0158 	add.w	r1, r4, #88	; 0x58
 80157f2:	4620      	mov	r0, r4
 80157f4:	f7fc ff7d 	bl	80126f2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80157f8:	4639      	mov	r1, r7
 80157fa:	4620      	mov	r0, r4
 80157fc:	f7fc ff38 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015800:	4620      	mov	r0, r4
 8015802:	4631      	mov	r1, r6
 8015804:	f7fc ff34 	bl	8012670 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015808:	4620      	mov	r0, r4
 801580a:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 801580e:	b003      	add	sp, #12
 8015810:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015812:	bf00      	nop
 8015814:	080319bc 	.word	0x080319bc

08015818 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8015818:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 801581c:	4770      	bx	lr

0801581e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 801581e:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8015822:	4770      	bx	lr

08015824 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8015824:	b538      	push	{r3, r4, r5, lr}
 8015826:	8902      	ldrh	r2, [r0, #8]
 8015828:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801582c:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8015830:	4604      	mov	r4, r0
 8015832:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8015836:	2200      	movs	r2, #0
 8015838:	4611      	mov	r1, r2
 801583a:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 801583e:	4628      	mov	r0, r5
 8015840:	f7ed fe54 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8015844:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8015848:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 801584c:	1a9b      	subs	r3, r3, r2
 801584e:	ee07 3a90 	vmov	s15, r3
 8015852:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8015856:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 801585a:	1a9b      	subs	r3, r3, r2
 801585c:	ee07 3a10 	vmov	s14, r3
 8015860:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015864:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015868:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 801586c:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8015870:	4628      	mov	r0, r5
 8015872:	f015 f999 	bl	802aba8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015876:	4b16      	ldr	r3, [pc, #88]	; (80158d0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8015878:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 801587c:	4628      	mov	r0, r5
 801587e:	f015 f993 	bl	802aba8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015882:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8015886:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 801588a:	ee07 3a90 	vmov	s15, r3
 801588e:	ee07 2a10 	vmov	s14, r2
 8015892:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015896:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801589a:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 801589e:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 80158a2:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 80158a6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80158aa:	4628      	mov	r0, r5
 80158ac:	f015 f97c 	bl	802aba8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80158b0:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 80158b4:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 80158b8:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80158bc:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 80158c0:	4628      	mov	r0, r5
 80158c2:	f015 f971 	bl	802aba8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80158c6:	2301      	movs	r3, #1
 80158c8:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 80158cc:	bd38      	pop	{r3, r4, r5, pc}
 80158ce:	bf00      	nop
 80158d0:	43960000 	.word	0x43960000

080158d4 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 80158d4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80158d6:	4604      	mov	r4, r0
 80158d8:	a802      	add	r0, sp, #8
 80158da:	4616      	mov	r6, r2
 80158dc:	f820 1d04 	strh.w	r1, [r0, #-4]!
 80158e0:	461d      	mov	r5, r3
 80158e2:	4601      	mov	r1, r0
 80158e4:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 80158e8:	f015 fab4 	bl	802ae54 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 80158ec:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 80158f0:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 80158f4:	4620      	mov	r0, r4
 80158f6:	f7ff ff95 	bl	8015824 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 80158fa:	b002      	add	sp, #8
 80158fc:	bd70      	pop	{r4, r5, r6, pc}

080158fe <_ZN8touchgfx5Gauge9setCenterEii>:
 80158fe:	b570      	push	{r4, r5, r6, lr}
 8015900:	4606      	mov	r6, r0
 8015902:	460d      	mov	r5, r1
 8015904:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8015908:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 801590c:	4614      	mov	r4, r2
 801590e:	f7ff ff89 	bl	8015824 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8015912:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8015916:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 801591a:	1aa4      	subs	r4, r4, r2
 801591c:	1a6d      	subs	r5, r5, r1
 801591e:	0164      	lsls	r4, r4, #5
 8015920:	016d      	lsls	r5, r5, #5
 8015922:	3410      	adds	r4, #16
 8015924:	3510      	adds	r5, #16
 8015926:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 801592a:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 801592e:	bd70      	pop	{r4, r5, r6, pc}

08015930 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8015930:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8015932:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8015934:	0149      	lsls	r1, r1, #5
 8015936:	4299      	cmp	r1, r3
 8015938:	4604      	mov	r4, r0
 801593a:	9101      	str	r1, [sp, #4]
 801593c:	d00b      	beq.n	8015956 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 801593e:	4601      	mov	r1, r0
 8015940:	aa01      	add	r2, sp, #4
 8015942:	a802      	add	r0, sp, #8
 8015944:	f014 fd26 	bl	802a394 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8015948:	9b01      	ldr	r3, [sp, #4]
 801594a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801594c:	6823      	ldr	r3, [r4, #0]
 801594e:	a902      	add	r1, sp, #8
 8015950:	691b      	ldr	r3, [r3, #16]
 8015952:	4620      	mov	r0, r4
 8015954:	4798      	blx	r3
 8015956:	b004      	add	sp, #16
 8015958:	bd10      	pop	{r4, pc}
	...

0801595c <_ZN8touchgfx5Gauge8setValueEi>:
 801595c:	b570      	push	{r4, r5, r6, lr}
 801595e:	4604      	mov	r4, r0
 8015960:	f7fc fd58 	bl	8012414 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8015964:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8015968:	429a      	cmp	r2, r3
 801596a:	bfac      	ite	ge
 801596c:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8015970:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8015974:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8015978:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 801597c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8015980:	1ac9      	subs	r1, r1, r3
 8015982:	2900      	cmp	r1, #0
 8015984:	bfb8      	it	lt
 8015986:	4249      	neglt	r1, r1
 8015988:	b289      	uxth	r1, r1
 801598a:	4620      	mov	r0, r4
 801598c:	f7fc fd64 	bl	8012458 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8015990:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8015994:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8015998:	eddf 6a19 	vldr	s13, [pc, #100]	; 8015a00 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 801599c:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8015a04 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 80159a0:	429a      	cmp	r2, r3
 80159a2:	4605      	mov	r5, r0
 80159a4:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 80159a8:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 80159ac:	da15      	bge.n	80159da <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 80159ae:	1b5b      	subs	r3, r3, r5
 80159b0:	ee07 3a90 	vmov	s15, r3
 80159b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80159b8:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 80159bc:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 80159c0:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 80159c4:	ee21 1a07 	vmul.f32	s2, s2, s14
 80159c8:	f015 f85d 	bl	802aa86 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 80159cc:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 80159d0:	1b49      	subs	r1, r1, r5
 80159d2:	4630      	mov	r0, r6
 80159d4:	f7ff ffac 	bl	8015930 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 80159d8:	bd70      	pop	{r4, r5, r6, pc}
 80159da:	442b      	add	r3, r5
 80159dc:	ee07 3a90 	vmov	s15, r3
 80159e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80159e4:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 80159e8:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 80159ec:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 80159f0:	ee21 1a07 	vmul.f32	s2, s2, s14
 80159f4:	f015 f847 	bl	802aa86 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 80159f8:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 80159fc:	4429      	add	r1, r5
 80159fe:	e7e8      	b.n	80159d2 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8015a00:	43340000 	.word	0x43340000
 8015a04:	40490fdb 	.word	0x40490fdb

08015a08 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8015a08:	b510      	push	{r4, lr}
 8015a0a:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8015a0e:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8015a12:	0149      	lsls	r1, r1, #5
 8015a14:	0152      	lsls	r2, r2, #5
 8015a16:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8015a1a:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8015a1e:	4604      	mov	r4, r0
 8015a20:	f7fc fca2 	bl	8012368 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8015a24:	4601      	mov	r1, r0
 8015a26:	4620      	mov	r0, r4
 8015a28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015a2c:	f7ff bf96 	b.w	801595c <_ZN8touchgfx5Gauge8setValueEi>

08015a30 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8015a30:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8015a34:	4770      	bx	lr

08015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8015a36:	b570      	push	{r4, r5, r6, lr}
 8015a38:	880b      	ldrh	r3, [r1, #0]
 8015a3a:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8015a3c:	4605      	mov	r5, r0
 8015a3e:	8813      	ldrh	r3, [r2, #0]
 8015a40:	f825 3f30 	strh.w	r3, [r5, #48]!
 8015a44:	4604      	mov	r4, r0
 8015a46:	4628      	mov	r0, r5
 8015a48:	f006 fb3a 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015a4c:	4606      	mov	r6, r0
 8015a4e:	4628      	mov	r0, r5
 8015a50:	f006 fb6a 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015a54:	6823      	ldr	r3, [r4, #0]
 8015a56:	4605      	mov	r5, r0
 8015a58:	4631      	mov	r1, r6
 8015a5a:	4620      	mov	r0, r4
 8015a5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015a5e:	4798      	blx	r3
 8015a60:	6823      	ldr	r3, [r4, #0]
 8015a62:	4629      	mov	r1, r5
 8015a64:	4620      	mov	r0, r4
 8015a66:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015a68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015a6c:	4718      	bx	r3

08015a6e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8015a6e:	b510      	push	{r4, lr}
 8015a70:	4604      	mov	r4, r0
 8015a72:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8015a74:	b150      	cbz	r0, 8015a8c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8015a76:	6803      	ldr	r3, [r0, #0]
 8015a78:	68db      	ldr	r3, [r3, #12]
 8015a7a:	4798      	blx	r3
 8015a7c:	b130      	cbz	r0, 8015a8c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8015a7e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8015a80:	6803      	ldr	r3, [r0, #0]
 8015a82:	4621      	mov	r1, r4
 8015a84:	689b      	ldr	r3, [r3, #8]
 8015a86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015a8a:	4718      	bx	r3
 8015a8c:	bd10      	pop	{r4, pc}

08015a8e <_ZNK8touchgfx6Button12getSolidRectEv>:
 8015a8e:	b510      	push	{r4, lr}
 8015a90:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8015a94:	2bff      	cmp	r3, #255	; 0xff
 8015a96:	4604      	mov	r4, r0
 8015a98:	d006      	beq.n	8015aa8 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8015a9a:	2300      	movs	r3, #0
 8015a9c:	8003      	strh	r3, [r0, #0]
 8015a9e:	8043      	strh	r3, [r0, #2]
 8015aa0:	8083      	strh	r3, [r0, #4]
 8015aa2:	80c3      	strh	r3, [r0, #6]
 8015aa4:	4620      	mov	r0, r4
 8015aa6:	bd10      	pop	{r4, pc}
 8015aa8:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8015aac:	b11b      	cbz	r3, 8015ab6 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8015aae:	3130      	adds	r1, #48	; 0x30
 8015ab0:	f006 fb6e 	bl	801c190 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8015ab4:	e7f6      	b.n	8015aa4 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8015ab6:	312e      	adds	r1, #46	; 0x2e
 8015ab8:	e7fa      	b.n	8015ab0 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08015abc <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8015abc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015ac0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8015ac4:	b08a      	sub	sp, #40	; 0x28
 8015ac6:	4604      	mov	r4, r0
 8015ac8:	4688      	mov	r8, r1
 8015aca:	2b00      	cmp	r3, #0
 8015acc:	d066      	beq.n	8015b9c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8015ace:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8015ad0:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015ad4:	a805      	add	r0, sp, #20
 8015ad6:	f006 faf3 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015ada:	4607      	mov	r7, r0
 8015adc:	a805      	add	r0, sp, #20
 8015ade:	f006 fb23 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015ae2:	f9b8 6000 	ldrsh.w	r6, [r8]
 8015ae6:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8015aea:	4432      	add	r2, r6
 8015aec:	b292      	uxth	r2, r2
 8015aee:	2300      	movs	r3, #0
 8015af0:	fa0f fc82 	sxth.w	ip, r2
 8015af4:	459c      	cmp	ip, r3
 8015af6:	9306      	str	r3, [sp, #24]
 8015af8:	dd52      	ble.n	8015ba0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015afa:	42b7      	cmp	r7, r6
 8015afc:	dd50      	ble.n	8015ba0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015afe:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8015b02:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8015b06:	442b      	add	r3, r5
 8015b08:	b29b      	uxth	r3, r3
 8015b0a:	b219      	sxth	r1, r3
 8015b0c:	2900      	cmp	r1, #0
 8015b0e:	dd47      	ble.n	8015ba0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015b10:	42a8      	cmp	r0, r5
 8015b12:	dd45      	ble.n	8015ba0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015b14:	4567      	cmp	r7, ip
 8015b16:	bfb8      	it	lt
 8015b18:	b2ba      	uxthlt	r2, r7
 8015b1a:	4288      	cmp	r0, r1
 8015b1c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8015b20:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8015b24:	bfb8      	it	lt
 8015b26:	b283      	uxthlt	r3, r0
 8015b28:	1b92      	subs	r2, r2, r6
 8015b2a:	1b5b      	subs	r3, r3, r5
 8015b2c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015b30:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015b34:	f8ad 6018 	strh.w	r6, [sp, #24]
 8015b38:	f8ad 501a 	strh.w	r5, [sp, #26]
 8015b3c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015b40:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015b44:	429a      	cmp	r2, r3
 8015b46:	d026      	beq.n	8015b96 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015b48:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015b4c:	2b00      	cmp	r3, #0
 8015b4e:	dd22      	ble.n	8015b96 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015b50:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8015b54:	2b00      	cmp	r3, #0
 8015b56:	dd1e      	ble.n	8015b96 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015b58:	2300      	movs	r3, #0
 8015b5a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8015b5e:	6823      	ldr	r3, [r4, #0]
 8015b60:	a908      	add	r1, sp, #32
 8015b62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015b64:	4620      	mov	r0, r4
 8015b66:	4798      	blx	r3
 8015b68:	4b0f      	ldr	r3, [pc, #60]	; (8015ba8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8015b6a:	681b      	ldr	r3, [r3, #0]
 8015b6c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015b70:	b10a      	cbz	r2, 8015b76 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8015b72:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015b74:	b900      	cbnz	r0, 8015b78 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8015b76:	6898      	ldr	r0, [r3, #8]
 8015b78:	6801      	ldr	r1, [r0, #0]
 8015b7a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8015b7e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015b82:	2501      	movs	r5, #1
 8015b84:	9502      	str	r5, [sp, #8]
 8015b86:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8015b8a:	9401      	str	r4, [sp, #4]
 8015b8c:	ac06      	add	r4, sp, #24
 8015b8e:	9400      	str	r4, [sp, #0]
 8015b90:	688c      	ldr	r4, [r1, #8]
 8015b92:	a905      	add	r1, sp, #20
 8015b94:	47a0      	blx	r4
 8015b96:	b00a      	add	sp, #40	; 0x28
 8015b98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015b9c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8015b9e:	e797      	b.n	8015ad0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8015ba0:	2300      	movs	r3, #0
 8015ba2:	9307      	str	r3, [sp, #28]
 8015ba4:	e7ca      	b.n	8015b3c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8015ba6:	bf00      	nop
 8015ba8:	20013854 	.word	0x20013854

08015bac <_ZNK8touchgfx6Button17invalidateContentEv>:
 8015bac:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8015bb0:	b12a      	cbz	r2, 8015bbe <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8015bb2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8015bb6:	b112      	cbz	r2, 8015bbe <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8015bb8:	6803      	ldr	r3, [r0, #0]
 8015bba:	695b      	ldr	r3, [r3, #20]
 8015bbc:	4718      	bx	r3
 8015bbe:	4770      	bx	lr

08015bc0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8015bc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015bc4:	4b2f      	ldr	r3, [pc, #188]	; (8015c84 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8015bc6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015bc8:	881b      	ldrh	r3, [r3, #0]
 8015bca:	4293      	cmp	r3, r2
 8015bcc:	b08d      	sub	sp, #52	; 0x34
 8015bce:	4604      	mov	r4, r0
 8015bd0:	460f      	mov	r7, r1
 8015bd2:	d954      	bls.n	8015c7e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8015bd4:	4b2c      	ldr	r3, [pc, #176]	; (8015c88 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8015bd6:	6819      	ldr	r1, [r3, #0]
 8015bd8:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8015bdc:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8015be0:	4a2a      	ldr	r2, [pc, #168]	; (8015c8c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8015be2:	6812      	ldr	r2, [r2, #0]
 8015be4:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8015be8:	2900      	cmp	r1, #0
 8015bea:	d048      	beq.n	8015c7e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8015bec:	785a      	ldrb	r2, [r3, #1]
 8015bee:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8015bf2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8015bf6:	4b26      	ldr	r3, [pc, #152]	; (8015c90 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8015bf8:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8015bfc:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8015c00:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8015c04:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8015c06:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8015c0a:	9107      	str	r1, [sp, #28]
 8015c0c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8015c10:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8015c14:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8015c18:	681a      	ldr	r2, [r3, #0]
 8015c1a:	f88d 8020 	strb.w	r8, [sp, #32]
 8015c1e:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8015c22:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8015c26:	9609      	str	r6, [sp, #36]	; 0x24
 8015c28:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8015c2c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8015c30:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8015c34:	b10b      	cbz	r3, 8015c3a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8015c36:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8015c38:	b905      	cbnz	r5, 8015c3c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8015c3a:	6895      	ldr	r5, [r2, #8]
 8015c3c:	ae05      	add	r6, sp, #20
 8015c3e:	4621      	mov	r1, r4
 8015c40:	4630      	mov	r0, r6
 8015c42:	f003 ff71 	bl	8019b28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015c46:	4b13      	ldr	r3, [pc, #76]	; (8015c94 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8015c48:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015c4a:	6818      	ldr	r0, [r3, #0]
 8015c4c:	f7f4 fc5c 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8015c50:	6823      	ldr	r3, [r4, #0]
 8015c52:	4680      	mov	r8, r0
 8015c54:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015c56:	4620      	mov	r0, r4
 8015c58:	4798      	blx	r3
 8015c5a:	6823      	ldr	r3, [r4, #0]
 8015c5c:	4681      	mov	r9, r0
 8015c5e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015c62:	4620      	mov	r0, r4
 8015c64:	4798      	blx	r3
 8015c66:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8015c6a:	ab07      	add	r3, sp, #28
 8015c6c:	9300      	str	r3, [sp, #0]
 8015c6e:	f8cd 8004 	str.w	r8, [sp, #4]
 8015c72:	463b      	mov	r3, r7
 8015c74:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015c78:	4628      	mov	r0, r5
 8015c7a:	f7f4 fbf7 	bl	800a46c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8015c7e:	b00d      	add	sp, #52	; 0x34
 8015c80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015c84:	200138b0 	.word	0x200138b0
 8015c88:	200138ac 	.word	0x200138ac
 8015c8c:	200138b4 	.word	0x200138b4
 8015c90:	20013854 	.word	0x20013854
 8015c94:	200138b8 	.word	0x200138b8

08015c98 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8015c98:	4770      	bx	lr

08015c9a <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8015c9a:	4770      	bx	lr

08015c9c <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8015c9c:	b510      	push	{r4, lr}
 8015c9e:	213c      	movs	r1, #60	; 0x3c
 8015ca0:	4604      	mov	r4, r0
 8015ca2:	f016 fea6 	bl	802c9f2 <_ZdlPvj>
 8015ca6:	4620      	mov	r0, r4
 8015ca8:	bd10      	pop	{r4, pc}

08015caa <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8015caa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015cae:	461c      	mov	r4, r3
 8015cb0:	4606      	mov	r6, r0
 8015cb2:	9f06      	ldr	r7, [sp, #24]
 8015cb4:	f7ff febf 	bl	8015a36 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8015cb8:	8823      	ldrh	r3, [r4, #0]
 8015cba:	86b3      	strh	r3, [r6, #52]	; 0x34
 8015cbc:	883b      	ldrh	r3, [r7, #0]
 8015cbe:	86f3      	strh	r3, [r6, #54]	; 0x36
 8015cc0:	4638      	mov	r0, r7
 8015cc2:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8015cc6:	f006 f9fb 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015cca:	f04f 0802 	mov.w	r8, #2
 8015cce:	fb95 f5f8 	sdiv	r5, r5, r8
 8015cd2:	b2ad      	uxth	r5, r5
 8015cd4:	fb90 f0f8 	sdiv	r0, r0, r8
 8015cd8:	1a2d      	subs	r5, r5, r0
 8015cda:	8735      	strh	r5, [r6, #56]	; 0x38
 8015cdc:	4638      	mov	r0, r7
 8015cde:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8015ce2:	fb94 f4f8 	sdiv	r4, r4, r8
 8015ce6:	f006 fa1f 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015cea:	b2a4      	uxth	r4, r4
 8015cec:	fb90 f0f8 	sdiv	r0, r0, r8
 8015cf0:	1a24      	subs	r4, r4, r0
 8015cf2:	8774      	strh	r4, [r6, #58]	; 0x3a
 8015cf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015cf8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8015cf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015cfc:	4604      	mov	r4, r0
 8015cfe:	b08c      	sub	sp, #48	; 0x30
 8015d00:	460d      	mov	r5, r1
 8015d02:	f7ff fedb 	bl	8015abc <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8015d06:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8015d0a:	2b00      	cmp	r3, #0
 8015d0c:	d05d      	beq.n	8015dca <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8015d0e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8015d10:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015d14:	a805      	add	r0, sp, #20
 8015d16:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8015d1a:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8015d1e:	f006 f9cf 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015d22:	4606      	mov	r6, r0
 8015d24:	a805      	add	r0, sp, #20
 8015d26:	f006 f9ff 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015d2a:	6869      	ldr	r1, [r5, #4]
 8015d2c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8015d30:	6828      	ldr	r0, [r5, #0]
 8015d32:	f8ad 8018 	strh.w	r8, [sp, #24]
 8015d36:	ab08      	add	r3, sp, #32
 8015d38:	ad08      	add	r5, sp, #32
 8015d3a:	c303      	stmia	r3!, {r0, r1}
 8015d3c:	a906      	add	r1, sp, #24
 8015d3e:	4628      	mov	r0, r5
 8015d40:	f8ad 701a 	strh.w	r7, [sp, #26]
 8015d44:	f8ad 601c 	strh.w	r6, [sp, #28]
 8015d48:	f7fc fe18 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 8015d4c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015d50:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015d54:	429a      	cmp	r2, r3
 8015d56:	d035      	beq.n	8015dc4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015d58:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8015d5c:	2b00      	cmp	r3, #0
 8015d5e:	dd31      	ble.n	8015dc4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015d60:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8015d64:	2b00      	cmp	r3, #0
 8015d66:	dd2d      	ble.n	8015dc4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015d68:	2300      	movs	r3, #0
 8015d6a:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8015d6e:	6823      	ldr	r3, [r4, #0]
 8015d70:	a90a      	add	r1, sp, #40	; 0x28
 8015d72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015d74:	4620      	mov	r0, r4
 8015d76:	4798      	blx	r3
 8015d78:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015d7c:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8015d7e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8015d82:	1a9b      	subs	r3, r3, r2
 8015d84:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015d88:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8015d8a:	1ac9      	subs	r1, r1, r3
 8015d8c:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8015d90:	490f      	ldr	r1, [pc, #60]	; (8015dd0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8015d92:	6809      	ldr	r1, [r1, #0]
 8015d94:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8015d98:	b108      	cbz	r0, 8015d9e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8015d9a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8015d9c:	b900      	cbnz	r0, 8015da0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8015d9e:	6888      	ldr	r0, [r1, #8]
 8015da0:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8015da4:	440b      	add	r3, r1
 8015da6:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8015daa:	2601      	movs	r6, #1
 8015dac:	440a      	add	r2, r1
 8015dae:	6801      	ldr	r1, [r0, #0]
 8015db0:	9602      	str	r6, [sp, #8]
 8015db2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8015db6:	e9cd 5400 	strd	r5, r4, [sp]
 8015dba:	b21b      	sxth	r3, r3
 8015dbc:	688c      	ldr	r4, [r1, #8]
 8015dbe:	b212      	sxth	r2, r2
 8015dc0:	a905      	add	r1, sp, #20
 8015dc2:	47a0      	blx	r4
 8015dc4:	b00c      	add	sp, #48	; 0x30
 8015dc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015dca:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8015dcc:	e7a0      	b.n	8015d10 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8015dce:	bf00      	nop
 8015dd0:	20013854 	.word	0x20013854

08015dd4 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8015dd4:	b510      	push	{r4, lr}
 8015dd6:	2101      	movs	r1, #1
 8015dd8:	2200      	movs	r2, #0
 8015dda:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8015dde:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8015de2:	4c0e      	ldr	r4, [pc, #56]	; (8015e1c <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8015de4:	8082      	strh	r2, [r0, #4]
 8015de6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8015dea:	80c2      	strh	r2, [r0, #6]
 8015dec:	8102      	strh	r2, [r0, #8]
 8015dee:	8142      	strh	r2, [r0, #10]
 8015df0:	8182      	strh	r2, [r0, #12]
 8015df2:	81c2      	strh	r2, [r0, #14]
 8015df4:	8202      	strh	r2, [r0, #16]
 8015df6:	8242      	strh	r2, [r0, #18]
 8015df8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8015dfc:	61c2      	str	r2, [r0, #28]
 8015dfe:	8402      	strh	r2, [r0, #32]
 8015e00:	8442      	strh	r2, [r0, #34]	; 0x22
 8015e02:	6282      	str	r2, [r0, #40]	; 0x28
 8015e04:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8015e08:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8015e0a:	8601      	strh	r1, [r0, #48]	; 0x30
 8015e0c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8015e10:	6004      	str	r4, [r0, #0]
 8015e12:	8681      	strh	r1, [r0, #52]	; 0x34
 8015e14:	86c1      	strh	r1, [r0, #54]	; 0x36
 8015e16:	8702      	strh	r2, [r0, #56]	; 0x38
 8015e18:	8742      	strh	r2, [r0, #58]	; 0x3a
 8015e1a:	bd10      	pop	{r4, pc}
 8015e1c:	08031aa4 	.word	0x08031aa4

08015e20 <_ZN8touchgfx5ImageD1Ev>:
 8015e20:	4770      	bx	lr

08015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8015e22:	b570      	push	{r4, r5, r6, lr}
 8015e24:	880b      	ldrh	r3, [r1, #0]
 8015e26:	84c3      	strh	r3, [r0, #38]	; 0x26
 8015e28:	4604      	mov	r4, r0
 8015e2a:	4608      	mov	r0, r1
 8015e2c:	460d      	mov	r5, r1
 8015e2e:	f006 f947 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015e32:	4606      	mov	r6, r0
 8015e34:	4628      	mov	r0, r5
 8015e36:	f006 f977 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015e3a:	6823      	ldr	r3, [r4, #0]
 8015e3c:	4605      	mov	r5, r0
 8015e3e:	4631      	mov	r1, r6
 8015e40:	4620      	mov	r0, r4
 8015e42:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015e44:	4798      	blx	r3
 8015e46:	6823      	ldr	r3, [r4, #0]
 8015e48:	4629      	mov	r1, r5
 8015e4a:	4620      	mov	r0, r4
 8015e4c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015e4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015e52:	4718      	bx	r3

08015e54 <_ZN8touchgfx5ImageD0Ev>:
 8015e54:	b510      	push	{r4, lr}
 8015e56:	212c      	movs	r1, #44	; 0x2c
 8015e58:	4604      	mov	r4, r0
 8015e5a:	f016 fdca 	bl	802c9f2 <_ZdlPvj>
 8015e5e:	4620      	mov	r0, r4
 8015e60:	bd10      	pop	{r4, pc}

08015e62 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8015e62:	b510      	push	{r4, lr}
 8015e64:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8015e68:	2bff      	cmp	r3, #255	; 0xff
 8015e6a:	4604      	mov	r4, r0
 8015e6c:	d006      	beq.n	8015e7c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8015e6e:	2300      	movs	r3, #0
 8015e70:	8003      	strh	r3, [r0, #0]
 8015e72:	8043      	strh	r3, [r0, #2]
 8015e74:	8083      	strh	r3, [r0, #4]
 8015e76:	80c3      	strh	r3, [r0, #6]
 8015e78:	4620      	mov	r0, r4
 8015e7a:	bd10      	pop	{r4, pc}
 8015e7c:	3126      	adds	r1, #38	; 0x26
 8015e7e:	f006 f987 	bl	801c190 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8015e82:	e7f9      	b.n	8015e78 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08015e84 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8015e84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015e88:	4604      	mov	r4, r0
 8015e8a:	b088      	sub	sp, #32
 8015e8c:	f854 3b26 	ldr.w	r3, [r4], #38
 8015e90:	2500      	movs	r5, #0
 8015e92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015e94:	460f      	mov	r7, r1
 8015e96:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8015e9a:	a904      	add	r1, sp, #16
 8015e9c:	4606      	mov	r6, r0
 8015e9e:	4798      	blx	r3
 8015ea0:	4620      	mov	r0, r4
 8015ea2:	f006 f90d 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015ea6:	4680      	mov	r8, r0
 8015ea8:	4620      	mov	r0, r4
 8015eaa:	f006 f93d 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015eae:	9506      	str	r5, [sp, #24]
 8015eb0:	ad06      	add	r5, sp, #24
 8015eb2:	f8ad 001e 	strh.w	r0, [sp, #30]
 8015eb6:	4639      	mov	r1, r7
 8015eb8:	4628      	mov	r0, r5
 8015eba:	f8ad 801c 	strh.w	r8, [sp, #28]
 8015ebe:	f7fc fd5d 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 8015ec2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015ec6:	2b00      	cmp	r3, #0
 8015ec8:	dd19      	ble.n	8015efe <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8015eca:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8015ece:	2b00      	cmp	r3, #0
 8015ed0:	dd15      	ble.n	8015efe <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8015ed2:	4b0c      	ldr	r3, [pc, #48]	; (8015f04 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8015ed4:	681b      	ldr	r3, [r3, #0]
 8015ed6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015eda:	b10a      	cbz	r2, 8015ee0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8015edc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015ede:	b900      	cbnz	r0, 8015ee2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8015ee0:	6898      	ldr	r0, [r3, #8]
 8015ee2:	6801      	ldr	r1, [r0, #0]
 8015ee4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8015ee8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8015eec:	2701      	movs	r7, #1
 8015eee:	9702      	str	r7, [sp, #8]
 8015ef0:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8015ef4:	e9cd 5600 	strd	r5, r6, [sp]
 8015ef8:	688d      	ldr	r5, [r1, #8]
 8015efa:	4621      	mov	r1, r4
 8015efc:	47a8      	blx	r5
 8015efe:	b008      	add	sp, #32
 8015f00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015f04:	20013854 	.word	0x20013854

08015f08 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8015f08:	4770      	bx	lr

08015f0a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8015f0a:	b510      	push	{r4, lr}
 8015f0c:	2148      	movs	r1, #72	; 0x48
 8015f0e:	4604      	mov	r4, r0
 8015f10:	f016 fd6f 	bl	802c9f2 <_ZdlPvj>
 8015f14:	4620      	mov	r0, r4
 8015f16:	bd10      	pop	{r4, pc}

08015f18 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8015f18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015f1c:	b08d      	sub	sp, #52	; 0x34
 8015f1e:	4604      	mov	r4, r0
 8015f20:	460f      	mov	r7, r1
 8015f22:	f7ff fdcb 	bl	8015abc <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8015f26:	4a55      	ldr	r2, [pc, #340]	; (801607c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8015f28:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8015f2a:	8812      	ldrh	r2, [r2, #0]
 8015f2c:	429a      	cmp	r2, r3
 8015f2e:	f240 8082 	bls.w	8016036 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8015f32:	4d53      	ldr	r5, [pc, #332]	; (8016080 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8015f34:	682a      	ldr	r2, [r5, #0]
 8015f36:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8015f3a:	4b52      	ldr	r3, [pc, #328]	; (8016084 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8015f3c:	681b      	ldr	r3, [r3, #0]
 8015f3e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8015f42:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8015f46:	2200      	movs	r2, #0
 8015f48:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8015f4c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8015f50:	2a03      	cmp	r2, #3
 8015f52:	d811      	bhi.n	8015f78 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8015f54:	e8df f002 	tbb	[pc, r2]
 8015f58:	89727902 	.word	0x89727902
 8015f5c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8015f60:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8015f64:	1ad2      	subs	r2, r2, r3
 8015f66:	2002      	movs	r0, #2
 8015f68:	f8ad 1010 	strh.w	r1, [sp, #16]
 8015f6c:	fb92 f2f0 	sdiv	r2, r2, r0
 8015f70:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015f74:	f8ad 200e 	strh.w	r2, [sp, #14]
 8015f78:	f10d 080c 	add.w	r8, sp, #12
 8015f7c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8015f80:	f10d 0914 	add.w	r9, sp, #20
 8015f84:	e889 0003 	stmia.w	r9, {r0, r1}
 8015f88:	4639      	mov	r1, r7
 8015f8a:	4648      	mov	r0, r9
 8015f8c:	f7fc fcf6 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 8015f90:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015f94:	2b00      	cmp	r3, #0
 8015f96:	dd4e      	ble.n	8016036 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8015f98:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8015f9c:	2b00      	cmp	r3, #0
 8015f9e:	dd4a      	ble.n	8016036 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8015fa0:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8015fa4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8015fa8:	1a9b      	subs	r3, r3, r2
 8015faa:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015fae:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8015fb2:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8015fb6:	1a9b      	subs	r3, r3, r2
 8015fb8:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015fbc:	6823      	ldr	r3, [r4, #0]
 8015fbe:	4641      	mov	r1, r8
 8015fc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015fc2:	4620      	mov	r0, r4
 8015fc4:	4798      	blx	r3
 8015fc6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8015fca:	2b00      	cmp	r3, #0
 8015fcc:	d053      	beq.n	8016076 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8015fce:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8015fd0:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8015fd2:	682b      	ldr	r3, [r5, #0]
 8015fd4:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8015fd8:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8015fdc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8015fe0:	785b      	ldrb	r3, [r3, #1]
 8015fe2:	9209      	str	r2, [sp, #36]	; 0x24
 8015fe4:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8015fe8:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8015fec:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8015ff0:	2300      	movs	r3, #0
 8015ff2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8015ff6:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8015ffa:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8015ffe:	4b22      	ldr	r3, [pc, #136]	; (8016088 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8016000:	9607      	str	r6, [sp, #28]
 8016002:	681b      	ldr	r3, [r3, #0]
 8016004:	f88d 5020 	strb.w	r5, [sp, #32]
 8016008:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801600c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8016010:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8016014:	b10a      	cbz	r2, 801601a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8016016:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8016018:	b904      	cbnz	r4, 801601c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801601a:	689c      	ldr	r4, [r3, #8]
 801601c:	4b1b      	ldr	r3, [pc, #108]	; (801608c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801601e:	6818      	ldr	r0, [r3, #0]
 8016020:	f7f4 fa72 	bl	800a508 <_ZNK8touchgfx5Texts7getTextEt>
 8016024:	ab07      	add	r3, sp, #28
 8016026:	9001      	str	r0, [sp, #4]
 8016028:	9300      	str	r3, [sp, #0]
 801602a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801602e:	464b      	mov	r3, r9
 8016030:	4620      	mov	r0, r4
 8016032:	f7f4 fa1b 	bl	800a46c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8016036:	b00d      	add	sp, #52	; 0x34
 8016038:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801603c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8016040:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8016044:	1ad2      	subs	r2, r2, r3
 8016046:	3201      	adds	r2, #1
 8016048:	e78d      	b.n	8015f66 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 801604a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801604e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8016052:	1ad2      	subs	r2, r2, r3
 8016054:	3201      	adds	r2, #1
 8016056:	2002      	movs	r0, #2
 8016058:	f8ad 3010 	strh.w	r3, [sp, #16]
 801605c:	fb92 f2f0 	sdiv	r2, r2, r0
 8016060:	f8ad 1012 	strh.w	r1, [sp, #18]
 8016064:	f8ad 200c 	strh.w	r2, [sp, #12]
 8016068:	e786      	b.n	8015f78 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801606a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801606e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8016072:	1ad2      	subs	r2, r2, r3
 8016074:	e7ef      	b.n	8016056 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8016076:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8016078:	e7aa      	b.n	8015fd0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801607a:	bf00      	nop
 801607c:	200138b0 	.word	0x200138b0
 8016080:	200138ac 	.word	0x200138ac
 8016084:	200138b4 	.word	0x200138b4
 8016088:	20013854 	.word	0x20013854
 801608c:	200138b8 	.word	0x200138b8

08016090 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8016090:	b510      	push	{r4, lr}
 8016092:	2101      	movs	r1, #1
 8016094:	4c13      	ldr	r4, [pc, #76]	; (80160e4 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8016096:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801609a:	2200      	movs	r2, #0
 801609c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80160a0:	6004      	str	r4, [r0, #0]
 80160a2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80160a6:	4c10      	ldr	r4, [pc, #64]	; (80160e8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 80160a8:	8082      	strh	r2, [r0, #4]
 80160aa:	80c2      	strh	r2, [r0, #6]
 80160ac:	8102      	strh	r2, [r0, #8]
 80160ae:	8142      	strh	r2, [r0, #10]
 80160b0:	8182      	strh	r2, [r0, #12]
 80160b2:	81c2      	strh	r2, [r0, #14]
 80160b4:	8202      	strh	r2, [r0, #16]
 80160b6:	8242      	strh	r2, [r0, #18]
 80160b8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80160bc:	61c2      	str	r2, [r0, #28]
 80160be:	8402      	strh	r2, [r0, #32]
 80160c0:	8442      	strh	r2, [r0, #34]	; 0x22
 80160c2:	6282      	str	r2, [r0, #40]	; 0x28
 80160c4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80160c8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80160ca:	8601      	strh	r1, [r0, #48]	; 0x30
 80160cc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80160d0:	6344      	str	r4, [r0, #52]	; 0x34
 80160d2:	8701      	strh	r1, [r0, #56]	; 0x38
 80160d4:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 80160d8:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 80160dc:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 80160e0:	bd10      	pop	{r4, pc}
 80160e2:	bf00      	nop
 80160e4:	08031b88 	.word	0x08031b88
 80160e8:	0802f37c 	.word	0x0802f37c

080160ec <_ZN8touchgfx7OutlineD1Ev>:
 80160ec:	4770      	bx	lr

080160ee <_ZN8touchgfx7OutlineD0Ev>:
 80160ee:	b510      	push	{r4, lr}
 80160f0:	2130      	movs	r1, #48	; 0x30
 80160f2:	4604      	mov	r4, r0
 80160f4:	f016 fc7d 	bl	802c9f2 <_ZdlPvj>
 80160f8:	4620      	mov	r0, r4
 80160fa:	bd10      	pop	{r4, pc}

080160fc <_ZN8touchgfx7Outline5resetEv>:
 80160fc:	b510      	push	{r4, lr}
 80160fe:	4604      	mov	r4, r0
 8016100:	f000 fe96 	bl	8016e30 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8016104:	60e0      	str	r0, [r4, #12]
 8016106:	f000 fe99 	bl	8016e3c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801610a:	68e3      	ldr	r3, [r4, #12]
 801610c:	6123      	str	r3, [r4, #16]
 801610e:	08c0      	lsrs	r0, r0, #3
 8016110:	2200      	movs	r2, #0
 8016112:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8016116:	3801      	subs	r0, #1
 8016118:	6060      	str	r0, [r4, #4]
 801611a:	60a2      	str	r2, [r4, #8]
 801611c:	8019      	strh	r1, [r3, #0]
 801611e:	8059      	strh	r1, [r3, #2]
 8016120:	809a      	strh	r2, [r3, #4]
 8016122:	80da      	strh	r2, [r3, #6]
 8016124:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016126:	f023 0301 	bic.w	r3, r3, #1
 801612a:	f043 0302 	orr.w	r3, r3, #2
 801612e:	6263      	str	r3, [r4, #36]	; 0x24
 8016130:	bd10      	pop	{r4, pc}
	...

08016134 <_ZN8touchgfx7OutlineC1Ev>:
 8016134:	b510      	push	{r4, lr}
 8016136:	4b0a      	ldr	r3, [pc, #40]	; (8016160 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8016138:	6003      	str	r3, [r0, #0]
 801613a:	2300      	movs	r3, #0
 801613c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8016140:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8016144:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8016148:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801614c:	6243      	str	r3, [r0, #36]	; 0x24
 801614e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8016152:	4604      	mov	r4, r0
 8016154:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8016158:	f7ff ffd0 	bl	80160fc <_ZN8touchgfx7Outline5resetEv>
 801615c:	4620      	mov	r0, r4
 801615e:	bd10      	pop	{r4, pc}
 8016160:	08031bfc 	.word	0x08031bfc

08016164 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8016164:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016168:	b093      	sub	sp, #76	; 0x4c
 801616a:	1156      	asrs	r6, r2, #5
 801616c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801616e:	9305      	str	r3, [sp, #20]
 8016170:	f004 051f 	and.w	r5, r4, #31
 8016174:	1153      	asrs	r3, r2, #5
 8016176:	9504      	str	r5, [sp, #16]
 8016178:	1165      	asrs	r5, r4, #5
 801617a:	9303      	str	r3, [sp, #12]
 801617c:	42ae      	cmp	r6, r5
 801617e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8016182:	9306      	str	r3, [sp, #24]
 8016184:	f002 031f 	and.w	r3, r2, #31
 8016188:	f040 80f8 	bne.w	801637c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801618c:	9c04      	ldr	r4, [sp, #16]
 801618e:	9a05      	ldr	r2, [sp, #20]
 8016190:	42a3      	cmp	r3, r4
 8016192:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8016196:	6902      	ldr	r2, [r0, #16]
 8016198:	d125      	bne.n	80161e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801619a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801619e:	459e      	cmp	lr, r3
 80161a0:	d103      	bne.n	80161aa <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 80161a2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80161a6:	429e      	cmp	r6, r3
 80161a8:	d035      	beq.n	8016216 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80161aa:	88d1      	ldrh	r1, [r2, #6]
 80161ac:	8893      	ldrh	r3, [r2, #4]
 80161ae:	430b      	orrs	r3, r1
 80161b0:	d010      	beq.n	80161d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80161b2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80161b6:	2b00      	cmp	r3, #0
 80161b8:	db0c      	blt.n	80161d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80161ba:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80161bc:	428b      	cmp	r3, r1
 80161be:	da09      	bge.n	80161d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80161c0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80161c4:	428b      	cmp	r3, r1
 80161c6:	bf38      	it	cc
 80161c8:	3208      	addcc	r2, #8
 80161ca:	f103 0301 	add.w	r3, r3, #1
 80161ce:	bf38      	it	cc
 80161d0:	6102      	strcc	r2, [r0, #16]
 80161d2:	6083      	str	r3, [r0, #8]
 80161d4:	6903      	ldr	r3, [r0, #16]
 80161d6:	9a03      	ldr	r2, [sp, #12]
 80161d8:	f8a3 e000 	strh.w	lr, [r3]
 80161dc:	805a      	strh	r2, [r3, #2]
 80161de:	2200      	movs	r2, #0
 80161e0:	809a      	strh	r2, [r3, #4]
 80161e2:	80da      	strh	r2, [r3, #6]
 80161e4:	e017      	b.n	8016216 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80161e6:	9c05      	ldr	r4, [sp, #20]
 80161e8:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 80161ec:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 80161f0:	f004 041f 	and.w	r4, r4, #31
 80161f4:	114e      	asrs	r6, r1, #5
 80161f6:	9402      	str	r4, [sp, #8]
 80161f8:	9c04      	ldr	r4, [sp, #16]
 80161fa:	4576      	cmp	r6, lr
 80161fc:	f001 0c1f 	and.w	ip, r1, #31
 8016200:	eba4 0403 	sub.w	r4, r4, r3
 8016204:	d10a      	bne.n	801621c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8016206:	9b02      	ldr	r3, [sp, #8]
 8016208:	449c      	add	ip, r3
 801620a:	44a0      	add	r8, r4
 801620c:	fb04 a40c 	mla	r4, r4, ip, sl
 8016210:	f8a2 8004 	strh.w	r8, [r2, #4]
 8016214:	80d4      	strh	r4, [r2, #6]
 8016216:	b013      	add	sp, #76	; 0x4c
 8016218:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801621c:	9d05      	ldr	r5, [sp, #20]
 801621e:	1a69      	subs	r1, r5, r1
 8016220:	bf5b      	ittet	pl
 8016222:	f1cc 0520 	rsbpl	r5, ip, #32
 8016226:	436c      	mulpl	r4, r5
 8016228:	2500      	movmi	r5, #0
 801622a:	2520      	movpl	r5, #32
 801622c:	bf44      	itt	mi
 801622e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8016232:	4249      	negmi	r1, r1
 8016234:	9501      	str	r5, [sp, #4]
 8016236:	9f01      	ldr	r7, [sp, #4]
 8016238:	fb94 f5f1 	sdiv	r5, r4, r1
 801623c:	fb01 4415 	mls	r4, r1, r5, r4
 8016240:	bf54      	ite	pl
 8016242:	f04f 0901 	movpl.w	r9, #1
 8016246:	f04f 39ff 	movmi.w	r9, #4294967295
 801624a:	2c00      	cmp	r4, #0
 801624c:	bfb8      	it	lt
 801624e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8016252:	44bc      	add	ip, r7
 8016254:	44a8      	add	r8, r5
 8016256:	fb05 ac0c 	mla	ip, r5, ip, sl
 801625a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801625e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016262:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016266:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801626a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801626e:	bfb8      	it	lt
 8016270:	1864      	addlt	r4, r4, r1
 8016272:	ea58 0202 	orrs.w	r2, r8, r2
 8016276:	444e      	add	r6, r9
 8016278:	d011      	beq.n	801629e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801627a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801627e:	f1b8 0f00 	cmp.w	r8, #0
 8016282:	db0c      	blt.n	801629e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8016284:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8016286:	4590      	cmp	r8, r2
 8016288:	da09      	bge.n	801629e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801628a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801628e:	4590      	cmp	r8, r2
 8016290:	bf3c      	itt	cc
 8016292:	f10c 0208 	addcc.w	r2, ip, #8
 8016296:	6102      	strcc	r2, [r0, #16]
 8016298:	f108 0201 	add.w	r2, r8, #1
 801629c:	6082      	str	r2, [r0, #8]
 801629e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80162a2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80162a6:	f8ac 6000 	strh.w	r6, [ip]
 80162aa:	2700      	movs	r7, #0
 80162ac:	45b6      	cmp	lr, r6
 80162ae:	f8ac 2002 	strh.w	r2, [ip, #2]
 80162b2:	f8ac 7004 	strh.w	r7, [ip, #4]
 80162b6:	f8ac 7006 	strh.w	r7, [ip, #6]
 80162ba:	442b      	add	r3, r5
 80162bc:	d04d      	beq.n	801635a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 80162be:	9f04      	ldr	r7, [sp, #16]
 80162c0:	1aff      	subs	r7, r7, r3
 80162c2:	443d      	add	r5, r7
 80162c4:	016d      	lsls	r5, r5, #5
 80162c6:	fb95 f8f1 	sdiv	r8, r5, r1
 80162ca:	fb01 5518 	mls	r5, r1, r8, r5
 80162ce:	2d00      	cmp	r5, #0
 80162d0:	bfb8      	it	lt
 80162d2:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80162d6:	f108 0701 	add.w	r7, r8, #1
 80162da:	bfb8      	it	lt
 80162dc:	186d      	addlt	r5, r5, r1
 80162de:	1a64      	subs	r4, r4, r1
 80162e0:	9703      	str	r7, [sp, #12]
 80162e2:	f04f 0a00 	mov.w	sl, #0
 80162e6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80162ea:	1964      	adds	r4, r4, r5
 80162ec:	bf58      	it	pl
 80162ee:	9f03      	ldrpl	r7, [sp, #12]
 80162f0:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80162f4:	bf48      	it	mi
 80162f6:	4647      	movmi	r7, r8
 80162f8:	44bb      	add	fp, r7
 80162fa:	f8ac b004 	strh.w	fp, [ip, #4]
 80162fe:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016302:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016306:	f8ac b006 	strh.w	fp, [ip, #6]
 801630a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801630e:	443b      	add	r3, r7
 8016310:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016314:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016318:	bf58      	it	pl
 801631a:	1a64      	subpl	r4, r4, r1
 801631c:	ea5b 0707 	orrs.w	r7, fp, r7
 8016320:	444e      	add	r6, r9
 8016322:	d011      	beq.n	8016348 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8016324:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8016328:	f1bb 0f00 	cmp.w	fp, #0
 801632c:	db0c      	blt.n	8016348 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801632e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016330:	45bb      	cmp	fp, r7
 8016332:	da09      	bge.n	8016348 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8016334:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016338:	45bb      	cmp	fp, r7
 801633a:	bf3c      	itt	cc
 801633c:	f10c 0708 	addcc.w	r7, ip, #8
 8016340:	6107      	strcc	r7, [r0, #16]
 8016342:	f10b 0701 	add.w	r7, fp, #1
 8016346:	6087      	str	r7, [r0, #8]
 8016348:	6907      	ldr	r7, [r0, #16]
 801634a:	45b6      	cmp	lr, r6
 801634c:	803e      	strh	r6, [r7, #0]
 801634e:	807a      	strh	r2, [r7, #2]
 8016350:	f8a7 a004 	strh.w	sl, [r7, #4]
 8016354:	f8a7 a006 	strh.w	sl, [r7, #6]
 8016358:	d1c5      	bne.n	80162e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801635a:	9a04      	ldr	r2, [sp, #16]
 801635c:	1ad3      	subs	r3, r2, r3
 801635e:	6902      	ldr	r2, [r0, #16]
 8016360:	8891      	ldrh	r1, [r2, #4]
 8016362:	88d6      	ldrh	r6, [r2, #6]
 8016364:	4419      	add	r1, r3
 8016366:	8091      	strh	r1, [r2, #4]
 8016368:	9902      	ldr	r1, [sp, #8]
 801636a:	f101 0c20 	add.w	ip, r1, #32
 801636e:	9901      	ldr	r1, [sp, #4]
 8016370:	ebac 0c01 	sub.w	ip, ip, r1
 8016374:	fb03 630c 	mla	r3, r3, ip, r6
 8016378:	80d3      	strh	r3, [r2, #6]
 801637a:	e74c      	b.n	8016216 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801637c:	9d05      	ldr	r5, [sp, #20]
 801637e:	1aa2      	subs	r2, r4, r2
 8016380:	eba5 0501 	sub.w	r5, r5, r1
 8016384:	9508      	str	r5, [sp, #32]
 8016386:	9202      	str	r2, [sp, #8]
 8016388:	f140 8128 	bpl.w	80165dc <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801638c:	9a03      	ldr	r2, [sp, #12]
 801638e:	2a00      	cmp	r2, #0
 8016390:	f6ff af41 	blt.w	8016216 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016394:	9a02      	ldr	r2, [sp, #8]
 8016396:	4252      	negs	r2, r2
 8016398:	9202      	str	r2, [sp, #8]
 801639a:	9a06      	ldr	r2, [sp, #24]
 801639c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 80163a0:	f04f 34ff 	mov.w	r4, #4294967295
 80163a4:	9206      	str	r2, [sp, #24]
 80163a6:	462a      	mov	r2, r5
 80163a8:	940b      	str	r4, [sp, #44]	; 0x2c
 80163aa:	435a      	muls	r2, r3
 80163ac:	2400      	movs	r4, #0
 80163ae:	9d02      	ldr	r5, [sp, #8]
 80163b0:	9401      	str	r4, [sp, #4]
 80163b2:	9c02      	ldr	r4, [sp, #8]
 80163b4:	fb92 f4f4 	sdiv	r4, r2, r4
 80163b8:	fb05 2214 	mls	r2, r5, r4, r2
 80163bc:	2a00      	cmp	r2, #0
 80163be:	9207      	str	r2, [sp, #28]
 80163c0:	bfbc      	itt	lt
 80163c2:	1952      	addlt	r2, r2, r5
 80163c4:	9207      	strlt	r2, [sp, #28]
 80163c6:	9a01      	ldr	r2, [sp, #4]
 80163c8:	6905      	ldr	r5, [r0, #16]
 80163ca:	bfb8      	it	lt
 80163cc:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80163d0:	eb04 0901 	add.w	r9, r4, r1
 80163d4:	429a      	cmp	r2, r3
 80163d6:	ea4f 1669 	mov.w	r6, r9, asr #5
 80163da:	f040 8112 	bne.w	8016602 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 80163de:	f9b5 3000 	ldrsh.w	r3, [r5]
 80163e2:	429e      	cmp	r6, r3
 80163e4:	d104      	bne.n	80163f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 80163e6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80163ea:	9a03      	ldr	r2, [sp, #12]
 80163ec:	429a      	cmp	r2, r3
 80163ee:	d01b      	beq.n	8016428 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80163f0:	88ea      	ldrh	r2, [r5, #6]
 80163f2:	88ab      	ldrh	r3, [r5, #4]
 80163f4:	4313      	orrs	r3, r2
 80163f6:	d010      	beq.n	801641a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80163f8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80163fc:	2a00      	cmp	r2, #0
 80163fe:	db0c      	blt.n	801641a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016400:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016402:	429a      	cmp	r2, r3
 8016404:	da09      	bge.n	801641a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016406:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801640a:	429a      	cmp	r2, r3
 801640c:	bf38      	it	cc
 801640e:	3508      	addcc	r5, #8
 8016410:	f102 0201 	add.w	r2, r2, #1
 8016414:	bf38      	it	cc
 8016416:	6105      	strcc	r5, [r0, #16]
 8016418:	6082      	str	r2, [r0, #8]
 801641a:	6903      	ldr	r3, [r0, #16]
 801641c:	9a03      	ldr	r2, [sp, #12]
 801641e:	805a      	strh	r2, [r3, #2]
 8016420:	2200      	movs	r2, #0
 8016422:	801e      	strh	r6, [r3, #0]
 8016424:	809a      	strh	r2, [r3, #4]
 8016426:	80da      	strh	r2, [r3, #6]
 8016428:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801642a:	9a03      	ldr	r2, [sp, #12]
 801642c:	6901      	ldr	r1, [r0, #16]
 801642e:	441a      	add	r2, r3
 8016430:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016434:	42b3      	cmp	r3, r6
 8016436:	d103      	bne.n	8016440 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8016438:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801643c:	429a      	cmp	r2, r3
 801643e:	d01a      	beq.n	8016476 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8016440:	88cc      	ldrh	r4, [r1, #6]
 8016442:	888b      	ldrh	r3, [r1, #4]
 8016444:	4323      	orrs	r3, r4
 8016446:	d010      	beq.n	801646a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8016448:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 801644c:	2c00      	cmp	r4, #0
 801644e:	db0c      	blt.n	801646a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8016450:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016452:	429c      	cmp	r4, r3
 8016454:	da09      	bge.n	801646a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8016456:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801645a:	429c      	cmp	r4, r3
 801645c:	bf38      	it	cc
 801645e:	3108      	addcc	r1, #8
 8016460:	f104 0401 	add.w	r4, r4, #1
 8016464:	bf38      	it	cc
 8016466:	6101      	strcc	r1, [r0, #16]
 8016468:	6084      	str	r4, [r0, #8]
 801646a:	6903      	ldr	r3, [r0, #16]
 801646c:	2100      	movs	r1, #0
 801646e:	801e      	strh	r6, [r3, #0]
 8016470:	805a      	strh	r2, [r3, #2]
 8016472:	8099      	strh	r1, [r3, #4]
 8016474:	80d9      	strh	r1, [r3, #6]
 8016476:	9b06      	ldr	r3, [sp, #24]
 8016478:	4293      	cmp	r3, r2
 801647a:	f000 8082 	beq.w	8016582 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801647e:	9b08      	ldr	r3, [sp, #32]
 8016480:	9c02      	ldr	r4, [sp, #8]
 8016482:	9902      	ldr	r1, [sp, #8]
 8016484:	015b      	lsls	r3, r3, #5
 8016486:	fb93 f1f1 	sdiv	r1, r3, r1
 801648a:	fb04 3311 	mls	r3, r4, r1, r3
 801648e:	2b00      	cmp	r3, #0
 8016490:	9103      	str	r1, [sp, #12]
 8016492:	9308      	str	r3, [sp, #32]
 8016494:	da04      	bge.n	80164a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8016496:	1e4b      	subs	r3, r1, #1
 8016498:	9303      	str	r3, [sp, #12]
 801649a:	9b08      	ldr	r3, [sp, #32]
 801649c:	4423      	add	r3, r4
 801649e:	9308      	str	r3, [sp, #32]
 80164a0:	9b07      	ldr	r3, [sp, #28]
 80164a2:	9902      	ldr	r1, [sp, #8]
 80164a4:	1a5b      	subs	r3, r3, r1
 80164a6:	9307      	str	r3, [sp, #28]
 80164a8:	9b01      	ldr	r3, [sp, #4]
 80164aa:	f1c3 0320 	rsb	r3, r3, #32
 80164ae:	930e      	str	r3, [sp, #56]	; 0x38
 80164b0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80164b2:	9b01      	ldr	r3, [sp, #4]
 80164b4:	1a5b      	subs	r3, r3, r1
 80164b6:	464f      	mov	r7, r9
 80164b8:	930a      	str	r3, [sp, #40]	; 0x28
 80164ba:	2600      	movs	r6, #0
 80164bc:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 80164c0:	185b      	adds	r3, r3, r1
 80164c2:	bf58      	it	pl
 80164c4:	9902      	ldrpl	r1, [sp, #8]
 80164c6:	9307      	str	r3, [sp, #28]
 80164c8:	bf5d      	ittte	pl
 80164ca:	1a5b      	subpl	r3, r3, r1
 80164cc:	9307      	strpl	r3, [sp, #28]
 80164ce:	9b03      	ldrpl	r3, [sp, #12]
 80164d0:	9903      	ldrmi	r1, [sp, #12]
 80164d2:	bf58      	it	pl
 80164d4:	1c59      	addpl	r1, r3, #1
 80164d6:	4489      	add	r9, r1
 80164d8:	2a00      	cmp	r2, #0
 80164da:	ea4f 1a69 	mov.w	sl, r9, asr #5
 80164de:	db2e      	blt.n	801653e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80164e0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80164e2:	4293      	cmp	r3, r2
 80164e4:	dd2b      	ble.n	801653e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80164e6:	9c01      	ldr	r4, [sp, #4]
 80164e8:	6905      	ldr	r5, [r0, #16]
 80164ea:	46a0      	mov	r8, r4
 80164ec:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80164ee:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 80164f2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80164f6:	45a0      	cmp	r8, r4
 80164f8:	f040 814f 	bne.w	801679a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 80164fc:	f9b5 1000 	ldrsh.w	r1, [r5]
 8016500:	4551      	cmp	r1, sl
 8016502:	d103      	bne.n	801650c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8016504:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8016508:	4291      	cmp	r1, r2
 801650a:	d018      	beq.n	801653e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801650c:	ea5c 010e 	orrs.w	r1, ip, lr
 8016510:	d00f      	beq.n	8016532 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8016512:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8016516:	2900      	cmp	r1, #0
 8016518:	db0b      	blt.n	8016532 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801651a:	428b      	cmp	r3, r1
 801651c:	dd09      	ble.n	8016532 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801651e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8016522:	4299      	cmp	r1, r3
 8016524:	bf38      	it	cc
 8016526:	3508      	addcc	r5, #8
 8016528:	f101 0101 	add.w	r1, r1, #1
 801652c:	bf38      	it	cc
 801652e:	6105      	strcc	r5, [r0, #16]
 8016530:	6081      	str	r1, [r0, #8]
 8016532:	6903      	ldr	r3, [r0, #16]
 8016534:	f8a3 a000 	strh.w	sl, [r3]
 8016538:	805a      	strh	r2, [r3, #2]
 801653a:	809e      	strh	r6, [r3, #4]
 801653c:	80de      	strh	r6, [r3, #6]
 801653e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016540:	6901      	ldr	r1, [r0, #16]
 8016542:	441a      	add	r2, r3
 8016544:	88cc      	ldrh	r4, [r1, #6]
 8016546:	888b      	ldrh	r3, [r1, #4]
 8016548:	4323      	orrs	r3, r4
 801654a:	d010      	beq.n	801656e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801654c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8016550:	2c00      	cmp	r4, #0
 8016552:	db0c      	blt.n	801656e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8016554:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016556:	429c      	cmp	r4, r3
 8016558:	da09      	bge.n	801656e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801655a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801655e:	429c      	cmp	r4, r3
 8016560:	bf38      	it	cc
 8016562:	3108      	addcc	r1, #8
 8016564:	f104 0401 	add.w	r4, r4, #1
 8016568:	bf38      	it	cc
 801656a:	6101      	strcc	r1, [r0, #16]
 801656c:	6084      	str	r4, [r0, #8]
 801656e:	6903      	ldr	r3, [r0, #16]
 8016570:	f8a3 a000 	strh.w	sl, [r3]
 8016574:	805a      	strh	r2, [r3, #2]
 8016576:	809e      	strh	r6, [r3, #4]
 8016578:	80de      	strh	r6, [r3, #6]
 801657a:	9b06      	ldr	r3, [sp, #24]
 801657c:	4293      	cmp	r3, r2
 801657e:	464f      	mov	r7, r9
 8016580:	d19c      	bne.n	80164bc <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8016582:	9b01      	ldr	r3, [sp, #4]
 8016584:	6907      	ldr	r7, [r0, #16]
 8016586:	f1c3 0620 	rsb	r6, r3, #32
 801658a:	9b05      	ldr	r3, [sp, #20]
 801658c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8016590:	9b04      	ldr	r3, [sp, #16]
 8016592:	429e      	cmp	r6, r3
 8016594:	f040 81cc 	bne.w	8016930 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8016598:	f9b7 3000 	ldrsh.w	r3, [r7]
 801659c:	459e      	cmp	lr, r3
 801659e:	d104      	bne.n	80165aa <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 80165a0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80165a4:	429a      	cmp	r2, r3
 80165a6:	f43f ae36 	beq.w	8016216 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80165aa:	88f9      	ldrh	r1, [r7, #6]
 80165ac:	88bb      	ldrh	r3, [r7, #4]
 80165ae:	430b      	orrs	r3, r1
 80165b0:	d010      	beq.n	80165d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80165b2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80165b6:	2b00      	cmp	r3, #0
 80165b8:	db0c      	blt.n	80165d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80165ba:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80165bc:	428b      	cmp	r3, r1
 80165be:	da09      	bge.n	80165d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80165c0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80165c4:	428b      	cmp	r3, r1
 80165c6:	bf38      	it	cc
 80165c8:	3708      	addcc	r7, #8
 80165ca:	f103 0301 	add.w	r3, r3, #1
 80165ce:	bf38      	it	cc
 80165d0:	6107      	strcc	r7, [r0, #16]
 80165d2:	6083      	str	r3, [r0, #8]
 80165d4:	6903      	ldr	r3, [r0, #16]
 80165d6:	f8a3 e000 	strh.w	lr, [r3]
 80165da:	e5ff      	b.n	80161dc <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 80165dc:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80165de:	9c03      	ldr	r4, [sp, #12]
 80165e0:	42a2      	cmp	r2, r4
 80165e2:	f6ff ae18 	blt.w	8016216 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80165e6:	9c06      	ldr	r4, [sp, #24]
 80165e8:	42a2      	cmp	r2, r4
 80165ea:	bfb8      	it	lt
 80165ec:	3201      	addlt	r2, #1
 80165ee:	9c08      	ldr	r4, [sp, #32]
 80165f0:	bfb8      	it	lt
 80165f2:	9206      	strlt	r2, [sp, #24]
 80165f4:	f1c3 0220 	rsb	r2, r3, #32
 80165f8:	4362      	muls	r2, r4
 80165fa:	2401      	movs	r4, #1
 80165fc:	940b      	str	r4, [sp, #44]	; 0x2c
 80165fe:	2420      	movs	r4, #32
 8016600:	e6d5      	b.n	80163ae <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8016602:	f009 021f 	and.w	r2, r9, #31
 8016606:	ea4f 1861 	mov.w	r8, r1, asr #5
 801660a:	920c      	str	r2, [sp, #48]	; 0x30
 801660c:	9a01      	ldr	r2, [sp, #4]
 801660e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8016612:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8016616:	45b0      	cmp	r8, r6
 8016618:	f001 011f 	and.w	r1, r1, #31
 801661c:	eba2 0203 	sub.w	r2, r2, r3
 8016620:	d108      	bne.n	8016634 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8016622:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016624:	4419      	add	r1, r3
 8016626:	4496      	add	lr, r2
 8016628:	fb02 a101 	mla	r1, r2, r1, sl
 801662c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8016630:	80e9      	strh	r1, [r5, #6]
 8016632:	e6f9      	b.n	8016428 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8016634:	2c00      	cmp	r4, #0
 8016636:	f2c0 80a9 	blt.w	801678c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801663a:	2701      	movs	r7, #1
 801663c:	f1c1 0c20 	rsb	ip, r1, #32
 8016640:	970a      	str	r7, [sp, #40]	; 0x28
 8016642:	fb02 f20c 	mul.w	r2, r2, ip
 8016646:	2720      	movs	r7, #32
 8016648:	9709      	str	r7, [sp, #36]	; 0x24
 801664a:	fb92 fcf4 	sdiv	ip, r2, r4
 801664e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8016650:	fb04 221c 	mls	r2, r4, ip, r2
 8016654:	2a00      	cmp	r2, #0
 8016656:	bfb8      	it	lt
 8016658:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801665c:	4439      	add	r1, r7
 801665e:	fb0c a101 	mla	r1, ip, r1, sl
 8016662:	80e9      	strh	r1, [r5, #6]
 8016664:	44e6      	add	lr, ip
 8016666:	990a      	ldr	r1, [sp, #40]	; 0x28
 8016668:	f8a5 e004 	strh.w	lr, [r5, #4]
 801666c:	eb08 0501 	add.w	r5, r8, r1
 8016670:	6901      	ldr	r1, [r0, #16]
 8016672:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8016676:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801667a:	bfb8      	it	lt
 801667c:	1912      	addlt	r2, r2, r4
 801667e:	ea58 070e 	orrs.w	r7, r8, lr
 8016682:	d010      	beq.n	80166a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8016684:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8016688:	f1be 0f00 	cmp.w	lr, #0
 801668c:	db0b      	blt.n	80166a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801668e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016690:	45be      	cmp	lr, r7
 8016692:	da08      	bge.n	80166a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8016694:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8016698:	45be      	cmp	lr, r7
 801669a:	bf3c      	itt	cc
 801669c:	3108      	addcc	r1, #8
 801669e:	6101      	strcc	r1, [r0, #16]
 80166a0:	f10e 0101 	add.w	r1, lr, #1
 80166a4:	6081      	str	r1, [r0, #8]
 80166a6:	6901      	ldr	r1, [r0, #16]
 80166a8:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80166ac:	800d      	strh	r5, [r1, #0]
 80166ae:	f04f 0e00 	mov.w	lr, #0
 80166b2:	42ae      	cmp	r6, r5
 80166b4:	f8a1 8002 	strh.w	r8, [r1, #2]
 80166b8:	f8a1 e004 	strh.w	lr, [r1, #4]
 80166bc:	f8a1 e006 	strh.w	lr, [r1, #6]
 80166c0:	4463      	add	r3, ip
 80166c2:	d054      	beq.n	801676e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 80166c4:	9901      	ldr	r1, [sp, #4]
 80166c6:	1ac9      	subs	r1, r1, r3
 80166c8:	4461      	add	r1, ip
 80166ca:	0149      	lsls	r1, r1, #5
 80166cc:	fb91 fef4 	sdiv	lr, r1, r4
 80166d0:	fb04 111e 	mls	r1, r4, lr, r1
 80166d4:	2900      	cmp	r1, #0
 80166d6:	bfb8      	it	lt
 80166d8:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 80166dc:	f10e 0701 	add.w	r7, lr, #1
 80166e0:	bfb8      	it	lt
 80166e2:	1909      	addlt	r1, r1, r4
 80166e4:	1b12      	subs	r2, r2, r4
 80166e6:	970d      	str	r7, [sp, #52]	; 0x34
 80166e8:	f8d0 a010 	ldr.w	sl, [r0, #16]
 80166ec:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80166ee:	f8ba b004 	ldrh.w	fp, [sl, #4]
 80166f2:	1852      	adds	r2, r2, r1
 80166f4:	bf54      	ite	pl
 80166f6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 80166fa:	46f4      	movmi	ip, lr
 80166fc:	44e3      	add	fp, ip
 80166fe:	f8aa b004 	strh.w	fp, [sl, #4]
 8016702:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8016706:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801670a:	f8aa b006 	strh.w	fp, [sl, #6]
 801670e:	4463      	add	r3, ip
 8016710:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016714:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016718:	f8bc a004 	ldrh.w	sl, [ip, #4]
 801671c:	bf58      	it	pl
 801671e:	1b12      	subpl	r2, r2, r4
 8016720:	443d      	add	r5, r7
 8016722:	ea5b 070a 	orrs.w	r7, fp, sl
 8016726:	d014      	beq.n	8016752 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8016728:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 801672c:	f1ba 0f00 	cmp.w	sl, #0
 8016730:	db0f      	blt.n	8016752 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8016732:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016734:	45ba      	cmp	sl, r7
 8016736:	da0c      	bge.n	8016752 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8016738:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 801673c:	45ba      	cmp	sl, r7
 801673e:	bf38      	it	cc
 8016740:	f10c 0c08 	addcc.w	ip, ip, #8
 8016744:	f10a 0a01 	add.w	sl, sl, #1
 8016748:	bf38      	it	cc
 801674a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 801674e:	f8c0 a008 	str.w	sl, [r0, #8]
 8016752:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016756:	f04f 0700 	mov.w	r7, #0
 801675a:	42ae      	cmp	r6, r5
 801675c:	f8ac 5000 	strh.w	r5, [ip]
 8016760:	f8ac 8002 	strh.w	r8, [ip, #2]
 8016764:	f8ac 7004 	strh.w	r7, [ip, #4]
 8016768:	f8ac 7006 	strh.w	r7, [ip, #6]
 801676c:	d1bc      	bne.n	80166e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 801676e:	6904      	ldr	r4, [r0, #16]
 8016770:	9a01      	ldr	r2, [sp, #4]
 8016772:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016774:	1ad3      	subs	r3, r2, r3
 8016776:	88a2      	ldrh	r2, [r4, #4]
 8016778:	441a      	add	r2, r3
 801677a:	80a2      	strh	r2, [r4, #4]
 801677c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801677e:	3120      	adds	r1, #32
 8016780:	1a89      	subs	r1, r1, r2
 8016782:	88e2      	ldrh	r2, [r4, #6]
 8016784:	fb03 2301 	mla	r3, r3, r1, r2
 8016788:	80e3      	strh	r3, [r4, #6]
 801678a:	e64d      	b.n	8016428 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 801678c:	f04f 37ff 	mov.w	r7, #4294967295
 8016790:	970a      	str	r7, [sp, #40]	; 0x28
 8016792:	434a      	muls	r2, r1
 8016794:	4264      	negs	r4, r4
 8016796:	2700      	movs	r7, #0
 8016798:	e756      	b.n	8016648 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 801679a:	ea4f 1867 	mov.w	r8, r7, asr #5
 801679e:	f009 031f 	and.w	r3, r9, #31
 80167a2:	45d0      	cmp	r8, sl
 80167a4:	f007 071f 	and.w	r7, r7, #31
 80167a8:	930f      	str	r3, [sp, #60]	; 0x3c
 80167aa:	fa1f fc8c 	uxth.w	ip, ip
 80167ae:	fa1f fe8e 	uxth.w	lr, lr
 80167b2:	d10a      	bne.n	80167ca <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 80167b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80167b6:	449c      	add	ip, r3
 80167b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80167ba:	f8a5 c004 	strh.w	ip, [r5, #4]
 80167be:	441f      	add	r7, r3
 80167c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80167c2:	fb03 e707 	mla	r7, r3, r7, lr
 80167c6:	80ef      	strh	r7, [r5, #6]
 80167c8:	e6b9      	b.n	801653e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80167ca:	2900      	cmp	r1, #0
 80167cc:	f2c0 80a8 	blt.w	8016920 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 80167d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80167d2:	f1c7 0320 	rsb	r3, r7, #32
 80167d6:	4363      	muls	r3, r4
 80167d8:	2401      	movs	r4, #1
 80167da:	940d      	str	r4, [sp, #52]	; 0x34
 80167dc:	2420      	movs	r4, #32
 80167de:	940c      	str	r4, [sp, #48]	; 0x30
 80167e0:	fb93 f4f1 	sdiv	r4, r3, r1
 80167e4:	fb01 3b14 	mls	fp, r1, r4, r3
 80167e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80167ea:	f1bb 0f00 	cmp.w	fp, #0
 80167ee:	bfb8      	it	lt
 80167f0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80167f4:	441f      	add	r7, r3
 80167f6:	fb04 e707 	mla	r7, r4, r7, lr
 80167fa:	44a4      	add	ip, r4
 80167fc:	f8a5 c004 	strh.w	ip, [r5, #4]
 8016800:	80ef      	strh	r7, [r5, #6]
 8016802:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016806:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016808:	f8bc e006 	ldrh.w	lr, [ip, #6]
 801680c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016810:	bfb8      	it	lt
 8016812:	448b      	addlt	fp, r1
 8016814:	eb08 0503 	add.w	r5, r8, r3
 8016818:	ea5e 0307 	orrs.w	r3, lr, r7
 801681c:	d011      	beq.n	8016842 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801681e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8016822:	f1be 0f00 	cmp.w	lr, #0
 8016826:	db0c      	blt.n	8016842 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8016828:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801682a:	45be      	cmp	lr, r7
 801682c:	da09      	bge.n	8016842 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801682e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8016832:	45be      	cmp	lr, r7
 8016834:	bf3c      	itt	cc
 8016836:	f10c 0708 	addcc.w	r7, ip, #8
 801683a:	6107      	strcc	r7, [r0, #16]
 801683c:	f10e 0701 	add.w	r7, lr, #1
 8016840:	6087      	str	r7, [r0, #8]
 8016842:	6907      	ldr	r7, [r0, #16]
 8016844:	b213      	sxth	r3, r2
 8016846:	9310      	str	r3, [sp, #64]	; 0x40
 8016848:	807b      	strh	r3, [r7, #2]
 801684a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801684c:	803d      	strh	r5, [r7, #0]
 801684e:	4555      	cmp	r5, sl
 8016850:	80be      	strh	r6, [r7, #4]
 8016852:	80fe      	strh	r6, [r7, #6]
 8016854:	eb04 0c03 	add.w	ip, r4, r3
 8016858:	d051      	beq.n	80168fe <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 801685a:	9b01      	ldr	r3, [sp, #4]
 801685c:	eba3 070c 	sub.w	r7, r3, ip
 8016860:	443c      	add	r4, r7
 8016862:	0164      	lsls	r4, r4, #5
 8016864:	fb94 f8f1 	sdiv	r8, r4, r1
 8016868:	fb01 4418 	mls	r4, r1, r8, r4
 801686c:	2c00      	cmp	r4, #0
 801686e:	bfb8      	it	lt
 8016870:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016874:	ebab 0301 	sub.w	r3, fp, r1
 8016878:	f108 0701 	add.w	r7, r8, #1
 801687c:	bfb8      	it	lt
 801687e:	1864      	addlt	r4, r4, r1
 8016880:	9309      	str	r3, [sp, #36]	; 0x24
 8016882:	9711      	str	r7, [sp, #68]	; 0x44
 8016884:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016886:	f8d0 e010 	ldr.w	lr, [r0, #16]
 801688a:	191b      	adds	r3, r3, r4
 801688c:	bf58      	it	pl
 801688e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8016890:	f8be b004 	ldrh.w	fp, [lr, #4]
 8016894:	9309      	str	r3, [sp, #36]	; 0x24
 8016896:	bf48      	it	mi
 8016898:	4647      	movmi	r7, r8
 801689a:	44bb      	add	fp, r7
 801689c:	f8ae b004 	strh.w	fp, [lr, #4]
 80168a0:	f8be b006 	ldrh.w	fp, [lr, #6]
 80168a4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80168a8:	f8ae b006 	strh.w	fp, [lr, #6]
 80168ac:	f8d0 e010 	ldr.w	lr, [r0, #16]
 80168b0:	44bc      	add	ip, r7
 80168b2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80168b4:	f8be b006 	ldrh.w	fp, [lr, #6]
 80168b8:	443d      	add	r5, r7
 80168ba:	f8be 7004 	ldrh.w	r7, [lr, #4]
 80168be:	bf5c      	itt	pl
 80168c0:	1a5b      	subpl	r3, r3, r1
 80168c2:	9309      	strpl	r3, [sp, #36]	; 0x24
 80168c4:	ea5b 0307 	orrs.w	r3, fp, r7
 80168c8:	d011      	beq.n	80168ee <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80168ca:	f9be b002 	ldrsh.w	fp, [lr, #2]
 80168ce:	f1bb 0f00 	cmp.w	fp, #0
 80168d2:	db0c      	blt.n	80168ee <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80168d4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80168d6:	45bb      	cmp	fp, r7
 80168d8:	da09      	bge.n	80168ee <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 80168da:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80168de:	45bb      	cmp	fp, r7
 80168e0:	bf3c      	itt	cc
 80168e2:	f10e 0708 	addcc.w	r7, lr, #8
 80168e6:	6107      	strcc	r7, [r0, #16]
 80168e8:	f10b 0701 	add.w	r7, fp, #1
 80168ec:	6087      	str	r7, [r0, #8]
 80168ee:	6907      	ldr	r7, [r0, #16]
 80168f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80168f2:	803d      	strh	r5, [r7, #0]
 80168f4:	4555      	cmp	r5, sl
 80168f6:	807b      	strh	r3, [r7, #2]
 80168f8:	80be      	strh	r6, [r7, #4]
 80168fa:	80fe      	strh	r6, [r7, #6]
 80168fc:	d1c2      	bne.n	8016884 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 80168fe:	9b01      	ldr	r3, [sp, #4]
 8016900:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016902:	eba3 0c0c 	sub.w	ip, r3, ip
 8016906:	6903      	ldr	r3, [r0, #16]
 8016908:	8899      	ldrh	r1, [r3, #4]
 801690a:	4461      	add	r1, ip
 801690c:	8099      	strh	r1, [r3, #4]
 801690e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016910:	3720      	adds	r7, #32
 8016912:	1a7f      	subs	r7, r7, r1
 8016914:	88d9      	ldrh	r1, [r3, #6]
 8016916:	fb0c 1c07 	mla	ip, ip, r7, r1
 801691a:	f8a3 c006 	strh.w	ip, [r3, #6]
 801691e:	e60e      	b.n	801653e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016920:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016922:	f04f 34ff 	mov.w	r4, #4294967295
 8016926:	940d      	str	r4, [sp, #52]	; 0x34
 8016928:	437b      	muls	r3, r7
 801692a:	4249      	negs	r1, r1
 801692c:	2400      	movs	r4, #0
 801692e:	e756      	b.n	80167de <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8016930:	9905      	ldr	r1, [sp, #20]
 8016932:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8016936:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 801693a:	f001 011f 	and.w	r1, r1, #31
 801693e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8016942:	9102      	str	r1, [sp, #8]
 8016944:	9904      	ldr	r1, [sp, #16]
 8016946:	45f3      	cmp	fp, lr
 8016948:	f009 0c1f 	and.w	ip, r9, #31
 801694c:	eba1 0406 	sub.w	r4, r1, r6
 8016950:	d108      	bne.n	8016964 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8016952:	9b02      	ldr	r3, [sp, #8]
 8016954:	449c      	add	ip, r3
 8016956:	44a0      	add	r8, r4
 8016958:	fb04 a40c 	mla	r4, r4, ip, sl
 801695c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8016960:	80fc      	strh	r4, [r7, #6]
 8016962:	e458      	b.n	8016216 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016964:	9905      	ldr	r1, [sp, #20]
 8016966:	ebb1 0109 	subs.w	r1, r1, r9
 801696a:	bf5b      	ittet	pl
 801696c:	f1cc 0520 	rsbpl	r5, ip, #32
 8016970:	436c      	mulpl	r4, r5
 8016972:	2500      	movmi	r5, #0
 8016974:	2520      	movpl	r5, #32
 8016976:	bf44      	itt	mi
 8016978:	fb04 f40c 	mulmi.w	r4, r4, ip
 801697c:	4249      	negmi	r1, r1
 801697e:	9501      	str	r5, [sp, #4]
 8016980:	9b01      	ldr	r3, [sp, #4]
 8016982:	fb94 f5f1 	sdiv	r5, r4, r1
 8016986:	fb01 4415 	mls	r4, r1, r5, r4
 801698a:	bf54      	ite	pl
 801698c:	f04f 0901 	movpl.w	r9, #1
 8016990:	f04f 39ff 	movmi.w	r9, #4294967295
 8016994:	2c00      	cmp	r4, #0
 8016996:	bfb8      	it	lt
 8016998:	f105 35ff 	addlt.w	r5, r5, #4294967295
 801699c:	449c      	add	ip, r3
 801699e:	44a8      	add	r8, r5
 80169a0:	fb05 ac0c 	mla	ip, r5, ip, sl
 80169a4:	f8a7 8004 	strh.w	r8, [r7, #4]
 80169a8:	f8a7 c006 	strh.w	ip, [r7, #6]
 80169ac:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80169b0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80169b4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80169b8:	bfb8      	it	lt
 80169ba:	1864      	addlt	r4, r4, r1
 80169bc:	ea58 0707 	orrs.w	r7, r8, r7
 80169c0:	eb0b 0309 	add.w	r3, fp, r9
 80169c4:	d011      	beq.n	80169ea <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80169c6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80169ca:	f1b8 0f00 	cmp.w	r8, #0
 80169ce:	db0c      	blt.n	80169ea <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80169d0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80169d2:	45b8      	cmp	r8, r7
 80169d4:	da09      	bge.n	80169ea <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 80169d6:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 80169da:	45b8      	cmp	r8, r7
 80169dc:	bf3c      	itt	cc
 80169de:	f10c 0708 	addcc.w	r7, ip, #8
 80169e2:	6107      	strcc	r7, [r0, #16]
 80169e4:	f108 0701 	add.w	r7, r8, #1
 80169e8:	6087      	str	r7, [r0, #8]
 80169ea:	6907      	ldr	r7, [r0, #16]
 80169ec:	f04f 0c00 	mov.w	ip, #0
 80169f0:	b212      	sxth	r2, r2
 80169f2:	459e      	cmp	lr, r3
 80169f4:	803b      	strh	r3, [r7, #0]
 80169f6:	807a      	strh	r2, [r7, #2]
 80169f8:	f8a7 c004 	strh.w	ip, [r7, #4]
 80169fc:	f8a7 c006 	strh.w	ip, [r7, #6]
 8016a00:	442e      	add	r6, r5
 8016a02:	d04d      	beq.n	8016aa0 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8016a04:	9f04      	ldr	r7, [sp, #16]
 8016a06:	1bbf      	subs	r7, r7, r6
 8016a08:	443d      	add	r5, r7
 8016a0a:	016d      	lsls	r5, r5, #5
 8016a0c:	fb95 f8f1 	sdiv	r8, r5, r1
 8016a10:	fb01 5518 	mls	r5, r1, r8, r5
 8016a14:	4565      	cmp	r5, ip
 8016a16:	bfb8      	it	lt
 8016a18:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016a1c:	f108 0701 	add.w	r7, r8, #1
 8016a20:	bfb8      	it	lt
 8016a22:	186d      	addlt	r5, r5, r1
 8016a24:	1a64      	subs	r4, r4, r1
 8016a26:	9703      	str	r7, [sp, #12]
 8016a28:	f04f 0a00 	mov.w	sl, #0
 8016a2c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016a30:	1964      	adds	r4, r4, r5
 8016a32:	bf58      	it	pl
 8016a34:	9f03      	ldrpl	r7, [sp, #12]
 8016a36:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8016a3a:	bf48      	it	mi
 8016a3c:	4647      	movmi	r7, r8
 8016a3e:	44bb      	add	fp, r7
 8016a40:	f8ac b004 	strh.w	fp, [ip, #4]
 8016a44:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016a48:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016a4c:	f8ac b006 	strh.w	fp, [ip, #6]
 8016a50:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016a54:	443e      	add	r6, r7
 8016a56:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016a5a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016a5e:	bf58      	it	pl
 8016a60:	1a64      	subpl	r4, r4, r1
 8016a62:	ea5b 0707 	orrs.w	r7, fp, r7
 8016a66:	444b      	add	r3, r9
 8016a68:	d011      	beq.n	8016a8e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016a6a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8016a6e:	f1bb 0f00 	cmp.w	fp, #0
 8016a72:	db0c      	blt.n	8016a8e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016a74:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016a76:	45bb      	cmp	fp, r7
 8016a78:	da09      	bge.n	8016a8e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016a7a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016a7e:	45bb      	cmp	fp, r7
 8016a80:	bf3c      	itt	cc
 8016a82:	f10c 0708 	addcc.w	r7, ip, #8
 8016a86:	6107      	strcc	r7, [r0, #16]
 8016a88:	f10b 0701 	add.w	r7, fp, #1
 8016a8c:	6087      	str	r7, [r0, #8]
 8016a8e:	6907      	ldr	r7, [r0, #16]
 8016a90:	459e      	cmp	lr, r3
 8016a92:	803b      	strh	r3, [r7, #0]
 8016a94:	807a      	strh	r2, [r7, #2]
 8016a96:	f8a7 a004 	strh.w	sl, [r7, #4]
 8016a9a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8016a9e:	d1c5      	bne.n	8016a2c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8016aa0:	9b04      	ldr	r3, [sp, #16]
 8016aa2:	1b9e      	subs	r6, r3, r6
 8016aa4:	6903      	ldr	r3, [r0, #16]
 8016aa6:	889a      	ldrh	r2, [r3, #4]
 8016aa8:	4432      	add	r2, r6
 8016aaa:	809a      	strh	r2, [r3, #4]
 8016aac:	9a02      	ldr	r2, [sp, #8]
 8016aae:	f102 0c20 	add.w	ip, r2, #32
 8016ab2:	9a01      	ldr	r2, [sp, #4]
 8016ab4:	ebac 0c02 	sub.w	ip, ip, r2
 8016ab8:	88da      	ldrh	r2, [r3, #6]
 8016aba:	fb06 260c 	mla	r6, r6, ip, r2
 8016abe:	80de      	strh	r6, [r3, #6]
 8016ac0:	f7ff bba9 	b.w	8016216 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08016ac4 <_ZN8touchgfx7Outline6lineToEii>:
 8016ac4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016ac6:	079b      	lsls	r3, r3, #30
 8016ac8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8016aca:	460e      	mov	r6, r1
 8016acc:	4615      	mov	r5, r2
 8016ace:	d511      	bpl.n	8016af4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8016ad0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8016ad4:	ea86 0701 	eor.w	r7, r6, r1
 8016ad8:	ea85 0302 	eor.w	r3, r5, r2
 8016adc:	433b      	orrs	r3, r7
 8016ade:	d009      	beq.n	8016af4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8016ae0:	4633      	mov	r3, r6
 8016ae2:	9500      	str	r5, [sp, #0]
 8016ae4:	f7ff fb3e 	bl	8016164 <_ZN8touchgfx7Outline10renderLineEiiii>
 8016ae8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016aea:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8016aee:	f043 0301 	orr.w	r3, r3, #1
 8016af2:	6243      	str	r3, [r0, #36]	; 0x24
 8016af4:	b003      	add	sp, #12
 8016af6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016af8 <_ZN8touchgfx7Outline6moveToEii>:
 8016af8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016afa:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016afc:	4615      	mov	r5, r2
 8016afe:	079a      	lsls	r2, r3, #30
 8016b00:	4604      	mov	r4, r0
 8016b02:	460e      	mov	r6, r1
 8016b04:	d401      	bmi.n	8016b0a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8016b06:	f7ff faf9 	bl	80160fc <_ZN8touchgfx7Outline5resetEv>
 8016b0a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016b0c:	07db      	lsls	r3, r3, #31
 8016b0e:	d504      	bpl.n	8016b1a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8016b10:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8016b14:	4620      	mov	r0, r4
 8016b16:	f7ff ffd5 	bl	8016ac4 <_ZN8touchgfx7Outline6lineToEii>
 8016b1a:	6923      	ldr	r3, [r4, #16]
 8016b1c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016b20:	1170      	asrs	r0, r6, #5
 8016b22:	4290      	cmp	r0, r2
 8016b24:	ea4f 1165 	mov.w	r1, r5, asr #5
 8016b28:	d103      	bne.n	8016b32 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8016b2a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016b2e:	4291      	cmp	r1, r2
 8016b30:	d01a      	beq.n	8016b68 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8016b32:	88df      	ldrh	r7, [r3, #6]
 8016b34:	889a      	ldrh	r2, [r3, #4]
 8016b36:	433a      	orrs	r2, r7
 8016b38:	d010      	beq.n	8016b5c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016b3a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016b3e:	2a00      	cmp	r2, #0
 8016b40:	db0c      	blt.n	8016b5c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016b42:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8016b44:	42ba      	cmp	r2, r7
 8016b46:	da09      	bge.n	8016b5c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016b48:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8016b4c:	42ba      	cmp	r2, r7
 8016b4e:	bf38      	it	cc
 8016b50:	3308      	addcc	r3, #8
 8016b52:	f102 0201 	add.w	r2, r2, #1
 8016b56:	bf38      	it	cc
 8016b58:	6123      	strcc	r3, [r4, #16]
 8016b5a:	60a2      	str	r2, [r4, #8]
 8016b5c:	6923      	ldr	r3, [r4, #16]
 8016b5e:	2200      	movs	r2, #0
 8016b60:	8018      	strh	r0, [r3, #0]
 8016b62:	8059      	strh	r1, [r3, #2]
 8016b64:	809a      	strh	r2, [r3, #4]
 8016b66:	80da      	strh	r2, [r3, #6]
 8016b68:	6166      	str	r6, [r4, #20]
 8016b6a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8016b6e:	6225      	str	r5, [r4, #32]
 8016b70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016b72 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8016b72:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016b76:	b0d0      	sub	sp, #320	; 0x140
 8016b78:	466c      	mov	r4, sp
 8016b7a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8016b7e:	4627      	mov	r7, r4
 8016b80:	1a0d      	subs	r5, r1, r0
 8016b82:	2d48      	cmp	r5, #72	; 0x48
 8016b84:	f100 0308 	add.w	r3, r0, #8
 8016b88:	f340 80d5 	ble.w	8016d36 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8016b8c:	112d      	asrs	r5, r5, #4
 8016b8e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8016b92:	f9b0 9000 	ldrsh.w	r9, [r0]
 8016b96:	6816      	ldr	r6, [r2, #0]
 8016b98:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8016b9c:	6006      	str	r6, [r0, #0]
 8016b9e:	6856      	ldr	r6, [r2, #4]
 8016ba0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8016ba4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8016ba8:	6046      	str	r6, [r0, #4]
 8016baa:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8016bae:	f8a2 8002 	strh.w	r8, [r2, #2]
 8016bb2:	f8a2 e004 	strh.w	lr, [r2, #4]
 8016bb6:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016bba:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8016bbe:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8016bc2:	4565      	cmp	r5, ip
 8016bc4:	f1a1 0208 	sub.w	r2, r1, #8
 8016bc8:	db06      	blt.n	8016bd8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8016bca:	d119      	bne.n	8016c00 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8016bcc:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8016bd0:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8016bd4:	42ae      	cmp	r6, r5
 8016bd6:	dd13      	ble.n	8016c00 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8016bd8:	460e      	mov	r6, r1
 8016bda:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8016bde:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8016be2:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8016be6:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8016bea:	601d      	str	r5, [r3, #0]
 8016bec:	6875      	ldr	r5, [r6, #4]
 8016bee:	605d      	str	r5, [r3, #4]
 8016bf0:	f821 9c08 	strh.w	r9, [r1, #-8]
 8016bf4:	f821 cc06 	strh.w	ip, [r1, #-6]
 8016bf8:	f821 8c04 	strh.w	r8, [r1, #-4]
 8016bfc:	f821 ec02 	strh.w	lr, [r1, #-2]
 8016c00:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8016c04:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8016c08:	42ae      	cmp	r6, r5
 8016c0a:	db06      	blt.n	8016c1a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8016c0c:	d116      	bne.n	8016c3c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8016c0e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8016c12:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8016c16:	45ac      	cmp	ip, r5
 8016c18:	da10      	bge.n	8016c3c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8016c1a:	681d      	ldr	r5, [r3, #0]
 8016c1c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8016c20:	6005      	str	r5, [r0, #0]
 8016c22:	685d      	ldr	r5, [r3, #4]
 8016c24:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8016c28:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8016c2c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8016c30:	6045      	str	r5, [r0, #4]
 8016c32:	8146      	strh	r6, [r0, #10]
 8016c34:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8016c38:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8016c3c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8016c40:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8016c44:	4565      	cmp	r5, ip
 8016c46:	db06      	blt.n	8016c56 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8016c48:	d119      	bne.n	8016c7e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016c4a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8016c4e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016c52:	42ae      	cmp	r6, r5
 8016c54:	da13      	bge.n	8016c7e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016c56:	460e      	mov	r6, r1
 8016c58:	f9b0 9000 	ldrsh.w	r9, [r0]
 8016c5c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8016c60:	6005      	str	r5, [r0, #0]
 8016c62:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8016c66:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8016c6a:	6875      	ldr	r5, [r6, #4]
 8016c6c:	6045      	str	r5, [r0, #4]
 8016c6e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8016c72:	f821 cc06 	strh.w	ip, [r1, #-6]
 8016c76:	f821 8c04 	strh.w	r8, [r1, #-4]
 8016c7a:	f821 ec02 	strh.w	lr, [r1, #-2]
 8016c7e:	3308      	adds	r3, #8
 8016c80:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8016c84:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8016c88:	45e6      	cmp	lr, ip
 8016c8a:	dbf8      	blt.n	8016c7e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016c8c:	d105      	bne.n	8016c9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016c8e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016c92:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016c96:	42ae      	cmp	r6, r5
 8016c98:	dbf1      	blt.n	8016c7e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016c9a:	4615      	mov	r5, r2
 8016c9c:	3a08      	subs	r2, #8
 8016c9e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8016ca2:	45b4      	cmp	ip, r6
 8016ca4:	dbf9      	blt.n	8016c9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016ca6:	d105      	bne.n	8016cb4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8016ca8:	f9b0 8000 	ldrsh.w	r8, [r0]
 8016cac:	f9b2 6000 	ldrsh.w	r6, [r2]
 8016cb0:	45b0      	cmp	r8, r6
 8016cb2:	dbf2      	blt.n	8016c9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016cb4:	4293      	cmp	r3, r2
 8016cb6:	f1a5 0608 	sub.w	r6, r5, #8
 8016cba:	d816      	bhi.n	8016cea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8016cbc:	f8d6 c000 	ldr.w	ip, [r6]
 8016cc0:	f9b3 a000 	ldrsh.w	sl, [r3]
 8016cc4:	f8c3 c000 	str.w	ip, [r3]
 8016cc8:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8016ccc:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8016cd0:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8016cd4:	f8c3 c004 	str.w	ip, [r3, #4]
 8016cd8:	f825 ac08 	strh.w	sl, [r5, #-8]
 8016cdc:	f825 ec06 	strh.w	lr, [r5, #-6]
 8016ce0:	f825 9c04 	strh.w	r9, [r5, #-4]
 8016ce4:	f825 8c02 	strh.w	r8, [r5, #-2]
 8016ce8:	e7c9      	b.n	8016c7e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016cea:	f8d6 e000 	ldr.w	lr, [r6]
 8016cee:	f9b0 a000 	ldrsh.w	sl, [r0]
 8016cf2:	f8c0 e000 	str.w	lr, [r0]
 8016cf6:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8016cfa:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8016cfe:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8016d02:	f8c0 e004 	str.w	lr, [r0, #4]
 8016d06:	f825 ac08 	strh.w	sl, [r5, #-8]
 8016d0a:	f825 cc06 	strh.w	ip, [r5, #-6]
 8016d0e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8016d12:	f825 8c02 	strh.w	r8, [r5, #-2]
 8016d16:	1acd      	subs	r5, r1, r3
 8016d18:	1a16      	subs	r6, r2, r0
 8016d1a:	10ed      	asrs	r5, r5, #3
 8016d1c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8016d20:	bfb5      	itete	lt
 8016d22:	e9c4 0200 	strdlt	r0, r2, [r4]
 8016d26:	e9c4 3100 	strdge	r3, r1, [r4]
 8016d2a:	460a      	movlt	r2, r1
 8016d2c:	4603      	movge	r3, r0
 8016d2e:	3408      	adds	r4, #8
 8016d30:	4618      	mov	r0, r3
 8016d32:	4611      	mov	r1, r2
 8016d34:	e724      	b.n	8016b80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8016d36:	4299      	cmp	r1, r3
 8016d38:	d928      	bls.n	8016d8c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8016d3a:	f1a3 0210 	sub.w	r2, r3, #16
 8016d3e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8016d42:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8016d46:	45ac      	cmp	ip, r5
 8016d48:	db06      	blt.n	8016d58 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8016d4a:	d11d      	bne.n	8016d88 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8016d4c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8016d50:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8016d54:	42ae      	cmp	r6, r5
 8016d56:	da17      	bge.n	8016d88 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8016d58:	4615      	mov	r5, r2
 8016d5a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8016d5e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8016d62:	6116      	str	r6, [r2, #16]
 8016d64:	686e      	ldr	r6, [r5, #4]
 8016d66:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8016d6a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8016d6e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8016d72:	42a8      	cmp	r0, r5
 8016d74:	6156      	str	r6, [r2, #20]
 8016d76:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8016d7a:	f8a2 800c 	strh.w	r8, [r2, #12]
 8016d7e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8016d82:	f1a2 0208 	sub.w	r2, r2, #8
 8016d86:	d1da      	bne.n	8016d3e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8016d88:	3308      	adds	r3, #8
 8016d8a:	e7d4      	b.n	8016d36 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8016d8c:	42bc      	cmp	r4, r7
 8016d8e:	d903      	bls.n	8016d98 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8016d90:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8016d94:	3c08      	subs	r4, #8
 8016d96:	e6f3      	b.n	8016b80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8016d98:	b050      	add	sp, #320	; 0x140
 8016d9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08016d9e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8016d9e:	b510      	push	{r4, lr}
 8016da0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016da2:	07da      	lsls	r2, r3, #31
 8016da4:	4604      	mov	r4, r0
 8016da6:	d507      	bpl.n	8016db8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8016da8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8016dac:	f7ff fe8a 	bl	8016ac4 <_ZN8touchgfx7Outline6lineToEii>
 8016db0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016db2:	f023 0301 	bic.w	r3, r3, #1
 8016db6:	6243      	str	r3, [r0, #36]	; 0x24
 8016db8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016dba:	079b      	lsls	r3, r3, #30
 8016dbc:	d521      	bpl.n	8016e02 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8016dbe:	6923      	ldr	r3, [r4, #16]
 8016dc0:	88d9      	ldrh	r1, [r3, #6]
 8016dc2:	889a      	ldrh	r2, [r3, #4]
 8016dc4:	430a      	orrs	r2, r1
 8016dc6:	d010      	beq.n	8016dea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016dc8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016dcc:	2a00      	cmp	r2, #0
 8016dce:	db0c      	blt.n	8016dea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016dd0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8016dd2:	428a      	cmp	r2, r1
 8016dd4:	da09      	bge.n	8016dea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016dd6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8016dda:	4291      	cmp	r1, r2
 8016ddc:	bf88      	it	hi
 8016dde:	3308      	addhi	r3, #8
 8016de0:	f102 0201 	add.w	r2, r2, #1
 8016de4:	bf88      	it	hi
 8016de6:	6123      	strhi	r3, [r4, #16]
 8016de8:	60a2      	str	r2, [r4, #8]
 8016dea:	68a1      	ldr	r1, [r4, #8]
 8016dec:	b129      	cbz	r1, 8016dfa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8016dee:	6863      	ldr	r3, [r4, #4]
 8016df0:	4299      	cmp	r1, r3
 8016df2:	d802      	bhi.n	8016dfa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8016df4:	68e0      	ldr	r0, [r4, #12]
 8016df6:	f7ff febc 	bl	8016b72 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8016dfa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016dfc:	f023 0302 	bic.w	r3, r3, #2
 8016e00:	6263      	str	r3, [r4, #36]	; 0x24
 8016e02:	68e0      	ldr	r0, [r4, #12]
 8016e04:	bd10      	pop	{r4, pc}
	...

08016e08 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8016e08:	4b02      	ldr	r3, [pc, #8]	; (8016e14 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8016e0a:	6018      	str	r0, [r3, #0]
 8016e0c:	4b02      	ldr	r3, [pc, #8]	; (8016e18 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8016e0e:	6019      	str	r1, [r3, #0]
 8016e10:	4770      	bx	lr
 8016e12:	bf00      	nop
 8016e14:	2001385c 	.word	0x2001385c
 8016e18:	20013860 	.word	0x20013860

08016e1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8016e1c:	4a02      	ldr	r2, [pc, #8]	; (8016e28 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8016e1e:	2300      	movs	r3, #0
 8016e20:	6013      	str	r3, [r2, #0]
 8016e22:	4a02      	ldr	r2, [pc, #8]	; (8016e2c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8016e24:	6013      	str	r3, [r2, #0]
 8016e26:	4770      	bx	lr
 8016e28:	2001385c 	.word	0x2001385c
 8016e2c:	20013860 	.word	0x20013860

08016e30 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8016e30:	4b01      	ldr	r3, [pc, #4]	; (8016e38 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8016e32:	6818      	ldr	r0, [r3, #0]
 8016e34:	4770      	bx	lr
 8016e36:	bf00      	nop
 8016e38:	2001385c 	.word	0x2001385c

08016e3c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8016e3c:	4b01      	ldr	r3, [pc, #4]	; (8016e44 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8016e3e:	6818      	ldr	r0, [r3, #0]
 8016e40:	4770      	bx	lr
 8016e42:	bf00      	nop
 8016e44:	20013860 	.word	0x20013860

08016e48 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8016e48:	b510      	push	{r4, lr}
 8016e4a:	6803      	ldr	r3, [r0, #0]
 8016e4c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016e4e:	460c      	mov	r4, r1
 8016e50:	4798      	blx	r3
 8016e52:	1b03      	subs	r3, r0, r4
 8016e54:	4258      	negs	r0, r3
 8016e56:	4158      	adcs	r0, r3
 8016e58:	bd10      	pop	{r4, pc}
	...

08016e5c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8016e5c:	4b01      	ldr	r3, [pc, #4]	; (8016e64 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8016e5e:	6019      	str	r1, [r3, #0]
 8016e60:	4770      	bx	lr
 8016e62:	bf00      	nop
 8016e64:	20013864 	.word	0x20013864

08016e68 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8016e68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016e6c:	4696      	mov	lr, r2
 8016e6e:	4605      	mov	r5, r0
 8016e70:	4614      	mov	r4, r2
 8016e72:	460e      	mov	r6, r1
 8016e74:	461f      	mov	r7, r3
 8016e76:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8016e7a:	b097      	sub	sp, #92	; 0x5c
 8016e7c:	f10d 0c1c 	add.w	ip, sp, #28
 8016e80:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8016e84:	f8de 3000 	ldr.w	r3, [lr]
 8016e88:	f8cc 3000 	str.w	r3, [ip]
 8016e8c:	f104 0e14 	add.w	lr, r4, #20
 8016e90:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8016e94:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8016e98:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8016e9c:	f8de 3000 	ldr.w	r3, [lr]
 8016ea0:	f8cc 3000 	str.w	r3, [ip]
 8016ea4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8016ea8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8016eac:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8016eb0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8016eb4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8016eb8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8016ebc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8016ec0:	f8de 3000 	ldr.w	r3, [lr]
 8016ec4:	f8cc 3000 	str.w	r3, [ip]
 8016ec8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8016eca:	682b      	ldr	r3, [r5, #0]
 8016ecc:	9201      	str	r2, [sp, #4]
 8016ece:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8016ed2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8016ed4:	9200      	str	r2, [sp, #0]
 8016ed6:	f8cd 8008 	str.w	r8, [sp, #8]
 8016eda:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8016ede:	aa07      	add	r2, sp, #28
 8016ee0:	463b      	mov	r3, r7
 8016ee2:	4631      	mov	r1, r6
 8016ee4:	4628      	mov	r0, r5
 8016ee6:	47d8      	blx	fp
 8016ee8:	46a6      	mov	lr, r4
 8016eea:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8016eee:	f10d 0c1c 	add.w	ip, sp, #28
 8016ef2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8016ef6:	f8de 3000 	ldr.w	r3, [lr]
 8016efa:	f8cc 3000 	str.w	r3, [ip]
 8016efe:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8016f02:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8016f06:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8016f0a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8016f0e:	343c      	adds	r4, #60	; 0x3c
 8016f10:	f8de 3000 	ldr.w	r3, [lr]
 8016f14:	f8cc 3000 	str.w	r3, [ip]
 8016f18:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016f1a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8016f1e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8016f22:	6823      	ldr	r3, [r4, #0]
 8016f24:	f8cc 3000 	str.w	r3, [ip]
 8016f28:	682b      	ldr	r3, [r5, #0]
 8016f2a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8016f2e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8016f30:	9201      	str	r2, [sp, #4]
 8016f32:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8016f34:	9200      	str	r2, [sp, #0]
 8016f36:	f8cd 8008 	str.w	r8, [sp, #8]
 8016f3a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8016f3c:	aa07      	add	r2, sp, #28
 8016f3e:	463b      	mov	r3, r7
 8016f40:	4631      	mov	r1, r6
 8016f42:	4628      	mov	r0, r5
 8016f44:	47a0      	blx	r4
 8016f46:	b017      	add	sp, #92	; 0x5c
 8016f48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016f4c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8016f4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f50:	b08d      	sub	sp, #52	; 0x34
 8016f52:	4688      	mov	r8, r1
 8016f54:	9916      	ldr	r1, [sp, #88]	; 0x58
 8016f56:	f8d3 c000 	ldr.w	ip, [r3]
 8016f5a:	680f      	ldr	r7, [r1, #0]
 8016f5c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8016f60:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8016f64:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8016f68:	edd3 6a07 	vldr	s13, [r3, #28]
 8016f6c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8016f6e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8016f72:	f9b1 9000 	ldrsh.w	r9, [r1]
 8016f76:	f9ba 1000 	ldrsh.w	r1, [sl]
 8016f7a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8016f7e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8016f82:	eba7 070c 	sub.w	r7, r7, ip
 8016f86:	42bc      	cmp	r4, r7
 8016f88:	bfa8      	it	ge
 8016f8a:	463c      	movge	r4, r7
 8016f8c:	ee07 4a90 	vmov	s15, r4
 8016f90:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8016f94:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8016f98:	ee25 4a04 	vmul.f32	s8, s10, s8
 8016f9c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8016fa0:	ee25 5a27 	vmul.f32	s10, s10, s15
 8016fa4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8016fa8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8016fac:	eb09 0e0c 	add.w	lr, r9, ip
 8016fb0:	4571      	cmp	r1, lr
 8016fb2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8016fb6:	ee32 1a05 	vadd.f32	s2, s4, s10
 8016fba:	ee36 0a84 	vadd.f32	s0, s13, s8
 8016fbe:	ee61 1a87 	vmul.f32	s3, s3, s14
 8016fc2:	ee22 2a07 	vmul.f32	s4, s4, s14
 8016fc6:	f340 808d 	ble.w	80170e4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8016fca:	eba1 060e 	sub.w	r6, r1, lr
 8016fce:	fb96 f5f4 	sdiv	r5, r6, r4
 8016fd2:	ee07 5a10 	vmov	s14, r5
 8016fd6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016fda:	2d00      	cmp	r5, #0
 8016fdc:	fb04 6615 	mls	r6, r4, r5, r6
 8016fe0:	eea7 0a04 	vfma.f32	s0, s14, s8
 8016fe4:	eee7 0a24 	vfma.f32	s1, s14, s9
 8016fe8:	eea7 1a05 	vfma.f32	s2, s14, s10
 8016fec:	dd13      	ble.n	8017016 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8016fee:	ee70 6a44 	vsub.f32	s13, s0, s8
 8016ff2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8016ff6:	eef5 6a40 	vcmp.f32	s13, #0.0
 8016ffa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ffe:	bf18      	it	ne
 8017000:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8017004:	ee31 2a45 	vsub.f32	s4, s2, s10
 8017008:	bf08      	it	eq
 801700a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801700e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017012:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017016:	fb05 f204 	mul.w	r2, r5, r4
 801701a:	1abf      	subs	r7, r7, r2
 801701c:	4494      	add	ip, r2
 801701e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8017022:	4411      	add	r1, r2
 8017024:	eb09 020c 	add.w	r2, r9, ip
 8017028:	443a      	add	r2, r7
 801702a:	b209      	sxth	r1, r1
 801702c:	428a      	cmp	r2, r1
 801702e:	bfc4      	itt	gt
 8017030:	eba1 0209 	subgt.w	r2, r1, r9
 8017034:	eba2 070c 	subgt.w	r7, r2, ip
 8017038:	2f00      	cmp	r7, #0
 801703a:	dd50      	ble.n	80170de <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801703c:	fb97 f1f4 	sdiv	r1, r7, r4
 8017040:	fb04 7211 	mls	r2, r4, r1, r7
 8017044:	b90a      	cbnz	r2, 801704a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8017046:	3901      	subs	r1, #1
 8017048:	4622      	mov	r2, r4
 801704a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801704e:	6840      	ldr	r0, [r0, #4]
 8017050:	900b      	str	r0, [sp, #44]	; 0x2c
 8017052:	f8d0 a000 	ldr.w	sl, [r0]
 8017056:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8017058:	9008      	str	r0, [sp, #32]
 801705a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801705e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8017060:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8017064:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8017068:	695b      	ldr	r3, [r3, #20]
 801706a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801706c:	445b      	add	r3, fp
 801706e:	eef0 6a42 	vmov.f32	s13, s4
 8017072:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8017076:	ee21 3a23 	vmul.f32	s6, s2, s7
 801707a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801707e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017082:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017086:	9307      	str	r3, [sp, #28]
 8017088:	ee17 7a90 	vmov	r7, s15
 801708c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8017090:	eeb0 7a61 	vmov.f32	s14, s3
 8017094:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017098:	ee16 3a90 	vmov	r3, s13
 801709c:	fb97 f7f4 	sdiv	r7, r7, r4
 80170a0:	ee17 ca90 	vmov	ip, s15
 80170a4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80170a8:	fb9c fcf4 	sdiv	ip, ip, r4
 80170ac:	fb0c 3306 	mla	r3, ip, r6, r3
 80170b0:	9302      	str	r3, [sp, #8]
 80170b2:	ee17 3a10 	vmov	r3, s14
 80170b6:	44b6      	add	lr, r6
 80170b8:	fb04 e505 	mla	r5, r4, r5, lr
 80170bc:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80170c0:	fb07 3706 	mla	r7, r7, r6, r3
 80170c4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80170c8:	e9cd 4700 	strd	r4, r7, [sp]
 80170cc:	2900      	cmp	r1, #0
 80170ce:	bfcc      	ite	gt
 80170d0:	46a1      	movgt	r9, r4
 80170d2:	4691      	movle	r9, r2
 80170d4:	eba9 0306 	sub.w	r3, r9, r6
 80170d8:	f8da 4008 	ldr.w	r4, [sl, #8]
 80170dc:	47a0      	blx	r4
 80170de:	b00d      	add	sp, #52	; 0x34
 80170e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170e4:	2500      	movs	r5, #0
 80170e6:	462e      	mov	r6, r5
 80170e8:	e799      	b.n	801701e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

080170ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80170ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170f0:	b0db      	sub	sp, #364	; 0x16c
 80170f2:	461d      	mov	r5, r3
 80170f4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 80170f8:	930a      	str	r3, [sp, #40]	; 0x28
 80170fa:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 80170fe:	930b      	str	r3, [sp, #44]	; 0x2c
 8017100:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8017104:	9310      	str	r3, [sp, #64]	; 0x40
 8017106:	6803      	ldr	r3, [r0, #0]
 8017108:	910f      	str	r1, [sp, #60]	; 0x3c
 801710a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801710c:	9009      	str	r0, [sp, #36]	; 0x24
 801710e:	4614      	mov	r4, r2
 8017110:	4629      	mov	r1, r5
 8017112:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8017116:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801711a:	47b8      	blx	r7
 801711c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801711e:	6058      	str	r0, [r3, #4]
 8017120:	2800      	cmp	r0, #0
 8017122:	f000 83a1 	beq.w	8017868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017126:	682b      	ldr	r3, [r5, #0]
 8017128:	9314      	str	r3, [sp, #80]	; 0x50
 801712a:	686b      	ldr	r3, [r5, #4]
 801712c:	9315      	str	r3, [sp, #84]	; 0x54
 801712e:	4bc4      	ldr	r3, [pc, #784]	; (8017440 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8017130:	ed94 7a02 	vldr	s14, [r4, #8]
 8017134:	7819      	ldrb	r1, [r3, #0]
 8017136:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801713a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801713e:	2900      	cmp	r1, #0
 8017140:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017144:	bf16      	itet	ne
 8017146:	4619      	movne	r1, r3
 8017148:	4611      	moveq	r1, r2
 801714a:	4613      	movne	r3, r2
 801714c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017150:	9116      	str	r1, [sp, #88]	; 0x58
 8017152:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8017156:	f240 8387 	bls.w	8017868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801715a:	ed94 7a07 	vldr	s14, [r4, #28]
 801715e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017162:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017166:	f240 837f 	bls.w	8017868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801716a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801716e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8017172:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017176:	f240 8377 	bls.w	8017868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801717a:	6822      	ldr	r2, [r4, #0]
 801717c:	4bb1      	ldr	r3, [pc, #708]	; (8017444 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801717e:	429a      	cmp	r2, r3
 8017180:	f2c0 8372 	blt.w	8017868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017184:	49b0      	ldr	r1, [pc, #704]	; (8017448 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8017186:	6963      	ldr	r3, [r4, #20]
 8017188:	428a      	cmp	r2, r1
 801718a:	f300 836d 	bgt.w	8017868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801718e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017192:	48ae      	ldr	r0, [pc, #696]	; (801744c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8017194:	33ff      	adds	r3, #255	; 0xff
 8017196:	4283      	cmp	r3, r0
 8017198:	f200 8366 	bhi.w	8017868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801719c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801719e:	4dac      	ldr	r5, [pc, #688]	; (8017450 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80171a0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80171a4:	33ff      	adds	r3, #255	; 0xff
 80171a6:	42ab      	cmp	r3, r5
 80171a8:	f200 835e 	bhi.w	8017868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80171ac:	6862      	ldr	r2, [r4, #4]
 80171ae:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80171b2:	33ff      	adds	r3, #255	; 0xff
 80171b4:	4283      	cmp	r3, r0
 80171b6:	f200 8357 	bhi.w	8017868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80171ba:	69a1      	ldr	r1, [r4, #24]
 80171bc:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80171c0:	33ff      	adds	r3, #255	; 0xff
 80171c2:	4283      	cmp	r3, r0
 80171c4:	f200 8350 	bhi.w	8017868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80171c8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80171ca:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80171ce:	30ff      	adds	r0, #255	; 0xff
 80171d0:	42a8      	cmp	r0, r5
 80171d2:	f200 8349 	bhi.w	8017868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80171d6:	428a      	cmp	r2, r1
 80171d8:	f280 8110 	bge.w	80173fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80171dc:	429a      	cmp	r2, r3
 80171de:	f300 8119 	bgt.w	8017414 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 80171e2:	4299      	cmp	r1, r3
 80171e4:	f280 811d 	bge.w	8017422 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80171e8:	2502      	movs	r5, #2
 80171ea:	2701      	movs	r7, #1
 80171ec:	46a9      	mov	r9, r5
 80171ee:	46b8      	mov	r8, r7
 80171f0:	f04f 0a00 	mov.w	sl, #0
 80171f4:	4621      	mov	r1, r4
 80171f6:	a849      	add	r0, sp, #292	; 0x124
 80171f8:	f003 ff2a 	bl	801b050 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80171fc:	4622      	mov	r2, r4
 80171fe:	4653      	mov	r3, sl
 8017200:	a949      	add	r1, sp, #292	; 0x124
 8017202:	f8cd 9000 	str.w	r9, [sp]
 8017206:	a819      	add	r0, sp, #100	; 0x64
 8017208:	f004 f852 	bl	801b2b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801720c:	4622      	mov	r2, r4
 801720e:	4653      	mov	r3, sl
 8017210:	a949      	add	r1, sp, #292	; 0x124
 8017212:	f8cd 8000 	str.w	r8, [sp]
 8017216:	a829      	add	r0, sp, #164	; 0xa4
 8017218:	f004 f84a 	bl	801b2b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801721c:	4643      	mov	r3, r8
 801721e:	4622      	mov	r2, r4
 8017220:	a949      	add	r1, sp, #292	; 0x124
 8017222:	f8cd 9000 	str.w	r9, [sp]
 8017226:	a839      	add	r0, sp, #228	; 0xe4
 8017228:	f004 f842 	bl	801b2b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801722c:	42af      	cmp	r7, r5
 801722e:	bfb5      	itete	lt
 8017230:	2300      	movlt	r3, #0
 8017232:	2301      	movge	r3, #1
 8017234:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017236:	930e      	strge	r3, [sp, #56]	; 0x38
 8017238:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801723a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801723e:	af12      	add	r7, sp, #72	; 0x48
 8017240:	bfb9      	ittee	lt
 8017242:	ad29      	addlt	r5, sp, #164	; 0xa4
 8017244:	ac19      	addlt	r4, sp, #100	; 0x64
 8017246:	ad19      	addge	r5, sp, #100	; 0x64
 8017248:	ac29      	addge	r4, sp, #164	; 0xa4
 801724a:	e887 0003 	stmia.w	r7, {r0, r1}
 801724e:	b928      	cbnz	r0, 801725c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8017250:	4b80      	ldr	r3, [pc, #512]	; (8017454 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8017252:	6818      	ldr	r0, [r3, #0]
 8017254:	6803      	ldr	r3, [r0, #0]
 8017256:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017258:	4798      	blx	r3
 801725a:	6038      	str	r0, [r7, #0]
 801725c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801725e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8017262:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017266:	930c      	str	r3, [sp, #48]	; 0x30
 8017268:	990c      	ldr	r1, [sp, #48]	; 0x30
 801726a:	6963      	ldr	r3, [r4, #20]
 801726c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801726e:	440b      	add	r3, r1
 8017270:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8017274:	4408      	add	r0, r1
 8017276:	b200      	sxth	r0, r0
 8017278:	4283      	cmp	r3, r0
 801727a:	900d      	str	r0, [sp, #52]	; 0x34
 801727c:	f280 80dd 	bge.w	801743a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8017280:	428b      	cmp	r3, r1
 8017282:	da08      	bge.n	8017296 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017284:	2a00      	cmp	r2, #0
 8017286:	dd06      	ble.n	8017296 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017288:	1acb      	subs	r3, r1, r3
 801728a:	429a      	cmp	r2, r3
 801728c:	f2c0 80e4 	blt.w	8017458 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8017290:	2b00      	cmp	r3, #0
 8017292:	f300 80e2 	bgt.w	801745a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8017296:	6967      	ldr	r7, [r4, #20]
 8017298:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801729a:	443b      	add	r3, r7
 801729c:	461f      	mov	r7, r3
 801729e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80172a0:	1bdf      	subs	r7, r3, r7
 80172a2:	4297      	cmp	r7, r2
 80172a4:	bfa8      	it	ge
 80172a6:	4617      	movge	r7, r2
 80172a8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80172ac:	2f00      	cmp	r7, #0
 80172ae:	f340 8166 	ble.w	801757e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80172b2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80172b4:	6829      	ldr	r1, [r5, #0]
 80172b6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80172ba:	f9bb 3000 	ldrsh.w	r3, [fp]
 80172be:	6820      	ldr	r0, [r4, #0]
 80172c0:	4411      	add	r1, r2
 80172c2:	4299      	cmp	r1, r3
 80172c4:	dd1a      	ble.n	80172fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80172c6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80172ca:	440b      	add	r3, r1
 80172cc:	4402      	add	r2, r0
 80172ce:	b21b      	sxth	r3, r3
 80172d0:	429a      	cmp	r2, r3
 80172d2:	dc13      	bgt.n	80172fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80172d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80172d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80172d8:	681b      	ldr	r3, [r3, #0]
 80172da:	9206      	str	r2, [sp, #24]
 80172dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80172de:	9205      	str	r2, [sp, #20]
 80172e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80172e2:	9500      	str	r5, [sp, #0]
 80172e4:	e9cd b203 	strd	fp, r2, [sp, #12]
 80172e8:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80172ea:	9809      	ldr	r0, [sp, #36]	; 0x24
 80172ec:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80172f0:	a912      	add	r1, sp, #72	; 0x48
 80172f2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80172f6:	aa49      	add	r2, sp, #292	; 0x124
 80172f8:	4623      	mov	r3, r4
 80172fa:	47c8      	blx	r9
 80172fc:	e9d4 2300 	ldrd	r2, r3, [r4]
 8017300:	441a      	add	r2, r3
 8017302:	6963      	ldr	r3, [r4, #20]
 8017304:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8017308:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801730c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8017310:	68a1      	ldr	r1, [r4, #8]
 8017312:	ed94 6a08 	vldr	s12, [r4, #32]
 8017316:	6022      	str	r2, [r4, #0]
 8017318:	3301      	adds	r3, #1
 801731a:	6163      	str	r3, [r4, #20]
 801731c:	69a3      	ldr	r3, [r4, #24]
 801731e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017322:	3b01      	subs	r3, #1
 8017324:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8017328:	61a3      	str	r3, [r4, #24]
 801732a:	6923      	ldr	r3, [r4, #16]
 801732c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8017330:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017334:	edd4 6a07 	vldr	s13, [r4, #28]
 8017338:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801733c:	440b      	add	r3, r1
 801733e:	68e1      	ldr	r1, [r4, #12]
 8017340:	6123      	str	r3, [r4, #16]
 8017342:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017346:	428b      	cmp	r3, r1
 8017348:	edc4 6a07 	vstr	s13, [r4, #28]
 801734c:	db15      	blt.n	801737a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801734e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8017352:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017356:	3201      	adds	r2, #1
 8017358:	edc4 6a07 	vstr	s13, [r4, #28]
 801735c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8017360:	6022      	str	r2, [r4, #0]
 8017362:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017366:	1a5b      	subs	r3, r3, r1
 8017368:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801736c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8017370:	6123      	str	r3, [r4, #16]
 8017372:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017376:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801737a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801737e:	441a      	add	r2, r3
 8017380:	696b      	ldr	r3, [r5, #20]
 8017382:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8017386:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801738a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801738e:	68a9      	ldr	r1, [r5, #8]
 8017390:	ed95 6a08 	vldr	s12, [r5, #32]
 8017394:	602a      	str	r2, [r5, #0]
 8017396:	3301      	adds	r3, #1
 8017398:	616b      	str	r3, [r5, #20]
 801739a:	69ab      	ldr	r3, [r5, #24]
 801739c:	ee37 7a27 	vadd.f32	s14, s14, s15
 80173a0:	3b01      	subs	r3, #1
 80173a2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80173a6:	61ab      	str	r3, [r5, #24]
 80173a8:	692b      	ldr	r3, [r5, #16]
 80173aa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80173ae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80173b2:	edd5 6a07 	vldr	s13, [r5, #28]
 80173b6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80173ba:	440b      	add	r3, r1
 80173bc:	68e9      	ldr	r1, [r5, #12]
 80173be:	612b      	str	r3, [r5, #16]
 80173c0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80173c4:	428b      	cmp	r3, r1
 80173c6:	edc5 6a07 	vstr	s13, [r5, #28]
 80173ca:	db15      	blt.n	80173f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80173cc:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80173d0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80173d4:	3201      	adds	r2, #1
 80173d6:	edc5 6a07 	vstr	s13, [r5, #28]
 80173da:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80173de:	602a      	str	r2, [r5, #0]
 80173e0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80173e4:	1a5b      	subs	r3, r3, r1
 80173e6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80173ea:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80173ee:	612b      	str	r3, [r5, #16]
 80173f0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80173f4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80173f8:	3f01      	subs	r7, #1
 80173fa:	e757      	b.n	80172ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80173fc:	4299      	cmp	r1, r3
 80173fe:	dc13      	bgt.n	8017428 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8017400:	429a      	cmp	r2, r3
 8017402:	da14      	bge.n	801742e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8017404:	2502      	movs	r5, #2
 8017406:	2703      	movs	r7, #3
 8017408:	46a9      	mov	r9, r5
 801740a:	f04f 0800 	mov.w	r8, #0
 801740e:	f04f 0a01 	mov.w	sl, #1
 8017412:	e6ef      	b.n	80171f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8017414:	2501      	movs	r5, #1
 8017416:	2700      	movs	r7, #0
 8017418:	46a9      	mov	r9, r5
 801741a:	46b8      	mov	r8, r7
 801741c:	f04f 0a02 	mov.w	sl, #2
 8017420:	e6e8      	b.n	80171f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8017422:	2501      	movs	r5, #1
 8017424:	2702      	movs	r7, #2
 8017426:	e6e1      	b.n	80171ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8017428:	2500      	movs	r5, #0
 801742a:	2701      	movs	r7, #1
 801742c:	e7f4      	b.n	8017418 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801742e:	2702      	movs	r7, #2
 8017430:	2503      	movs	r5, #3
 8017432:	f04f 0900 	mov.w	r9, #0
 8017436:	46b8      	mov	r8, r7
 8017438:	e7e9      	b.n	801740e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801743a:	4613      	mov	r3, r2
 801743c:	e728      	b.n	8017290 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801743e:	bf00      	nop
 8017440:	2001384c 	.word	0x2001384c
 8017444:	fffd8f01 	.word	0xfffd8f01
 8017448:	00027100 	.word	0x00027100
 801744c:	0004e1ff 	.word	0x0004e1ff
 8017450:	0004e1fe 	.word	0x0004e1fe
 8017454:	20013854 	.word	0x20013854
 8017458:	4613      	mov	r3, r2
 801745a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801745c:	9111      	str	r1, [sp, #68]	; 0x44
 801745e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8017462:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8017466:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8017468:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801746c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8017470:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8017474:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8017478:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801747c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8017480:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8017484:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8017488:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801748c:	469e      	mov	lr, r3
 801748e:	469c      	mov	ip, r3
 8017490:	f04f 0900 	mov.w	r9, #0
 8017494:	f1bc 0f00 	cmp.w	ip, #0
 8017498:	d147      	bne.n	801752a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801749a:	eb03 0c07 	add.w	ip, r3, r7
 801749e:	1ad7      	subs	r7, r2, r3
 80174a0:	f1b9 0f00 	cmp.w	r9, #0
 80174a4:	d009      	beq.n	80174ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80174a6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80174aa:	9029      	str	r0, [sp, #164]	; 0xa4
 80174ac:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80174b0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80174b4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80174b8:	912d      	str	r1, [sp, #180]	; 0xb4
 80174ba:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80174bc:	9111      	str	r1, [sp, #68]	; 0x44
 80174be:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80174c2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80174c6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80174ca:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80174ce:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80174d2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80174d6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80174da:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80174de:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80174e2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80174e6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80174ea:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80174ee:	f04f 0800 	mov.w	r8, #0
 80174f2:	f1be 0f00 	cmp.w	lr, #0
 80174f6:	d031      	beq.n	801755c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80174f8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80174fa:	4431      	add	r1, r6
 80174fc:	4549      	cmp	r1, r9
 80174fe:	4450      	add	r0, sl
 8017500:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8017504:	ee37 7a04 	vadd.f32	s14, s14, s8
 8017508:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801750c:	db08      	blt.n	8017520 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801750e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8017512:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8017516:	ee37 7a06 	vadd.f32	s14, s14, s12
 801751a:	3001      	adds	r0, #1
 801751c:	eba1 0109 	sub.w	r1, r1, r9
 8017520:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017524:	f04f 0801 	mov.w	r8, #1
 8017528:	e7e3      	b.n	80174f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801752a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801752c:	4431      	add	r1, r6
 801752e:	4541      	cmp	r1, r8
 8017530:	4450      	add	r0, sl
 8017532:	ee37 7a24 	vadd.f32	s14, s14, s9
 8017536:	ee77 7a84 	vadd.f32	s15, s15, s8
 801753a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801753e:	db08      	blt.n	8017552 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8017540:	ee76 6a85 	vadd.f32	s13, s13, s10
 8017544:	ee37 7a25 	vadd.f32	s14, s14, s11
 8017548:	ee77 7a86 	vadd.f32	s15, s15, s12
 801754c:	3001      	adds	r0, #1
 801754e:	eba1 0108 	sub.w	r1, r1, r8
 8017552:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017556:	f04f 0901 	mov.w	r9, #1
 801755a:	e79b      	b.n	8017494 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801755c:	449c      	add	ip, r3
 801755e:	1aff      	subs	r7, r7, r3
 8017560:	f1b8 0f00 	cmp.w	r8, #0
 8017564:	d009      	beq.n	801757a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8017566:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801756a:	9019      	str	r0, [sp, #100]	; 0x64
 801756c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8017570:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8017574:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8017578:	911d      	str	r1, [sp, #116]	; 0x74
 801757a:	1ad2      	subs	r2, r2, r3
 801757c:	e68b      	b.n	8017296 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801757e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017580:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8017582:	2b00      	cmp	r3, #0
 8017584:	f000 80d1 	beq.w	801772a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8017588:	ad19      	add	r5, sp, #100	; 0x64
 801758a:	ac39      	add	r4, sp, #228	; 0xe4
 801758c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801758e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8017592:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017596:	930c      	str	r3, [sp, #48]	; 0x30
 8017598:	990c      	ldr	r1, [sp, #48]	; 0x30
 801759a:	6963      	ldr	r3, [r4, #20]
 801759c:	440b      	add	r3, r1
 801759e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80175a2:	4408      	add	r0, r1
 80175a4:	b200      	sxth	r0, r0
 80175a6:	4283      	cmp	r3, r0
 80175a8:	900d      	str	r0, [sp, #52]	; 0x34
 80175aa:	f280 80c1 	bge.w	8017730 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80175ae:	428b      	cmp	r3, r1
 80175b0:	da08      	bge.n	80175c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80175b2:	2a00      	cmp	r2, #0
 80175b4:	dd06      	ble.n	80175c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80175b6:	1acb      	subs	r3, r1, r3
 80175b8:	429a      	cmp	r2, r3
 80175ba:	f2c0 80bb 	blt.w	8017734 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80175be:	2b00      	cmp	r3, #0
 80175c0:	f300 80b9 	bgt.w	8017736 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80175c4:	6967      	ldr	r7, [r4, #20]
 80175c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80175c8:	443b      	add	r3, r7
 80175ca:	461f      	mov	r7, r3
 80175cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80175ce:	1bdf      	subs	r7, r3, r7
 80175d0:	4297      	cmp	r7, r2
 80175d2:	bfa8      	it	ge
 80175d4:	4617      	movge	r7, r2
 80175d6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80175da:	2f00      	cmp	r7, #0
 80175dc:	f340 813c 	ble.w	8017858 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80175e0:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80175e2:	6829      	ldr	r1, [r5, #0]
 80175e4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80175e8:	f9bb 3000 	ldrsh.w	r3, [fp]
 80175ec:	6820      	ldr	r0, [r4, #0]
 80175ee:	4411      	add	r1, r2
 80175f0:	4299      	cmp	r1, r3
 80175f2:	dd1a      	ble.n	801762a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80175f4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80175f8:	440b      	add	r3, r1
 80175fa:	4402      	add	r2, r0
 80175fc:	b21b      	sxth	r3, r3
 80175fe:	429a      	cmp	r2, r3
 8017600:	dc13      	bgt.n	801762a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8017602:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017604:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017606:	681b      	ldr	r3, [r3, #0]
 8017608:	9206      	str	r2, [sp, #24]
 801760a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801760c:	9205      	str	r2, [sp, #20]
 801760e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017610:	9500      	str	r5, [sp, #0]
 8017612:	e9cd b203 	strd	fp, r2, [sp, #12]
 8017616:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8017618:	9809      	ldr	r0, [sp, #36]	; 0x24
 801761a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801761e:	a912      	add	r1, sp, #72	; 0x48
 8017620:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8017624:	aa49      	add	r2, sp, #292	; 0x124
 8017626:	4623      	mov	r3, r4
 8017628:	47c8      	blx	r9
 801762a:	e9d4 2300 	ldrd	r2, r3, [r4]
 801762e:	441a      	add	r2, r3
 8017630:	6963      	ldr	r3, [r4, #20]
 8017632:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8017636:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801763a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801763e:	68a1      	ldr	r1, [r4, #8]
 8017640:	ed94 6a08 	vldr	s12, [r4, #32]
 8017644:	6022      	str	r2, [r4, #0]
 8017646:	3301      	adds	r3, #1
 8017648:	6163      	str	r3, [r4, #20]
 801764a:	69a3      	ldr	r3, [r4, #24]
 801764c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017650:	3b01      	subs	r3, #1
 8017652:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8017656:	61a3      	str	r3, [r4, #24]
 8017658:	6923      	ldr	r3, [r4, #16]
 801765a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801765e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017662:	edd4 6a07 	vldr	s13, [r4, #28]
 8017666:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801766a:	440b      	add	r3, r1
 801766c:	68e1      	ldr	r1, [r4, #12]
 801766e:	6123      	str	r3, [r4, #16]
 8017670:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017674:	428b      	cmp	r3, r1
 8017676:	edc4 6a07 	vstr	s13, [r4, #28]
 801767a:	db15      	blt.n	80176a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801767c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8017680:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017684:	3201      	adds	r2, #1
 8017686:	edc4 6a07 	vstr	s13, [r4, #28]
 801768a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801768e:	6022      	str	r2, [r4, #0]
 8017690:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017694:	1a5b      	subs	r3, r3, r1
 8017696:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801769a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801769e:	6123      	str	r3, [r4, #16]
 80176a0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80176a4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80176a8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80176ac:	441a      	add	r2, r3
 80176ae:	696b      	ldr	r3, [r5, #20]
 80176b0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80176b4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80176b8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80176bc:	68a9      	ldr	r1, [r5, #8]
 80176be:	ed95 6a08 	vldr	s12, [r5, #32]
 80176c2:	602a      	str	r2, [r5, #0]
 80176c4:	3301      	adds	r3, #1
 80176c6:	616b      	str	r3, [r5, #20]
 80176c8:	69ab      	ldr	r3, [r5, #24]
 80176ca:	ee37 7a27 	vadd.f32	s14, s14, s15
 80176ce:	3b01      	subs	r3, #1
 80176d0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80176d4:	61ab      	str	r3, [r5, #24]
 80176d6:	692b      	ldr	r3, [r5, #16]
 80176d8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80176dc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80176e0:	edd5 6a07 	vldr	s13, [r5, #28]
 80176e4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80176e8:	440b      	add	r3, r1
 80176ea:	68e9      	ldr	r1, [r5, #12]
 80176ec:	612b      	str	r3, [r5, #16]
 80176ee:	ee76 6a86 	vadd.f32	s13, s13, s12
 80176f2:	428b      	cmp	r3, r1
 80176f4:	edc5 6a07 	vstr	s13, [r5, #28]
 80176f8:	db15      	blt.n	8017726 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80176fa:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80176fe:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017702:	3201      	adds	r2, #1
 8017704:	edc5 6a07 	vstr	s13, [r5, #28]
 8017708:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801770c:	602a      	str	r2, [r5, #0]
 801770e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017712:	1a5b      	subs	r3, r3, r1
 8017714:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8017718:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801771c:	612b      	str	r3, [r5, #16]
 801771e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017722:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017726:	3f01      	subs	r7, #1
 8017728:	e757      	b.n	80175da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801772a:	ad39      	add	r5, sp, #228	; 0xe4
 801772c:	ac19      	add	r4, sp, #100	; 0x64
 801772e:	e72d      	b.n	801758c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8017730:	4613      	mov	r3, r2
 8017732:	e744      	b.n	80175be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8017734:	4613      	mov	r3, r2
 8017736:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801773a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 801773c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8017740:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8017744:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8017748:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 801774c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8017750:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8017754:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8017758:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801775a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801775e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8017762:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8017766:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801776a:	960e      	str	r6, [sp, #56]	; 0x38
 801776c:	469e      	mov	lr, r3
 801776e:	461f      	mov	r7, r3
 8017770:	f04f 0900 	mov.w	r9, #0
 8017774:	2f00      	cmp	r7, #0
 8017776:	d146      	bne.n	8017806 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8017778:	449c      	add	ip, r3
 801777a:	1ad7      	subs	r7, r2, r3
 801777c:	f1b9 0f00 	cmp.w	r9, #0
 8017780:	d009      	beq.n	8017796 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8017782:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8017786:	9039      	str	r0, [sp, #228]	; 0xe4
 8017788:	913d      	str	r1, [sp, #244]	; 0xf4
 801778a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801778e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8017792:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8017796:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8017798:	910e      	str	r1, [sp, #56]	; 0x38
 801779a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801779e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80177a2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80177a6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80177aa:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80177ae:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80177b2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80177b6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80177ba:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80177be:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80177c2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80177c6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80177ca:	f04f 0800 	mov.w	r8, #0
 80177ce:	f1be 0f00 	cmp.w	lr, #0
 80177d2:	d030      	beq.n	8017836 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80177d4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80177d6:	4431      	add	r1, r6
 80177d8:	4549      	cmp	r1, r9
 80177da:	4450      	add	r0, sl
 80177dc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80177e0:	ee37 7a04 	vadd.f32	s14, s14, s8
 80177e4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80177e8:	db08      	blt.n	80177fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80177ea:	ee77 7a85 	vadd.f32	s15, s15, s10
 80177ee:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80177f2:	ee37 7a06 	vadd.f32	s14, s14, s12
 80177f6:	3001      	adds	r0, #1
 80177f8:	eba1 0109 	sub.w	r1, r1, r9
 80177fc:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017800:	f04f 0801 	mov.w	r8, #1
 8017804:	e7e3      	b.n	80177ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8017806:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017808:	4431      	add	r1, r6
 801780a:	4541      	cmp	r1, r8
 801780c:	4450      	add	r0, sl
 801780e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8017812:	ee77 7a84 	vadd.f32	s15, s15, s8
 8017816:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801781a:	db08      	blt.n	801782e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 801781c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8017820:	ee37 7a25 	vadd.f32	s14, s14, s11
 8017824:	ee77 7a86 	vadd.f32	s15, s15, s12
 8017828:	3001      	adds	r0, #1
 801782a:	eba1 0108 	sub.w	r1, r1, r8
 801782e:	3f01      	subs	r7, #1
 8017830:	f04f 0901 	mov.w	r9, #1
 8017834:	e79e      	b.n	8017774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8017836:	449c      	add	ip, r3
 8017838:	1aff      	subs	r7, r7, r3
 801783a:	f1b8 0f00 	cmp.w	r8, #0
 801783e:	d009      	beq.n	8017854 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8017840:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8017844:	9019      	str	r0, [sp, #100]	; 0x64
 8017846:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801784a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801784e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8017852:	911d      	str	r1, [sp, #116]	; 0x74
 8017854:	1ad2      	subs	r2, r2, r3
 8017856:	e6b5      	b.n	80175c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017858:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801785a:	681b      	ldr	r3, [r3, #0]
 801785c:	b923      	cbnz	r3, 8017868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801785e:	4b04      	ldr	r3, [pc, #16]	; (8017870 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8017860:	6818      	ldr	r0, [r3, #0]
 8017862:	6803      	ldr	r3, [r0, #0]
 8017864:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017866:	4798      	blx	r3
 8017868:	b05b      	add	sp, #364	; 0x16c
 801786a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801786e:	bf00      	nop
 8017870:	20013854 	.word	0x20013854

08017874 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8017874:	b570      	push	{r4, r5, r6, lr}
 8017876:	4604      	mov	r4, r0
 8017878:	f89d 601c 	ldrb.w	r6, [sp, #28]
 801787c:	9805      	ldr	r0, [sp, #20]
 801787e:	6061      	str	r1, [r4, #4]
 8017880:	2500      	movs	r5, #0
 8017882:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8017886:	8263      	strh	r3, [r4, #18]
 8017888:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801788c:	8025      	strh	r5, [r4, #0]
 801788e:	7221      	strb	r1, [r4, #8]
 8017890:	7266      	strb	r6, [r4, #9]
 8017892:	60e0      	str	r0, [r4, #12]
 8017894:	8222      	strh	r2, [r4, #16]
 8017896:	82a3      	strh	r3, [r4, #20]
 8017898:	82e5      	strh	r5, [r4, #22]
 801789a:	8325      	strh	r5, [r4, #24]
 801789c:	8365      	strh	r5, [r4, #26]
 801789e:	83a5      	strh	r5, [r4, #28]
 80178a0:	83e5      	strh	r5, [r4, #30]
 80178a2:	8425      	strh	r5, [r4, #32]
 80178a4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 80178a8:	b32e      	cbz	r6, 80178f6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80178aa:	6803      	ldr	r3, [r0, #0]
 80178ac:	695b      	ldr	r3, [r3, #20]
 80178ae:	4798      	blx	r3
 80178b0:	4606      	mov	r6, r0
 80178b2:	b300      	cbz	r0, 80178f6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80178b4:	68e0      	ldr	r0, [r4, #12]
 80178b6:	6803      	ldr	r3, [r0, #0]
 80178b8:	4631      	mov	r1, r6
 80178ba:	68db      	ldr	r3, [r3, #12]
 80178bc:	4798      	blx	r3
 80178be:	4605      	mov	r5, r0
 80178c0:	b1c8      	cbz	r0, 80178f6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80178c2:	7b43      	ldrb	r3, [r0, #13]
 80178c4:	7a82      	ldrb	r2, [r0, #10]
 80178c6:	005b      	lsls	r3, r3, #1
 80178c8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80178cc:	4313      	orrs	r3, r2
 80178ce:	8423      	strh	r3, [r4, #32]
 80178d0:	7a63      	ldrb	r3, [r4, #9]
 80178d2:	2b06      	cmp	r3, #6
 80178d4:	d10f      	bne.n	80178f6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80178d6:	68e0      	ldr	r0, [r4, #12]
 80178d8:	6803      	ldr	r3, [r0, #0]
 80178da:	462a      	mov	r2, r5
 80178dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80178de:	4631      	mov	r1, r6
 80178e0:	4798      	blx	r3
 80178e2:	7b6b      	ldrb	r3, [r5, #13]
 80178e4:	005b      	lsls	r3, r3, #1
 80178e6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80178ea:	7aab      	ldrb	r3, [r5, #10]
 80178ec:	4313      	orrs	r3, r2
 80178ee:	4418      	add	r0, r3
 80178f0:	8c23      	ldrh	r3, [r4, #32]
 80178f2:	4418      	add	r0, r3
 80178f4:	8420      	strh	r0, [r4, #32]
 80178f6:	4620      	mov	r0, r4
 80178f8:	bd70      	pop	{r4, r5, r6, pc}

080178fa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80178fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80178fe:	2400      	movs	r4, #0
 8017900:	b085      	sub	sp, #20
 8017902:	4681      	mov	r9, r0
 8017904:	4688      	mov	r8, r1
 8017906:	4692      	mov	sl, r2
 8017908:	469b      	mov	fp, r3
 801790a:	4627      	mov	r7, r4
 801790c:	4625      	mov	r5, r4
 801790e:	4626      	mov	r6, r4
 8017910:	4554      	cmp	r4, sl
 8017912:	da2a      	bge.n	801796a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017914:	2300      	movs	r3, #0
 8017916:	9303      	str	r3, [sp, #12]
 8017918:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801791c:	429d      	cmp	r5, r3
 801791e:	d004      	beq.n	801792a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8017920:	f242 030b 	movw	r3, #8203	; 0x200b
 8017924:	429d      	cmp	r5, r3
 8017926:	bf18      	it	ne
 8017928:	462f      	movne	r7, r5
 801792a:	ab03      	add	r3, sp, #12
 801792c:	4642      	mov	r2, r8
 801792e:	4659      	mov	r1, fp
 8017930:	4648      	mov	r0, r9
 8017932:	f003 f9a3 	bl	801ac7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017936:	4605      	mov	r5, r0
 8017938:	b1b8      	cbz	r0, 801796a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801793a:	280a      	cmp	r0, #10
 801793c:	d015      	beq.n	801796a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801793e:	9a03      	ldr	r2, [sp, #12]
 8017940:	b18a      	cbz	r2, 8017966 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8017942:	7b50      	ldrb	r0, [r2, #13]
 8017944:	7a93      	ldrb	r3, [r2, #10]
 8017946:	8895      	ldrh	r5, [r2, #4]
 8017948:	0040      	lsls	r0, r0, #1
 801794a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801794e:	4303      	orrs	r3, r0
 8017950:	9301      	str	r3, [sp, #4]
 8017952:	f8d8 3000 	ldr.w	r3, [r8]
 8017956:	4639      	mov	r1, r7
 8017958:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801795a:	4640      	mov	r0, r8
 801795c:	4798      	blx	r3
 801795e:	9b01      	ldr	r3, [sp, #4]
 8017960:	4418      	add	r0, r3
 8017962:	4406      	add	r6, r0
 8017964:	b2b6      	uxth	r6, r6
 8017966:	3401      	adds	r4, #1
 8017968:	e7d2      	b.n	8017910 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801796a:	4630      	mov	r0, r6
 801796c:	b005      	add	sp, #20
 801796e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017972 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8017972:	2a02      	cmp	r2, #2
 8017974:	b530      	push	{r4, r5, lr}
 8017976:	d011      	beq.n	801799c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8017978:	2a03      	cmp	r2, #3
 801797a:	d01c      	beq.n	80179b6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801797c:	2a01      	cmp	r2, #1
 801797e:	d10c      	bne.n	801799a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8017980:	888b      	ldrh	r3, [r1, #4]
 8017982:	8801      	ldrh	r1, [r0, #0]
 8017984:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8017988:	8844      	ldrh	r4, [r0, #2]
 801798a:	8004      	strh	r4, [r0, #0]
 801798c:	1a5b      	subs	r3, r3, r1
 801798e:	1a9b      	subs	r3, r3, r2
 8017990:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8017994:	8043      	strh	r3, [r0, #2]
 8017996:	8081      	strh	r1, [r0, #4]
 8017998:	80c2      	strh	r2, [r0, #6]
 801799a:	bd30      	pop	{r4, r5, pc}
 801799c:	88cb      	ldrh	r3, [r1, #6]
 801799e:	8842      	ldrh	r2, [r0, #2]
 80179a0:	1a9b      	subs	r3, r3, r2
 80179a2:	88c2      	ldrh	r2, [r0, #6]
 80179a4:	1a9b      	subs	r3, r3, r2
 80179a6:	888a      	ldrh	r2, [r1, #4]
 80179a8:	8801      	ldrh	r1, [r0, #0]
 80179aa:	8043      	strh	r3, [r0, #2]
 80179ac:	1a52      	subs	r2, r2, r1
 80179ae:	8881      	ldrh	r1, [r0, #4]
 80179b0:	1a52      	subs	r2, r2, r1
 80179b2:	8002      	strh	r2, [r0, #0]
 80179b4:	e7f1      	b.n	801799a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80179b6:	88cb      	ldrh	r3, [r1, #6]
 80179b8:	8841      	ldrh	r1, [r0, #2]
 80179ba:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80179be:	f9b0 5000 	ldrsh.w	r5, [r0]
 80179c2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80179c6:	8045      	strh	r5, [r0, #2]
 80179c8:	1a5b      	subs	r3, r3, r1
 80179ca:	1a9b      	subs	r3, r3, r2
 80179cc:	8003      	strh	r3, [r0, #0]
 80179ce:	8082      	strh	r2, [r0, #4]
 80179d0:	80c4      	strh	r4, [r0, #6]
 80179d2:	e7e2      	b.n	801799a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080179d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80179d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179d8:	b09f      	sub	sp, #124	; 0x7c
 80179da:	9116      	str	r1, [sp, #88]	; 0x58
 80179dc:	9317      	str	r3, [sp, #92]	; 0x5c
 80179de:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80179e0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80179e2:	8809      	ldrh	r1, [r1, #0]
 80179e4:	889b      	ldrh	r3, [r3, #4]
 80179e6:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80179ea:	9212      	str	r2, [sp, #72]	; 0x48
 80179ec:	440b      	add	r3, r1
 80179ee:	b21b      	sxth	r3, r3
 80179f0:	9310      	str	r3, [sp, #64]	; 0x40
 80179f2:	f8d8 3000 	ldr.w	r3, [r8]
 80179f6:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80179fa:	7b19      	ldrb	r1, [r3, #12]
 80179fc:	7adb      	ldrb	r3, [r3, #11]
 80179fe:	9011      	str	r0, [sp, #68]	; 0x44
 8017a00:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8017a04:	9114      	str	r1, [sp, #80]	; 0x50
 8017a06:	9315      	str	r3, [sp, #84]	; 0x54
 8017a08:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8017a0c:	2a00      	cmp	r2, #0
 8017a0e:	d06a      	beq.n	8017ae6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8017a10:	f898 3010 	ldrb.w	r3, [r8, #16]
 8017a14:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017a16:	2b06      	cmp	r3, #6
 8017a18:	bf14      	ite	ne
 8017a1a:	2301      	movne	r3, #1
 8017a1c:	2302      	moveq	r3, #2
 8017a1e:	4413      	add	r3, r2
 8017a20:	f04f 0900 	mov.w	r9, #0
 8017a24:	930f      	str	r3, [sp, #60]	; 0x3c
 8017a26:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8017a2a:	464c      	mov	r4, r9
 8017a2c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8017a30:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8017a34:	4293      	cmp	r3, r2
 8017a36:	f280 808f 	bge.w	8017b58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8017a3a:	2300      	movs	r3, #0
 8017a3c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8017a40:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8017a44:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017a48:	429c      	cmp	r4, r3
 8017a4a:	d006      	beq.n	8017a5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8017a4c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017a4e:	f242 020b 	movw	r2, #8203	; 0x200b
 8017a52:	4294      	cmp	r4, r2
 8017a54:	bf18      	it	ne
 8017a56:	4623      	movne	r3, r4
 8017a58:	930d      	str	r3, [sp, #52]	; 0x34
 8017a5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017a5c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8017a5e:	f8d8 2000 	ldr.w	r2, [r8]
 8017a62:	428b      	cmp	r3, r1
 8017a64:	db41      	blt.n	8017aea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8017a66:	6813      	ldr	r3, [r2, #0]
 8017a68:	4610      	mov	r0, r2
 8017a6a:	695b      	ldr	r3, [r3, #20]
 8017a6c:	4798      	blx	r3
 8017a6e:	4604      	mov	r4, r0
 8017a70:	f8d8 0000 	ldr.w	r0, [r8]
 8017a74:	6803      	ldr	r3, [r0, #0]
 8017a76:	aa1d      	add	r2, sp, #116	; 0x74
 8017a78:	689d      	ldr	r5, [r3, #8]
 8017a7a:	4621      	mov	r1, r4
 8017a7c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8017a80:	47a8      	blx	r5
 8017a82:	901c      	str	r0, [sp, #112]	; 0x70
 8017a84:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017a88:	429c      	cmp	r4, r3
 8017a8a:	f000 80eb 	beq.w	8017c64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017a8e:	f242 030b 	movw	r3, #8203	; 0x200b
 8017a92:	429c      	cmp	r4, r3
 8017a94:	f000 80e6 	beq.w	8017c64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017a98:	2c00      	cmp	r4, #0
 8017a9a:	f000 80f8 	beq.w	8017c8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017a9e:	2c0a      	cmp	r4, #10
 8017aa0:	d060      	beq.n	8017b64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8017aa2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8017aa4:	b36a      	cbz	r2, 8017b02 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8017aa6:	8894      	ldrh	r4, [r2, #4]
 8017aa8:	f1bb 0f00 	cmp.w	fp, #0
 8017aac:	d03b      	beq.n	8017b26 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8017aae:	f892 900d 	ldrb.w	r9, [r2, #13]
 8017ab2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017ab6:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8017aba:	f892 900a 	ldrb.w	r9, [r2, #10]
 8017abe:	f1bb 0f01 	cmp.w	fp, #1
 8017ac2:	ea49 0903 	orr.w	r9, r9, r3
 8017ac6:	d134      	bne.n	8017b32 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8017ac8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017aca:	eba6 0609 	sub.w	r6, r6, r9
 8017ace:	2b00      	cmp	r3, #0
 8017ad0:	d14f      	bne.n	8017b72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8017ad2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017ad4:	eb09 0306 	add.w	r3, r9, r6
 8017ad8:	4413      	add	r3, r2
 8017ada:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017adc:	f9b2 2000 	ldrsh.w	r2, [r2]
 8017ae0:	4293      	cmp	r3, r2
 8017ae2:	da51      	bge.n	8017b88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8017ae4:	e038      	b.n	8017b58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8017ae6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017ae8:	e79a      	b.n	8017a20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8017aea:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8017aee:	9301      	str	r3, [sp, #4]
 8017af0:	ab1d      	add	r3, sp, #116	; 0x74
 8017af2:	9300      	str	r3, [sp, #0]
 8017af4:	4659      	mov	r1, fp
 8017af6:	ab1c      	add	r3, sp, #112	; 0x70
 8017af8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8017afa:	f003 f908 	bl	801ad0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8017afe:	4604      	mov	r4, r0
 8017b00:	e7c0      	b.n	8017a84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8017b02:	f8d8 0000 	ldr.w	r0, [r8]
 8017b06:	6803      	ldr	r3, [r0, #0]
 8017b08:	691b      	ldr	r3, [r3, #16]
 8017b0a:	4798      	blx	r3
 8017b0c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017b10:	4298      	cmp	r0, r3
 8017b12:	f000 80a7 	beq.w	8017c64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017b16:	f242 030b 	movw	r3, #8203	; 0x200b
 8017b1a:	4298      	cmp	r0, r3
 8017b1c:	f000 80a2 	beq.w	8017c64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017b20:	f1bb 0f00 	cmp.w	fp, #0
 8017b24:	d100      	bne.n	8017b28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8017b26:	444e      	add	r6, r9
 8017b28:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8017b2a:	2a00      	cmp	r2, #0
 8017b2c:	d1bf      	bne.n	8017aae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8017b2e:	4691      	mov	r9, r2
 8017b30:	e098      	b.n	8017c64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017b32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017b34:	2b00      	cmp	r3, #0
 8017b36:	f000 80ac 	beq.w	8017c92 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8017b3a:	f1bb 0f00 	cmp.w	fp, #0
 8017b3e:	d118      	bne.n	8017b72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8017b40:	f8d8 0000 	ldr.w	r0, [r8]
 8017b44:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017b46:	6803      	ldr	r3, [r0, #0]
 8017b48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017b4a:	4798      	blx	r3
 8017b4c:	4406      	add	r6, r0
 8017b4e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017b50:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017b52:	1af3      	subs	r3, r6, r3
 8017b54:	4293      	cmp	r3, r2
 8017b56:	dd17      	ble.n	8017b88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8017b58:	2c00      	cmp	r4, #0
 8017b5a:	f000 8098 	beq.w	8017c8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017b5e:	2c0a      	cmp	r4, #10
 8017b60:	f040 8086 	bne.w	8017c70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8017b64:	240a      	movs	r4, #10
 8017b66:	fab4 f084 	clz	r0, r4
 8017b6a:	0940      	lsrs	r0, r0, #5
 8017b6c:	b01f      	add	sp, #124	; 0x7c
 8017b6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017b72:	f8d8 0000 	ldr.w	r0, [r8]
 8017b76:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017b78:	6803      	ldr	r3, [r0, #0]
 8017b7a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017b7c:	4798      	blx	r3
 8017b7e:	f1bb 0f01 	cmp.w	fp, #1
 8017b82:	eba6 0600 	sub.w	r6, r6, r0
 8017b86:	d0a4      	beq.n	8017ad2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8017b88:	981c      	ldr	r0, [sp, #112]	; 0x70
 8017b8a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017b8c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8017b90:	f9b3 7000 	ldrsh.w	r7, [r3]
 8017b94:	7b43      	ldrb	r3, [r0, #13]
 8017b96:	015b      	lsls	r3, r3, #5
 8017b98:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017b9c:	7983      	ldrb	r3, [r0, #6]
 8017b9e:	4431      	add	r1, r6
 8017ba0:	4313      	orrs	r3, r2
 8017ba2:	440b      	add	r3, r1
 8017ba4:	42bb      	cmp	r3, r7
 8017ba6:	db5d      	blt.n	8017c64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017ba8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017baa:	4299      	cmp	r1, r3
 8017bac:	da5a      	bge.n	8017c64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017bae:	f8d8 0000 	ldr.w	r0, [r8]
 8017bb2:	6803      	ldr	r3, [r0, #0]
 8017bb4:	42b7      	cmp	r7, r6
 8017bb6:	bfc8      	it	gt
 8017bb8:	1bbf      	subgt	r7, r7, r6
 8017bba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017bbc:	bfcc      	ite	gt
 8017bbe:	b2bf      	uxthgt	r7, r7
 8017bc0:	2700      	movle	r7, #0
 8017bc2:	4798      	blx	r3
 8017bc4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017bc6:	7b5a      	ldrb	r2, [r3, #13]
 8017bc8:	00d1      	lsls	r1, r2, #3
 8017bca:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8017bce:	7a19      	ldrb	r1, [r3, #8]
 8017bd0:	4329      	orrs	r1, r5
 8017bd2:	0655      	lsls	r5, r2, #25
 8017bd4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8017bd6:	bf44      	itt	mi
 8017bd8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8017bdc:	b209      	sxthmi	r1, r1
 8017bde:	1945      	adds	r5, r0, r5
 8017be0:	1a6d      	subs	r5, r5, r1
 8017be2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017be4:	b2ad      	uxth	r5, r5
 8017be6:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8017bea:	fa0f fa85 	sxth.w	sl, r5
 8017bee:	4551      	cmp	r1, sl
 8017bf0:	dd3c      	ble.n	8017c6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8017bf2:	0112      	lsls	r2, r2, #4
 8017bf4:	79d8      	ldrb	r0, [r3, #7]
 8017bf6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017bfa:	4302      	orrs	r2, r0
 8017bfc:	4492      	add	sl, r2
 8017bfe:	4551      	cmp	r1, sl
 8017c00:	dc30      	bgt.n	8017c64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017c02:	1b4d      	subs	r5, r1, r5
 8017c04:	b22d      	sxth	r5, r5
 8017c06:	468a      	mov	sl, r1
 8017c08:	9319      	str	r3, [sp, #100]	; 0x64
 8017c0a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017c0c:	f8d8 0000 	ldr.w	r0, [r8]
 8017c10:	681a      	ldr	r2, [r3, #0]
 8017c12:	6801      	ldr	r1, [r0, #0]
 8017c14:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8017c16:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8017c18:	9313      	str	r3, [sp, #76]	; 0x4c
 8017c1a:	9218      	str	r2, [sp, #96]	; 0x60
 8017c1c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8017c1e:	4788      	blx	r1
 8017c20:	f898 1006 	ldrb.w	r1, [r8, #6]
 8017c24:	910b      	str	r1, [sp, #44]	; 0x2c
 8017c26:	f898 100e 	ldrb.w	r1, [r8, #14]
 8017c2a:	910a      	str	r1, [sp, #40]	; 0x28
 8017c2c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8017c30:	9109      	str	r1, [sp, #36]	; 0x24
 8017c32:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8017c36:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017c38:	9305      	str	r3, [sp, #20]
 8017c3a:	b2ad      	uxth	r5, r5
 8017c3c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8017c40:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8017c44:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017c46:	9304      	str	r3, [sp, #16]
 8017c48:	4437      	add	r7, r6
 8017c4a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8017c4c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017c4e:	9206      	str	r2, [sp, #24]
 8017c50:	b23f      	sxth	r7, r7
 8017c52:	f8cd a004 	str.w	sl, [sp, #4]
 8017c56:	9700      	str	r7, [sp, #0]
 8017c58:	681a      	ldr	r2, [r3, #0]
 8017c5a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8017c5c:	685b      	ldr	r3, [r3, #4]
 8017c5e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017c60:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017c62:	47a8      	blx	r5
 8017c64:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017c66:	3301      	adds	r3, #1
 8017c68:	930e      	str	r3, [sp, #56]	; 0x38
 8017c6a:	e6e1      	b.n	8017a30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8017c6c:	2500      	movs	r5, #0
 8017c6e:	e7cb      	b.n	8017c08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8017c70:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8017c72:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017c74:	3501      	adds	r5, #1
 8017c76:	429d      	cmp	r5, r3
 8017c78:	f6bf af75 	bge.w	8017b66 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8017c7c:	4659      	mov	r1, fp
 8017c7e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8017c80:	f7f2 fbb0 	bl	800a3e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017c84:	4604      	mov	r4, r0
 8017c86:	b110      	cbz	r0, 8017c8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017c88:	280a      	cmp	r0, #10
 8017c8a:	d1f2      	bne.n	8017c72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8017c8c:	e76a      	b.n	8017b64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8017c8e:	2400      	movs	r4, #0
 8017c90:	e769      	b.n	8017b66 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8017c92:	f1bb 0f00 	cmp.w	fp, #0
 8017c96:	f43f af5a 	beq.w	8017b4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8017c9a:	e775      	b.n	8017b88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08017c9c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8017c9c:	b530      	push	{r4, r5, lr}
 8017c9e:	8ac4      	ldrh	r4, [r0, #22]
 8017ca0:	8b45      	ldrh	r5, [r0, #26]
 8017ca2:	8343      	strh	r3, [r0, #26]
 8017ca4:	442c      	add	r4, r5
 8017ca6:	1ae4      	subs	r4, r4, r3
 8017ca8:	82c4      	strh	r4, [r0, #22]
 8017caa:	8b83      	ldrh	r3, [r0, #28]
 8017cac:	8b04      	ldrh	r4, [r0, #24]
 8017cae:	4422      	add	r2, r4
 8017cb0:	440c      	add	r4, r1
 8017cb2:	1a59      	subs	r1, r3, r1
 8017cb4:	83c2      	strh	r2, [r0, #30]
 8017cb6:	8304      	strh	r4, [r0, #24]
 8017cb8:	8381      	strh	r1, [r0, #28]
 8017cba:	bd30      	pop	{r4, r5, pc}

08017cbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8017cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017cc0:	4604      	mov	r4, r0
 8017cc2:	8a47      	ldrh	r7, [r0, #18]
 8017cc4:	68c0      	ldr	r0, [r0, #12]
 8017cc6:	6803      	ldr	r3, [r0, #0]
 8017cc8:	b085      	sub	sp, #20
 8017cca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017ccc:	4798      	blx	r3
 8017cce:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8017cd2:	7a63      	ldrb	r3, [r4, #9]
 8017cd4:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8017cd8:	42b7      	cmp	r7, r6
 8017cda:	f103 33ff 	add.w	r3, r3, #4294967295
 8017cde:	bfac      	ite	ge
 8017ce0:	f04f 0900 	movge.w	r9, #0
 8017ce4:	f04f 0901 	movlt.w	r9, #1
 8017ce8:	2b05      	cmp	r3, #5
 8017cea:	d804      	bhi.n	8017cf6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8017cec:	e8df f003 	tbb	[pc, r3]
 8017cf0:	470e0854 	.word	0x470e0854
 8017cf4:	4c4c      	.short	0x4c4c
 8017cf6:	2500      	movs	r5, #0
 8017cf8:	46a9      	mov	r9, r5
 8017cfa:	462e      	mov	r6, r5
 8017cfc:	462f      	mov	r7, r5
 8017cfe:	e00d      	b.n	8017d1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017d00:	42b7      	cmp	r7, r6
 8017d02:	bfb4      	ite	lt
 8017d04:	2600      	movlt	r6, #0
 8017d06:	2601      	movge	r6, #1
 8017d08:	2500      	movs	r5, #0
 8017d0a:	e7f7      	b.n	8017cfc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8017d0c:	42b7      	cmp	r7, r6
 8017d0e:	464d      	mov	r5, r9
 8017d10:	f04f 0900 	mov.w	r9, #0
 8017d14:	bfb4      	ite	lt
 8017d16:	2600      	movlt	r6, #0
 8017d18:	2601      	movge	r6, #1
 8017d1a:	464f      	mov	r7, r9
 8017d1c:	f04f 0800 	mov.w	r8, #0
 8017d20:	f8a4 8016 	strh.w	r8, [r4, #22]
 8017d24:	f8a4 8018 	strh.w	r8, [r4, #24]
 8017d28:	f8cd 8004 	str.w	r8, [sp, #4]
 8017d2c:	2300      	movs	r3, #0
 8017d2e:	9303      	str	r3, [sp, #12]
 8017d30:	8823      	ldrh	r3, [r4, #0]
 8017d32:	2b20      	cmp	r3, #32
 8017d34:	d034      	beq.n	8017da0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8017d36:	f242 010b 	movw	r1, #8203	; 0x200b
 8017d3a:	1a5a      	subs	r2, r3, r1
 8017d3c:	f1d2 0a00 	rsbs	sl, r2, #0
 8017d40:	eb4a 0a02 	adc.w	sl, sl, r2
 8017d44:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8017d48:	4293      	cmp	r3, r2
 8017d4a:	d009      	beq.n	8017d60 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8017d4c:	428b      	cmp	r3, r1
 8017d4e:	9a01      	ldr	r2, [sp, #4]
 8017d50:	bf18      	it	ne
 8017d52:	461a      	movne	r2, r3
 8017d54:	9201      	str	r2, [sp, #4]
 8017d56:	bf0c      	ite	eq
 8017d58:	f04f 0a01 	moveq.w	sl, #1
 8017d5c:	f04f 0a00 	movne.w	sl, #0
 8017d60:	ab03      	add	r3, sp, #12
 8017d62:	68e2      	ldr	r2, [r4, #12]
 8017d64:	7a21      	ldrb	r1, [r4, #8]
 8017d66:	6860      	ldr	r0, [r4, #4]
 8017d68:	f002 ff88 	bl	801ac7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017d6c:	8020      	strh	r0, [r4, #0]
 8017d6e:	b9d8      	cbnz	r0, 8017da8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8017d70:	8ba2      	ldrh	r2, [r4, #28]
 8017d72:	2300      	movs	r3, #0
 8017d74:	4611      	mov	r1, r2
 8017d76:	4620      	mov	r0, r4
 8017d78:	f7ff ff90 	bl	8017c9c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8017d7c:	e06e      	b.n	8017e5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8017d7e:	2500      	movs	r5, #0
 8017d80:	46a9      	mov	r9, r5
 8017d82:	462e      	mov	r6, r5
 8017d84:	2701      	movs	r7, #1
 8017d86:	e7c9      	b.n	8017d1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017d88:	42b7      	cmp	r7, r6
 8017d8a:	f04f 0500 	mov.w	r5, #0
 8017d8e:	bfb4      	ite	lt
 8017d90:	2700      	movlt	r7, #0
 8017d92:	2701      	movge	r7, #1
 8017d94:	462e      	mov	r6, r5
 8017d96:	e7c1      	b.n	8017d1c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017d98:	2500      	movs	r5, #0
 8017d9a:	46a9      	mov	r9, r5
 8017d9c:	2601      	movs	r6, #1
 8017d9e:	e7ad      	b.n	8017cfc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8017da0:	9301      	str	r3, [sp, #4]
 8017da2:	f04f 0a01 	mov.w	sl, #1
 8017da6:	e7db      	b.n	8017d60 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8017da8:	8b63      	ldrh	r3, [r4, #26]
 8017daa:	280a      	cmp	r0, #10
 8017dac:	f103 0301 	add.w	r3, r3, #1
 8017db0:	8363      	strh	r3, [r4, #26]
 8017db2:	d0dd      	beq.n	8017d70 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8017db4:	9a03      	ldr	r2, [sp, #12]
 8017db6:	bb62      	cbnz	r2, 8017e12 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8017db8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017dbc:	4298      	cmp	r0, r3
 8017dbe:	d003      	beq.n	8017dc8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8017dc0:	f242 030b 	movw	r3, #8203	; 0x200b
 8017dc4:	4298      	cmp	r0, r3
 8017dc6:	d1b1      	bne.n	8017d2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017dc8:	8823      	ldrh	r3, [r4, #0]
 8017dca:	8ba1      	ldrh	r1, [r4, #28]
 8017dcc:	2b20      	cmp	r3, #32
 8017dce:	d003      	beq.n	8017dd8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8017dd0:	f242 000b 	movw	r0, #8203	; 0x200b
 8017dd4:	4283      	cmp	r3, r0
 8017dd6:	d131      	bne.n	8017e3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8017dd8:	f1ba 0f00 	cmp.w	sl, #0
 8017ddc:	bf0a      	itet	eq
 8017dde:	4688      	moveq	r8, r1
 8017de0:	4650      	movne	r0, sl
 8017de2:	2001      	moveq	r0, #1
 8017de4:	440a      	add	r2, r1
 8017de6:	8b23      	ldrh	r3, [r4, #24]
 8017de8:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8017dec:	b292      	uxth	r2, r2
 8017dee:	83a2      	strh	r2, [r4, #28]
 8017df0:	4413      	add	r3, r2
 8017df2:	f1b9 0f00 	cmp.w	r9, #0
 8017df6:	d102      	bne.n	8017dfe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8017df8:	2d00      	cmp	r5, #0
 8017dfa:	d042      	beq.n	8017e82 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8017dfc:	b300      	cbz	r0, 8017e40 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8017dfe:	8c21      	ldrh	r1, [r4, #32]
 8017e00:	4419      	add	r1, r3
 8017e02:	458c      	cmp	ip, r1
 8017e04:	da37      	bge.n	8017e76 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8017e06:	8ae1      	ldrh	r1, [r4, #22]
 8017e08:	2900      	cmp	r1, #0
 8017e0a:	d034      	beq.n	8017e76 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8017e0c:	4563      	cmp	r3, ip
 8017e0e:	dd8d      	ble.n	8017d2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017e10:	e01d      	b.n	8017e4e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8017e12:	8893      	ldrh	r3, [r2, #4]
 8017e14:	8023      	strh	r3, [r4, #0]
 8017e16:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8017e1a:	9901      	ldr	r1, [sp, #4]
 8017e1c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8017e20:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8017e24:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8017e28:	ea4b 0b00 	orr.w	fp, fp, r0
 8017e2c:	68e0      	ldr	r0, [r4, #12]
 8017e2e:	6803      	ldr	r3, [r0, #0]
 8017e30:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017e32:	4798      	blx	r3
 8017e34:	eb0b 0200 	add.w	r2, fp, r0
 8017e38:	b292      	uxth	r2, r2
 8017e3a:	e7c5      	b.n	8017dc8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8017e3c:	2000      	movs	r0, #0
 8017e3e:	e7d1      	b.n	8017de4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8017e40:	4563      	cmp	r3, ip
 8017e42:	f77f af73 	ble.w	8017d2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017e46:	8ae3      	ldrh	r3, [r4, #22]
 8017e48:	2b00      	cmp	r3, #0
 8017e4a:	f43f af6f 	beq.w	8017d2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017e4e:	2301      	movs	r3, #1
 8017e50:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8017e54:	8c22      	ldrh	r2, [r4, #32]
 8017e56:	8be3      	ldrh	r3, [r4, #30]
 8017e58:	4413      	add	r3, r2
 8017e5a:	83e3      	strh	r3, [r4, #30]
 8017e5c:	68e0      	ldr	r0, [r4, #12]
 8017e5e:	6803      	ldr	r3, [r0, #0]
 8017e60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017e62:	4798      	blx	r3
 8017e64:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8017e68:	4418      	add	r0, r3
 8017e6a:	8a63      	ldrh	r3, [r4, #18]
 8017e6c:	1a18      	subs	r0, r3, r0
 8017e6e:	8260      	strh	r0, [r4, #18]
 8017e70:	b005      	add	sp, #20
 8017e72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e76:	2300      	movs	r3, #0
 8017e78:	4611      	mov	r1, r2
 8017e7a:	4620      	mov	r0, r4
 8017e7c:	f7ff ff0e 	bl	8017c9c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8017e80:	e754      	b.n	8017d2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017e82:	4563      	cmp	r3, ip
 8017e84:	dd14      	ble.n	8017eb0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8017e86:	b117      	cbz	r7, 8017e8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8017e88:	2301      	movs	r3, #1
 8017e8a:	460a      	mov	r2, r1
 8017e8c:	e772      	b.n	8017d74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8017e8e:	2e00      	cmp	r6, #0
 8017e90:	f43f af4c 	beq.w	8017d2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017e94:	2800      	cmp	r0, #0
 8017e96:	f47f af49 	bne.w	8017d2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017e9a:	f1ba 0f00 	cmp.w	sl, #0
 8017e9e:	d002      	beq.n	8017ea6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8017ea0:	2301      	movs	r3, #1
 8017ea2:	4642      	mov	r2, r8
 8017ea4:	e767      	b.n	8017d76 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8017ea6:	8ae3      	ldrh	r3, [r4, #22]
 8017ea8:	2b00      	cmp	r3, #0
 8017eaa:	f43f af3f 	beq.w	8017d2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017eae:	e7d5      	b.n	8017e5c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8017eb0:	2800      	cmp	r0, #0
 8017eb2:	f47f af3b 	bne.w	8017d2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017eb6:	f1ba 0f00 	cmp.w	sl, #0
 8017eba:	f43f af37 	beq.w	8017d2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017ebe:	2301      	movs	r3, #1
 8017ec0:	4642      	mov	r2, r8
 8017ec2:	e7da      	b.n	8017e7a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08017ec4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8017ec4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017ec6:	4605      	mov	r5, r0
 8017ec8:	b08f      	sub	sp, #60	; 0x3c
 8017eca:	4617      	mov	r7, r2
 8017ecc:	461c      	mov	r4, r3
 8017ece:	460e      	mov	r6, r1
 8017ed0:	b1d1      	cbz	r1, 8017f08 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8017ed2:	681b      	ldr	r3, [r3, #0]
 8017ed4:	4620      	mov	r0, r4
 8017ed6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017ed8:	4798      	blx	r3
 8017eda:	4240      	negs	r0, r0
 8017edc:	b200      	sxth	r0, r0
 8017ede:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8017ee2:	9603      	str	r6, [sp, #12]
 8017ee4:	9700      	str	r7, [sp, #0]
 8017ee6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8017eea:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8017eee:	4629      	mov	r1, r5
 8017ef0:	a805      	add	r0, sp, #20
 8017ef2:	f7ff fcbf 	bl	8017874 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8017ef6:	2401      	movs	r4, #1
 8017ef8:	a805      	add	r0, sp, #20
 8017efa:	f7ff fedf 	bl	8017cbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8017efe:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8017f02:	b163      	cbz	r3, 8017f1e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8017f04:	3401      	adds	r4, #1
 8017f06:	e7f7      	b.n	8017ef8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8017f08:	f002 ff86 	bl	801ae18 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017f0c:	2401      	movs	r4, #1
 8017f0e:	280a      	cmp	r0, #10
 8017f10:	4628      	mov	r0, r5
 8017f12:	bf08      	it	eq
 8017f14:	3401      	addeq	r4, #1
 8017f16:	f002 ff7f 	bl	801ae18 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017f1a:	2800      	cmp	r0, #0
 8017f1c:	d1f7      	bne.n	8017f0e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8017f1e:	b2a0      	uxth	r0, r4
 8017f20:	b00f      	add	sp, #60	; 0x3c
 8017f22:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017f24 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8017f24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f28:	b0e3      	sub	sp, #396	; 0x18c
 8017f2a:	461c      	mov	r4, r3
 8017f2c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8017f2e:	4683      	mov	fp, r0
 8017f30:	4688      	mov	r8, r1
 8017f32:	2b00      	cmp	r3, #0
 8017f34:	f000 8112 	beq.w	801815c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8017f38:	6823      	ldr	r3, [r4, #0]
 8017f3a:	2b00      	cmp	r3, #0
 8017f3c:	f000 810e 	beq.w	801815c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8017f40:	7ba3      	ldrb	r3, [r4, #14]
 8017f42:	2b00      	cmp	r3, #0
 8017f44:	f000 810a 	beq.w	801815c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8017f48:	6810      	ldr	r0, [r2, #0]
 8017f4a:	6851      	ldr	r1, [r2, #4]
 8017f4c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8017f50:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8017f54:	ad0a      	add	r5, sp, #40	; 0x28
 8017f56:	462b      	mov	r3, r5
 8017f58:	c303      	stmia	r3!, {r0, r1}
 8017f5a:	2100      	movs	r1, #0
 8017f5c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8017f60:	910c      	str	r1, [sp, #48]	; 0x30
 8017f62:	79a2      	ldrb	r2, [r4, #6]
 8017f64:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8017f68:	a90c      	add	r1, sp, #48	; 0x30
 8017f6a:	4628      	mov	r0, r5
 8017f6c:	f7ff fd01 	bl	8017972 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8017f70:	a90c      	add	r1, sp, #48	; 0x30
 8017f72:	4608      	mov	r0, r1
 8017f74:	79a2      	ldrb	r2, [r4, #6]
 8017f76:	f7ff fcfc 	bl	8017972 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8017f7a:	a817      	add	r0, sp, #92	; 0x5c
 8017f7c:	f002 fb20 	bl	801a5c0 <_ZN8touchgfx12TextProviderC1Ev>
 8017f80:	6820      	ldr	r0, [r4, #0]
 8017f82:	6803      	ldr	r3, [r0, #0]
 8017f84:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017f86:	4798      	blx	r3
 8017f88:	4606      	mov	r6, r0
 8017f8a:	6820      	ldr	r0, [r4, #0]
 8017f8c:	6803      	ldr	r3, [r0, #0]
 8017f8e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017f90:	4798      	blx	r3
 8017f92:	4633      	mov	r3, r6
 8017f94:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8017f96:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8017f98:	9000      	str	r0, [sp, #0]
 8017f9a:	a817      	add	r0, sp, #92	; 0x5c
 8017f9c:	f002 fb6b 	bl	801a676 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017fa0:	6820      	ldr	r0, [r4, #0]
 8017fa2:	f894 a004 	ldrb.w	sl, [r4, #4]
 8017fa6:	6803      	ldr	r3, [r0, #0]
 8017fa8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017faa:	4798      	blx	r3
 8017fac:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8017fb0:	6823      	ldr	r3, [r4, #0]
 8017fb2:	4607      	mov	r7, r0
 8017fb4:	4406      	add	r6, r0
 8017fb6:	a830      	add	r0, sp, #192	; 0xc0
 8017fb8:	f893 9009 	ldrb.w	r9, [r3, #9]
 8017fbc:	f002 fb00 	bl	801a5c0 <_ZN8touchgfx12TextProviderC1Ev>
 8017fc0:	7c23      	ldrb	r3, [r4, #16]
 8017fc2:	b17b      	cbz	r3, 8017fe4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8017fc4:	6820      	ldr	r0, [r4, #0]
 8017fc6:	6803      	ldr	r3, [r0, #0]
 8017fc8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017fca:	4798      	blx	r3
 8017fcc:	9009      	str	r0, [sp, #36]	; 0x24
 8017fce:	6820      	ldr	r0, [r4, #0]
 8017fd0:	6802      	ldr	r2, [r0, #0]
 8017fd2:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8017fd4:	4790      	blx	r2
 8017fd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017fd8:	9000      	str	r0, [sp, #0]
 8017fda:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8017fdc:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8017fde:	a830      	add	r0, sp, #192	; 0xc0
 8017fe0:	f002 fb49 	bl	801a676 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017fe4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8017fe8:	7be2      	ldrb	r2, [r4, #15]
 8017fea:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8017fee:	1a8a      	subs	r2, r1, r2
 8017ff0:	7c21      	ldrb	r1, [r4, #16]
 8017ff2:	9103      	str	r1, [sp, #12]
 8017ff4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8017ff8:	9102      	str	r1, [sp, #8]
 8017ffa:	6821      	ldr	r1, [r4, #0]
 8017ffc:	9101      	str	r1, [sp, #4]
 8017ffe:	7961      	ldrb	r1, [r4, #5]
 8018000:	9100      	str	r1, [sp, #0]
 8018002:	b292      	uxth	r2, r2
 8018004:	a930      	add	r1, sp, #192	; 0xc0
 8018006:	a80e      	add	r0, sp, #56	; 0x38
 8018008:	f7ff fc34 	bl	8017874 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801800c:	2e00      	cmp	r6, #0
 801800e:	dc5b      	bgt.n	80180c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8018010:	af17      	add	r7, sp, #92	; 0x5c
 8018012:	f04f 0900 	mov.w	r9, #0
 8018016:	7c23      	ldrb	r3, [r4, #16]
 8018018:	2b00      	cmp	r3, #0
 801801a:	f000 80b1 	beq.w	8018180 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801801e:	a80e      	add	r0, sp, #56	; 0x38
 8018020:	f7ff fe4c 	bl	8017cbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018024:	f1ba 0f00 	cmp.w	sl, #0
 8018028:	f000 80a5 	beq.w	8018176 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801802c:	7c23      	ldrb	r3, [r4, #16]
 801802e:	9309      	str	r3, [sp, #36]	; 0x24
 8018030:	2264      	movs	r2, #100	; 0x64
 8018032:	4639      	mov	r1, r7
 8018034:	a849      	add	r0, sp, #292	; 0x124
 8018036:	f015 feee 	bl	802de16 <memcpy>
 801803a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801803c:	2b00      	cmp	r3, #0
 801803e:	f000 80a7 	beq.w	8018190 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8018042:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8018046:	7922      	ldrb	r2, [r4, #4]
 8018048:	2a01      	cmp	r2, #1
 801804a:	f040 808a 	bne.w	8018162 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801804e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8018052:	1ac0      	subs	r0, r0, r3
 8018054:	2302      	movs	r3, #2
 8018056:	fb90 f0f3 	sdiv	r0, r0, r3
 801805a:	b200      	sxth	r0, r0
 801805c:	7c23      	ldrb	r3, [r4, #16]
 801805e:	2b00      	cmp	r3, #0
 8018060:	f000 808b 	beq.w	801817a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8018064:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8018068:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801806c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018070:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8018074:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8018078:	4410      	add	r0, r2
 801807a:	b200      	sxth	r0, r0
 801807c:	9000      	str	r0, [sp, #0]
 801807e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8018082:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8018086:	4642      	mov	r2, r8
 8018088:	2100      	movs	r1, #0
 801808a:	4658      	mov	r0, fp
 801808c:	f7ff fca2 	bl	80179d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8018090:	2800      	cmp	r0, #0
 8018092:	d163      	bne.n	801815c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018094:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8018098:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801809c:	b2b2      	uxth	r2, r6
 801809e:	4413      	add	r3, r2
 80180a0:	1a8a      	subs	r2, r1, r2
 80180a2:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 80180a6:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 80180aa:	b21b      	sxth	r3, r3
 80180ac:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80180b0:	2a00      	cmp	r2, #0
 80180b2:	d153      	bne.n	801815c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80180b4:	6822      	ldr	r2, [r4, #0]
 80180b6:	8869      	ldrh	r1, [r5, #2]
 80180b8:	7a12      	ldrb	r2, [r2, #8]
 80180ba:	1a9b      	subs	r3, r3, r2
 80180bc:	88ea      	ldrh	r2, [r5, #6]
 80180be:	440a      	add	r2, r1
 80180c0:	b212      	sxth	r2, r2
 80180c2:	4293      	cmp	r3, r2
 80180c4:	dda7      	ble.n	8018016 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80180c6:	e049      	b.n	801815c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80180c8:	7c23      	ldrb	r3, [r4, #16]
 80180ca:	444f      	add	r7, r9
 80180cc:	b1c3      	cbz	r3, 8018100 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80180ce:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80180d2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80180d6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80180da:	443b      	add	r3, r7
 80180dc:	4293      	cmp	r3, r2
 80180de:	da97      	bge.n	8018010 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80180e0:	a80e      	add	r0, sp, #56	; 0x38
 80180e2:	f7ff fdeb 	bl	8017cbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80180e6:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 80180ea:	3b01      	subs	r3, #1
 80180ec:	b29b      	uxth	r3, r3
 80180ee:	454b      	cmp	r3, r9
 80180f0:	9309      	str	r3, [sp, #36]	; 0x24
 80180f2:	d021      	beq.n	8018138 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80180f4:	7961      	ldrb	r1, [r4, #5]
 80180f6:	a817      	add	r0, sp, #92	; 0x5c
 80180f8:	f7f2 f974 	bl	800a3e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80180fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80180fe:	e7f4      	b.n	80180ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8018100:	fa1f f986 	uxth.w	r9, r6
 8018104:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018108:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801810c:	443b      	add	r3, r7
 801810e:	4293      	cmp	r3, r2
 8018110:	f6bf af7e 	bge.w	8018010 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8018114:	a817      	add	r0, sp, #92	; 0x5c
 8018116:	f002 fe7f 	bl	801ae18 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801811a:	b1f8      	cbz	r0, 801815c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801811c:	280a      	cmp	r0, #10
 801811e:	d1f1      	bne.n	8018104 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8018120:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8018124:	444b      	add	r3, r9
 8018126:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801812a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801812e:	eba3 0309 	sub.w	r3, r3, r9
 8018132:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8018136:	e7e5      	b.n	8018104 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8018138:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801813c:	b2b3      	uxth	r3, r6
 801813e:	441a      	add	r2, r3
 8018140:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8018144:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8018148:	1ad3      	subs	r3, r2, r3
 801814a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801814e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8018152:	b11b      	cbz	r3, 801815c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018154:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8018158:	2b00      	cmp	r3, #0
 801815a:	d0ba      	beq.n	80180d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801815c:	b063      	add	sp, #396	; 0x18c
 801815e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018162:	2a02      	cmp	r2, #2
 8018164:	d105      	bne.n	8018172 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8018166:	7be2      	ldrb	r2, [r4, #15]
 8018168:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801816c:	1a80      	subs	r0, r0, r2
 801816e:	1ac0      	subs	r0, r0, r3
 8018170:	e773      	b.n	801805a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8018172:	2000      	movs	r0, #0
 8018174:	e772      	b.n	801805c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8018176:	7be0      	ldrb	r0, [r4, #15]
 8018178:	e770      	b.n	801805c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801817a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801817e:	e773      	b.n	8018068 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8018180:	f1ba 0f00 	cmp.w	sl, #0
 8018184:	d0f7      	beq.n	8018176 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8018186:	2264      	movs	r2, #100	; 0x64
 8018188:	4639      	mov	r1, r7
 801818a:	a849      	add	r0, sp, #292	; 0x124
 801818c:	f015 fe43 	bl	802de16 <memcpy>
 8018190:	2300      	movs	r3, #0
 8018192:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8018196:	6821      	ldr	r1, [r4, #0]
 8018198:	a849      	add	r0, sp, #292	; 0x124
 801819a:	f7ff fbae 	bl	80178fa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801819e:	b203      	sxth	r3, r0
 80181a0:	e751      	b.n	8018046 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080181a2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80181a2:	2b03      	cmp	r3, #3
 80181a4:	d818      	bhi.n	80181d8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80181a6:	e8df f003 	tbb	[pc, r3]
 80181aa:	0602      	.short	0x0602
 80181ac:	130d      	.short	0x130d
 80181ae:	f9b0 2000 	ldrsh.w	r2, [r0]
 80181b2:	1850      	adds	r0, r2, r1
 80181b4:	4770      	bx	lr
 80181b6:	8803      	ldrh	r3, [r0, #0]
 80181b8:	8880      	ldrh	r0, [r0, #4]
 80181ba:	4418      	add	r0, r3
 80181bc:	b200      	sxth	r0, r0
 80181be:	1a80      	subs	r0, r0, r2
 80181c0:	3801      	subs	r0, #1
 80181c2:	4770      	bx	lr
 80181c4:	8803      	ldrh	r3, [r0, #0]
 80181c6:	8880      	ldrh	r0, [r0, #4]
 80181c8:	4418      	add	r0, r3
 80181ca:	b200      	sxth	r0, r0
 80181cc:	1a40      	subs	r0, r0, r1
 80181ce:	e7f7      	b.n	80181c0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80181d0:	f9b0 0000 	ldrsh.w	r0, [r0]
 80181d4:	4410      	add	r0, r2
 80181d6:	4770      	bx	lr
 80181d8:	2000      	movs	r0, #0
 80181da:	4770      	bx	lr

080181dc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80181dc:	2b03      	cmp	r3, #3
 80181de:	d817      	bhi.n	8018210 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80181e0:	e8df f003 	tbb	[pc, r3]
 80181e4:	10090602 	.word	0x10090602
 80181e8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80181ec:	1850      	adds	r0, r2, r1
 80181ee:	4770      	bx	lr
 80181f0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80181f4:	e7fa      	b.n	80181ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80181f6:	8843      	ldrh	r3, [r0, #2]
 80181f8:	88c0      	ldrh	r0, [r0, #6]
 80181fa:	4418      	add	r0, r3
 80181fc:	b200      	sxth	r0, r0
 80181fe:	1a80      	subs	r0, r0, r2
 8018200:	3801      	subs	r0, #1
 8018202:	4770      	bx	lr
 8018204:	8843      	ldrh	r3, [r0, #2]
 8018206:	88c0      	ldrh	r0, [r0, #6]
 8018208:	4418      	add	r0, r3
 801820a:	b200      	sxth	r0, r0
 801820c:	1a40      	subs	r0, r0, r1
 801820e:	e7f7      	b.n	8018200 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8018210:	2000      	movs	r0, #0
 8018212:	4770      	bx	lr

08018214 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8018214:	4b01      	ldr	r3, [pc, #4]	; (801821c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8018216:	2200      	movs	r2, #0
 8018218:	601a      	str	r2, [r3, #0]
 801821a:	4770      	bx	lr
 801821c:	20013864 	.word	0x20013864

08018220 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8018220:	4603      	mov	r3, r0
 8018222:	b1c8      	cbz	r0, 8018258 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8018224:	0c02      	lsrs	r2, r0, #16
 8018226:	0412      	lsls	r2, r2, #16
 8018228:	b9a2      	cbnz	r2, 8018254 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801822a:	0403      	lsls	r3, r0, #16
 801822c:	2010      	movs	r0, #16
 801822e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8018232:	bf04      	itt	eq
 8018234:	021b      	lsleq	r3, r3, #8
 8018236:	3008      	addeq	r0, #8
 8018238:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801823c:	bf04      	itt	eq
 801823e:	011b      	lsleq	r3, r3, #4
 8018240:	3004      	addeq	r0, #4
 8018242:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8018246:	bf04      	itt	eq
 8018248:	009b      	lsleq	r3, r3, #2
 801824a:	3002      	addeq	r0, #2
 801824c:	2b00      	cmp	r3, #0
 801824e:	db04      	blt.n	801825a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8018250:	3001      	adds	r0, #1
 8018252:	4770      	bx	lr
 8018254:	2000      	movs	r0, #0
 8018256:	e7ea      	b.n	801822e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8018258:	2020      	movs	r0, #32
 801825a:	4770      	bx	lr

0801825c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801825c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018260:	b087      	sub	sp, #28
 8018262:	460d      	mov	r5, r1
 8018264:	4616      	mov	r6, r2
 8018266:	4698      	mov	r8, r3
 8018268:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801826c:	4601      	mov	r1, r0
 801826e:	b120      	cbz	r0, 801827a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018270:	b11a      	cbz	r2, 801827a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018272:	2d1f      	cmp	r5, #31
 8018274:	d801      	bhi.n	801827a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8018276:	2b1f      	cmp	r3, #31
 8018278:	d904      	bls.n	8018284 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801827a:	2000      	movs	r0, #0
 801827c:	6038      	str	r0, [r7, #0]
 801827e:	b007      	add	sp, #28
 8018280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018284:	b97d      	cbnz	r5, 80182a6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8018286:	b143      	cbz	r3, 801829a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8018288:	4602      	mov	r2, r0
 801828a:	e9cd 4700 	strd	r4, r7, [sp]
 801828e:	462b      	mov	r3, r5
 8018290:	4641      	mov	r1, r8
 8018292:	4630      	mov	r0, r6
 8018294:	f7ff ffe2 	bl	801825c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018298:	e7f1      	b.n	801827e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801829a:	f04f 33ff 	mov.w	r3, #4294967295
 801829e:	603b      	str	r3, [r7, #0]
 80182a0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80182a4:	e7eb      	b.n	801827e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80182a6:	fa32 fa05 	lsrs.w	sl, r2, r5
 80182aa:	d106      	bne.n	80182ba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80182ac:	4346      	muls	r6, r0
 80182ae:	fbb6 f0f4 	udiv	r0, r6, r4
 80182b2:	fb04 6610 	mls	r6, r4, r0, r6
 80182b6:	603e      	str	r6, [r7, #0]
 80182b8:	e7e1      	b.n	801827e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80182ba:	2201      	movs	r2, #1
 80182bc:	40aa      	lsls	r2, r5
 80182be:	3a01      	subs	r2, #1
 80182c0:	4016      	ands	r6, r2
 80182c2:	fa00 fb05 	lsl.w	fp, r0, r5
 80182c6:	4630      	mov	r0, r6
 80182c8:	fbbb f9f4 	udiv	r9, fp, r4
 80182cc:	fb0a f309 	mul.w	r3, sl, r9
 80182d0:	9303      	str	r3, [sp, #12]
 80182d2:	f7ff ffa5 	bl	8018220 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80182d6:	462b      	mov	r3, r5
 80182d8:	460a      	mov	r2, r1
 80182da:	e9cd 4700 	strd	r4, r7, [sp]
 80182de:	4601      	mov	r1, r0
 80182e0:	4630      	mov	r0, r6
 80182e2:	f7ff ffbb 	bl	801825c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80182e6:	fb04 b919 	mls	r9, r4, r9, fp
 80182ea:	4606      	mov	r6, r0
 80182ec:	4648      	mov	r0, r9
 80182ee:	eb05 0108 	add.w	r1, r5, r8
 80182f2:	f7ff ff95 	bl	8018220 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80182f6:	ab05      	add	r3, sp, #20
 80182f8:	e9cd 4300 	strd	r4, r3, [sp]
 80182fc:	464a      	mov	r2, r9
 80182fe:	4603      	mov	r3, r0
 8018300:	4650      	mov	r0, sl
 8018302:	f7ff ffab 	bl	801825c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018306:	6839      	ldr	r1, [r7, #0]
 8018308:	9a05      	ldr	r2, [sp, #20]
 801830a:	9b03      	ldr	r3, [sp, #12]
 801830c:	4411      	add	r1, r2
 801830e:	fbb1 f2f4 	udiv	r2, r1, r4
 8018312:	18d3      	adds	r3, r2, r3
 8018314:	441e      	add	r6, r3
 8018316:	fb04 1412 	mls	r4, r4, r2, r1
 801831a:	4430      	add	r0, r6
 801831c:	603c      	str	r4, [r7, #0]
 801831e:	e7ae      	b.n	801827e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08018320 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8018320:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018324:	b085      	sub	sp, #20
 8018326:	f1b0 0900 	subs.w	r9, r0, #0
 801832a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801832c:	461d      	mov	r5, r3
 801832e:	bfbf      	itttt	lt
 8018330:	6823      	ldrlt	r3, [r4, #0]
 8018332:	425b      	neglt	r3, r3
 8018334:	f1c9 0900 	rsblt	r9, r9, #0
 8018338:	6023      	strlt	r3, [r4, #0]
 801833a:	bfb4      	ite	lt
 801833c:	f04f 36ff 	movlt.w	r6, #4294967295
 8018340:	2601      	movge	r6, #1
 8018342:	2a00      	cmp	r2, #0
 8018344:	4617      	mov	r7, r2
 8018346:	da04      	bge.n	8018352 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8018348:	6823      	ldr	r3, [r4, #0]
 801834a:	425b      	negs	r3, r3
 801834c:	4257      	negs	r7, r2
 801834e:	4276      	negs	r6, r6
 8018350:	6023      	str	r3, [r4, #0]
 8018352:	2d00      	cmp	r5, #0
 8018354:	4638      	mov	r0, r7
 8018356:	bfba      	itte	lt
 8018358:	426d      	neglt	r5, r5
 801835a:	f04f 38ff 	movlt.w	r8, #4294967295
 801835e:	f04f 0801 	movge.w	r8, #1
 8018362:	f7ff ff5d 	bl	8018220 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018366:	ab03      	add	r3, sp, #12
 8018368:	e9cd 5300 	strd	r5, r3, [sp]
 801836c:	463a      	mov	r2, r7
 801836e:	4603      	mov	r3, r0
 8018370:	4648      	mov	r0, r9
 8018372:	f7ff ff73 	bl	801825c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018376:	6823      	ldr	r3, [r4, #0]
 8018378:	9a03      	ldr	r2, [sp, #12]
 801837a:	4546      	cmp	r6, r8
 801837c:	441a      	add	r2, r3
 801837e:	fb92 f3f5 	sdiv	r3, r2, r5
 8018382:	4418      	add	r0, r3
 8018384:	bf18      	it	ne
 8018386:	4240      	negne	r0, r0
 8018388:	fb05 2313 	mls	r3, r5, r3, r2
 801838c:	1c72      	adds	r2, r6, #1
 801838e:	6023      	str	r3, [r4, #0]
 8018390:	d105      	bne.n	801839e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8018392:	2b00      	cmp	r3, #0
 8018394:	f1c3 0200 	rsb	r2, r3, #0
 8018398:	db0b      	blt.n	80183b2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801839a:	6022      	str	r2, [r4, #0]
 801839c:	e006      	b.n	80183ac <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801839e:	2e01      	cmp	r6, #1
 80183a0:	d104      	bne.n	80183ac <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80183a2:	2b00      	cmp	r3, #0
 80183a4:	da02      	bge.n	80183ac <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80183a6:	442b      	add	r3, r5
 80183a8:	3801      	subs	r0, #1
 80183aa:	6023      	str	r3, [r4, #0]
 80183ac:	b005      	add	sp, #20
 80183ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80183b2:	3801      	subs	r0, #1
 80183b4:	1b52      	subs	r2, r2, r5
 80183b6:	e7f0      	b.n	801839a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

080183b8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80183b8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80183bc:	4c1c      	ldr	r4, [pc, #112]	; (8018430 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80183be:	6807      	ldr	r7, [r0, #0]
 80183c0:	69a3      	ldr	r3, [r4, #24]
 80183c2:	4605      	mov	r5, r0
 80183c4:	b92b      	cbnz	r3, 80183d2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80183c6:	6840      	ldr	r0, [r0, #4]
 80183c8:	e9c5 7000 	strd	r7, r0, [r5]
 80183cc:	b004      	add	sp, #16
 80183ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80183d2:	68a2      	ldr	r2, [r4, #8]
 80183d4:	6820      	ldr	r0, [r4, #0]
 80183d6:	ae04      	add	r6, sp, #16
 80183d8:	f04f 0802 	mov.w	r8, #2
 80183dc:	fb93 f1f8 	sdiv	r1, r3, r8
 80183e0:	440a      	add	r2, r1
 80183e2:	f846 2d04 	str.w	r2, [r6, #-4]!
 80183e6:	69e1      	ldr	r1, [r4, #28]
 80183e8:	9600      	str	r6, [sp, #0]
 80183ea:	463a      	mov	r2, r7
 80183ec:	f7ff ff98 	bl	8018320 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80183f0:	69a3      	ldr	r3, [r4, #24]
 80183f2:	686a      	ldr	r2, [r5, #4]
 80183f4:	6a21      	ldr	r1, [r4, #32]
 80183f6:	9600      	str	r6, [sp, #0]
 80183f8:	4607      	mov	r7, r0
 80183fa:	6860      	ldr	r0, [r4, #4]
 80183fc:	f7ff ff90 	bl	8018320 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018400:	6962      	ldr	r2, [r4, #20]
 8018402:	69a3      	ldr	r3, [r4, #24]
 8018404:	fb93 f8f8 	sdiv	r8, r3, r8
 8018408:	4442      	add	r2, r8
 801840a:	9203      	str	r2, [sp, #12]
 801840c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801840e:	682a      	ldr	r2, [r5, #0]
 8018410:	9600      	str	r6, [sp, #0]
 8018412:	4407      	add	r7, r0
 8018414:	68e0      	ldr	r0, [r4, #12]
 8018416:	f7ff ff83 	bl	8018320 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801841a:	9600      	str	r6, [sp, #0]
 801841c:	4680      	mov	r8, r0
 801841e:	69a3      	ldr	r3, [r4, #24]
 8018420:	686a      	ldr	r2, [r5, #4]
 8018422:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8018424:	6920      	ldr	r0, [r4, #16]
 8018426:	f7ff ff7b 	bl	8018320 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801842a:	4440      	add	r0, r8
 801842c:	e7cc      	b.n	80183c8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801842e:	bf00      	nop
 8018430:	20013868 	.word	0x20013868

08018434 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8018434:	4b07      	ldr	r3, [pc, #28]	; (8018454 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8018436:	781b      	ldrb	r3, [r3, #0]
 8018438:	2b01      	cmp	r3, #1
 801843a:	d109      	bne.n	8018450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801843c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8018440:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018444:	8003      	strh	r3, [r0, #0]
 8018446:	4b04      	ldr	r3, [pc, #16]	; (8018458 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8018448:	881b      	ldrh	r3, [r3, #0]
 801844a:	3b01      	subs	r3, #1
 801844c:	1a9b      	subs	r3, r3, r2
 801844e:	800b      	strh	r3, [r1, #0]
 8018450:	4770      	bx	lr
 8018452:	bf00      	nop
 8018454:	2001384c 	.word	0x2001384c
 8018458:	20013848 	.word	0x20013848

0801845c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801845c:	b510      	push	{r4, lr}
 801845e:	4b07      	ldr	r3, [pc, #28]	; (801847c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8018460:	781b      	ldrb	r3, [r3, #0]
 8018462:	2b01      	cmp	r3, #1
 8018464:	d108      	bne.n	8018478 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8018466:	4b06      	ldr	r3, [pc, #24]	; (8018480 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8018468:	880c      	ldrh	r4, [r1, #0]
 801846a:	881b      	ldrh	r3, [r3, #0]
 801846c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018470:	3b01      	subs	r3, #1
 8018472:	1b1b      	subs	r3, r3, r4
 8018474:	8003      	strh	r3, [r0, #0]
 8018476:	800a      	strh	r2, [r1, #0]
 8018478:	bd10      	pop	{r4, pc}
 801847a:	bf00      	nop
 801847c:	2001384c 	.word	0x2001384c
 8018480:	20013848 	.word	0x20013848

08018484 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8018484:	b510      	push	{r4, lr}
 8018486:	4b0a      	ldr	r3, [pc, #40]	; (80184b0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8018488:	781b      	ldrb	r3, [r3, #0]
 801848a:	2b01      	cmp	r3, #1
 801848c:	d10e      	bne.n	80184ac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801848e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8018492:	8843      	ldrh	r3, [r0, #2]
 8018494:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018498:	8044      	strh	r4, [r0, #2]
 801849a:	18ca      	adds	r2, r1, r3
 801849c:	4b05      	ldr	r3, [pc, #20]	; (80184b4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801849e:	881b      	ldrh	r3, [r3, #0]
 80184a0:	1a9b      	subs	r3, r3, r2
 80184a2:	8003      	strh	r3, [r0, #0]
 80184a4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80184a8:	80c3      	strh	r3, [r0, #6]
 80184aa:	8081      	strh	r1, [r0, #4]
 80184ac:	bd10      	pop	{r4, pc}
 80184ae:	bf00      	nop
 80184b0:	2001384c 	.word	0x2001384c
 80184b4:	20013848 	.word	0x20013848

080184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80184b8:	4b08      	ldr	r3, [pc, #32]	; (80184dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80184ba:	781b      	ldrb	r3, [r3, #0]
 80184bc:	2b01      	cmp	r3, #1
 80184be:	d10c      	bne.n	80184da <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80184c0:	8803      	ldrh	r3, [r0, #0]
 80184c2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80184c6:	8842      	ldrh	r2, [r0, #2]
 80184c8:	8002      	strh	r2, [r0, #0]
 80184ca:	185a      	adds	r2, r3, r1
 80184cc:	4b04      	ldr	r3, [pc, #16]	; (80184e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80184ce:	881b      	ldrh	r3, [r3, #0]
 80184d0:	1a9b      	subs	r3, r3, r2
 80184d2:	8043      	strh	r3, [r0, #2]
 80184d4:	88c3      	ldrh	r3, [r0, #6]
 80184d6:	8083      	strh	r3, [r0, #4]
 80184d8:	80c1      	strh	r1, [r0, #6]
 80184da:	4770      	bx	lr
 80184dc:	2001384c 	.word	0x2001384c
 80184e0:	20013848 	.word	0x20013848

080184e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80184e4:	b510      	push	{r4, lr}
 80184e6:	4b07      	ldr	r3, [pc, #28]	; (8018504 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80184e8:	781b      	ldrb	r3, [r3, #0]
 80184ea:	2b01      	cmp	r3, #1
 80184ec:	d108      	bne.n	8018500 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80184ee:	f9b1 3000 	ldrsh.w	r3, [r1]
 80184f2:	f9b0 4000 	ldrsh.w	r4, [r0]
 80184f6:	8003      	strh	r3, [r0, #0]
 80184f8:	8893      	ldrh	r3, [r2, #4]
 80184fa:	3b01      	subs	r3, #1
 80184fc:	1b1b      	subs	r3, r3, r4
 80184fe:	800b      	strh	r3, [r1, #0]
 8018500:	bd10      	pop	{r4, pc}
 8018502:	bf00      	nop
 8018504:	2001384c 	.word	0x2001384c

08018508 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8018508:	4b0b      	ldr	r3, [pc, #44]	; (8018538 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801850a:	781b      	ldrb	r3, [r3, #0]
 801850c:	2b01      	cmp	r3, #1
 801850e:	d111      	bne.n	8018534 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8018510:	680b      	ldr	r3, [r1, #0]
 8018512:	ed90 7a00 	vldr	s14, [r0]
 8018516:	6003      	str	r3, [r0, #0]
 8018518:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801851c:	eddf 6a07 	vldr	s13, [pc, #28]	; 801853c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8018520:	ee07 3a90 	vmov	s15, r3
 8018524:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018528:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801852c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8018530:	edc1 7a00 	vstr	s15, [r1]
 8018534:	4770      	bx	lr
 8018536:	bf00      	nop
 8018538:	2001384c 	.word	0x2001384c
 801853c:	38d1b717 	.word	0x38d1b717

08018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8018540:	b510      	push	{r4, lr}
 8018542:	4b0a      	ldr	r3, [pc, #40]	; (801856c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8018544:	781b      	ldrb	r3, [r3, #0]
 8018546:	2b01      	cmp	r3, #1
 8018548:	460a      	mov	r2, r1
 801854a:	d10d      	bne.n	8018568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801854c:	8881      	ldrh	r1, [r0, #4]
 801854e:	8803      	ldrh	r3, [r0, #0]
 8018550:	440b      	add	r3, r1
 8018552:	4601      	mov	r1, r0
 8018554:	3b01      	subs	r3, #1
 8018556:	f821 3b02 	strh.w	r3, [r1], #2
 801855a:	f7ff ffc3 	bl	80184e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801855e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018562:	88c2      	ldrh	r2, [r0, #6]
 8018564:	8082      	strh	r2, [r0, #4]
 8018566:	80c3      	strh	r3, [r0, #6]
 8018568:	bd10      	pop	{r4, pc}
 801856a:	bf00      	nop
 801856c:	2001384c 	.word	0x2001384c

08018570 <_ZN8touchgfx11Application13requestRedrawEv>:
 8018570:	4b06      	ldr	r3, [pc, #24]	; (801858c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8018572:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018576:	4b06      	ldr	r3, [pc, #24]	; (8018590 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8018578:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 801857c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018580:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8018584:	2100      	movs	r1, #0
 8018586:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801858a:	4770      	bx	lr
 801858c:	20013848 	.word	0x20013848
 8018590:	2001384a 	.word	0x2001384a

08018594 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8018594:	4b03      	ldr	r3, [pc, #12]	; (80185a4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8018596:	6818      	ldr	r0, [r3, #0]
 8018598:	b110      	cbz	r0, 80185a0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801859a:	6803      	ldr	r3, [r0, #0]
 801859c:	699b      	ldr	r3, [r3, #24]
 801859e:	4718      	bx	r3
 80185a0:	4770      	bx	lr
 80185a2:	bf00      	nop
 80185a4:	20013898 	.word	0x20013898

080185a8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80185a8:	4770      	bx	lr
	...

080185ac <_ZN8touchgfx11Application4drawEv>:
 80185ac:	b507      	push	{r0, r1, r2, lr}
 80185ae:	4b09      	ldr	r3, [pc, #36]	; (80185d4 <_ZN8touchgfx11Application4drawEv+0x28>)
 80185b0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80185b4:	4b08      	ldr	r3, [pc, #32]	; (80185d8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80185b6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80185ba:	f9b3 3000 	ldrsh.w	r3, [r3]
 80185be:	f8ad 3006 	strh.w	r3, [sp, #6]
 80185c2:	6803      	ldr	r3, [r0, #0]
 80185c4:	2100      	movs	r1, #0
 80185c6:	9100      	str	r1, [sp, #0]
 80185c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80185ca:	4669      	mov	r1, sp
 80185cc:	4798      	blx	r3
 80185ce:	b003      	add	sp, #12
 80185d0:	f85d fb04 	ldr.w	pc, [sp], #4
 80185d4:	20013848 	.word	0x20013848
 80185d8:	2001384a 	.word	0x2001384a

080185dc <_ZN8touchgfx11Application10invalidateEv>:
 80185dc:	4b09      	ldr	r3, [pc, #36]	; (8018604 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80185de:	f9b3 2000 	ldrsh.w	r2, [r3]
 80185e2:	4b09      	ldr	r3, [pc, #36]	; (8018608 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80185e4:	b082      	sub	sp, #8
 80185e6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80185ea:	f8ad 2004 	strh.w	r2, [sp, #4]
 80185ee:	2100      	movs	r1, #0
 80185f0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80185f4:	9100      	str	r1, [sp, #0]
 80185f6:	6803      	ldr	r3, [r0, #0]
 80185f8:	aa02      	add	r2, sp, #8
 80185fa:	e912 0006 	ldmdb	r2, {r1, r2}
 80185fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018600:	b002      	add	sp, #8
 8018602:	4718      	bx	r3
 8018604:	20013848 	.word	0x20013848
 8018608:	2001384a 	.word	0x2001384a

0801860c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801860c:	4b03      	ldr	r3, [pc, #12]	; (801861c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801860e:	6818      	ldr	r0, [r3, #0]
 8018610:	b110      	cbz	r0, 8018618 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8018612:	6803      	ldr	r3, [r0, #0]
 8018614:	69db      	ldr	r3, [r3, #28]
 8018616:	4718      	bx	r3
 8018618:	4770      	bx	lr
 801861a:	bf00      	nop
 801861c:	20013898 	.word	0x20013898

08018620 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8018620:	4b03      	ldr	r3, [pc, #12]	; (8018630 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8018622:	6818      	ldr	r0, [r3, #0]
 8018624:	b110      	cbz	r0, 801862c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8018626:	6803      	ldr	r3, [r0, #0]
 8018628:	6a1b      	ldr	r3, [r3, #32]
 801862a:	4718      	bx	r3
 801862c:	4770      	bx	lr
 801862e:	bf00      	nop
 8018630:	20013898 	.word	0x20013898

08018634 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8018634:	2300      	movs	r3, #0
 8018636:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 801863a:	4770      	bx	lr

0801863c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801863c:	4b03      	ldr	r3, [pc, #12]	; (801864c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801863e:	6818      	ldr	r0, [r3, #0]
 8018640:	b110      	cbz	r0, 8018648 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8018642:	6803      	ldr	r3, [r0, #0]
 8018644:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018646:	4718      	bx	r3
 8018648:	4770      	bx	lr
 801864a:	bf00      	nop
 801864c:	20013898 	.word	0x20013898

08018650 <_ZN8touchgfx11ApplicationD1Ev>:
 8018650:	4770      	bx	lr

08018652 <_ZN8touchgfx11ApplicationD0Ev>:
 8018652:	b510      	push	{r4, lr}
 8018654:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8018658:	4604      	mov	r4, r0
 801865a:	f014 f9ca 	bl	802c9f2 <_ZdlPvj>
 801865e:	4620      	mov	r0, r4
 8018660:	bd10      	pop	{r4, pc}

08018662 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8018662:	b510      	push	{r4, lr}
 8018664:	f9b1 4000 	ldrsh.w	r4, [r1]
 8018668:	888a      	ldrh	r2, [r1, #4]
 801866a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801866e:	4422      	add	r2, r4
 8018670:	b212      	sxth	r2, r2
 8018672:	4293      	cmp	r3, r2
 8018674:	da15      	bge.n	80186a2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018676:	8882      	ldrh	r2, [r0, #4]
 8018678:	4413      	add	r3, r2
 801867a:	b21b      	sxth	r3, r3
 801867c:	429c      	cmp	r4, r3
 801867e:	da10      	bge.n	80186a2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018680:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8018684:	88c9      	ldrh	r1, [r1, #6]
 8018686:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801868a:	4419      	add	r1, r3
 801868c:	b209      	sxth	r1, r1
 801868e:	428a      	cmp	r2, r1
 8018690:	da07      	bge.n	80186a2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018692:	88c0      	ldrh	r0, [r0, #6]
 8018694:	4410      	add	r0, r2
 8018696:	b200      	sxth	r0, r0
 8018698:	4283      	cmp	r3, r0
 801869a:	bfac      	ite	ge
 801869c:	2000      	movge	r0, #0
 801869e:	2001      	movlt	r0, #1
 80186a0:	bd10      	pop	{r4, pc}
 80186a2:	2000      	movs	r0, #0
 80186a4:	e7fc      	b.n	80186a0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080186a6 <_ZN8touchgfx4Rect10restrictToEss>:
 80186a6:	f9b0 3000 	ldrsh.w	r3, [r0]
 80186aa:	2b00      	cmp	r3, #0
 80186ac:	b510      	push	{r4, lr}
 80186ae:	da04      	bge.n	80186ba <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80186b0:	8884      	ldrh	r4, [r0, #4]
 80186b2:	4423      	add	r3, r4
 80186b4:	8083      	strh	r3, [r0, #4]
 80186b6:	2300      	movs	r3, #0
 80186b8:	8003      	strh	r3, [r0, #0]
 80186ba:	f9b0 4000 	ldrsh.w	r4, [r0]
 80186be:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80186c2:	1b09      	subs	r1, r1, r4
 80186c4:	428b      	cmp	r3, r1
 80186c6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80186ca:	bfc8      	it	gt
 80186cc:	8081      	strhgt	r1, [r0, #4]
 80186ce:	2b00      	cmp	r3, #0
 80186d0:	da04      	bge.n	80186dc <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80186d2:	88c1      	ldrh	r1, [r0, #6]
 80186d4:	440b      	add	r3, r1
 80186d6:	80c3      	strh	r3, [r0, #6]
 80186d8:	2300      	movs	r3, #0
 80186da:	8043      	strh	r3, [r0, #2]
 80186dc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80186e0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80186e4:	1a52      	subs	r2, r2, r1
 80186e6:	4293      	cmp	r3, r2
 80186e8:	bfc8      	it	gt
 80186ea:	80c2      	strhgt	r2, [r0, #6]
 80186ec:	bd10      	pop	{r4, pc}
	...

080186f0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80186f0:	b510      	push	{r4, lr}
 80186f2:	4b10      	ldr	r3, [pc, #64]	; (8018734 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80186f4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80186f8:	4b0f      	ldr	r3, [pc, #60]	; (8018738 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80186fa:	460c      	mov	r4, r1
 80186fc:	4620      	mov	r0, r4
 80186fe:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018702:	f7ff ffd0 	bl	80186a6 <_ZN8touchgfx4Rect10restrictToEss>
 8018706:	4b0d      	ldr	r3, [pc, #52]	; (801873c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8018708:	6818      	ldr	r0, [r3, #0]
 801870a:	b190      	cbz	r0, 8018732 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801870c:	6803      	ldr	r3, [r0, #0]
 801870e:	4621      	mov	r1, r4
 8018710:	689b      	ldr	r3, [r3, #8]
 8018712:	4798      	blx	r3
 8018714:	4b0a      	ldr	r3, [pc, #40]	; (8018740 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8018716:	6818      	ldr	r0, [r3, #0]
 8018718:	b118      	cbz	r0, 8018722 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801871a:	6803      	ldr	r3, [r0, #0]
 801871c:	4621      	mov	r1, r4
 801871e:	689b      	ldr	r3, [r3, #8]
 8018720:	4798      	blx	r3
 8018722:	4b08      	ldr	r3, [pc, #32]	; (8018744 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8018724:	6818      	ldr	r0, [r3, #0]
 8018726:	6803      	ldr	r3, [r0, #0]
 8018728:	4621      	mov	r1, r4
 801872a:	69db      	ldr	r3, [r3, #28]
 801872c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018730:	4718      	bx	r3
 8018732:	bd10      	pop	{r4, pc}
 8018734:	2001384a 	.word	0x2001384a
 8018738:	20013848 	.word	0x20013848
 801873c:	20013898 	.word	0x20013898
 8018740:	20013894 	.word	0x20013894
 8018744:	20013854 	.word	0x20013854

08018748 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8018748:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801874a:	4606      	mov	r6, r0
 801874c:	4608      	mov	r0, r1
 801874e:	460f      	mov	r7, r1
 8018750:	f7fa f957 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018754:	b9e8      	cbnz	r0, 8018792 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8018756:	f9b7 5000 	ldrsh.w	r5, [r7]
 801875a:	f9b6 4000 	ldrsh.w	r4, [r6]
 801875e:	42a5      	cmp	r5, r4
 8018760:	db17      	blt.n	8018792 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8018762:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8018766:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801876a:	429a      	cmp	r2, r3
 801876c:	db11      	blt.n	8018792 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801876e:	88b9      	ldrh	r1, [r7, #4]
 8018770:	440d      	add	r5, r1
 8018772:	88b1      	ldrh	r1, [r6, #4]
 8018774:	440c      	add	r4, r1
 8018776:	b22d      	sxth	r5, r5
 8018778:	b224      	sxth	r4, r4
 801877a:	42a5      	cmp	r5, r4
 801877c:	dc09      	bgt.n	8018792 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801877e:	88f8      	ldrh	r0, [r7, #6]
 8018780:	4410      	add	r0, r2
 8018782:	88f2      	ldrh	r2, [r6, #6]
 8018784:	4413      	add	r3, r2
 8018786:	b200      	sxth	r0, r0
 8018788:	b21b      	sxth	r3, r3
 801878a:	4298      	cmp	r0, r3
 801878c:	bfcc      	ite	gt
 801878e:	2000      	movgt	r0, #0
 8018790:	2001      	movle	r0, #1
 8018792:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08018794 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8018794:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018796:	4604      	mov	r4, r0
 8018798:	4608      	mov	r0, r1
 801879a:	460d      	mov	r5, r1
 801879c:	f7fa f931 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80187a0:	b978      	cbnz	r0, 80187c2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80187a2:	4620      	mov	r0, r4
 80187a4:	f7fa f92d 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80187a8:	f9b5 6000 	ldrsh.w	r6, [r5]
 80187ac:	b150      	cbz	r0, 80187c4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80187ae:	8026      	strh	r6, [r4, #0]
 80187b0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80187b4:	8063      	strh	r3, [r4, #2]
 80187b6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80187ba:	80a3      	strh	r3, [r4, #4]
 80187bc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80187c0:	80e3      	strh	r3, [r4, #6]
 80187c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80187c4:	f9b4 1000 	ldrsh.w	r1, [r4]
 80187c8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80187cc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80187d0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80187d4:	88ed      	ldrh	r5, [r5, #6]
 80187d6:	42b1      	cmp	r1, r6
 80187d8:	460f      	mov	r7, r1
 80187da:	bfa8      	it	ge
 80187dc:	4637      	movge	r7, r6
 80187de:	4293      	cmp	r3, r2
 80187e0:	4618      	mov	r0, r3
 80187e2:	4466      	add	r6, ip
 80187e4:	bfa8      	it	ge
 80187e6:	4610      	movge	r0, r2
 80187e8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80187ec:	8027      	strh	r7, [r4, #0]
 80187ee:	442a      	add	r2, r5
 80187f0:	88e5      	ldrh	r5, [r4, #6]
 80187f2:	8060      	strh	r0, [r4, #2]
 80187f4:	4461      	add	r1, ip
 80187f6:	442b      	add	r3, r5
 80187f8:	b236      	sxth	r6, r6
 80187fa:	b209      	sxth	r1, r1
 80187fc:	b212      	sxth	r2, r2
 80187fe:	b21b      	sxth	r3, r3
 8018800:	428e      	cmp	r6, r1
 8018802:	bfac      	ite	ge
 8018804:	ebc7 0106 	rsbge	r1, r7, r6
 8018808:	ebc7 0101 	rsblt	r1, r7, r1
 801880c:	429a      	cmp	r2, r3
 801880e:	bfac      	ite	ge
 8018810:	ebc0 0202 	rsbge	r2, r0, r2
 8018814:	ebc0 0203 	rsblt	r2, r0, r3
 8018818:	80a1      	strh	r1, [r4, #4]
 801881a:	80e2      	strh	r2, [r4, #6]
 801881c:	e7d1      	b.n	80187c2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08018820 <_ZN8touchgfx11Application11getInstanceEv>:
 8018820:	4b01      	ldr	r3, [pc, #4]	; (8018828 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8018822:	6818      	ldr	r0, [r3, #0]
 8018824:	4770      	bx	lr
 8018826:	bf00      	nop
 8018828:	200138a8 	.word	0x200138a8

0801882c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 801882c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801882e:	4b10      	ldr	r3, [pc, #64]	; (8018870 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8018830:	781b      	ldrb	r3, [r3, #0]
 8018832:	4605      	mov	r5, r0
 8018834:	b1d3      	cbz	r3, 801886c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8018836:	4b0f      	ldr	r3, [pc, #60]	; (8018874 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8018838:	4f0f      	ldr	r7, [pc, #60]	; (8018878 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 801883a:	881c      	ldrh	r4, [r3, #0]
 801883c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8018840:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8018844:	42a3      	cmp	r3, r4
 8018846:	d90e      	bls.n	8018866 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8018848:	683b      	ldr	r3, [r7, #0]
 801884a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801884e:	b10a      	cbz	r2, 8018854 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8018850:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8018852:	b900      	cbnz	r0, 8018856 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8018854:	6898      	ldr	r0, [r3, #8]
 8018856:	6803      	ldr	r3, [r0, #0]
 8018858:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 801885c:	69db      	ldr	r3, [r3, #28]
 801885e:	3401      	adds	r4, #1
 8018860:	4798      	blx	r3
 8018862:	b2a4      	uxth	r4, r4
 8018864:	e7ec      	b.n	8018840 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8018866:	2300      	movs	r3, #0
 8018868:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 801886c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801886e:	bf00      	nop
 8018870:	20013852 	.word	0x20013852
 8018874:	2000008c 	.word	0x2000008c
 8018878:	20013854 	.word	0x20013854

0801887c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 801887c:	b510      	push	{r4, lr}
 801887e:	2300      	movs	r3, #0
 8018880:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8018884:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018888:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 801888c:	4604      	mov	r4, r0
 801888e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8018892:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8018896:	429a      	cmp	r2, r3
 8018898:	d90e      	bls.n	80188b8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801889a:	18e2      	adds	r2, r4, r3
 801889c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 80188a0:	b122      	cbz	r2, 80188ac <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80188a2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80188a6:	6803      	ldr	r3, [r0, #0]
 80188a8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80188aa:	4798      	blx	r3
 80188ac:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80188b0:	3301      	adds	r3, #1
 80188b2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80188b6:	e7ea      	b.n	801888e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80188b8:	bd10      	pop	{r4, pc}

080188ba <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 80188ba:	b530      	push	{r4, r5, lr}
 80188bc:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 80188c0:	2200      	movs	r2, #0
 80188c2:	b293      	uxth	r3, r2
 80188c4:	429d      	cmp	r5, r3
 80188c6:	d90e      	bls.n	80188e6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 80188c8:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 80188cc:	428b      	cmp	r3, r1
 80188ce:	d10b      	bne.n	80188e8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 80188d0:	1884      	adds	r4, r0, r2
 80188d2:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 80188d6:	b13b      	cbz	r3, 80188e8 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 80188d8:	3b01      	subs	r3, #1
 80188da:	b2db      	uxtb	r3, r3
 80188dc:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 80188e0:	b90b      	cbnz	r3, 80188e6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 80188e2:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 80188e6:	bd30      	pop	{r4, r5, pc}
 80188e8:	3201      	adds	r2, #1
 80188ea:	e7ea      	b.n	80188c2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

080188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80188ec:	2300      	movs	r3, #0
 80188ee:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80188f2:	f100 0284 	add.w	r2, r0, #132	; 0x84
 80188f6:	30a4      	adds	r0, #164	; 0xa4
 80188f8:	f802 3b01 	strb.w	r3, [r2], #1
 80188fc:	4282      	cmp	r2, r0
 80188fe:	d1fb      	bne.n	80188f8 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8018900:	4770      	bx	lr
	...

08018904 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8018904:	b570      	push	{r4, r5, r6, lr}
 8018906:	4c0b      	ldr	r4, [pc, #44]	; (8018934 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8018908:	4605      	mov	r5, r0
 801890a:	6820      	ldr	r0, [r4, #0]
 801890c:	460e      	mov	r6, r1
 801890e:	b110      	cbz	r0, 8018916 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8018910:	6803      	ldr	r3, [r0, #0]
 8018912:	695b      	ldr	r3, [r3, #20]
 8018914:	4798      	blx	r3
 8018916:	1d28      	adds	r0, r5, #4
 8018918:	f7ff ffe8 	bl	80188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801891c:	6026      	str	r6, [r4, #0]
 801891e:	6833      	ldr	r3, [r6, #0]
 8018920:	4630      	mov	r0, r6
 8018922:	68db      	ldr	r3, [r3, #12]
 8018924:	4798      	blx	r3
 8018926:	682b      	ldr	r3, [r5, #0]
 8018928:	4628      	mov	r0, r5
 801892a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801892c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018930:	4718      	bx	r3
 8018932:	bf00      	nop
 8018934:	20013898 	.word	0x20013898

08018938 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8018938:	2300      	movs	r3, #0
 801893a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 801893e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8018942:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018944:	461a      	mov	r2, r3
 8018946:	461c      	mov	r4, r3
 8018948:	461d      	mov	r5, r3
 801894a:	459c      	cmp	ip, r3
 801894c:	dd1a      	ble.n	8018984 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801894e:	18c6      	adds	r6, r0, r3
 8018950:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8018954:	b16e      	cbz	r6, 8018972 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8018956:	429a      	cmp	r2, r3
 8018958:	d008      	beq.n	801896c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801895a:	fa1f fe82 	uxth.w	lr, r2
 801895e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8018962:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8018966:	1887      	adds	r7, r0, r2
 8018968:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 801896c:	3201      	adds	r2, #1
 801896e:	3301      	adds	r3, #1
 8018970:	e7eb      	b.n	801894a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8018972:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8018976:	4299      	cmp	r1, r3
 8018978:	bfa8      	it	ge
 801897a:	3501      	addge	r5, #1
 801897c:	429e      	cmp	r6, r3
 801897e:	bfc8      	it	gt
 8018980:	3401      	addgt	r4, #1
 8018982:	e7f4      	b.n	801896e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8018984:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8018988:	1b49      	subs	r1, r1, r5
 801898a:	1b1b      	subs	r3, r3, r4
 801898c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8018990:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8018994:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018998:	4293      	cmp	r3, r2
 801899a:	dd03      	ble.n	80189a4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 801899c:	3b01      	subs	r3, #1
 801899e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80189a2:	e7f7      	b.n	8018994 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80189a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080189a8 <_ZN8touchgfx11Application15handleTickEventEv>:
 80189a8:	b570      	push	{r4, r5, r6, lr}
 80189aa:	4d16      	ldr	r5, [pc, #88]	; (8018a04 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 80189ac:	4604      	mov	r4, r0
 80189ae:	6828      	ldr	r0, [r5, #0]
 80189b0:	b140      	cbz	r0, 80189c4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80189b2:	7a03      	ldrb	r3, [r0, #8]
 80189b4:	b933      	cbnz	r3, 80189c4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80189b6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80189ba:	6803      	ldr	r3, [r0, #0]
 80189bc:	689b      	ldr	r3, [r3, #8]
 80189be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80189c2:	4718      	bx	r3
 80189c4:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 80189c8:	4e0f      	ldr	r6, [pc, #60]	; (8018a08 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80189ca:	b973      	cbnz	r3, 80189ea <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80189cc:	b168      	cbz	r0, 80189ea <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80189ce:	7a03      	ldrb	r3, [r0, #8]
 80189d0:	b15b      	cbz	r3, 80189ea <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80189d2:	6830      	ldr	r0, [r6, #0]
 80189d4:	b110      	cbz	r0, 80189dc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80189d6:	6803      	ldr	r3, [r0, #0]
 80189d8:	691b      	ldr	r3, [r3, #16]
 80189da:	4798      	blx	r3
 80189dc:	6828      	ldr	r0, [r5, #0]
 80189de:	6803      	ldr	r3, [r0, #0]
 80189e0:	68db      	ldr	r3, [r3, #12]
 80189e2:	4798      	blx	r3
 80189e4:	2301      	movs	r3, #1
 80189e6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80189ea:	3404      	adds	r4, #4
 80189ec:	4620      	mov	r0, r4
 80189ee:	f7ff ff45 	bl	801887c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80189f2:	4620      	mov	r0, r4
 80189f4:	f7ff ffa0 	bl	8018938 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80189f8:	6830      	ldr	r0, [r6, #0]
 80189fa:	b110      	cbz	r0, 8018a02 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80189fc:	6803      	ldr	r3, [r0, #0]
 80189fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8018a00:	e7dd      	b.n	80189be <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8018a02:	bd70      	pop	{r4, r5, r6, pc}
 8018a04:	2001389c 	.word	0x2001389c
 8018a08:	20013898 	.word	0x20013898

08018a0c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8018a0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018a0e:	2300      	movs	r3, #0
 8018a10:	4604      	mov	r4, r0
 8018a12:	460d      	mov	r5, r1
 8018a14:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8018a18:	4618      	mov	r0, r3
 8018a1a:	b29a      	uxth	r2, r3
 8018a1c:	4291      	cmp	r1, r2
 8018a1e:	d911      	bls.n	8018a44 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8018a20:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8018a24:	18e6      	adds	r6, r4, r3
 8018a26:	42af      	cmp	r7, r5
 8018a28:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8018a2c:	d105      	bne.n	8018a3a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8018a2e:	2aff      	cmp	r2, #255	; 0xff
 8018a30:	d002      	beq.n	8018a38 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018a32:	3201      	adds	r2, #1
 8018a34:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8018a38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018a3a:	2a00      	cmp	r2, #0
 8018a3c:	bf08      	it	eq
 8018a3e:	2001      	moveq	r0, #1
 8018a40:	3301      	adds	r3, #1
 8018a42:	e7ea      	b.n	8018a1a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8018a44:	b120      	cbz	r0, 8018a50 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018a46:	2920      	cmp	r1, #32
 8018a48:	d102      	bne.n	8018a50 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018a4a:	4620      	mov	r0, r4
 8018a4c:	f7ff ff74 	bl	8018938 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8018a50:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8018a54:	2b1f      	cmp	r3, #31
 8018a56:	d8ef      	bhi.n	8018a38 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018a58:	18e2      	adds	r2, r4, r3
 8018a5a:	2101      	movs	r1, #1
 8018a5c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8018a60:	185a      	adds	r2, r3, r1
 8018a62:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8018a66:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8018a6a:	e7e5      	b.n	8018a38 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08018a6c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8018a6c:	4603      	mov	r3, r0
 8018a6e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8018a72:	2200      	movs	r2, #0
 8018a74:	801a      	strh	r2, [r3, #0]
 8018a76:	805a      	strh	r2, [r3, #2]
 8018a78:	809a      	strh	r2, [r3, #4]
 8018a7a:	80da      	strh	r2, [r3, #6]
 8018a7c:	3308      	adds	r3, #8
 8018a7e:	428b      	cmp	r3, r1
 8018a80:	d1f8      	bne.n	8018a74 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8018a82:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8018a86:	4770      	bx	lr

08018a88 <_ZN8touchgfx11ApplicationC1Ev>:
 8018a88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018a8a:	4606      	mov	r6, r0
 8018a8c:	4b1c      	ldr	r3, [pc, #112]	; (8018b00 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8018a8e:	f846 3b04 	str.w	r3, [r6], #4
 8018a92:	4604      	mov	r4, r0
 8018a94:	2500      	movs	r5, #0
 8018a96:	22a8      	movs	r2, #168	; 0xa8
 8018a98:	2100      	movs	r1, #0
 8018a9a:	4630      	mov	r0, r6
 8018a9c:	f015 f895 	bl	802dbca <memset>
 8018aa0:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8018aa4:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8018aa8:	f7ff ffe0 	bl	8018a6c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018aac:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8018ab0:	f7ff ffdc 	bl	8018a6c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018ab4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8018ab8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8018abc:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8018ac0:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8018ac4:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8018ac8:	490e      	ldr	r1, [pc, #56]	; (8018b04 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8018aca:	480f      	ldr	r0, [pc, #60]	; (8018b08 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8018acc:	4f0f      	ldr	r7, [pc, #60]	; (8018b0c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8018ace:	f010 fe27 	bl	8029720 <CRC_Lock>
 8018ad2:	4b0f      	ldr	r3, [pc, #60]	; (8018b10 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8018ad4:	b158      	cbz	r0, 8018aee <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8018ad6:	801d      	strh	r5, [r3, #0]
 8018ad8:	4a0e      	ldr	r2, [pc, #56]	; (8018b14 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8018ada:	2300      	movs	r3, #0
 8018adc:	6013      	str	r3, [r2, #0]
 8018ade:	4a0e      	ldr	r2, [pc, #56]	; (8018b18 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8018ae0:	603b      	str	r3, [r7, #0]
 8018ae2:	4630      	mov	r0, r6
 8018ae4:	6013      	str	r3, [r2, #0]
 8018ae6:	f7ff ff01 	bl	80188ec <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8018aea:	4620      	mov	r0, r4
 8018aec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018aee:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8018af2:	2002      	movs	r0, #2
 8018af4:	801a      	strh	r2, [r3, #0]
 8018af6:	6038      	str	r0, [r7, #0]
 8018af8:	f001 fb4a 	bl	801a190 <_ZN8touchgfx6Screen4drawEv>
 8018afc:	e7ec      	b.n	8018ad8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8018afe:	bf00      	nop
 8018b00:	08031c0c 	.word	0x08031c0c
 8018b04:	b5e8b5cd 	.word	0xb5e8b5cd
 8018b08:	f407a5c2 	.word	0xf407a5c2
 8018b0c:	20013898 	.word	0x20013898
 8018b10:	2000008c 	.word	0x2000008c
 8018b14:	200138a8 	.word	0x200138a8
 8018b18:	2001389c 	.word	0x2001389c

08018b1c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8018b1c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8018b20:	3b01      	subs	r3, #1
 8018b22:	b29b      	uxth	r3, r3
 8018b24:	428b      	cmp	r3, r1
 8018b26:	b510      	push	{r4, lr}
 8018b28:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8018b2c:	d908      	bls.n	8018b40 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8018b2e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8018b32:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8018b36:	681a      	ldr	r2, [r3, #0]
 8018b38:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8018b3c:	685a      	ldr	r2, [r3, #4]
 8018b3e:	6062      	str	r2, [r4, #4]
 8018b40:	bd10      	pop	{r4, pc}
	...

08018b44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8018b44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b48:	4b8f      	ldr	r3, [pc, #572]	; (8018d88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8018b4a:	b08f      	sub	sp, #60	; 0x3c
 8018b4c:	ac0a      	add	r4, sp, #40	; 0x28
 8018b4e:	e884 0006 	stmia.w	r4, {r1, r2}
 8018b52:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018b56:	4b8d      	ldr	r3, [pc, #564]	; (8018d8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8018b58:	4683      	mov	fp, r0
 8018b5a:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018b5e:	4620      	mov	r0, r4
 8018b60:	f7ff fda1 	bl	80186a6 <_ZN8touchgfx4Rect10restrictToEss>
 8018b64:	4620      	mov	r0, r4
 8018b66:	f7f9 ff4c 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018b6a:	2800      	cmp	r0, #0
 8018b6c:	d16a      	bne.n	8018c44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018b6e:	9403      	str	r4, [sp, #12]
 8018b70:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8018b74:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8018b78:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8018b7c:	35a4      	adds	r5, #164	; 0xa4
 8018b7e:	9301      	str	r3, [sp, #4]
 8018b80:	b15c      	cbz	r4, 8018b9a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8018b82:	4629      	mov	r1, r5
 8018b84:	9803      	ldr	r0, [sp, #12]
 8018b86:	f7ff fddf 	bl	8018748 <_ZNK8touchgfx4Rect8includesERKS0_>
 8018b8a:	3c01      	subs	r4, #1
 8018b8c:	b118      	cbz	r0, 8018b96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8018b8e:	b2a1      	uxth	r1, r4
 8018b90:	9801      	ldr	r0, [sp, #4]
 8018b92:	f7ff ffc3 	bl	8018b1c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018b96:	3d08      	subs	r5, #8
 8018b98:	e7f2      	b.n	8018b80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8018b9a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8018b9e:	f8cd a010 	str.w	sl, [sp, #16]
 8018ba2:	f10a 33ff 	add.w	r3, sl, #4294967295
 8018ba6:	9302      	str	r3, [sp, #8]
 8018ba8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8018bac:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8018bb0:	9306      	str	r3, [sp, #24]
 8018bb2:	445c      	add	r4, fp
 8018bb4:	2500      	movs	r5, #0
 8018bb6:	4626      	mov	r6, r4
 8018bb8:	f8cd a014 	str.w	sl, [sp, #20]
 8018bbc:	462f      	mov	r7, r5
 8018bbe:	9b05      	ldr	r3, [sp, #20]
 8018bc0:	2b00      	cmp	r3, #0
 8018bc2:	d073      	beq.n	8018cac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8018bc4:	9903      	ldr	r1, [sp, #12]
 8018bc6:	4630      	mov	r0, r6
 8018bc8:	f7ff fd4b 	bl	8018662 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018bcc:	b350      	cbz	r0, 8018c24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8018bce:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8018bd2:	f9b6 c000 	ldrsh.w	ip, [r6]
 8018bd6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8018bda:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8018bde:	45e6      	cmp	lr, ip
 8018be0:	db33      	blt.n	8018c4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8018be2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018be6:	88b3      	ldrh	r3, [r6, #4]
 8018be8:	4472      	add	r2, lr
 8018bea:	4463      	add	r3, ip
 8018bec:	b212      	sxth	r2, r2
 8018bee:	b21b      	sxth	r3, r3
 8018bf0:	429a      	cmp	r2, r3
 8018bf2:	dc2a      	bgt.n	8018c4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8018bf4:	88f3      	ldrh	r3, [r6, #6]
 8018bf6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8018bfa:	fa1f f289 	uxth.w	r2, r9
 8018bfe:	4413      	add	r3, r2
 8018c00:	b29b      	uxth	r3, r3
 8018c02:	45c8      	cmp	r8, r9
 8018c04:	fa1f fc88 	uxth.w	ip, r8
 8018c08:	fa0f fe83 	sxth.w	lr, r3
 8018c0c:	db0f      	blt.n	8018c2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8018c0e:	eba3 030c 	sub.w	r3, r3, ip
 8018c12:	1ac9      	subs	r1, r1, r3
 8018c14:	b209      	sxth	r1, r1
 8018c16:	2900      	cmp	r1, #0
 8018c18:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8018c1c:	dd12      	ble.n	8018c44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018c1e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8018c22:	4605      	mov	r5, r0
 8018c24:	9b05      	ldr	r3, [sp, #20]
 8018c26:	3b01      	subs	r3, #1
 8018c28:	9305      	str	r3, [sp, #20]
 8018c2a:	3e08      	subs	r6, #8
 8018c2c:	e7c7      	b.n	8018bbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8018c2e:	4461      	add	r1, ip
 8018c30:	b209      	sxth	r1, r1
 8018c32:	4571      	cmp	r1, lr
 8018c34:	dc38      	bgt.n	8018ca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018c36:	eba2 020c 	sub.w	r2, r2, ip
 8018c3a:	b212      	sxth	r2, r2
 8018c3c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8018c40:	2a00      	cmp	r2, #0
 8018c42:	dcee      	bgt.n	8018c22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8018c44:	b00f      	add	sp, #60	; 0x3c
 8018c46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c4a:	45c8      	cmp	r8, r9
 8018c4c:	db2c      	blt.n	8018ca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018c4e:	88f3      	ldrh	r3, [r6, #6]
 8018c50:	4499      	add	r9, r3
 8018c52:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8018c56:	4498      	add	r8, r3
 8018c58:	fa0f f989 	sxth.w	r9, r9
 8018c5c:	fa0f f888 	sxth.w	r8, r8
 8018c60:	45c1      	cmp	r9, r8
 8018c62:	db21      	blt.n	8018ca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018c64:	88b3      	ldrh	r3, [r6, #4]
 8018c66:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8018c6a:	fa1f f28c 	uxth.w	r2, ip
 8018c6e:	4413      	add	r3, r2
 8018c70:	b29b      	uxth	r3, r3
 8018c72:	45e6      	cmp	lr, ip
 8018c74:	fa1f f88e 	uxth.w	r8, lr
 8018c78:	fa0f f983 	sxth.w	r9, r3
 8018c7c:	db0a      	blt.n	8018c94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8018c7e:	eba3 0308 	sub.w	r3, r3, r8
 8018c82:	1ac9      	subs	r1, r1, r3
 8018c84:	b209      	sxth	r1, r1
 8018c86:	2900      	cmp	r1, #0
 8018c88:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8018c8c:	ddda      	ble.n	8018c44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018c8e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8018c92:	e7c6      	b.n	8018c22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8018c94:	4441      	add	r1, r8
 8018c96:	b209      	sxth	r1, r1
 8018c98:	4549      	cmp	r1, r9
 8018c9a:	dc05      	bgt.n	8018ca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018c9c:	eba2 0208 	sub.w	r2, r2, r8
 8018ca0:	b212      	sxth	r2, r2
 8018ca2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8018ca6:	e7cb      	b.n	8018c40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8018ca8:	4607      	mov	r7, r0
 8018caa:	e7bb      	b.n	8018c24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8018cac:	2d00      	cmp	r5, #0
 8018cae:	d181      	bne.n	8018bb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8018cb0:	2f00      	cmp	r7, #0
 8018cb2:	f000 81dd 	beq.w	8019070 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018cb6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8018cba:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8018cbe:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8018cc2:	b2b3      	uxth	r3, r6
 8018cc4:	9305      	str	r3, [sp, #20]
 8018cc6:	9a05      	ldr	r2, [sp, #20]
 8018cc8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8018ccc:	4413      	add	r3, r2
 8018cce:	b2ba      	uxth	r2, r7
 8018cd0:	4492      	add	sl, r2
 8018cd2:	b29b      	uxth	r3, r3
 8018cd4:	fa1f fa8a 	uxth.w	sl, sl
 8018cd8:	fa0f f883 	sxth.w	r8, r3
 8018cdc:	fa0f f98a 	sxth.w	r9, sl
 8018ce0:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8018ce4:	9b04      	ldr	r3, [sp, #16]
 8018ce6:	2b00      	cmp	r3, #0
 8018ce8:	d052      	beq.n	8018d90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8018cea:	9903      	ldr	r1, [sp, #12]
 8018cec:	4620      	mov	r0, r4
 8018cee:	f7ff fcb8 	bl	8018662 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018cf2:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8018cf6:	b1c0      	cbz	r0, 8018d2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018cf8:	f9b4 e000 	ldrsh.w	lr, [r4]
 8018cfc:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8018d00:	4576      	cmp	r6, lr
 8018d02:	dc22      	bgt.n	8018d4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8018d04:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8018d08:	44f4      	add	ip, lr
 8018d0a:	fa0f fc8c 	sxth.w	ip, ip
 8018d0e:	45e0      	cmp	r8, ip
 8018d10:	db1b      	blt.n	8018d4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8018d12:	428f      	cmp	r7, r1
 8018d14:	fa1f fc81 	uxth.w	ip, r1
 8018d18:	88e1      	ldrh	r1, [r4, #6]
 8018d1a:	dc0d      	bgt.n	8018d38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8018d1c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8018d20:	eba1 010c 	sub.w	r1, r1, ip
 8018d24:	f8a4 9002 	strh.w	r9, [r4, #2]
 8018d28:	80e1      	strh	r1, [r4, #6]
 8018d2a:	4628      	mov	r0, r5
 8018d2c:	9904      	ldr	r1, [sp, #16]
 8018d2e:	3901      	subs	r1, #1
 8018d30:	9104      	str	r1, [sp, #16]
 8018d32:	3c08      	subs	r4, #8
 8018d34:	4605      	mov	r5, r0
 8018d36:	e7d3      	b.n	8018ce0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8018d38:	4461      	add	r1, ip
 8018d3a:	b209      	sxth	r1, r1
 8018d3c:	4549      	cmp	r1, r9
 8018d3e:	dcf5      	bgt.n	8018d2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018d40:	eba2 0c0c 	sub.w	ip, r2, ip
 8018d44:	f8a4 c006 	strh.w	ip, [r4, #6]
 8018d48:	e7ef      	b.n	8018d2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018d4a:	428f      	cmp	r7, r1
 8018d4c:	dcee      	bgt.n	8018d2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018d4e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8018d52:	4461      	add	r1, ip
 8018d54:	b209      	sxth	r1, r1
 8018d56:	4589      	cmp	r9, r1
 8018d58:	dbe8      	blt.n	8018d2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018d5a:	4576      	cmp	r6, lr
 8018d5c:	fa1f fc8e 	uxth.w	ip, lr
 8018d60:	88a1      	ldrh	r1, [r4, #4]
 8018d62:	dc07      	bgt.n	8018d74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8018d64:	eba3 0c0c 	sub.w	ip, r3, ip
 8018d68:	eba1 010c 	sub.w	r1, r1, ip
 8018d6c:	f8a4 8000 	strh.w	r8, [r4]
 8018d70:	80a1      	strh	r1, [r4, #4]
 8018d72:	e7da      	b.n	8018d2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018d74:	4461      	add	r1, ip
 8018d76:	b209      	sxth	r1, r1
 8018d78:	4588      	cmp	r8, r1
 8018d7a:	dbd7      	blt.n	8018d2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018d7c:	9905      	ldr	r1, [sp, #20]
 8018d7e:	eba1 0c0c 	sub.w	ip, r1, ip
 8018d82:	f8a4 c004 	strh.w	ip, [r4, #4]
 8018d86:	e7d0      	b.n	8018d2a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018d88:	2001384a 	.word	0x2001384a
 8018d8c:	20013848 	.word	0x20013848
 8018d90:	2d00      	cmp	r5, #0
 8018d92:	f000 816d 	beq.w	8019070 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018d96:	9b06      	ldr	r3, [sp, #24]
 8018d98:	445b      	add	r3, fp
 8018d9a:	461c      	mov	r4, r3
 8018d9c:	9b02      	ldr	r3, [sp, #8]
 8018d9e:	3301      	adds	r3, #1
 8018da0:	f000 8166 	beq.w	8019070 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018da4:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8018da8:	4629      	mov	r1, r5
 8018daa:	9803      	ldr	r0, [sp, #12]
 8018dac:	f7ff fccc 	bl	8018748 <_ZNK8touchgfx4Rect8includesERKS0_>
 8018db0:	b120      	cbz	r0, 8018dbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8018db2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018db6:	9801      	ldr	r0, [sp, #4]
 8018db8:	f7ff feb0 	bl	8018b1c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018dbc:	9903      	ldr	r1, [sp, #12]
 8018dbe:	4628      	mov	r0, r5
 8018dc0:	f7ff fc4f 	bl	8018662 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018dc4:	2800      	cmp	r0, #0
 8018dc6:	f000 809c 	beq.w	8018f02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8018dca:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8018dce:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8018dd2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8018dd6:	9309      	str	r3, [sp, #36]	; 0x24
 8018dd8:	fa1f f189 	uxth.w	r1, r9
 8018ddc:	eb01 0c03 	add.w	ip, r1, r3
 8018de0:	fa1f fa8c 	uxth.w	sl, ip
 8018de4:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8018de8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8018dec:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8018df0:	b283      	uxth	r3, r0
 8018df2:	eb03 050c 	add.w	r5, r3, ip
 8018df6:	b2ad      	uxth	r5, r5
 8018df8:	9505      	str	r5, [sp, #20]
 8018dfa:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8018dfe:	9504      	str	r5, [sp, #16]
 8018e00:	4548      	cmp	r0, r9
 8018e02:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8018e06:	f340 8099 	ble.w	8018f3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8018e0a:	1a5b      	subs	r3, r3, r1
 8018e0c:	b29b      	uxth	r3, r3
 8018e0e:	4596      	cmp	lr, r2
 8018e10:	fa0f f08a 	sxth.w	r0, sl
 8018e14:	b21e      	sxth	r6, r3
 8018e16:	dd2e      	ble.n	8018e76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8018e18:	9f02      	ldr	r7, [sp, #8]
 8018e1a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8018e1e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8018e22:	9f04      	ldr	r7, [sp, #16]
 8018e24:	1a3f      	subs	r7, r7, r0
 8018e26:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8018e2a:	fa1f fe8e 	uxth.w	lr, lr
 8018e2e:	b292      	uxth	r2, r2
 8018e30:	ebae 0102 	sub.w	r1, lr, r2
 8018e34:	44a6      	add	lr, r4
 8018e36:	4402      	add	r2, r0
 8018e38:	b289      	uxth	r1, r1
 8018e3a:	fa0f fe8e 	sxth.w	lr, lr
 8018e3e:	b212      	sxth	r2, r2
 8018e40:	b20d      	sxth	r5, r1
 8018e42:	ebae 0202 	sub.w	r2, lr, r2
 8018e46:	436f      	muls	r7, r5
 8018e48:	4372      	muls	r2, r6
 8018e4a:	4297      	cmp	r7, r2
 8018e4c:	db09      	blt.n	8018e62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8018e4e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8018e52:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8018e56:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8018e5a:	449c      	add	ip, r3
 8018e5c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8018e60:	e686      	b.n	8018b70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018e62:	4421      	add	r1, r4
 8018e64:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8018e68:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8018e6c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8018e70:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8018e74:	e67c      	b.n	8018b70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018e76:	9f04      	ldr	r7, [sp, #16]
 8018e78:	42b8      	cmp	r0, r7
 8018e7a:	da27      	bge.n	8018ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8018e7c:	9902      	ldr	r1, [sp, #8]
 8018e7e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8018e82:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8018e86:	eb05 010e 	add.w	r1, r5, lr
 8018e8a:	fa1f f881 	uxth.w	r8, r1
 8018e8e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8018e92:	4411      	add	r1, r2
 8018e94:	eba1 0108 	sub.w	r1, r1, r8
 8018e98:	b289      	uxth	r1, r1
 8018e9a:	fa0f f988 	sxth.w	r9, r8
 8018e9e:	eba2 020e 	sub.w	r2, r2, lr
 8018ea2:	fa0f f881 	sxth.w	r8, r1
 8018ea6:	1a3f      	subs	r7, r7, r0
 8018ea8:	4372      	muls	r2, r6
 8018eaa:	fb08 f707 	mul.w	r7, r8, r7
 8018eae:	42ba      	cmp	r2, r7
 8018eb0:	dc06      	bgt.n	8018ec0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8018eb2:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8018eb6:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8018eba:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8018ebe:	e7ca      	b.n	8018e56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8018ec0:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8018ec4:	4429      	add	r1, r5
 8018ec6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8018eca:	e651      	b.n	8018b70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018ecc:	9805      	ldr	r0, [sp, #20]
 8018ece:	ebaa 0000 	sub.w	r0, sl, r0
 8018ed2:	b280      	uxth	r0, r0
 8018ed4:	2d06      	cmp	r5, #6
 8018ed6:	fa0f fe80 	sxth.w	lr, r0
 8018eda:	d817      	bhi.n	8018f0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8018edc:	9b04      	ldr	r3, [sp, #16]
 8018ede:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8018ee2:	1c6b      	adds	r3, r5, #1
 8018ee4:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8018ee8:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8018eec:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8018ef0:	9b01      	ldr	r3, [sp, #4]
 8018ef2:	9801      	ldr	r0, [sp, #4]
 8018ef4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8018ef8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8018efc:	805a      	strh	r2, [r3, #2]
 8018efe:	809e      	strh	r6, [r3, #4]
 8018f00:	80d9      	strh	r1, [r3, #6]
 8018f02:	9b02      	ldr	r3, [sp, #8]
 8018f04:	3b01      	subs	r3, #1
 8018f06:	9302      	str	r3, [sp, #8]
 8018f08:	3c08      	subs	r4, #8
 8018f0a:	e747      	b.n	8018d9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8018f0c:	9a02      	ldr	r2, [sp, #8]
 8018f0e:	45b6      	cmp	lr, r6
 8018f10:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8018f14:	db0d      	blt.n	8018f32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8018f16:	449c      	add	ip, r3
 8018f18:	fa1f fc8c 	uxth.w	ip, ip
 8018f1c:	445a      	add	r2, fp
 8018f1e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8018f22:	448c      	add	ip, r1
 8018f24:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8018f28:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8018f2c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8018f30:	e61e      	b.n	8018b70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018f32:	445a      	add	r2, fp
 8018f34:	4484      	add	ip, r0
 8018f36:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8018f3a:	e78f      	b.n	8018e5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8018f3c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8018f40:	fa1f f18e 	uxth.w	r1, lr
 8018f44:	eb01 0806 	add.w	r8, r1, r6
 8018f48:	b293      	uxth	r3, r2
 8018f4a:	fa1f f888 	uxth.w	r8, r8
 8018f4e:	9306      	str	r3, [sp, #24]
 8018f50:	fa0f f388 	sxth.w	r3, r8
 8018f54:	9307      	str	r3, [sp, #28]
 8018f56:	9f06      	ldr	r7, [sp, #24]
 8018f58:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8018f5c:	443b      	add	r3, r7
 8018f5e:	b29b      	uxth	r3, r3
 8018f60:	4596      	cmp	lr, r2
 8018f62:	9308      	str	r3, [sp, #32]
 8018f64:	da24      	bge.n	8018fb0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8018f66:	9905      	ldr	r1, [sp, #20]
 8018f68:	eba3 0308 	sub.w	r3, r3, r8
 8018f6c:	ebaa 0401 	sub.w	r4, sl, r1
 8018f70:	b2a4      	uxth	r4, r4
 8018f72:	b29b      	uxth	r3, r3
 8018f74:	b225      	sxth	r5, r4
 8018f76:	b219      	sxth	r1, r3
 8018f78:	eba2 020e 	sub.w	r2, r2, lr
 8018f7c:	eba9 0000 	sub.w	r0, r9, r0
 8018f80:	436a      	muls	r2, r5
 8018f82:	4348      	muls	r0, r1
 8018f84:	4282      	cmp	r2, r0
 8018f86:	9a02      	ldr	r2, [sp, #8]
 8018f88:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8018f8c:	445a      	add	r2, fp
 8018f8e:	dc06      	bgt.n	8018f9e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8018f90:	9b07      	ldr	r3, [sp, #28]
 8018f92:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8018f96:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8018f9a:	44a4      	add	ip, r4
 8018f9c:	e75e      	b.n	8018e5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8018f9e:	9904      	ldr	r1, [sp, #16]
 8018fa0:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8018fa4:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8018fa8:	4433      	add	r3, r6
 8018faa:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8018fae:	e5df      	b.n	8018b70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018fb0:	9f06      	ldr	r7, [sp, #24]
 8018fb2:	9b04      	ldr	r3, [sp, #16]
 8018fb4:	1bc9      	subs	r1, r1, r7
 8018fb6:	fa0f f78a 	sxth.w	r7, sl
 8018fba:	b289      	uxth	r1, r1
 8018fbc:	429f      	cmp	r7, r3
 8018fbe:	fa0f fe81 	sxth.w	lr, r1
 8018fc2:	dd23      	ble.n	801900c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8018fc4:	9a05      	ldr	r2, [sp, #20]
 8018fc6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8018fca:	9d07      	ldr	r5, [sp, #28]
 8018fcc:	ebaa 0202 	sub.w	r2, sl, r2
 8018fd0:	b292      	uxth	r2, r2
 8018fd2:	eba5 0a03 	sub.w	sl, r5, r3
 8018fd6:	b214      	sxth	r4, r2
 8018fd8:	eba9 0000 	sub.w	r0, r9, r0
 8018fdc:	9b02      	ldr	r3, [sp, #8]
 8018fde:	fb0e f000 	mul.w	r0, lr, r0
 8018fe2:	fb04 fa0a 	mul.w	sl, r4, sl
 8018fe6:	00db      	lsls	r3, r3, #3
 8018fe8:	4550      	cmp	r0, sl
 8018fea:	445b      	add	r3, fp
 8018fec:	db03      	blt.n	8018ff6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8018fee:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8018ff2:	4494      	add	ip, r2
 8018ff4:	e732      	b.n	8018e5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8018ff6:	9a04      	ldr	r2, [sp, #16]
 8018ff8:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8018ffc:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8019000:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8019004:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8019008:	4431      	add	r1, r6
 801900a:	e75c      	b.n	8018ec6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801900c:	9b08      	ldr	r3, [sp, #32]
 801900e:	eba3 0308 	sub.w	r3, r3, r8
 8019012:	b29b      	uxth	r3, r3
 8019014:	2d06      	cmp	r5, #6
 8019016:	b218      	sxth	r0, r3
 8019018:	d813      	bhi.n	8019042 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801901a:	9b07      	ldr	r3, [sp, #28]
 801901c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8019020:	1c6b      	adds	r3, r5, #1
 8019022:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8019026:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801902a:	9b01      	ldr	r3, [sp, #4]
 801902c:	9901      	ldr	r1, [sp, #4]
 801902e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8019032:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8019036:	805a      	strh	r2, [r3, #2]
 8019038:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801903a:	809a      	strh	r2, [r3, #4]
 801903c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8019040:	e75f      	b.n	8018f02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8019042:	9c02      	ldr	r4, [sp, #8]
 8019044:	4570      	cmp	r0, lr
 8019046:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801904a:	db0d      	blt.n	8019068 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 801904c:	4431      	add	r1, r6
 801904e:	9b06      	ldr	r3, [sp, #24]
 8019050:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8019054:	b289      	uxth	r1, r1
 8019056:	445c      	add	r4, fp
 8019058:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801905c:	4419      	add	r1, r3
 801905e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8019062:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8019066:	e583      	b.n	8018b70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019068:	445c      	add	r4, fp
 801906a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801906e:	e79b      	b.n	8018fa8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8019070:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8019074:	1e65      	subs	r5, r4, #1
 8019076:	b2ad      	uxth	r5, r5
 8019078:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801907c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8019080:	42b5      	cmp	r5, r6
 8019082:	d044      	beq.n	801910e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8019084:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8019088:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801908c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8019090:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8019094:	4282      	cmp	r2, r0
 8019096:	d11f      	bne.n	80190d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8019098:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801909c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80190a0:	459c      	cmp	ip, r3
 80190a2:	d119      	bne.n	80190d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80190a4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 80190a8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80190ac:	19d8      	adds	r0, r3, r7
 80190ae:	b200      	sxth	r0, r0
 80190b0:	4288      	cmp	r0, r1
 80190b2:	d109      	bne.n	80190c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80190b4:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80190b8:	4413      	add	r3, r2
 80190ba:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80190be:	4629      	mov	r1, r5
 80190c0:	9801      	ldr	r0, [sp, #4]
 80190c2:	f7ff fd2b 	bl	8018b1c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80190c6:	e003      	b.n	80190d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80190c8:	4411      	add	r1, r2
 80190ca:	b209      	sxth	r1, r1
 80190cc:	42b9      	cmp	r1, r7
 80190ce:	d0f3      	beq.n	80190b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80190d0:	3d01      	subs	r5, #1
 80190d2:	b2ad      	uxth	r5, r5
 80190d4:	3c08      	subs	r4, #8
 80190d6:	e7d3      	b.n	8019080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80190d8:	42b9      	cmp	r1, r7
 80190da:	d1f9      	bne.n	80190d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80190dc:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 80190e0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80190e4:	4299      	cmp	r1, r3
 80190e6:	d1f3      	bne.n	80190d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80190e8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80190ec:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80190f0:	181f      	adds	r7, r3, r0
 80190f2:	b23f      	sxth	r7, r7
 80190f4:	42ba      	cmp	r2, r7
 80190f6:	d105      	bne.n	8019104 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 80190f8:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 80190fc:	440b      	add	r3, r1
 80190fe:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8019102:	e7dc      	b.n	80190be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8019104:	440a      	add	r2, r1
 8019106:	b212      	sxth	r2, r2
 8019108:	4290      	cmp	r0, r2
 801910a:	d1e1      	bne.n	80190d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801910c:	e7f6      	b.n	80190fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801910e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8019112:	2e07      	cmp	r6, #7
 8019114:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8019118:	d812      	bhi.n	8019140 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801911a:	1c75      	adds	r5, r6, #1
 801911c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8019120:	9d01      	ldr	r5, [sp, #4]
 8019122:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8019126:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801912a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801912e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8019132:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8019136:	442c      	add	r4, r5
 8019138:	8061      	strh	r1, [r4, #2]
 801913a:	80a2      	strh	r2, [r4, #4]
 801913c:	80e3      	strh	r3, [r4, #6]
 801913e:	e581      	b.n	8018c44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8019140:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8019144:	3e01      	subs	r6, #1
 8019146:	445c      	add	r4, fp
 8019148:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 801914c:	f04f 37ff 	mov.w	r7, #4294967295
 8019150:	2500      	movs	r5, #0
 8019152:	9305      	str	r3, [sp, #20]
 8019154:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8019158:	9302      	str	r3, [sp, #8]
 801915a:	1e72      	subs	r2, r6, #1
 801915c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8019160:	9304      	str	r3, [sp, #16]
 8019162:	4691      	mov	r9, r2
 8019164:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8019168:	f1b9 3fff 	cmp.w	r9, #4294967295
 801916c:	bf14      	ite	ne
 801916e:	9905      	ldrne	r1, [sp, #20]
 8019170:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8019174:	6818      	ldr	r0, [r3, #0]
 8019176:	9207      	str	r2, [sp, #28]
 8019178:	bf18      	it	ne
 801917a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801917e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8019182:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8019186:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801918a:	9306      	str	r3, [sp, #24]
 801918c:	fb18 f801 	smulbb	r8, r8, r1
 8019190:	6859      	ldr	r1, [r3, #4]
 8019192:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8019196:	4671      	mov	r1, lr
 8019198:	a80c      	add	r0, sp, #48	; 0x30
 801919a:	f7ff fafb 	bl	8018794 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801919e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80191a2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80191a6:	9b04      	ldr	r3, [sp, #16]
 80191a8:	9a02      	ldr	r2, [sp, #8]
 80191aa:	fb10 f001 	smulbb	r0, r0, r1
 80191ae:	fb02 8803 	mla	r8, r2, r3, r8
 80191b2:	eba0 0108 	sub.w	r1, r0, r8
 80191b6:	f04f 0c08 	mov.w	ip, #8
 80191ba:	fb90 f0fc 	sdiv	r0, r0, ip
 80191be:	4288      	cmp	r0, r1
 80191c0:	dc20      	bgt.n	8019204 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80191c2:	4551      	cmp	r1, sl
 80191c4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80191c8:	da03      	bge.n	80191d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80191ca:	b1d9      	cbz	r1, 8019204 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80191cc:	468a      	mov	sl, r1
 80191ce:	464f      	mov	r7, r9
 80191d0:	4635      	mov	r5, r6
 80191d2:	f109 39ff 	add.w	r9, r9, #4294967295
 80191d6:	f119 0f02 	cmn.w	r9, #2
 80191da:	d1c5      	bne.n	8019168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80191dc:	4616      	mov	r6, r2
 80191de:	3201      	adds	r2, #1
 80191e0:	f1a4 0408 	sub.w	r4, r4, #8
 80191e4:	d1b6      	bne.n	8019154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80191e6:	9b01      	ldr	r3, [sp, #4]
 80191e8:	b2ac      	uxth	r4, r5
 80191ea:	00ed      	lsls	r5, r5, #3
 80191ec:	1958      	adds	r0, r3, r5
 80191ee:	1c7b      	adds	r3, r7, #1
 80191f0:	d10b      	bne.n	801920a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 80191f2:	4601      	mov	r1, r0
 80191f4:	9803      	ldr	r0, [sp, #12]
 80191f6:	f7ff facd 	bl	8018794 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80191fa:	4621      	mov	r1, r4
 80191fc:	9801      	ldr	r0, [sp, #4]
 80191fe:	f7ff fc8d 	bl	8018b1c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019202:	e4b5      	b.n	8018b70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019204:	464f      	mov	r7, r9
 8019206:	4635      	mov	r5, r6
 8019208:	e7ed      	b.n	80191e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801920a:	9b01      	ldr	r3, [sp, #4]
 801920c:	00ff      	lsls	r7, r7, #3
 801920e:	19d9      	adds	r1, r3, r7
 8019210:	f7ff fac0 	bl	8018794 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019214:	9b03      	ldr	r3, [sp, #12]
 8019216:	cb03      	ldmia	r3!, {r0, r1}
 8019218:	445f      	add	r7, fp
 801921a:	445d      	add	r5, fp
 801921c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8019220:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8019224:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8019228:	9b03      	ldr	r3, [sp, #12]
 801922a:	6869      	ldr	r1, [r5, #4]
 801922c:	c303      	stmia	r3!, {r0, r1}
 801922e:	e7e4      	b.n	80191fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08019230 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8019230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019234:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8019238:	b09b      	sub	sp, #108	; 0x6c
 801923a:	4604      	mov	r4, r0
 801923c:	4630      	mov	r0, r6
 801923e:	f7f9 fbe0 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019242:	4605      	mov	r5, r0
 8019244:	b948      	cbnz	r0, 801925a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8019246:	6823      	ldr	r3, [r4, #0]
 8019248:	e896 0006 	ldmia.w	r6, {r1, r2}
 801924c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801924e:	4620      	mov	r0, r4
 8019250:	4798      	blx	r3
 8019252:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8019256:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801925a:	4bc6      	ldr	r3, [pc, #792]	; (8019574 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801925c:	681b      	ldr	r3, [r3, #0]
 801925e:	2b00      	cmp	r3, #0
 8019260:	d03f      	beq.n	80192e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8019262:	4dc5      	ldr	r5, [pc, #788]	; (8019578 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8019264:	4628      	mov	r0, r5
 8019266:	f7f9 fbcc 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801926a:	4606      	mov	r6, r0
 801926c:	2800      	cmp	r0, #0
 801926e:	d138      	bne.n	80192e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8019270:	4628      	mov	r0, r5
 8019272:	f7ff f907 	bl	8018484 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8019276:	6823      	ldr	r3, [r4, #0]
 8019278:	6829      	ldr	r1, [r5, #0]
 801927a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801927c:	686a      	ldr	r2, [r5, #4]
 801927e:	4620      	mov	r0, r4
 8019280:	4798      	blx	r3
 8019282:	802e      	strh	r6, [r5, #0]
 8019284:	806e      	strh	r6, [r5, #2]
 8019286:	80ae      	strh	r6, [r5, #4]
 8019288:	80ee      	strh	r6, [r5, #6]
 801928a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801928e:	4dbb      	ldr	r5, [pc, #748]	; (801957c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8019290:	4640      	mov	r0, r8
 8019292:	f7ff fbeb 	bl	8018a6c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8019296:	882e      	ldrh	r6, [r5, #0]
 8019298:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801929c:	4633      	mov	r3, r6
 801929e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80192a2:	42bb      	cmp	r3, r7
 80192a4:	d224      	bcs.n	80192f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80192a6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80192aa:	2907      	cmp	r1, #7
 80192ac:	d816      	bhi.n	80192dc <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80192ae:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80192b2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80192b6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80192ba:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80192be:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80192c2:	1c4a      	adds	r2, r1, #1
 80192c4:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80192c8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80192cc:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80192d0:	f8a2 a002 	strh.w	sl, [r2, #2]
 80192d4:	f8a2 e004 	strh.w	lr, [r2, #4]
 80192d8:	f8a2 c006 	strh.w	ip, [r2, #6]
 80192dc:	3301      	adds	r3, #1
 80192de:	b29b      	uxth	r3, r3
 80192e0:	e7df      	b.n	80192a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80192e2:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80192e6:	2b00      	cmp	r3, #0
 80192e8:	d1cf      	bne.n	801928a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80192ea:	b01b      	add	sp, #108	; 0x6c
 80192ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80192f0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80192f4:	42b3      	cmp	r3, r6
 80192f6:	d90c      	bls.n	8019312 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80192f8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80192fc:	6822      	ldr	r2, [r4, #0]
 80192fe:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8019302:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8019304:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8019308:	4620      	mov	r0, r4
 801930a:	3601      	adds	r6, #1
 801930c:	47b8      	blx	r7
 801930e:	b2b6      	uxth	r6, r6
 8019310:	e7ee      	b.n	80192f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8019312:	4a9b      	ldr	r2, [pc, #620]	; (8019580 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8019314:	6813      	ldr	r3, [r2, #0]
 8019316:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801931a:	2b01      	cmp	r3, #1
 801931c:	4691      	mov	r9, r2
 801931e:	f040 80e2 	bne.w	80194e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8019322:	8829      	ldrh	r1, [r5, #0]
 8019324:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8019328:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801932c:	33ae      	adds	r3, #174	; 0xae
 801932e:	2600      	movs	r6, #0
 8019330:	428f      	cmp	r7, r1
 8019332:	f103 0308 	add.w	r3, r3, #8
 8019336:	dd0a      	ble.n	801934e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8019338:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801933c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8019340:	4402      	add	r2, r0
 8019342:	b212      	sxth	r2, r2
 8019344:	4296      	cmp	r6, r2
 8019346:	bfb8      	it	lt
 8019348:	4616      	movlt	r6, r2
 801934a:	3101      	adds	r1, #1
 801934c:	e7f0      	b.n	8019330 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801934e:	4b8d      	ldr	r3, [pc, #564]	; (8019584 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8019350:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8019580 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8019354:	881b      	ldrh	r3, [r3, #0]
 8019356:	2b0f      	cmp	r3, #15
 8019358:	bf88      	it	hi
 801935a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801935e:	f04f 0300 	mov.w	r3, #0
 8019362:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8019366:	bf98      	it	ls
 8019368:	f04f 0b01 	movls.w	fp, #1
 801936c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8019370:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8019374:	4b82      	ldr	r3, [pc, #520]	; (8019580 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8019376:	4438      	add	r0, r7
 8019378:	b207      	sxth	r7, r0
 801937a:	6818      	ldr	r0, [r3, #0]
 801937c:	42b7      	cmp	r7, r6
 801937e:	6803      	ldr	r3, [r0, #0]
 8019380:	f280 8083 	bge.w	801948a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8019384:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8019388:	4798      	blx	r3
 801938a:	eb07 030b 	add.w	r3, r7, fp
 801938e:	4298      	cmp	r0, r3
 8019390:	da07      	bge.n	80193a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8019392:	42b0      	cmp	r0, r6
 8019394:	da05      	bge.n	80193a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8019396:	4287      	cmp	r7, r0
 8019398:	dd6c      	ble.n	8019474 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801939a:	2f00      	cmp	r7, #0
 801939c:	dd6a      	ble.n	8019474 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801939e:	4630      	mov	r0, r6
 80193a0:	e004      	b.n	80193ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 80193a2:	4287      	cmp	r7, r0
 80193a4:	dcfb      	bgt.n	801939e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80193a6:	42b0      	cmp	r0, r6
 80193a8:	bfa8      	it	ge
 80193aa:	4630      	movge	r0, r6
 80193ac:	4b76      	ldr	r3, [pc, #472]	; (8019588 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80193ae:	f8ad 7016 	strh.w	r7, [sp, #22]
 80193b2:	1bc0      	subs	r0, r0, r7
 80193b4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80193b8:	882f      	ldrh	r7, [r5, #0]
 80193ba:	f8ad 3018 	strh.w	r3, [sp, #24]
 80193be:	2200      	movs	r2, #0
 80193c0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80193c4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80193c8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80193cc:	42bb      	cmp	r3, r7
 80193ce:	d9cd      	bls.n	801936c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80193d0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80193d4:	ab07      	add	r3, sp, #28
 80193d6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80193da:	6851      	ldr	r1, [r2, #4]
 80193dc:	c303      	stmia	r3!, {r0, r1}
 80193de:	a905      	add	r1, sp, #20
 80193e0:	a807      	add	r0, sp, #28
 80193e2:	f7ff f93e 	bl	8018662 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80193e6:	2800      	cmp	r0, #0
 80193e8:	d04c      	beq.n	8019484 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80193ea:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80193ee:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80193f2:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80193f6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80193fa:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80193fe:	9302      	str	r3, [sp, #8]
 8019400:	4686      	mov	lr, r0
 8019402:	4290      	cmp	r0, r2
 8019404:	4450      	add	r0, sl
 8019406:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801940a:	bfb8      	it	lt
 801940c:	4696      	movlt	lr, r2
 801940e:	4452      	add	r2, sl
 8019410:	4299      	cmp	r1, r3
 8019412:	b280      	uxth	r0, r0
 8019414:	b292      	uxth	r2, r2
 8019416:	468c      	mov	ip, r1
 8019418:	fa0f fa82 	sxth.w	sl, r2
 801941c:	bfb8      	it	lt
 801941e:	469c      	movlt	ip, r3
 8019420:	b203      	sxth	r3, r0
 8019422:	4553      	cmp	r3, sl
 8019424:	bfb8      	it	lt
 8019426:	4602      	movlt	r2, r0
 8019428:	eba2 020e 	sub.w	r2, r2, lr
 801942c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8019430:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8019434:	9b02      	ldr	r3, [sp, #8]
 8019436:	f8ad e01c 	strh.w	lr, [sp, #28]
 801943a:	4411      	add	r1, r2
 801943c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8019440:	f8ad c01e 	strh.w	ip, [sp, #30]
 8019444:	4413      	add	r3, r2
 8019446:	b289      	uxth	r1, r1
 8019448:	b29b      	uxth	r3, r3
 801944a:	b208      	sxth	r0, r1
 801944c:	b21a      	sxth	r2, r3
 801944e:	4290      	cmp	r0, r2
 8019450:	bfb8      	it	lt
 8019452:	460b      	movlt	r3, r1
 8019454:	eba3 030c 	sub.w	r3, r3, ip
 8019458:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801945c:	a807      	add	r0, sp, #28
 801945e:	f7f9 fad0 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019462:	b920      	cbnz	r0, 801946e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8019464:	6823      	ldr	r3, [r4, #0]
 8019466:	a907      	add	r1, sp, #28
 8019468:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801946a:	4620      	mov	r0, r4
 801946c:	4798      	blx	r3
 801946e:	3701      	adds	r7, #1
 8019470:	b2bf      	uxth	r7, r7
 8019472:	e7a9      	b.n	80193c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8019474:	f8d9 0000 	ldr.w	r0, [r9]
 8019478:	6803      	ldr	r3, [r0, #0]
 801947a:	2101      	movs	r1, #1
 801947c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8019480:	4798      	blx	r3
 8019482:	e773      	b.n	801936c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8019484:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8019488:	e7e8      	b.n	801945c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801948a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801948c:	4798      	blx	r3
 801948e:	4b3f      	ldr	r3, [pc, #252]	; (801958c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8019490:	781b      	ldrb	r3, [r3, #0]
 8019492:	2b00      	cmp	r3, #0
 8019494:	f43f af29 	beq.w	80192ea <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8019498:	2300      	movs	r3, #0
 801949a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801949e:	882b      	ldrh	r3, [r5, #0]
 80194a0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80194a4:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80194a8:	42ab      	cmp	r3, r5
 80194aa:	f4bf af1e 	bcs.w	80192ea <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80194ae:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 80194b2:	2907      	cmp	r1, #7
 80194b4:	d814      	bhi.n	80194e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 80194b6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80194ba:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80194be:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80194c2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80194c6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80194ca:	1c4a      	adds	r2, r1, #1
 80194cc:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80194d0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80194d4:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80194d8:	f8a2 c002 	strh.w	ip, [r2, #2]
 80194dc:	8097      	strh	r7, [r2, #4]
 80194de:	80d6      	strh	r6, [r2, #6]
 80194e0:	3301      	adds	r3, #1
 80194e2:	b29b      	uxth	r3, r3
 80194e4:	e7e0      	b.n	80194a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 80194e6:	2b02      	cmp	r3, #2
 80194e8:	f040 8133 	bne.w	8019752 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 80194ec:	4b28      	ldr	r3, [pc, #160]	; (8019590 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80194ee:	781b      	ldrb	r3, [r3, #0]
 80194f0:	2b01      	cmp	r3, #1
 80194f2:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 80194f6:	f000 8098 	beq.w	801962a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80194fa:	882a      	ldrh	r2, [r5, #0]
 80194fc:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8019500:	3201      	adds	r2, #1
 8019502:	b292      	uxth	r2, r2
 8019504:	2900      	cmp	r1, #0
 8019506:	d0c2      	beq.n	801948e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8019508:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801950c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8019510:	441e      	add	r6, r3
 8019512:	b236      	sxth	r6, r6
 8019514:	4694      	mov	ip, r2
 8019516:	f04f 0900 	mov.w	r9, #0
 801951a:	fa1f f38c 	uxth.w	r3, ip
 801951e:	4299      	cmp	r1, r3
 8019520:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8019524:	f240 80bf 	bls.w	80196a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8019528:	4427      	add	r7, r4
 801952a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801952e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8019532:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8019536:	4283      	cmp	r3, r0
 8019538:	f340 80a1 	ble.w	801967e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 801953c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8019540:	4406      	add	r6, r0
 8019542:	b236      	sxth	r6, r6
 8019544:	429e      	cmp	r6, r3
 8019546:	bfa8      	it	ge
 8019548:	461e      	movge	r6, r3
 801954a:	46e1      	mov	r9, ip
 801954c:	f10c 0c01 	add.w	ip, ip, #1
 8019550:	e7e3      	b.n	801951a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8019552:	d10a      	bne.n	801956a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8019554:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8019558:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 801955c:	4562      	cmp	r2, ip
 801955e:	bfb8      	it	lt
 8019560:	4662      	movlt	r2, ip
 8019562:	4288      	cmp	r0, r1
 8019564:	bfb8      	it	lt
 8019566:	461f      	movlt	r7, r3
 8019568:	e087      	b.n	801967a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801956a:	428a      	cmp	r2, r1
 801956c:	bfb8      	it	lt
 801956e:	460a      	movlt	r2, r1
 8019570:	e083      	b.n	801967a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8019572:	bf00      	nop
 8019574:	20013894 	.word	0x20013894
 8019578:	200138a0 	.word	0x200138a0
 801957c:	2000008c 	.word	0x2000008c
 8019580:	20013854 	.word	0x20013854
 8019584:	2001384a 	.word	0x2001384a
 8019588:	20013848 	.word	0x20013848
 801958c:	20013852 	.word	0x20013852
 8019590:	2001384c 	.word	0x2001384c
 8019594:	19a1      	adds	r1, r4, r6
 8019596:	ab07      	add	r3, sp, #28
 8019598:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801959c:	6849      	ldr	r1, [r1, #4]
 801959e:	c303      	stmia	r3!, {r0, r1}
 80195a0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80195a4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80195a8:	2b13      	cmp	r3, #19
 80195aa:	bfd8      	it	le
 80195ac:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80195b0:	f8ad 201c 	strh.w	r2, [sp, #28]
 80195b4:	440b      	add	r3, r1
 80195b6:	1a9b      	subs	r3, r3, r2
 80195b8:	a807      	add	r0, sp, #28
 80195ba:	f8ad 3020 	strh.w	r3, [sp, #32]
 80195be:	f7fe ff7b 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80195c2:	a807      	add	r0, sp, #28
 80195c4:	f7f9 fa1d 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80195c8:	bb78      	cbnz	r0, 801962a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80195ca:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80195ce:	f8d9 0000 	ldr.w	r0, [r9]
 80195d2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80195d6:	f8d0 e000 	ldr.w	lr, [r0]
 80195da:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80195de:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80195e2:	f1bc 0f14 	cmp.w	ip, #20
 80195e6:	bfa8      	it	ge
 80195e8:	f04f 0c14 	movge.w	ip, #20
 80195ec:	fa1f fc8c 	uxth.w	ip, ip
 80195f0:	f8cd c000 	str.w	ip, [sp]
 80195f4:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 80195f8:	47d8      	blx	fp
 80195fa:	4683      	mov	fp, r0
 80195fc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019600:	a807      	add	r0, sp, #28
 8019602:	f7fe ff3f 	bl	8018484 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8019606:	6823      	ldr	r3, [r4, #0]
 8019608:	4426      	add	r6, r4
 801960a:	4620      	mov	r0, r4
 801960c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801960e:	a907      	add	r1, sp, #28
 8019610:	4798      	blx	r3
 8019612:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8019616:	eba0 000b 	sub.w	r0, r0, fp
 801961a:	b200      	sxth	r0, r0
 801961c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8019620:	b918      	cbnz	r0, 801962a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8019622:	b2b9      	uxth	r1, r7
 8019624:	4650      	mov	r0, sl
 8019626:	f7ff fa79 	bl	8018b1c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801962a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 801962e:	f1bb 0f00 	cmp.w	fp, #0
 8019632:	f43f af2c 	beq.w	801948e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8019636:	882b      	ldrh	r3, [r5, #0]
 8019638:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 801963c:	3301      	adds	r3, #1
 801963e:	b29b      	uxth	r3, r3
 8019640:	2700      	movs	r7, #0
 8019642:	b299      	uxth	r1, r3
 8019644:	458b      	cmp	fp, r1
 8019646:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 801964a:	d9a3      	bls.n	8019594 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 801964c:	4426      	add	r6, r4
 801964e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8019652:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8019656:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801965a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 801965e:	4408      	add	r0, r1
 8019660:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8019664:	4461      	add	r1, ip
 8019666:	b200      	sxth	r0, r0
 8019668:	b209      	sxth	r1, r1
 801966a:	4288      	cmp	r0, r1
 801966c:	f6bf af71 	bge.w	8019552 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8019670:	4584      	cmp	ip, r0
 8019672:	4662      	mov	r2, ip
 8019674:	461f      	mov	r7, r3
 8019676:	bfb8      	it	lt
 8019678:	4602      	movlt	r2, r0
 801967a:	3301      	adds	r3, #1
 801967c:	e7e1      	b.n	8019642 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801967e:	d10e      	bne.n	801969e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8019680:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8019684:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8019688:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801968c:	4473      	add	r3, lr
 801968e:	b21b      	sxth	r3, r3
 8019690:	429e      	cmp	r6, r3
 8019692:	bfa8      	it	ge
 8019694:	461e      	movge	r6, r3
 8019696:	4287      	cmp	r7, r0
 8019698:	bfb8      	it	lt
 801969a:	46e1      	movlt	r9, ip
 801969c:	e756      	b.n	801954c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801969e:	4286      	cmp	r6, r0
 80196a0:	bfa8      	it	ge
 80196a2:	4606      	movge	r6, r0
 80196a4:	e752      	b.n	801954c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80196a6:	eb0a 0007 	add.w	r0, sl, r7
 80196aa:	4427      	add	r7, r4
 80196ac:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80196b0:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 80196b4:	f1bb 0f13 	cmp.w	fp, #19
 80196b8:	bfde      	ittt	le
 80196ba:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 80196be:	445e      	addle	r6, fp
 80196c0:	b236      	sxthle	r6, r6
 80196c2:	f7f9 f99e 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80196c6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80196ca:	2800      	cmp	r0, #0
 80196cc:	f47f af1a 	bne.w	8019504 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 80196d0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 80196d4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80196d8:	482a      	ldr	r0, [pc, #168]	; (8019784 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 80196da:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 80196de:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 80196e2:	6800      	ldr	r0, [r0, #0]
 80196e4:	f8ad 101c 	strh.w	r1, [sp, #28]
 80196e8:	1ab6      	subs	r6, r6, r2
 80196ea:	2e14      	cmp	r6, #20
 80196ec:	f8ad 201e 	strh.w	r2, [sp, #30]
 80196f0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80196f4:	bfa8      	it	ge
 80196f6:	2614      	movge	r6, #20
 80196f8:	f8d0 c000 	ldr.w	ip, [r0]
 80196fc:	b2b6      	uxth	r6, r6
 80196fe:	fa1f fb8b 	uxth.w	fp, fp
 8019702:	455e      	cmp	r6, fp
 8019704:	bf94      	ite	ls
 8019706:	9600      	strls	r6, [sp, #0]
 8019708:	f8cd b000 	strhi.w	fp, [sp]
 801970c:	b292      	uxth	r2, r2
 801970e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8019712:	b29b      	uxth	r3, r3
 8019714:	b289      	uxth	r1, r1
 8019716:	47b0      	blx	r6
 8019718:	6823      	ldr	r3, [r4, #0]
 801971a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801971e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8019720:	a907      	add	r1, sp, #28
 8019722:	4620      	mov	r0, r4
 8019724:	4798      	blx	r3
 8019726:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801972a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 801972e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8019732:	1a5b      	subs	r3, r3, r1
 8019734:	440a      	add	r2, r1
 8019736:	b21b      	sxth	r3, r3
 8019738:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 801973c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8019740:	2b00      	cmp	r3, #0
 8019742:	f47f aeda 	bne.w	80194fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8019746:	fa1f f189 	uxth.w	r1, r9
 801974a:	4650      	mov	r0, sl
 801974c:	f7ff f9e6 	bl	8018b1c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019750:	e6d3      	b.n	80194fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8019752:	882e      	ldrh	r6, [r5, #0]
 8019754:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8019758:	42b3      	cmp	r3, r6
 801975a:	f67f ae98 	bls.w	801948e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801975e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8019762:	ab07      	add	r3, sp, #28
 8019764:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8019768:	6851      	ldr	r1, [r2, #4]
 801976a:	c303      	stmia	r3!, {r0, r1}
 801976c:	a807      	add	r0, sp, #28
 801976e:	f7f9 f948 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019772:	b920      	cbnz	r0, 801977e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8019774:	6823      	ldr	r3, [r4, #0]
 8019776:	a907      	add	r1, sp, #28
 8019778:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801977a:	4620      	mov	r0, r4
 801977c:	4798      	blx	r3
 801977e:	3601      	adds	r6, #1
 8019780:	b2b6      	uxth	r6, r6
 8019782:	e7e7      	b.n	8019754 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8019784:	20013854 	.word	0x20013854

08019788 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8019788:	4b03      	ldr	r3, [pc, #12]	; (8019798 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801978a:	2200      	movs	r2, #0
 801978c:	801a      	strh	r2, [r3, #0]
 801978e:	805a      	strh	r2, [r3, #2]
 8019790:	809a      	strh	r2, [r3, #4]
 8019792:	80da      	strh	r2, [r3, #6]
 8019794:	4770      	bx	lr
 8019796:	bf00      	nop
 8019798:	200138a0 	.word	0x200138a0

0801979c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801979c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197a0:	4606      	mov	r6, r0
 80197a2:	b09d      	sub	sp, #116	; 0x74
 80197a4:	a803      	add	r0, sp, #12
 80197a6:	4614      	mov	r4, r2
 80197a8:	468a      	mov	sl, r1
 80197aa:	461d      	mov	r5, r3
 80197ac:	f000 ff08 	bl	801a5c0 <_ZN8touchgfx12TextProviderC1Ev>
 80197b0:	6833      	ldr	r3, [r6, #0]
 80197b2:	4630      	mov	r0, r6
 80197b4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80197b6:	4798      	blx	r3
 80197b8:	6833      	ldr	r3, [r6, #0]
 80197ba:	4607      	mov	r7, r0
 80197bc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80197be:	4630      	mov	r0, r6
 80197c0:	4798      	blx	r3
 80197c2:	462a      	mov	r2, r5
 80197c4:	9000      	str	r0, [sp, #0]
 80197c6:	4621      	mov	r1, r4
 80197c8:	463b      	mov	r3, r7
 80197ca:	a803      	add	r0, sp, #12
 80197cc:	f000 ff53 	bl	801a676 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80197d0:	2500      	movs	r5, #0
 80197d2:	462c      	mov	r4, r5
 80197d4:	46a9      	mov	r9, r5
 80197d6:	46a8      	mov	r8, r5
 80197d8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 80197dc:	2300      	movs	r3, #0
 80197de:	9302      	str	r3, [sp, #8]
 80197e0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80197e4:	429c      	cmp	r4, r3
 80197e6:	d002      	beq.n	80197ee <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80197e8:	455c      	cmp	r4, fp
 80197ea:	bf18      	it	ne
 80197ec:	4625      	movne	r5, r4
 80197ee:	ab02      	add	r3, sp, #8
 80197f0:	4632      	mov	r2, r6
 80197f2:	4651      	mov	r1, sl
 80197f4:	a803      	add	r0, sp, #12
 80197f6:	f001 fa41 	bl	801ac7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80197fa:	4604      	mov	r4, r0
 80197fc:	b108      	cbz	r0, 8019802 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80197fe:	280a      	cmp	r0, #10
 8019800:	d10a      	bne.n	8019818 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8019802:	45c1      	cmp	r9, r8
 8019804:	bf38      	it	cc
 8019806:	46c1      	movcc	r9, r8
 8019808:	f04f 0800 	mov.w	r8, #0
 801980c:	2c00      	cmp	r4, #0
 801980e:	d1e5      	bne.n	80197dc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8019810:	4648      	mov	r0, r9
 8019812:	b01d      	add	sp, #116	; 0x74
 8019814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019818:	9a02      	ldr	r2, [sp, #8]
 801981a:	2a00      	cmp	r2, #0
 801981c:	d0de      	beq.n	80197dc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801981e:	7b57      	ldrb	r7, [r2, #13]
 8019820:	6833      	ldr	r3, [r6, #0]
 8019822:	8894      	ldrh	r4, [r2, #4]
 8019824:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8019826:	007f      	lsls	r7, r7, #1
 8019828:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801982c:	7a97      	ldrb	r7, [r2, #10]
 801982e:	4629      	mov	r1, r5
 8019830:	4307      	orrs	r7, r0
 8019832:	4630      	mov	r0, r6
 8019834:	4798      	blx	r3
 8019836:	4438      	add	r0, r7
 8019838:	4480      	add	r8, r0
 801983a:	fa1f f888 	uxth.w	r8, r8
 801983e:	e7e5      	b.n	801980c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08019840 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8019840:	b508      	push	{r3, lr}
 8019842:	6803      	ldr	r3, [r0, #0]
 8019844:	68db      	ldr	r3, [r3, #12]
 8019846:	4798      	blx	r3
 8019848:	b128      	cbz	r0, 8019856 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801984a:	7b43      	ldrb	r3, [r0, #13]
 801984c:	7a80      	ldrb	r0, [r0, #10]
 801984e:	005b      	lsls	r3, r3, #1
 8019850:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8019854:	4318      	orrs	r0, r3
 8019856:	bd08      	pop	{r3, pc}

08019858 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8019858:	b40e      	push	{r1, r2, r3}
 801985a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801985c:	b09e      	sub	sp, #120	; 0x78
 801985e:	ab23      	add	r3, sp, #140	; 0x8c
 8019860:	4605      	mov	r5, r0
 8019862:	f853 4b04 	ldr.w	r4, [r3], #4
 8019866:	9303      	str	r3, [sp, #12]
 8019868:	a805      	add	r0, sp, #20
 801986a:	f000 fea9 	bl	801a5c0 <_ZN8touchgfx12TextProviderC1Ev>
 801986e:	682b      	ldr	r3, [r5, #0]
 8019870:	4628      	mov	r0, r5
 8019872:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019874:	4798      	blx	r3
 8019876:	682b      	ldr	r3, [r5, #0]
 8019878:	4606      	mov	r6, r0
 801987a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801987c:	4628      	mov	r0, r5
 801987e:	4798      	blx	r3
 8019880:	4633      	mov	r3, r6
 8019882:	ae1e      	add	r6, sp, #120	; 0x78
 8019884:	4621      	mov	r1, r4
 8019886:	9000      	str	r0, [sp, #0]
 8019888:	9a03      	ldr	r2, [sp, #12]
 801988a:	2400      	movs	r4, #0
 801988c:	a805      	add	r0, sp, #20
 801988e:	f000 fef2 	bl	801a676 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019892:	f846 4d68 	str.w	r4, [r6, #-104]!
 8019896:	462a      	mov	r2, r5
 8019898:	4633      	mov	r3, r6
 801989a:	4621      	mov	r1, r4
 801989c:	a805      	add	r0, sp, #20
 801989e:	f001 f9ed 	bl	801ac7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80198a2:	b1f0      	cbz	r0, 80198e2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80198a4:	280a      	cmp	r0, #10
 80198a6:	d018      	beq.n	80198da <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80198a8:	9f04      	ldr	r7, [sp, #16]
 80198aa:	b1b7      	cbz	r7, 80198da <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80198ac:	7b78      	ldrb	r0, [r7, #13]
 80198ae:	7a3b      	ldrb	r3, [r7, #8]
 80198b0:	88ea      	ldrh	r2, [r5, #6]
 80198b2:	00c1      	lsls	r1, r0, #3
 80198b4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80198b8:	4319      	orrs	r1, r3
 80198ba:	0643      	lsls	r3, r0, #25
 80198bc:	bf44      	itt	mi
 80198be:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 80198c2:	b219      	sxthmi	r1, r3
 80198c4:	0100      	lsls	r0, r0, #4
 80198c6:	79fb      	ldrb	r3, [r7, #7]
 80198c8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80198cc:	4303      	orrs	r3, r0
 80198ce:	4413      	add	r3, r2
 80198d0:	1a5b      	subs	r3, r3, r1
 80198d2:	b21b      	sxth	r3, r3
 80198d4:	429c      	cmp	r4, r3
 80198d6:	bfb8      	it	lt
 80198d8:	461c      	movlt	r4, r3
 80198da:	4633      	mov	r3, r6
 80198dc:	462a      	mov	r2, r5
 80198de:	2100      	movs	r1, #0
 80198e0:	e7dc      	b.n	801989c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80198e2:	b2a0      	uxth	r0, r4
 80198e4:	b01e      	add	sp, #120	; 0x78
 80198e6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80198ea:	b003      	add	sp, #12
 80198ec:	4770      	bx	lr

080198ee <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 80198ee:	7a43      	ldrb	r3, [r0, #9]
 80198f0:	8880      	ldrh	r0, [r0, #4]
 80198f2:	4418      	add	r0, r3
 80198f4:	b280      	uxth	r0, r0
 80198f6:	4770      	bx	lr

080198f8 <_ZNK8touchgfx4Font13getFontHeightEv>:
 80198f8:	6803      	ldr	r3, [r0, #0]
 80198fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80198fc:	4718      	bx	r3

080198fe <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80198fe:	b40e      	push	{r1, r2, r3}
 8019900:	b570      	push	{r4, r5, r6, lr}
 8019902:	b09d      	sub	sp, #116	; 0x74
 8019904:	ab21      	add	r3, sp, #132	; 0x84
 8019906:	4604      	mov	r4, r0
 8019908:	f853 5b04 	ldr.w	r5, [r3], #4
 801990c:	9302      	str	r3, [sp, #8]
 801990e:	a803      	add	r0, sp, #12
 8019910:	f000 fe56 	bl	801a5c0 <_ZN8touchgfx12TextProviderC1Ev>
 8019914:	6823      	ldr	r3, [r4, #0]
 8019916:	4620      	mov	r0, r4
 8019918:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801991a:	4798      	blx	r3
 801991c:	6823      	ldr	r3, [r4, #0]
 801991e:	4606      	mov	r6, r0
 8019920:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019922:	4620      	mov	r0, r4
 8019924:	4798      	blx	r3
 8019926:	4633      	mov	r3, r6
 8019928:	9000      	str	r0, [sp, #0]
 801992a:	9a02      	ldr	r2, [sp, #8]
 801992c:	4629      	mov	r1, r5
 801992e:	a803      	add	r0, sp, #12
 8019930:	f000 fea1 	bl	801a676 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019934:	a803      	add	r0, sp, #12
 8019936:	f001 fa6f 	bl	801ae18 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801993a:	2401      	movs	r4, #1
 801993c:	b2a3      	uxth	r3, r4
 801993e:	b140      	cbz	r0, 8019952 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8019940:	280a      	cmp	r0, #10
 8019942:	bf08      	it	eq
 8019944:	3301      	addeq	r3, #1
 8019946:	a803      	add	r0, sp, #12
 8019948:	bf08      	it	eq
 801994a:	b21c      	sxtheq	r4, r3
 801994c:	f001 fa64 	bl	801ae18 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8019950:	e7f4      	b.n	801993c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8019952:	4618      	mov	r0, r3
 8019954:	b01d      	add	sp, #116	; 0x74
 8019956:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801995a:	b003      	add	sp, #12
 801995c:	4770      	bx	lr

0801995e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801995e:	b40e      	push	{r1, r2, r3}
 8019960:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019962:	b09e      	sub	sp, #120	; 0x78
 8019964:	ab23      	add	r3, sp, #140	; 0x8c
 8019966:	4604      	mov	r4, r0
 8019968:	f853 5b04 	ldr.w	r5, [r3], #4
 801996c:	9303      	str	r3, [sp, #12]
 801996e:	a805      	add	r0, sp, #20
 8019970:	f000 fe26 	bl	801a5c0 <_ZN8touchgfx12TextProviderC1Ev>
 8019974:	6823      	ldr	r3, [r4, #0]
 8019976:	4620      	mov	r0, r4
 8019978:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801997a:	4798      	blx	r3
 801997c:	6823      	ldr	r3, [r4, #0]
 801997e:	4606      	mov	r6, r0
 8019980:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019982:	4620      	mov	r0, r4
 8019984:	4798      	blx	r3
 8019986:	4633      	mov	r3, r6
 8019988:	4629      	mov	r1, r5
 801998a:	9000      	str	r0, [sp, #0]
 801998c:	9a03      	ldr	r2, [sp, #12]
 801998e:	a805      	add	r0, sp, #20
 8019990:	ad1e      	add	r5, sp, #120	; 0x78
 8019992:	f000 fe70 	bl	801a676 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019996:	2100      	movs	r1, #0
 8019998:	f845 1d68 	str.w	r1, [r5, #-104]!
 801999c:	4622      	mov	r2, r4
 801999e:	462b      	mov	r3, r5
 80199a0:	a805      	add	r0, sp, #20
 80199a2:	f001 f96b 	bl	801ac7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80199a6:	f647 76ff 	movw	r6, #32767	; 0x7fff
 80199aa:	b1d8      	cbz	r0, 80199e4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80199ac:	280a      	cmp	r0, #10
 80199ae:	d012      	beq.n	80199d6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80199b0:	9804      	ldr	r0, [sp, #16]
 80199b2:	b180      	cbz	r0, 80199d6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80199b4:	7b47      	ldrb	r7, [r0, #13]
 80199b6:	88e2      	ldrh	r2, [r4, #6]
 80199b8:	00fb      	lsls	r3, r7, #3
 80199ba:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80199be:	7a03      	ldrb	r3, [r0, #8]
 80199c0:	430b      	orrs	r3, r1
 80199c2:	0679      	lsls	r1, r7, #25
 80199c4:	bf44      	itt	mi
 80199c6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80199ca:	b21b      	sxthmi	r3, r3
 80199cc:	1ad3      	subs	r3, r2, r3
 80199ce:	b21b      	sxth	r3, r3
 80199d0:	429e      	cmp	r6, r3
 80199d2:	bfa8      	it	ge
 80199d4:	461e      	movge	r6, r3
 80199d6:	462b      	mov	r3, r5
 80199d8:	4622      	mov	r2, r4
 80199da:	2100      	movs	r1, #0
 80199dc:	a805      	add	r0, sp, #20
 80199de:	f001 f94d 	bl	801ac7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80199e2:	e7e2      	b.n	80199aa <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80199e4:	4630      	mov	r0, r6
 80199e6:	b01e      	add	sp, #120	; 0x78
 80199e8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80199ec:	b003      	add	sp, #12
 80199ee:	4770      	bx	lr

080199f0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 80199f0:	b513      	push	{r0, r1, r4, lr}
 80199f2:	6803      	ldr	r3, [r0, #0]
 80199f4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80199f8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80199fc:	f8ad 1004 	strh.w	r1, [sp, #4]
 8019a00:	2400      	movs	r4, #0
 8019a02:	9400      	str	r4, [sp, #0]
 8019a04:	f8ad 2006 	strh.w	r2, [sp, #6]
 8019a08:	691b      	ldr	r3, [r3, #16]
 8019a0a:	4669      	mov	r1, sp
 8019a0c:	4798      	blx	r3
 8019a0e:	b002      	add	sp, #8
 8019a10:	bd10      	pop	{r4, pc}

08019a12 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8019a12:	b538      	push	{r3, r4, r5, lr}
 8019a14:	680b      	ldr	r3, [r1, #0]
 8019a16:	460c      	mov	r4, r1
 8019a18:	68db      	ldr	r3, [r3, #12]
 8019a1a:	4605      	mov	r5, r0
 8019a1c:	4798      	blx	r3
 8019a1e:	6823      	ldr	r3, [r4, #0]
 8019a20:	4620      	mov	r0, r4
 8019a22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019a24:	4629      	mov	r1, r5
 8019a26:	4798      	blx	r3
 8019a28:	4628      	mov	r0, r5
 8019a2a:	bd38      	pop	{r3, r4, r5, pc}

08019a2c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8019a2c:	b410      	push	{r4}
 8019a2e:	880a      	ldrh	r2, [r1, #0]
 8019a30:	8884      	ldrh	r4, [r0, #4]
 8019a32:	4422      	add	r2, r4
 8019a34:	800a      	strh	r2, [r1, #0]
 8019a36:	88c4      	ldrh	r4, [r0, #6]
 8019a38:	884a      	ldrh	r2, [r1, #2]
 8019a3a:	4422      	add	r2, r4
 8019a3c:	804a      	strh	r2, [r1, #2]
 8019a3e:	6940      	ldr	r0, [r0, #20]
 8019a40:	b120      	cbz	r0, 8019a4c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8019a42:	6803      	ldr	r3, [r0, #0]
 8019a44:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019a48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019a4a:	4718      	bx	r3
 8019a4c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019a50:	4770      	bx	lr

08019a52 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8019a52:	b570      	push	{r4, r5, r6, lr}
 8019a54:	8882      	ldrh	r2, [r0, #4]
 8019a56:	880b      	ldrh	r3, [r1, #0]
 8019a58:	4413      	add	r3, r2
 8019a5a:	800b      	strh	r3, [r1, #0]
 8019a5c:	88c2      	ldrh	r2, [r0, #6]
 8019a5e:	884b      	ldrh	r3, [r1, #2]
 8019a60:	460c      	mov	r4, r1
 8019a62:	4413      	add	r3, r2
 8019a64:	804b      	strh	r3, [r1, #2]
 8019a66:	4605      	mov	r5, r0
 8019a68:	1d01      	adds	r1, r0, #4
 8019a6a:	4620      	mov	r0, r4
 8019a6c:	f7f8 ff86 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 8019a70:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8019a74:	2b00      	cmp	r3, #0
 8019a76:	dd0b      	ble.n	8019a90 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019a78:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019a7c:	2b00      	cmp	r3, #0
 8019a7e:	dd07      	ble.n	8019a90 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019a80:	6968      	ldr	r0, [r5, #20]
 8019a82:	b128      	cbz	r0, 8019a90 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019a84:	6803      	ldr	r3, [r0, #0]
 8019a86:	4621      	mov	r1, r4
 8019a88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019a8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019a8e:	4718      	bx	r3
 8019a90:	bd70      	pop	{r4, r5, r6, pc}
	...

08019a94 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8019a94:	b570      	push	{r4, r5, r6, lr}
 8019a96:	8882      	ldrh	r2, [r0, #4]
 8019a98:	880b      	ldrh	r3, [r1, #0]
 8019a9a:	4413      	add	r3, r2
 8019a9c:	800b      	strh	r3, [r1, #0]
 8019a9e:	88c2      	ldrh	r2, [r0, #6]
 8019aa0:	884b      	ldrh	r3, [r1, #2]
 8019aa2:	460c      	mov	r4, r1
 8019aa4:	4413      	add	r3, r2
 8019aa6:	804b      	strh	r3, [r1, #2]
 8019aa8:	4605      	mov	r5, r0
 8019aaa:	1d01      	adds	r1, r0, #4
 8019aac:	4620      	mov	r0, r4
 8019aae:	f7f8 ff65 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 8019ab2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8019ab6:	2b00      	cmp	r3, #0
 8019ab8:	dd19      	ble.n	8019aee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019aba:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019abe:	2b00      	cmp	r3, #0
 8019ac0:	dd15      	ble.n	8019aee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019ac2:	6968      	ldr	r0, [r5, #20]
 8019ac4:	b128      	cbz	r0, 8019ad2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8019ac6:	6803      	ldr	r3, [r0, #0]
 8019ac8:	4621      	mov	r1, r4
 8019aca:	691b      	ldr	r3, [r3, #16]
 8019acc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019ad0:	4718      	bx	r3
 8019ad2:	4b07      	ldr	r3, [pc, #28]	; (8019af0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8019ad4:	681b      	ldr	r3, [r3, #0]
 8019ad6:	3304      	adds	r3, #4
 8019ad8:	429d      	cmp	r5, r3
 8019ada:	d108      	bne.n	8019aee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019adc:	f7fe fea0 	bl	8018820 <_ZN8touchgfx11Application11getInstanceEv>
 8019ae0:	6803      	ldr	r3, [r0, #0]
 8019ae2:	6821      	ldr	r1, [r4, #0]
 8019ae4:	6862      	ldr	r2, [r4, #4]
 8019ae6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019ae8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019aec:	4718      	bx	r3
 8019aee:	bd70      	pop	{r4, r5, r6, pc}
 8019af0:	20013898 	.word	0x20013898

08019af4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8019af4:	b570      	push	{r4, r5, r6, lr}
 8019af6:	4604      	mov	r4, r0
 8019af8:	4616      	mov	r6, r2
 8019afa:	460d      	mov	r5, r1
 8019afc:	b901      	cbnz	r1, 8019b00 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8019afe:	b192      	cbz	r2, 8019b26 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8019b00:	6823      	ldr	r3, [r4, #0]
 8019b02:	4620      	mov	r0, r4
 8019b04:	699b      	ldr	r3, [r3, #24]
 8019b06:	4798      	blx	r3
 8019b08:	88e2      	ldrh	r2, [r4, #6]
 8019b0a:	88a1      	ldrh	r1, [r4, #4]
 8019b0c:	4432      	add	r2, r6
 8019b0e:	4429      	add	r1, r5
 8019b10:	4620      	mov	r0, r4
 8019b12:	b212      	sxth	r2, r2
 8019b14:	b209      	sxth	r1, r1
 8019b16:	f7e9 fce9 	bl	80034ec <_ZN8touchgfx8Drawable5setXYEss>
 8019b1a:	6823      	ldr	r3, [r4, #0]
 8019b1c:	4620      	mov	r0, r4
 8019b1e:	699b      	ldr	r3, [r3, #24]
 8019b20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019b24:	4718      	bx	r3
 8019b26:	bd70      	pop	{r4, r5, r6, pc}

08019b28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8019b28:	b510      	push	{r4, lr}
 8019b2a:	4604      	mov	r4, r0
 8019b2c:	4608      	mov	r0, r1
 8019b2e:	2300      	movs	r3, #0
 8019b30:	8023      	strh	r3, [r4, #0]
 8019b32:	8063      	strh	r3, [r4, #2]
 8019b34:	6803      	ldr	r3, [r0, #0]
 8019b36:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019b3a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8019b3e:	80a1      	strh	r1, [r4, #4]
 8019b40:	80e2      	strh	r2, [r4, #6]
 8019b42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019b44:	4621      	mov	r1, r4
 8019b46:	4798      	blx	r3
 8019b48:	4620      	mov	r0, r4
 8019b4a:	bd10      	pop	{r4, pc}

08019b4c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8019b4c:	b530      	push	{r4, r5, lr}
 8019b4e:	8083      	strh	r3, [r0, #4]
 8019b50:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8019b54:	80c3      	strh	r3, [r0, #6]
 8019b56:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8019b5a:	7203      	strb	r3, [r0, #8]
 8019b5c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8019b60:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8019b64:	7243      	strb	r3, [r0, #9]
 8019b66:	7a83      	ldrb	r3, [r0, #10]
 8019b68:	6141      	str	r1, [r0, #20]
 8019b6a:	f365 0306 	bfi	r3, r5, #0, #7
 8019b6e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8019b72:	8302      	strh	r2, [r0, #24]
 8019b74:	f365 13c7 	bfi	r3, r5, #7, #1
 8019b78:	7283      	strb	r3, [r0, #10]
 8019b7a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8019b7e:	72c3      	strb	r3, [r0, #11]
 8019b80:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8019b84:	7303      	strb	r3, [r0, #12]
 8019b86:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8019b8a:	81c3      	strh	r3, [r0, #14]
 8019b8c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8019b90:	8203      	strh	r3, [r0, #16]
 8019b92:	4b01      	ldr	r3, [pc, #4]	; (8019b98 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8019b94:	6003      	str	r3, [r0, #0]
 8019b96:	bd30      	pop	{r4, r5, pc}
 8019b98:	08031cc8 	.word	0x08031cc8

08019b9c <_ZNK8touchgfx9ConstFont4findEt>:
 8019b9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019b9e:	6944      	ldr	r4, [r0, #20]
 8019ba0:	b3bc      	cbz	r4, 8019c12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019ba2:	88a3      	ldrh	r3, [r4, #4]
 8019ba4:	8b02      	ldrh	r2, [r0, #24]
 8019ba6:	1acb      	subs	r3, r1, r3
 8019ba8:	f102 32ff 	add.w	r2, r2, #4294967295
 8019bac:	d431      	bmi.n	8019c12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019bae:	4293      	cmp	r3, r2
 8019bb0:	dd0c      	ble.n	8019bcc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8019bb2:	230e      	movs	r3, #14
 8019bb4:	fb03 4302 	mla	r3, r3, r2, r4
 8019bb8:	889b      	ldrh	r3, [r3, #4]
 8019bba:	1a5b      	subs	r3, r3, r1
 8019bbc:	1ad3      	subs	r3, r2, r3
 8019bbe:	429a      	cmp	r2, r3
 8019bc0:	db27      	blt.n	8019c12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019bc2:	2b00      	cmp	r3, #0
 8019bc4:	bfbc      	itt	lt
 8019bc6:	2302      	movlt	r3, #2
 8019bc8:	fb92 f3f3 	sdivlt	r3, r2, r3
 8019bcc:	2500      	movs	r5, #0
 8019bce:	260e      	movs	r6, #14
 8019bd0:	4295      	cmp	r5, r2
 8019bd2:	dc1e      	bgt.n	8019c12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019bd4:	fb06 4003 	mla	r0, r6, r3, r4
 8019bd8:	8887      	ldrh	r7, [r0, #4]
 8019bda:	42b9      	cmp	r1, r7
 8019bdc:	d01a      	beq.n	8019c14 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8019bde:	d20d      	bcs.n	8019bfc <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8019be0:	1e5a      	subs	r2, r3, #1
 8019be2:	4295      	cmp	r5, r2
 8019be4:	dc15      	bgt.n	8019c12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019be6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8019bea:	1a5b      	subs	r3, r3, r1
 8019bec:	1ad3      	subs	r3, r2, r3
 8019bee:	429a      	cmp	r2, r3
 8019bf0:	db0f      	blt.n	8019c12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019bf2:	429d      	cmp	r5, r3
 8019bf4:	ddec      	ble.n	8019bd0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019bf6:	1953      	adds	r3, r2, r5
 8019bf8:	105b      	asrs	r3, r3, #1
 8019bfa:	e7e9      	b.n	8019bd0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019bfc:	1c5d      	adds	r5, r3, #1
 8019bfe:	42aa      	cmp	r2, r5
 8019c00:	db07      	blt.n	8019c12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019c02:	8a43      	ldrh	r3, [r0, #18]
 8019c04:	1acb      	subs	r3, r1, r3
 8019c06:	442b      	add	r3, r5
 8019c08:	429d      	cmp	r5, r3
 8019c0a:	dc02      	bgt.n	8019c12 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019c0c:	429a      	cmp	r2, r3
 8019c0e:	dadf      	bge.n	8019bd0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019c10:	e7f1      	b.n	8019bf6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8019c12:	2000      	movs	r0, #0
 8019c14:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019c16 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8019c16:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019c18:	4604      	mov	r4, r0
 8019c1a:	4617      	mov	r7, r2
 8019c1c:	461e      	mov	r6, r3
 8019c1e:	b911      	cbnz	r1, 8019c26 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8019c20:	2500      	movs	r5, #0
 8019c22:	4628      	mov	r0, r5
 8019c24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019c26:	290a      	cmp	r1, #10
 8019c28:	d0fa      	beq.n	8019c20 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019c2a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8019c2e:	4291      	cmp	r1, r2
 8019c30:	d0f6      	beq.n	8019c20 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019c32:	f242 020b 	movw	r2, #8203	; 0x200b
 8019c36:	4291      	cmp	r1, r2
 8019c38:	d0f2      	beq.n	8019c20 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019c3a:	f7ff ffaf 	bl	8019b9c <_ZNK8touchgfx9ConstFont4findEt>
 8019c3e:	4605      	mov	r5, r0
 8019c40:	b950      	cbnz	r0, 8019c58 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8019c42:	6823      	ldr	r3, [r4, #0]
 8019c44:	4620      	mov	r0, r4
 8019c46:	691b      	ldr	r3, [r3, #16]
 8019c48:	4798      	blx	r3
 8019c4a:	4601      	mov	r1, r0
 8019c4c:	4620      	mov	r0, r4
 8019c4e:	f7ff ffa5 	bl	8019b9c <_ZNK8touchgfx9ConstFont4findEt>
 8019c52:	4605      	mov	r5, r0
 8019c54:	2800      	cmp	r0, #0
 8019c56:	d0e3      	beq.n	8019c20 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019c58:	6823      	ldr	r3, [r4, #0]
 8019c5a:	4629      	mov	r1, r5
 8019c5c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8019c5e:	4620      	mov	r0, r4
 8019c60:	4798      	blx	r3
 8019c62:	6038      	str	r0, [r7, #0]
 8019c64:	6823      	ldr	r3, [r4, #0]
 8019c66:	4620      	mov	r0, r4
 8019c68:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8019c6a:	4798      	blx	r3
 8019c6c:	7030      	strb	r0, [r6, #0]
 8019c6e:	e7d8      	b.n	8019c22 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08019c70 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8019c70:	b538      	push	{r3, r4, r5, lr}
 8019c72:	4605      	mov	r5, r0
 8019c74:	f002 fb94 	bl	801c3a0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019c78:	4604      	mov	r4, r0
 8019c7a:	4628      	mov	r0, r5
 8019c7c:	f002 fad4 	bl	801c228 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019c80:	2800      	cmp	r0, #0
 8019c82:	bf14      	ite	ne
 8019c84:	2002      	movne	r0, #2
 8019c86:	2000      	moveq	r0, #0
 8019c88:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8019c8c:	b280      	uxth	r0, r0
 8019c8e:	bd38      	pop	{r3, r4, r5, pc}

08019c90 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8019c90:	b538      	push	{r3, r4, r5, lr}
 8019c92:	4605      	mov	r5, r0
 8019c94:	f002 fb84 	bl	801c3a0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019c98:	4604      	mov	r4, r0
 8019c9a:	4628      	mov	r0, r5
 8019c9c:	f002 fac4 	bl	801c228 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019ca0:	2800      	cmp	r0, #0
 8019ca2:	bf14      	ite	ne
 8019ca4:	2002      	movne	r0, #2
 8019ca6:	2000      	moveq	r0, #0
 8019ca8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8019cac:	f040 0001 	orr.w	r0, r0, #1
 8019cb0:	b280      	uxth	r0, r0
 8019cb2:	bd38      	pop	{r3, r4, r5, pc}

08019cb4 <_ZN8touchgfx4clzuEm>:
 8019cb4:	4603      	mov	r3, r0
 8019cb6:	b1c8      	cbz	r0, 8019cec <_ZN8touchgfx4clzuEm+0x38>
 8019cb8:	0c02      	lsrs	r2, r0, #16
 8019cba:	0412      	lsls	r2, r2, #16
 8019cbc:	b9a2      	cbnz	r2, 8019ce8 <_ZN8touchgfx4clzuEm+0x34>
 8019cbe:	0403      	lsls	r3, r0, #16
 8019cc0:	2010      	movs	r0, #16
 8019cc2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8019cc6:	bf04      	itt	eq
 8019cc8:	021b      	lsleq	r3, r3, #8
 8019cca:	3008      	addeq	r0, #8
 8019ccc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8019cd0:	bf04      	itt	eq
 8019cd2:	011b      	lsleq	r3, r3, #4
 8019cd4:	3004      	addeq	r0, #4
 8019cd6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8019cda:	bf04      	itt	eq
 8019cdc:	009b      	lsleq	r3, r3, #2
 8019cde:	3002      	addeq	r0, #2
 8019ce0:	2b00      	cmp	r3, #0
 8019ce2:	db04      	blt.n	8019cee <_ZN8touchgfx4clzuEm+0x3a>
 8019ce4:	3001      	adds	r0, #1
 8019ce6:	4770      	bx	lr
 8019ce8:	2000      	movs	r0, #0
 8019cea:	e7ea      	b.n	8019cc2 <_ZN8touchgfx4clzuEm+0xe>
 8019cec:	2020      	movs	r0, #32
 8019cee:	4770      	bx	lr

08019cf0 <_ZN8touchgfx7muldivuEmmmRm>:
 8019cf0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8019cf4:	460f      	mov	r7, r1
 8019cf6:	4615      	mov	r5, r2
 8019cf8:	461e      	mov	r6, r3
 8019cfa:	4601      	mov	r1, r0
 8019cfc:	b100      	cbz	r0, 8019d00 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8019cfe:	b927      	cbnz	r7, 8019d0a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8019d00:	2000      	movs	r0, #0
 8019d02:	6030      	str	r0, [r6, #0]
 8019d04:	b002      	add	sp, #8
 8019d06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019d0a:	f7ff ffd3 	bl	8019cb4 <_ZN8touchgfx4clzuEm>
 8019d0e:	b980      	cbnz	r0, 8019d32 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8019d10:	4638      	mov	r0, r7
 8019d12:	f7ff ffcf 	bl	8019cb4 <_ZN8touchgfx4clzuEm>
 8019d16:	2800      	cmp	r0, #0
 8019d18:	dd05      	ble.n	8019d26 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8019d1a:	4633      	mov	r3, r6
 8019d1c:	462a      	mov	r2, r5
 8019d1e:	4638      	mov	r0, r7
 8019d20:	f7ff ffe6 	bl	8019cf0 <_ZN8touchgfx7muldivuEmmmRm>
 8019d24:	e7ee      	b.n	8019d04 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019d26:	f04f 33ff 	mov.w	r3, #4294967295
 8019d2a:	6033      	str	r3, [r6, #0]
 8019d2c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8019d30:	e7e8      	b.n	8019d04 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019d32:	fa37 f800 	lsrs.w	r8, r7, r0
 8019d36:	fb07 f301 	mul.w	r3, r7, r1
 8019d3a:	d105      	bne.n	8019d48 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8019d3c:	fbb3 f0f5 	udiv	r0, r3, r5
 8019d40:	fb05 3510 	mls	r5, r5, r0, r3
 8019d44:	6035      	str	r5, [r6, #0]
 8019d46:	e7dd      	b.n	8019d04 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019d48:	2301      	movs	r3, #1
 8019d4a:	fa01 fa00 	lsl.w	sl, r1, r0
 8019d4e:	fa03 f000 	lsl.w	r0, r3, r0
 8019d52:	3801      	subs	r0, #1
 8019d54:	462a      	mov	r2, r5
 8019d56:	4633      	mov	r3, r6
 8019d58:	4038      	ands	r0, r7
 8019d5a:	f7ff ffc9 	bl	8019cf0 <_ZN8touchgfx7muldivuEmmmRm>
 8019d5e:	fbba f9f5 	udiv	r9, sl, r5
 8019d62:	462a      	mov	r2, r5
 8019d64:	4607      	mov	r7, r0
 8019d66:	ab01      	add	r3, sp, #4
 8019d68:	fb05 a119 	mls	r1, r5, r9, sl
 8019d6c:	4640      	mov	r0, r8
 8019d6e:	f7ff ffbf 	bl	8019cf0 <_ZN8touchgfx7muldivuEmmmRm>
 8019d72:	9b01      	ldr	r3, [sp, #4]
 8019d74:	6832      	ldr	r2, [r6, #0]
 8019d76:	fb08 f409 	mul.w	r4, r8, r9
 8019d7a:	441a      	add	r2, r3
 8019d7c:	fbb2 f3f5 	udiv	r3, r2, r5
 8019d80:	441c      	add	r4, r3
 8019d82:	443c      	add	r4, r7
 8019d84:	4420      	add	r0, r4
 8019d86:	fb05 2513 	mls	r5, r5, r3, r2
 8019d8a:	e7db      	b.n	8019d44 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08019d8c <_ZN8touchgfx6muldivElllRl>:
 8019d8c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8019d8e:	2800      	cmp	r0, #0
 8019d90:	bfba      	itte	lt
 8019d92:	4240      	neglt	r0, r0
 8019d94:	f04f 34ff 	movlt.w	r4, #4294967295
 8019d98:	2401      	movge	r4, #1
 8019d9a:	2900      	cmp	r1, #0
 8019d9c:	bfbc      	itt	lt
 8019d9e:	4249      	neglt	r1, r1
 8019da0:	4264      	neglt	r4, r4
 8019da2:	2a00      	cmp	r2, #0
 8019da4:	bfb6      	itet	lt
 8019da6:	4265      	neglt	r5, r4
 8019da8:	4625      	movge	r5, r4
 8019daa:	4252      	neglt	r2, r2
 8019dac:	4288      	cmp	r0, r1
 8019dae:	461e      	mov	r6, r3
 8019db0:	bfc2      	ittt	gt
 8019db2:	4603      	movgt	r3, r0
 8019db4:	4608      	movgt	r0, r1
 8019db6:	4619      	movgt	r1, r3
 8019db8:	ab01      	add	r3, sp, #4
 8019dba:	f7ff ff99 	bl	8019cf0 <_ZN8touchgfx7muldivuEmmmRm>
 8019dbe:	9b01      	ldr	r3, [sp, #4]
 8019dc0:	4368      	muls	r0, r5
 8019dc2:	435c      	muls	r4, r3
 8019dc4:	6034      	str	r4, [r6, #0]
 8019dc6:	b002      	add	sp, #8
 8019dc8:	bd70      	pop	{r4, r5, r6, pc}

08019dca <_ZN8touchgfx6muldivElll>:
 8019dca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8019dcc:	4606      	mov	r6, r0
 8019dce:	ab01      	add	r3, sp, #4
 8019dd0:	460d      	mov	r5, r1
 8019dd2:	4614      	mov	r4, r2
 8019dd4:	f7ff ffda 	bl	8019d8c <_ZN8touchgfx6muldivElllRl>
 8019dd8:	2e00      	cmp	r6, #0
 8019dda:	db20      	blt.n	8019e1e <_ZN8touchgfx6muldivElll+0x54>
 8019ddc:	bf14      	ite	ne
 8019dde:	2301      	movne	r3, #1
 8019de0:	2300      	moveq	r3, #0
 8019de2:	2d00      	cmp	r5, #0
 8019de4:	db1e      	blt.n	8019e24 <_ZN8touchgfx6muldivElll+0x5a>
 8019de6:	bf14      	ite	ne
 8019de8:	2201      	movne	r2, #1
 8019dea:	2200      	moveq	r2, #0
 8019dec:	2c00      	cmp	r4, #0
 8019dee:	fb03 f202 	mul.w	r2, r3, r2
 8019df2:	db1a      	blt.n	8019e2a <_ZN8touchgfx6muldivElll+0x60>
 8019df4:	bf14      	ite	ne
 8019df6:	2301      	movne	r3, #1
 8019df8:	2300      	moveq	r3, #0
 8019dfa:	4353      	muls	r3, r2
 8019dfc:	2b01      	cmp	r3, #1
 8019dfe:	d117      	bne.n	8019e30 <_ZN8touchgfx6muldivElll+0x66>
 8019e00:	9b01      	ldr	r3, [sp, #4]
 8019e02:	2c00      	cmp	r4, #0
 8019e04:	bfb8      	it	lt
 8019e06:	4264      	neglt	r4, r4
 8019e08:	2b00      	cmp	r3, #0
 8019e0a:	f104 0401 	add.w	r4, r4, #1
 8019e0e:	bfb8      	it	lt
 8019e10:	425b      	neglt	r3, r3
 8019e12:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8019e16:	db00      	blt.n	8019e1a <_ZN8touchgfx6muldivElll+0x50>
 8019e18:	3001      	adds	r0, #1
 8019e1a:	b002      	add	sp, #8
 8019e1c:	bd70      	pop	{r4, r5, r6, pc}
 8019e1e:	f04f 33ff 	mov.w	r3, #4294967295
 8019e22:	e7de      	b.n	8019de2 <_ZN8touchgfx6muldivElll+0x18>
 8019e24:	f04f 32ff 	mov.w	r2, #4294967295
 8019e28:	e7e0      	b.n	8019dec <_ZN8touchgfx6muldivElll+0x22>
 8019e2a:	f04f 33ff 	mov.w	r3, #4294967295
 8019e2e:	e7e4      	b.n	8019dfa <_ZN8touchgfx6muldivElll+0x30>
 8019e30:	3301      	adds	r3, #1
 8019e32:	d1f2      	bne.n	8019e1a <_ZN8touchgfx6muldivElll+0x50>
 8019e34:	9b01      	ldr	r3, [sp, #4]
 8019e36:	2c00      	cmp	r4, #0
 8019e38:	bfb8      	it	lt
 8019e3a:	4264      	neglt	r4, r4
 8019e3c:	2b00      	cmp	r3, #0
 8019e3e:	bfb8      	it	lt
 8019e40:	425b      	neglt	r3, r3
 8019e42:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8019e46:	bfc8      	it	gt
 8019e48:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8019e4c:	e7e5      	b.n	8019e1a <_ZN8touchgfx6muldivElll+0x50>

08019e4e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8019e4e:	2000      	movs	r0, #0
 8019e50:	4770      	bx	lr

08019e52 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8019e52:	2001      	movs	r0, #1
 8019e54:	4770      	bx	lr

08019e56 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8019e56:	2002      	movs	r0, #2
 8019e58:	4770      	bx	lr

08019e5a <_ZN8touchgfx6ScreenD1Ev>:
 8019e5a:	4770      	bx	lr

08019e5c <_ZN8touchgfx12GestureEventD1Ev>:
 8019e5c:	4770      	bx	lr

08019e5e <_ZN8touchgfx9DragEventD1Ev>:
 8019e5e:	4770      	bx	lr

08019e60 <_ZN8touchgfx10ClickEventD1Ev>:
 8019e60:	4770      	bx	lr

08019e62 <_ZN8touchgfx10ClickEventD0Ev>:
 8019e62:	b510      	push	{r4, lr}
 8019e64:	210c      	movs	r1, #12
 8019e66:	4604      	mov	r4, r0
 8019e68:	f012 fdc3 	bl	802c9f2 <_ZdlPvj>
 8019e6c:	4620      	mov	r0, r4
 8019e6e:	bd10      	pop	{r4, pc}

08019e70 <_ZN8touchgfx9DragEventD0Ev>:
 8019e70:	b510      	push	{r4, lr}
 8019e72:	2110      	movs	r1, #16
 8019e74:	4604      	mov	r4, r0
 8019e76:	f012 fdbc 	bl	802c9f2 <_ZdlPvj>
 8019e7a:	4620      	mov	r0, r4
 8019e7c:	bd10      	pop	{r4, pc}

08019e7e <_ZN8touchgfx12GestureEventD0Ev>:
 8019e7e:	b510      	push	{r4, lr}
 8019e80:	210c      	movs	r1, #12
 8019e82:	4604      	mov	r4, r0
 8019e84:	f012 fdb5 	bl	802c9f2 <_ZdlPvj>
 8019e88:	4620      	mov	r0, r4
 8019e8a:	bd10      	pop	{r4, pc}

08019e8c <_ZN8touchgfx6ScreenD0Ev>:
 8019e8c:	b510      	push	{r4, lr}
 8019e8e:	213c      	movs	r1, #60	; 0x3c
 8019e90:	4604      	mov	r4, r0
 8019e92:	f012 fdae 	bl	802c9f2 <_ZdlPvj>
 8019e96:	4620      	mov	r0, r4
 8019e98:	bd10      	pop	{r4, pc}
	...

08019e9c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8019e9c:	b530      	push	{r4, r5, lr}
 8019e9e:	460d      	mov	r5, r1
 8019ea0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8019ea2:	b087      	sub	sp, #28
 8019ea4:	4604      	mov	r4, r0
 8019ea6:	b301      	cbz	r1, 8019eea <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8019ea8:	a801      	add	r0, sp, #4
 8019eaa:	f7ff fe3d 	bl	8019b28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019eae:	892a      	ldrh	r2, [r5, #8]
 8019eb0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8019eb4:	7928      	ldrb	r0, [r5, #4]
 8019eb6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8019eba:	f88d 0010 	strb.w	r0, [sp, #16]
 8019ebe:	1ad2      	subs	r2, r2, r3
 8019ec0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8019ec2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8019ec4:	f8ad 1012 	strh.w	r1, [sp, #18]
 8019ec8:	441a      	add	r2, r3
 8019eca:	896b      	ldrh	r3, [r5, #10]
 8019ecc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8019ed0:	f8ad 2014 	strh.w	r2, [sp, #20]
 8019ed4:	1b5b      	subs	r3, r3, r5
 8019ed6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8019ed8:	442b      	add	r3, r5
 8019eda:	4d05      	ldr	r5, [pc, #20]	; (8019ef0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8019edc:	9503      	str	r5, [sp, #12]
 8019ede:	f8ad 3016 	strh.w	r3, [sp, #22]
 8019ee2:	6803      	ldr	r3, [r0, #0]
 8019ee4:	a903      	add	r1, sp, #12
 8019ee6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8019ee8:	4798      	blx	r3
 8019eea:	b007      	add	sp, #28
 8019eec:	bd30      	pop	{r4, r5, pc}
 8019eee:	bf00      	nop
 8019ef0:	08031d50 	.word	0x08031d50

08019ef4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8019ef4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019ef8:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8019efa:	b08a      	sub	sp, #40	; 0x28
 8019efc:	4604      	mov	r4, r0
 8019efe:	460d      	mov	r5, r1
 8019f00:	b113      	cbz	r3, 8019f08 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8019f02:	790b      	ldrb	r3, [r1, #4]
 8019f04:	2b00      	cmp	r3, #0
 8019f06:	d044      	beq.n	8019f92 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8019f08:	f104 0804 	add.w	r8, r4, #4
 8019f0c:	4641      	mov	r1, r8
 8019f0e:	a803      	add	r0, sp, #12
 8019f10:	f7ff fe0a 	bl	8019b28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019f14:	792b      	ldrb	r3, [r5, #4]
 8019f16:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8019f1a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8019f1e:	b983      	cbnz	r3, 8019f42 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8019f20:	892a      	ldrh	r2, [r5, #8]
 8019f22:	88e9      	ldrh	r1, [r5, #6]
 8019f24:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8019f28:	1b92      	subs	r2, r2, r6
 8019f2a:	1bc9      	subs	r1, r1, r7
 8019f2c:	9301      	str	r3, [sp, #4]
 8019f2e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8019f32:	9300      	str	r3, [sp, #0]
 8019f34:	b212      	sxth	r2, r2
 8019f36:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8019f3a:	b209      	sxth	r1, r1
 8019f3c:	4640      	mov	r0, r8
 8019f3e:	f7f8 fc39 	bl	80127b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8019f42:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8019f44:	b329      	cbz	r1, 8019f92 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8019f46:	a805      	add	r0, sp, #20
 8019f48:	f7ff fdee 	bl	8019b28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019f4c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8019f50:	792b      	ldrb	r3, [r5, #4]
 8019f52:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8019f54:	f88d 3020 	strb.w	r3, [sp, #32]
 8019f58:	1abf      	subs	r7, r7, r2
 8019f5a:	88ea      	ldrh	r2, [r5, #6]
 8019f5c:	4417      	add	r7, r2
 8019f5e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8019f60:	4417      	add	r7, r2
 8019f62:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8019f66:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8019f6a:	1ab6      	subs	r6, r6, r2
 8019f6c:	892a      	ldrh	r2, [r5, #8]
 8019f6e:	4416      	add	r6, r2
 8019f70:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8019f72:	4416      	add	r6, r2
 8019f74:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8019f78:	4a07      	ldr	r2, [pc, #28]	; (8019f98 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8019f7a:	9207      	str	r2, [sp, #28]
 8019f7c:	2600      	movs	r6, #0
 8019f7e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8019f82:	6803      	ldr	r3, [r0, #0]
 8019f84:	a907      	add	r1, sp, #28
 8019f86:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8019f88:	4798      	blx	r3
 8019f8a:	792b      	ldrb	r3, [r5, #4]
 8019f8c:	b10b      	cbz	r3, 8019f92 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8019f8e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8019f92:	b00a      	add	sp, #40	; 0x28
 8019f94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019f98:	08031d28 	.word	0x08031d28

08019f9c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8019f9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019fa0:	460c      	mov	r4, r1
 8019fa2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8019fa4:	b088      	sub	sp, #32
 8019fa6:	4605      	mov	r5, r0
 8019fa8:	2900      	cmp	r1, #0
 8019faa:	d06d      	beq.n	801a088 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8019fac:	4668      	mov	r0, sp
 8019fae:	f7ff fdbb 	bl	8019b28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019fb2:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8019fb4:	88e3      	ldrh	r3, [r4, #6]
 8019fb6:	f9bd 8000 	ldrsh.w	r8, [sp]
 8019fba:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8019fbe:	440b      	add	r3, r1
 8019fc0:	b21b      	sxth	r3, r3
 8019fc2:	4543      	cmp	r3, r8
 8019fc4:	db31      	blt.n	801a02a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8019fc6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8019fca:	44c4      	add	ip, r8
 8019fcc:	fa0f fc8c 	sxth.w	ip, ip
 8019fd0:	4563      	cmp	r3, ip
 8019fd2:	da2a      	bge.n	801a02a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8019fd4:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8019fd6:	8926      	ldrh	r6, [r4, #8]
 8019fd8:	4416      	add	r6, r2
 8019fda:	b236      	sxth	r6, r6
 8019fdc:	42be      	cmp	r6, r7
 8019fde:	db24      	blt.n	801a02a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8019fe0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8019fe4:	4438      	add	r0, r7
 8019fe6:	b200      	sxth	r0, r0
 8019fe8:	4286      	cmp	r6, r0
 8019fea:	da1e      	bge.n	801a02a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8019fec:	8963      	ldrh	r3, [r4, #10]
 8019fee:	4419      	add	r1, r3
 8019ff0:	b209      	sxth	r1, r1
 8019ff2:	4541      	cmp	r1, r8
 8019ff4:	db08      	blt.n	801a008 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8019ff6:	4561      	cmp	r1, ip
 8019ff8:	da06      	bge.n	801a008 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8019ffa:	89a3      	ldrh	r3, [r4, #12]
 8019ffc:	441a      	add	r2, r3
 8019ffe:	b212      	sxth	r2, r2
 801a000:	42ba      	cmp	r2, r7
 801a002:	db01      	blt.n	801a008 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a004:	4282      	cmp	r2, r0
 801a006:	db10      	blt.n	801a02a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a008:	4b21      	ldr	r3, [pc, #132]	; (801a090 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801a00a:	9304      	str	r3, [sp, #16]
 801a00c:	2302      	movs	r3, #2
 801a00e:	f88d 3014 	strb.w	r3, [sp, #20]
 801a012:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a014:	2300      	movs	r3, #0
 801a016:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a01a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801a01e:	f8ad 301a 	strh.w	r3, [sp, #26]
 801a022:	6803      	ldr	r3, [r0, #0]
 801a024:	a904      	add	r1, sp, #16
 801a026:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a028:	4798      	blx	r3
 801a02a:	1d29      	adds	r1, r5, #4
 801a02c:	a802      	add	r0, sp, #8
 801a02e:	f7ff fd7b 	bl	8019b28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a032:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a036:	88e0      	ldrh	r0, [r4, #6]
 801a038:	7921      	ldrb	r1, [r4, #4]
 801a03a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801a03e:	8922      	ldrh	r2, [r4, #8]
 801a040:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801a042:	f88d 1014 	strb.w	r1, [sp, #20]
 801a046:	eba3 0808 	sub.w	r8, r3, r8
 801a04a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a04e:	1bdf      	subs	r7, r3, r7
 801a050:	b2bb      	uxth	r3, r7
 801a052:	fa1f f888 	uxth.w	r8, r8
 801a056:	8967      	ldrh	r7, [r4, #10]
 801a058:	89a4      	ldrh	r4, [r4, #12]
 801a05a:	4440      	add	r0, r8
 801a05c:	4460      	add	r0, ip
 801a05e:	441a      	add	r2, r3
 801a060:	44b8      	add	r8, r7
 801a062:	4423      	add	r3, r4
 801a064:	f8ad 0016 	strh.w	r0, [sp, #22]
 801a068:	4433      	add	r3, r6
 801a06a:	4432      	add	r2, r6
 801a06c:	44e0      	add	r8, ip
 801a06e:	4c09      	ldr	r4, [pc, #36]	; (801a094 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801a070:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a072:	9404      	str	r4, [sp, #16]
 801a074:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a078:	f8ad 801a 	strh.w	r8, [sp, #26]
 801a07c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a080:	6803      	ldr	r3, [r0, #0]
 801a082:	a904      	add	r1, sp, #16
 801a084:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a086:	4798      	blx	r3
 801a088:	b008      	add	sp, #32
 801a08a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a08e:	bf00      	nop
 801a090:	08031d28 	.word	0x08031d28
 801a094:	08031d3c 	.word	0x08031d3c

0801a098 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801a098:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801a09a:	4604      	mov	r4, r0
 801a09c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801a0a0:	3201      	adds	r2, #1
 801a0a2:	d112      	bne.n	801a0ca <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801a0a4:	6803      	ldr	r3, [r0, #0]
 801a0a6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801a0aa:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a0ae:	f8ad 1004 	strh.w	r1, [sp, #4]
 801a0b2:	2500      	movs	r5, #0
 801a0b4:	9500      	str	r5, [sp, #0]
 801a0b6:	466d      	mov	r5, sp
 801a0b8:	4629      	mov	r1, r5
 801a0ba:	f8ad 2006 	strh.w	r2, [sp, #6]
 801a0be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a0c0:	4798      	blx	r3
 801a0c2:	e895 0003 	ldmia.w	r5, {r0, r1}
 801a0c6:	e884 0003 	stmia.w	r4, {r0, r1}
 801a0ca:	4620      	mov	r0, r4
 801a0cc:	b003      	add	sp, #12
 801a0ce:	bd30      	pop	{r4, r5, pc}

0801a0d0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801a0d0:	b513      	push	{r0, r1, r4, lr}
 801a0d2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801a0d6:	3301      	adds	r3, #1
 801a0d8:	4604      	mov	r4, r0
 801a0da:	d109      	bne.n	801a0f0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801a0dc:	4601      	mov	r1, r0
 801a0de:	4668      	mov	r0, sp
 801a0e0:	f7ff fd22 	bl	8019b28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a0e4:	f8bd 3000 	ldrh.w	r3, [sp]
 801a0e8:	8423      	strh	r3, [r4, #32]
 801a0ea:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a0ee:	8463      	strh	r3, [r4, #34]	; 0x22
 801a0f0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801a0f4:	b002      	add	sp, #8
 801a0f6:	bd10      	pop	{r4, pc}

0801a0f8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801a0f8:	b513      	push	{r0, r1, r4, lr}
 801a0fa:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801a0fe:	3301      	adds	r3, #1
 801a100:	4604      	mov	r4, r0
 801a102:	d109      	bne.n	801a118 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801a104:	4601      	mov	r1, r0
 801a106:	4668      	mov	r0, sp
 801a108:	f7ff fd0e 	bl	8019b28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a10c:	f8bd 3000 	ldrh.w	r3, [sp]
 801a110:	8423      	strh	r3, [r4, #32]
 801a112:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a116:	8463      	strh	r3, [r4, #34]	; 0x22
 801a118:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801a11c:	b002      	add	sp, #8
 801a11e:	bd10      	pop	{r4, pc}

0801a120 <_ZN8touchgfx6ScreenC1Ev>:
 801a120:	b570      	push	{r4, r5, r6, lr}
 801a122:	4605      	mov	r5, r0
 801a124:	4b16      	ldr	r3, [pc, #88]	; (801a180 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801a126:	f845 3b04 	str.w	r3, [r5], #4
 801a12a:	2300      	movs	r3, #0
 801a12c:	8103      	strh	r3, [r0, #8]
 801a12e:	8143      	strh	r3, [r0, #10]
 801a130:	8183      	strh	r3, [r0, #12]
 801a132:	81c3      	strh	r3, [r0, #14]
 801a134:	8203      	strh	r3, [r0, #16]
 801a136:	8243      	strh	r3, [r0, #18]
 801a138:	8283      	strh	r3, [r0, #20]
 801a13a:	82c3      	strh	r3, [r0, #22]
 801a13c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801a140:	6203      	str	r3, [r0, #32]
 801a142:	8483      	strh	r3, [r0, #36]	; 0x24
 801a144:	84c3      	strh	r3, [r0, #38]	; 0x26
 801a146:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801a14a:	4a0e      	ldr	r2, [pc, #56]	; (801a184 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801a14c:	6343      	str	r3, [r0, #52]	; 0x34
 801a14e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801a152:	4b0d      	ldr	r3, [pc, #52]	; (801a188 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801a154:	6042      	str	r2, [r0, #4]
 801a156:	f9b3 6000 	ldrsh.w	r6, [r3]
 801a15a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801a15c:	4a0b      	ldr	r2, [pc, #44]	; (801a18c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801a15e:	4604      	mov	r4, r0
 801a160:	2101      	movs	r1, #1
 801a162:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801a166:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801a16a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801a16e:	4628      	mov	r0, r5
 801a170:	4798      	blx	r3
 801a172:	6863      	ldr	r3, [r4, #4]
 801a174:	4628      	mov	r0, r5
 801a176:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a178:	4631      	mov	r1, r6
 801a17a:	4798      	blx	r3
 801a17c:	4620      	mov	r0, r4
 801a17e:	bd70      	pop	{r4, r5, r6, pc}
 801a180:	08031d64 	.word	0x08031d64
 801a184:	080313e8 	.word	0x080313e8
 801a188:	2001384a 	.word	0x2001384a
 801a18c:	20013848 	.word	0x20013848

0801a190 <_ZN8touchgfx6Screen4drawEv>:
 801a190:	b507      	push	{r0, r1, r2, lr}
 801a192:	4b09      	ldr	r3, [pc, #36]	; (801a1b8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801a194:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a198:	4b08      	ldr	r3, [pc, #32]	; (801a1bc <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801a19a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a19e:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a1a2:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a1a6:	6803      	ldr	r3, [r0, #0]
 801a1a8:	2100      	movs	r1, #0
 801a1aa:	9100      	str	r1, [sp, #0]
 801a1ac:	689b      	ldr	r3, [r3, #8]
 801a1ae:	4669      	mov	r1, sp
 801a1b0:	4798      	blx	r3
 801a1b2:	b003      	add	sp, #12
 801a1b4:	f85d fb04 	ldr.w	pc, [sp], #4
 801a1b8:	20013848 	.word	0x20013848
 801a1bc:	2001384a 	.word	0x2001384a

0801a1c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801a1c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1c4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801a1c8:	2b00      	cmp	r3, #0
 801a1ca:	b089      	sub	sp, #36	; 0x24
 801a1cc:	4680      	mov	r8, r0
 801a1ce:	460c      	mov	r4, r1
 801a1d0:	4615      	mov	r5, r2
 801a1d2:	dd0e      	ble.n	801a1f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a1d4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801a1d8:	2b00      	cmp	r3, #0
 801a1da:	dd0a      	ble.n	801a1f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a1dc:	4628      	mov	r0, r5
 801a1de:	f7ff ff5b 	bl	801a098 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a1e2:	4621      	mov	r1, r4
 801a1e4:	f7fe fa3d 	bl	8018662 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801a1e8:	69eb      	ldr	r3, [r5, #28]
 801a1ea:	b928      	cbnz	r0, 801a1f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801a1ec:	461d      	mov	r5, r3
 801a1ee:	2b00      	cmp	r3, #0
 801a1f0:	d1f4      	bne.n	801a1dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801a1f2:	b009      	add	sp, #36	; 0x24
 801a1f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a1f8:	ae04      	add	r6, sp, #16
 801a1fa:	2b00      	cmp	r3, #0
 801a1fc:	f000 80b5 	beq.w	801a36a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a200:	682b      	ldr	r3, [r5, #0]
 801a202:	4629      	mov	r1, r5
 801a204:	68db      	ldr	r3, [r3, #12]
 801a206:	a802      	add	r0, sp, #8
 801a208:	4798      	blx	r3
 801a20a:	4628      	mov	r0, r5
 801a20c:	f7ff ff60 	bl	801a0d0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801a210:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801a214:	4407      	add	r7, r0
 801a216:	4628      	mov	r0, r5
 801a218:	f7ff ff6e 	bl	801a0f8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801a21c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a220:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801a224:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a228:	4418      	add	r0, r3
 801a22a:	4621      	mov	r1, r4
 801a22c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801a230:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a234:	b23f      	sxth	r7, r7
 801a236:	4630      	mov	r0, r6
 801a238:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a23c:	f8ad 7010 	strh.w	r7, [sp, #16]
 801a240:	f7f8 fb9c 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 801a244:	4628      	mov	r0, r5
 801a246:	f7ff ff27 	bl	801a098 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a24a:	4602      	mov	r2, r0
 801a24c:	e896 0003 	ldmia.w	r6, {r0, r1}
 801a250:	ab06      	add	r3, sp, #24
 801a252:	e883 0003 	stmia.w	r3, {r0, r1}
 801a256:	4611      	mov	r1, r2
 801a258:	4618      	mov	r0, r3
 801a25a:	f7f8 fb8f 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 801a25e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801a262:	f9b4 1000 	ldrsh.w	r1, [r4]
 801a266:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801a26a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801a26e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801a272:	4299      	cmp	r1, r3
 801a274:	d10b      	bne.n	801a28e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a276:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a27a:	4552      	cmp	r2, sl
 801a27c:	d107      	bne.n	801a28e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a27e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801a282:	455a      	cmp	r2, fp
 801a284:	d103      	bne.n	801a28e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a286:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801a28a:	454a      	cmp	r2, r9
 801a28c:	d06d      	beq.n	801a36a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a28e:	f1bb 0f00 	cmp.w	fp, #0
 801a292:	dd65      	ble.n	801a360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801a294:	f1b9 0f00 	cmp.w	r9, #0
 801a298:	dd62      	ble.n	801a360 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801a29a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a29e:	fa1f f08a 	uxth.w	r0, sl
 801a2a2:	4552      	cmp	r2, sl
 801a2a4:	9000      	str	r0, [sp, #0]
 801a2a6:	da12      	bge.n	801a2ce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801a2a8:	9301      	str	r3, [sp, #4]
 801a2aa:	9b00      	ldr	r3, [sp, #0]
 801a2ac:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a2b0:	f8ad 2012 	strh.w	r2, [sp, #18]
 801a2b4:	1a9a      	subs	r2, r3, r2
 801a2b6:	f8ad 1010 	strh.w	r1, [sp, #16]
 801a2ba:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a2be:	f8ad 2016 	strh.w	r2, [sp, #22]
 801a2c2:	69ea      	ldr	r2, [r5, #28]
 801a2c4:	4631      	mov	r1, r6
 801a2c6:	4640      	mov	r0, r8
 801a2c8:	f7ff ff7a 	bl	801a1c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a2cc:	9b01      	ldr	r3, [sp, #4]
 801a2ce:	f9b4 2000 	ldrsh.w	r2, [r4]
 801a2d2:	429a      	cmp	r2, r3
 801a2d4:	b29f      	uxth	r7, r3
 801a2d6:	da0d      	bge.n	801a2f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801a2d8:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a2dc:	1aba      	subs	r2, r7, r2
 801a2de:	f8ad a012 	strh.w	sl, [sp, #18]
 801a2e2:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a2e6:	f8ad 9016 	strh.w	r9, [sp, #22]
 801a2ea:	69ea      	ldr	r2, [r5, #28]
 801a2ec:	4631      	mov	r1, r6
 801a2ee:	4640      	mov	r0, r8
 801a2f0:	f7ff ff66 	bl	801a1c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a2f4:	8822      	ldrh	r2, [r4, #0]
 801a2f6:	88a3      	ldrh	r3, [r4, #4]
 801a2f8:	445f      	add	r7, fp
 801a2fa:	4413      	add	r3, r2
 801a2fc:	b29b      	uxth	r3, r3
 801a2fe:	b2bf      	uxth	r7, r7
 801a300:	b23a      	sxth	r2, r7
 801a302:	b219      	sxth	r1, r3
 801a304:	4291      	cmp	r1, r2
 801a306:	dd0d      	ble.n	801a324 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801a308:	1bdb      	subs	r3, r3, r7
 801a30a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a30e:	f8ad a012 	strh.w	sl, [sp, #18]
 801a312:	f8ad 3014 	strh.w	r3, [sp, #20]
 801a316:	f8ad 9016 	strh.w	r9, [sp, #22]
 801a31a:	69ea      	ldr	r2, [r5, #28]
 801a31c:	4631      	mov	r1, r6
 801a31e:	4640      	mov	r0, r8
 801a320:	f7ff ff4e 	bl	801a1c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a324:	88e2      	ldrh	r2, [r4, #6]
 801a326:	8863      	ldrh	r3, [r4, #2]
 801a328:	4413      	add	r3, r2
 801a32a:	9a00      	ldr	r2, [sp, #0]
 801a32c:	444a      	add	r2, r9
 801a32e:	b29b      	uxth	r3, r3
 801a330:	fa1f f982 	uxth.w	r9, r2
 801a334:	fa0f f289 	sxth.w	r2, r9
 801a338:	b219      	sxth	r1, r3
 801a33a:	428a      	cmp	r2, r1
 801a33c:	da15      	bge.n	801a36a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a33e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a342:	f9b4 0000 	ldrsh.w	r0, [r4]
 801a346:	f8ad 1014 	strh.w	r1, [sp, #20]
 801a34a:	eba3 0309 	sub.w	r3, r3, r9
 801a34e:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a352:	f8ad 2012 	strh.w	r2, [sp, #18]
 801a356:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a35a:	69ea      	ldr	r2, [r5, #28]
 801a35c:	4631      	mov	r1, r6
 801a35e:	e001      	b.n	801a364 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801a360:	69ea      	ldr	r2, [r5, #28]
 801a362:	4621      	mov	r1, r4
 801a364:	4640      	mov	r0, r8
 801a366:	f7ff ff2b 	bl	801a1c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a36a:	4628      	mov	r0, r5
 801a36c:	f7ff fe94 	bl	801a098 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a370:	6861      	ldr	r1, [r4, #4]
 801a372:	4602      	mov	r2, r0
 801a374:	6820      	ldr	r0, [r4, #0]
 801a376:	4633      	mov	r3, r6
 801a378:	c303      	stmia	r3!, {r0, r1}
 801a37a:	4611      	mov	r1, r2
 801a37c:	4630      	mov	r0, r6
 801a37e:	f7f8 fafd 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 801a382:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801a386:	2b00      	cmp	r3, #0
 801a388:	f77f af33 	ble.w	801a1f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a38c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801a390:	2b00      	cmp	r3, #0
 801a392:	f77f af2e 	ble.w	801a1f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a396:	4628      	mov	r0, r5
 801a398:	f7ff fe9a 	bl	801a0d0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801a39c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801a3a0:	1a18      	subs	r0, r3, r0
 801a3a2:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a3a6:	4628      	mov	r0, r5
 801a3a8:	f7ff fea6 	bl	801a0f8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801a3ac:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801a3b0:	1a18      	subs	r0, r3, r0
 801a3b2:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a3b6:	682b      	ldr	r3, [r5, #0]
 801a3b8:	4631      	mov	r1, r6
 801a3ba:	689b      	ldr	r3, [r3, #8]
 801a3bc:	4628      	mov	r0, r5
 801a3be:	4798      	blx	r3
 801a3c0:	e717      	b.n	801a1f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801a3c2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801a3c2:	b570      	push	{r4, r5, r6, lr}
 801a3c4:	460c      	mov	r4, r1
 801a3c6:	b086      	sub	sp, #24
 801a3c8:	1d06      	adds	r6, r0, #4
 801a3ca:	2300      	movs	r3, #0
 801a3cc:	4631      	mov	r1, r6
 801a3ce:	4605      	mov	r5, r0
 801a3d0:	a802      	add	r0, sp, #8
 801a3d2:	9301      	str	r3, [sp, #4]
 801a3d4:	f7ff fba8 	bl	8019b28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a3d8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a3dc:	8822      	ldrh	r2, [r4, #0]
 801a3de:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801a3e2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a3e6:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a3ea:	1ad2      	subs	r2, r2, r3
 801a3ec:	8863      	ldrh	r3, [r4, #2]
 801a3ee:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a3f2:	1a5b      	subs	r3, r3, r1
 801a3f4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801a3f8:	f8ad 1016 	strh.w	r1, [sp, #22]
 801a3fc:	aa01      	add	r2, sp, #4
 801a3fe:	a904      	add	r1, sp, #16
 801a400:	4630      	mov	r0, r6
 801a402:	f8ad 3012 	strh.w	r3, [sp, #18]
 801a406:	f7f8 fb91 	bl	8012b2c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801a40a:	9a01      	ldr	r2, [sp, #4]
 801a40c:	b11a      	cbz	r2, 801a416 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801a40e:	4621      	mov	r1, r4
 801a410:	4628      	mov	r0, r5
 801a412:	f7ff fed5 	bl	801a1c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a416:	b006      	add	sp, #24
 801a418:	bd70      	pop	{r4, r5, r6, pc}

0801a41a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801a41a:	b530      	push	{r4, r5, lr}
 801a41c:	4602      	mov	r2, r0
 801a41e:	4604      	mov	r4, r0
 801a420:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801a424:	b085      	sub	sp, #20
 801a426:	460d      	mov	r5, r1
 801a428:	6851      	ldr	r1, [r2, #4]
 801a42a:	466b      	mov	r3, sp
 801a42c:	c303      	stmia	r3!, {r0, r1}
 801a42e:	4629      	mov	r1, r5
 801a430:	4668      	mov	r0, sp
 801a432:	f7f8 faa3 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 801a436:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801a43a:	b12b      	cbz	r3, 801a448 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801a43c:	4669      	mov	r1, sp
 801a43e:	4620      	mov	r0, r4
 801a440:	f7ff ffbf 	bl	801a3c2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801a444:	b005      	add	sp, #20
 801a446:	bd30      	pop	{r4, r5, pc}
 801a448:	3404      	adds	r4, #4
 801a44a:	4621      	mov	r1, r4
 801a44c:	a802      	add	r0, sp, #8
 801a44e:	f7ff fb6b 	bl	8019b28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a452:	f8bd 3000 	ldrh.w	r3, [sp]
 801a456:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801a45a:	1a9b      	subs	r3, r3, r2
 801a45c:	f8ad 3000 	strh.w	r3, [sp]
 801a460:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a464:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a468:	4669      	mov	r1, sp
 801a46a:	1a9b      	subs	r3, r3, r2
 801a46c:	4620      	mov	r0, r4
 801a46e:	f8ad 3002 	strh.w	r3, [sp, #2]
 801a472:	f7f8 fb22 	bl	8012aba <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801a476:	e7e5      	b.n	801a444 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801a478 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801a478:	680a      	ldr	r2, [r1, #0]
 801a47a:	460b      	mov	r3, r1
 801a47c:	6992      	ldr	r2, [r2, #24]
 801a47e:	1d01      	adds	r1, r0, #4
 801a480:	4618      	mov	r0, r3
 801a482:	4710      	bx	r2

0801a484 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 801a484:	4298      	cmp	r0, r3
 801a486:	d200      	bcs.n	801a48a <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 801a488:	b913      	cbnz	r3, 801a490 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 801a48a:	440a      	add	r2, r1
 801a48c:	b210      	sxth	r0, r2
 801a48e:	4770      	bx	lr
 801a490:	ee07 0a90 	vmov	s15, r0
 801a494:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801a498:	ee07 3a90 	vmov	s15, r3
 801a49c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a4a0:	eddf 4a15 	vldr	s9, [pc, #84]	; 801a4f8 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 801a4a4:	eddf 5a15 	vldr	s11, [pc, #84]	; 801a4fc <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 801a4a8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801a4ac:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a4b0:	ee37 7a66 	vsub.f32	s14, s14, s13
 801a4b4:	ee07 2a90 	vmov	s15, r2
 801a4b8:	eee7 5a24 	vfma.f32	s11, s14, s9
 801a4bc:	ee27 5a07 	vmul.f32	s10, s14, s14
 801a4c0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801a4c4:	eee5 6a25 	vfma.f32	s13, s10, s11
 801a4c8:	ee07 1a90 	vmov	s15, r1
 801a4cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a4d0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a4d4:	eee6 7a26 	vfma.f32	s15, s12, s13
 801a4d8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a4dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4e0:	bfcc      	ite	gt
 801a4e2:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a4e6:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a4ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a4ee:	ee17 3a90 	vmov	r3, s15
 801a4f2:	b218      	sxth	r0, r3
 801a4f4:	4770      	bx	lr
 801a4f6:	bf00      	nop
 801a4f8:	402ce6b0 	.word	0x402ce6b0
 801a4fc:	3fd9cd60 	.word	0x3fd9cd60

0801a500 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 801a500:	4298      	cmp	r0, r3
 801a502:	d200      	bcs.n	801a506 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 801a504:	b913      	cbnz	r3, 801a50c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801a506:	440a      	add	r2, r1
 801a508:	b210      	sxth	r0, r2
 801a50a:	4770      	bx	lr
 801a50c:	ee07 0a90 	vmov	s15, r0
 801a510:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801a514:	ee07 3a90 	vmov	s15, r3
 801a518:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a51c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801a520:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a524:	ee37 7a66 	vsub.f32	s14, s14, s13
 801a528:	ee07 2a90 	vmov	s15, r2
 801a52c:	ee67 5a07 	vmul.f32	s11, s14, s14
 801a530:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801a534:	eee5 6a87 	vfma.f32	s13, s11, s14
 801a538:	ee07 1a90 	vmov	s15, r1
 801a53c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a540:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a544:	eee6 7a26 	vfma.f32	s15, s12, s13
 801a548:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a54c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a550:	bfcc      	ite	gt
 801a552:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a556:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a55a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a55e:	ee17 3a90 	vmov	r3, s15
 801a562:	b218      	sxth	r0, r3
 801a564:	4770      	bx	lr

0801a566 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801a566:	4298      	cmp	r0, r3
 801a568:	d200      	bcs.n	801a56c <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801a56a:	b913      	cbnz	r3, 801a572 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801a56c:	440a      	add	r2, r1
 801a56e:	b210      	sxth	r0, r2
 801a570:	4770      	bx	lr
 801a572:	ee07 2a90 	vmov	s15, r2
 801a576:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801a57a:	ee07 0a90 	vmov	s15, r0
 801a57e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801a582:	ee67 7a27 	vmul.f32	s15, s14, s15
 801a586:	ee07 3a10 	vmov	s14, r3
 801a58a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801a58e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801a592:	ee07 1a90 	vmov	s15, r1
 801a596:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a59a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801a59e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a5a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a5a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a5aa:	bfcc      	ite	gt
 801a5ac:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a5b0:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a5b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a5b8:	ee17 3a90 	vmov	r3, s15
 801a5bc:	b218      	sxth	r0, r3
 801a5be:	4770      	bx	lr

0801a5c0 <_ZN8touchgfx12TextProviderC1Ev>:
 801a5c0:	b538      	push	{r3, r4, r5, lr}
 801a5c2:	2500      	movs	r5, #0
 801a5c4:	2302      	movs	r3, #2
 801a5c6:	4604      	mov	r4, r0
 801a5c8:	e9c0 5500 	strd	r5, r5, [r0]
 801a5cc:	7403      	strb	r3, [r0, #16]
 801a5ce:	6145      	str	r5, [r0, #20]
 801a5d0:	7605      	strb	r5, [r0, #24]
 801a5d2:	83c5      	strh	r5, [r0, #30]
 801a5d4:	8405      	strh	r5, [r0, #32]
 801a5d6:	86c5      	strh	r5, [r0, #54]	; 0x36
 801a5d8:	8705      	strh	r5, [r0, #56]	; 0x38
 801a5da:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801a5dc:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801a5e0:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801a5e4:	220e      	movs	r2, #14
 801a5e6:	4629      	mov	r1, r5
 801a5e8:	304c      	adds	r0, #76	; 0x4c
 801a5ea:	f013 faee 	bl	802dbca <memset>
 801a5ee:	2301      	movs	r3, #1
 801a5f0:	4620      	mov	r0, r4
 801a5f2:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801a5f6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801a5fa:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801a5fe:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801a602:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801a606:	f7ef ff2f 	bl	800a468 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801a60a:	4620      	mov	r0, r4
 801a60c:	bd38      	pop	{r3, r4, r5, pc}

0801a60e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801a60e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801a610:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a614:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801a616:	fab0 f080 	clz	r0, r0
 801a61a:	0940      	lsrs	r0, r0, #5
 801a61c:	4770      	bx	lr

0801a61e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801a61e:	b530      	push	{r4, r5, lr}
 801a620:	2500      	movs	r5, #0
 801a622:	2401      	movs	r4, #1
 801a624:	6843      	ldr	r3, [r0, #4]
 801a626:	b913      	cbnz	r3, 801a62e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801a628:	6803      	ldr	r3, [r0, #0]
 801a62a:	b313      	cbz	r3, 801a672 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801a62c:	6043      	str	r3, [r0, #4]
 801a62e:	7e03      	ldrb	r3, [r0, #24]
 801a630:	b143      	cbz	r3, 801a644 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801a632:	6943      	ldr	r3, [r0, #20]
 801a634:	b12b      	cbz	r3, 801a642 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801a636:	881a      	ldrh	r2, [r3, #0]
 801a638:	b11a      	cbz	r2, 801a642 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801a63a:	1c9a      	adds	r2, r3, #2
 801a63c:	6142      	str	r2, [r0, #20]
 801a63e:	8818      	ldrh	r0, [r3, #0]
 801a640:	bd30      	pop	{r4, r5, pc}
 801a642:	7605      	strb	r5, [r0, #24]
 801a644:	6843      	ldr	r3, [r0, #4]
 801a646:	8819      	ldrh	r1, [r3, #0]
 801a648:	b199      	cbz	r1, 801a672 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801a64a:	1c9a      	adds	r2, r3, #2
 801a64c:	2902      	cmp	r1, #2
 801a64e:	6042      	str	r2, [r0, #4]
 801a650:	d1f5      	bne.n	801a63e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801a652:	7c03      	ldrb	r3, [r0, #16]
 801a654:	2b01      	cmp	r3, #1
 801a656:	d8e5      	bhi.n	801a624 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a658:	1c5a      	adds	r2, r3, #1
 801a65a:	3302      	adds	r3, #2
 801a65c:	7402      	strb	r2, [r0, #16]
 801a65e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801a662:	6143      	str	r3, [r0, #20]
 801a664:	2b00      	cmp	r3, #0
 801a666:	d0dd      	beq.n	801a624 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a668:	881b      	ldrh	r3, [r3, #0]
 801a66a:	2b00      	cmp	r3, #0
 801a66c:	d0da      	beq.n	801a624 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a66e:	7604      	strb	r4, [r0, #24]
 801a670:	e7d8      	b.n	801a624 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a672:	2000      	movs	r0, #0
 801a674:	e7e4      	b.n	801a640 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801a676 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801a676:	b430      	push	{r4, r5}
 801a678:	6001      	str	r1, [r0, #0]
 801a67a:	2100      	movs	r1, #0
 801a67c:	6041      	str	r1, [r0, #4]
 801a67e:	6815      	ldr	r5, [r2, #0]
 801a680:	6085      	str	r5, [r0, #8]
 801a682:	6852      	ldr	r2, [r2, #4]
 801a684:	6443      	str	r3, [r0, #68]	; 0x44
 801a686:	9b02      	ldr	r3, [sp, #8]
 801a688:	60c2      	str	r2, [r0, #12]
 801a68a:	7401      	strb	r1, [r0, #16]
 801a68c:	6141      	str	r1, [r0, #20]
 801a68e:	7601      	strb	r1, [r0, #24]
 801a690:	8701      	strh	r1, [r0, #56]	; 0x38
 801a692:	8401      	strh	r1, [r0, #32]
 801a694:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801a698:	6483      	str	r3, [r0, #72]	; 0x48
 801a69a:	bc30      	pop	{r4, r5}
 801a69c:	f7ef bee4 	b.w	800a468 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801a6a0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801a6a0:	b408      	push	{r3}
 801a6a2:	b510      	push	{r4, lr}
 801a6a4:	b085      	sub	sp, #20
 801a6a6:	ac07      	add	r4, sp, #28
 801a6a8:	f854 3b04 	ldr.w	r3, [r4], #4
 801a6ac:	9300      	str	r3, [sp, #0]
 801a6ae:	4613      	mov	r3, r2
 801a6b0:	4622      	mov	r2, r4
 801a6b2:	9403      	str	r4, [sp, #12]
 801a6b4:	f7ff ffdf 	bl	801a676 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a6b8:	b005      	add	sp, #20
 801a6ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a6be:	b001      	add	sp, #4
 801a6c0:	4770      	bx	lr

0801a6c2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801a6c2:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a6c4:	4605      	mov	r5, r0
 801a6c6:	4608      	mov	r0, r1
 801a6c8:	b1e9      	cbz	r1, 801a706 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801a6ca:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801a6ce:	460b      	mov	r3, r1
 801a6d0:	f101 0708 	add.w	r7, r1, #8
 801a6d4:	4622      	mov	r2, r4
 801a6d6:	6818      	ldr	r0, [r3, #0]
 801a6d8:	6859      	ldr	r1, [r3, #4]
 801a6da:	4626      	mov	r6, r4
 801a6dc:	c603      	stmia	r6!, {r0, r1}
 801a6de:	3308      	adds	r3, #8
 801a6e0:	42bb      	cmp	r3, r7
 801a6e2:	4634      	mov	r4, r6
 801a6e4:	d1f7      	bne.n	801a6d6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801a6e6:	6818      	ldr	r0, [r3, #0]
 801a6e8:	6030      	str	r0, [r6, #0]
 801a6ea:	889b      	ldrh	r3, [r3, #4]
 801a6ec:	80b3      	strh	r3, [r6, #4]
 801a6ee:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801a6f2:	015b      	lsls	r3, r3, #5
 801a6f4:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801a6f8:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801a6fc:	430b      	orrs	r3, r1
 801a6fe:	425b      	negs	r3, r3
 801a700:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801a704:	4610      	mov	r0, r2
 801a706:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a708 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801a708:	b538      	push	{r3, r4, r5, lr}
 801a70a:	460c      	mov	r4, r1
 801a70c:	6811      	ldr	r1, [r2, #0]
 801a70e:	4610      	mov	r0, r2
 801a710:	68cd      	ldr	r5, [r1, #12]
 801a712:	4619      	mov	r1, r3
 801a714:	47a8      	blx	r5
 801a716:	2800      	cmp	r0, #0
 801a718:	bf08      	it	eq
 801a71a:	4620      	moveq	r0, r4
 801a71c:	bd38      	pop	{r3, r4, r5, pc}
	...

0801a720 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801a720:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a722:	4604      	mov	r4, r0
 801a724:	4615      	mov	r5, r2
 801a726:	4608      	mov	r0, r1
 801a728:	b93a      	cbnz	r2, 801a73a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801a72a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801a72e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801a732:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801a736:	4628      	mov	r0, r5
 801a738:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a73a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801a73e:	8893      	ldrh	r3, [r2, #4]
 801a740:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801a744:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801a748:	79ee      	ldrb	r6, [r5, #7]
 801a74a:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801a74e:	4316      	orrs	r6, r2
 801a750:	19da      	adds	r2, r3, r7
 801a752:	b291      	uxth	r1, r2
 801a754:	291d      	cmp	r1, #29
 801a756:	b2b7      	uxth	r7, r6
 801a758:	d87a      	bhi.n	801a850 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801a75a:	2201      	movs	r2, #1
 801a75c:	408a      	lsls	r2, r1
 801a75e:	4975      	ldr	r1, [pc, #468]	; (801a934 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801a760:	420a      	tst	r2, r1
 801a762:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801a766:	d12d      	bne.n	801a7c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801a768:	f412 7f60 	tst.w	r2, #896	; 0x380
 801a76c:	d070      	beq.n	801a850 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801a76e:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801a772:	462b      	mov	r3, r5
 801a774:	f105 0e08 	add.w	lr, r5, #8
 801a778:	4615      	mov	r5, r2
 801a77a:	6818      	ldr	r0, [r3, #0]
 801a77c:	6859      	ldr	r1, [r3, #4]
 801a77e:	4694      	mov	ip, r2
 801a780:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801a784:	3308      	adds	r3, #8
 801a786:	4573      	cmp	r3, lr
 801a788:	4662      	mov	r2, ip
 801a78a:	d1f6      	bne.n	801a77a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801a78c:	6818      	ldr	r0, [r3, #0]
 801a78e:	f8cc 0000 	str.w	r0, [ip]
 801a792:	889b      	ldrh	r3, [r3, #4]
 801a794:	f8ac 3004 	strh.w	r3, [ip, #4]
 801a798:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801a79c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801a7a0:	b2b3      	uxth	r3, r6
 801a7a2:	1aca      	subs	r2, r1, r3
 801a7a4:	b292      	uxth	r2, r2
 801a7a6:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801a7aa:	10d2      	asrs	r2, r2, #3
 801a7ac:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801a7b0:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801a7b4:	4302      	orrs	r2, r0
 801a7b6:	1bcf      	subs	r7, r1, r7
 801a7b8:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801a7bc:	1afb      	subs	r3, r7, r3
 801a7be:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801a7c2:	e7b8      	b.n	801a736 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801a7c4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801a7c6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a7ca:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801a7cc:	f640 6333 	movw	r3, #3635	; 0xe33
 801a7d0:	4299      	cmp	r1, r3
 801a7d2:	d110      	bne.n	801a7f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801a7d4:	6803      	ldr	r3, [r0, #0]
 801a7d6:	68db      	ldr	r3, [r3, #12]
 801a7d8:	4798      	blx	r3
 801a7da:	7b41      	ldrb	r1, [r0, #13]
 801a7dc:	00cb      	lsls	r3, r1, #3
 801a7de:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801a7e2:	7a03      	ldrb	r3, [r0, #8]
 801a7e4:	0648      	lsls	r0, r1, #25
 801a7e6:	ea43 0302 	orr.w	r3, r3, r2
 801a7ea:	bf44      	itt	mi
 801a7ec:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801a7f0:	b21b      	sxthmi	r3, r3
 801a7f2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801a7f6:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801a7fa:	443b      	add	r3, r7
 801a7fc:	4433      	add	r3, r6
 801a7fe:	b29b      	uxth	r3, r3
 801a800:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801a804:	462a      	mov	r2, r5
 801a806:	f105 0c08 	add.w	ip, r5, #8
 801a80a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801a80e:	4635      	mov	r5, r6
 801a810:	6810      	ldr	r0, [r2, #0]
 801a812:	6851      	ldr	r1, [r2, #4]
 801a814:	4637      	mov	r7, r6
 801a816:	c703      	stmia	r7!, {r0, r1}
 801a818:	3208      	adds	r2, #8
 801a81a:	4562      	cmp	r2, ip
 801a81c:	463e      	mov	r6, r7
 801a81e:	d1f7      	bne.n	801a810 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801a820:	6810      	ldr	r0, [r2, #0]
 801a822:	6038      	str	r0, [r7, #0]
 801a824:	8892      	ldrh	r2, [r2, #4]
 801a826:	80ba      	strh	r2, [r7, #4]
 801a828:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801a82c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801a830:	10db      	asrs	r3, r3, #3
 801a832:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801a836:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801a83a:	4313      	orrs	r3, r2
 801a83c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801a840:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801a844:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801a848:	1a9b      	subs	r3, r3, r2
 801a84a:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801a84e:	e772      	b.n	801a736 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801a850:	f023 0204 	bic.w	r2, r3, #4
 801a854:	f640 611b 	movw	r1, #3611	; 0xe1b
 801a858:	428a      	cmp	r2, r1
 801a85a:	d003      	beq.n	801a864 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801a85c:	f640 621d 	movw	r2, #3613	; 0xe1d
 801a860:	4293      	cmp	r3, r2
 801a862:	d120      	bne.n	801a8a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 801a864:	3b01      	subs	r3, #1
 801a866:	4602      	mov	r2, r0
 801a868:	b29b      	uxth	r3, r3
 801a86a:	4629      	mov	r1, r5
 801a86c:	4620      	mov	r0, r4
 801a86e:	f7ff ff4b 	bl	801a708 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801a872:	7b41      	ldrb	r1, [r0, #13]
 801a874:	00cb      	lsls	r3, r1, #3
 801a876:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801a87a:	7a03      	ldrb	r3, [r0, #8]
 801a87c:	0649      	lsls	r1, r1, #25
 801a87e:	ea43 0302 	orr.w	r3, r3, r2
 801a882:	bf44      	itt	mi
 801a884:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801a888:	b21b      	sxthmi	r3, r3
 801a88a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801a88e:	7b6b      	ldrb	r3, [r5, #13]
 801a890:	7aaa      	ldrb	r2, [r5, #10]
 801a892:	005b      	lsls	r3, r3, #1
 801a894:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801a898:	4313      	orrs	r3, r2
 801a89a:	115a      	asrs	r2, r3, #5
 801a89c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801a8a0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801a8a4:	e036      	b.n	801a914 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801a8a6:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801a8aa:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801a8ae:	7a2a      	ldrb	r2, [r5, #8]
 801a8b0:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801a8b4:	ea42 0201 	orr.w	r2, r2, r1
 801a8b8:	bf1c      	itt	ne
 801a8ba:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801a8be:	b212      	sxthne	r2, r2
 801a8c0:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801a8c4:	f640 6109 	movw	r1, #3593	; 0xe09
 801a8c8:	f023 0210 	bic.w	r2, r3, #16
 801a8cc:	428a      	cmp	r2, r1
 801a8ce:	d003      	beq.n	801a8d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 801a8d0:	f640 6213 	movw	r2, #3603	; 0xe13
 801a8d4:	4293      	cmp	r3, r2
 801a8d6:	d12a      	bne.n	801a92e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801a8d8:	7b6e      	ldrb	r6, [r5, #13]
 801a8da:	0076      	lsls	r6, r6, #1
 801a8dc:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801a8e0:	7aae      	ldrb	r6, [r5, #10]
 801a8e2:	4316      	orrs	r6, r2
 801a8e4:	f640 6213 	movw	r2, #3603	; 0xe13
 801a8e8:	4293      	cmp	r3, r2
 801a8ea:	bf18      	it	ne
 801a8ec:	f103 33ff 	addne.w	r3, r3, #4294967295
 801a8f0:	4602      	mov	r2, r0
 801a8f2:	bf14      	ite	ne
 801a8f4:	b29b      	uxthne	r3, r3
 801a8f6:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801a8fa:	4629      	mov	r1, r5
 801a8fc:	4620      	mov	r0, r4
 801a8fe:	f7ff ff03 	bl	801a708 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801a902:	7b43      	ldrb	r3, [r0, #13]
 801a904:	7a82      	ldrb	r2, [r0, #10]
 801a906:	005b      	lsls	r3, r3, #1
 801a908:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801a90c:	4313      	orrs	r3, r2
 801a90e:	1af6      	subs	r6, r6, r3
 801a910:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 801a914:	7b69      	ldrb	r1, [r5, #13]
 801a916:	00cb      	lsls	r3, r1, #3
 801a918:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801a91c:	7a2b      	ldrb	r3, [r5, #8]
 801a91e:	4313      	orrs	r3, r2
 801a920:	064a      	lsls	r2, r1, #25
 801a922:	bf44      	itt	mi
 801a924:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801a928:	b21b      	sxthmi	r3, r3
 801a92a:	1bdb      	subs	r3, r3, r7
 801a92c:	e747      	b.n	801a7be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801a92e:	2300      	movs	r3, #0
 801a930:	e7b6      	b.n	801a8a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801a932:	bf00      	nop
 801a934:	3fc00079 	.word	0x3fc00079

0801a938 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801a938:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a93c:	4604      	mov	r4, r0
 801a93e:	b942      	cbnz	r2, 801a952 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801a940:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801a944:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801a948:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 801a94c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801a950:	e047      	b.n	801a9e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801a952:	7b51      	ldrb	r1, [r2, #13]
 801a954:	8893      	ldrh	r3, [r2, #4]
 801a956:	010d      	lsls	r5, r1, #4
 801a958:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801a95c:	79d5      	ldrb	r5, [r2, #7]
 801a95e:	4305      	orrs	r5, r0
 801a960:	2d04      	cmp	r5, #4
 801a962:	bfcc      	ite	gt
 801a964:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801a968:	f04f 0e01 	movle.w	lr, #1
 801a96c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801a970:	f200 80ab 	bhi.w	801aaca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801a974:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801a978:	4283      	cmp	r3, r0
 801a97a:	d216      	bcs.n	801a9aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801a97c:	f240 605b 	movw	r0, #1627	; 0x65b
 801a980:	4283      	cmp	r3, r0
 801a982:	d859      	bhi.n	801aa38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801a984:	f240 6057 	movw	r0, #1623	; 0x657
 801a988:	4283      	cmp	r3, r0
 801a98a:	d20e      	bcs.n	801a9aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801a98c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801a990:	d24a      	bcs.n	801aa28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801a992:	f240 604e 	movw	r0, #1614	; 0x64e
 801a996:	4283      	cmp	r3, r0
 801a998:	d207      	bcs.n	801a9aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801a99a:	f240 601a 	movw	r0, #1562	; 0x61a
 801a99e:	4283      	cmp	r3, r0
 801a9a0:	d02a      	beq.n	801a9f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801a9a2:	d821      	bhi.n	801a9e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801a9a4:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801a9a8:	d35b      	bcc.n	801aa62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801a9aa:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801a9ae:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801a9b2:	f040 80d0 	bne.w	801ab56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801a9b6:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801a9ba:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801a9be:	f040 80ca 	bne.w	801ab56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801a9c2:	00cb      	lsls	r3, r1, #3
 801a9c4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801a9c8:	7a13      	ldrb	r3, [r2, #8]
 801a9ca:	0649      	lsls	r1, r1, #25
 801a9cc:	ea43 0300 	orr.w	r3, r3, r0
 801a9d0:	bf44      	itt	mi
 801a9d2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801a9d6:	b21b      	sxthmi	r3, r3
 801a9d8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801a9dc:	1b5d      	subs	r5, r3, r5
 801a9de:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801a9e2:	4610      	mov	r0, r2
 801a9e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a9e8:	f240 604b 	movw	r0, #1611	; 0x64b
 801a9ec:	4283      	cmp	r3, r0
 801a9ee:	d338      	bcc.n	801aa62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801a9f0:	f240 604c 	movw	r0, #1612	; 0x64c
 801a9f4:	4283      	cmp	r3, r0
 801a9f6:	d9d8      	bls.n	801a9aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801a9f8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801a9fc:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801aa00:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801aa04:	f040 80f2 	bne.w	801abec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801aa08:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801aa0c:	f040 80ee 	bne.w	801abec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801aa10:	00cb      	lsls	r3, r1, #3
 801aa12:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801aa16:	7a13      	ldrb	r3, [r2, #8]
 801aa18:	064e      	lsls	r6, r1, #25
 801aa1a:	ea43 0300 	orr.w	r3, r3, r0
 801aa1e:	bf44      	itt	mi
 801aa20:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801aa24:	b21b      	sxthmi	r3, r3
 801aa26:	e7d9      	b.n	801a9dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801aa28:	f240 6054 	movw	r0, #1620	; 0x654
 801aa2c:	4283      	cmp	r3, r0
 801aa2e:	d8e3      	bhi.n	801a9f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801aa30:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801aa34:	d9e0      	bls.n	801a9f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801aa36:	e7b8      	b.n	801a9aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aa38:	f240 6074 	movw	r0, #1652	; 0x674
 801aa3c:	4283      	cmp	r3, r0
 801aa3e:	d0b4      	beq.n	801a9aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aa40:	d82d      	bhi.n	801aa9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801aa42:	f240 605e 	movw	r0, #1630	; 0x65e
 801aa46:	4283      	cmp	r3, r0
 801aa48:	d804      	bhi.n	801aa54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801aa4a:	f240 605d 	movw	r0, #1629	; 0x65d
 801aa4e:	4283      	cmp	r3, r0
 801aa50:	d3d2      	bcc.n	801a9f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801aa52:	e7aa      	b.n	801a9aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aa54:	f240 605f 	movw	r0, #1631	; 0x65f
 801aa58:	4283      	cmp	r3, r0
 801aa5a:	d0cd      	beq.n	801a9f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801aa5c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801aa60:	d0a3      	beq.n	801a9aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aa62:	00cb      	lsls	r3, r1, #3
 801aa64:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801aa68:	7a13      	ldrb	r3, [r2, #8]
 801aa6a:	0649      	lsls	r1, r1, #25
 801aa6c:	ea43 0300 	orr.w	r3, r3, r0
 801aa70:	bf44      	itt	mi
 801aa72:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801aa76:	b21b      	sxthmi	r3, r3
 801aa78:	1b5d      	subs	r5, r3, r5
 801aa7a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801aa7e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801aa82:	7b53      	ldrb	r3, [r2, #13]
 801aa84:	015b      	lsls	r3, r3, #5
 801aa86:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801aa8a:	7993      	ldrb	r3, [r2, #6]
 801aa8c:	430b      	orrs	r3, r1
 801aa8e:	005b      	lsls	r3, r3, #1
 801aa90:	2105      	movs	r1, #5
 801aa92:	fb93 f3f1 	sdiv	r3, r3, r1
 801aa96:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801aa9a:	440b      	add	r3, r1
 801aa9c:	e756      	b.n	801a94c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801aa9e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801aaa2:	4283      	cmp	r3, r0
 801aaa4:	d809      	bhi.n	801aaba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801aaa6:	f240 60df 	movw	r0, #1759	; 0x6df
 801aaaa:	4283      	cmp	r3, r0
 801aaac:	f4bf af7d 	bcs.w	801a9aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aab0:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801aab4:	2b05      	cmp	r3, #5
 801aab6:	d8d4      	bhi.n	801aa62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801aab8:	e777      	b.n	801a9aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aaba:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801aabe:	4283      	cmp	r3, r0
 801aac0:	d09a      	beq.n	801a9f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801aac2:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801aac6:	4283      	cmp	r3, r0
 801aac8:	e7ca      	b.n	801aa60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801aaca:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801aace:	d22b      	bcs.n	801ab28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801aad0:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801aad4:	4283      	cmp	r3, r0
 801aad6:	d28f      	bcs.n	801a9f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801aad8:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801aadc:	4283      	cmp	r3, r0
 801aade:	d816      	bhi.n	801ab0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801aae0:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801aae4:	4283      	cmp	r3, r0
 801aae6:	f4bf af60 	bcs.w	801a9aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aaea:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801aaee:	4283      	cmp	r3, r0
 801aaf0:	d80a      	bhi.n	801ab08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801aaf2:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801aaf6:	4283      	cmp	r3, r0
 801aaf8:	f4bf af57 	bcs.w	801a9aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aafc:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801ab00:	4283      	cmp	r3, r0
 801ab02:	f43f af79 	beq.w	801a9f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ab06:	e7ac      	b.n	801aa62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ab08:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801ab0c:	e7f8      	b.n	801ab00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801ab0e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801ab12:	4283      	cmp	r3, r0
 801ab14:	d802      	bhi.n	801ab1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801ab16:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801ab1a:	e798      	b.n	801aa4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801ab1c:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801ab20:	4283      	cmp	r3, r0
 801ab22:	f47f af42 	bne.w	801a9aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ab26:	e767      	b.n	801a9f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ab28:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801ab2c:	4283      	cmp	r3, r0
 801ab2e:	f43f af63 	beq.w	801a9f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ab32:	d802      	bhi.n	801ab3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801ab34:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801ab38:	e7f2      	b.n	801ab20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801ab3a:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801ab3e:	4283      	cmp	r3, r0
 801ab40:	d805      	bhi.n	801ab4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801ab42:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801ab46:	4283      	cmp	r3, r0
 801ab48:	f4ff af2f 	bcc.w	801a9aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ab4c:	e754      	b.n	801a9f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ab4e:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801ab52:	4283      	cmp	r3, r0
 801ab54:	e7af      	b.n	801aab6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801ab56:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801ab5a:	4617      	mov	r7, r2
 801ab5c:	f102 0808 	add.w	r8, r2, #8
 801ab60:	4666      	mov	r6, ip
 801ab62:	6838      	ldr	r0, [r7, #0]
 801ab64:	6879      	ldr	r1, [r7, #4]
 801ab66:	46e6      	mov	lr, ip
 801ab68:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801ab6c:	3708      	adds	r7, #8
 801ab6e:	4547      	cmp	r7, r8
 801ab70:	46f4      	mov	ip, lr
 801ab72:	d1f6      	bne.n	801ab62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801ab74:	6838      	ldr	r0, [r7, #0]
 801ab76:	f8ce 0000 	str.w	r0, [lr]
 801ab7a:	88b9      	ldrh	r1, [r7, #4]
 801ab7c:	f8ae 1004 	strh.w	r1, [lr, #4]
 801ab80:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801ab84:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ab88:	d009      	beq.n	801ab9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801ab8a:	7b51      	ldrb	r1, [r2, #13]
 801ab8c:	7992      	ldrb	r2, [r2, #6]
 801ab8e:	0149      	lsls	r1, r1, #5
 801ab90:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801ab94:	4311      	orrs	r1, r2
 801ab96:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801ab9a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801ab9e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801aba2:	b2ad      	uxth	r5, r5
 801aba4:	d00d      	beq.n	801abc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801aba6:	442b      	add	r3, r5
 801aba8:	b29b      	uxth	r3, r3
 801abaa:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801abae:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801abb2:	10db      	asrs	r3, r3, #3
 801abb4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801abb8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801abbc:	4313      	orrs	r3, r2
 801abbe:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801abc2:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801abc6:	00cb      	lsls	r3, r1, #3
 801abc8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801abcc:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801abd0:	064f      	lsls	r7, r1, #25
 801abd2:	ea43 0302 	orr.w	r3, r3, r2
 801abd6:	bf44      	itt	mi
 801abd8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801abdc:	b21b      	sxthmi	r3, r3
 801abde:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801abe2:	1b5b      	subs	r3, r3, r5
 801abe4:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801abe8:	4632      	mov	r2, r6
 801abea:	e6fa      	b.n	801a9e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801abec:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801abf0:	4617      	mov	r7, r2
 801abf2:	f102 0908 	add.w	r9, r2, #8
 801abf6:	4666      	mov	r6, ip
 801abf8:	6838      	ldr	r0, [r7, #0]
 801abfa:	6879      	ldr	r1, [r7, #4]
 801abfc:	46e0      	mov	r8, ip
 801abfe:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801ac02:	3708      	adds	r7, #8
 801ac04:	454f      	cmp	r7, r9
 801ac06:	46c4      	mov	ip, r8
 801ac08:	d1f6      	bne.n	801abf8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801ac0a:	6838      	ldr	r0, [r7, #0]
 801ac0c:	f8c8 0000 	str.w	r0, [r8]
 801ac10:	88b9      	ldrh	r1, [r7, #4]
 801ac12:	f8a8 1004 	strh.w	r1, [r8, #4]
 801ac16:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801ac1a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ac1e:	d009      	beq.n	801ac34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801ac20:	7b51      	ldrb	r1, [r2, #13]
 801ac22:	7992      	ldrb	r2, [r2, #6]
 801ac24:	0149      	lsls	r1, r1, #5
 801ac26:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801ac2a:	4311      	orrs	r1, r2
 801ac2c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801ac30:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801ac34:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ac38:	d00e      	beq.n	801ac58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801ac3a:	eba3 030e 	sub.w	r3, r3, lr
 801ac3e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801ac42:	b29b      	uxth	r3, r3
 801ac44:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801ac48:	10db      	asrs	r3, r3, #3
 801ac4a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801ac4e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801ac52:	4313      	orrs	r3, r2
 801ac54:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801ac58:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801ac5c:	00cb      	lsls	r3, r1, #3
 801ac5e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801ac62:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801ac66:	0648      	lsls	r0, r1, #25
 801ac68:	ea43 0302 	orr.w	r3, r3, r2
 801ac6c:	bf44      	itt	mi
 801ac6e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ac72:	b21b      	sxthmi	r3, r3
 801ac74:	1b5d      	subs	r5, r3, r5
 801ac76:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801ac7a:	e7b5      	b.n	801abe8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801ac7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801ac7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ac80:	461e      	mov	r6, r3
 801ac82:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801ac84:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ac88:	4604      	mov	r4, r0
 801ac8a:	4617      	mov	r7, r2
 801ac8c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801ac90:	f7ef fba8 	bl	800a3e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801ac94:	4605      	mov	r5, r0
 801ac96:	b918      	cbnz	r0, 801aca0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801ac98:	6030      	str	r0, [r6, #0]
 801ac9a:	4628      	mov	r0, r5
 801ac9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801aca0:	683b      	ldr	r3, [r7, #0]
 801aca2:	4601      	mov	r1, r0
 801aca4:	68db      	ldr	r3, [r3, #12]
 801aca6:	4638      	mov	r0, r7
 801aca8:	4798      	blx	r3
 801acaa:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801acae:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801acb2:	4602      	mov	r2, r0
 801acb4:	6030      	str	r0, [r6, #0]
 801acb6:	d213      	bcs.n	801ace0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801acb8:	4643      	mov	r3, r8
 801acba:	4639      	mov	r1, r7
 801acbc:	4620      	mov	r0, r4
 801acbe:	f7ff fe3b 	bl	801a938 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801acc2:	6030      	str	r0, [r6, #0]
 801acc4:	6833      	ldr	r3, [r6, #0]
 801acc6:	b143      	cbz	r3, 801acda <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801acc8:	7b5a      	ldrb	r2, [r3, #13]
 801acca:	7a9b      	ldrb	r3, [r3, #10]
 801accc:	0052      	lsls	r2, r2, #1
 801acce:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801acd2:	4313      	orrs	r3, r2
 801acd4:	bf0c      	ite	eq
 801acd6:	2301      	moveq	r3, #1
 801acd8:	2300      	movne	r3, #0
 801acda:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801acde:	e7dc      	b.n	801ac9a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801ace0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801ace4:	b29b      	uxth	r3, r3
 801ace6:	2b7f      	cmp	r3, #127	; 0x7f
 801ace8:	d804      	bhi.n	801acf4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801acea:	4639      	mov	r1, r7
 801acec:	4620      	mov	r0, r4
 801acee:	f7ff fd17 	bl	801a720 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801acf2:	e7e6      	b.n	801acc2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801acf4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801acf8:	2b00      	cmp	r3, #0
 801acfa:	d0e3      	beq.n	801acc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801acfc:	f640 1302 	movw	r3, #2306	; 0x902
 801ad00:	429d      	cmp	r5, r3
 801ad02:	d1df      	bne.n	801acc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801ad04:	4601      	mov	r1, r0
 801ad06:	4620      	mov	r0, r4
 801ad08:	f7ff fcdb 	bl	801a6c2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801ad0c:	e7d9      	b.n	801acc2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801ad0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801ad0e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ad12:	461e      	mov	r6, r3
 801ad14:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801ad16:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ad1a:	4604      	mov	r4, r0
 801ad1c:	4617      	mov	r7, r2
 801ad1e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801ad22:	f7ef fb5f 	bl	800a3e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801ad26:	4605      	mov	r5, r0
 801ad28:	b918      	cbnz	r0, 801ad32 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801ad2a:	6030      	str	r0, [r6, #0]
 801ad2c:	4628      	mov	r0, r5
 801ad2e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ad32:	683b      	ldr	r3, [r7, #0]
 801ad34:	4601      	mov	r1, r0
 801ad36:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801ad3a:	4638      	mov	r0, r7
 801ad3c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801ad40:	47c8      	blx	r9
 801ad42:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801ad46:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801ad4a:	4602      	mov	r2, r0
 801ad4c:	6030      	str	r0, [r6, #0]
 801ad4e:	d213      	bcs.n	801ad78 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801ad50:	4643      	mov	r3, r8
 801ad52:	4639      	mov	r1, r7
 801ad54:	4620      	mov	r0, r4
 801ad56:	f7ff fdef 	bl	801a938 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801ad5a:	6030      	str	r0, [r6, #0]
 801ad5c:	6833      	ldr	r3, [r6, #0]
 801ad5e:	b143      	cbz	r3, 801ad72 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801ad60:	7b5a      	ldrb	r2, [r3, #13]
 801ad62:	7a9b      	ldrb	r3, [r3, #10]
 801ad64:	0052      	lsls	r2, r2, #1
 801ad66:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801ad6a:	4313      	orrs	r3, r2
 801ad6c:	bf0c      	ite	eq
 801ad6e:	2301      	moveq	r3, #1
 801ad70:	2300      	movne	r3, #0
 801ad72:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801ad76:	e7d9      	b.n	801ad2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801ad78:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801ad7c:	b29b      	uxth	r3, r3
 801ad7e:	2b7f      	cmp	r3, #127	; 0x7f
 801ad80:	d804      	bhi.n	801ad8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801ad82:	4639      	mov	r1, r7
 801ad84:	4620      	mov	r0, r4
 801ad86:	f7ff fccb 	bl	801a720 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801ad8a:	e7e6      	b.n	801ad5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801ad8c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801ad90:	2b00      	cmp	r3, #0
 801ad92:	d0e3      	beq.n	801ad5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801ad94:	f640 1302 	movw	r3, #2306	; 0x902
 801ad98:	429d      	cmp	r5, r3
 801ad9a:	d1df      	bne.n	801ad5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801ad9c:	4601      	mov	r1, r0
 801ad9e:	4620      	mov	r0, r4
 801ada0:	f7ff fc8f 	bl	801a6c2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801ada4:	e7d9      	b.n	801ad5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801ada6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801ada6:	b510      	push	{r4, lr}
 801ada8:	4604      	mov	r4, r0
 801adaa:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801adae:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801adb0:	b1f1      	cbz	r1, 801adf0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801adb2:	2b0a      	cmp	r3, #10
 801adb4:	d02f      	beq.n	801ae16 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801adb6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801adb8:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801adbc:	3901      	subs	r1, #1
 801adbe:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801adc0:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801adc4:	1c51      	adds	r1, r2, #1
 801adc6:	b289      	uxth	r1, r1
 801adc8:	2901      	cmp	r1, #1
 801adca:	bf84      	itt	hi
 801adcc:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801add0:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801add2:	f103 0201 	add.w	r2, r3, #1
 801add6:	8722      	strh	r2, [r4, #56]	; 0x38
 801add8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801adda:	bf98      	it	ls
 801addc:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801adde:	4413      	add	r3, r2
 801ade0:	b29b      	uxth	r3, r3
 801ade2:	2b09      	cmp	r3, #9
 801ade4:	bf88      	it	hi
 801ade6:	3b0a      	subhi	r3, #10
 801ade8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801adec:	8458      	strh	r0, [r3, #34]	; 0x22
 801adee:	e7dc      	b.n	801adaa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801adf0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801adf2:	2b0a      	cmp	r3, #10
 801adf4:	d00f      	beq.n	801ae16 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801adf6:	4620      	mov	r0, r4
 801adf8:	f7ff fc11 	bl	801a61e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801adfc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801adfe:	1c5a      	adds	r2, r3, #1
 801ae00:	8722      	strh	r2, [r4, #56]	; 0x38
 801ae02:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801ae04:	4413      	add	r3, r2
 801ae06:	b29b      	uxth	r3, r3
 801ae08:	2b09      	cmp	r3, #9
 801ae0a:	bf88      	it	hi
 801ae0c:	3b0a      	subhi	r3, #10
 801ae0e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ae12:	8458      	strh	r0, [r3, #34]	; 0x22
 801ae14:	e7ec      	b.n	801adf0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801ae16:	bd10      	pop	{r4, pc}

0801ae18 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801ae18:	b538      	push	{r3, r4, r5, lr}
 801ae1a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801ae1c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801ae20:	4604      	mov	r4, r0
 801ae22:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801ae24:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801ae26:	3a01      	subs	r2, #1
 801ae28:	8702      	strh	r2, [r0, #56]	; 0x38
 801ae2a:	1c5a      	adds	r2, r3, #1
 801ae2c:	b292      	uxth	r2, r2
 801ae2e:	2a09      	cmp	r2, #9
 801ae30:	bf86      	itte	hi
 801ae32:	3b09      	subhi	r3, #9
 801ae34:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801ae36:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801ae38:	f7ff ffb5 	bl	801ada6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801ae3c:	8c23      	ldrh	r3, [r4, #32]
 801ae3e:	2b01      	cmp	r3, #1
 801ae40:	bf9c      	itt	ls
 801ae42:	3301      	addls	r3, #1
 801ae44:	8423      	strhls	r3, [r4, #32]
 801ae46:	8be3      	ldrh	r3, [r4, #30]
 801ae48:	b90b      	cbnz	r3, 801ae4e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801ae4a:	2302      	movs	r3, #2
 801ae4c:	83e3      	strh	r3, [r4, #30]
 801ae4e:	8be3      	ldrh	r3, [r4, #30]
 801ae50:	3b01      	subs	r3, #1
 801ae52:	b29b      	uxth	r3, r3
 801ae54:	83e3      	strh	r3, [r4, #30]
 801ae56:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ae5a:	4628      	mov	r0, r5
 801ae5c:	8365      	strh	r5, [r4, #26]
 801ae5e:	bd38      	pop	{r3, r4, r5, pc}

0801ae60 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801ae60:	428a      	cmp	r2, r1
 801ae62:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ae66:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801ae68:	d931      	bls.n	801aece <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801ae6a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801ae6c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801ae70:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801ae74:	19ee      	adds	r6, r5, r7
 801ae76:	1a54      	subs	r4, r2, r1
 801ae78:	3e01      	subs	r6, #1
 801ae7a:	fa1f fe84 	uxth.w	lr, r4
 801ae7e:	b2b4      	uxth	r4, r6
 801ae80:	eba4 090e 	sub.w	r9, r4, lr
 801ae84:	fa1f f989 	uxth.w	r9, r9
 801ae88:	2c09      	cmp	r4, #9
 801ae8a:	4626      	mov	r6, r4
 801ae8c:	bf88      	it	hi
 801ae8e:	f1a4 060a 	subhi.w	r6, r4, #10
 801ae92:	f1bc 0f00 	cmp.w	ip, #0
 801ae96:	bf08      	it	eq
 801ae98:	f04f 0c02 	moveq.w	ip, #2
 801ae9c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801aea0:	f10c 3cff 	add.w	ip, ip, #4294967295
 801aea4:	fa1f fc8c 	uxth.w	ip, ip
 801aea8:	3c01      	subs	r4, #1
 801aeaa:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801aeae:	b2a4      	uxth	r4, r4
 801aeb0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801aeb4:	454c      	cmp	r4, r9
 801aeb6:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801aeba:	d1e5      	bne.n	801ae88 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801aebc:	eba5 050e 	sub.w	r5, r5, lr
 801aec0:	eb0e 0408 	add.w	r4, lr, r8
 801aec4:	8705      	strh	r5, [r0, #56]	; 0x38
 801aec6:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801aeca:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801aece:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801aed0:	1a64      	subs	r4, r4, r1
 801aed2:	4439      	add	r1, r7
 801aed4:	b289      	uxth	r1, r1
 801aed6:	2909      	cmp	r1, #9
 801aed8:	bf88      	it	hi
 801aeda:	390a      	subhi	r1, #10
 801aedc:	8704      	strh	r4, [r0, #56]	; 0x38
 801aede:	86c1      	strh	r1, [r0, #54]	; 0x36
 801aee0:	250a      	movs	r5, #10
 801aee2:	b18a      	cbz	r2, 801af08 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801aee4:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801aee6:	3a01      	subs	r2, #1
 801aee8:	b292      	uxth	r2, r2
 801aeea:	3101      	adds	r1, #1
 801aeec:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801aef0:	8701      	strh	r1, [r0, #56]	; 0x38
 801aef2:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801aef4:	b901      	cbnz	r1, 801aef8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801aef6:	86c5      	strh	r5, [r0, #54]	; 0x36
 801aef8:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801aefa:	3901      	subs	r1, #1
 801aefc:	b289      	uxth	r1, r1
 801aefe:	86c1      	strh	r1, [r0, #54]	; 0x36
 801af00:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801af04:	844c      	strh	r4, [r1, #34]	; 0x22
 801af06:	e7ec      	b.n	801aee2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801af08:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801af0c:	f7ff bf4b 	b.w	801ada6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801af10 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801af10:	b570      	push	{r4, r5, r6, lr}
 801af12:	2500      	movs	r5, #0
 801af14:	4295      	cmp	r5, r2
 801af16:	d011      	beq.n	801af3c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801af18:	8bc4      	ldrh	r4, [r0, #30]
 801af1a:	f831 6b02 	ldrh.w	r6, [r1], #2
 801af1e:	4414      	add	r4, r2
 801af20:	3c01      	subs	r4, #1
 801af22:	1b64      	subs	r4, r4, r5
 801af24:	b2a4      	uxth	r4, r4
 801af26:	2c01      	cmp	r4, #1
 801af28:	bf88      	it	hi
 801af2a:	3c02      	subhi	r4, #2
 801af2c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801af30:	8b64      	ldrh	r4, [r4, #26]
 801af32:	42b4      	cmp	r4, r6
 801af34:	d117      	bne.n	801af66 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801af36:	3501      	adds	r5, #1
 801af38:	b2ad      	uxth	r5, r5
 801af3a:	e7eb      	b.n	801af14 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801af3c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801af40:	2400      	movs	r4, #0
 801af42:	4413      	add	r3, r2
 801af44:	b2a2      	uxth	r2, r4
 801af46:	429a      	cmp	r2, r3
 801af48:	da0f      	bge.n	801af6a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801af4a:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801af4c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801af50:	4432      	add	r2, r6
 801af52:	b292      	uxth	r2, r2
 801af54:	2a09      	cmp	r2, #9
 801af56:	bf88      	it	hi
 801af58:	3a0a      	subhi	r2, #10
 801af5a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801af5e:	3401      	adds	r4, #1
 801af60:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801af62:	42aa      	cmp	r2, r5
 801af64:	d0ee      	beq.n	801af44 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801af66:	2000      	movs	r0, #0
 801af68:	bd70      	pop	{r4, r5, r6, pc}
 801af6a:	2001      	movs	r0, #1
 801af6c:	e7fc      	b.n	801af68 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801af6e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801af6e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af72:	4605      	mov	r5, r0
 801af74:	4616      	mov	r6, r2
 801af76:	1c8c      	adds	r4, r1, #2
 801af78:	8809      	ldrh	r1, [r1, #0]
 801af7a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801af7e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801af82:	42b3      	cmp	r3, r6
 801af84:	d124      	bne.n	801afd0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801af86:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801af8a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801af8e:	f001 070f 	and.w	r7, r1, #15
 801af92:	f8cd 8000 	str.w	r8, [sp]
 801af96:	464b      	mov	r3, r9
 801af98:	4652      	mov	r2, sl
 801af9a:	4621      	mov	r1, r4
 801af9c:	4628      	mov	r0, r5
 801af9e:	f7ff ffb7 	bl	801af10 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801afa2:	4683      	mov	fp, r0
 801afa4:	b168      	cbz	r0, 801afc2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801afa6:	eb0a 0109 	add.w	r1, sl, r9
 801afaa:	4441      	add	r1, r8
 801afac:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801afb0:	463a      	mov	r2, r7
 801afb2:	4649      	mov	r1, r9
 801afb4:	4628      	mov	r0, r5
 801afb6:	f7ff ff53 	bl	801ae60 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801afba:	4658      	mov	r0, fp
 801afbc:	b003      	add	sp, #12
 801afbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801afc2:	eb07 010a 	add.w	r1, r7, sl
 801afc6:	4449      	add	r1, r9
 801afc8:	4441      	add	r1, r8
 801afca:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801afce:	e7d2      	b.n	801af76 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801afd0:	f04f 0b00 	mov.w	fp, #0
 801afd4:	e7f1      	b.n	801afba <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801afd6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801afd6:	b570      	push	{r4, r5, r6, lr}
 801afd8:	8810      	ldrh	r0, [r2, #0]
 801afda:	4298      	cmp	r0, r3
 801afdc:	d817      	bhi.n	801b00e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801afde:	1e48      	subs	r0, r1, #1
 801afe0:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801afe4:	4298      	cmp	r0, r3
 801afe6:	d312      	bcc.n	801b00e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801afe8:	2400      	movs	r4, #0
 801afea:	428c      	cmp	r4, r1
 801afec:	d20f      	bcs.n	801b00e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801afee:	1860      	adds	r0, r4, r1
 801aff0:	1040      	asrs	r0, r0, #1
 801aff2:	0085      	lsls	r5, r0, #2
 801aff4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801aff8:	42b3      	cmp	r3, r6
 801affa:	d902      	bls.n	801b002 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801affc:	3001      	adds	r0, #1
 801affe:	b284      	uxth	r4, r0
 801b000:	e7f3      	b.n	801afea <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b002:	d201      	bcs.n	801b008 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801b004:	b281      	uxth	r1, r0
 801b006:	e7f0      	b.n	801afea <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b008:	442a      	add	r2, r5
 801b00a:	8850      	ldrh	r0, [r2, #2]
 801b00c:	bd70      	pop	{r4, r5, r6, pc}
 801b00e:	2000      	movs	r0, #0
 801b010:	e7fc      	b.n	801b00c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801b012 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801b012:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b016:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801b018:	886f      	ldrh	r7, [r5, #2]
 801b01a:	4604      	mov	r4, r0
 801b01c:	087f      	lsrs	r7, r7, #1
 801b01e:	260b      	movs	r6, #11
 801b020:	3e01      	subs	r6, #1
 801b022:	d013      	beq.n	801b04c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b024:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b026:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b02a:	462a      	mov	r2, r5
 801b02c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b030:	4639      	mov	r1, r7
 801b032:	4643      	mov	r3, r8
 801b034:	4620      	mov	r0, r4
 801b036:	f7ff ffce 	bl	801afd6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801b03a:	b138      	cbz	r0, 801b04c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b03c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801b040:	4642      	mov	r2, r8
 801b042:	4620      	mov	r0, r4
 801b044:	f7ff ff93 	bl	801af6e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801b048:	2800      	cmp	r0, #0
 801b04a:	d1e9      	bne.n	801b020 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801b04c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801b050 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801b050:	b570      	push	{r4, r5, r6, lr}
 801b052:	694a      	ldr	r2, [r1, #20]
 801b054:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801b056:	684b      	ldr	r3, [r1, #4]
 801b058:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801b05a:	1b54      	subs	r4, r2, r5
 801b05c:	f000 8106 	beq.w	801b26c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801b060:	1b9b      	subs	r3, r3, r6
 801b062:	d003      	beq.n	801b06c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b064:	4363      	muls	r3, r4
 801b066:	2210      	movs	r2, #16
 801b068:	fb93 f3f2 	sdiv	r3, r3, r2
 801b06c:	680c      	ldr	r4, [r1, #0]
 801b06e:	698a      	ldr	r2, [r1, #24]
 801b070:	1b65      	subs	r5, r4, r5
 801b072:	f000 80fd 	beq.w	801b270 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801b076:	1b92      	subs	r2, r2, r6
 801b078:	d003      	beq.n	801b082 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b07a:	436a      	muls	r2, r5
 801b07c:	2410      	movs	r4, #16
 801b07e:	fb92 f2f4 	sdiv	r2, r2, r4
 801b082:	1a9b      	subs	r3, r3, r2
 801b084:	ee07 3a90 	vmov	s15, r3
 801b088:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801b2ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801b08c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b090:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b094:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b098:	460a      	mov	r2, r1
 801b09a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801b09e:	4603      	mov	r3, r0
 801b0a0:	f100 040c 	add.w	r4, r0, #12
 801b0a4:	eeb1 6a43 	vneg.f32	s12, s6
 801b0a8:	edd2 7a02 	vldr	s15, [r2, #8]
 801b0ac:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801b0b0:	3214      	adds	r2, #20
 801b0b2:	ece3 6a01 	vstmia	r3!, {s13}
 801b0b6:	ed52 7a02 	vldr	s15, [r2, #-8]
 801b0ba:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b0be:	429c      	cmp	r4, r3
 801b0c0:	edc3 7a02 	vstr	s15, [r3, #8]
 801b0c4:	ed52 7a01 	vldr	s15, [r2, #-4]
 801b0c8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b0cc:	edc3 7a05 	vstr	s15, [r3, #20]
 801b0d0:	d1ea      	bne.n	801b0a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801b0d2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b0d4:	698b      	ldr	r3, [r1, #24]
 801b0d6:	edd0 4a02 	vldr	s9, [r0, #8]
 801b0da:	edd0 3a00 	vldr	s7, [r0]
 801b0de:	edd0 6a01 	vldr	s13, [r0, #4]
 801b0e2:	ed90 5a05 	vldr	s10, [r0, #20]
 801b0e6:	ed90 2a03 	vldr	s4, [r0, #12]
 801b0ea:	edd0 5a04 	vldr	s11, [r0, #16]
 801b0ee:	ed90 1a07 	vldr	s2, [r0, #28]
 801b0f2:	edd0 2a06 	vldr	s5, [r0, #24]
 801b0f6:	1a9b      	subs	r3, r3, r2
 801b0f8:	ee07 3a90 	vmov	s15, r3
 801b0fc:	684b      	ldr	r3, [r1, #4]
 801b0fe:	1a9b      	subs	r3, r3, r2
 801b100:	ee07 3a10 	vmov	s14, r3
 801b104:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b108:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801b10c:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b110:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801b114:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b118:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801b11c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b120:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801b124:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b128:	ee32 5a45 	vsub.f32	s10, s4, s10
 801b12c:	ee67 7a83 	vmul.f32	s15, s15, s6
 801b130:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801b134:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b136:	694a      	ldr	r2, [r1, #20]
 801b138:	1b13      	subs	r3, r2, r4
 801b13a:	ee07 3a10 	vmov	s14, r3
 801b13e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b142:	680b      	ldr	r3, [r1, #0]
 801b144:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b148:	1b1b      	subs	r3, r3, r4
 801b14a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801b14e:	ee07 3a10 	vmov	s14, r3
 801b152:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b156:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b15a:	eee6 4a87 	vfma.f32	s9, s13, s14
 801b15e:	ee64 4a86 	vmul.f32	s9, s9, s12
 801b162:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801b166:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b168:	698b      	ldr	r3, [r1, #24]
 801b16a:	1a9b      	subs	r3, r3, r2
 801b16c:	ee06 3a90 	vmov	s13, r3
 801b170:	684b      	ldr	r3, [r1, #4]
 801b172:	1a9b      	subs	r3, r3, r2
 801b174:	ee07 3a10 	vmov	s14, r3
 801b178:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b17c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b180:	ee66 6a84 	vmul.f32	s13, s13, s8
 801b184:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b188:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801b18c:	eee5 6a87 	vfma.f32	s13, s11, s14
 801b190:	ee66 6a83 	vmul.f32	s13, s13, s6
 801b194:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801b198:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b19a:	694a      	ldr	r2, [r1, #20]
 801b19c:	1b13      	subs	r3, r2, r4
 801b19e:	ee07 3a10 	vmov	s14, r3
 801b1a2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b1a6:	680b      	ldr	r3, [r1, #0]
 801b1a8:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b1ac:	1b1b      	subs	r3, r3, r4
 801b1ae:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801b1b2:	ee07 3a10 	vmov	s14, r3
 801b1b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b1ba:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b1be:	eea5 5a87 	vfma.f32	s10, s11, s14
 801b1c2:	edd0 5a08 	vldr	s11, [r0, #32]
 801b1c6:	ee25 5a06 	vmul.f32	s10, s10, s12
 801b1ca:	ee31 1a65 	vsub.f32	s2, s2, s11
 801b1ce:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801b1d2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b1d4:	698b      	ldr	r3, [r1, #24]
 801b1d6:	1a9b      	subs	r3, r3, r2
 801b1d8:	ee07 3a10 	vmov	s14, r3
 801b1dc:	684b      	ldr	r3, [r1, #4]
 801b1de:	1a9b      	subs	r3, r3, r2
 801b1e0:	ee01 3a90 	vmov	s3, r3
 801b1e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b1e8:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801b1ec:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b1f0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801b1f4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801b1f8:	ee61 1a84 	vmul.f32	s3, s3, s8
 801b1fc:	eea1 7a21 	vfma.f32	s14, s2, s3
 801b200:	ee27 7a03 	vmul.f32	s14, s14, s6
 801b204:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b208:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b20a:	694a      	ldr	r2, [r1, #20]
 801b20c:	1b13      	subs	r3, r2, r4
 801b20e:	ee03 3a10 	vmov	s6, r3
 801b212:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b216:	680b      	ldr	r3, [r1, #0]
 801b218:	ee23 3a04 	vmul.f32	s6, s6, s8
 801b21c:	1b1b      	subs	r3, r3, r4
 801b21e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801b222:	ee03 3a10 	vmov	s6, r3
 801b226:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b22a:	ee23 4a04 	vmul.f32	s8, s6, s8
 801b22e:	eee1 5a04 	vfma.f32	s11, s2, s8
 801b232:	ee25 6a86 	vmul.f32	s12, s11, s12
 801b236:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801b23a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801b23e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801b242:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801b246:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b24a:	dd13      	ble.n	801b274 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801b24c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b250:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801b254:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b256:	eee3 7a87 	vfma.f32	s15, s7, s14
 801b25a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801b25e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b262:	dd15      	ble.n	801b290 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801b264:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b268:	6403      	str	r3, [r0, #64]	; 0x40
 801b26a:	bd70      	pop	{r4, r5, r6, pc}
 801b26c:	4623      	mov	r3, r4
 801b26e:	e6fd      	b.n	801b06c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b270:	462a      	mov	r2, r5
 801b272:	e706      	b.n	801b082 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b274:	d502      	bpl.n	801b27c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801b276:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b27a:	e7e9      	b.n	801b250 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801b27c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801b280:	eea3 2a85 	vfma.f32	s4, s7, s10
 801b284:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801b288:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b28c:	dade      	bge.n	801b24c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801b28e:	e7f2      	b.n	801b276 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801b290:	d502      	bpl.n	801b298 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801b292:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b296:	e7e7      	b.n	801b268 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801b298:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801b29c:	eee3 4a86 	vfma.f32	s9, s7, s12
 801b2a0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801b2a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b2a8:	dadc      	bge.n	801b264 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801b2aa:	e7f2      	b.n	801b292 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801b2ac:	3d800000 	.word	0x3d800000

0801b2b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801b2b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b2b4:	2714      	movs	r7, #20
 801b2b6:	435f      	muls	r7, r3
 801b2b8:	eb02 0c07 	add.w	ip, r2, r7
 801b2bc:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801b2c0:	f115 0e0f 	adds.w	lr, r5, #15
 801b2c4:	f100 80a2 	bmi.w	801b40c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801b2c8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801b2cc:	9c08      	ldr	r4, [sp, #32]
 801b2ce:	f8c0 e014 	str.w	lr, [r0, #20]
 801b2d2:	2614      	movs	r6, #20
 801b2d4:	4366      	muls	r6, r4
 801b2d6:	eb02 0806 	add.w	r8, r2, r6
 801b2da:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b2de:	f115 040f 	adds.w	r4, r5, #15
 801b2e2:	f100 809f 	bmi.w	801b424 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801b2e6:	1124      	asrs	r4, r4, #4
 801b2e8:	eba4 040e 	sub.w	r4, r4, lr
 801b2ec:	6184      	str	r4, [r0, #24]
 801b2ee:	2c00      	cmp	r4, #0
 801b2f0:	f000 808a 	beq.w	801b408 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801b2f4:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801b2f8:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801b2fc:	5995      	ldr	r5, [r2, r6]
 801b2fe:	eba4 0809 	sub.w	r8, r4, r9
 801b302:	59d4      	ldr	r4, [r2, r7]
 801b304:	eba5 0a04 	sub.w	sl, r5, r4
 801b308:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801b30c:	fb0e fe05 	mul.w	lr, lr, r5
 801b310:	fb0a ee19 	mls	lr, sl, r9, lr
 801b314:	fb08 e404 	mla	r4, r8, r4, lr
 801b318:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801b31c:	3c01      	subs	r4, #1
 801b31e:	19a4      	adds	r4, r4, r6
 801b320:	f100 808c 	bmi.w	801b43c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801b324:	fb94 fef6 	sdiv	lr, r4, r6
 801b328:	f8c0 e000 	str.w	lr, [r0]
 801b32c:	fb06 441e 	mls	r4, r6, lr, r4
 801b330:	6104      	str	r4, [r0, #16]
 801b332:	2d00      	cmp	r5, #0
 801b334:	f2c0 8095 	blt.w	801b462 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801b338:	fb95 f4f6 	sdiv	r4, r5, r6
 801b33c:	6044      	str	r4, [r0, #4]
 801b33e:	fb06 5514 	mls	r5, r6, r4, r5
 801b342:	6085      	str	r5, [r0, #8]
 801b344:	60c6      	str	r6, [r0, #12]
 801b346:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801b34a:	6945      	ldr	r5, [r0, #20]
 801b34c:	59d2      	ldr	r2, [r2, r7]
 801b34e:	eddf 6a4d 	vldr	s13, [pc, #308]	; 801b484 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801b352:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b356:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801b35a:	ee07 4a10 	vmov	s14, r4
 801b35e:	6804      	ldr	r4, [r0, #0]
 801b360:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801b364:	ee07 2a90 	vmov	s15, r2
 801b368:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b36c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b370:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b374:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b378:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b37c:	edd3 6a00 	vldr	s13, [r3]
 801b380:	eee6 6a07 	vfma.f32	s13, s12, s14
 801b384:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801b388:	eee6 6a27 	vfma.f32	s13, s12, s15
 801b38c:	edc0 6a07 	vstr	s13, [r0, #28]
 801b390:	edd0 6a01 	vldr	s13, [r0, #4]
 801b394:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801b398:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b39c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b3a0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801b3a4:	ed80 6a08 	vstr	s12, [r0, #32]
 801b3a8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801b3aa:	6242      	str	r2, [r0, #36]	; 0x24
 801b3ac:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801b3b0:	ed93 6a03 	vldr	s12, [r3, #12]
 801b3b4:	eea5 6a87 	vfma.f32	s12, s11, s14
 801b3b8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801b3bc:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801b3c0:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801b3c4:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801b3c8:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801b3cc:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801b3d0:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801b3d4:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b3d6:	6302      	str	r2, [r0, #48]	; 0x30
 801b3d8:	ed93 6a06 	vldr	s12, [r3, #24]
 801b3dc:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801b3e0:	eea5 6a87 	vfma.f32	s12, s11, s14
 801b3e4:	eeb0 7a46 	vmov.f32	s14, s12
 801b3e8:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801b3ec:	eea6 7a27 	vfma.f32	s14, s12, s15
 801b3f0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b3f4:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801b3f8:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801b3fc:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b400:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801b404:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801b406:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b408:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b40c:	f1c5 0501 	rsb	r5, r5, #1
 801b410:	f015 050f 	ands.w	r5, r5, #15
 801b414:	bf18      	it	ne
 801b416:	2501      	movne	r5, #1
 801b418:	2410      	movs	r4, #16
 801b41a:	fb9e fef4 	sdiv	lr, lr, r4
 801b41e:	ebae 0e05 	sub.w	lr, lr, r5
 801b422:	e753      	b.n	801b2cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801b424:	f1c5 0501 	rsb	r5, r5, #1
 801b428:	f015 050f 	ands.w	r5, r5, #15
 801b42c:	bf18      	it	ne
 801b42e:	2501      	movne	r5, #1
 801b430:	f04f 0910 	mov.w	r9, #16
 801b434:	fb94 f4f9 	sdiv	r4, r4, r9
 801b438:	1b64      	subs	r4, r4, r5
 801b43a:	e755      	b.n	801b2e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801b43c:	4264      	negs	r4, r4
 801b43e:	fb94 fef6 	sdiv	lr, r4, r6
 801b442:	f1ce 0800 	rsb	r8, lr, #0
 801b446:	fb06 441e 	mls	r4, r6, lr, r4
 801b44a:	f8c0 8000 	str.w	r8, [r0]
 801b44e:	6104      	str	r4, [r0, #16]
 801b450:	2c00      	cmp	r4, #0
 801b452:	f43f af6e 	beq.w	801b332 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801b456:	ea6f 0e0e 	mvn.w	lr, lr
 801b45a:	f8c0 e000 	str.w	lr, [r0]
 801b45e:	1b34      	subs	r4, r6, r4
 801b460:	e766      	b.n	801b330 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801b462:	426d      	negs	r5, r5
 801b464:	fb95 f4f6 	sdiv	r4, r5, r6
 801b468:	f1c4 0e00 	rsb	lr, r4, #0
 801b46c:	fb06 5514 	mls	r5, r6, r4, r5
 801b470:	f8c0 e004 	str.w	lr, [r0, #4]
 801b474:	6085      	str	r5, [r0, #8]
 801b476:	2d00      	cmp	r5, #0
 801b478:	f43f af64 	beq.w	801b344 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801b47c:	43e4      	mvns	r4, r4
 801b47e:	6044      	str	r4, [r0, #4]
 801b480:	1b75      	subs	r5, r6, r5
 801b482:	e75e      	b.n	801b342 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801b484:	3d800000 	.word	0x3d800000

0801b488 <_ZN8touchgfx7Unicode6strlenEPKt>:
 801b488:	4602      	mov	r2, r0
 801b48a:	b148      	cbz	r0, 801b4a0 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801b48c:	2300      	movs	r3, #0
 801b48e:	b298      	uxth	r0, r3
 801b490:	3301      	adds	r3, #1
 801b492:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801b496:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801b49a:	2900      	cmp	r1, #0
 801b49c:	d1f7      	bne.n	801b48e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801b49e:	4770      	bx	lr
 801b4a0:	4770      	bx	lr

0801b4a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801b4a2:	b530      	push	{r4, r5, lr}
 801b4a4:	4604      	mov	r4, r0
 801b4a6:	b159      	cbz	r1, 801b4c0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801b4a8:	b148      	cbz	r0, 801b4be <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801b4aa:	2300      	movs	r3, #0
 801b4ac:	b298      	uxth	r0, r3
 801b4ae:	4282      	cmp	r2, r0
 801b4b0:	d905      	bls.n	801b4be <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801b4b2:	5ccd      	ldrb	r5, [r1, r3]
 801b4b4:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801b4b8:	3301      	adds	r3, #1
 801b4ba:	2d00      	cmp	r5, #0
 801b4bc:	d1f6      	bne.n	801b4ac <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801b4be:	bd30      	pop	{r4, r5, pc}
 801b4c0:	4608      	mov	r0, r1
 801b4c2:	e7fc      	b.n	801b4be <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801b4c4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801b4c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b4c6:	b08b      	sub	sp, #44	; 0x2c
 801b4c8:	468c      	mov	ip, r1
 801b4ca:	2100      	movs	r1, #0
 801b4cc:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b4d0:	4604      	mov	r4, r0
 801b4d2:	261f      	movs	r6, #31
 801b4d4:	af01      	add	r7, sp, #4
 801b4d6:	fb94 fef3 	sdiv	lr, r4, r3
 801b4da:	fb03 441e 	mls	r4, r3, lr, r4
 801b4de:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801b4e2:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801b4e6:	b2ec      	uxtb	r4, r5
 801b4e8:	2d09      	cmp	r5, #9
 801b4ea:	bfd4      	ite	le
 801b4ec:	3430      	addle	r4, #48	; 0x30
 801b4ee:	3457      	addgt	r4, #87	; 0x57
 801b4f0:	b2e4      	uxtb	r4, r4
 801b4f2:	55bc      	strb	r4, [r7, r6]
 801b4f4:	4674      	mov	r4, lr
 801b4f6:	1e71      	subs	r1, r6, #1
 801b4f8:	b974      	cbnz	r4, 801b518 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801b4fa:	2800      	cmp	r0, #0
 801b4fc:	da05      	bge.n	801b50a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801b4fe:	ab0a      	add	r3, sp, #40	; 0x28
 801b500:	4419      	add	r1, r3
 801b502:	232d      	movs	r3, #45	; 0x2d
 801b504:	f801 3c24 	strb.w	r3, [r1, #-36]
 801b508:	1eb1      	subs	r1, r6, #2
 801b50a:	3101      	adds	r1, #1
 801b50c:	4439      	add	r1, r7
 801b50e:	4660      	mov	r0, ip
 801b510:	f7ff ffc7 	bl	801b4a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801b514:	b00b      	add	sp, #44	; 0x2c
 801b516:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b518:	460e      	mov	r6, r1
 801b51a:	e7dc      	b.n	801b4d6 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801b51c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801b51c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b51e:	b08b      	sub	sp, #44	; 0x2c
 801b520:	468c      	mov	ip, r1
 801b522:	2100      	movs	r1, #0
 801b524:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b528:	ae01      	add	r6, sp, #4
 801b52a:	211f      	movs	r1, #31
 801b52c:	fbb0 f7f3 	udiv	r7, r0, r3
 801b530:	fb03 0517 	mls	r5, r3, r7, r0
 801b534:	b2ec      	uxtb	r4, r5
 801b536:	2d09      	cmp	r5, #9
 801b538:	bfd4      	ite	le
 801b53a:	3430      	addle	r4, #48	; 0x30
 801b53c:	3457      	addgt	r4, #87	; 0x57
 801b53e:	b2e4      	uxtb	r4, r4
 801b540:	558c      	strb	r4, [r1, r6]
 801b542:	4638      	mov	r0, r7
 801b544:	1e4c      	subs	r4, r1, #1
 801b546:	b92f      	cbnz	r7, 801b554 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801b548:	4431      	add	r1, r6
 801b54a:	4660      	mov	r0, ip
 801b54c:	f7ff ffa9 	bl	801b4a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801b550:	b00b      	add	sp, #44	; 0x2c
 801b552:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b554:	4621      	mov	r1, r4
 801b556:	e7e9      	b.n	801b52c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801b558 <_ZN8touchgfx7Unicode4itoaElPtti>:
 801b558:	b410      	push	{r4}
 801b55a:	b131      	cbz	r1, 801b56a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801b55c:	1e9c      	subs	r4, r3, #2
 801b55e:	2c22      	cmp	r4, #34	; 0x22
 801b560:	d803      	bhi.n	801b56a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801b562:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b566:	f7ff bfad 	b.w	801b4c4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801b56a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b56e:	4770      	bx	lr

0801b570 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801b570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b574:	4691      	mov	r9, r2
 801b576:	b085      	sub	sp, #20
 801b578:	6802      	ldr	r2, [r0, #0]
 801b57a:	9201      	str	r2, [sp, #4]
 801b57c:	4688      	mov	r8, r1
 801b57e:	4683      	mov	fp, r0
 801b580:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801b584:	9103      	str	r1, [sp, #12]
 801b586:	4610      	mov	r0, r2
 801b588:	461c      	mov	r4, r3
 801b58a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801b58e:	9302      	str	r3, [sp, #8]
 801b590:	f7ff ff7a 	bl	801b488 <_ZN8touchgfx7Unicode6strlenEPKt>
 801b594:	f1b8 0f00 	cmp.w	r8, #0
 801b598:	bf0c      	ite	eq
 801b59a:	4684      	moveq	ip, r0
 801b59c:	f100 0c01 	addne.w	ip, r0, #1
 801b5a0:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801b5a4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801b5a8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b5aa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b5ac:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801b5b0:	9903      	ldr	r1, [sp, #12]
 801b5b2:	fa1f fc8c 	uxth.w	ip, ip
 801b5b6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801b5ba:	d041      	beq.n	801b640 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801b5bc:	d834      	bhi.n	801b628 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801b5be:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801b5c2:	d059      	beq.n	801b678 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801b5c4:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801b5c8:	d03a      	beq.n	801b640 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801b5ca:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801b5ce:	d034      	beq.n	801b63a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801b5d0:	2400      	movs	r4, #0
 801b5d2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801b5d6:	3a01      	subs	r2, #1
 801b5d8:	b169      	cbz	r1, 801b5f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b5da:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b5dc:	458c      	cmp	ip, r1
 801b5de:	da09      	bge.n	801b5f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801b5e0:	eba1 010c 	sub.w	r1, r1, ip
 801b5e4:	b289      	uxth	r1, r1
 801b5e6:	b933      	cbnz	r3, 801b5f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b5e8:	2e00      	cmp	r6, #0
 801b5ea:	d051      	beq.n	801b690 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801b5ec:	2800      	cmp	r0, #0
 801b5ee:	d04f      	beq.n	801b690 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801b5f0:	440c      	add	r4, r1
 801b5f2:	b2a4      	uxth	r4, r4
 801b5f4:	2100      	movs	r1, #0
 801b5f6:	682b      	ldr	r3, [r5, #0]
 801b5f8:	4293      	cmp	r3, r2
 801b5fa:	da07      	bge.n	801b60c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801b5fc:	f1b8 0f00 	cmp.w	r8, #0
 801b600:	d004      	beq.n	801b60c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801b602:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801b606:	682b      	ldr	r3, [r5, #0]
 801b608:	3301      	adds	r3, #1
 801b60a:	602b      	str	r3, [r5, #0]
 801b60c:	2730      	movs	r7, #48	; 0x30
 801b60e:	2c00      	cmp	r4, #0
 801b610:	d04e      	beq.n	801b6b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b612:	682e      	ldr	r6, [r5, #0]
 801b614:	3c01      	subs	r4, #1
 801b616:	42b2      	cmp	r2, r6
 801b618:	b2a4      	uxth	r4, r4
 801b61a:	dd49      	ble.n	801b6b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b61c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801b620:	682b      	ldr	r3, [r5, #0]
 801b622:	3301      	adds	r3, #1
 801b624:	602b      	str	r3, [r5, #0]
 801b626:	e7f2      	b.n	801b60e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801b628:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801b62c:	d01d      	beq.n	801b66a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801b62e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801b632:	d002      	beq.n	801b63a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801b634:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801b638:	e7c9      	b.n	801b5ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801b63a:	4684      	mov	ip, r0
 801b63c:	f04f 0800 	mov.w	r8, #0
 801b640:	2c00      	cmp	r4, #0
 801b642:	d0c6      	beq.n	801b5d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b644:	b947      	cbnz	r7, 801b658 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801b646:	2801      	cmp	r0, #1
 801b648:	d106      	bne.n	801b658 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801b64a:	8814      	ldrh	r4, [r2, #0]
 801b64c:	2c30      	cmp	r4, #48	; 0x30
 801b64e:	bf02      	ittt	eq
 801b650:	3202      	addeq	r2, #2
 801b652:	f8cb 2000 	streq.w	r2, [fp]
 801b656:	4638      	moveq	r0, r7
 801b658:	45bc      	cmp	ip, r7
 801b65a:	da14      	bge.n	801b686 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801b65c:	b2bf      	uxth	r7, r7
 801b65e:	eba7 040c 	sub.w	r4, r7, ip
 801b662:	b2a4      	uxth	r4, r4
 801b664:	46bc      	mov	ip, r7
 801b666:	2600      	movs	r6, #0
 801b668:	e7b3      	b.n	801b5d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b66a:	4684      	mov	ip, r0
 801b66c:	b16c      	cbz	r4, 801b68a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801b66e:	42b8      	cmp	r0, r7
 801b670:	dd00      	ble.n	801b674 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801b672:	b2b8      	uxth	r0, r7
 801b674:	2400      	movs	r4, #0
 801b676:	e003      	b.n	801b680 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801b678:	f04f 0c01 	mov.w	ip, #1
 801b67c:	2400      	movs	r4, #0
 801b67e:	4660      	mov	r0, ip
 801b680:	4626      	mov	r6, r4
 801b682:	46a0      	mov	r8, r4
 801b684:	e7a5      	b.n	801b5d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b686:	2400      	movs	r4, #0
 801b688:	e7ed      	b.n	801b666 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801b68a:	4626      	mov	r6, r4
 801b68c:	46a0      	mov	r8, r4
 801b68e:	e7a0      	b.n	801b5d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b690:	2900      	cmp	r1, #0
 801b692:	d0b0      	beq.n	801b5f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b694:	2720      	movs	r7, #32
 801b696:	682e      	ldr	r6, [r5, #0]
 801b698:	2900      	cmp	r1, #0
 801b69a:	d0ac      	beq.n	801b5f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b69c:	3901      	subs	r1, #1
 801b69e:	4296      	cmp	r6, r2
 801b6a0:	b289      	uxth	r1, r1
 801b6a2:	daa7      	bge.n	801b5f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801b6a4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801b6a8:	682b      	ldr	r3, [r5, #0]
 801b6aa:	3301      	adds	r3, #1
 801b6ac:	602b      	str	r3, [r5, #0]
 801b6ae:	e7f2      	b.n	801b696 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801b6b0:	b188      	cbz	r0, 801b6d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801b6b2:	682b      	ldr	r3, [r5, #0]
 801b6b4:	3801      	subs	r0, #1
 801b6b6:	429a      	cmp	r2, r3
 801b6b8:	b280      	uxth	r0, r0
 801b6ba:	dd0c      	ble.n	801b6d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801b6bc:	f8db 3000 	ldr.w	r3, [fp]
 801b6c0:	1c9c      	adds	r4, r3, #2
 801b6c2:	f8cb 4000 	str.w	r4, [fp]
 801b6c6:	881c      	ldrh	r4, [r3, #0]
 801b6c8:	682b      	ldr	r3, [r5, #0]
 801b6ca:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801b6ce:	682b      	ldr	r3, [r5, #0]
 801b6d0:	3301      	adds	r3, #1
 801b6d2:	602b      	str	r3, [r5, #0]
 801b6d4:	e7ec      	b.n	801b6b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b6d6:	2620      	movs	r6, #32
 801b6d8:	b151      	cbz	r1, 801b6f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801b6da:	6828      	ldr	r0, [r5, #0]
 801b6dc:	3901      	subs	r1, #1
 801b6de:	4282      	cmp	r2, r0
 801b6e0:	b289      	uxth	r1, r1
 801b6e2:	dd05      	ble.n	801b6f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801b6e4:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801b6e8:	682b      	ldr	r3, [r5, #0]
 801b6ea:	3301      	adds	r3, #1
 801b6ec:	602b      	str	r3, [r5, #0]
 801b6ee:	e7f3      	b.n	801b6d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801b6f0:	b005      	add	sp, #20
 801b6f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b6f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801b6f6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b6fa:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801b6fe:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801b702:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801b706:	2400      	movs	r4, #0
 801b708:	8014      	strh	r4, [r2, #0]
 801b70a:	701c      	strb	r4, [r3, #0]
 801b70c:	f888 4000 	strb.w	r4, [r8]
 801b710:	f88c 4000 	strb.w	r4, [ip]
 801b714:	f88e 4000 	strb.w	r4, [lr]
 801b718:	703c      	strb	r4, [r7, #0]
 801b71a:	6804      	ldr	r4, [r0, #0]
 801b71c:	b1a4      	cbz	r4, 801b748 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801b71e:	8824      	ldrh	r4, [r4, #0]
 801b720:	f04f 0901 	mov.w	r9, #1
 801b724:	b314      	cbz	r4, 801b76c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b726:	2c2b      	cmp	r4, #43	; 0x2b
 801b728:	d001      	beq.n	801b72e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801b72a:	2c20      	cmp	r4, #32
 801b72c:	d110      	bne.n	801b750 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801b72e:	8014      	strh	r4, [r2, #0]
 801b730:	6804      	ldr	r4, [r0, #0]
 801b732:	b10c      	cbz	r4, 801b738 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801b734:	3402      	adds	r4, #2
 801b736:	6004      	str	r4, [r0, #0]
 801b738:	680c      	ldr	r4, [r1, #0]
 801b73a:	b10c      	cbz	r4, 801b740 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801b73c:	3401      	adds	r4, #1
 801b73e:	600c      	str	r4, [r1, #0]
 801b740:	6804      	ldr	r4, [r0, #0]
 801b742:	b17c      	cbz	r4, 801b764 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801b744:	8824      	ldrh	r4, [r4, #0]
 801b746:	e7ed      	b.n	801b724 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801b748:	680c      	ldr	r4, [r1, #0]
 801b74a:	b17c      	cbz	r4, 801b76c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b74c:	7824      	ldrb	r4, [r4, #0]
 801b74e:	e7e7      	b.n	801b720 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801b750:	2c2d      	cmp	r4, #45	; 0x2d
 801b752:	d102      	bne.n	801b75a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801b754:	f883 9000 	strb.w	r9, [r3]
 801b758:	e7ea      	b.n	801b730 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801b75a:	2c23      	cmp	r4, #35	; 0x23
 801b75c:	d107      	bne.n	801b76e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801b75e:	f888 9000 	strb.w	r9, [r8]
 801b762:	e7e5      	b.n	801b730 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801b764:	680c      	ldr	r4, [r1, #0]
 801b766:	b10c      	cbz	r4, 801b76c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b768:	7824      	ldrb	r4, [r4, #0]
 801b76a:	e7db      	b.n	801b724 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801b76c:	2400      	movs	r4, #0
 801b76e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801b772:	2b09      	cmp	r3, #9
 801b774:	d901      	bls.n	801b77a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801b776:	2c2a      	cmp	r4, #42	; 0x2a
 801b778:	d122      	bne.n	801b7c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801b77a:	2301      	movs	r3, #1
 801b77c:	2c30      	cmp	r4, #48	; 0x30
 801b77e:	f88e 3000 	strb.w	r3, [lr]
 801b782:	d10d      	bne.n	801b7a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801b784:	f88c 3000 	strb.w	r3, [ip]
 801b788:	6803      	ldr	r3, [r0, #0]
 801b78a:	b10b      	cbz	r3, 801b790 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801b78c:	3302      	adds	r3, #2
 801b78e:	6003      	str	r3, [r0, #0]
 801b790:	680b      	ldr	r3, [r1, #0]
 801b792:	b10b      	cbz	r3, 801b798 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801b794:	3301      	adds	r3, #1
 801b796:	600b      	str	r3, [r1, #0]
 801b798:	6803      	ldr	r3, [r0, #0]
 801b79a:	2b00      	cmp	r3, #0
 801b79c:	d02f      	beq.n	801b7fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801b79e:	881c      	ldrh	r4, [r3, #0]
 801b7a0:	2c2a      	cmp	r4, #42	; 0x2a
 801b7a2:	d135      	bne.n	801b810 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801b7a4:	f04f 33ff 	mov.w	r3, #4294967295
 801b7a8:	6033      	str	r3, [r6, #0]
 801b7aa:	6803      	ldr	r3, [r0, #0]
 801b7ac:	b10b      	cbz	r3, 801b7b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801b7ae:	3302      	adds	r3, #2
 801b7b0:	6003      	str	r3, [r0, #0]
 801b7b2:	680b      	ldr	r3, [r1, #0]
 801b7b4:	b10b      	cbz	r3, 801b7ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801b7b6:	3301      	adds	r3, #1
 801b7b8:	600b      	str	r3, [r1, #0]
 801b7ba:	6803      	ldr	r3, [r0, #0]
 801b7bc:	b31b      	cbz	r3, 801b806 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801b7be:	881c      	ldrh	r4, [r3, #0]
 801b7c0:	2c2e      	cmp	r4, #46	; 0x2e
 801b7c2:	d11a      	bne.n	801b7fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801b7c4:	2301      	movs	r3, #1
 801b7c6:	703b      	strb	r3, [r7, #0]
 801b7c8:	6803      	ldr	r3, [r0, #0]
 801b7ca:	b10b      	cbz	r3, 801b7d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801b7cc:	3302      	adds	r3, #2
 801b7ce:	6003      	str	r3, [r0, #0]
 801b7d0:	680b      	ldr	r3, [r1, #0]
 801b7d2:	b10b      	cbz	r3, 801b7d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801b7d4:	3301      	adds	r3, #1
 801b7d6:	600b      	str	r3, [r1, #0]
 801b7d8:	6803      	ldr	r3, [r0, #0]
 801b7da:	2b00      	cmp	r3, #0
 801b7dc:	d036      	beq.n	801b84c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801b7de:	881b      	ldrh	r3, [r3, #0]
 801b7e0:	2b2a      	cmp	r3, #42	; 0x2a
 801b7e2:	d137      	bne.n	801b854 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801b7e4:	f04f 33ff 	mov.w	r3, #4294967295
 801b7e8:	602b      	str	r3, [r5, #0]
 801b7ea:	6803      	ldr	r3, [r0, #0]
 801b7ec:	b10b      	cbz	r3, 801b7f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801b7ee:	3302      	adds	r3, #2
 801b7f0:	6003      	str	r3, [r0, #0]
 801b7f2:	680b      	ldr	r3, [r1, #0]
 801b7f4:	b10b      	cbz	r3, 801b7fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801b7f6:	3301      	adds	r3, #1
 801b7f8:	600b      	str	r3, [r1, #0]
 801b7fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b7fe:	680c      	ldr	r4, [r1, #0]
 801b800:	b134      	cbz	r4, 801b810 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801b802:	7824      	ldrb	r4, [r4, #0]
 801b804:	e7cc      	b.n	801b7a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801b806:	680b      	ldr	r3, [r1, #0]
 801b808:	2b00      	cmp	r3, #0
 801b80a:	d0f6      	beq.n	801b7fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801b80c:	781c      	ldrb	r4, [r3, #0]
 801b80e:	e7d7      	b.n	801b7c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801b810:	2300      	movs	r3, #0
 801b812:	6033      	str	r3, [r6, #0]
 801b814:	220a      	movs	r2, #10
 801b816:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801b81a:	fa1f f38c 	uxth.w	r3, ip
 801b81e:	2b09      	cmp	r3, #9
 801b820:	d8ce      	bhi.n	801b7c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801b822:	6833      	ldr	r3, [r6, #0]
 801b824:	fb02 c303 	mla	r3, r2, r3, ip
 801b828:	6033      	str	r3, [r6, #0]
 801b82a:	6803      	ldr	r3, [r0, #0]
 801b82c:	b10b      	cbz	r3, 801b832 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801b82e:	3302      	adds	r3, #2
 801b830:	6003      	str	r3, [r0, #0]
 801b832:	680b      	ldr	r3, [r1, #0]
 801b834:	b10b      	cbz	r3, 801b83a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801b836:	3301      	adds	r3, #1
 801b838:	600b      	str	r3, [r1, #0]
 801b83a:	6803      	ldr	r3, [r0, #0]
 801b83c:	b10b      	cbz	r3, 801b842 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801b83e:	881c      	ldrh	r4, [r3, #0]
 801b840:	e7e9      	b.n	801b816 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801b842:	680c      	ldr	r4, [r1, #0]
 801b844:	2c00      	cmp	r4, #0
 801b846:	d0e6      	beq.n	801b816 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801b848:	7824      	ldrb	r4, [r4, #0]
 801b84a:	e7e4      	b.n	801b816 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801b84c:	680b      	ldr	r3, [r1, #0]
 801b84e:	b10b      	cbz	r3, 801b854 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801b850:	781b      	ldrb	r3, [r3, #0]
 801b852:	e7c5      	b.n	801b7e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801b854:	2200      	movs	r2, #0
 801b856:	602a      	str	r2, [r5, #0]
 801b858:	240a      	movs	r4, #10
 801b85a:	3b30      	subs	r3, #48	; 0x30
 801b85c:	b29e      	uxth	r6, r3
 801b85e:	2e09      	cmp	r6, #9
 801b860:	682a      	ldr	r2, [r5, #0]
 801b862:	d813      	bhi.n	801b88c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801b864:	fb04 3302 	mla	r3, r4, r2, r3
 801b868:	602b      	str	r3, [r5, #0]
 801b86a:	6803      	ldr	r3, [r0, #0]
 801b86c:	b10b      	cbz	r3, 801b872 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801b86e:	3302      	adds	r3, #2
 801b870:	6003      	str	r3, [r0, #0]
 801b872:	680b      	ldr	r3, [r1, #0]
 801b874:	b10b      	cbz	r3, 801b87a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801b876:	3301      	adds	r3, #1
 801b878:	600b      	str	r3, [r1, #0]
 801b87a:	6803      	ldr	r3, [r0, #0]
 801b87c:	b10b      	cbz	r3, 801b882 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801b87e:	881b      	ldrh	r3, [r3, #0]
 801b880:	e7eb      	b.n	801b85a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801b882:	680b      	ldr	r3, [r1, #0]
 801b884:	2b00      	cmp	r3, #0
 801b886:	d0e8      	beq.n	801b85a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801b888:	781b      	ldrb	r3, [r3, #0]
 801b88a:	e7e6      	b.n	801b85a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801b88c:	2a06      	cmp	r2, #6
 801b88e:	bfa8      	it	ge
 801b890:	2206      	movge	r2, #6
 801b892:	602a      	str	r2, [r5, #0]
 801b894:	e7b1      	b.n	801b7fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801b896 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801b896:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b89a:	b0a3      	sub	sp, #140	; 0x8c
 801b89c:	2600      	movs	r6, #0
 801b89e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801b8a2:	4607      	mov	r7, r0
 801b8a4:	4688      	mov	r8, r1
 801b8a6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801b8aa:	4631      	mov	r1, r6
 801b8ac:	2242      	movs	r2, #66	; 0x42
 801b8ae:	4648      	mov	r0, r9
 801b8b0:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801b8b2:	960d      	str	r6, [sp, #52]	; 0x34
 801b8b4:	f012 f989 	bl	802dbca <memset>
 801b8b8:	b15f      	cbz	r7, 801b8d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801b8ba:	f108 3aff 	add.w	sl, r8, #4294967295
 801b8be:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b8c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b8c2:	b152      	cbz	r2, 801b8da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801b8c4:	8812      	ldrh	r2, [r2, #0]
 801b8c6:	b10a      	cbz	r2, 801b8cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801b8c8:	459a      	cmp	sl, r3
 801b8ca:	dc2e      	bgt.n	801b92a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801b8cc:	2200      	movs	r2, #0
 801b8ce:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801b8d2:	4638      	mov	r0, r7
 801b8d4:	b023      	add	sp, #140	; 0x8c
 801b8d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b8da:	9a08      	ldr	r2, [sp, #32]
 801b8dc:	2a00      	cmp	r2, #0
 801b8de:	d0f5      	beq.n	801b8cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801b8e0:	7812      	ldrb	r2, [r2, #0]
 801b8e2:	e7f0      	b.n	801b8c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801b8e4:	2d00      	cmp	r5, #0
 801b8e6:	d0ea      	beq.n	801b8be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801b8e8:	782a      	ldrb	r2, [r5, #0]
 801b8ea:	b142      	cbz	r2, 801b8fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801b8ec:	2a25      	cmp	r2, #37	; 0x25
 801b8ee:	d001      	beq.n	801b8f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801b8f0:	459a      	cmp	sl, r3
 801b8f2:	dc08      	bgt.n	801b906 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801b8f4:	f1bb 0f00 	cmp.w	fp, #0
 801b8f8:	d121      	bne.n	801b93e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801b8fa:	2d00      	cmp	r5, #0
 801b8fc:	d0df      	beq.n	801b8be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801b8fe:	782a      	ldrb	r2, [r5, #0]
 801b900:	f04f 0b00 	mov.w	fp, #0
 801b904:	e01d      	b.n	801b942 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801b906:	f1bb 0f00 	cmp.w	fp, #0
 801b90a:	d078      	beq.n	801b9fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801b90c:	f8bb 2000 	ldrh.w	r2, [fp]
 801b910:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801b914:	f1bb 0f00 	cmp.w	fp, #0
 801b918:	d002      	beq.n	801b920 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801b91a:	f10b 0202 	add.w	r2, fp, #2
 801b91e:	9209      	str	r2, [sp, #36]	; 0x24
 801b920:	b10d      	cbz	r5, 801b926 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801b922:	3501      	adds	r5, #1
 801b924:	9508      	str	r5, [sp, #32]
 801b926:	3301      	adds	r3, #1
 801b928:	930d      	str	r3, [sp, #52]	; 0x34
 801b92a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801b92e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b930:	f1bb 0f00 	cmp.w	fp, #0
 801b934:	d0d6      	beq.n	801b8e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801b936:	f8bb 2000 	ldrh.w	r2, [fp]
 801b93a:	2a00      	cmp	r2, #0
 801b93c:	d1d6      	bne.n	801b8ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801b93e:	f8bb 2000 	ldrh.w	r2, [fp]
 801b942:	2a00      	cmp	r2, #0
 801b944:	d0bb      	beq.n	801b8be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801b946:	459a      	cmp	sl, r3
 801b948:	ddb9      	ble.n	801b8be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801b94a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801b94e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801b952:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801b956:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801b95a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801b95e:	960e      	str	r6, [sp, #56]	; 0x38
 801b960:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801b964:	960f      	str	r6, [sp, #60]	; 0x3c
 801b966:	f1bb 0f00 	cmp.w	fp, #0
 801b96a:	d002      	beq.n	801b972 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801b96c:	f10b 0302 	add.w	r3, fp, #2
 801b970:	9309      	str	r3, [sp, #36]	; 0x24
 801b972:	b10d      	cbz	r5, 801b978 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801b974:	1c6b      	adds	r3, r5, #1
 801b976:	9308      	str	r3, [sp, #32]
 801b978:	ab0f      	add	r3, sp, #60	; 0x3c
 801b97a:	9305      	str	r3, [sp, #20]
 801b97c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801b980:	9304      	str	r3, [sp, #16]
 801b982:	ab0e      	add	r3, sp, #56	; 0x38
 801b984:	9303      	str	r3, [sp, #12]
 801b986:	ab0c      	add	r3, sp, #48	; 0x30
 801b988:	9302      	str	r3, [sp, #8]
 801b98a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801b98e:	9301      	str	r3, [sp, #4]
 801b990:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801b994:	9300      	str	r3, [sp, #0]
 801b996:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801b99a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801b99e:	a908      	add	r1, sp, #32
 801b9a0:	a809      	add	r0, sp, #36	; 0x24
 801b9a2:	f7ff fea8 	bl	801b6f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801b9a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b9a8:	2b00      	cmp	r3, #0
 801b9aa:	bfbe      	ittt	lt
 801b9ac:	6823      	ldrlt	r3, [r4, #0]
 801b9ae:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801b9b2:	930e      	strlt	r3, [sp, #56]	; 0x38
 801b9b4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801b9b6:	bfb8      	it	lt
 801b9b8:	3404      	addlt	r4, #4
 801b9ba:	2b00      	cmp	r3, #0
 801b9bc:	bfb8      	it	lt
 801b9be:	6823      	ldrlt	r3, [r4, #0]
 801b9c0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801b9c4:	bfbe      	ittt	lt
 801b9c6:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801b9ca:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801b9cc:	3404      	addlt	r4, #4
 801b9ce:	b1d9      	cbz	r1, 801ba08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801b9d0:	880b      	ldrh	r3, [r1, #0]
 801b9d2:	2b69      	cmp	r3, #105	; 0x69
 801b9d4:	d01f      	beq.n	801ba16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801b9d6:	d82f      	bhi.n	801ba38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801b9d8:	2b58      	cmp	r3, #88	; 0x58
 801b9da:	d01c      	beq.n	801ba16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801b9dc:	d818      	bhi.n	801ba10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801b9de:	2b25      	cmp	r3, #37	; 0x25
 801b9e0:	d034      	beq.n	801ba4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801b9e2:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801b9e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b9e8:	f1bb 0f00 	cmp.w	fp, #0
 801b9ec:	f000 80b8 	beq.w	801bb60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801b9f0:	f8bb 5000 	ldrh.w	r5, [fp]
 801b9f4:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801b9f8:	3301      	adds	r3, #1
 801b9fa:	930d      	str	r3, [sp, #52]	; 0x34
 801b9fc:	e029      	b.n	801ba52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801b9fe:	b10d      	cbz	r5, 801ba04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801ba00:	782a      	ldrb	r2, [r5, #0]
 801ba02:	e785      	b.n	801b910 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801ba04:	462a      	mov	r2, r5
 801ba06:	e783      	b.n	801b910 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801ba08:	2a00      	cmp	r2, #0
 801ba0a:	d0ea      	beq.n	801b9e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801ba0c:	7813      	ldrb	r3, [r2, #0]
 801ba0e:	e7e0      	b.n	801b9d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801ba10:	3b63      	subs	r3, #99	; 0x63
 801ba12:	2b01      	cmp	r3, #1
 801ba14:	d8e5      	bhi.n	801b9e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801ba16:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801ba1a:	b329      	cbz	r1, 801ba68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801ba1c:	880b      	ldrh	r3, [r1, #0]
 801ba1e:	2b69      	cmp	r3, #105	; 0x69
 801ba20:	d063      	beq.n	801baea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801ba22:	d825      	bhi.n	801ba70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801ba24:	2b63      	cmp	r3, #99	; 0x63
 801ba26:	d038      	beq.n	801ba9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801ba28:	2b64      	cmp	r3, #100	; 0x64
 801ba2a:	d05e      	beq.n	801baea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801ba2c:	2b58      	cmp	r3, #88	; 0x58
 801ba2e:	d07b      	beq.n	801bb28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801ba30:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801ba34:	4625      	mov	r5, r4
 801ba36:	e036      	b.n	801baa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801ba38:	2b73      	cmp	r3, #115	; 0x73
 801ba3a:	d0ec      	beq.n	801ba16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801ba3c:	d802      	bhi.n	801ba44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801ba3e:	2b6f      	cmp	r3, #111	; 0x6f
 801ba40:	d1cf      	bne.n	801b9e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801ba42:	e7e8      	b.n	801ba16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801ba44:	2b75      	cmp	r3, #117	; 0x75
 801ba46:	d0e6      	beq.n	801ba16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801ba48:	2b78      	cmp	r3, #120	; 0x78
 801ba4a:	e7f9      	b.n	801ba40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801ba4c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ba4e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801ba52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ba54:	b10b      	cbz	r3, 801ba5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801ba56:	3302      	adds	r3, #2
 801ba58:	9309      	str	r3, [sp, #36]	; 0x24
 801ba5a:	9b08      	ldr	r3, [sp, #32]
 801ba5c:	2b00      	cmp	r3, #0
 801ba5e:	f43f af2e 	beq.w	801b8be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ba62:	3301      	adds	r3, #1
 801ba64:	9308      	str	r3, [sp, #32]
 801ba66:	e72a      	b.n	801b8be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ba68:	2a00      	cmp	r2, #0
 801ba6a:	d0e1      	beq.n	801ba30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801ba6c:	7813      	ldrb	r3, [r2, #0]
 801ba6e:	e7d6      	b.n	801ba1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801ba70:	2b73      	cmp	r3, #115	; 0x73
 801ba72:	d036      	beq.n	801bae2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801ba74:	d807      	bhi.n	801ba86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801ba76:	2b6f      	cmp	r3, #111	; 0x6f
 801ba78:	d1da      	bne.n	801ba30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801ba7a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ba7c:	1d25      	adds	r5, r4, #4
 801ba7e:	eba8 0202 	sub.w	r2, r8, r2
 801ba82:	2308      	movs	r3, #8
 801ba84:	e04a      	b.n	801bb1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801ba86:	2b75      	cmp	r3, #117	; 0x75
 801ba88:	d043      	beq.n	801bb12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801ba8a:	2b78      	cmp	r3, #120	; 0x78
 801ba8c:	d1d0      	bne.n	801ba30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801ba8e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ba90:	1d25      	adds	r5, r4, #4
 801ba92:	eba8 0202 	sub.w	r2, r8, r2
 801ba96:	2310      	movs	r3, #16
 801ba98:	e040      	b.n	801bb1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801ba9a:	6823      	ldr	r3, [r4, #0]
 801ba9c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801baa0:	1d25      	adds	r5, r4, #4
 801baa2:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801baa6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801baa8:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801baac:	2b00      	cmp	r3, #0
 801baae:	d052      	beq.n	801bb56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801bab0:	881a      	ldrh	r2, [r3, #0]
 801bab2:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bab6:	a80d      	add	r0, sp, #52	; 0x34
 801bab8:	9005      	str	r0, [sp, #20]
 801baba:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801babe:	9004      	str	r0, [sp, #16]
 801bac0:	980e      	ldr	r0, [sp, #56]	; 0x38
 801bac2:	9003      	str	r0, [sp, #12]
 801bac4:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801bac8:	9002      	str	r0, [sp, #8]
 801baca:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801bacc:	9001      	str	r0, [sp, #4]
 801bace:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801bad2:	9000      	str	r0, [sp, #0]
 801bad4:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801bad8:	a810      	add	r0, sp, #64	; 0x40
 801bada:	f7ff fd49 	bl	801b570 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801bade:	462c      	mov	r4, r5
 801bae0:	e7b7      	b.n	801ba52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801bae2:	6823      	ldr	r3, [r4, #0]
 801bae4:	1d25      	adds	r5, r4, #4
 801bae6:	9310      	str	r3, [sp, #64]	; 0x40
 801bae8:	e7dd      	b.n	801baa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801baea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801baec:	6820      	ldr	r0, [r4, #0]
 801baee:	eba8 0202 	sub.w	r2, r8, r2
 801baf2:	230a      	movs	r3, #10
 801baf4:	b292      	uxth	r2, r2
 801baf6:	4649      	mov	r1, r9
 801baf8:	f7ff fce4 	bl	801b4c4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801bafc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801bb00:	2b2d      	cmp	r3, #45	; 0x2d
 801bb02:	f104 0504 	add.w	r5, r4, #4
 801bb06:	d1ce      	bne.n	801baa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bb08:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bb0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bb0e:	3302      	adds	r3, #2
 801bb10:	e7e9      	b.n	801bae6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801bb12:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bb14:	1d25      	adds	r5, r4, #4
 801bb16:	eba8 0202 	sub.w	r2, r8, r2
 801bb1a:	230a      	movs	r3, #10
 801bb1c:	b292      	uxth	r2, r2
 801bb1e:	4649      	mov	r1, r9
 801bb20:	6820      	ldr	r0, [r4, #0]
 801bb22:	f7ff fcfb 	bl	801b51c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801bb26:	e7be      	b.n	801baa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bb28:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bb2a:	6820      	ldr	r0, [r4, #0]
 801bb2c:	eba8 0202 	sub.w	r2, r8, r2
 801bb30:	b292      	uxth	r2, r2
 801bb32:	2310      	movs	r3, #16
 801bb34:	4649      	mov	r1, r9
 801bb36:	f7ff fcf1 	bl	801b51c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801bb3a:	1d25      	adds	r5, r4, #4
 801bb3c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801bb40:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801bb44:	2b00      	cmp	r3, #0
 801bb46:	d0ae      	beq.n	801baa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bb48:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801bb4c:	2919      	cmp	r1, #25
 801bb4e:	d8f7      	bhi.n	801bb40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801bb50:	3b20      	subs	r3, #32
 801bb52:	8013      	strh	r3, [r2, #0]
 801bb54:	e7f4      	b.n	801bb40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801bb56:	9a08      	ldr	r2, [sp, #32]
 801bb58:	2a00      	cmp	r2, #0
 801bb5a:	d0aa      	beq.n	801bab2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801bb5c:	7812      	ldrb	r2, [r2, #0]
 801bb5e:	e7a8      	b.n	801bab2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801bb60:	2d00      	cmp	r5, #0
 801bb62:	f43f af47 	beq.w	801b9f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801bb66:	782d      	ldrb	r5, [r5, #0]
 801bb68:	e744      	b.n	801b9f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801bb6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801bb6a:	b507      	push	{r0, r1, r2, lr}
 801bb6c:	9300      	str	r3, [sp, #0]
 801bb6e:	4613      	mov	r3, r2
 801bb70:	2200      	movs	r2, #0
 801bb72:	f7ff fe90 	bl	801b896 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801bb76:	b003      	add	sp, #12
 801bb78:	f85d fb04 	ldr.w	pc, [sp], #4

0801bb7c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801bb7c:	b40c      	push	{r2, r3}
 801bb7e:	b507      	push	{r0, r1, r2, lr}
 801bb80:	ab04      	add	r3, sp, #16
 801bb82:	f853 2b04 	ldr.w	r2, [r3], #4
 801bb86:	9301      	str	r3, [sp, #4]
 801bb88:	f7ff ffef 	bl	801bb6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801bb8c:	b003      	add	sp, #12
 801bb8e:	f85d eb04 	ldr.w	lr, [sp], #4
 801bb92:	b002      	add	sp, #8
 801bb94:	4770      	bx	lr
	...

0801bb98 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801bb98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb9c:	b0c5      	sub	sp, #276	; 0x114
 801bb9e:	2400      	movs	r4, #0
 801bba0:	af11      	add	r7, sp, #68	; 0x44
 801bba2:	4606      	mov	r6, r0
 801bba4:	468a      	mov	sl, r1
 801bba6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801bbaa:	4621      	mov	r1, r4
 801bbac:	22c8      	movs	r2, #200	; 0xc8
 801bbae:	4638      	mov	r0, r7
 801bbb0:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 801bbb4:	940d      	str	r4, [sp, #52]	; 0x34
 801bbb6:	f012 f808 	bl	802dbca <memset>
 801bbba:	b16e      	cbz	r6, 801bbd8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801bbbc:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 801be60 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 801bbc0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bbc2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bbc4:	b162      	cbz	r2, 801bbe0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801bbc6:	8812      	ldrh	r2, [r2, #0]
 801bbc8:	b11a      	cbz	r2, 801bbd2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801bbca:	f10a 31ff 	add.w	r1, sl, #4294967295
 801bbce:	4299      	cmp	r1, r3
 801bbd0:	dc2e      	bgt.n	801bc30 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 801bbd2:	2200      	movs	r2, #0
 801bbd4:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801bbd8:	4630      	mov	r0, r6
 801bbda:	b045      	add	sp, #276	; 0x114
 801bbdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bbe0:	9a08      	ldr	r2, [sp, #32]
 801bbe2:	2a00      	cmp	r2, #0
 801bbe4:	d0f5      	beq.n	801bbd2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801bbe6:	7812      	ldrb	r2, [r2, #0]
 801bbe8:	e7ee      	b.n	801bbc8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801bbea:	2d00      	cmp	r5, #0
 801bbec:	d0e8      	beq.n	801bbc0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bbee:	782a      	ldrb	r2, [r5, #0]
 801bbf0:	b142      	cbz	r2, 801bc04 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 801bbf2:	2a25      	cmp	r2, #37	; 0x25
 801bbf4:	d001      	beq.n	801bbfa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801bbf6:	4299      	cmp	r1, r3
 801bbf8:	dc08      	bgt.n	801bc0c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801bbfa:	f1b8 0f00 	cmp.w	r8, #0
 801bbfe:	d121      	bne.n	801bc44 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 801bc00:	2d00      	cmp	r5, #0
 801bc02:	d0dd      	beq.n	801bbc0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bc04:	782a      	ldrb	r2, [r5, #0]
 801bc06:	f04f 0800 	mov.w	r8, #0
 801bc0a:	e01d      	b.n	801bc48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801bc0c:	f1b8 0f00 	cmp.w	r8, #0
 801bc10:	d07f      	beq.n	801bd12 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801bc12:	f8b8 2000 	ldrh.w	r2, [r8]
 801bc16:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801bc1a:	f1b8 0f00 	cmp.w	r8, #0
 801bc1e:	d002      	beq.n	801bc26 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 801bc20:	f108 0202 	add.w	r2, r8, #2
 801bc24:	9209      	str	r2, [sp, #36]	; 0x24
 801bc26:	b10d      	cbz	r5, 801bc2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801bc28:	3501      	adds	r5, #1
 801bc2a:	9508      	str	r5, [sp, #32]
 801bc2c:	3301      	adds	r3, #1
 801bc2e:	930d      	str	r3, [sp, #52]	; 0x34
 801bc30:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 801bc34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bc36:	f1b8 0f00 	cmp.w	r8, #0
 801bc3a:	d0d6      	beq.n	801bbea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 801bc3c:	f8b8 2000 	ldrh.w	r2, [r8]
 801bc40:	2a00      	cmp	r2, #0
 801bc42:	d1d6      	bne.n	801bbf2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 801bc44:	f8b8 2000 	ldrh.w	r2, [r8]
 801bc48:	2a00      	cmp	r2, #0
 801bc4a:	d0b9      	beq.n	801bbc0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bc4c:	4299      	cmp	r1, r3
 801bc4e:	ddb7      	ble.n	801bbc0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bc50:	2300      	movs	r3, #0
 801bc52:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bc56:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801bc5a:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801bc5e:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 801bc62:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801bc66:	930e      	str	r3, [sp, #56]	; 0x38
 801bc68:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801bc6c:	930f      	str	r3, [sp, #60]	; 0x3c
 801bc6e:	f1b8 0f00 	cmp.w	r8, #0
 801bc72:	d002      	beq.n	801bc7a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 801bc74:	f108 0302 	add.w	r3, r8, #2
 801bc78:	9309      	str	r3, [sp, #36]	; 0x24
 801bc7a:	b10d      	cbz	r5, 801bc80 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 801bc7c:	1c6b      	adds	r3, r5, #1
 801bc7e:	9308      	str	r3, [sp, #32]
 801bc80:	ab0f      	add	r3, sp, #60	; 0x3c
 801bc82:	9305      	str	r3, [sp, #20]
 801bc84:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801bc88:	9304      	str	r3, [sp, #16]
 801bc8a:	ab0e      	add	r3, sp, #56	; 0x38
 801bc8c:	9303      	str	r3, [sp, #12]
 801bc8e:	ab0c      	add	r3, sp, #48	; 0x30
 801bc90:	9302      	str	r3, [sp, #8]
 801bc92:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801bc96:	9301      	str	r3, [sp, #4]
 801bc98:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801bc9c:	9300      	str	r3, [sp, #0]
 801bc9e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801bca2:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801bca6:	a908      	add	r1, sp, #32
 801bca8:	a809      	add	r0, sp, #36	; 0x24
 801bcaa:	f7ff fd24 	bl	801b6f6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801bcae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bcb0:	2b00      	cmp	r3, #0
 801bcb2:	da0b      	bge.n	801bccc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 801bcb4:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801bcb8:	edd3 7a00 	vldr	s15, [r3]
 801bcbc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801bcc0:	3401      	adds	r4, #1
 801bcc2:	ee17 3a90 	vmov	r3, s15
 801bcc6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bcca:	930e      	str	r3, [sp, #56]	; 0x38
 801bccc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bcce:	2b00      	cmp	r3, #0
 801bcd0:	da0b      	bge.n	801bcea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801bcd2:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801bcd6:	edd3 7a00 	vldr	s15, [r3]
 801bcda:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801bcde:	3401      	adds	r4, #1
 801bce0:	ee17 3a90 	vmov	r3, s15
 801bce4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bce8:	930f      	str	r3, [sp, #60]	; 0x3c
 801bcea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bcec:	b1b3      	cbz	r3, 801bd1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801bcee:	881a      	ldrh	r2, [r3, #0]
 801bcf0:	2a25      	cmp	r2, #37	; 0x25
 801bcf2:	d018      	beq.n	801bd26 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 801bcf4:	2a66      	cmp	r2, #102	; 0x66
 801bcf6:	d01c      	beq.n	801bd32 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801bcf8:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801bcfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bcfe:	f1b8 0f00 	cmp.w	r8, #0
 801bd02:	f000 8121 	beq.w	801bf48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801bd06:	f8b8 5000 	ldrh.w	r5, [r8]
 801bd0a:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801bd0e:	3301      	adds	r3, #1
 801bd10:	e00d      	b.n	801bd2e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801bd12:	b10d      	cbz	r5, 801bd18 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801bd14:	782a      	ldrb	r2, [r5, #0]
 801bd16:	e77e      	b.n	801bc16 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801bd18:	462a      	mov	r2, r5
 801bd1a:	e77c      	b.n	801bc16 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801bd1c:	9b08      	ldr	r3, [sp, #32]
 801bd1e:	2b00      	cmp	r3, #0
 801bd20:	d0ea      	beq.n	801bcf8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801bd22:	781a      	ldrb	r2, [r3, #0]
 801bd24:	e7e4      	b.n	801bcf0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801bd26:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bd28:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801bd2c:	3302      	adds	r3, #2
 801bd2e:	930d      	str	r3, [sp, #52]	; 0x34
 801bd30:	e041      	b.n	801bdb6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801bd32:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801bd36:	edd3 7a00 	vldr	s15, [r3]
 801bd3a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bd3e:	9710      	str	r7, [sp, #64]	; 0x40
 801bd40:	3401      	adds	r4, #1
 801bd42:	b923      	cbnz	r3, 801bd4e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 801bd44:	2301      	movs	r3, #1
 801bd46:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801bd4a:	2306      	movs	r3, #6
 801bd4c:	930f      	str	r3, [sp, #60]	; 0x3c
 801bd4e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801bd52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd56:	bf48      	it	mi
 801bd58:	eef1 7a67 	vnegmi.f32	s15, s15
 801bd5c:	eeb0 7ae7 	vabs.f32	s14, s15
 801bd60:	bf48      	it	mi
 801bd62:	232d      	movmi	r3, #45	; 0x2d
 801bd64:	eeb4 7a45 	vcmp.f32	s14, s10
 801bd68:	bf48      	it	mi
 801bd6a:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 801bd6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd72:	dd2b      	ble.n	801bdcc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 801bd74:	4b3b      	ldr	r3, [pc, #236]	; (801be64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801bd76:	9311      	str	r3, [sp, #68]	; 0x44
 801bd78:	2366      	movs	r3, #102	; 0x66
 801bd7a:	9312      	str	r3, [sp, #72]	; 0x48
 801bd7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bd7e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801bd82:	2b00      	cmp	r3, #0
 801bd84:	f000 80da 	beq.w	801bf3c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801bd88:	881a      	ldrh	r2, [r3, #0]
 801bd8a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bd8e:	a80d      	add	r0, sp, #52	; 0x34
 801bd90:	9005      	str	r0, [sp, #20]
 801bd92:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801bd96:	9004      	str	r0, [sp, #16]
 801bd98:	980e      	ldr	r0, [sp, #56]	; 0x38
 801bd9a:	9003      	str	r0, [sp, #12]
 801bd9c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801bda0:	9002      	str	r0, [sp, #8]
 801bda2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801bda4:	9001      	str	r0, [sp, #4]
 801bda6:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801bdaa:	9000      	str	r0, [sp, #0]
 801bdac:	e9cd a606 	strd	sl, r6, [sp, #24]
 801bdb0:	a810      	add	r0, sp, #64	; 0x40
 801bdb2:	f7ff fbdd 	bl	801b570 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801bdb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bdb8:	b10b      	cbz	r3, 801bdbe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801bdba:	3302      	adds	r3, #2
 801bdbc:	9309      	str	r3, [sp, #36]	; 0x24
 801bdbe:	9b08      	ldr	r3, [sp, #32]
 801bdc0:	2b00      	cmp	r3, #0
 801bdc2:	f43f aefd 	beq.w	801bbc0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bdc6:	3301      	adds	r3, #1
 801bdc8:	9308      	str	r3, [sp, #32]
 801bdca:	e6f9      	b.n	801bbc0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bdcc:	eef4 7a67 	vcmp.f32	s15, s15
 801bdd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdd4:	d63a      	bvs.n	801be4c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801bdd6:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801bdda:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 801bdde:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 801bde2:	eeb0 6a67 	vmov.f32	s12, s15
 801bde6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bdea:	eef0 5a47 	vmov.f32	s11, s14
 801bdee:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801bdf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdf6:	da2d      	bge.n	801be54 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801bdf8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bdfa:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801bdfe:	2100      	movs	r1, #0
 801be00:	eef0 4a46 	vmov.f32	s9, s12
 801be04:	ebaa 0202 	sub.w	r2, sl, r2
 801be08:	eef4 6ac6 	vcmpe.f32	s13, s12
 801be0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801be10:	b28d      	uxth	r5, r1
 801be12:	db2c      	blt.n	801be6e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801be14:	1a53      	subs	r3, r2, r1
 801be16:	2b00      	cmp	r3, #0
 801be18:	dd29      	ble.n	801be6e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801be1a:	3101      	adds	r1, #1
 801be1c:	2964      	cmp	r1, #100	; 0x64
 801be1e:	d025      	beq.n	801be6c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 801be20:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801be24:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801be28:	ee17 3a10 	vmov	r3, s14
 801be2c:	2b09      	cmp	r3, #9
 801be2e:	bfa8      	it	ge
 801be30:	2309      	movge	r3, #9
 801be32:	ee07 3a10 	vmov	s14, r3
 801be36:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801be3a:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801be3e:	eee7 7a66 	vfms.f32	s15, s14, s13
 801be42:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801be46:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801be4a:	e7dd      	b.n	801be08 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 801be4c:	4b06      	ldr	r3, [pc, #24]	; (801be68 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801be4e:	9311      	str	r3, [sp, #68]	; 0x44
 801be50:	236e      	movs	r3, #110	; 0x6e
 801be52:	e792      	b.n	801bd7a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 801be54:	ee66 6a87 	vmul.f32	s13, s13, s14
 801be58:	ee86 6a07 	vdiv.f32	s12, s12, s14
 801be5c:	e7c7      	b.n	801bdee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801be5e:	bf00      	nop
 801be60:	7f7fffff 	.word	0x7f7fffff
 801be64:	006e0069 	.word	0x006e0069
 801be68:	0061006e 	.word	0x0061006e
 801be6c:	2563      	movs	r5, #99	; 0x63
 801be6e:	2a63      	cmp	r2, #99	; 0x63
 801be70:	bfd4      	ite	le
 801be72:	ebc5 0202 	rsble	r2, r5, r2
 801be76:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801be7a:	2a00      	cmp	r2, #0
 801be7c:	dd43      	ble.n	801bf06 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801be7e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801be80:	2b00      	cmp	r3, #0
 801be82:	dd40      	ble.n	801bf06 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801be84:	f04f 0901 	mov.w	r9, #1
 801be88:	210a      	movs	r1, #10
 801be8a:	f113 33ff 	adds.w	r3, r3, #4294967295
 801be8e:	d30c      	bcc.n	801beaa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 801be90:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801be94:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801be98:	ee17 0a10 	vmov	r0, s14
 801be9c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bea0:	fb01 0909 	mla	r9, r1, r9, r0
 801bea4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801bea8:	e7ef      	b.n	801be8a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801beaa:	3501      	adds	r5, #1
 801beac:	930f      	str	r3, [sp, #60]	; 0x3c
 801beae:	b292      	uxth	r2, r2
 801beb0:	230a      	movs	r3, #10
 801beb2:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801beb6:	4648      	mov	r0, r9
 801beb8:	f7ff fb4e 	bl	801b558 <_ZN8touchgfx7Unicode4itoaElPtti>
 801bebc:	f1b9 0f01 	cmp.w	r9, #1
 801bec0:	dc1f      	bgt.n	801bf02 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 801bec2:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801bec6:	2b00      	cmp	r3, #0
 801bec8:	bf0c      	ite	eq
 801beca:	2300      	moveq	r3, #0
 801becc:	232e      	movne	r3, #46	; 0x2e
 801bece:	aa44      	add	r2, sp, #272	; 0x110
 801bed0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801bed4:	eef4 7ae4 	vcmpe.f32	s15, s9
 801bed8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bedc:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801bee0:	f6ff af4c 	blt.w	801bd7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801bee4:	2300      	movs	r3, #0
 801bee6:	f838 2b02 	ldrh.w	r2, [r8], #2
 801beea:	1c59      	adds	r1, r3, #1
 801beec:	b98a      	cbnz	r2, 801bf12 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 801beee:	b29b      	uxth	r3, r3
 801bef0:	2130      	movs	r1, #48	; 0x30
 801bef2:	b983      	cbnz	r3, 801bf16 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 801bef4:	2331      	movs	r3, #49	; 0x31
 801bef6:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801befa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801befc:	3b02      	subs	r3, #2
 801befe:	9310      	str	r3, [sp, #64]	; 0x40
 801bf00:	e73c      	b.n	801bd7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801bf02:	232e      	movs	r3, #46	; 0x2e
 801bf04:	e7e3      	b.n	801bece <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801bf06:	ab44      	add	r3, sp, #272	; 0x110
 801bf08:	3501      	adds	r5, #1
 801bf0a:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801bf0e:	2300      	movs	r3, #0
 801bf10:	e7e0      	b.n	801bed4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801bf12:	460b      	mov	r3, r1
 801bf14:	e7e7      	b.n	801bee6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801bf16:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801bf1a:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801bf1e:	2808      	cmp	r0, #8
 801bf20:	d806      	bhi.n	801bf30 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801bf22:	a944      	add	r1, sp, #272	; 0x110
 801bf24:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801bf28:	3201      	adds	r2, #1
 801bf2a:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801bf2e:	e725      	b.n	801bd7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801bf30:	2a39      	cmp	r2, #57	; 0x39
 801bf32:	bf08      	it	eq
 801bf34:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801bf38:	3b01      	subs	r3, #1
 801bf3a:	e7da      	b.n	801bef2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 801bf3c:	9a08      	ldr	r2, [sp, #32]
 801bf3e:	2a00      	cmp	r2, #0
 801bf40:	f43f af23 	beq.w	801bd8a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801bf44:	7812      	ldrb	r2, [r2, #0]
 801bf46:	e720      	b.n	801bd8a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801bf48:	2d00      	cmp	r5, #0
 801bf4a:	f43f aede 	beq.w	801bd0a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801bf4e:	782d      	ldrb	r5, [r5, #0]
 801bf50:	e6db      	b.n	801bd0a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801bf52:	bf00      	nop

0801bf54 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 801bf54:	b507      	push	{r0, r1, r2, lr}
 801bf56:	9300      	str	r3, [sp, #0]
 801bf58:	4613      	mov	r3, r2
 801bf5a:	2200      	movs	r2, #0
 801bf5c:	f7ff fe1c 	bl	801bb98 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801bf60:	b003      	add	sp, #12
 801bf62:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801bf68 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801bf68:	4b01      	ldr	r3, [pc, #4]	; (801bf70 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801bf6a:	6018      	str	r0, [r3, #0]
 801bf6c:	4770      	bx	lr
 801bf6e:	bf00      	nop
 801bf70:	200138bc 	.word	0x200138bc

0801bf74 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801bf74:	4b06      	ldr	r3, [pc, #24]	; (801bf90 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801bf76:	881a      	ldrh	r2, [r3, #0]
 801bf78:	4282      	cmp	r2, r0
 801bf7a:	d807      	bhi.n	801bf8c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801bf7c:	4b05      	ldr	r3, [pc, #20]	; (801bf94 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801bf7e:	881b      	ldrh	r3, [r3, #0]
 801bf80:	4413      	add	r3, r2
 801bf82:	4298      	cmp	r0, r3
 801bf84:	bfac      	ite	ge
 801bf86:	2000      	movge	r0, #0
 801bf88:	2001      	movlt	r0, #1
 801bf8a:	4770      	bx	lr
 801bf8c:	2000      	movs	r0, #0
 801bf8e:	4770      	bx	lr
 801bf90:	200138dc 	.word	0x200138dc
 801bf94:	200138e0 	.word	0x200138e0

0801bf98 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801bf98:	b508      	push	{r3, lr}
 801bf9a:	4601      	mov	r1, r0
 801bf9c:	f7ff ffea 	bl	801bf74 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801bfa0:	b118      	cbz	r0, 801bfaa <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801bfa2:	4b02      	ldr	r3, [pc, #8]	; (801bfac <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801bfa4:	681b      	ldr	r3, [r3, #0]
 801bfa6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801bfaa:	bd08      	pop	{r3, pc}
 801bfac:	200138c0 	.word	0x200138c0

0801bfb0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801bfb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801bfb2:	4c24      	ldr	r4, [pc, #144]	; (801c044 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801bfb4:	6823      	ldr	r3, [r4, #0]
 801bfb6:	2b00      	cmp	r3, #0
 801bfb8:	d042      	beq.n	801c040 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801bfba:	4a23      	ldr	r2, [pc, #140]	; (801c048 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801bfbc:	4d23      	ldr	r5, [pc, #140]	; (801c04c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801bfbe:	8811      	ldrh	r1, [r2, #0]
 801bfc0:	f8b5 c000 	ldrh.w	ip, [r5]
 801bfc4:	4822      	ldr	r0, [pc, #136]	; (801c050 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801bfc6:	4461      	add	r1, ip
 801bfc8:	1c4a      	adds	r2, r1, #1
 801bfca:	f022 0201 	bic.w	r2, r2, #1
 801bfce:	008f      	lsls	r7, r1, #2
 801bfd0:	0412      	lsls	r2, r2, #16
 801bfd2:	19de      	adds	r6, r3, r7
 801bfd4:	0c12      	lsrs	r2, r2, #16
 801bfd6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801bfda:	6006      	str	r6, [r0, #0]
 801bfdc:	4e1d      	ldr	r6, [pc, #116]	; (801c054 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801bfde:	19da      	adds	r2, r3, r7
 801bfe0:	6032      	str	r2, [r6, #0]
 801bfe2:	220e      	movs	r2, #14
 801bfe4:	fb02 f20c 	mul.w	r2, r2, ip
 801bfe8:	3203      	adds	r2, #3
 801bfea:	f022 0203 	bic.w	r2, r2, #3
 801bfee:	443a      	add	r2, r7
 801bff0:	4f19      	ldr	r7, [pc, #100]	; (801c058 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801bff2:	4413      	add	r3, r2
 801bff4:	603b      	str	r3, [r7, #0]
 801bff6:	4f19      	ldr	r7, [pc, #100]	; (801c05c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801bff8:	2300      	movs	r3, #0
 801bffa:	803b      	strh	r3, [r7, #0]
 801bffc:	4f18      	ldr	r7, [pc, #96]	; (801c060 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801bffe:	683f      	ldr	r7, [r7, #0]
 801c000:	1aba      	subs	r2, r7, r2
 801c002:	4f18      	ldr	r7, [pc, #96]	; (801c064 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801c004:	603a      	str	r2, [r7, #0]
 801c006:	4a18      	ldr	r2, [pc, #96]	; (801c068 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801c008:	469c      	mov	ip, r3
 801c00a:	8013      	strh	r3, [r2, #0]
 801c00c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801c010:	428b      	cmp	r3, r1
 801c012:	d10d      	bne.n	801c030 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801c014:	882d      	ldrh	r5, [r5, #0]
 801c016:	6830      	ldr	r0, [r6, #0]
 801c018:	2300      	movs	r3, #0
 801c01a:	240e      	movs	r4, #14
 801c01c:	429d      	cmp	r5, r3
 801c01e:	d90f      	bls.n	801c040 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c020:	fb04 0203 	mla	r2, r4, r3, r0
 801c024:	3301      	adds	r3, #1
 801c026:	7b11      	ldrb	r1, [r2, #12]
 801c028:	f36f 1145 	bfc	r1, #5, #1
 801c02c:	7311      	strb	r1, [r2, #12]
 801c02e:	e7f5      	b.n	801c01c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801c030:	6822      	ldr	r2, [r4, #0]
 801c032:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801c036:	6802      	ldr	r2, [r0, #0]
 801c038:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801c03c:	3301      	adds	r3, #1
 801c03e:	e7e7      	b.n	801c010 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801c040:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c042:	bf00      	nop
 801c044:	200138c0 	.word	0x200138c0
 801c048:	200138dc 	.word	0x200138dc
 801c04c:	200138e0 	.word	0x200138e0
 801c050:	200138d4 	.word	0x200138d4
 801c054:	200138c4 	.word	0x200138c4
 801c058:	200138cc 	.word	0x200138cc
 801c05c:	200138de 	.word	0x200138de
 801c060:	200138c8 	.word	0x200138c8
 801c064:	200138d8 	.word	0x200138d8
 801c068:	200138d0 	.word	0x200138d0

0801c06c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801c06c:	4b06      	ldr	r3, [pc, #24]	; (801c088 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801c06e:	681b      	ldr	r3, [r3, #0]
 801c070:	b943      	cbnz	r3, 801c084 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c072:	b139      	cbz	r1, 801c084 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c074:	4b05      	ldr	r3, [pc, #20]	; (801c08c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801c076:	801a      	strh	r2, [r3, #0]
 801c078:	4b05      	ldr	r3, [pc, #20]	; (801c090 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801c07a:	6019      	str	r1, [r3, #0]
 801c07c:	4b05      	ldr	r3, [pc, #20]	; (801c094 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801c07e:	6018      	str	r0, [r3, #0]
 801c080:	f7ff bf96 	b.w	801bfb0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801c084:	4770      	bx	lr
 801c086:	bf00      	nop
 801c088:	200138cc 	.word	0x200138cc
 801c08c:	200138e0 	.word	0x200138e0
 801c090:	200138c8 	.word	0x200138c8
 801c094:	200138c0 	.word	0x200138c0

0801c098 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801c098:	b470      	push	{r4, r5, r6}
 801c09a:	4c07      	ldr	r4, [pc, #28]	; (801c0b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801c09c:	6826      	ldr	r6, [r4, #0]
 801c09e:	4605      	mov	r5, r0
 801c0a0:	4610      	mov	r0, r2
 801c0a2:	9a03      	ldr	r2, [sp, #12]
 801c0a4:	b936      	cbnz	r6, 801c0b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801c0a6:	6025      	str	r5, [r4, #0]
 801c0a8:	4c04      	ldr	r4, [pc, #16]	; (801c0bc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801c0aa:	8021      	strh	r1, [r4, #0]
 801c0ac:	bc70      	pop	{r4, r5, r6}
 801c0ae:	4619      	mov	r1, r3
 801c0b0:	f7ff bfdc 	b.w	801c06c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801c0b4:	bc70      	pop	{r4, r5, r6}
 801c0b6:	4770      	bx	lr
 801c0b8:	200138e4 	.word	0x200138e4
 801c0bc:	200138dc 	.word	0x200138dc

0801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801c0c0:	4a12      	ldr	r2, [pc, #72]	; (801c10c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801c0c2:	8803      	ldrh	r3, [r0, #0]
 801c0c4:	8812      	ldrh	r2, [r2, #0]
 801c0c6:	4293      	cmp	r3, r2
 801c0c8:	d207      	bcs.n	801c0da <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801c0ca:	4a11      	ldr	r2, [pc, #68]	; (801c110 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801c0cc:	6812      	ldr	r2, [r2, #0]
 801c0ce:	2114      	movs	r1, #20
 801c0d0:	fb01 2303 	mla	r3, r1, r3, r2
 801c0d4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801c0d8:	4770      	bx	lr
 801c0da:	490e      	ldr	r1, [pc, #56]	; (801c114 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801c0dc:	8809      	ldrh	r1, [r1, #0]
 801c0de:	4411      	add	r1, r2
 801c0e0:	428b      	cmp	r3, r1
 801c0e2:	da04      	bge.n	801c0ee <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801c0e4:	1a9b      	subs	r3, r3, r2
 801c0e6:	4a0c      	ldr	r2, [pc, #48]	; (801c118 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801c0e8:	210e      	movs	r1, #14
 801c0ea:	6812      	ldr	r2, [r2, #0]
 801c0ec:	e7f0      	b.n	801c0d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801c0ee:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c0f2:	4293      	cmp	r3, r2
 801c0f4:	d108      	bne.n	801c108 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801c0f6:	4b09      	ldr	r3, [pc, #36]	; (801c11c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801c0f8:	781b      	ldrb	r3, [r3, #0]
 801c0fa:	b91b      	cbnz	r3, 801c104 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801c0fc:	4b08      	ldr	r3, [pc, #32]	; (801c120 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801c0fe:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c102:	4770      	bx	lr
 801c104:	4b07      	ldr	r3, [pc, #28]	; (801c124 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801c106:	e7fa      	b.n	801c0fe <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801c108:	2000      	movs	r0, #0
 801c10a:	4770      	bx	lr
 801c10c:	200138dc 	.word	0x200138dc
 801c110:	200138e4 	.word	0x200138e4
 801c114:	200138e0 	.word	0x200138e0
 801c118:	200138c4 	.word	0x200138c4
 801c11c:	2001384c 	.word	0x2001384c
 801c120:	2001384e 	.word	0x2001384e
 801c124:	20013850 	.word	0x20013850

0801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801c128:	4a12      	ldr	r2, [pc, #72]	; (801c174 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801c12a:	8803      	ldrh	r3, [r0, #0]
 801c12c:	8812      	ldrh	r2, [r2, #0]
 801c12e:	4293      	cmp	r3, r2
 801c130:	d207      	bcs.n	801c142 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801c132:	4a11      	ldr	r2, [pc, #68]	; (801c178 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801c134:	6812      	ldr	r2, [r2, #0]
 801c136:	2114      	movs	r1, #20
 801c138:	fb01 2303 	mla	r3, r1, r3, r2
 801c13c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801c140:	4770      	bx	lr
 801c142:	490e      	ldr	r1, [pc, #56]	; (801c17c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801c144:	8809      	ldrh	r1, [r1, #0]
 801c146:	4411      	add	r1, r2
 801c148:	428b      	cmp	r3, r1
 801c14a:	da04      	bge.n	801c156 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801c14c:	1a9b      	subs	r3, r3, r2
 801c14e:	4a0c      	ldr	r2, [pc, #48]	; (801c180 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801c150:	210e      	movs	r1, #14
 801c152:	6812      	ldr	r2, [r2, #0]
 801c154:	e7f0      	b.n	801c138 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801c156:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c15a:	4293      	cmp	r3, r2
 801c15c:	d108      	bne.n	801c170 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801c15e:	4b09      	ldr	r3, [pc, #36]	; (801c184 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801c160:	781b      	ldrb	r3, [r3, #0]
 801c162:	b91b      	cbnz	r3, 801c16c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801c164:	4b08      	ldr	r3, [pc, #32]	; (801c188 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801c166:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c16a:	4770      	bx	lr
 801c16c:	4b07      	ldr	r3, [pc, #28]	; (801c18c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801c16e:	e7fa      	b.n	801c166 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801c170:	2000      	movs	r0, #0
 801c172:	4770      	bx	lr
 801c174:	200138dc 	.word	0x200138dc
 801c178:	200138e4 	.word	0x200138e4
 801c17c:	200138e0 	.word	0x200138e0
 801c180:	200138c4 	.word	0x200138c4
 801c184:	2001384c 	.word	0x2001384c
 801c188:	20013850 	.word	0x20013850
 801c18c:	2001384e 	.word	0x2001384e

0801c190 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801c190:	b510      	push	{r4, lr}
 801c192:	4a1f      	ldr	r2, [pc, #124]	; (801c210 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801c194:	880b      	ldrh	r3, [r1, #0]
 801c196:	8812      	ldrh	r2, [r2, #0]
 801c198:	4293      	cmp	r3, r2
 801c19a:	d213      	bcs.n	801c1c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801c19c:	4a1d      	ldr	r2, [pc, #116]	; (801c214 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801c19e:	6812      	ldr	r2, [r2, #0]
 801c1a0:	2114      	movs	r1, #20
 801c1a2:	fb01 2303 	mla	r3, r1, r3, r2
 801c1a6:	8a1a      	ldrh	r2, [r3, #16]
 801c1a8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801c1ac:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801c1b0:	8a5b      	ldrh	r3, [r3, #18]
 801c1b2:	8004      	strh	r4, [r0, #0]
 801c1b4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c1b8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801c1bc:	8041      	strh	r1, [r0, #2]
 801c1be:	8082      	strh	r2, [r0, #4]
 801c1c0:	80c3      	strh	r3, [r0, #6]
 801c1c2:	e00e      	b.n	801c1e2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c1c4:	4914      	ldr	r1, [pc, #80]	; (801c218 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801c1c6:	8809      	ldrh	r1, [r1, #0]
 801c1c8:	4411      	add	r1, r2
 801c1ca:	428b      	cmp	r3, r1
 801c1cc:	da0a      	bge.n	801c1e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801c1ce:	1a9b      	subs	r3, r3, r2
 801c1d0:	4a12      	ldr	r2, [pc, #72]	; (801c21c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801c1d2:	6812      	ldr	r2, [r2, #0]
 801c1d4:	210e      	movs	r1, #14
 801c1d6:	fb01 2303 	mla	r3, r1, r3, r2
 801c1da:	681a      	ldr	r2, [r3, #0]
 801c1dc:	6002      	str	r2, [r0, #0]
 801c1de:	685a      	ldr	r2, [r3, #4]
 801c1e0:	6042      	str	r2, [r0, #4]
 801c1e2:	bd10      	pop	{r4, pc}
 801c1e4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c1e8:	4293      	cmp	r3, r2
 801c1ea:	d10b      	bne.n	801c204 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801c1ec:	4b0c      	ldr	r3, [pc, #48]	; (801c220 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801c1ee:	f9b3 1000 	ldrsh.w	r1, [r3]
 801c1f2:	4b0c      	ldr	r3, [pc, #48]	; (801c224 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801c1f4:	8081      	strh	r1, [r0, #4]
 801c1f6:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c1fa:	80c2      	strh	r2, [r0, #6]
 801c1fc:	2300      	movs	r3, #0
 801c1fe:	8003      	strh	r3, [r0, #0]
 801c200:	8043      	strh	r3, [r0, #2]
 801c202:	e7ee      	b.n	801c1e2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c204:	2300      	movs	r3, #0
 801c206:	8003      	strh	r3, [r0, #0]
 801c208:	8043      	strh	r3, [r0, #2]
 801c20a:	8083      	strh	r3, [r0, #4]
 801c20c:	e7d8      	b.n	801c1c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801c20e:	bf00      	nop
 801c210:	200138dc 	.word	0x200138dc
 801c214:	200138e4 	.word	0x200138e4
 801c218:	200138e0 	.word	0x200138e0
 801c21c:	200138c4 	.word	0x200138c4
 801c220:	20013848 	.word	0x20013848
 801c224:	2001384a 	.word	0x2001384a

0801c228 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801c228:	4a17      	ldr	r2, [pc, #92]	; (801c288 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801c22a:	8803      	ldrh	r3, [r0, #0]
 801c22c:	8812      	ldrh	r2, [r2, #0]
 801c22e:	4293      	cmp	r3, r2
 801c230:	d213      	bcs.n	801c25a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801c232:	4a16      	ldr	r2, [pc, #88]	; (801c28c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801c234:	6812      	ldr	r2, [r2, #0]
 801c236:	2114      	movs	r1, #20
 801c238:	fb01 2303 	mla	r3, r1, r3, r2
 801c23c:	8a1a      	ldrh	r2, [r3, #16]
 801c23e:	8919      	ldrh	r1, [r3, #8]
 801c240:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c244:	428a      	cmp	r2, r1
 801c246:	db1d      	blt.n	801c284 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c248:	8a58      	ldrh	r0, [r3, #18]
 801c24a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801c24e:	895b      	ldrh	r3, [r3, #10]
 801c250:	4298      	cmp	r0, r3
 801c252:	bfac      	ite	ge
 801c254:	2000      	movge	r0, #0
 801c256:	2001      	movlt	r0, #1
 801c258:	4770      	bx	lr
 801c25a:	490d      	ldr	r1, [pc, #52]	; (801c290 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801c25c:	8809      	ldrh	r1, [r1, #0]
 801c25e:	4411      	add	r1, r2
 801c260:	428b      	cmp	r3, r1
 801c262:	da0d      	bge.n	801c280 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801c264:	1a9b      	subs	r3, r3, r2
 801c266:	4a0b      	ldr	r2, [pc, #44]	; (801c294 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801c268:	6812      	ldr	r2, [r2, #0]
 801c26a:	210e      	movs	r1, #14
 801c26c:	fb01 2303 	mla	r3, r1, r3, r2
 801c270:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801c274:	891a      	ldrh	r2, [r3, #8]
 801c276:	4291      	cmp	r1, r2
 801c278:	db04      	blt.n	801c284 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c27a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801c27e:	e7e6      	b.n	801c24e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801c280:	2000      	movs	r0, #0
 801c282:	4770      	bx	lr
 801c284:	2001      	movs	r0, #1
 801c286:	4770      	bx	lr
 801c288:	200138dc 	.word	0x200138dc
 801c28c:	200138e4 	.word	0x200138e4
 801c290:	200138e0 	.word	0x200138e0
 801c294:	200138c4 	.word	0x200138c4

0801c298 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801c298:	4a12      	ldr	r2, [pc, #72]	; (801c2e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801c29a:	8803      	ldrh	r3, [r0, #0]
 801c29c:	8811      	ldrh	r1, [r2, #0]
 801c29e:	428b      	cmp	r3, r1
 801c2a0:	d20b      	bcs.n	801c2ba <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801c2a2:	4a11      	ldr	r2, [pc, #68]	; (801c2e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c2a4:	6812      	ldr	r2, [r2, #0]
 801c2a6:	b112      	cbz	r2, 801c2ae <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801c2a8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c2ac:	b9c0      	cbnz	r0, 801c2e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801c2ae:	4a0f      	ldr	r2, [pc, #60]	; (801c2ec <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801c2b0:	6811      	ldr	r1, [r2, #0]
 801c2b2:	2214      	movs	r2, #20
 801c2b4:	4353      	muls	r3, r2
 801c2b6:	58c8      	ldr	r0, [r1, r3]
 801c2b8:	4770      	bx	lr
 801c2ba:	4a0d      	ldr	r2, [pc, #52]	; (801c2f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801c2bc:	8812      	ldrh	r2, [r2, #0]
 801c2be:	440a      	add	r2, r1
 801c2c0:	4293      	cmp	r3, r2
 801c2c2:	da04      	bge.n	801c2ce <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801c2c4:	4a08      	ldr	r2, [pc, #32]	; (801c2e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c2c6:	6812      	ldr	r2, [r2, #0]
 801c2c8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c2cc:	4770      	bx	lr
 801c2ce:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c2d2:	4293      	cmp	r3, r2
 801c2d4:	d103      	bne.n	801c2de <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801c2d6:	4b07      	ldr	r3, [pc, #28]	; (801c2f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801c2d8:	681b      	ldr	r3, [r3, #0]
 801c2da:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801c2dc:	4770      	bx	lr
 801c2de:	2000      	movs	r0, #0
 801c2e0:	4770      	bx	lr
 801c2e2:	bf00      	nop
 801c2e4:	200138dc 	.word	0x200138dc
 801c2e8:	200138c0 	.word	0x200138c0
 801c2ec:	200138e4 	.word	0x200138e4
 801c2f0:	200138e0 	.word	0x200138e0
 801c2f4:	20013854 	.word	0x20013854

0801c2f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801c2f8:	4b24      	ldr	r3, [pc, #144]	; (801c38c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801c2fa:	8802      	ldrh	r2, [r0, #0]
 801c2fc:	8818      	ldrh	r0, [r3, #0]
 801c2fe:	4282      	cmp	r2, r0
 801c300:	d221      	bcs.n	801c346 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801c302:	4b23      	ldr	r3, [pc, #140]	; (801c390 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801c304:	6819      	ldr	r1, [r3, #0]
 801c306:	2314      	movs	r3, #20
 801c308:	fb03 1302 	mla	r3, r3, r2, r1
 801c30c:	6858      	ldr	r0, [r3, #4]
 801c30e:	2800      	cmp	r0, #0
 801c310:	d03a      	beq.n	801c388 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c312:	4920      	ldr	r1, [pc, #128]	; (801c394 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c314:	6809      	ldr	r1, [r1, #0]
 801c316:	2900      	cmp	r1, #0
 801c318:	d036      	beq.n	801c388 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c31a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801c31e:	2900      	cmp	r1, #0
 801c320:	d032      	beq.n	801c388 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c322:	891a      	ldrh	r2, [r3, #8]
 801c324:	8958      	ldrh	r0, [r3, #10]
 801c326:	4350      	muls	r0, r2
 801c328:	7c5a      	ldrb	r2, [r3, #17]
 801c32a:	7cdb      	ldrb	r3, [r3, #19]
 801c32c:	0952      	lsrs	r2, r2, #5
 801c32e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801c332:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801c336:	2b0b      	cmp	r3, #11
 801c338:	bf18      	it	ne
 801c33a:	0040      	lslne	r0, r0, #1
 801c33c:	3003      	adds	r0, #3
 801c33e:	f020 0003 	bic.w	r0, r0, #3
 801c342:	4408      	add	r0, r1
 801c344:	4770      	bx	lr
 801c346:	4b14      	ldr	r3, [pc, #80]	; (801c398 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801c348:	881b      	ldrh	r3, [r3, #0]
 801c34a:	4403      	add	r3, r0
 801c34c:	429a      	cmp	r2, r3
 801c34e:	da1a      	bge.n	801c386 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c350:	4b12      	ldr	r3, [pc, #72]	; (801c39c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801c352:	681b      	ldr	r3, [r3, #0]
 801c354:	1a10      	subs	r0, r2, r0
 801c356:	210e      	movs	r1, #14
 801c358:	fb01 3000 	mla	r0, r1, r0, r3
 801c35c:	7b03      	ldrb	r3, [r0, #12]
 801c35e:	f003 031f 	and.w	r3, r3, #31
 801c362:	2b0b      	cmp	r3, #11
 801c364:	d10b      	bne.n	801c37e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801c366:	8903      	ldrh	r3, [r0, #8]
 801c368:	8940      	ldrh	r0, [r0, #10]
 801c36a:	4358      	muls	r0, r3
 801c36c:	4b09      	ldr	r3, [pc, #36]	; (801c394 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c36e:	6819      	ldr	r1, [r3, #0]
 801c370:	3003      	adds	r0, #3
 801c372:	f020 0303 	bic.w	r3, r0, #3
 801c376:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801c37a:	4418      	add	r0, r3
 801c37c:	4770      	bx	lr
 801c37e:	2b0d      	cmp	r3, #13
 801c380:	d101      	bne.n	801c386 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c382:	300d      	adds	r0, #13
 801c384:	4770      	bx	lr
 801c386:	2000      	movs	r0, #0
 801c388:	4770      	bx	lr
 801c38a:	bf00      	nop
 801c38c:	200138dc 	.word	0x200138dc
 801c390:	200138e4 	.word	0x200138e4
 801c394:	200138c0 	.word	0x200138c0
 801c398:	200138e0 	.word	0x200138e0
 801c39c:	200138c4 	.word	0x200138c4

0801c3a0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801c3a0:	b510      	push	{r4, lr}
 801c3a2:	4a17      	ldr	r2, [pc, #92]	; (801c400 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801c3a4:	8803      	ldrh	r3, [r0, #0]
 801c3a6:	8812      	ldrh	r2, [r2, #0]
 801c3a8:	4293      	cmp	r3, r2
 801c3aa:	d20c      	bcs.n	801c3c6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801c3ac:	4a15      	ldr	r2, [pc, #84]	; (801c404 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801c3ae:	6812      	ldr	r2, [r2, #0]
 801c3b0:	2114      	movs	r1, #20
 801c3b2:	fb01 2303 	mla	r3, r1, r3, r2
 801c3b6:	7c58      	ldrb	r0, [r3, #17]
 801c3b8:	0942      	lsrs	r2, r0, #5
 801c3ba:	7cd8      	ldrb	r0, [r3, #19]
 801c3bc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801c3c0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801c3c4:	bd10      	pop	{r4, pc}
 801c3c6:	4910      	ldr	r1, [pc, #64]	; (801c408 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801c3c8:	8809      	ldrh	r1, [r1, #0]
 801c3ca:	4411      	add	r1, r2
 801c3cc:	428b      	cmp	r3, r1
 801c3ce:	da09      	bge.n	801c3e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801c3d0:	1a9b      	subs	r3, r3, r2
 801c3d2:	4a0e      	ldr	r2, [pc, #56]	; (801c40c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801c3d4:	6812      	ldr	r2, [r2, #0]
 801c3d6:	210e      	movs	r1, #14
 801c3d8:	fb01 2303 	mla	r3, r1, r3, r2
 801c3dc:	7b18      	ldrb	r0, [r3, #12]
 801c3de:	f000 001f 	and.w	r0, r0, #31
 801c3e2:	e7ef      	b.n	801c3c4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c3e4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c3e8:	4293      	cmp	r3, r2
 801c3ea:	d106      	bne.n	801c3fa <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801c3ec:	f7e8 ffb4 	bl	8005358 <_ZN8touchgfx3HAL3lcdEv>
 801c3f0:	6803      	ldr	r3, [r0, #0]
 801c3f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c3f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c3f8:	4718      	bx	r3
 801c3fa:	2000      	movs	r0, #0
 801c3fc:	e7e2      	b.n	801c3c4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c3fe:	bf00      	nop
 801c400:	200138dc 	.word	0x200138dc
 801c404:	200138e4 	.word	0x200138e4
 801c408:	200138e0 	.word	0x200138e0
 801c40c:	200138c4 	.word	0x200138c4

0801c410 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801c410:	2010      	movs	r0, #16
 801c412:	4770      	bx	lr

0801c414 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801c414:	2000      	movs	r0, #0
 801c416:	4770      	bx	lr

0801c418 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801c418:	4b02      	ldr	r3, [pc, #8]	; (801c424 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801c41a:	8818      	ldrh	r0, [r3, #0]
 801c41c:	0040      	lsls	r0, r0, #1
 801c41e:	b280      	uxth	r0, r0
 801c420:	4770      	bx	lr
 801c422:	bf00      	nop
 801c424:	2001384e 	.word	0x2001384e

0801c428 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801c428:	2bff      	cmp	r3, #255	; 0xff
 801c42a:	d050      	beq.n	801c4ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801c42c:	2a0b      	cmp	r2, #11
 801c42e:	d04a      	beq.n	801c4c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c430:	d80e      	bhi.n	801c450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801c432:	2a03      	cmp	r2, #3
 801c434:	d03f      	beq.n	801c4b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801c436:	d804      	bhi.n	801c442 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801c438:	2a01      	cmp	r2, #1
 801c43a:	d03e      	beq.n	801c4ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801c43c:	d93f      	bls.n	801c4be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801c43e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801c440:	4770      	bx	lr
 801c442:	2a09      	cmp	r2, #9
 801c444:	d03f      	beq.n	801c4c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c446:	d83c      	bhi.n	801c4c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c448:	2a08      	cmp	r2, #8
 801c44a:	d03a      	beq.n	801c4c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c44c:	2000      	movs	r0, #0
 801c44e:	4770      	bx	lr
 801c450:	2a2f      	cmp	r2, #47	; 0x2f
 801c452:	d024      	beq.n	801c49e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801c454:	d80d      	bhi.n	801c472 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801c456:	2a2d      	cmp	r2, #45	; 0x2d
 801c458:	d014      	beq.n	801c484 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801c45a:	d826      	bhi.n	801c4aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801c45c:	2a2c      	cmp	r2, #44	; 0x2c
 801c45e:	d1f5      	bne.n	801c44c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c460:	684b      	ldr	r3, [r1, #4]
 801c462:	781b      	ldrb	r3, [r3, #0]
 801c464:	2b01      	cmp	r3, #1
 801c466:	d018      	beq.n	801c49a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801c468:	d323      	bcc.n	801c4b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801c46a:	2b02      	cmp	r3, #2
 801c46c:	d1ee      	bne.n	801c44c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c46e:	6880      	ldr	r0, [r0, #8]
 801c470:	4770      	bx	lr
 801c472:	2a31      	cmp	r2, #49	; 0x31
 801c474:	d004      	beq.n	801c480 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801c476:	d328      	bcc.n	801c4ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c478:	2a32      	cmp	r2, #50	; 0x32
 801c47a:	d026      	beq.n	801c4ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c47c:	2a33      	cmp	r2, #51	; 0x33
 801c47e:	d1e5      	bne.n	801c44c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c480:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801c482:	4770      	bx	lr
 801c484:	684b      	ldr	r3, [r1, #4]
 801c486:	781b      	ldrb	r3, [r3, #0]
 801c488:	2b01      	cmp	r3, #1
 801c48a:	d004      	beq.n	801c496 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801c48c:	d30b      	bcc.n	801c4a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801c48e:	2b02      	cmp	r3, #2
 801c490:	d1dc      	bne.n	801c44c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c492:	6900      	ldr	r0, [r0, #16]
 801c494:	4770      	bx	lr
 801c496:	6a00      	ldr	r0, [r0, #32]
 801c498:	4770      	bx	lr
 801c49a:	6980      	ldr	r0, [r0, #24]
 801c49c:	4770      	bx	lr
 801c49e:	684b      	ldr	r3, [r1, #4]
 801c4a0:	781b      	ldrb	r3, [r3, #0]
 801c4a2:	2b00      	cmp	r3, #0
 801c4a4:	d1d2      	bne.n	801c44c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c4a6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801c4a8:	4770      	bx	lr
 801c4aa:	684b      	ldr	r3, [r1, #4]
 801c4ac:	781b      	ldrb	r3, [r3, #0]
 801c4ae:	2b00      	cmp	r3, #0
 801c4b0:	d1cc      	bne.n	801c44c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c4b2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801c4b4:	4770      	bx	lr
 801c4b6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801c4b8:	4770      	bx	lr
 801c4ba:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801c4bc:	4770      	bx	lr
 801c4be:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801c4c0:	4770      	bx	lr
 801c4c2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801c4c4:	4770      	bx	lr
 801c4c6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801c4c8:	4770      	bx	lr
 801c4ca:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801c4cc:	4770      	bx	lr
 801c4ce:	2a0b      	cmp	r2, #11
 801c4d0:	d049      	beq.n	801c566 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c4d2:	d80e      	bhi.n	801c4f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801c4d4:	2a03      	cmp	r2, #3
 801c4d6:	d040      	beq.n	801c55a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801c4d8:	d804      	bhi.n	801c4e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801c4da:	2a01      	cmp	r2, #1
 801c4dc:	d03f      	beq.n	801c55e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801c4de:	d940      	bls.n	801c562 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801c4e0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801c4e2:	4770      	bx	lr
 801c4e4:	2a09      	cmp	r2, #9
 801c4e6:	d03e      	beq.n	801c566 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c4e8:	d801      	bhi.n	801c4ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801c4ea:	2a08      	cmp	r2, #8
 801c4ec:	d1ae      	bne.n	801c44c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c4ee:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801c4f0:	4770      	bx	lr
 801c4f2:	2a2f      	cmp	r2, #47	; 0x2f
 801c4f4:	d024      	beq.n	801c540 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801c4f6:	d80d      	bhi.n	801c514 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801c4f8:	2a2d      	cmp	r2, #45	; 0x2d
 801c4fa:	d014      	beq.n	801c526 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801c4fc:	d826      	bhi.n	801c54c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801c4fe:	2a2c      	cmp	r2, #44	; 0x2c
 801c500:	d1a4      	bne.n	801c44c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c502:	684b      	ldr	r3, [r1, #4]
 801c504:	781b      	ldrb	r3, [r3, #0]
 801c506:	2b01      	cmp	r3, #1
 801c508:	d018      	beq.n	801c53c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801c50a:	d324      	bcc.n	801c556 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801c50c:	2b02      	cmp	r3, #2
 801c50e:	d19d      	bne.n	801c44c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c510:	68c0      	ldr	r0, [r0, #12]
 801c512:	4770      	bx	lr
 801c514:	2a31      	cmp	r2, #49	; 0x31
 801c516:	d004      	beq.n	801c522 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801c518:	d327      	bcc.n	801c56a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c51a:	2a32      	cmp	r2, #50	; 0x32
 801c51c:	d025      	beq.n	801c56a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c51e:	2a33      	cmp	r2, #51	; 0x33
 801c520:	d194      	bne.n	801c44c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c522:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801c524:	4770      	bx	lr
 801c526:	684b      	ldr	r3, [r1, #4]
 801c528:	781b      	ldrb	r3, [r3, #0]
 801c52a:	2b01      	cmp	r3, #1
 801c52c:	d004      	beq.n	801c538 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801c52e:	d30b      	bcc.n	801c548 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801c530:	2b02      	cmp	r3, #2
 801c532:	d18b      	bne.n	801c44c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c534:	6940      	ldr	r0, [r0, #20]
 801c536:	4770      	bx	lr
 801c538:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801c53a:	4770      	bx	lr
 801c53c:	69c0      	ldr	r0, [r0, #28]
 801c53e:	4770      	bx	lr
 801c540:	684b      	ldr	r3, [r1, #4]
 801c542:	781b      	ldrb	r3, [r3, #0]
 801c544:	2b00      	cmp	r3, #0
 801c546:	d181      	bne.n	801c44c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c548:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801c54a:	4770      	bx	lr
 801c54c:	684b      	ldr	r3, [r1, #4]
 801c54e:	781b      	ldrb	r3, [r3, #0]
 801c550:	2b00      	cmp	r3, #0
 801c552:	f47f af7b 	bne.w	801c44c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c556:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801c558:	4770      	bx	lr
 801c55a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801c55c:	4770      	bx	lr
 801c55e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801c560:	4770      	bx	lr
 801c562:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801c564:	4770      	bx	lr
 801c566:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801c568:	4770      	bx	lr
 801c56a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801c56c:	4770      	bx	lr

0801c56e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c56e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c572:	b087      	sub	sp, #28
 801c574:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c576:	9205      	str	r2, [sp, #20]
 801c578:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c57c:	9202      	str	r2, [sp, #8]
 801c57e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c582:	9101      	str	r1, [sp, #4]
 801c584:	6841      	ldr	r1, [r0, #4]
 801c586:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801c58a:	fb01 2404 	mla	r4, r1, r4, r2
 801c58e:	6802      	ldr	r2, [r0, #0]
 801c590:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c594:	f8de 2000 	ldr.w	r2, [lr]
 801c598:	9203      	str	r2, [sp, #12]
 801c59a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801c59e:	3204      	adds	r2, #4
 801c5a0:	9204      	str	r2, [sp, #16]
 801c5a2:	9a02      	ldr	r2, [sp, #8]
 801c5a4:	43d6      	mvns	r6, r2
 801c5a6:	b2f6      	uxtb	r6, r6
 801c5a8:	9a01      	ldr	r2, [sp, #4]
 801c5aa:	2a00      	cmp	r2, #0
 801c5ac:	dc03      	bgt.n	801c5b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c5ae:	9a05      	ldr	r2, [sp, #20]
 801c5b0:	2a00      	cmp	r2, #0
 801c5b2:	f340 8129 	ble.w	801c808 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c5b6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c5b8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801c5bc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801c5c0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c5c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c5c6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c5ca:	2b00      	cmp	r3, #0
 801c5cc:	dd0e      	ble.n	801c5ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c5ce:	1408      	asrs	r0, r1, #16
 801c5d0:	d405      	bmi.n	801c5de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c5d2:	4560      	cmp	r0, ip
 801c5d4:	da03      	bge.n	801c5de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c5d6:	1410      	asrs	r0, r2, #16
 801c5d8:	d401      	bmi.n	801c5de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c5da:	42b8      	cmp	r0, r7
 801c5dc:	db07      	blt.n	801c5ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c5de:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c5e0:	4401      	add	r1, r0
 801c5e2:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c5e4:	3b01      	subs	r3, #1
 801c5e6:	4402      	add	r2, r0
 801c5e8:	3402      	adds	r4, #2
 801c5ea:	e7ee      	b.n	801c5ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801c5ec:	d071      	beq.n	801c6d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c5ee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c5f0:	1e58      	subs	r0, r3, #1
 801c5f2:	fb05 1500 	mla	r5, r5, r0, r1
 801c5f6:	142d      	asrs	r5, r5, #16
 801c5f8:	d45f      	bmi.n	801c6ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c5fa:	4565      	cmp	r5, ip
 801c5fc:	da5d      	bge.n	801c6ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c5fe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c600:	fb05 2000 	mla	r0, r5, r0, r2
 801c604:	1400      	asrs	r0, r0, #16
 801c606:	d458      	bmi.n	801c6ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c608:	42b8      	cmp	r0, r7
 801c60a:	da56      	bge.n	801c6ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c60c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801c610:	4699      	mov	r9, r3
 801c612:	46a2      	mov	sl, r4
 801c614:	f1b9 0f00 	cmp.w	r9, #0
 801c618:	dd57      	ble.n	801c6ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801c61a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801c61e:	9803      	ldr	r0, [sp, #12]
 801c620:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801c624:	140d      	asrs	r5, r1, #16
 801c626:	fb07 000c 	mla	r0, r7, ip, r0
 801c62a:	f109 39ff 	add.w	r9, r9, #4294967295
 801c62e:	5d40      	ldrb	r0, [r0, r5]
 801c630:	9d04      	ldr	r5, [sp, #16]
 801c632:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c636:	f8ba 5000 	ldrh.w	r5, [sl]
 801c63a:	122f      	asrs	r7, r5, #8
 801c63c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c640:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c644:	fb17 f706 	smulbb	r7, r7, r6
 801c648:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801c64c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c650:	00ed      	lsls	r5, r5, #3
 801c652:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801c656:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801c65a:	10c7      	asrs	r7, r0, #3
 801c65c:	b2ed      	uxtb	r5, r5
 801c65e:	00c0      	lsls	r0, r0, #3
 801c660:	fb18 f806 	smulbb	r8, r8, r6
 801c664:	fb15 f506 	smulbb	r5, r5, r6
 801c668:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c66c:	b2c0      	uxtb	r0, r0
 801c66e:	fa1f fc8c 	uxth.w	ip, ip
 801c672:	fb07 870b 	mla	r7, r7, fp, r8
 801c676:	fb00 500b 	mla	r0, r0, fp, r5
 801c67a:	b280      	uxth	r0, r0
 801c67c:	b2bf      	uxth	r7, r7
 801c67e:	f10c 0501 	add.w	r5, ip, #1
 801c682:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c686:	f107 0801 	add.w	r8, r7, #1
 801c68a:	1c45      	adds	r5, r0, #1
 801c68c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c690:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801c694:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c696:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c69a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c69e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801c6a2:	ea45 0c0c 	orr.w	ip, r5, ip
 801c6a6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c6aa:	4401      	add	r1, r0
 801c6ac:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c6ae:	ea4c 0c08 	orr.w	ip, ip, r8
 801c6b2:	f82a cb02 	strh.w	ip, [sl], #2
 801c6b6:	4402      	add	r2, r0
 801c6b8:	e7ac      	b.n	801c614 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c6ba:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801c6be:	f04f 0800 	mov.w	r8, #0
 801c6c2:	eb03 0008 	add.w	r0, r3, r8
 801c6c6:	2800      	cmp	r0, #0
 801c6c8:	dc41      	bgt.n	801c74e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801c6ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c6ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c6d2:	9b01      	ldr	r3, [sp, #4]
 801c6d4:	2b00      	cmp	r3, #0
 801c6d6:	f340 8097 	ble.w	801c808 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c6da:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c6de:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c6e2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c6e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c6e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c6ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c6f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c6f4:	eef0 6a62 	vmov.f32	s13, s5
 801c6f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c6fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c700:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c704:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801c708:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c70c:	eef0 6a43 	vmov.f32	s13, s6
 801c710:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c714:	ee12 2a90 	vmov	r2, s5
 801c718:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c71c:	fb92 f3f3 	sdiv	r3, r2, r3
 801c720:	ee13 2a10 	vmov	r2, s6
 801c724:	9313      	str	r3, [sp, #76]	; 0x4c
 801c726:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c728:	fb92 f3f3 	sdiv	r3, r2, r3
 801c72c:	9314      	str	r3, [sp, #80]	; 0x50
 801c72e:	9b01      	ldr	r3, [sp, #4]
 801c730:	9a05      	ldr	r2, [sp, #20]
 801c732:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c736:	3b01      	subs	r3, #1
 801c738:	9301      	str	r3, [sp, #4]
 801c73a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801c73e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c740:	eeb0 3a67 	vmov.f32	s6, s15
 801c744:	bf08      	it	eq
 801c746:	4613      	moveq	r3, r2
 801c748:	eef0 2a47 	vmov.f32	s5, s14
 801c74c:	e72c      	b.n	801c5a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c74e:	140f      	asrs	r7, r1, #16
 801c750:	d453      	bmi.n	801c7fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c752:	f8de 5008 	ldr.w	r5, [lr, #8]
 801c756:	42bd      	cmp	r5, r7
 801c758:	dd4f      	ble.n	801c7fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c75a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c75e:	d44c      	bmi.n	801c7fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c760:	f8de 000c 	ldr.w	r0, [lr, #12]
 801c764:	4560      	cmp	r0, ip
 801c766:	dd48      	ble.n	801c7fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c768:	9803      	ldr	r0, [sp, #12]
 801c76a:	b22d      	sxth	r5, r5
 801c76c:	fb0c 0505 	mla	r5, ip, r5, r0
 801c770:	5de8      	ldrb	r0, [r5, r7]
 801c772:	9d04      	ldr	r5, [sp, #16]
 801c774:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c778:	f06f 0501 	mvn.w	r5, #1
 801c77c:	fb05 fb08 	mul.w	fp, r5, r8
 801c780:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c784:	f834 500b 	ldrh.w	r5, [r4, fp]
 801c788:	122f      	asrs	r7, r5, #8
 801c78a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c78e:	fb17 f706 	smulbb	r7, r7, r6
 801c792:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801c796:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c79a:	00ed      	lsls	r5, r5, #3
 801c79c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801c7a0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c7a4:	10c7      	asrs	r7, r0, #3
 801c7a6:	b2ed      	uxtb	r5, r5
 801c7a8:	00c0      	lsls	r0, r0, #3
 801c7aa:	fb19 f906 	smulbb	r9, r9, r6
 801c7ae:	fb15 f506 	smulbb	r5, r5, r6
 801c7b2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c7b6:	b2c0      	uxtb	r0, r0
 801c7b8:	fa1f fc8c 	uxth.w	ip, ip
 801c7bc:	fb07 970a 	mla	r7, r7, sl, r9
 801c7c0:	fb00 500a 	mla	r0, r0, sl, r5
 801c7c4:	b2bf      	uxth	r7, r7
 801c7c6:	b280      	uxth	r0, r0
 801c7c8:	f10c 0501 	add.w	r5, ip, #1
 801c7cc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c7d0:	f107 0901 	add.w	r9, r7, #1
 801c7d4:	1c45      	adds	r5, r0, #1
 801c7d6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c7da:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801c7de:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c7e2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c7e6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c7ea:	ea45 0c0c 	orr.w	ip, r5, ip
 801c7ee:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c7f2:	ea4c 0c09 	orr.w	ip, ip, r9
 801c7f6:	f824 c00b 	strh.w	ip, [r4, fp]
 801c7fa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c7fc:	4401      	add	r1, r0
 801c7fe:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c800:	f108 38ff 	add.w	r8, r8, #4294967295
 801c804:	4402      	add	r2, r0
 801c806:	e75c      	b.n	801c6c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801c808:	b007      	add	sp, #28
 801c80a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c80e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c80e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c812:	b085      	sub	sp, #20
 801c814:	4693      	mov	fp, r2
 801c816:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c818:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801c81a:	6870      	ldr	r0, [r6, #4]
 801c81c:	9100      	str	r1, [sp, #0]
 801c81e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c822:	fb00 2404 	mla	r4, r0, r4, r2
 801c826:	6832      	ldr	r2, [r6, #0]
 801c828:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c82c:	682a      	ldr	r2, [r5, #0]
 801c82e:	9201      	str	r2, [sp, #4]
 801c830:	686a      	ldr	r2, [r5, #4]
 801c832:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801c836:	3204      	adds	r2, #4
 801c838:	9202      	str	r2, [sp, #8]
 801c83a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c83e:	9a00      	ldr	r2, [sp, #0]
 801c840:	2a00      	cmp	r2, #0
 801c842:	dc03      	bgt.n	801c84c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c844:	f1bb 0f00 	cmp.w	fp, #0
 801c848:	f340 80a0 	ble.w	801c98c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801c84c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c84e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801c852:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801c856:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c85a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c85c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c860:	2b00      	cmp	r3, #0
 801c862:	dd0c      	ble.n	801c87e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c864:	1406      	asrs	r6, r0, #16
 801c866:	d405      	bmi.n	801c874 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c868:	454e      	cmp	r6, r9
 801c86a:	da03      	bge.n	801c874 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c86c:	1416      	asrs	r6, r2, #16
 801c86e:	d401      	bmi.n	801c874 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c870:	4546      	cmp	r6, r8
 801c872:	db05      	blt.n	801c880 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c874:	4470      	add	r0, lr
 801c876:	4462      	add	r2, ip
 801c878:	3b01      	subs	r3, #1
 801c87a:	3402      	adds	r4, #2
 801c87c:	e7f0      	b.n	801c860 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c87e:	d00f      	beq.n	801c8a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c880:	1e5e      	subs	r6, r3, #1
 801c882:	fb0e 0706 	mla	r7, lr, r6, r0
 801c886:	143f      	asrs	r7, r7, #16
 801c888:	d541      	bpl.n	801c90e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801c88a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801c88e:	4698      	mov	r8, r3
 801c890:	9603      	str	r6, [sp, #12]
 801c892:	f1b8 0f00 	cmp.w	r8, #0
 801c896:	dc59      	bgt.n	801c94c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801c898:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c89c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c8a0:	9b00      	ldr	r3, [sp, #0]
 801c8a2:	2b00      	cmp	r3, #0
 801c8a4:	dd72      	ble.n	801c98c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801c8a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c8aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c8ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c8b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c8b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c8b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c8bc:	eeb0 6a62 	vmov.f32	s12, s5
 801c8c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c8c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c8c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c8cc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c8d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c8d4:	eeb0 6a43 	vmov.f32	s12, s6
 801c8d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c8dc:	ee12 2a90 	vmov	r2, s5
 801c8e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c8e4:	fb92 fef3 	sdiv	lr, r2, r3
 801c8e8:	ee13 2a10 	vmov	r2, s6
 801c8ec:	fb92 fcf3 	sdiv	ip, r2, r3
 801c8f0:	9b00      	ldr	r3, [sp, #0]
 801c8f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c8f6:	3b01      	subs	r3, #1
 801c8f8:	9300      	str	r3, [sp, #0]
 801c8fa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c8fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c900:	eeb0 3a67 	vmov.f32	s6, s15
 801c904:	bf08      	it	eq
 801c906:	465b      	moveq	r3, fp
 801c908:	eef0 2a47 	vmov.f32	s5, s14
 801c90c:	e797      	b.n	801c83e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c90e:	454f      	cmp	r7, r9
 801c910:	dabb      	bge.n	801c88a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c912:	fb0c 2606 	mla	r6, ip, r6, r2
 801c916:	1436      	asrs	r6, r6, #16
 801c918:	d4b7      	bmi.n	801c88a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c91a:	4546      	cmp	r6, r8
 801c91c:	dab5      	bge.n	801c88a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801c91e:	461e      	mov	r6, r3
 801c920:	46a0      	mov	r8, r4
 801c922:	2e00      	cmp	r6, #0
 801c924:	ddb8      	ble.n	801c898 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c926:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801c92a:	9901      	ldr	r1, [sp, #4]
 801c92c:	1417      	asrs	r7, r2, #16
 801c92e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801c932:	fb0a 1707 	mla	r7, sl, r7, r1
 801c936:	9902      	ldr	r1, [sp, #8]
 801c938:	f817 7009 	ldrb.w	r7, [r7, r9]
 801c93c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801c940:	f828 7b02 	strh.w	r7, [r8], #2
 801c944:	4470      	add	r0, lr
 801c946:	4462      	add	r2, ip
 801c948:	3e01      	subs	r6, #1
 801c94a:	e7ea      	b.n	801c922 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801c94c:	ea5f 4920 	movs.w	r9, r0, asr #16
 801c950:	d417      	bmi.n	801c982 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801c952:	68ae      	ldr	r6, [r5, #8]
 801c954:	454e      	cmp	r6, r9
 801c956:	dd14      	ble.n	801c982 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801c958:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801c95c:	d411      	bmi.n	801c982 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801c95e:	68ef      	ldr	r7, [r5, #12]
 801c960:	4557      	cmp	r7, sl
 801c962:	dd0e      	ble.n	801c982 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801c964:	9f01      	ldr	r7, [sp, #4]
 801c966:	b236      	sxth	r6, r6
 801c968:	fb0a 7606 	mla	r6, sl, r6, r7
 801c96c:	9f02      	ldr	r7, [sp, #8]
 801c96e:	f816 6009 	ldrb.w	r6, [r6, r9]
 801c972:	f06f 0101 	mvn.w	r1, #1
 801c976:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801c97a:	fb01 f608 	mul.w	r6, r1, r8
 801c97e:	9903      	ldr	r1, [sp, #12]
 801c980:	538f      	strh	r7, [r1, r6]
 801c982:	4470      	add	r0, lr
 801c984:	4462      	add	r2, ip
 801c986:	f108 38ff 	add.w	r8, r8, #4294967295
 801c98a:	e782      	b.n	801c892 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c98c:	b005      	add	sp, #20
 801c98e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c992 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c992:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c996:	b087      	sub	sp, #28
 801c998:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c99a:	9205      	str	r2, [sp, #20]
 801c99c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c9a0:	9203      	str	r2, [sp, #12]
 801c9a2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801c9a6:	9102      	str	r1, [sp, #8]
 801c9a8:	6861      	ldr	r1, [r4, #4]
 801c9aa:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801c9ae:	fb01 2000 	mla	r0, r1, r0, r2
 801c9b2:	6822      	ldr	r2, [r4, #0]
 801c9b4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801c9b8:	9200      	str	r2, [sp, #0]
 801c9ba:	f8dc 2000 	ldr.w	r2, [ip]
 801c9be:	9204      	str	r2, [sp, #16]
 801c9c0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801c9c4:	3204      	adds	r2, #4
 801c9c6:	9201      	str	r2, [sp, #4]
 801c9c8:	9a03      	ldr	r2, [sp, #12]
 801c9ca:	43d5      	mvns	r5, r2
 801c9cc:	b2ed      	uxtb	r5, r5
 801c9ce:	9a02      	ldr	r2, [sp, #8]
 801c9d0:	2a00      	cmp	r2, #0
 801c9d2:	dc03      	bgt.n	801c9dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c9d4:	9a05      	ldr	r2, [sp, #20]
 801c9d6:	2a00      	cmp	r2, #0
 801c9d8:	f340 812c 	ble.w	801cc34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801c9dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c9de:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801c9e2:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801c9e6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c9ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c9ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c9f0:	2b00      	cmp	r3, #0
 801c9f2:	dd10      	ble.n	801ca16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c9f4:	140c      	asrs	r4, r1, #16
 801c9f6:	d405      	bmi.n	801ca04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c9f8:	4574      	cmp	r4, lr
 801c9fa:	da03      	bge.n	801ca04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c9fc:	1414      	asrs	r4, r2, #16
 801c9fe:	d401      	bmi.n	801ca04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ca00:	42bc      	cmp	r4, r7
 801ca02:	db09      	blt.n	801ca18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ca04:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ca06:	9800      	ldr	r0, [sp, #0]
 801ca08:	4421      	add	r1, r4
 801ca0a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ca0c:	3002      	adds	r0, #2
 801ca0e:	4422      	add	r2, r4
 801ca10:	3b01      	subs	r3, #1
 801ca12:	9000      	str	r0, [sp, #0]
 801ca14:	e7ec      	b.n	801c9f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801ca16:	d071      	beq.n	801cafc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801ca18:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ca1a:	1e5c      	subs	r4, r3, #1
 801ca1c:	fb06 1604 	mla	r6, r6, r4, r1
 801ca20:	1436      	asrs	r6, r6, #16
 801ca22:	d45d      	bmi.n	801cae0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ca24:	4576      	cmp	r6, lr
 801ca26:	da5b      	bge.n	801cae0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ca28:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801ca2a:	fb06 2404 	mla	r4, r6, r4, r2
 801ca2e:	1424      	asrs	r4, r4, #16
 801ca30:	d456      	bmi.n	801cae0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ca32:	42bc      	cmp	r4, r7
 801ca34:	da54      	bge.n	801cae0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801ca36:	f8dd 9000 	ldr.w	r9, [sp]
 801ca3a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801ca3e:	4698      	mov	r8, r3
 801ca40:	f1b8 0f00 	cmp.w	r8, #0
 801ca44:	dd54      	ble.n	801caf0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801ca46:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801ca4a:	9804      	ldr	r0, [sp, #16]
 801ca4c:	1414      	asrs	r4, r2, #16
 801ca4e:	fb07 0404 	mla	r4, r7, r4, r0
 801ca52:	140e      	asrs	r6, r1, #16
 801ca54:	9801      	ldr	r0, [sp, #4]
 801ca56:	f814 e006 	ldrb.w	lr, [r4, r6]
 801ca5a:	f8b9 4000 	ldrh.w	r4, [r9]
 801ca5e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ca62:	eb00 0b0e 	add.w	fp, r0, lr
 801ca66:	1227      	asrs	r7, r4, #8
 801ca68:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801ca6c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801ca70:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801ca74:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ca76:	fb16 f60a 	smulbb	r6, r6, sl
 801ca7a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ca7e:	fb07 6705 	mla	r7, r7, r5, r6
 801ca82:	10e6      	asrs	r6, r4, #3
 801ca84:	00e4      	lsls	r4, r4, #3
 801ca86:	b2e4      	uxtb	r4, r4
 801ca88:	fb1b fb0a 	smulbb	fp, fp, sl
 801ca8c:	fb14 f405 	smulbb	r4, r4, r5
 801ca90:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ca94:	b2bf      	uxth	r7, r7
 801ca96:	fb06 b605 	mla	r6, r6, r5, fp
 801ca9a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801ca9e:	b2b6      	uxth	r6, r6
 801caa0:	fa1f fe8e 	uxth.w	lr, lr
 801caa4:	1c7c      	adds	r4, r7, #1
 801caa6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801caaa:	f106 0b01 	add.w	fp, r6, #1
 801caae:	f10e 0401 	add.w	r4, lr, #1
 801cab2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801cab6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801caba:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cabe:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801cac2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801cac6:	4327      	orrs	r7, r4
 801cac8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801cacc:	4401      	add	r1, r0
 801cace:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cad0:	ea47 070b 	orr.w	r7, r7, fp
 801cad4:	f829 7b02 	strh.w	r7, [r9], #2
 801cad8:	4402      	add	r2, r0
 801cada:	f108 38ff 	add.w	r8, r8, #4294967295
 801cade:	e7af      	b.n	801ca40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801cae0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801cae4:	f04f 0e00 	mov.w	lr, #0
 801cae8:	eb03 040e 	add.w	r4, r3, lr
 801caec:	2c00      	cmp	r4, #0
 801caee:	dc43      	bgt.n	801cb78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801caf0:	9a00      	ldr	r2, [sp, #0]
 801caf2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801caf6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cafa:	9300      	str	r3, [sp, #0]
 801cafc:	9b02      	ldr	r3, [sp, #8]
 801cafe:	2b00      	cmp	r3, #0
 801cb00:	f340 8098 	ble.w	801cc34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cb04:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cb08:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cb0c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cb10:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cb12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cb16:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cb1a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cb1e:	eef0 6a62 	vmov.f32	s13, s5
 801cb22:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cb26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb2a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cb2e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801cb32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cb36:	eef0 6a43 	vmov.f32	s13, s6
 801cb3a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cb3e:	ee12 2a90 	vmov	r2, s5
 801cb42:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cb46:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb4a:	ee13 2a10 	vmov	r2, s6
 801cb4e:	9313      	str	r3, [sp, #76]	; 0x4c
 801cb50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cb52:	fb92 f3f3 	sdiv	r3, r2, r3
 801cb56:	9314      	str	r3, [sp, #80]	; 0x50
 801cb58:	9b02      	ldr	r3, [sp, #8]
 801cb5a:	9a05      	ldr	r2, [sp, #20]
 801cb5c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cb60:	3b01      	subs	r3, #1
 801cb62:	9302      	str	r3, [sp, #8]
 801cb64:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801cb68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cb6a:	eeb0 3a67 	vmov.f32	s6, s15
 801cb6e:	bf08      	it	eq
 801cb70:	4613      	moveq	r3, r2
 801cb72:	eef0 2a47 	vmov.f32	s5, s14
 801cb76:	e72a      	b.n	801c9ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cb78:	140f      	asrs	r7, r1, #16
 801cb7a:	d454      	bmi.n	801cc26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cb7c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801cb80:	42be      	cmp	r6, r7
 801cb82:	dd50      	ble.n	801cc26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cb84:	ea5f 4822 	movs.w	r8, r2, asr #16
 801cb88:	d44d      	bmi.n	801cc26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cb8a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801cb8e:	4544      	cmp	r4, r8
 801cb90:	dd49      	ble.n	801cc26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cb92:	9c04      	ldr	r4, [sp, #16]
 801cb94:	b236      	sxth	r6, r6
 801cb96:	fb08 4606 	mla	r6, r8, r6, r4
 801cb9a:	f06f 0001 	mvn.w	r0, #1
 801cb9e:	f816 8007 	ldrb.w	r8, [r6, r7]
 801cba2:	9c01      	ldr	r4, [sp, #4]
 801cba4:	fb00 fa0e 	mul.w	sl, r0, lr
 801cba8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801cbac:	9800      	ldr	r0, [sp, #0]
 801cbae:	eb04 0b08 	add.w	fp, r4, r8
 801cbb2:	f830 400a 	ldrh.w	r4, [r0, sl]
 801cbb6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801cbba:	9801      	ldr	r0, [sp, #4]
 801cbbc:	f89b b001 	ldrb.w	fp, [fp, #1]
 801cbc0:	f810 8008 	ldrb.w	r8, [r0, r8]
 801cbc4:	9800      	ldr	r0, [sp, #0]
 801cbc6:	1227      	asrs	r7, r4, #8
 801cbc8:	fb16 f609 	smulbb	r6, r6, r9
 801cbcc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cbd0:	fb07 6705 	mla	r7, r7, r5, r6
 801cbd4:	10e6      	asrs	r6, r4, #3
 801cbd6:	00e4      	lsls	r4, r4, #3
 801cbd8:	b2e4      	uxtb	r4, r4
 801cbda:	fb1b fb09 	smulbb	fp, fp, r9
 801cbde:	fb14 f405 	smulbb	r4, r4, r5
 801cbe2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cbe6:	b2bf      	uxth	r7, r7
 801cbe8:	fb06 b605 	mla	r6, r6, r5, fp
 801cbec:	fb08 4809 	mla	r8, r8, r9, r4
 801cbf0:	b2b6      	uxth	r6, r6
 801cbf2:	fa1f f888 	uxth.w	r8, r8
 801cbf6:	1c7c      	adds	r4, r7, #1
 801cbf8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801cbfc:	f106 0b01 	add.w	fp, r6, #1
 801cc00:	f108 0401 	add.w	r4, r8, #1
 801cc04:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801cc08:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801cc0c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cc10:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801cc14:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801cc18:	4327      	orrs	r7, r4
 801cc1a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801cc1e:	ea47 070b 	orr.w	r7, r7, fp
 801cc22:	f820 700a 	strh.w	r7, [r0, sl]
 801cc26:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cc28:	4401      	add	r1, r0
 801cc2a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cc2c:	f10e 3eff 	add.w	lr, lr, #4294967295
 801cc30:	4402      	add	r2, r0
 801cc32:	e759      	b.n	801cae8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801cc34:	b007      	add	sp, #28
 801cc36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801cc3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cc3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc40:	b085      	sub	sp, #20
 801cc42:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cc46:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801cc48:	9203      	str	r2, [sp, #12]
 801cc4a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801cc4e:	6870      	ldr	r0, [r6, #4]
 801cc50:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801cc52:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801cc56:	686f      	ldr	r7, [r5, #4]
 801cc58:	9101      	str	r1, [sp, #4]
 801cc5a:	fb00 2404 	mla	r4, r0, r4, r2
 801cc5e:	6832      	ldr	r2, [r6, #0]
 801cc60:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cc64:	682a      	ldr	r2, [r5, #0]
 801cc66:	9202      	str	r2, [sp, #8]
 801cc68:	3704      	adds	r7, #4
 801cc6a:	9a01      	ldr	r2, [sp, #4]
 801cc6c:	2a00      	cmp	r2, #0
 801cc6e:	dc03      	bgt.n	801cc78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cc70:	9a03      	ldr	r2, [sp, #12]
 801cc72:	2a00      	cmp	r2, #0
 801cc74:	f340 80cc 	ble.w	801ce10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801cc78:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cc7a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801cc7e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801cc82:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801cc86:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cc88:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cc8c:	2b00      	cmp	r3, #0
 801cc8e:	dd0d      	ble.n	801ccac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cc90:	1406      	asrs	r6, r0, #16
 801cc92:	d405      	bmi.n	801cca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801cc94:	454e      	cmp	r6, r9
 801cc96:	da03      	bge.n	801cca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801cc98:	1416      	asrs	r6, r2, #16
 801cc9a:	d401      	bmi.n	801cca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801cc9c:	4546      	cmp	r6, r8
 801cc9e:	db06      	blt.n	801ccae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cca0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801cca2:	4460      	add	r0, ip
 801cca4:	4432      	add	r2, r6
 801cca6:	3b01      	subs	r3, #1
 801cca8:	3402      	adds	r4, #2
 801ccaa:	e7ef      	b.n	801cc8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801ccac:	d00f      	beq.n	801ccce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ccae:	1e5e      	subs	r6, r3, #1
 801ccb0:	fb0c 0e06 	mla	lr, ip, r6, r0
 801ccb4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801ccb8:	d543      	bpl.n	801cd42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ccba:	4698      	mov	r8, r3
 801ccbc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801ccc0:	f1b8 0f00 	cmp.w	r8, #0
 801ccc4:	dc71      	bgt.n	801cdaa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801ccc6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ccca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ccce:	9b01      	ldr	r3, [sp, #4]
 801ccd0:	2b00      	cmp	r3, #0
 801ccd2:	f340 809d 	ble.w	801ce10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ccd6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ccda:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ccde:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cce2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cce4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cce8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ccec:	eeb0 6a62 	vmov.f32	s12, s5
 801ccf0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ccf4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ccf8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ccfc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801cd00:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cd04:	eeb0 6a43 	vmov.f32	s12, s6
 801cd08:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cd0c:	ee12 2a90 	vmov	r2, s5
 801cd10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cd14:	fb92 fcf3 	sdiv	ip, r2, r3
 801cd18:	ee13 2a10 	vmov	r2, s6
 801cd1c:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd20:	9312      	str	r3, [sp, #72]	; 0x48
 801cd22:	9b01      	ldr	r3, [sp, #4]
 801cd24:	9a03      	ldr	r2, [sp, #12]
 801cd26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cd2a:	3b01      	subs	r3, #1
 801cd2c:	9301      	str	r3, [sp, #4]
 801cd2e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801cd32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cd34:	eeb0 3a67 	vmov.f32	s6, s15
 801cd38:	bf08      	it	eq
 801cd3a:	4613      	moveq	r3, r2
 801cd3c:	eef0 2a47 	vmov.f32	s5, s14
 801cd40:	e793      	b.n	801cc6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801cd42:	45ce      	cmp	lr, r9
 801cd44:	dab9      	bge.n	801ccba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cd46:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cd48:	fb01 2606 	mla	r6, r1, r6, r2
 801cd4c:	1436      	asrs	r6, r6, #16
 801cd4e:	d4b4      	bmi.n	801ccba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cd50:	4546      	cmp	r6, r8
 801cd52:	dab2      	bge.n	801ccba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cd54:	4698      	mov	r8, r3
 801cd56:	46a2      	mov	sl, r4
 801cd58:	f1b8 0f00 	cmp.w	r8, #0
 801cd5c:	ddb3      	ble.n	801ccc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cd5e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801cd62:	9902      	ldr	r1, [sp, #8]
 801cd64:	1416      	asrs	r6, r2, #16
 801cd66:	fb09 1606 	mla	r6, r9, r6, r1
 801cd6a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801cd6e:	492a      	ldr	r1, [pc, #168]	; (801ce18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801cd70:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801cd74:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cd78:	eb07 0b0e 	add.w	fp, r7, lr
 801cd7c:	4460      	add	r0, ip
 801cd7e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801cd82:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801cd86:	00f6      	lsls	r6, r6, #3
 801cd88:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801cd8c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cd90:	ea49 0606 	orr.w	r6, r9, r6
 801cd94:	f817 900e 	ldrb.w	r9, [r7, lr]
 801cd98:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cd9a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801cd9e:	f82a 6b02 	strh.w	r6, [sl], #2
 801cda2:	440a      	add	r2, r1
 801cda4:	f108 38ff 	add.w	r8, r8, #4294967295
 801cda8:	e7d6      	b.n	801cd58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801cdaa:	ea5f 4920 	movs.w	r9, r0, asr #16
 801cdae:	d429      	bmi.n	801ce04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cdb0:	68ae      	ldr	r6, [r5, #8]
 801cdb2:	454e      	cmp	r6, r9
 801cdb4:	dd26      	ble.n	801ce04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cdb6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801cdba:	d423      	bmi.n	801ce04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cdbc:	68e9      	ldr	r1, [r5, #12]
 801cdbe:	4559      	cmp	r1, fp
 801cdc0:	dd20      	ble.n	801ce04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cdc2:	9902      	ldr	r1, [sp, #8]
 801cdc4:	fa0f fe86 	sxth.w	lr, r6
 801cdc8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801cdcc:	f06f 0101 	mvn.w	r1, #1
 801cdd0:	f81e e009 	ldrb.w	lr, [lr, r9]
 801cdd4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cdd8:	eb07 060e 	add.w	r6, r7, lr
 801cddc:	fb01 f908 	mul.w	r9, r1, r8
 801cde0:	f896 b002 	ldrb.w	fp, [r6, #2]
 801cde4:	7876      	ldrb	r6, [r6, #1]
 801cde6:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801cdea:	00f6      	lsls	r6, r6, #3
 801cdec:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801cdf0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cdf4:	ea4b 0606 	orr.w	r6, fp, r6
 801cdf8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801cdfc:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801ce00:	f82a 6009 	strh.w	r6, [sl, r9]
 801ce04:	9912      	ldr	r1, [sp, #72]	; 0x48
 801ce06:	4460      	add	r0, ip
 801ce08:	440a      	add	r2, r1
 801ce0a:	f108 38ff 	add.w	r8, r8, #4294967295
 801ce0e:	e757      	b.n	801ccc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ce10:	b005      	add	sp, #20
 801ce12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce16:	bf00      	nop
 801ce18:	fffff800 	.word	0xfffff800

0801ce1c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ce1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce20:	b087      	sub	sp, #28
 801ce22:	468b      	mov	fp, r1
 801ce24:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ce26:	9204      	str	r2, [sp, #16]
 801ce28:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ce2c:	9205      	str	r2, [sp, #20]
 801ce2e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ce32:	6841      	ldr	r1, [r0, #4]
 801ce34:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801ce38:	fb01 2404 	mla	r4, r1, r4, r2
 801ce3c:	6802      	ldr	r2, [r0, #0]
 801ce3e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ce42:	f8dc 2000 	ldr.w	r2, [ip]
 801ce46:	9201      	str	r2, [sp, #4]
 801ce48:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801ce4c:	3204      	adds	r2, #4
 801ce4e:	9202      	str	r2, [sp, #8]
 801ce50:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ce54:	f1bb 0f00 	cmp.w	fp, #0
 801ce58:	dc03      	bgt.n	801ce62 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801ce5a:	9a04      	ldr	r2, [sp, #16]
 801ce5c:	2a00      	cmp	r2, #0
 801ce5e:	f340 8138 	ble.w	801d0d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ce62:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ce64:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801ce68:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801ce6c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ce70:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ce72:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ce76:	2b00      	cmp	r3, #0
 801ce78:	dd0e      	ble.n	801ce98 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ce7a:	1402      	asrs	r2, r0, #16
 801ce7c:	d405      	bmi.n	801ce8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ce7e:	42ba      	cmp	r2, r7
 801ce80:	da03      	bge.n	801ce8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ce82:	140a      	asrs	r2, r1, #16
 801ce84:	d401      	bmi.n	801ce8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ce86:	42b2      	cmp	r2, r6
 801ce88:	db07      	blt.n	801ce9a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ce8a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ce8c:	4410      	add	r0, r2
 801ce8e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ce90:	3b01      	subs	r3, #1
 801ce92:	4411      	add	r1, r2
 801ce94:	3402      	adds	r4, #2
 801ce96:	e7ee      	b.n	801ce76 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801ce98:	d019      	beq.n	801cece <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801ce9a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ce9c:	1e5a      	subs	r2, r3, #1
 801ce9e:	fb05 0502 	mla	r5, r5, r2, r0
 801cea2:	142d      	asrs	r5, r5, #16
 801cea4:	d409      	bmi.n	801ceba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801cea6:	42bd      	cmp	r5, r7
 801cea8:	da07      	bge.n	801ceba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ceaa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ceac:	fb05 1202 	mla	r2, r5, r2, r1
 801ceb0:	1412      	asrs	r2, r2, #16
 801ceb2:	d402      	bmi.n	801ceba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ceb4:	42b2      	cmp	r2, r6
 801ceb6:	f2c0 80ac 	blt.w	801d012 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801ceba:	f04f 0e00 	mov.w	lr, #0
 801cebe:	eb03 020e 	add.w	r2, r3, lr
 801cec2:	2a00      	cmp	r2, #0
 801cec4:	dc3e      	bgt.n	801cf44 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801cec6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ceca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cece:	f1bb 0f00 	cmp.w	fp, #0
 801ced2:	f340 80fe 	ble.w	801d0d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ced6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ceda:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cede:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cee2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cee4:	f1bb 0b01 	subs.w	fp, fp, #1
 801cee8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ceec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cef0:	eeb0 6a62 	vmov.f32	s12, s5
 801cef4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cef8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cefc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cf00:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801cf04:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cf08:	eeb0 6a43 	vmov.f32	s12, s6
 801cf0c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cf10:	ee12 2a90 	vmov	r2, s5
 801cf14:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cf18:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf1c:	ee13 2a10 	vmov	r2, s6
 801cf20:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cf24:	9313      	str	r3, [sp, #76]	; 0x4c
 801cf26:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cf28:	fb92 f3f3 	sdiv	r3, r2, r3
 801cf2c:	9a04      	ldr	r2, [sp, #16]
 801cf2e:	9314      	str	r3, [sp, #80]	; 0x50
 801cf30:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801cf34:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cf36:	eeb0 3a67 	vmov.f32	s6, s15
 801cf3a:	bf08      	it	eq
 801cf3c:	4613      	moveq	r3, r2
 801cf3e:	eef0 2a47 	vmov.f32	s5, s14
 801cf42:	e787      	b.n	801ce54 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801cf44:	1406      	asrs	r6, r0, #16
 801cf46:	d45d      	bmi.n	801d004 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801cf48:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801cf4c:	42b5      	cmp	r5, r6
 801cf4e:	dd59      	ble.n	801d004 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801cf50:	140f      	asrs	r7, r1, #16
 801cf52:	d457      	bmi.n	801d004 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801cf54:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801cf58:	42ba      	cmp	r2, r7
 801cf5a:	dd53      	ble.n	801d004 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801cf5c:	9a01      	ldr	r2, [sp, #4]
 801cf5e:	b22d      	sxth	r5, r5
 801cf60:	fb07 2505 	mla	r5, r7, r5, r2
 801cf64:	5daa      	ldrb	r2, [r5, r6]
 801cf66:	9d02      	ldr	r5, [sp, #8]
 801cf68:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801cf6c:	0e2e      	lsrs	r6, r5, #24
 801cf6e:	d049      	beq.n	801d004 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801cf70:	f06f 0201 	mvn.w	r2, #1
 801cf74:	fb02 f20e 	mul.w	r2, r2, lr
 801cf78:	9203      	str	r2, [sp, #12]
 801cf7a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801cf7e:	9a05      	ldr	r2, [sp, #20]
 801cf80:	4356      	muls	r6, r2
 801cf82:	1c72      	adds	r2, r6, #1
 801cf84:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801cf88:	1212      	asrs	r2, r2, #8
 801cf8a:	fa1f f982 	uxth.w	r9, r2
 801cf8e:	ea4f 2728 	mov.w	r7, r8, asr #8
 801cf92:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801cf96:	43d2      	mvns	r2, r2
 801cf98:	b2d2      	uxtb	r2, r2
 801cf9a:	fb16 f609 	smulbb	r6, r6, r9
 801cf9e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cfa2:	fb07 6702 	mla	r7, r7, r2, r6
 801cfa6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801cfaa:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801cfae:	b2ed      	uxtb	r5, r5
 801cfb0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801cfb4:	fa5f f888 	uxtb.w	r8, r8
 801cfb8:	fb15 f509 	smulbb	r5, r5, r9
 801cfbc:	fb08 5502 	mla	r5, r8, r2, r5
 801cfc0:	b2bf      	uxth	r7, r7
 801cfc2:	fb1a fa09 	smulbb	sl, sl, r9
 801cfc6:	b2ad      	uxth	r5, r5
 801cfc8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cfcc:	fb06 a602 	mla	r6, r6, r2, sl
 801cfd0:	1c7a      	adds	r2, r7, #1
 801cfd2:	f105 0a01 	add.w	sl, r5, #1
 801cfd6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801cfda:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801cfde:	b2b6      	uxth	r6, r6
 801cfe0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801cfe4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cfe8:	ea4a 0707 	orr.w	r7, sl, r7
 801cfec:	f106 0a01 	add.w	sl, r6, #1
 801cff0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801cff4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cff8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801cffc:	9a03      	ldr	r2, [sp, #12]
 801cffe:	ea47 070a 	orr.w	r7, r7, sl
 801d002:	52a7      	strh	r7, [r4, r2]
 801d004:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d006:	4410      	add	r0, r2
 801d008:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d00a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d00e:	4411      	add	r1, r2
 801d010:	e755      	b.n	801cebe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d012:	f04f 0800 	mov.w	r8, #0
 801d016:	eba3 0208 	sub.w	r2, r3, r8
 801d01a:	2a00      	cmp	r2, #0
 801d01c:	f77f af53 	ble.w	801cec6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d020:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801d024:	9f01      	ldr	r7, [sp, #4]
 801d026:	140a      	asrs	r2, r1, #16
 801d028:	1405      	asrs	r5, r0, #16
 801d02a:	fb06 7202 	mla	r2, r6, r2, r7
 801d02e:	5d52      	ldrb	r2, [r2, r5]
 801d030:	9d02      	ldr	r5, [sp, #8]
 801d032:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d036:	0e2e      	lsrs	r6, r5, #24
 801d038:	d044      	beq.n	801d0c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d03a:	9a05      	ldr	r2, [sp, #20]
 801d03c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801d040:	4356      	muls	r6, r2
 801d042:	1c72      	adds	r2, r6, #1
 801d044:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d048:	1212      	asrs	r2, r2, #8
 801d04a:	fa1f f982 	uxth.w	r9, r2
 801d04e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801d052:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d056:	43d2      	mvns	r2, r2
 801d058:	b2d2      	uxtb	r2, r2
 801d05a:	fb16 f609 	smulbb	r6, r6, r9
 801d05e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d062:	fb07 6702 	mla	r7, r7, r2, r6
 801d066:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d06a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d06e:	b2ed      	uxtb	r5, r5
 801d070:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d074:	fa5f fe8e 	uxtb.w	lr, lr
 801d078:	fb15 f509 	smulbb	r5, r5, r9
 801d07c:	fb0e 5502 	mla	r5, lr, r2, r5
 801d080:	b2bf      	uxth	r7, r7
 801d082:	fb1a fa09 	smulbb	sl, sl, r9
 801d086:	b2ad      	uxth	r5, r5
 801d088:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d08c:	fb06 a602 	mla	r6, r6, r2, sl
 801d090:	1c7a      	adds	r2, r7, #1
 801d092:	f105 0a01 	add.w	sl, r5, #1
 801d096:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d09a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d09e:	b2b6      	uxth	r6, r6
 801d0a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d0a4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d0a8:	ea4a 0707 	orr.w	r7, sl, r7
 801d0ac:	f106 0a01 	add.w	sl, r6, #1
 801d0b0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d0b4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d0b8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d0bc:	ea47 070a 	orr.w	r7, r7, sl
 801d0c0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d0c4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d0c6:	4410      	add	r0, r2
 801d0c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d0ca:	f108 0801 	add.w	r8, r8, #1
 801d0ce:	4411      	add	r1, r2
 801d0d0:	e7a1      	b.n	801d016 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801d0d2:	b007      	add	sp, #28
 801d0d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d0d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d0d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d0dc:	b085      	sub	sp, #20
 801d0de:	468b      	mov	fp, r1
 801d0e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d0e2:	9203      	str	r2, [sp, #12]
 801d0e4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d0e8:	6841      	ldr	r1, [r0, #4]
 801d0ea:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801d0ee:	fb01 2404 	mla	r4, r1, r4, r2
 801d0f2:	6802      	ldr	r2, [r0, #0]
 801d0f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d0f8:	f8de 2000 	ldr.w	r2, [lr]
 801d0fc:	9200      	str	r2, [sp, #0]
 801d0fe:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d102:	3204      	adds	r2, #4
 801d104:	9201      	str	r2, [sp, #4]
 801d106:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d10a:	f1bb 0f00 	cmp.w	fp, #0
 801d10e:	dc03      	bgt.n	801d118 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d110:	9a03      	ldr	r2, [sp, #12]
 801d112:	2a00      	cmp	r2, #0
 801d114:	f340 8153 	ble.w	801d3be <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d118:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d11a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d11e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d122:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d126:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d128:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d12c:	2b00      	cmp	r3, #0
 801d12e:	dd0e      	ble.n	801d14e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d130:	1408      	asrs	r0, r1, #16
 801d132:	d405      	bmi.n	801d140 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d134:	42b8      	cmp	r0, r7
 801d136:	da03      	bge.n	801d140 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d138:	1410      	asrs	r0, r2, #16
 801d13a:	d401      	bmi.n	801d140 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d13c:	42b0      	cmp	r0, r6
 801d13e:	db07      	blt.n	801d150 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d140:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d142:	4401      	add	r1, r0
 801d144:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d146:	3b01      	subs	r3, #1
 801d148:	4402      	add	r2, r0
 801d14a:	3402      	adds	r4, #2
 801d14c:	e7ee      	b.n	801d12c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d14e:	d017      	beq.n	801d180 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d150:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d152:	1e58      	subs	r0, r3, #1
 801d154:	fb05 1500 	mla	r5, r5, r0, r1
 801d158:	142d      	asrs	r5, r5, #16
 801d15a:	d409      	bmi.n	801d170 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d15c:	42bd      	cmp	r5, r7
 801d15e:	da07      	bge.n	801d170 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d160:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d162:	fb05 2000 	mla	r0, r5, r0, r2
 801d166:	1400      	asrs	r0, r0, #16
 801d168:	d402      	bmi.n	801d170 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d16a:	42b0      	cmp	r0, r6
 801d16c:	f2c0 80bc 	blt.w	801d2e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801d170:	2600      	movs	r6, #0
 801d172:	1998      	adds	r0, r3, r6
 801d174:	2800      	cmp	r0, #0
 801d176:	dc3e      	bgt.n	801d1f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801d178:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d17c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d180:	f1bb 0f00 	cmp.w	fp, #0
 801d184:	f340 811b 	ble.w	801d3be <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d188:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d18c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d190:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d194:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d196:	f1bb 0b01 	subs.w	fp, fp, #1
 801d19a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d19e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d1a2:	eeb0 6a62 	vmov.f32	s12, s5
 801d1a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d1aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d1ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d1b2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d1b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d1ba:	eeb0 6a43 	vmov.f32	s12, s6
 801d1be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d1c2:	ee12 2a90 	vmov	r2, s5
 801d1c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d1ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801d1ce:	ee13 2a10 	vmov	r2, s6
 801d1d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d1d6:	9311      	str	r3, [sp, #68]	; 0x44
 801d1d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d1da:	fb92 f3f3 	sdiv	r3, r2, r3
 801d1de:	9a03      	ldr	r2, [sp, #12]
 801d1e0:	9312      	str	r3, [sp, #72]	; 0x48
 801d1e2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d1e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d1e8:	eeb0 3a67 	vmov.f32	s6, s15
 801d1ec:	bf08      	it	eq
 801d1ee:	4613      	moveq	r3, r2
 801d1f0:	eef0 2a47 	vmov.f32	s5, s14
 801d1f4:	e789      	b.n	801d10a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801d1f6:	140f      	asrs	r7, r1, #16
 801d1f8:	d426      	bmi.n	801d248 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d1fa:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d1fe:	42bd      	cmp	r5, r7
 801d200:	dd22      	ble.n	801d248 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d202:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d206:	d41f      	bmi.n	801d248 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d208:	f8de 000c 	ldr.w	r0, [lr, #12]
 801d20c:	4560      	cmp	r0, ip
 801d20e:	dd1b      	ble.n	801d248 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d210:	9800      	ldr	r0, [sp, #0]
 801d212:	b22d      	sxth	r5, r5
 801d214:	fb0c 0505 	mla	r5, ip, r5, r0
 801d218:	5de8      	ldrb	r0, [r5, r7]
 801d21a:	9d01      	ldr	r5, [sp, #4]
 801d21c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801d220:	0e07      	lsrs	r7, r0, #24
 801d222:	2fff      	cmp	r7, #255	; 0xff
 801d224:	d116      	bne.n	801d254 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d226:	f06f 0501 	mvn.w	r5, #1
 801d22a:	fb05 f706 	mul.w	r7, r5, r6
 801d22e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801d232:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801d236:	0945      	lsrs	r5, r0, #5
 801d238:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d23c:	ea4c 0505 	orr.w	r5, ip, r5
 801d240:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d244:	4305      	orrs	r5, r0
 801d246:	53e5      	strh	r5, [r4, r7]
 801d248:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d24a:	4401      	add	r1, r0
 801d24c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d24e:	3e01      	subs	r6, #1
 801d250:	4402      	add	r2, r0
 801d252:	e78e      	b.n	801d172 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d254:	b2fd      	uxtb	r5, r7
 801d256:	2f00      	cmp	r7, #0
 801d258:	d0f6      	beq.n	801d248 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d25a:	f06f 0701 	mvn.w	r7, #1
 801d25e:	4377      	muls	r7, r6
 801d260:	fa1f f985 	uxth.w	r9, r5
 801d264:	f834 8007 	ldrh.w	r8, [r4, r7]
 801d268:	9702      	str	r7, [sp, #8]
 801d26a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d26e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801d272:	43ed      	mvns	r5, r5
 801d274:	b2ed      	uxtb	r5, r5
 801d276:	fb17 f709 	smulbb	r7, r7, r9
 801d27a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d27e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801d282:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801d286:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801d28a:	b2c0      	uxtb	r0, r0
 801d28c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d290:	fa5f f888 	uxtb.w	r8, r8
 801d294:	fb10 f009 	smulbb	r0, r0, r9
 801d298:	fb08 0005 	mla	r0, r8, r5, r0
 801d29c:	b280      	uxth	r0, r0
 801d29e:	fa1f fc8c 	uxth.w	ip, ip
 801d2a2:	fb1a fa09 	smulbb	sl, sl, r9
 801d2a6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d2aa:	fb07 a705 	mla	r7, r7, r5, sl
 801d2ae:	f100 0a01 	add.w	sl, r0, #1
 801d2b2:	f10c 0501 	add.w	r5, ip, #1
 801d2b6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801d2ba:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801d2be:	b2bf      	uxth	r7, r7
 801d2c0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d2c4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d2c8:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d2cc:	f107 0a01 	add.w	sl, r7, #1
 801d2d0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d2d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d2d8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d2dc:	9802      	ldr	r0, [sp, #8]
 801d2de:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d2e2:	f824 c000 	strh.w	ip, [r4, r0]
 801d2e6:	e7af      	b.n	801d248 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d2e8:	f04f 0800 	mov.w	r8, #0
 801d2ec:	eba3 0008 	sub.w	r0, r3, r8
 801d2f0:	2800      	cmp	r0, #0
 801d2f2:	f77f af41 	ble.w	801d178 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d2f6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d2fa:	9f00      	ldr	r7, [sp, #0]
 801d2fc:	1410      	asrs	r0, r2, #16
 801d2fe:	140d      	asrs	r5, r1, #16
 801d300:	fb06 7000 	mla	r0, r6, r0, r7
 801d304:	5d40      	ldrb	r0, [r0, r5]
 801d306:	9d01      	ldr	r5, [sp, #4]
 801d308:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801d30c:	0e2e      	lsrs	r6, r5, #24
 801d30e:	2eff      	cmp	r6, #255	; 0xff
 801d310:	d112      	bne.n	801d338 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801d312:	482c      	ldr	r0, [pc, #176]	; (801d3c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801d314:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801d318:	0968      	lsrs	r0, r5, #5
 801d31a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d31e:	4330      	orrs	r0, r6
 801d320:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d324:	4328      	orrs	r0, r5
 801d326:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801d32a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d32c:	4401      	add	r1, r0
 801d32e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d330:	f108 0801 	add.w	r8, r8, #1
 801d334:	4402      	add	r2, r0
 801d336:	e7d9      	b.n	801d2ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d338:	b2f0      	uxtb	r0, r6
 801d33a:	2e00      	cmp	r6, #0
 801d33c:	d0f5      	beq.n	801d32a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d33e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801d342:	fa1f f980 	uxth.w	r9, r0
 801d346:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d34a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d34e:	43c0      	mvns	r0, r0
 801d350:	b2c0      	uxtb	r0, r0
 801d352:	fb16 f609 	smulbb	r6, r6, r9
 801d356:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d35a:	fb07 6700 	mla	r7, r7, r0, r6
 801d35e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d362:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d366:	b2ed      	uxtb	r5, r5
 801d368:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d36c:	fa5f fc8c 	uxtb.w	ip, ip
 801d370:	fb15 f509 	smulbb	r5, r5, r9
 801d374:	fb0c 5500 	mla	r5, ip, r0, r5
 801d378:	b2bf      	uxth	r7, r7
 801d37a:	fb1a fa09 	smulbb	sl, sl, r9
 801d37e:	b2ad      	uxth	r5, r5
 801d380:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d384:	fb06 a600 	mla	r6, r6, r0, sl
 801d388:	1c78      	adds	r0, r7, #1
 801d38a:	f105 0a01 	add.w	sl, r5, #1
 801d38e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801d392:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d396:	b2b6      	uxth	r6, r6
 801d398:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d39c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d3a0:	ea4a 0707 	orr.w	r7, sl, r7
 801d3a4:	f106 0a01 	add.w	sl, r6, #1
 801d3a8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d3ac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d3b0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d3b4:	ea47 070a 	orr.w	r7, r7, sl
 801d3b8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d3bc:	e7b5      	b.n	801d32a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d3be:	b005      	add	sp, #20
 801d3c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d3c4:	fffff800 	.word	0xfffff800

0801d3c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d3c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d3cc:	b087      	sub	sp, #28
 801d3ce:	468b      	mov	fp, r1
 801d3d0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d3d2:	9204      	str	r2, [sp, #16]
 801d3d4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d3d8:	9205      	str	r2, [sp, #20]
 801d3da:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801d3de:	6861      	ldr	r1, [r4, #4]
 801d3e0:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801d3e4:	fb01 2000 	mla	r0, r1, r0, r2
 801d3e8:	6822      	ldr	r2, [r4, #0]
 801d3ea:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d3ee:	f8de 2000 	ldr.w	r2, [lr]
 801d3f2:	9201      	str	r2, [sp, #4]
 801d3f4:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d3f8:	9202      	str	r2, [sp, #8]
 801d3fa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d3fe:	f1bb 0f00 	cmp.w	fp, #0
 801d402:	dc03      	bgt.n	801d40c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801d404:	9a04      	ldr	r2, [sp, #16]
 801d406:	2a00      	cmp	r2, #0
 801d408:	f340 8142 	ble.w	801d690 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d40c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d40e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d412:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d416:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d41a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d41c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d420:	2b00      	cmp	r3, #0
 801d422:	dd0e      	ble.n	801d442 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d424:	140c      	asrs	r4, r1, #16
 801d426:	d405      	bmi.n	801d434 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d428:	42bc      	cmp	r4, r7
 801d42a:	da03      	bge.n	801d434 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d42c:	1414      	asrs	r4, r2, #16
 801d42e:	d401      	bmi.n	801d434 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d430:	42b4      	cmp	r4, r6
 801d432:	db07      	blt.n	801d444 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d434:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d436:	4421      	add	r1, r4
 801d438:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d43a:	3b01      	subs	r3, #1
 801d43c:	4422      	add	r2, r4
 801d43e:	3002      	adds	r0, #2
 801d440:	e7ee      	b.n	801d420 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d442:	d019      	beq.n	801d478 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801d444:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d446:	1e5c      	subs	r4, r3, #1
 801d448:	fb05 1504 	mla	r5, r5, r4, r1
 801d44c:	142d      	asrs	r5, r5, #16
 801d44e:	d409      	bmi.n	801d464 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d450:	42bd      	cmp	r5, r7
 801d452:	da07      	bge.n	801d464 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d454:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d456:	fb05 2404 	mla	r4, r5, r4, r2
 801d45a:	1424      	asrs	r4, r4, #16
 801d45c:	d402      	bmi.n	801d464 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d45e:	42b4      	cmp	r4, r6
 801d460:	f2c0 80b1 	blt.w	801d5c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801d464:	f04f 0800 	mov.w	r8, #0
 801d468:	eb03 0408 	add.w	r4, r3, r8
 801d46c:	2c00      	cmp	r4, #0
 801d46e:	dc3e      	bgt.n	801d4ee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801d470:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d474:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d478:	f1bb 0f00 	cmp.w	fp, #0
 801d47c:	f340 8108 	ble.w	801d690 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d480:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d484:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d488:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d48c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d48e:	f1bb 0b01 	subs.w	fp, fp, #1
 801d492:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d496:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d49a:	eeb0 6a62 	vmov.f32	s12, s5
 801d49e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d4a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d4a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d4aa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d4ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d4b2:	eeb0 6a43 	vmov.f32	s12, s6
 801d4b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d4ba:	ee12 2a90 	vmov	r2, s5
 801d4be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d4c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d4c6:	ee13 2a10 	vmov	r2, s6
 801d4ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d4ce:	9313      	str	r3, [sp, #76]	; 0x4c
 801d4d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d4d2:	fb92 f3f3 	sdiv	r3, r2, r3
 801d4d6:	9a04      	ldr	r2, [sp, #16]
 801d4d8:	9314      	str	r3, [sp, #80]	; 0x50
 801d4da:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d4de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d4e0:	eeb0 3a67 	vmov.f32	s6, s15
 801d4e4:	bf08      	it	eq
 801d4e6:	4613      	moveq	r3, r2
 801d4e8:	eef0 2a47 	vmov.f32	s5, s14
 801d4ec:	e787      	b.n	801d3fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801d4ee:	140e      	asrs	r6, r1, #16
 801d4f0:	d462      	bmi.n	801d5b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d4f2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d4f6:	42b5      	cmp	r5, r6
 801d4f8:	dd5e      	ble.n	801d5b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d4fa:	1417      	asrs	r7, r2, #16
 801d4fc:	d45c      	bmi.n	801d5b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d4fe:	f8de 400c 	ldr.w	r4, [lr, #12]
 801d502:	42bc      	cmp	r4, r7
 801d504:	dd58      	ble.n	801d5b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d506:	b22d      	sxth	r5, r5
 801d508:	fb07 6505 	mla	r5, r7, r5, r6
 801d50c:	9c02      	ldr	r4, [sp, #8]
 801d50e:	5d66      	ldrb	r6, [r4, r5]
 801d510:	2e00      	cmp	r6, #0
 801d512:	d051      	beq.n	801d5b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d514:	9c01      	ldr	r4, [sp, #4]
 801d516:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801d51a:	f06f 0401 	mvn.w	r4, #1
 801d51e:	fb04 f408 	mul.w	r4, r4, r8
 801d522:	9403      	str	r4, [sp, #12]
 801d524:	5b05      	ldrh	r5, [r0, r4]
 801d526:	9c05      	ldr	r4, [sp, #20]
 801d528:	4366      	muls	r6, r4
 801d52a:	1c74      	adds	r4, r6, #1
 801d52c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d530:	1224      	asrs	r4, r4, #8
 801d532:	b2a7      	uxth	r7, r4
 801d534:	122e      	asrs	r6, r5, #8
 801d536:	43e4      	mvns	r4, r4
 801d538:	b2e4      	uxtb	r4, r4
 801d53a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801d53e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d542:	fb16 f604 	smulbb	r6, r6, r4
 801d546:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d54a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d54e:	00ed      	lsls	r5, r5, #3
 801d550:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d554:	b2ed      	uxtb	r5, r5
 801d556:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801d55a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801d55e:	fb15 f504 	smulbb	r5, r5, r4
 801d562:	fa5f f989 	uxtb.w	r9, r9
 801d566:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d56a:	fb09 5507 	mla	r5, r9, r7, r5
 801d56e:	fb1a fa04 	smulbb	sl, sl, r4
 801d572:	fa1f fc8c 	uxth.w	ip, ip
 801d576:	b2ad      	uxth	r5, r5
 801d578:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d57c:	fb06 a607 	mla	r6, r6, r7, sl
 801d580:	f10c 0401 	add.w	r4, ip, #1
 801d584:	f105 0a01 	add.w	sl, r5, #1
 801d588:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d58c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d590:	b2b6      	uxth	r6, r6
 801d592:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d596:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d59a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d59e:	f106 0a01 	add.w	sl, r6, #1
 801d5a2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d5a6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d5aa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d5ae:	9c03      	ldr	r4, [sp, #12]
 801d5b0:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d5b4:	f820 c004 	strh.w	ip, [r0, r4]
 801d5b8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d5ba:	4421      	add	r1, r4
 801d5bc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d5be:	f108 38ff 	add.w	r8, r8, #4294967295
 801d5c2:	4422      	add	r2, r4
 801d5c4:	e750      	b.n	801d468 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d5c6:	f04f 0900 	mov.w	r9, #0
 801d5ca:	eba3 0409 	sub.w	r4, r3, r9
 801d5ce:	2c00      	cmp	r4, #0
 801d5d0:	f77f af4e 	ble.w	801d470 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d5d4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d5d8:	140d      	asrs	r5, r1, #16
 801d5da:	1414      	asrs	r4, r2, #16
 801d5dc:	fb06 5404 	mla	r4, r6, r4, r5
 801d5e0:	9d02      	ldr	r5, [sp, #8]
 801d5e2:	5d2e      	ldrb	r6, [r5, r4]
 801d5e4:	2e00      	cmp	r6, #0
 801d5e6:	d04c      	beq.n	801d682 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801d5e8:	9d01      	ldr	r5, [sp, #4]
 801d5ea:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801d5ee:	9c05      	ldr	r4, [sp, #20]
 801d5f0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801d5f4:	4366      	muls	r6, r4
 801d5f6:	1c74      	adds	r4, r6, #1
 801d5f8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d5fc:	1224      	asrs	r4, r4, #8
 801d5fe:	b2a7      	uxth	r7, r4
 801d600:	122e      	asrs	r6, r5, #8
 801d602:	43e4      	mvns	r4, r4
 801d604:	b2e4      	uxtb	r4, r4
 801d606:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d60a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d60e:	fb16 f604 	smulbb	r6, r6, r4
 801d612:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d616:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d61a:	00ed      	lsls	r5, r5, #3
 801d61c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d620:	b2ed      	uxtb	r5, r5
 801d622:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d626:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d62a:	fb15 f504 	smulbb	r5, r5, r4
 801d62e:	fa5f f888 	uxtb.w	r8, r8
 801d632:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d636:	fb08 5507 	mla	r5, r8, r7, r5
 801d63a:	fb1a fa04 	smulbb	sl, sl, r4
 801d63e:	fa1f fc8c 	uxth.w	ip, ip
 801d642:	b2ad      	uxth	r5, r5
 801d644:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d648:	fb06 a607 	mla	r6, r6, r7, sl
 801d64c:	f10c 0401 	add.w	r4, ip, #1
 801d650:	f105 0a01 	add.w	sl, r5, #1
 801d654:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d658:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d65c:	b2b6      	uxth	r6, r6
 801d65e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d662:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d666:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d66a:	f106 0a01 	add.w	sl, r6, #1
 801d66e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d672:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d676:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d67a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d67e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801d682:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d684:	4421      	add	r1, r4
 801d686:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d688:	f109 0901 	add.w	r9, r9, #1
 801d68c:	4422      	add	r2, r4
 801d68e:	e79c      	b.n	801d5ca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801d690:	b007      	add	sp, #28
 801d692:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d696 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d696:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d69a:	b085      	sub	sp, #20
 801d69c:	468b      	mov	fp, r1
 801d69e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d6a0:	9203      	str	r2, [sp, #12]
 801d6a2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801d6a6:	6861      	ldr	r1, [r4, #4]
 801d6a8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801d6ac:	fb01 2000 	mla	r0, r1, r0, r2
 801d6b0:	6822      	ldr	r2, [r4, #0]
 801d6b2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d6b6:	f8d8 2000 	ldr.w	r2, [r8]
 801d6ba:	9200      	str	r2, [sp, #0]
 801d6bc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801d6c0:	9201      	str	r2, [sp, #4]
 801d6c2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d6c6:	f1bb 0f00 	cmp.w	fp, #0
 801d6ca:	dc03      	bgt.n	801d6d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d6cc:	9a03      	ldr	r2, [sp, #12]
 801d6ce:	2a00      	cmp	r2, #0
 801d6d0:	f340 8146 	ble.w	801d960 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801d6d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d6d6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801d6da:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801d6de:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d6e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d6e4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d6e8:	2b00      	cmp	r3, #0
 801d6ea:	dd0e      	ble.n	801d70a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d6ec:	140c      	asrs	r4, r1, #16
 801d6ee:	d405      	bmi.n	801d6fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d6f0:	42bc      	cmp	r4, r7
 801d6f2:	da03      	bge.n	801d6fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d6f4:	1414      	asrs	r4, r2, #16
 801d6f6:	d401      	bmi.n	801d6fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d6f8:	42b4      	cmp	r4, r6
 801d6fa:	db07      	blt.n	801d70c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d6fc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d6fe:	4421      	add	r1, r4
 801d700:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d702:	3b01      	subs	r3, #1
 801d704:	4422      	add	r2, r4
 801d706:	3002      	adds	r0, #2
 801d708:	e7ee      	b.n	801d6e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801d70a:	d017      	beq.n	801d73c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801d70c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d70e:	1e5c      	subs	r4, r3, #1
 801d710:	fb05 1504 	mla	r5, r5, r4, r1
 801d714:	142d      	asrs	r5, r5, #16
 801d716:	d409      	bmi.n	801d72c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d718:	42bd      	cmp	r5, r7
 801d71a:	da07      	bge.n	801d72c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d71c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d71e:	fb05 2404 	mla	r4, r5, r4, r2
 801d722:	1424      	asrs	r4, r4, #16
 801d724:	d402      	bmi.n	801d72c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d726:	42b4      	cmp	r4, r6
 801d728:	f2c0 80b3 	blt.w	801d892 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801d72c:	2600      	movs	r6, #0
 801d72e:	199c      	adds	r4, r3, r6
 801d730:	2c00      	cmp	r4, #0
 801d732:	dc3e      	bgt.n	801d7b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d734:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d738:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d73c:	f1bb 0f00 	cmp.w	fp, #0
 801d740:	f340 810e 	ble.w	801d960 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801d744:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d748:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d74c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d750:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d752:	f1bb 0b01 	subs.w	fp, fp, #1
 801d756:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d75a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d75e:	eeb0 6a62 	vmov.f32	s12, s5
 801d762:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d766:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d76a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d76e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d772:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d776:	eeb0 6a43 	vmov.f32	s12, s6
 801d77a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d77e:	ee12 2a90 	vmov	r2, s5
 801d782:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d786:	fb92 f3f3 	sdiv	r3, r2, r3
 801d78a:	ee13 2a10 	vmov	r2, s6
 801d78e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d792:	9311      	str	r3, [sp, #68]	; 0x44
 801d794:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d796:	fb92 f3f3 	sdiv	r3, r2, r3
 801d79a:	9a03      	ldr	r2, [sp, #12]
 801d79c:	9312      	str	r3, [sp, #72]	; 0x48
 801d79e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d7a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d7a4:	eeb0 3a67 	vmov.f32	s6, s15
 801d7a8:	bf08      	it	eq
 801d7aa:	4613      	moveq	r3, r2
 801d7ac:	eef0 2a47 	vmov.f32	s5, s14
 801d7b0:	e789      	b.n	801d6c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801d7b2:	140f      	asrs	r7, r1, #16
 801d7b4:	d418      	bmi.n	801d7e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d7b6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801d7ba:	42bd      	cmp	r5, r7
 801d7bc:	dd14      	ble.n	801d7e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d7be:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d7c2:	d411      	bmi.n	801d7e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d7c4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801d7c8:	4564      	cmp	r4, ip
 801d7ca:	dd0d      	ble.n	801d7e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d7cc:	b22d      	sxth	r5, r5
 801d7ce:	fb0c 7505 	mla	r5, ip, r5, r7
 801d7d2:	9c01      	ldr	r4, [sp, #4]
 801d7d4:	5d64      	ldrb	r4, [r4, r5]
 801d7d6:	2cff      	cmp	r4, #255	; 0xff
 801d7d8:	d10c      	bne.n	801d7f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801d7da:	9c00      	ldr	r4, [sp, #0]
 801d7dc:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801d7e0:	f06f 0401 	mvn.w	r4, #1
 801d7e4:	4374      	muls	r4, r6
 801d7e6:	5305      	strh	r5, [r0, r4]
 801d7e8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d7ea:	4421      	add	r1, r4
 801d7ec:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d7ee:	3e01      	subs	r6, #1
 801d7f0:	4422      	add	r2, r4
 801d7f2:	e79c      	b.n	801d72e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d7f4:	2c00      	cmp	r4, #0
 801d7f6:	d0f7      	beq.n	801d7e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d7f8:	9f00      	ldr	r7, [sp, #0]
 801d7fa:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801d7fe:	f06f 0501 	mvn.w	r5, #1
 801d802:	4375      	muls	r5, r6
 801d804:	9502      	str	r5, [sp, #8]
 801d806:	5b45      	ldrh	r5, [r0, r5]
 801d808:	fa1f fc84 	uxth.w	ip, r4
 801d80c:	122f      	asrs	r7, r5, #8
 801d80e:	43e4      	mvns	r4, r4
 801d810:	b2e4      	uxtb	r4, r4
 801d812:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801d816:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d81a:	fb17 f704 	smulbb	r7, r7, r4
 801d81e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d822:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d826:	00ed      	lsls	r5, r5, #3
 801d828:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801d82c:	b2ed      	uxtb	r5, r5
 801d82e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801d832:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801d836:	fb15 f504 	smulbb	r5, r5, r4
 801d83a:	fa5f f989 	uxtb.w	r9, r9
 801d83e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d842:	fb09 550c 	mla	r5, r9, ip, r5
 801d846:	fb1a fa04 	smulbb	sl, sl, r4
 801d84a:	fa1f fe8e 	uxth.w	lr, lr
 801d84e:	b2ad      	uxth	r5, r5
 801d850:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d854:	fb07 a70c 	mla	r7, r7, ip, sl
 801d858:	f10e 0401 	add.w	r4, lr, #1
 801d85c:	f105 0a01 	add.w	sl, r5, #1
 801d860:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801d864:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d868:	b2bf      	uxth	r7, r7
 801d86a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d86e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801d872:	ea4a 0e0e 	orr.w	lr, sl, lr
 801d876:	f107 0a01 	add.w	sl, r7, #1
 801d87a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d87e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d882:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d886:	9c02      	ldr	r4, [sp, #8]
 801d888:	ea4e 0e0a 	orr.w	lr, lr, sl
 801d88c:	f820 e004 	strh.w	lr, [r0, r4]
 801d890:	e7aa      	b.n	801d7e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d892:	f04f 0900 	mov.w	r9, #0
 801d896:	eba3 0409 	sub.w	r4, r3, r9
 801d89a:	2c00      	cmp	r4, #0
 801d89c:	f77f af4a 	ble.w	801d734 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d8a0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801d8a4:	1414      	asrs	r4, r2, #16
 801d8a6:	140d      	asrs	r5, r1, #16
 801d8a8:	fb06 5504 	mla	r5, r6, r4, r5
 801d8ac:	9c01      	ldr	r4, [sp, #4]
 801d8ae:	5d64      	ldrb	r4, [r4, r5]
 801d8b0:	2cff      	cmp	r4, #255	; 0xff
 801d8b2:	d10b      	bne.n	801d8cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d8b4:	9c00      	ldr	r4, [sp, #0]
 801d8b6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801d8ba:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801d8be:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d8c0:	4421      	add	r1, r4
 801d8c2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d8c4:	f109 0901 	add.w	r9, r9, #1
 801d8c8:	4422      	add	r2, r4
 801d8ca:	e7e4      	b.n	801d896 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d8cc:	2c00      	cmp	r4, #0
 801d8ce:	d0f6      	beq.n	801d8be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801d8d0:	9e00      	ldr	r6, [sp, #0]
 801d8d2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801d8d6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801d8da:	b2a7      	uxth	r7, r4
 801d8dc:	122e      	asrs	r6, r5, #8
 801d8de:	43e4      	mvns	r4, r4
 801d8e0:	b2e4      	uxtb	r4, r4
 801d8e2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d8e6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d8ea:	fb16 f604 	smulbb	r6, r6, r4
 801d8ee:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d8f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d8f6:	00ed      	lsls	r5, r5, #3
 801d8f8:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d8fc:	b2ed      	uxtb	r5, r5
 801d8fe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d902:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d906:	fb15 f504 	smulbb	r5, r5, r4
 801d90a:	fa5f fe8e 	uxtb.w	lr, lr
 801d90e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d912:	fb0e 5507 	mla	r5, lr, r7, r5
 801d916:	fb1a fa04 	smulbb	sl, sl, r4
 801d91a:	fa1f fc8c 	uxth.w	ip, ip
 801d91e:	b2ad      	uxth	r5, r5
 801d920:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d924:	fb06 a607 	mla	r6, r6, r7, sl
 801d928:	f10c 0401 	add.w	r4, ip, #1
 801d92c:	f105 0a01 	add.w	sl, r5, #1
 801d930:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d934:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d938:	b2b6      	uxth	r6, r6
 801d93a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d93e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d942:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d946:	f106 0a01 	add.w	sl, r6, #1
 801d94a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d94e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d952:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d956:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d95a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801d95e:	e7ae      	b.n	801d8be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801d960:	b005      	add	sp, #20
 801d962:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d966 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d966:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d96a:	b085      	sub	sp, #20
 801d96c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d96e:	9203      	str	r2, [sp, #12]
 801d970:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801d974:	9201      	str	r2, [sp, #4]
 801d976:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d97a:	9100      	str	r1, [sp, #0]
 801d97c:	6841      	ldr	r1, [r0, #4]
 801d97e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801d982:	fb01 2404 	mla	r4, r1, r4, r2
 801d986:	6802      	ldr	r2, [r0, #0]
 801d988:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d98c:	f8de 2000 	ldr.w	r2, [lr]
 801d990:	9202      	str	r2, [sp, #8]
 801d992:	9a01      	ldr	r2, [sp, #4]
 801d994:	43d6      	mvns	r6, r2
 801d996:	b2f6      	uxtb	r6, r6
 801d998:	9a00      	ldr	r2, [sp, #0]
 801d99a:	2a00      	cmp	r2, #0
 801d99c:	dc03      	bgt.n	801d9a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d99e:	9a03      	ldr	r2, [sp, #12]
 801d9a0:	2a00      	cmp	r2, #0
 801d9a2:	f340 8124 	ble.w	801dbee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801d9a6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d9a8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801d9ac:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801d9b0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d9b4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d9b6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d9ba:	2b00      	cmp	r3, #0
 801d9bc:	dd0e      	ble.n	801d9dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d9be:	1408      	asrs	r0, r1, #16
 801d9c0:	d405      	bmi.n	801d9ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d9c2:	4560      	cmp	r0, ip
 801d9c4:	da03      	bge.n	801d9ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d9c6:	1410      	asrs	r0, r2, #16
 801d9c8:	d401      	bmi.n	801d9ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d9ca:	42b8      	cmp	r0, r7
 801d9cc:	db07      	blt.n	801d9de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d9ce:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d9d0:	4401      	add	r1, r0
 801d9d2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d9d4:	3b01      	subs	r3, #1
 801d9d6:	4402      	add	r2, r0
 801d9d8:	3402      	adds	r4, #2
 801d9da:	e7ee      	b.n	801d9ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d9dc:	d06e      	beq.n	801dabc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801d9de:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d9e0:	1e58      	subs	r0, r3, #1
 801d9e2:	fb05 1500 	mla	r5, r5, r0, r1
 801d9e6:	142d      	asrs	r5, r5, #16
 801d9e8:	d45c      	bmi.n	801daa4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801d9ea:	4565      	cmp	r5, ip
 801d9ec:	da5a      	bge.n	801daa4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801d9ee:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d9f0:	fb05 2000 	mla	r0, r5, r0, r2
 801d9f4:	1400      	asrs	r0, r0, #16
 801d9f6:	d455      	bmi.n	801daa4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801d9f8:	42b8      	cmp	r0, r7
 801d9fa:	da53      	bge.n	801daa4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801d9fc:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801da00:	4699      	mov	r9, r3
 801da02:	46a2      	mov	sl, r4
 801da04:	f1b9 0f00 	cmp.w	r9, #0
 801da08:	dd54      	ble.n	801dab4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801da0a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801da0e:	140d      	asrs	r5, r1, #16
 801da10:	1410      	asrs	r0, r2, #16
 801da12:	fb07 5000 	mla	r0, r7, r0, r5
 801da16:	9d02      	ldr	r5, [sp, #8]
 801da18:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801da1c:	f8ba 5000 	ldrh.w	r5, [sl]
 801da20:	122f      	asrs	r7, r5, #8
 801da22:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801da26:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801da2a:	fb17 f706 	smulbb	r7, r7, r6
 801da2e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801da32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801da36:	00ed      	lsls	r5, r5, #3
 801da38:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801da3c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801da40:	10c7      	asrs	r7, r0, #3
 801da42:	b2ed      	uxtb	r5, r5
 801da44:	00c0      	lsls	r0, r0, #3
 801da46:	fb18 f806 	smulbb	r8, r8, r6
 801da4a:	fb15 f506 	smulbb	r5, r5, r6
 801da4e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801da52:	b2c0      	uxtb	r0, r0
 801da54:	fa1f fc8c 	uxth.w	ip, ip
 801da58:	fb07 870b 	mla	r7, r7, fp, r8
 801da5c:	fb00 500b 	mla	r0, r0, fp, r5
 801da60:	b280      	uxth	r0, r0
 801da62:	b2bf      	uxth	r7, r7
 801da64:	f10c 0501 	add.w	r5, ip, #1
 801da68:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801da6c:	f107 0801 	add.w	r8, r7, #1
 801da70:	1c45      	adds	r5, r0, #1
 801da72:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801da76:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801da7a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801da7c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801da80:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801da84:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801da88:	ea45 0c0c 	orr.w	ip, r5, ip
 801da8c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801da90:	4401      	add	r1, r0
 801da92:	9812      	ldr	r0, [sp, #72]	; 0x48
 801da94:	ea4c 0c08 	orr.w	ip, ip, r8
 801da98:	f82a cb02 	strh.w	ip, [sl], #2
 801da9c:	4402      	add	r2, r0
 801da9e:	f109 39ff 	add.w	r9, r9, #4294967295
 801daa2:	e7af      	b.n	801da04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801daa4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801daa8:	f04f 0800 	mov.w	r8, #0
 801daac:	eb03 0008 	add.w	r0, r3, r8
 801dab0:	2800      	cmp	r0, #0
 801dab2:	dc41      	bgt.n	801db38 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801dab4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dab8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801dabc:	9b00      	ldr	r3, [sp, #0]
 801dabe:	2b00      	cmp	r3, #0
 801dac0:	f340 8095 	ble.w	801dbee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801dac4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dac8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dacc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dad0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dad2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dad6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dada:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dade:	eef0 6a62 	vmov.f32	s13, s5
 801dae2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dae6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801daea:	ee77 2a62 	vsub.f32	s5, s14, s5
 801daee:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801daf2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801daf6:	eef0 6a43 	vmov.f32	s13, s6
 801dafa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dafe:	ee12 2a90 	vmov	r2, s5
 801db02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801db06:	fb92 f3f3 	sdiv	r3, r2, r3
 801db0a:	ee13 2a10 	vmov	r2, s6
 801db0e:	9311      	str	r3, [sp, #68]	; 0x44
 801db10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801db12:	fb92 f3f3 	sdiv	r3, r2, r3
 801db16:	9312      	str	r3, [sp, #72]	; 0x48
 801db18:	9b00      	ldr	r3, [sp, #0]
 801db1a:	9a03      	ldr	r2, [sp, #12]
 801db1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801db20:	3b01      	subs	r3, #1
 801db22:	9300      	str	r3, [sp, #0]
 801db24:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801db28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801db2a:	eeb0 3a67 	vmov.f32	s6, s15
 801db2e:	bf08      	it	eq
 801db30:	4613      	moveq	r3, r2
 801db32:	eef0 2a47 	vmov.f32	s5, s14
 801db36:	e72f      	b.n	801d998 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801db38:	140f      	asrs	r7, r1, #16
 801db3a:	d451      	bmi.n	801dbe0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801db3c:	f8de 5008 	ldr.w	r5, [lr, #8]
 801db40:	42bd      	cmp	r5, r7
 801db42:	dd4d      	ble.n	801dbe0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801db44:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801db48:	d44a      	bmi.n	801dbe0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801db4a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801db4e:	4560      	cmp	r0, ip
 801db50:	dd46      	ble.n	801dbe0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801db52:	b22d      	sxth	r5, r5
 801db54:	fb0c 7505 	mla	r5, ip, r5, r7
 801db58:	9802      	ldr	r0, [sp, #8]
 801db5a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801db5e:	f06f 0501 	mvn.w	r5, #1
 801db62:	fb05 fb08 	mul.w	fp, r5, r8
 801db66:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801db6a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801db6e:	122f      	asrs	r7, r5, #8
 801db70:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801db74:	fb17 f706 	smulbb	r7, r7, r6
 801db78:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801db7c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801db80:	00ed      	lsls	r5, r5, #3
 801db82:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801db86:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801db8a:	10c7      	asrs	r7, r0, #3
 801db8c:	b2ed      	uxtb	r5, r5
 801db8e:	00c0      	lsls	r0, r0, #3
 801db90:	fb19 f906 	smulbb	r9, r9, r6
 801db94:	fb15 f506 	smulbb	r5, r5, r6
 801db98:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801db9c:	b2c0      	uxtb	r0, r0
 801db9e:	fa1f fc8c 	uxth.w	ip, ip
 801dba2:	fb07 970a 	mla	r7, r7, sl, r9
 801dba6:	fb00 500a 	mla	r0, r0, sl, r5
 801dbaa:	b2bf      	uxth	r7, r7
 801dbac:	b280      	uxth	r0, r0
 801dbae:	f10c 0501 	add.w	r5, ip, #1
 801dbb2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801dbb6:	f107 0901 	add.w	r9, r7, #1
 801dbba:	1c45      	adds	r5, r0, #1
 801dbbc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801dbc0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801dbc4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dbc8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801dbcc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dbd0:	ea45 0c0c 	orr.w	ip, r5, ip
 801dbd4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dbd8:	ea4c 0c09 	orr.w	ip, ip, r9
 801dbdc:	f824 c00b 	strh.w	ip, [r4, fp]
 801dbe0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dbe2:	4401      	add	r1, r0
 801dbe4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dbe6:	f108 38ff 	add.w	r8, r8, #4294967295
 801dbea:	4402      	add	r2, r0
 801dbec:	e75e      	b.n	801daac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801dbee:	b005      	add	sp, #20
 801dbf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dbf4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dbf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dbf8:	b085      	sub	sp, #20
 801dbfa:	4693      	mov	fp, r2
 801dbfc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801dbfe:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801dc00:	6870      	ldr	r0, [r6, #4]
 801dc02:	9101      	str	r1, [sp, #4]
 801dc04:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801dc08:	fb00 2404 	mla	r4, r0, r4, r2
 801dc0c:	6832      	ldr	r2, [r6, #0]
 801dc0e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801dc12:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801dc16:	682a      	ldr	r2, [r5, #0]
 801dc18:	9202      	str	r2, [sp, #8]
 801dc1a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801dc1e:	9a01      	ldr	r2, [sp, #4]
 801dc20:	2a00      	cmp	r2, #0
 801dc22:	dc03      	bgt.n	801dc2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801dc24:	f1bb 0f00 	cmp.w	fp, #0
 801dc28:	f340 809a 	ble.w	801dd60 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801dc2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801dc2e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801dc32:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801dc36:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801dc3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801dc3c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801dc40:	2b00      	cmp	r3, #0
 801dc42:	dd0c      	ble.n	801dc5e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801dc44:	1406      	asrs	r6, r0, #16
 801dc46:	d405      	bmi.n	801dc54 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801dc48:	454e      	cmp	r6, r9
 801dc4a:	da03      	bge.n	801dc54 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801dc4c:	1416      	asrs	r6, r2, #16
 801dc4e:	d401      	bmi.n	801dc54 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801dc50:	4546      	cmp	r6, r8
 801dc52:	db05      	blt.n	801dc60 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801dc54:	4470      	add	r0, lr
 801dc56:	4462      	add	r2, ip
 801dc58:	3b01      	subs	r3, #1
 801dc5a:	3402      	adds	r4, #2
 801dc5c:	e7f0      	b.n	801dc40 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801dc5e:	d00f      	beq.n	801dc80 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801dc60:	1e5e      	subs	r6, r3, #1
 801dc62:	fb0e 0706 	mla	r7, lr, r6, r0
 801dc66:	143f      	asrs	r7, r7, #16
 801dc68:	d541      	bpl.n	801dcee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801dc6a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801dc6e:	4698      	mov	r8, r3
 801dc70:	9603      	str	r6, [sp, #12]
 801dc72:	f1b8 0f00 	cmp.w	r8, #0
 801dc76:	dc56      	bgt.n	801dd26 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801dc78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dc7c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801dc80:	9b01      	ldr	r3, [sp, #4]
 801dc82:	2b00      	cmp	r3, #0
 801dc84:	dd6c      	ble.n	801dd60 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801dc86:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dc8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dc8e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801dc92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dc94:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dc98:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dc9c:	eeb0 6a62 	vmov.f32	s12, s5
 801dca0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dca4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dca8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dcac:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801dcb0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dcb4:	eeb0 6a43 	vmov.f32	s12, s6
 801dcb8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dcbc:	ee12 2a90 	vmov	r2, s5
 801dcc0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dcc4:	fb92 fef3 	sdiv	lr, r2, r3
 801dcc8:	ee13 2a10 	vmov	r2, s6
 801dccc:	fb92 fcf3 	sdiv	ip, r2, r3
 801dcd0:	9b01      	ldr	r3, [sp, #4]
 801dcd2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dcd6:	3b01      	subs	r3, #1
 801dcd8:	9301      	str	r3, [sp, #4]
 801dcda:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801dcde:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dce0:	eeb0 3a67 	vmov.f32	s6, s15
 801dce4:	bf08      	it	eq
 801dce6:	465b      	moveq	r3, fp
 801dce8:	eef0 2a47 	vmov.f32	s5, s14
 801dcec:	e797      	b.n	801dc1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801dcee:	454f      	cmp	r7, r9
 801dcf0:	dabb      	bge.n	801dc6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dcf2:	fb0c 2606 	mla	r6, ip, r6, r2
 801dcf6:	1436      	asrs	r6, r6, #16
 801dcf8:	d4b7      	bmi.n	801dc6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dcfa:	4546      	cmp	r6, r8
 801dcfc:	dab5      	bge.n	801dc6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dcfe:	461e      	mov	r6, r3
 801dd00:	46a0      	mov	r8, r4
 801dd02:	2e00      	cmp	r6, #0
 801dd04:	ddb8      	ble.n	801dc78 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801dd06:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801dd0a:	9902      	ldr	r1, [sp, #8]
 801dd0c:	1417      	asrs	r7, r2, #16
 801dd0e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801dd12:	fb0a 9707 	mla	r7, sl, r7, r9
 801dd16:	4470      	add	r0, lr
 801dd18:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801dd1c:	f828 7b02 	strh.w	r7, [r8], #2
 801dd20:	4462      	add	r2, ip
 801dd22:	3e01      	subs	r6, #1
 801dd24:	e7ed      	b.n	801dd02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801dd26:	ea5f 4920 	movs.w	r9, r0, asr #16
 801dd2a:	d414      	bmi.n	801dd56 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801dd2c:	68ae      	ldr	r6, [r5, #8]
 801dd2e:	454e      	cmp	r6, r9
 801dd30:	dd11      	ble.n	801dd56 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801dd32:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801dd36:	d40e      	bmi.n	801dd56 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801dd38:	68ef      	ldr	r7, [r5, #12]
 801dd3a:	4557      	cmp	r7, sl
 801dd3c:	dd0b      	ble.n	801dd56 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801dd3e:	b236      	sxth	r6, r6
 801dd40:	fb0a 9606 	mla	r6, sl, r6, r9
 801dd44:	9f02      	ldr	r7, [sp, #8]
 801dd46:	f06f 0101 	mvn.w	r1, #1
 801dd4a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801dd4e:	fb01 f608 	mul.w	r6, r1, r8
 801dd52:	9903      	ldr	r1, [sp, #12]
 801dd54:	538f      	strh	r7, [r1, r6]
 801dd56:	4470      	add	r0, lr
 801dd58:	4462      	add	r2, ip
 801dd5a:	f108 38ff 	add.w	r8, r8, #4294967295
 801dd5e:	e788      	b.n	801dc72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801dd60:	b005      	add	sp, #20
 801dd62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dd66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dd66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd6a:	b087      	sub	sp, #28
 801dd6c:	468b      	mov	fp, r1
 801dd6e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801dd70:	9203      	str	r2, [sp, #12]
 801dd72:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801dd76:	9204      	str	r2, [sp, #16]
 801dd78:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801dd7c:	6841      	ldr	r1, [r0, #4]
 801dd7e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801dd82:	fb01 2505 	mla	r5, r1, r5, r2
 801dd86:	6802      	ldr	r2, [r0, #0]
 801dd88:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801dd8c:	f8d9 2000 	ldr.w	r2, [r9]
 801dd90:	9201      	str	r2, [sp, #4]
 801dd92:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801dd96:	f1bb 0f00 	cmp.w	fp, #0
 801dd9a:	dc03      	bgt.n	801dda4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801dd9c:	9a03      	ldr	r2, [sp, #12]
 801dd9e:	2a00      	cmp	r2, #0
 801dda0:	f340 8159 	ble.w	801e056 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801dda4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801dda6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801ddaa:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801ddae:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ddb2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ddb4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ddb8:	2b00      	cmp	r3, #0
 801ddba:	dd0e      	ble.n	801ddda <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ddbc:	1402      	asrs	r2, r0, #16
 801ddbe:	d405      	bmi.n	801ddcc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ddc0:	42ba      	cmp	r2, r7
 801ddc2:	da03      	bge.n	801ddcc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ddc4:	140a      	asrs	r2, r1, #16
 801ddc6:	d401      	bmi.n	801ddcc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ddc8:	42b2      	cmp	r2, r6
 801ddca:	db07      	blt.n	801dddc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ddcc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ddce:	4410      	add	r0, r2
 801ddd0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ddd2:	3b01      	subs	r3, #1
 801ddd4:	4411      	add	r1, r2
 801ddd6:	3502      	adds	r5, #2
 801ddd8:	e7ee      	b.n	801ddb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ddda:	d017      	beq.n	801de0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801dddc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ddde:	1e5a      	subs	r2, r3, #1
 801dde0:	fb04 0402 	mla	r4, r4, r2, r0
 801dde4:	1424      	asrs	r4, r4, #16
 801dde6:	d409      	bmi.n	801ddfc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801dde8:	42bc      	cmp	r4, r7
 801ddea:	da07      	bge.n	801ddfc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ddec:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ddee:	fb04 1202 	mla	r2, r4, r2, r1
 801ddf2:	1412      	asrs	r2, r2, #16
 801ddf4:	d402      	bmi.n	801ddfc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ddf6:	42b2      	cmp	r2, r6
 801ddf8:	f2c0 80bf 	blt.w	801df7a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ddfc:	2700      	movs	r7, #0
 801ddfe:	19da      	adds	r2, r3, r7
 801de00:	2a00      	cmp	r2, #0
 801de02:	dc3e      	bgt.n	801de82 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801de04:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801de08:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801de0c:	f1bb 0f00 	cmp.w	fp, #0
 801de10:	f340 8121 	ble.w	801e056 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801de14:	ee30 0a04 	vadd.f32	s0, s0, s8
 801de18:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801de1c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801de20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801de22:	f1bb 0b01 	subs.w	fp, fp, #1
 801de26:	ee31 1a05 	vadd.f32	s2, s2, s10
 801de2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801de2e:	eeb0 6a62 	vmov.f32	s12, s5
 801de32:	ee61 7a27 	vmul.f32	s15, s2, s15
 801de36:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801de3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801de3e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801de42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801de46:	eeb0 6a43 	vmov.f32	s12, s6
 801de4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801de4e:	ee12 2a90 	vmov	r2, s5
 801de52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801de56:	fb92 f3f3 	sdiv	r3, r2, r3
 801de5a:	ee13 2a10 	vmov	r2, s6
 801de5e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801de62:	9313      	str	r3, [sp, #76]	; 0x4c
 801de64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801de66:	fb92 f3f3 	sdiv	r3, r2, r3
 801de6a:	9a03      	ldr	r2, [sp, #12]
 801de6c:	9314      	str	r3, [sp, #80]	; 0x50
 801de6e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801de72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801de74:	eeb0 3a67 	vmov.f32	s6, s15
 801de78:	bf08      	it	eq
 801de7a:	4613      	moveq	r3, r2
 801de7c:	eef0 2a47 	vmov.f32	s5, s14
 801de80:	e789      	b.n	801dd96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801de82:	1406      	asrs	r6, r0, #16
 801de84:	d42d      	bmi.n	801dee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801de86:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801de8a:	42b4      	cmp	r4, r6
 801de8c:	dd29      	ble.n	801dee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801de8e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801de92:	d426      	bmi.n	801dee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801de94:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801de98:	4562      	cmp	r2, ip
 801de9a:	dd22      	ble.n	801dee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801de9c:	b224      	sxth	r4, r4
 801de9e:	9a01      	ldr	r2, [sp, #4]
 801dea0:	fb0c 6404 	mla	r4, ip, r4, r6
 801dea4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801dea8:	0e22      	lsrs	r2, r4, #24
 801deaa:	d01a      	beq.n	801dee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801deac:	9e04      	ldr	r6, [sp, #16]
 801deae:	4372      	muls	r2, r6
 801deb0:	1c56      	adds	r6, r2, #1
 801deb2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801deb6:	1212      	asrs	r2, r2, #8
 801deb8:	0a26      	lsrs	r6, r4, #8
 801deba:	2aff      	cmp	r2, #255	; 0xff
 801debc:	9605      	str	r6, [sp, #20]
 801debe:	d116      	bne.n	801deee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801dec0:	f06f 0201 	mvn.w	r2, #1
 801dec4:	fb02 fc07 	mul.w	ip, r2, r7
 801dec8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801decc:	0962      	lsrs	r2, r4, #5
 801dece:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ded2:	f026 0607 	bic.w	r6, r6, #7
 801ded6:	4316      	orrs	r6, r2
 801ded8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801dedc:	4326      	orrs	r6, r4
 801dede:	f825 600c 	strh.w	r6, [r5, ip]
 801dee2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801dee4:	4410      	add	r0, r2
 801dee6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801dee8:	3f01      	subs	r7, #1
 801deea:	4411      	add	r1, r2
 801deec:	e787      	b.n	801ddfe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801deee:	f06f 0601 	mvn.w	r6, #1
 801def2:	437e      	muls	r6, r7
 801def4:	fa1f fa82 	uxth.w	sl, r2
 801def8:	f835 8006 	ldrh.w	r8, [r5, r6]
 801defc:	9602      	str	r6, [sp, #8]
 801defe:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801df02:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801df06:	43d2      	mvns	r2, r2
 801df08:	b2d2      	uxtb	r2, r2
 801df0a:	fb1c fc0a 	smulbb	ip, ip, sl
 801df0e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801df12:	fb0e ce02 	mla	lr, lr, r2, ip
 801df16:	b2e4      	uxtb	r4, r4
 801df18:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801df1c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801df20:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801df24:	fa5f f888 	uxtb.w	r8, r8
 801df28:	fb14 f40a 	smulbb	r4, r4, sl
 801df2c:	fb08 4402 	mla	r4, r8, r2, r4
 801df30:	fa1f fe8e 	uxth.w	lr, lr
 801df34:	fb16 f60a 	smulbb	r6, r6, sl
 801df38:	b2a4      	uxth	r4, r4
 801df3a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801df3e:	fb0c 6c02 	mla	ip, ip, r2, r6
 801df42:	f10e 0201 	add.w	r2, lr, #1
 801df46:	1c66      	adds	r6, r4, #1
 801df48:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801df4c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801df50:	fa1f fc8c 	uxth.w	ip, ip
 801df54:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801df58:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801df5c:	ea46 0e0e 	orr.w	lr, r6, lr
 801df60:	f10c 0601 	add.w	r6, ip, #1
 801df64:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801df68:	0976      	lsrs	r6, r6, #5
 801df6a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801df6e:	9a02      	ldr	r2, [sp, #8]
 801df70:	ea4e 0e06 	orr.w	lr, lr, r6
 801df74:	f825 e002 	strh.w	lr, [r5, r2]
 801df78:	e7b3      	b.n	801dee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801df7a:	f04f 0800 	mov.w	r8, #0
 801df7e:	eba3 0208 	sub.w	r2, r3, r8
 801df82:	2a00      	cmp	r2, #0
 801df84:	f77f af3e 	ble.w	801de04 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801df88:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801df8c:	1404      	asrs	r4, r0, #16
 801df8e:	140a      	asrs	r2, r1, #16
 801df90:	fb06 4202 	mla	r2, r6, r2, r4
 801df94:	9c01      	ldr	r4, [sp, #4]
 801df96:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801df9a:	0e22      	lsrs	r2, r4, #24
 801df9c:	d016      	beq.n	801dfcc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801df9e:	9e04      	ldr	r6, [sp, #16]
 801dfa0:	4372      	muls	r2, r6
 801dfa2:	1c56      	adds	r6, r2, #1
 801dfa4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801dfa8:	1212      	asrs	r2, r2, #8
 801dfaa:	2aff      	cmp	r2, #255	; 0xff
 801dfac:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801dfb0:	d113      	bne.n	801dfda <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801dfb2:	0962      	lsrs	r2, r4, #5
 801dfb4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801dfb8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dfbc:	f026 0607 	bic.w	r6, r6, #7
 801dfc0:	4316      	orrs	r6, r2
 801dfc2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801dfc6:	4326      	orrs	r6, r4
 801dfc8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801dfcc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801dfce:	4410      	add	r0, r2
 801dfd0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801dfd2:	f108 0801 	add.w	r8, r8, #1
 801dfd6:	4411      	add	r1, r2
 801dfd8:	e7d1      	b.n	801df7e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801dfda:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801dfde:	fa1f fa82 	uxth.w	sl, r2
 801dfe2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801dfe6:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801dfea:	43d2      	mvns	r2, r2
 801dfec:	b2d2      	uxtb	r2, r2
 801dfee:	fb17 f70a 	smulbb	r7, r7, sl
 801dff2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dff6:	fb0c 7c02 	mla	ip, ip, r2, r7
 801dffa:	b2e4      	uxtb	r4, r4
 801dffc:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e000:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e004:	fa5f fe8e 	uxtb.w	lr, lr
 801e008:	fb14 f40a 	smulbb	r4, r4, sl
 801e00c:	fb0e 4402 	mla	r4, lr, r2, r4
 801e010:	b2f6      	uxtb	r6, r6
 801e012:	fa1f fc8c 	uxth.w	ip, ip
 801e016:	fb16 f60a 	smulbb	r6, r6, sl
 801e01a:	b2a4      	uxth	r4, r4
 801e01c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e020:	fb07 6702 	mla	r7, r7, r2, r6
 801e024:	f10c 0201 	add.w	r2, ip, #1
 801e028:	1c66      	adds	r6, r4, #1
 801e02a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e02e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e032:	b2bf      	uxth	r7, r7
 801e034:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e038:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e03c:	ea46 0c0c 	orr.w	ip, r6, ip
 801e040:	1c7e      	adds	r6, r7, #1
 801e042:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e046:	0976      	lsrs	r6, r6, #5
 801e048:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e04c:	ea4c 0c06 	orr.w	ip, ip, r6
 801e050:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801e054:	e7ba      	b.n	801dfcc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e056:	b007      	add	sp, #28
 801e058:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e05c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e05c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e060:	b085      	sub	sp, #20
 801e062:	468b      	mov	fp, r1
 801e064:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e066:	9203      	str	r2, [sp, #12]
 801e068:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e06c:	6841      	ldr	r1, [r0, #4]
 801e06e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801e072:	fb01 2404 	mla	r4, r1, r4, r2
 801e076:	6802      	ldr	r2, [r0, #0]
 801e078:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e07c:	f8d8 2000 	ldr.w	r2, [r8]
 801e080:	9201      	str	r2, [sp, #4]
 801e082:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e086:	f1bb 0f00 	cmp.w	fp, #0
 801e08a:	dc03      	bgt.n	801e094 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e08c:	9a03      	ldr	r2, [sp, #12]
 801e08e:	2a00      	cmp	r2, #0
 801e090:	f340 814f 	ble.w	801e332 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e094:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e096:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801e09a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801e09e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e0a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e0a4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e0a8:	2b00      	cmp	r3, #0
 801e0aa:	dd0e      	ble.n	801e0ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e0ac:	1408      	asrs	r0, r1, #16
 801e0ae:	d405      	bmi.n	801e0bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e0b0:	42b8      	cmp	r0, r7
 801e0b2:	da03      	bge.n	801e0bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e0b4:	1410      	asrs	r0, r2, #16
 801e0b6:	d401      	bmi.n	801e0bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e0b8:	42b0      	cmp	r0, r6
 801e0ba:	db07      	blt.n	801e0cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e0bc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e0be:	4401      	add	r1, r0
 801e0c0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e0c2:	3b01      	subs	r3, #1
 801e0c4:	4402      	add	r2, r0
 801e0c6:	3402      	adds	r4, #2
 801e0c8:	e7ee      	b.n	801e0a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e0ca:	d017      	beq.n	801e0fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e0cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e0ce:	1e58      	subs	r0, r3, #1
 801e0d0:	fb05 1500 	mla	r5, r5, r0, r1
 801e0d4:	142d      	asrs	r5, r5, #16
 801e0d6:	d409      	bmi.n	801e0ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e0d8:	42bd      	cmp	r5, r7
 801e0da:	da07      	bge.n	801e0ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e0dc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e0de:	fb05 2000 	mla	r0, r5, r0, r2
 801e0e2:	1400      	asrs	r0, r0, #16
 801e0e4:	d402      	bmi.n	801e0ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e0e6:	42b0      	cmp	r0, r6
 801e0e8:	f2c0 80ba 	blt.w	801e260 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e0ec:	2600      	movs	r6, #0
 801e0ee:	1998      	adds	r0, r3, r6
 801e0f0:	2800      	cmp	r0, #0
 801e0f2:	dc3e      	bgt.n	801e172 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e0f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e0f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e0fc:	f1bb 0f00 	cmp.w	fp, #0
 801e100:	f340 8117 	ble.w	801e332 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e104:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e108:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e10c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e110:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e112:	f1bb 0b01 	subs.w	fp, fp, #1
 801e116:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e11a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e11e:	eeb0 6a62 	vmov.f32	s12, s5
 801e122:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e126:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e12a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e12e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e132:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e136:	eeb0 6a43 	vmov.f32	s12, s6
 801e13a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e13e:	ee12 2a90 	vmov	r2, s5
 801e142:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e146:	fb92 f3f3 	sdiv	r3, r2, r3
 801e14a:	ee13 2a10 	vmov	r2, s6
 801e14e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e152:	9311      	str	r3, [sp, #68]	; 0x44
 801e154:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e156:	fb92 f3f3 	sdiv	r3, r2, r3
 801e15a:	9a03      	ldr	r2, [sp, #12]
 801e15c:	9312      	str	r3, [sp, #72]	; 0x48
 801e15e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e162:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e164:	eeb0 3a67 	vmov.f32	s6, s15
 801e168:	bf08      	it	eq
 801e16a:	4613      	moveq	r3, r2
 801e16c:	eef0 2a47 	vmov.f32	s5, s14
 801e170:	e789      	b.n	801e086 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e172:	140f      	asrs	r7, r1, #16
 801e174:	d424      	bmi.n	801e1c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e176:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801e17a:	42bd      	cmp	r5, r7
 801e17c:	dd20      	ble.n	801e1c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e17e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e182:	d41d      	bmi.n	801e1c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e184:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801e188:	4560      	cmp	r0, ip
 801e18a:	dd19      	ble.n	801e1c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e18c:	b22d      	sxth	r5, r5
 801e18e:	fb0c 7505 	mla	r5, ip, r5, r7
 801e192:	9801      	ldr	r0, [sp, #4]
 801e194:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801e198:	0e07      	lsrs	r7, r0, #24
 801e19a:	2fff      	cmp	r7, #255	; 0xff
 801e19c:	d116      	bne.n	801e1cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801e19e:	f06f 0501 	mvn.w	r5, #1
 801e1a2:	fb05 f706 	mul.w	r7, r5, r6
 801e1a6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801e1aa:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801e1ae:	0945      	lsrs	r5, r0, #5
 801e1b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e1b4:	ea4c 0505 	orr.w	r5, ip, r5
 801e1b8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e1bc:	4305      	orrs	r5, r0
 801e1be:	53e5      	strh	r5, [r4, r7]
 801e1c0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e1c2:	4401      	add	r1, r0
 801e1c4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e1c6:	3e01      	subs	r6, #1
 801e1c8:	4402      	add	r2, r0
 801e1ca:	e790      	b.n	801e0ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e1cc:	b2fd      	uxtb	r5, r7
 801e1ce:	2f00      	cmp	r7, #0
 801e1d0:	d0f6      	beq.n	801e1c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e1d2:	f06f 0701 	mvn.w	r7, #1
 801e1d6:	4377      	muls	r7, r6
 801e1d8:	fa1f f985 	uxth.w	r9, r5
 801e1dc:	f834 e007 	ldrh.w	lr, [r4, r7]
 801e1e0:	9702      	str	r7, [sp, #8]
 801e1e2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e1e6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801e1ea:	43ed      	mvns	r5, r5
 801e1ec:	b2ed      	uxtb	r5, r5
 801e1ee:	fb17 f709 	smulbb	r7, r7, r9
 801e1f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e1f6:	fb0c 7c05 	mla	ip, ip, r5, r7
 801e1fa:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801e1fe:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e202:	b2c0      	uxtb	r0, r0
 801e204:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e208:	fa5f fe8e 	uxtb.w	lr, lr
 801e20c:	fb10 f009 	smulbb	r0, r0, r9
 801e210:	fb0e 0005 	mla	r0, lr, r5, r0
 801e214:	b280      	uxth	r0, r0
 801e216:	fa1f fc8c 	uxth.w	ip, ip
 801e21a:	fb1a fa09 	smulbb	sl, sl, r9
 801e21e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e222:	fb07 a705 	mla	r7, r7, r5, sl
 801e226:	f100 0a01 	add.w	sl, r0, #1
 801e22a:	f10c 0501 	add.w	r5, ip, #1
 801e22e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801e232:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e236:	b2bf      	uxth	r7, r7
 801e238:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e23c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e240:	ea4a 0c0c 	orr.w	ip, sl, ip
 801e244:	f107 0a01 	add.w	sl, r7, #1
 801e248:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801e24c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e250:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e254:	9802      	ldr	r0, [sp, #8]
 801e256:	ea4c 0c0a 	orr.w	ip, ip, sl
 801e25a:	f824 c000 	strh.w	ip, [r4, r0]
 801e25e:	e7af      	b.n	801e1c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e260:	f04f 0e00 	mov.w	lr, #0
 801e264:	eba3 000e 	sub.w	r0, r3, lr
 801e268:	2800      	cmp	r0, #0
 801e26a:	f77f af43 	ble.w	801e0f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e26e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801e272:	140d      	asrs	r5, r1, #16
 801e274:	1410      	asrs	r0, r2, #16
 801e276:	fb06 5000 	mla	r0, r6, r0, r5
 801e27a:	9d01      	ldr	r5, [sp, #4]
 801e27c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801e280:	0e2e      	lsrs	r6, r5, #24
 801e282:	2eff      	cmp	r6, #255	; 0xff
 801e284:	d112      	bne.n	801e2ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801e286:	482c      	ldr	r0, [pc, #176]	; (801e338 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801e288:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801e28c:	0968      	lsrs	r0, r5, #5
 801e28e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e292:	4330      	orrs	r0, r6
 801e294:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e298:	4328      	orrs	r0, r5
 801e29a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801e29e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e2a0:	4401      	add	r1, r0
 801e2a2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e2a4:	f10e 0e01 	add.w	lr, lr, #1
 801e2a8:	4402      	add	r2, r0
 801e2aa:	e7db      	b.n	801e264 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801e2ac:	b2f0      	uxtb	r0, r6
 801e2ae:	2e00      	cmp	r6, #0
 801e2b0:	d0f5      	beq.n	801e29e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e2b2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801e2b6:	fa1f f980 	uxth.w	r9, r0
 801e2ba:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e2be:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801e2c2:	43c0      	mvns	r0, r0
 801e2c4:	b2c0      	uxtb	r0, r0
 801e2c6:	fb16 f609 	smulbb	r6, r6, r9
 801e2ca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e2ce:	fb07 6700 	mla	r7, r7, r0, r6
 801e2d2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801e2d6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e2da:	b2ed      	uxtb	r5, r5
 801e2dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e2e0:	fa5f fc8c 	uxtb.w	ip, ip
 801e2e4:	fb15 f509 	smulbb	r5, r5, r9
 801e2e8:	fb0c 5500 	mla	r5, ip, r0, r5
 801e2ec:	b2bf      	uxth	r7, r7
 801e2ee:	fb1a fa09 	smulbb	sl, sl, r9
 801e2f2:	b2ad      	uxth	r5, r5
 801e2f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e2f8:	fb06 a600 	mla	r6, r6, r0, sl
 801e2fc:	1c78      	adds	r0, r7, #1
 801e2fe:	f105 0a01 	add.w	sl, r5, #1
 801e302:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801e306:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e30a:	b2b6      	uxth	r6, r6
 801e30c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e310:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e314:	ea4a 0707 	orr.w	r7, sl, r7
 801e318:	f106 0a01 	add.w	sl, r6, #1
 801e31c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801e320:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e324:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e328:	ea47 070a 	orr.w	r7, r7, sl
 801e32c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801e330:	e7b5      	b.n	801e29e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e332:	b005      	add	sp, #20
 801e334:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e338:	fffff800 	.word	0xfffff800

0801e33c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e33c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e340:	b087      	sub	sp, #28
 801e342:	468b      	mov	fp, r1
 801e344:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e346:	9203      	str	r2, [sp, #12]
 801e348:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e34c:	9204      	str	r2, [sp, #16]
 801e34e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e352:	6841      	ldr	r1, [r0, #4]
 801e354:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e358:	fb01 2404 	mla	r4, r1, r4, r2
 801e35c:	6802      	ldr	r2, [r0, #0]
 801e35e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e362:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e366:	3201      	adds	r2, #1
 801e368:	f022 0201 	bic.w	r2, r2, #1
 801e36c:	9200      	str	r2, [sp, #0]
 801e36e:	f8d9 2000 	ldr.w	r2, [r9]
 801e372:	9201      	str	r2, [sp, #4]
 801e374:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e378:	f1bb 0f00 	cmp.w	fp, #0
 801e37c:	dc03      	bgt.n	801e386 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e37e:	9a03      	ldr	r2, [sp, #12]
 801e380:	2a00      	cmp	r2, #0
 801e382:	f340 8169 	ble.w	801e658 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e386:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e388:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e38c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e390:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e394:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e396:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e39a:	2b00      	cmp	r3, #0
 801e39c:	dd0e      	ble.n	801e3bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e39e:	1402      	asrs	r2, r0, #16
 801e3a0:	d405      	bmi.n	801e3ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e3a2:	42ba      	cmp	r2, r7
 801e3a4:	da03      	bge.n	801e3ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e3a6:	140a      	asrs	r2, r1, #16
 801e3a8:	d401      	bmi.n	801e3ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e3aa:	42b2      	cmp	r2, r6
 801e3ac:	db07      	blt.n	801e3be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e3ae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e3b0:	4410      	add	r0, r2
 801e3b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e3b4:	3b01      	subs	r3, #1
 801e3b6:	4411      	add	r1, r2
 801e3b8:	3402      	adds	r4, #2
 801e3ba:	e7ee      	b.n	801e39a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801e3bc:	d017      	beq.n	801e3ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801e3be:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e3c0:	1e5a      	subs	r2, r3, #1
 801e3c2:	fb05 0502 	mla	r5, r5, r2, r0
 801e3c6:	142d      	asrs	r5, r5, #16
 801e3c8:	d409      	bmi.n	801e3de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e3ca:	42bd      	cmp	r5, r7
 801e3cc:	da07      	bge.n	801e3de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e3ce:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e3d0:	fb05 1202 	mla	r2, r5, r2, r1
 801e3d4:	1412      	asrs	r2, r2, #16
 801e3d6:	d402      	bmi.n	801e3de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e3d8:	42b2      	cmp	r2, r6
 801e3da:	f2c0 80c7 	blt.w	801e56c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801e3de:	2700      	movs	r7, #0
 801e3e0:	19da      	adds	r2, r3, r7
 801e3e2:	2a00      	cmp	r2, #0
 801e3e4:	dc3e      	bgt.n	801e464 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e3e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e3ea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e3ee:	f1bb 0f00 	cmp.w	fp, #0
 801e3f2:	f340 8131 	ble.w	801e658 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e3f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e3fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e3fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e402:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e404:	f1bb 0b01 	subs.w	fp, fp, #1
 801e408:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e40c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e410:	eeb0 6a62 	vmov.f32	s12, s5
 801e414:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e418:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e41c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e420:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e424:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e428:	eeb0 6a43 	vmov.f32	s12, s6
 801e42c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e430:	ee12 2a90 	vmov	r2, s5
 801e434:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e438:	fb92 f3f3 	sdiv	r3, r2, r3
 801e43c:	ee13 2a10 	vmov	r2, s6
 801e440:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e444:	9313      	str	r3, [sp, #76]	; 0x4c
 801e446:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e448:	fb92 f3f3 	sdiv	r3, r2, r3
 801e44c:	9a03      	ldr	r2, [sp, #12]
 801e44e:	9314      	str	r3, [sp, #80]	; 0x50
 801e450:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e454:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e456:	eeb0 3a67 	vmov.f32	s6, s15
 801e45a:	bf08      	it	eq
 801e45c:	4613      	moveq	r3, r2
 801e45e:	eef0 2a47 	vmov.f32	s5, s14
 801e462:	e789      	b.n	801e378 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e464:	1405      	asrs	r5, r0, #16
 801e466:	d435      	bmi.n	801e4d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e468:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e46c:	42aa      	cmp	r2, r5
 801e46e:	dd31      	ble.n	801e4d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e470:	140e      	asrs	r6, r1, #16
 801e472:	d42f      	bmi.n	801e4d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e474:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e478:	42b2      	cmp	r2, r6
 801e47a:	dd2b      	ble.n	801e4d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e47c:	9a00      	ldr	r2, [sp, #0]
 801e47e:	fb06 5502 	mla	r5, r6, r2, r5
 801e482:	086a      	lsrs	r2, r5, #1
 801e484:	9e01      	ldr	r6, [sp, #4]
 801e486:	5cb2      	ldrb	r2, [r6, r2]
 801e488:	07ee      	lsls	r6, r5, #31
 801e48a:	bf54      	ite	pl
 801e48c:	f002 020f 	andpl.w	r2, r2, #15
 801e490:	1112      	asrmi	r2, r2, #4
 801e492:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e496:	b2d2      	uxtb	r2, r2
 801e498:	b1e2      	cbz	r2, 801e4d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e49a:	9d04      	ldr	r5, [sp, #16]
 801e49c:	436a      	muls	r2, r5
 801e49e:	1c55      	adds	r5, r2, #1
 801e4a0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e4a4:	4d6e      	ldr	r5, [pc, #440]	; (801e660 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e4a6:	682d      	ldr	r5, [r5, #0]
 801e4a8:	1212      	asrs	r2, r2, #8
 801e4aa:	0a2e      	lsrs	r6, r5, #8
 801e4ac:	2aff      	cmp	r2, #255	; 0xff
 801e4ae:	9605      	str	r6, [sp, #20]
 801e4b0:	d116      	bne.n	801e4e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801e4b2:	f06f 0201 	mvn.w	r2, #1
 801e4b6:	fb02 fc07 	mul.w	ip, r2, r7
 801e4ba:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e4be:	096a      	lsrs	r2, r5, #5
 801e4c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e4c4:	f026 0607 	bic.w	r6, r6, #7
 801e4c8:	4316      	orrs	r6, r2
 801e4ca:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e4ce:	432e      	orrs	r6, r5
 801e4d0:	f824 600c 	strh.w	r6, [r4, ip]
 801e4d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e4d6:	4410      	add	r0, r2
 801e4d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e4da:	3f01      	subs	r7, #1
 801e4dc:	4411      	add	r1, r2
 801e4de:	e77f      	b.n	801e3e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801e4e0:	f06f 0601 	mvn.w	r6, #1
 801e4e4:	437e      	muls	r6, r7
 801e4e6:	fa1f fa82 	uxth.w	sl, r2
 801e4ea:	f834 8006 	ldrh.w	r8, [r4, r6]
 801e4ee:	9602      	str	r6, [sp, #8]
 801e4f0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e4f4:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801e4f8:	43d2      	mvns	r2, r2
 801e4fa:	b2d2      	uxtb	r2, r2
 801e4fc:	fb1c fc0a 	smulbb	ip, ip, sl
 801e500:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e504:	fb0e ce02 	mla	lr, lr, r2, ip
 801e508:	b2ed      	uxtb	r5, r5
 801e50a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e50e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e512:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e516:	fa5f f888 	uxtb.w	r8, r8
 801e51a:	fb15 f50a 	smulbb	r5, r5, sl
 801e51e:	fb08 5502 	mla	r5, r8, r2, r5
 801e522:	fa1f fe8e 	uxth.w	lr, lr
 801e526:	fb16 f60a 	smulbb	r6, r6, sl
 801e52a:	b2ad      	uxth	r5, r5
 801e52c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e530:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e534:	f10e 0201 	add.w	r2, lr, #1
 801e538:	1c6e      	adds	r6, r5, #1
 801e53a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e53e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801e542:	fa1f fc8c 	uxth.w	ip, ip
 801e546:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e54a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e54e:	ea46 0e0e 	orr.w	lr, r6, lr
 801e552:	f10c 0601 	add.w	r6, ip, #1
 801e556:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e55a:	0976      	lsrs	r6, r6, #5
 801e55c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e560:	9a02      	ldr	r2, [sp, #8]
 801e562:	ea4e 0e06 	orr.w	lr, lr, r6
 801e566:	f824 e002 	strh.w	lr, [r4, r2]
 801e56a:	e7b3      	b.n	801e4d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e56c:	f04f 0800 	mov.w	r8, #0
 801e570:	eba3 0208 	sub.w	r2, r3, r8
 801e574:	2a00      	cmp	r2, #0
 801e576:	f77f af36 	ble.w	801e3e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801e57a:	9e00      	ldr	r6, [sp, #0]
 801e57c:	1402      	asrs	r2, r0, #16
 801e57e:	140d      	asrs	r5, r1, #16
 801e580:	fb06 2505 	mla	r5, r6, r5, r2
 801e584:	086a      	lsrs	r2, r5, #1
 801e586:	9e01      	ldr	r6, [sp, #4]
 801e588:	5cb2      	ldrb	r2, [r6, r2]
 801e58a:	07ed      	lsls	r5, r5, #31
 801e58c:	bf54      	ite	pl
 801e58e:	f002 020f 	andpl.w	r2, r2, #15
 801e592:	1112      	asrmi	r2, r2, #4
 801e594:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e598:	b2d2      	uxtb	r2, r2
 801e59a:	b1c2      	cbz	r2, 801e5ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e59c:	9d04      	ldr	r5, [sp, #16]
 801e59e:	436a      	muls	r2, r5
 801e5a0:	1c55      	adds	r5, r2, #1
 801e5a2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e5a6:	4d2e      	ldr	r5, [pc, #184]	; (801e660 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e5a8:	1212      	asrs	r2, r2, #8
 801e5aa:	682e      	ldr	r6, [r5, #0]
 801e5ac:	2aff      	cmp	r2, #255	; 0xff
 801e5ae:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801e5b2:	d113      	bne.n	801e5dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801e5b4:	0972      	lsrs	r2, r6, #5
 801e5b6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801e5ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e5be:	f025 0507 	bic.w	r5, r5, #7
 801e5c2:	4315      	orrs	r5, r2
 801e5c4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801e5c8:	4335      	orrs	r5, r6
 801e5ca:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801e5ce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e5d0:	4410      	add	r0, r2
 801e5d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e5d4:	f108 0801 	add.w	r8, r8, #1
 801e5d8:	4411      	add	r1, r2
 801e5da:	e7c9      	b.n	801e570 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e5dc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801e5e0:	fa1f fa82 	uxth.w	sl, r2
 801e5e4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e5e8:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801e5ec:	43d2      	mvns	r2, r2
 801e5ee:	b2d2      	uxtb	r2, r2
 801e5f0:	fb17 f70a 	smulbb	r7, r7, sl
 801e5f4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e5f8:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e5fc:	b2f6      	uxtb	r6, r6
 801e5fe:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e602:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e606:	fa5f fe8e 	uxtb.w	lr, lr
 801e60a:	fb16 f60a 	smulbb	r6, r6, sl
 801e60e:	fb0e 6602 	mla	r6, lr, r2, r6
 801e612:	b2ed      	uxtb	r5, r5
 801e614:	fa1f fc8c 	uxth.w	ip, ip
 801e618:	fb15 f50a 	smulbb	r5, r5, sl
 801e61c:	b2b6      	uxth	r6, r6
 801e61e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e622:	fb07 5702 	mla	r7, r7, r2, r5
 801e626:	f10c 0201 	add.w	r2, ip, #1
 801e62a:	1c75      	adds	r5, r6, #1
 801e62c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e630:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801e634:	b2bf      	uxth	r7, r7
 801e636:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e63a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e63e:	ea45 0c0c 	orr.w	ip, r5, ip
 801e642:	1c7d      	adds	r5, r7, #1
 801e644:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801e648:	096d      	lsrs	r5, r5, #5
 801e64a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e64e:	ea4c 0c05 	orr.w	ip, ip, r5
 801e652:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801e656:	e7ba      	b.n	801e5ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e658:	b007      	add	sp, #28
 801e65a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e65e:	bf00      	nop
 801e660:	20013864 	.word	0x20013864

0801e664 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e668:	b087      	sub	sp, #28
 801e66a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801e978 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801e66e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e670:	9205      	str	r2, [sp, #20]
 801e672:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e676:	9101      	str	r1, [sp, #4]
 801e678:	6841      	ldr	r1, [r0, #4]
 801e67a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801e67e:	fb01 2404 	mla	r4, r1, r4, r2
 801e682:	6802      	ldr	r2, [r0, #0]
 801e684:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e688:	f8db 2008 	ldr.w	r2, [fp, #8]
 801e68c:	3201      	adds	r2, #1
 801e68e:	f022 0201 	bic.w	r2, r2, #1
 801e692:	9202      	str	r2, [sp, #8]
 801e694:	f8db 2000 	ldr.w	r2, [fp]
 801e698:	9203      	str	r2, [sp, #12]
 801e69a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e69e:	9a01      	ldr	r2, [sp, #4]
 801e6a0:	2a00      	cmp	r2, #0
 801e6a2:	dc03      	bgt.n	801e6ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e6a4:	9a05      	ldr	r2, [sp, #20]
 801e6a6:	2a00      	cmp	r2, #0
 801e6a8:	f340 8162 	ble.w	801e970 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e6ac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e6ae:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801e6b2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801e6b6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e6ba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e6bc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e6c0:	2b00      	cmp	r3, #0
 801e6c2:	dd0e      	ble.n	801e6e2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e6c4:	1402      	asrs	r2, r0, #16
 801e6c6:	d405      	bmi.n	801e6d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e6c8:	42ba      	cmp	r2, r7
 801e6ca:	da03      	bge.n	801e6d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e6cc:	140a      	asrs	r2, r1, #16
 801e6ce:	d401      	bmi.n	801e6d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e6d0:	42b2      	cmp	r2, r6
 801e6d2:	db07      	blt.n	801e6e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e6d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e6d6:	4410      	add	r0, r2
 801e6d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e6da:	3b01      	subs	r3, #1
 801e6dc:	4411      	add	r1, r2
 801e6de:	3402      	adds	r4, #2
 801e6e0:	e7ee      	b.n	801e6c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801e6e2:	d017      	beq.n	801e714 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801e6e4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e6e6:	1e5a      	subs	r2, r3, #1
 801e6e8:	fb05 0502 	mla	r5, r5, r2, r0
 801e6ec:	142d      	asrs	r5, r5, #16
 801e6ee:	d409      	bmi.n	801e704 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e6f0:	42bd      	cmp	r5, r7
 801e6f2:	da07      	bge.n	801e704 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e6f4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e6f6:	fb05 1202 	mla	r2, r5, r2, r1
 801e6fa:	1412      	asrs	r2, r2, #16
 801e6fc:	d402      	bmi.n	801e704 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e6fe:	42b2      	cmp	r2, r6
 801e700:	f2c0 80c3 	blt.w	801e88a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801e704:	2500      	movs	r5, #0
 801e706:	195a      	adds	r2, r3, r5
 801e708:	2a00      	cmp	r2, #0
 801e70a:	dc3f      	bgt.n	801e78c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e70c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e710:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e714:	9b01      	ldr	r3, [sp, #4]
 801e716:	2b00      	cmp	r3, #0
 801e718:	f340 812a 	ble.w	801e970 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e71c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e720:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e724:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e728:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e72a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e72e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e732:	eeb0 6a62 	vmov.f32	s12, s5
 801e736:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e73a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e73e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e742:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e746:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e74a:	eeb0 6a43 	vmov.f32	s12, s6
 801e74e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e752:	ee12 2a90 	vmov	r2, s5
 801e756:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e75a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e75e:	ee13 2a10 	vmov	r2, s6
 801e762:	9313      	str	r3, [sp, #76]	; 0x4c
 801e764:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e766:	fb92 f3f3 	sdiv	r3, r2, r3
 801e76a:	9314      	str	r3, [sp, #80]	; 0x50
 801e76c:	9b01      	ldr	r3, [sp, #4]
 801e76e:	9a05      	ldr	r2, [sp, #20]
 801e770:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e774:	3b01      	subs	r3, #1
 801e776:	9301      	str	r3, [sp, #4]
 801e778:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e77c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e77e:	eeb0 3a67 	vmov.f32	s6, s15
 801e782:	bf08      	it	eq
 801e784:	4613      	moveq	r3, r2
 801e786:	eef0 2a47 	vmov.f32	s5, s14
 801e78a:	e788      	b.n	801e69e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e78c:	1406      	asrs	r6, r0, #16
 801e78e:	d42c      	bmi.n	801e7ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e790:	f8db 2008 	ldr.w	r2, [fp, #8]
 801e794:	42b2      	cmp	r2, r6
 801e796:	dd28      	ble.n	801e7ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e798:	140f      	asrs	r7, r1, #16
 801e79a:	d426      	bmi.n	801e7ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e79c:	f8db 200c 	ldr.w	r2, [fp, #12]
 801e7a0:	42ba      	cmp	r2, r7
 801e7a2:	dd22      	ble.n	801e7ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e7a4:	9a02      	ldr	r2, [sp, #8]
 801e7a6:	fb07 6602 	mla	r6, r7, r2, r6
 801e7aa:	0872      	lsrs	r2, r6, #1
 801e7ac:	9f03      	ldr	r7, [sp, #12]
 801e7ae:	5cba      	ldrb	r2, [r7, r2]
 801e7b0:	07f6      	lsls	r6, r6, #31
 801e7b2:	bf54      	ite	pl
 801e7b4:	f002 020f 	andpl.w	r2, r2, #15
 801e7b8:	1112      	asrmi	r2, r2, #4
 801e7ba:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e7be:	b2d2      	uxtb	r2, r2
 801e7c0:	2aff      	cmp	r2, #255	; 0xff
 801e7c2:	d118      	bne.n	801e7f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801e7c4:	f8d8 2000 	ldr.w	r2, [r8]
 801e7c8:	f06f 0601 	mvn.w	r6, #1
 801e7cc:	fb06 f705 	mul.w	r7, r6, r5
 801e7d0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801e7d4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801e7d8:	0956      	lsrs	r6, r2, #5
 801e7da:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e7de:	ea4c 0606 	orr.w	r6, ip, r6
 801e7e2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e7e6:	4316      	orrs	r6, r2
 801e7e8:	53e6      	strh	r6, [r4, r7]
 801e7ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e7ec:	4410      	add	r0, r2
 801e7ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e7f0:	3d01      	subs	r5, #1
 801e7f2:	4411      	add	r1, r2
 801e7f4:	e787      	b.n	801e706 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e7f6:	2a00      	cmp	r2, #0
 801e7f8:	d0f7      	beq.n	801e7ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e7fa:	f06f 0601 	mvn.w	r6, #1
 801e7fe:	436e      	muls	r6, r5
 801e800:	f8d8 c000 	ldr.w	ip, [r8]
 801e804:	f834 e006 	ldrh.w	lr, [r4, r6]
 801e808:	9604      	str	r6, [sp, #16]
 801e80a:	fa1f f982 	uxth.w	r9, r2
 801e80e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801e812:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801e816:	43d2      	mvns	r2, r2
 801e818:	b2d2      	uxtb	r2, r2
 801e81a:	fb16 f609 	smulbb	r6, r6, r9
 801e81e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e822:	fb07 6702 	mla	r7, r7, r2, r6
 801e826:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801e82a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801e82e:	fa5f fc8c 	uxtb.w	ip, ip
 801e832:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e836:	fa5f fe8e 	uxtb.w	lr, lr
 801e83a:	fb1c fc09 	smulbb	ip, ip, r9
 801e83e:	fb0e cc02 	mla	ip, lr, r2, ip
 801e842:	b2bf      	uxth	r7, r7
 801e844:	fb1a fa09 	smulbb	sl, sl, r9
 801e848:	fa1f fc8c 	uxth.w	ip, ip
 801e84c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e850:	fb06 a602 	mla	r6, r6, r2, sl
 801e854:	1c7a      	adds	r2, r7, #1
 801e856:	f10c 0a01 	add.w	sl, ip, #1
 801e85a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801e85e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801e862:	b2b6      	uxth	r6, r6
 801e864:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e868:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e86c:	ea4a 0707 	orr.w	r7, sl, r7
 801e870:	f106 0a01 	add.w	sl, r6, #1
 801e874:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801e878:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e87c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e880:	9a04      	ldr	r2, [sp, #16]
 801e882:	ea47 070a 	orr.w	r7, r7, sl
 801e886:	52a7      	strh	r7, [r4, r2]
 801e888:	e7af      	b.n	801e7ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e88a:	f04f 0e00 	mov.w	lr, #0
 801e88e:	eba3 020e 	sub.w	r2, r3, lr
 801e892:	2a00      	cmp	r2, #0
 801e894:	f77f af3a 	ble.w	801e70c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801e898:	9e02      	ldr	r6, [sp, #8]
 801e89a:	1402      	asrs	r2, r0, #16
 801e89c:	140d      	asrs	r5, r1, #16
 801e89e:	fb06 2505 	mla	r5, r6, r5, r2
 801e8a2:	086a      	lsrs	r2, r5, #1
 801e8a4:	9e03      	ldr	r6, [sp, #12]
 801e8a6:	5cb2      	ldrb	r2, [r6, r2]
 801e8a8:	07ed      	lsls	r5, r5, #31
 801e8aa:	bf54      	ite	pl
 801e8ac:	f002 020f 	andpl.w	r2, r2, #15
 801e8b0:	1112      	asrmi	r2, r2, #4
 801e8b2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e8b6:	b2d2      	uxtb	r2, r2
 801e8b8:	2aff      	cmp	r2, #255	; 0xff
 801e8ba:	d115      	bne.n	801e8e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801e8bc:	f8d8 5000 	ldr.w	r5, [r8]
 801e8c0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801e8c4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801e8c8:	096a      	lsrs	r2, r5, #5
 801e8ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e8ce:	4332      	orrs	r2, r6
 801e8d0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e8d4:	432a      	orrs	r2, r5
 801e8d6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801e8da:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e8dc:	4410      	add	r0, r2
 801e8de:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e8e0:	f10e 0e01 	add.w	lr, lr, #1
 801e8e4:	4411      	add	r1, r2
 801e8e6:	e7d2      	b.n	801e88e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e8e8:	2a00      	cmp	r2, #0
 801e8ea:	d0f6      	beq.n	801e8da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801e8ec:	f8d8 7000 	ldr.w	r7, [r8]
 801e8f0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801e8f4:	fa1f f982 	uxth.w	r9, r2
 801e8f8:	ea4f 262c 	mov.w	r6, ip, asr #8
 801e8fc:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801e900:	43d2      	mvns	r2, r2
 801e902:	b2d2      	uxtb	r2, r2
 801e904:	fb15 f509 	smulbb	r5, r5, r9
 801e908:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e90c:	fb06 5602 	mla	r6, r6, r2, r5
 801e910:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801e914:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e918:	b2ff      	uxtb	r7, r7
 801e91a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e91e:	fa5f fc8c 	uxtb.w	ip, ip
 801e922:	fb17 f709 	smulbb	r7, r7, r9
 801e926:	fb0c 7702 	mla	r7, ip, r2, r7
 801e92a:	b2b6      	uxth	r6, r6
 801e92c:	fb1a fa09 	smulbb	sl, sl, r9
 801e930:	b2bf      	uxth	r7, r7
 801e932:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e936:	fb05 a502 	mla	r5, r5, r2, sl
 801e93a:	1c72      	adds	r2, r6, #1
 801e93c:	f107 0a01 	add.w	sl, r7, #1
 801e940:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801e944:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801e948:	b2ad      	uxth	r5, r5
 801e94a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e94e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801e952:	ea4a 0606 	orr.w	r6, sl, r6
 801e956:	f105 0a01 	add.w	sl, r5, #1
 801e95a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e95e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e962:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e966:	ea46 060a 	orr.w	r6, r6, sl
 801e96a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801e96e:	e7b4      	b.n	801e8da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801e970:	b007      	add	sp, #28
 801e972:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e976:	bf00      	nop
 801e978:	20013864 	.word	0x20013864

0801e97c <_ZN8touchgfx8LCD16bppD1Ev>:
 801e97c:	4770      	bx	lr

0801e97e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801e97e:	4770      	bx	lr

0801e980 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801e980:	4770      	bx	lr

0801e982 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801e982:	4770      	bx	lr

0801e984 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801e984:	4770      	bx	lr

0801e986 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801e986:	4770      	bx	lr

0801e988 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801e988:	4770      	bx	lr

0801e98a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801e98a:	4770      	bx	lr

0801e98c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801e98c:	4770      	bx	lr

0801e98e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801e98e:	4770      	bx	lr

0801e990 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801e990:	4770      	bx	lr

0801e992 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801e992:	4770      	bx	lr

0801e994 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801e994:	4770      	bx	lr

0801e996 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801e996:	4770      	bx	lr

0801e998 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801e998:	4770      	bx	lr

0801e99a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801e99a:	4770      	bx	lr

0801e99c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801e99c:	4770      	bx	lr

0801e99e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801e99e:	4770      	bx	lr

0801e9a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801e9a0:	4770      	bx	lr

0801e9a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801e9a2:	4770      	bx	lr

0801e9a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801e9a4:	4770      	bx	lr

0801e9a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801e9a6:	4770      	bx	lr

0801e9a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801e9a8:	4770      	bx	lr

0801e9aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801e9aa:	4770      	bx	lr

0801e9ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801e9ac:	4770      	bx	lr

0801e9ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801e9ae:	4770      	bx	lr

0801e9b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801e9b0:	4770      	bx	lr

0801e9b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801e9b2:	4770      	bx	lr

0801e9b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801e9b4:	4770      	bx	lr

0801e9b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801e9b6:	4770      	bx	lr

0801e9b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801e9b8:	4770      	bx	lr

0801e9ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801e9ba:	4770      	bx	lr

0801e9bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801e9bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e9c0:	b088      	sub	sp, #32
 801e9c2:	ac08      	add	r4, sp, #32
 801e9c4:	4606      	mov	r6, r0
 801e9c6:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801e9ca:	4620      	mov	r0, r4
 801e9cc:	4688      	mov	r8, r1
 801e9ce:	4691      	mov	r9, r2
 801e9d0:	f7fd fc62 	bl	801c298 <_ZNK8touchgfx6Bitmap7getDataEv>
 801e9d4:	6833      	ldr	r3, [r6, #0]
 801e9d6:	4605      	mov	r5, r0
 801e9d8:	4620      	mov	r0, r4
 801e9da:	699f      	ldr	r7, [r3, #24]
 801e9dc:	f7fd fb70 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801e9e0:	4682      	mov	sl, r0
 801e9e2:	4620      	mov	r0, r4
 801e9e4:	f7fd fba0 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801e9e8:	9500      	str	r5, [sp, #0]
 801e9ea:	e9cd a001 	strd	sl, r0, [sp, #4]
 801e9ee:	464b      	mov	r3, r9
 801e9f0:	a806      	add	r0, sp, #24
 801e9f2:	4642      	mov	r2, r8
 801e9f4:	4631      	mov	r1, r6
 801e9f6:	47b8      	blx	r7
 801e9f8:	4628      	mov	r0, r5
 801e9fa:	b008      	add	sp, #32
 801e9fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801ea00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801ea00:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801ea04:	2300      	movs	r3, #0
 801ea06:	9300      	str	r3, [sp, #0]
 801ea08:	4b3d      	ldr	r3, [pc, #244]	; (801eb00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801ea0a:	781b      	ldrb	r3, [r3, #0]
 801ea0c:	2b00      	cmp	r3, #0
 801ea0e:	d137      	bne.n	801ea80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801ea10:	4a3c      	ldr	r2, [pc, #240]	; (801eb04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ea12:	f9b2 2000 	ldrsh.w	r2, [r2]
 801ea16:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ea1a:	2b00      	cmp	r3, #0
 801ea1c:	d132      	bne.n	801ea84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801ea1e:	4b3a      	ldr	r3, [pc, #232]	; (801eb08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ea20:	f9b3 3000 	ldrsh.w	r3, [r3]
 801ea24:	6808      	ldr	r0, [r1, #0]
 801ea26:	6849      	ldr	r1, [r1, #4]
 801ea28:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ea2c:	ac02      	add	r4, sp, #8
 801ea2e:	ab02      	add	r3, sp, #8
 801ea30:	c303      	stmia	r3!, {r0, r1}
 801ea32:	4669      	mov	r1, sp
 801ea34:	4620      	mov	r0, r4
 801ea36:	f7f9 fd83 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ea3a:	4668      	mov	r0, sp
 801ea3c:	f7f9 fd3c 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ea40:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ea44:	f8bd 2000 	ldrh.w	r2, [sp]
 801ea48:	4d30      	ldr	r5, [pc, #192]	; (801eb0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801ea4a:	4413      	add	r3, r2
 801ea4c:	f8ad 3008 	strh.w	r3, [sp, #8]
 801ea50:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ea54:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801ea58:	6828      	ldr	r0, [r5, #0]
 801ea5a:	4413      	add	r3, r2
 801ea5c:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ea60:	6803      	ldr	r3, [r0, #0]
 801ea62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ea64:	4798      	blx	r3
 801ea66:	f010 0f01 	tst.w	r0, #1
 801ea6a:	462f      	mov	r7, r5
 801ea6c:	d00c      	beq.n	801ea88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801ea6e:	6828      	ldr	r0, [r5, #0]
 801ea70:	6803      	ldr	r3, [r0, #0]
 801ea72:	e894 0006 	ldmia.w	r4, {r1, r2}
 801ea76:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801ea78:	4798      	blx	r3
 801ea7a:	b004      	add	sp, #16
 801ea7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ea80:	4a21      	ldr	r2, [pc, #132]	; (801eb08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ea82:	e7c6      	b.n	801ea12 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801ea84:	4b1f      	ldr	r3, [pc, #124]	; (801eb04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ea86:	e7cb      	b.n	801ea20 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801ea88:	6838      	ldr	r0, [r7, #0]
 801ea8a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801ea8e:	6803      	ldr	r3, [r0, #0]
 801ea90:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801ea94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ea96:	4798      	blx	r3
 801ea98:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801ea9c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801eaa0:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801eaa4:	fb16 3602 	smlabb	r6, r6, r2, r3
 801eaa8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801eaac:	6838      	ldr	r0, [r7, #0]
 801eaae:	6803      	ldr	r3, [r0, #0]
 801eab0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801eab2:	4798      	blx	r3
 801eab4:	4a13      	ldr	r2, [pc, #76]	; (801eb04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801eab6:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801eaba:	8813      	ldrh	r3, [r2, #0]
 801eabc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801eac0:	fb03 1404 	mla	r4, r3, r4, r1
 801eac4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801eac8:	435d      	muls	r5, r3
 801eaca:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801eace:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801ead2:	4691      	mov	r9, r2
 801ead4:	6838      	ldr	r0, [r7, #0]
 801ead6:	42ac      	cmp	r4, r5
 801ead8:	6803      	ldr	r3, [r0, #0]
 801eada:	d20e      	bcs.n	801eafa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801eadc:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801eae0:	4632      	mov	r2, r6
 801eae2:	4643      	mov	r3, r8
 801eae4:	4621      	mov	r1, r4
 801eae6:	47d0      	blx	sl
 801eae8:	f8b9 3000 	ldrh.w	r3, [r9]
 801eaec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801eaf0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801eaf4:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801eaf8:	e7ec      	b.n	801ead4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801eafa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801eafc:	4798      	blx	r3
 801eafe:	e7bc      	b.n	801ea7a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801eb00:	2001384c 	.word	0x2001384c
 801eb04:	2001384e 	.word	0x2001384e
 801eb08:	20013850 	.word	0x20013850
 801eb0c:	20013854 	.word	0x20013854

0801eb10 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801eb10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb14:	b08b      	sub	sp, #44	; 0x2c
 801eb16:	460f      	mov	r7, r1
 801eb18:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801eb1c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801eb20:	4616      	mov	r6, r2
 801eb22:	f1bb 0f00 	cmp.w	fp, #0
 801eb26:	d04a      	beq.n	801ebbe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801eb28:	6810      	ldr	r0, [r2, #0]
 801eb2a:	6851      	ldr	r1, [r2, #4]
 801eb2c:	ad06      	add	r5, sp, #24
 801eb2e:	c503      	stmia	r5!, {r0, r1}
 801eb30:	6818      	ldr	r0, [r3, #0]
 801eb32:	6859      	ldr	r1, [r3, #4]
 801eb34:	ad08      	add	r5, sp, #32
 801eb36:	c503      	stmia	r5!, {r0, r1}
 801eb38:	a806      	add	r0, sp, #24
 801eb3a:	f7f9 fcbd 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801eb3e:	4631      	mov	r1, r6
 801eb40:	a808      	add	r0, sp, #32
 801eb42:	f7f9 fcfd 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801eb46:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801eb4a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801eb4e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801eb52:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801eb56:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801eb5a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801eb5e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801eb62:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801eb66:	4f5f      	ldr	r7, [pc, #380]	; (801ece4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801eb68:	440a      	add	r2, r1
 801eb6a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801eb6e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801eb72:	6838      	ldr	r0, [r7, #0]
 801eb74:	4413      	add	r3, r2
 801eb76:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801eb7a:	6803      	ldr	r3, [r0, #0]
 801eb7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801eb7e:	4798      	blx	r3
 801eb80:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801eb84:	46b9      	mov	r9, r7
 801eb86:	d11d      	bne.n	801ebc4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801eb88:	b9fc      	cbnz	r4, 801ebca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801eb8a:	f010 0f01 	tst.w	r0, #1
 801eb8e:	d01c      	beq.n	801ebca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801eb90:	f8d9 0000 	ldr.w	r0, [r9]
 801eb94:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801eb98:	6801      	ldr	r1, [r0, #0]
 801eb9a:	f8cd b00c 	str.w	fp, [sp, #12]
 801eb9e:	2700      	movs	r7, #0
 801eba0:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801eba4:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801eba8:	9402      	str	r4, [sp, #8]
 801ebaa:	b2ad      	uxth	r5, r5
 801ebac:	fa1f f488 	uxth.w	r4, r8
 801ebb0:	9501      	str	r5, [sp, #4]
 801ebb2:	9400      	str	r4, [sp, #0]
 801ebb4:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801ebb6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ebba:	4631      	mov	r1, r6
 801ebbc:	47a0      	blx	r4
 801ebbe:	b00b      	add	sp, #44	; 0x2c
 801ebc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ebc4:	f010 0f04 	tst.w	r0, #4
 801ebc8:	e7e1      	b.n	801eb8e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801ebca:	f8d9 0000 	ldr.w	r0, [r9]
 801ebce:	6803      	ldr	r3, [r0, #0]
 801ebd0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ebd2:	4798      	blx	r3
 801ebd4:	4b44      	ldr	r3, [pc, #272]	; (801ece8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801ebd6:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801ebda:	881a      	ldrh	r2, [r3, #0]
 801ebdc:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801ebe0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ebe4:	fb02 1404 	mla	r4, r2, r4, r1
 801ebe8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ebec:	469a      	mov	sl, r3
 801ebee:	fb05 f502 	mul.w	r5, r5, r2
 801ebf2:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801ebf6:	d059      	beq.n	801ecac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801ebf8:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801ebfc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ec00:	fa1f f28b 	uxth.w	r2, fp
 801ec04:	fa1f f989 	uxth.w	r9, r9
 801ec08:	469e      	mov	lr, r3
 801ec0a:	42ac      	cmp	r4, r5
 801ec0c:	d264      	bcs.n	801ecd8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ec0e:	eb04 0a07 	add.w	sl, r4, r7
 801ec12:	4554      	cmp	r4, sl
 801ec14:	d23d      	bcs.n	801ec92 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801ec16:	8821      	ldrh	r1, [r4, #0]
 801ec18:	f836 3b02 	ldrh.w	r3, [r6], #2
 801ec1c:	1208      	asrs	r0, r1, #8
 801ec1e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ec22:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ec26:	fb10 f009 	smulbb	r0, r0, r9
 801ec2a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801ec2e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ec32:	00c9      	lsls	r1, r1, #3
 801ec34:	fb0c 0c02 	mla	ip, ip, r2, r0
 801ec38:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801ec3c:	10d8      	asrs	r0, r3, #3
 801ec3e:	b2c9      	uxtb	r1, r1
 801ec40:	00db      	lsls	r3, r3, #3
 801ec42:	fa1f fc8c 	uxth.w	ip, ip
 801ec46:	fb1b fb09 	smulbb	fp, fp, r9
 801ec4a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ec4e:	b2db      	uxtb	r3, r3
 801ec50:	fb11 f109 	smulbb	r1, r1, r9
 801ec54:	fb00 b002 	mla	r0, r0, r2, fp
 801ec58:	fb03 1302 	mla	r3, r3, r2, r1
 801ec5c:	f10c 0b01 	add.w	fp, ip, #1
 801ec60:	b29b      	uxth	r3, r3
 801ec62:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801ec66:	b280      	uxth	r0, r0
 801ec68:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801ec6c:	f103 0c01 	add.w	ip, r3, #1
 801ec70:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ec74:	1c43      	adds	r3, r0, #1
 801ec76:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ec7a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ec7e:	0940      	lsrs	r0, r0, #5
 801ec80:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ec84:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ec88:	ea4c 0c00 	orr.w	ip, ip, r0
 801ec8c:	f824 cb02 	strh.w	ip, [r4], #2
 801ec90:	e7bf      	b.n	801ec12 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801ec92:	f8be 3000 	ldrh.w	r3, [lr]
 801ec96:	eba3 0308 	sub.w	r3, r3, r8
 801ec9a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ec9e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801eca2:	eba3 0308 	sub.w	r3, r3, r8
 801eca6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ecaa:	e7ae      	b.n	801ec0a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801ecac:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ecb0:	f8d9 0000 	ldr.w	r0, [r9]
 801ecb4:	42ac      	cmp	r4, r5
 801ecb6:	6803      	ldr	r3, [r0, #0]
 801ecb8:	d20e      	bcs.n	801ecd8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ecba:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801ecbe:	4632      	mov	r2, r6
 801ecc0:	463b      	mov	r3, r7
 801ecc2:	4621      	mov	r1, r4
 801ecc4:	47c0      	blx	r8
 801ecc6:	f8ba 3000 	ldrh.w	r3, [sl]
 801ecca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ecce:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ecd2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ecd6:	e7eb      	b.n	801ecb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801ecd8:	4b02      	ldr	r3, [pc, #8]	; (801ece4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ecda:	6818      	ldr	r0, [r3, #0]
 801ecdc:	6803      	ldr	r3, [r0, #0]
 801ecde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ece0:	4798      	blx	r3
 801ece2:	e76c      	b.n	801ebbe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ece4:	20013854 	.word	0x20013854
 801ece8:	2001384e 	.word	0x2001384e

0801ecec <_ZN8touchgfx8LCD16bppD0Ev>:
 801ecec:	b510      	push	{r4, lr}
 801ecee:	2184      	movs	r1, #132	; 0x84
 801ecf0:	4604      	mov	r4, r0
 801ecf2:	f00d fe7e 	bl	802c9f2 <_ZdlPvj>
 801ecf6:	4620      	mov	r0, r4
 801ecf8:	bd10      	pop	{r4, pc}

0801ecfa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801ecfa:	b510      	push	{r4, lr}
 801ecfc:	2104      	movs	r1, #4
 801ecfe:	4604      	mov	r4, r0
 801ed00:	f00d fe77 	bl	802c9f2 <_ZdlPvj>
 801ed04:	4620      	mov	r0, r4
 801ed06:	bd10      	pop	{r4, pc}

0801ed08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801ed08:	b510      	push	{r4, lr}
 801ed0a:	2104      	movs	r1, #4
 801ed0c:	4604      	mov	r4, r0
 801ed0e:	f00d fe70 	bl	802c9f2 <_ZdlPvj>
 801ed12:	4620      	mov	r0, r4
 801ed14:	bd10      	pop	{r4, pc}

0801ed16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801ed16:	b510      	push	{r4, lr}
 801ed18:	f640 0144 	movw	r1, #2116	; 0x844
 801ed1c:	4604      	mov	r4, r0
 801ed1e:	f00d fe68 	bl	802c9f2 <_ZdlPvj>
 801ed22:	4620      	mov	r0, r4
 801ed24:	bd10      	pop	{r4, pc}

0801ed26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ed26:	b510      	push	{r4, lr}
 801ed28:	2104      	movs	r1, #4
 801ed2a:	4604      	mov	r4, r0
 801ed2c:	f00d fe61 	bl	802c9f2 <_ZdlPvj>
 801ed30:	4620      	mov	r0, r4
 801ed32:	bd10      	pop	{r4, pc}

0801ed34 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ed34:	b510      	push	{r4, lr}
 801ed36:	2104      	movs	r1, #4
 801ed38:	4604      	mov	r4, r0
 801ed3a:	f00d fe5a 	bl	802c9f2 <_ZdlPvj>
 801ed3e:	4620      	mov	r0, r4
 801ed40:	bd10      	pop	{r4, pc}

0801ed42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ed42:	b510      	push	{r4, lr}
 801ed44:	2104      	movs	r1, #4
 801ed46:	4604      	mov	r4, r0
 801ed48:	f00d fe53 	bl	802c9f2 <_ZdlPvj>
 801ed4c:	4620      	mov	r0, r4
 801ed4e:	bd10      	pop	{r4, pc}

0801ed50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801ed50:	b510      	push	{r4, lr}
 801ed52:	2104      	movs	r1, #4
 801ed54:	4604      	mov	r4, r0
 801ed56:	f00d fe4c 	bl	802c9f2 <_ZdlPvj>
 801ed5a:	4620      	mov	r0, r4
 801ed5c:	bd10      	pop	{r4, pc}

0801ed5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ed5e:	b510      	push	{r4, lr}
 801ed60:	2104      	movs	r1, #4
 801ed62:	4604      	mov	r4, r0
 801ed64:	f00d fe45 	bl	802c9f2 <_ZdlPvj>
 801ed68:	4620      	mov	r0, r4
 801ed6a:	bd10      	pop	{r4, pc}

0801ed6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801ed6c:	b510      	push	{r4, lr}
 801ed6e:	2104      	movs	r1, #4
 801ed70:	4604      	mov	r4, r0
 801ed72:	f00d fe3e 	bl	802c9f2 <_ZdlPvj>
 801ed76:	4620      	mov	r0, r4
 801ed78:	bd10      	pop	{r4, pc}

0801ed7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ed7a:	b510      	push	{r4, lr}
 801ed7c:	2104      	movs	r1, #4
 801ed7e:	4604      	mov	r4, r0
 801ed80:	f00d fe37 	bl	802c9f2 <_ZdlPvj>
 801ed84:	4620      	mov	r0, r4
 801ed86:	bd10      	pop	{r4, pc}

0801ed88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801ed88:	b510      	push	{r4, lr}
 801ed8a:	2104      	movs	r1, #4
 801ed8c:	4604      	mov	r4, r0
 801ed8e:	f00d fe30 	bl	802c9f2 <_ZdlPvj>
 801ed92:	4620      	mov	r0, r4
 801ed94:	bd10      	pop	{r4, pc}

0801ed96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ed96:	b510      	push	{r4, lr}
 801ed98:	2104      	movs	r1, #4
 801ed9a:	4604      	mov	r4, r0
 801ed9c:	f00d fe29 	bl	802c9f2 <_ZdlPvj>
 801eda0:	4620      	mov	r0, r4
 801eda2:	bd10      	pop	{r4, pc}

0801eda4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801eda4:	b510      	push	{r4, lr}
 801eda6:	2104      	movs	r1, #4
 801eda8:	4604      	mov	r4, r0
 801edaa:	f00d fe22 	bl	802c9f2 <_ZdlPvj>
 801edae:	4620      	mov	r0, r4
 801edb0:	bd10      	pop	{r4, pc}

0801edb2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801edb2:	b510      	push	{r4, lr}
 801edb4:	2104      	movs	r1, #4
 801edb6:	4604      	mov	r4, r0
 801edb8:	f00d fe1b 	bl	802c9f2 <_ZdlPvj>
 801edbc:	4620      	mov	r0, r4
 801edbe:	bd10      	pop	{r4, pc}

0801edc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801edc0:	b510      	push	{r4, lr}
 801edc2:	2104      	movs	r1, #4
 801edc4:	4604      	mov	r4, r0
 801edc6:	f00d fe14 	bl	802c9f2 <_ZdlPvj>
 801edca:	4620      	mov	r0, r4
 801edcc:	bd10      	pop	{r4, pc}

0801edce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801edce:	b510      	push	{r4, lr}
 801edd0:	2104      	movs	r1, #4
 801edd2:	4604      	mov	r4, r0
 801edd4:	f00d fe0d 	bl	802c9f2 <_ZdlPvj>
 801edd8:	4620      	mov	r0, r4
 801edda:	bd10      	pop	{r4, pc}

0801eddc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801eddc:	b510      	push	{r4, lr}
 801edde:	2104      	movs	r1, #4
 801ede0:	4604      	mov	r4, r0
 801ede2:	f00d fe06 	bl	802c9f2 <_ZdlPvj>
 801ede6:	4620      	mov	r0, r4
 801ede8:	bd10      	pop	{r4, pc}

0801edea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801edea:	b510      	push	{r4, lr}
 801edec:	2104      	movs	r1, #4
 801edee:	4604      	mov	r4, r0
 801edf0:	f00d fdff 	bl	802c9f2 <_ZdlPvj>
 801edf4:	4620      	mov	r0, r4
 801edf6:	bd10      	pop	{r4, pc}

0801edf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801edf8:	b510      	push	{r4, lr}
 801edfa:	2104      	movs	r1, #4
 801edfc:	4604      	mov	r4, r0
 801edfe:	f00d fdf8 	bl	802c9f2 <_ZdlPvj>
 801ee02:	4620      	mov	r0, r4
 801ee04:	bd10      	pop	{r4, pc}

0801ee06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ee06:	b510      	push	{r4, lr}
 801ee08:	2104      	movs	r1, #4
 801ee0a:	4604      	mov	r4, r0
 801ee0c:	f00d fdf1 	bl	802c9f2 <_ZdlPvj>
 801ee10:	4620      	mov	r0, r4
 801ee12:	bd10      	pop	{r4, pc}

0801ee14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801ee14:	b510      	push	{r4, lr}
 801ee16:	2104      	movs	r1, #4
 801ee18:	4604      	mov	r4, r0
 801ee1a:	f00d fdea 	bl	802c9f2 <_ZdlPvj>
 801ee1e:	4620      	mov	r0, r4
 801ee20:	bd10      	pop	{r4, pc}

0801ee22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ee22:	b510      	push	{r4, lr}
 801ee24:	2104      	movs	r1, #4
 801ee26:	4604      	mov	r4, r0
 801ee28:	f00d fde3 	bl	802c9f2 <_ZdlPvj>
 801ee2c:	4620      	mov	r0, r4
 801ee2e:	bd10      	pop	{r4, pc}

0801ee30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ee30:	b510      	push	{r4, lr}
 801ee32:	2104      	movs	r1, #4
 801ee34:	4604      	mov	r4, r0
 801ee36:	f00d fddc 	bl	802c9f2 <_ZdlPvj>
 801ee3a:	4620      	mov	r0, r4
 801ee3c:	bd10      	pop	{r4, pc}

0801ee3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ee3e:	b510      	push	{r4, lr}
 801ee40:	2104      	movs	r1, #4
 801ee42:	4604      	mov	r4, r0
 801ee44:	f00d fdd5 	bl	802c9f2 <_ZdlPvj>
 801ee48:	4620      	mov	r0, r4
 801ee4a:	bd10      	pop	{r4, pc}

0801ee4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ee4c:	b510      	push	{r4, lr}
 801ee4e:	2104      	movs	r1, #4
 801ee50:	4604      	mov	r4, r0
 801ee52:	f00d fdce 	bl	802c9f2 <_ZdlPvj>
 801ee56:	4620      	mov	r0, r4
 801ee58:	bd10      	pop	{r4, pc}

0801ee5a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ee5a:	b510      	push	{r4, lr}
 801ee5c:	2104      	movs	r1, #4
 801ee5e:	4604      	mov	r4, r0
 801ee60:	f00d fdc7 	bl	802c9f2 <_ZdlPvj>
 801ee64:	4620      	mov	r0, r4
 801ee66:	bd10      	pop	{r4, pc}

0801ee68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ee68:	b510      	push	{r4, lr}
 801ee6a:	2104      	movs	r1, #4
 801ee6c:	4604      	mov	r4, r0
 801ee6e:	f00d fdc0 	bl	802c9f2 <_ZdlPvj>
 801ee72:	4620      	mov	r0, r4
 801ee74:	bd10      	pop	{r4, pc}

0801ee76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801ee76:	b510      	push	{r4, lr}
 801ee78:	2104      	movs	r1, #4
 801ee7a:	4604      	mov	r4, r0
 801ee7c:	f00d fdb9 	bl	802c9f2 <_ZdlPvj>
 801ee80:	4620      	mov	r0, r4
 801ee82:	bd10      	pop	{r4, pc}

0801ee84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801ee84:	b510      	push	{r4, lr}
 801ee86:	2104      	movs	r1, #4
 801ee88:	4604      	mov	r4, r0
 801ee8a:	f00d fdb2 	bl	802c9f2 <_ZdlPvj>
 801ee8e:	4620      	mov	r0, r4
 801ee90:	bd10      	pop	{r4, pc}

0801ee92 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801ee92:	b510      	push	{r4, lr}
 801ee94:	2104      	movs	r1, #4
 801ee96:	4604      	mov	r4, r0
 801ee98:	f00d fdab 	bl	802c9f2 <_ZdlPvj>
 801ee9c:	4620      	mov	r0, r4
 801ee9e:	bd10      	pop	{r4, pc}

0801eea0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801eea0:	b510      	push	{r4, lr}
 801eea2:	2104      	movs	r1, #4
 801eea4:	4604      	mov	r4, r0
 801eea6:	f00d fda4 	bl	802c9f2 <_ZdlPvj>
 801eeaa:	4620      	mov	r0, r4
 801eeac:	bd10      	pop	{r4, pc}
	...

0801eeb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801eeb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eeb4:	b08f      	sub	sp, #60	; 0x3c
 801eeb6:	461c      	mov	r4, r3
 801eeb8:	9205      	str	r2, [sp, #20]
 801eeba:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801eebe:	9100      	str	r1, [sp, #0]
 801eec0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801eec2:	9201      	str	r2, [sp, #4]
 801eec4:	2a00      	cmp	r2, #0
 801eec6:	f000 8115 	beq.w	801f0f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801eeca:	6820      	ldr	r0, [r4, #0]
 801eecc:	6861      	ldr	r1, [r4, #4]
 801eece:	aa0a      	add	r2, sp, #40	; 0x28
 801eed0:	c203      	stmia	r2!, {r0, r1}
 801eed2:	6818      	ldr	r0, [r3, #0]
 801eed4:	6859      	ldr	r1, [r3, #4]
 801eed6:	aa0c      	add	r2, sp, #48	; 0x30
 801eed8:	c203      	stmia	r2!, {r0, r1}
 801eeda:	a80a      	add	r0, sp, #40	; 0x28
 801eedc:	f7f9 faec 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801eee0:	4621      	mov	r1, r4
 801eee2:	a80c      	add	r0, sp, #48	; 0x30
 801eee4:	f7f9 fb2c 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801eee8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801eeec:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801eef0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801eef4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801eef8:	bfde      	ittt	le
 801eefa:	b2b3      	uxthle	r3, r6
 801eefc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801ef00:	fb92 f3f3 	sdivle	r3, r2, r3
 801ef04:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ef08:	bfc8      	it	gt
 801ef0a:	2301      	movgt	r3, #1
 801ef0c:	fb92 f1f3 	sdiv	r1, r2, r3
 801ef10:	fa1f fc81 	uxth.w	ip, r1
 801ef14:	fb0c 2413 	mls	r4, ip, r3, r2
 801ef18:	fb14 f406 	smulbb	r4, r4, r6
 801ef1c:	441d      	add	r5, r3
 801ef1e:	4404      	add	r4, r0
 801ef20:	4661      	mov	r1, ip
 801ef22:	3d01      	subs	r5, #1
 801ef24:	b2a4      	uxth	r4, r4
 801ef26:	fb95 f5f3 	sdiv	r5, r5, r3
 801ef2a:	b131      	cbz	r1, 801ef3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801ef2c:	9b05      	ldr	r3, [sp, #20]
 801ef2e:	9900      	ldr	r1, [sp, #0]
 801ef30:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801ef34:	ba1b      	rev	r3, r3
 801ef36:	4419      	add	r1, r3
 801ef38:	9100      	str	r1, [sp, #0]
 801ef3a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801ef3e:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801ef42:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ef46:	4418      	add	r0, r3
 801ef48:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ef4c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801ef50:	441a      	add	r2, r3
 801ef52:	4b6a      	ldr	r3, [pc, #424]	; (801f0fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801ef54:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801ef58:	6818      	ldr	r0, [r3, #0]
 801ef5a:	6803      	ldr	r3, [r0, #0]
 801ef5c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ef5e:	4798      	blx	r3
 801ef60:	4967      	ldr	r1, [pc, #412]	; (801f100 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801ef62:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ef66:	880b      	ldrh	r3, [r1, #0]
 801ef68:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801ef6c:	9109      	str	r1, [sp, #36]	; 0x24
 801ef6e:	fb03 c202 	mla	r2, r3, r2, ip
 801ef72:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ef76:	4373      	muls	r3, r6
 801ef78:	b2ad      	uxth	r5, r5
 801ef7a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ef7e:	00ad      	lsls	r5, r5, #2
 801ef80:	9306      	str	r3, [sp, #24]
 801ef82:	1d2b      	adds	r3, r5, #4
 801ef84:	9307      	str	r3, [sp, #28]
 801ef86:	9b01      	ldr	r3, [sp, #4]
 801ef88:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ef8c:	9103      	str	r1, [sp, #12]
 801ef8e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801ef92:	2c00      	cmp	r4, #0
 801ef94:	bf0c      	ite	eq
 801ef96:	46c6      	moveq	lr, r8
 801ef98:	f04f 0e00 	movne.w	lr, #0
 801ef9c:	2300      	movs	r3, #0
 801ef9e:	b292      	uxth	r2, r2
 801efa0:	fa1f fe8e 	uxth.w	lr, lr
 801efa4:	9302      	str	r3, [sp, #8]
 801efa6:	9204      	str	r2, [sp, #16]
 801efa8:	9a06      	ldr	r2, [sp, #24]
 801efaa:	4282      	cmp	r2, r0
 801efac:	f240 809d 	bls.w	801f0ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801efb0:	b963      	cbnz	r3, 801efcc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801efb2:	9b00      	ldr	r3, [sp, #0]
 801efb4:	781a      	ldrb	r2, [r3, #0]
 801efb6:	0993      	lsrs	r3, r2, #6
 801efb8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801efbc:	9202      	str	r2, [sp, #8]
 801efbe:	1e5a      	subs	r2, r3, #1
 801efc0:	2a02      	cmp	r2, #2
 801efc2:	d815      	bhi.n	801eff0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801efc4:	9a00      	ldr	r2, [sp, #0]
 801efc6:	3201      	adds	r2, #1
 801efc8:	9200      	str	r2, [sp, #0]
 801efca:	b29b      	uxth	r3, r3
 801efcc:	b1b4      	cbz	r4, 801effc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801efce:	429c      	cmp	r4, r3
 801efd0:	bf95      	itete	ls
 801efd2:	1b1c      	subls	r4, r3, r4
 801efd4:	1ae4      	subhi	r4, r4, r3
 801efd6:	fa1f fa84 	uxthls.w	sl, r4
 801efda:	b2a4      	uxthhi	r4, r4
 801efdc:	bf87      	ittee	hi
 801efde:	4671      	movhi	r1, lr
 801efe0:	f04f 0a00 	movhi.w	sl, #0
 801efe4:	fa1f f188 	uxthls.w	r1, r8
 801efe8:	2400      	movls	r4, #0
 801efea:	4653      	mov	r3, sl
 801efec:	468e      	mov	lr, r1
 801efee:	e7db      	b.n	801efa8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801eff0:	9a00      	ldr	r2, [sp, #0]
 801eff2:	9b00      	ldr	r3, [sp, #0]
 801eff4:	3202      	adds	r2, #2
 801eff6:	785b      	ldrb	r3, [r3, #1]
 801eff8:	9200      	str	r2, [sp, #0]
 801effa:	e7e7      	b.n	801efcc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801effc:	2202      	movs	r2, #2
 801effe:	4615      	mov	r5, r2
 801f000:	9907      	ldr	r1, [sp, #28]
 801f002:	9a02      	ldr	r2, [sp, #8]
 801f004:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f008:	9905      	ldr	r1, [sp, #20]
 801f00a:	4573      	cmp	r3, lr
 801f00c:	f831 c002 	ldrh.w	ip, [r1, r2]
 801f010:	9a01      	ldr	r2, [sp, #4]
 801f012:	bf2b      	itete	cs
 801f014:	eba3 0a0e 	subcs.w	sl, r3, lr
 801f018:	ebae 0103 	subcc.w	r1, lr, r3
 801f01c:	46f1      	movcs	r9, lr
 801f01e:	4699      	movcc	r9, r3
 801f020:	bf27      	ittee	cs
 801f022:	fa1f fa8a 	uxthcs.w	sl, sl
 801f026:	4621      	movcs	r1, r4
 801f028:	b289      	uxthcc	r1, r1
 801f02a:	46a2      	movcc	sl, r4
 801f02c:	2aff      	cmp	r2, #255	; 0xff
 801f02e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f032:	d105      	bne.n	801f040 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f034:	4481      	add	r9, r0
 801f036:	4581      	cmp	r9, r0
 801f038:	d045      	beq.n	801f0c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f03a:	f820 cb02 	strh.w	ip, [r0], #2
 801f03e:	e7fa      	b.n	801f036 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801f040:	9d03      	ldr	r5, [sp, #12]
 801f042:	ea4f 222c 	mov.w	r2, ip, asr #8
 801f046:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f04a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f04e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f052:	436a      	muls	r2, r5
 801f054:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f058:	fa5f fc8c 	uxtb.w	ip, ip
 801f05c:	9208      	str	r2, [sp, #32]
 801f05e:	fb0b fb05 	mul.w	fp, fp, r5
 801f062:	fb0c fc05 	mul.w	ip, ip, r5
 801f066:	4481      	add	r9, r0
 801f068:	4581      	cmp	r9, r0
 801f06a:	d02c      	beq.n	801f0c6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f06c:	8802      	ldrh	r2, [r0, #0]
 801f06e:	9d04      	ldr	r5, [sp, #16]
 801f070:	9f04      	ldr	r7, [sp, #16]
 801f072:	1216      	asrs	r6, r2, #8
 801f074:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f078:	fb16 f605 	smulbb	r6, r6, r5
 801f07c:	9d08      	ldr	r5, [sp, #32]
 801f07e:	442e      	add	r6, r5
 801f080:	10d5      	asrs	r5, r2, #3
 801f082:	00d2      	lsls	r2, r2, #3
 801f084:	b2d2      	uxtb	r2, r2
 801f086:	fb12 f207 	smulbb	r2, r2, r7
 801f08a:	b2b6      	uxth	r6, r6
 801f08c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f090:	4462      	add	r2, ip
 801f092:	fb15 f507 	smulbb	r5, r5, r7
 801f096:	b292      	uxth	r2, r2
 801f098:	1c77      	adds	r7, r6, #1
 801f09a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801f09e:	1c57      	adds	r7, r2, #1
 801f0a0:	445d      	add	r5, fp
 801f0a2:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801f0a6:	b2ad      	uxth	r5, r5
 801f0a8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f0ac:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f0b0:	4316      	orrs	r6, r2
 801f0b2:	1c6a      	adds	r2, r5, #1
 801f0b4:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f0b8:	096d      	lsrs	r5, r5, #5
 801f0ba:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f0be:	432e      	orrs	r6, r5
 801f0c0:	f820 6b02 	strh.w	r6, [r0], #2
 801f0c4:	e7d0      	b.n	801f068 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801f0c6:	4573      	cmp	r3, lr
 801f0c8:	d38f      	bcc.n	801efea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f0ca:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f0ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f0d0:	fa1f f188 	uxth.w	r1, r8
 801f0d4:	1a64      	subs	r4, r4, r1
 801f0d6:	881b      	ldrh	r3, [r3, #0]
 801f0d8:	b2a4      	uxth	r4, r4
 801f0da:	2c00      	cmp	r4, #0
 801f0dc:	eba3 0308 	sub.w	r3, r3, r8
 801f0e0:	bf18      	it	ne
 801f0e2:	2100      	movne	r1, #0
 801f0e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f0e8:	e77f      	b.n	801efea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f0ea:	4b04      	ldr	r3, [pc, #16]	; (801f0fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f0ec:	6818      	ldr	r0, [r3, #0]
 801f0ee:	6803      	ldr	r3, [r0, #0]
 801f0f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f0f2:	4798      	blx	r3
 801f0f4:	b00f      	add	sp, #60	; 0x3c
 801f0f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f0fa:	bf00      	nop
 801f0fc:	20013854 	.word	0x20013854
 801f100:	2001384e 	.word	0x2001384e

0801f104 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f108:	b09f      	sub	sp, #124	; 0x7c
 801f10a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801f10e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801f112:	9209      	str	r2, [sp, #36]	; 0x24
 801f114:	461d      	mov	r5, r3
 801f116:	4604      	mov	r4, r0
 801f118:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f11a:	2a00      	cmp	r2, #0
 801f11c:	f000 81eb 	beq.w	801f4f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801f120:	6828      	ldr	r0, [r5, #0]
 801f122:	6869      	ldr	r1, [r5, #4]
 801f124:	aa1a      	add	r2, sp, #104	; 0x68
 801f126:	c203      	stmia	r2!, {r0, r1}
 801f128:	6818      	ldr	r0, [r3, #0]
 801f12a:	6859      	ldr	r1, [r3, #4]
 801f12c:	aa1c      	add	r2, sp, #112	; 0x70
 801f12e:	c203      	stmia	r2!, {r0, r1}
 801f130:	a81a      	add	r0, sp, #104	; 0x68
 801f132:	f7f9 f9c1 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f136:	4629      	mov	r1, r5
 801f138:	a81c      	add	r0, sp, #112	; 0x70
 801f13a:	f7f9 fa01 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f13e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801f142:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801f146:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801f14a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801f14e:	bfd7      	itett	le
 801f150:	b29a      	uxthle	r2, r3
 801f152:	2201      	movgt	r2, #1
 801f154:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801f158:	fb91 f2f2 	sdivle	r2, r1, r2
 801f15c:	9202      	str	r2, [sp, #8]
 801f15e:	9802      	ldr	r0, [sp, #8]
 801f160:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801f164:	fb92 f0f0 	sdiv	r0, r2, r0
 801f168:	b280      	uxth	r0, r0
 801f16a:	9010      	str	r0, [sp, #64]	; 0x40
 801f16c:	9902      	ldr	r1, [sp, #8]
 801f16e:	9802      	ldr	r0, [sp, #8]
 801f170:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f172:	4488      	add	r8, r1
 801f174:	fb05 2510 	mls	r5, r5, r0, r2
 801f178:	fb15 f503 	smulbb	r5, r5, r3
 801f17c:	f108 38ff 	add.w	r8, r8, #4294967295
 801f180:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801f184:	fb98 f8f1 	sdiv	r8, r8, r1
 801f188:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801f18c:	440d      	add	r5, r1
 801f18e:	4419      	add	r1, r3
 801f190:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801f194:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801f198:	441a      	add	r2, r3
 801f19a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801f19e:	9304      	str	r3, [sp, #16]
 801f1a0:	4b95      	ldr	r3, [pc, #596]	; (801f3f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801f1a2:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801f1a6:	6818      	ldr	r0, [r3, #0]
 801f1a8:	6803      	ldr	r3, [r0, #0]
 801f1aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f1ac:	4798      	blx	r3
 801f1ae:	4b93      	ldr	r3, [pc, #588]	; (801f3fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801f1b0:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801f1b4:	881a      	ldrh	r2, [r3, #0]
 801f1b6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801f1ba:	9318      	str	r3, [sp, #96]	; 0x60
 801f1bc:	fb02 7101 	mla	r1, r2, r1, r7
 801f1c0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f1c4:	4356      	muls	r6, r2
 801f1c6:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801f1ca:	f108 0801 	add.w	r8, r8, #1
 801f1ce:	920a      	str	r2, [sp, #40]	; 0x28
 801f1d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f1d2:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801f1d6:	930f      	str	r3, [sp, #60]	; 0x3c
 801f1d8:	fa1f f888 	uxth.w	r8, r8
 801f1dc:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801f1e0:	f108 0204 	add.w	r2, r8, #4
 801f1e4:	9211      	str	r2, [sp, #68]	; 0x44
 801f1e6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f1e8:	4b85      	ldr	r3, [pc, #532]	; (801f400 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801f1ea:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801f1ee:	b2ad      	uxth	r5, r5
 801f1f0:	9215      	str	r2, [sp, #84]	; 0x54
 801f1f2:	2d00      	cmp	r5, #0
 801f1f4:	9a04      	ldr	r2, [sp, #16]
 801f1f6:	f04f 0100 	mov.w	r1, #0
 801f1fa:	bf18      	it	ne
 801f1fc:	2200      	movne	r2, #0
 801f1fe:	1b1b      	subs	r3, r3, r4
 801f200:	b292      	uxth	r2, r2
 801f202:	910d      	str	r1, [sp, #52]	; 0x34
 801f204:	9319      	str	r3, [sp, #100]	; 0x64
 801f206:	9910      	ldr	r1, [sp, #64]	; 0x40
 801f208:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f20a:	fa11 f383 	uxtah	r3, r1, r3
 801f20e:	9914      	ldr	r1, [sp, #80]	; 0x50
 801f210:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801f214:	3304      	adds	r3, #4
 801f216:	9306      	str	r3, [sp, #24]
 801f218:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f21a:	4283      	cmp	r3, r0
 801f21c:	f240 8166 	bls.w	801f4ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801f220:	9902      	ldr	r1, [sp, #8]
 801f222:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801f226:	fbb5 f3f3 	udiv	r3, r5, r3
 801f22a:	1acb      	subs	r3, r1, r3
 801f22c:	b29b      	uxth	r3, r3
 801f22e:	9316      	str	r3, [sp, #88]	; 0x58
 801f230:	9b06      	ldr	r3, [sp, #24]
 801f232:	9e06      	ldr	r6, [sp, #24]
 801f234:	7859      	ldrb	r1, [r3, #1]
 801f236:	789b      	ldrb	r3, [r3, #2]
 801f238:	7836      	ldrb	r6, [r6, #0]
 801f23a:	9612      	str	r6, [sp, #72]	; 0x48
 801f23c:	021b      	lsls	r3, r3, #8
 801f23e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801f242:	9906      	ldr	r1, [sp, #24]
 801f244:	78c9      	ldrb	r1, [r1, #3]
 801f246:	430b      	orrs	r3, r1
 801f248:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801f24a:	3601      	adds	r6, #1
 801f24c:	4419      	add	r1, r3
 801f24e:	9605      	str	r6, [sp, #20]
 801f250:	1c4e      	adds	r6, r1, #1
 801f252:	9603      	str	r6, [sp, #12]
 801f254:	7849      	ldrb	r1, [r1, #1]
 801f256:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801f258:	0209      	lsls	r1, r1, #8
 801f25a:	5cf3      	ldrb	r3, [r6, r3]
 801f25c:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801f260:	4319      	orrs	r1, r3
 801f262:	b28b      	uxth	r3, r1
 801f264:	930c      	str	r3, [sp, #48]	; 0x30
 801f266:	2300      	movs	r3, #0
 801f268:	f04f 0a01 	mov.w	sl, #1
 801f26c:	9307      	str	r3, [sp, #28]
 801f26e:	469c      	mov	ip, r3
 801f270:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801f274:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801f278:	46d3      	mov	fp, sl
 801f27a:	4657      	mov	r7, sl
 801f27c:	930e      	str	r3, [sp, #56]	; 0x38
 801f27e:	2d00      	cmp	r5, #0
 801f280:	d07e      	beq.n	801f380 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801f282:	42af      	cmp	r7, r5
 801f284:	d26e      	bcs.n	801f364 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801f286:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f288:	9201      	str	r2, [sp, #4]
 801f28a:	1bed      	subs	r5, r5, r7
 801f28c:	4283      	cmp	r3, r0
 801f28e:	b2ad      	uxth	r5, r5
 801f290:	d802      	bhi.n	801f298 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801f292:	e073      	b.n	801f37c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801f294:	2b00      	cmp	r3, #0
 801f296:	d15f      	bne.n	801f358 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801f298:	9b03      	ldr	r3, [sp, #12]
 801f29a:	785b      	ldrb	r3, [r3, #1]
 801f29c:	f1cb 0207 	rsb	r2, fp, #7
 801f2a0:	4093      	lsls	r3, r2
 801f2a2:	005b      	lsls	r3, r3, #1
 801f2a4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801f2a8:	9b03      	ldr	r3, [sp, #12]
 801f2aa:	781b      	ldrb	r3, [r3, #0]
 801f2ac:	fa43 f30b 	asr.w	r3, r3, fp
 801f2b0:	b2db      	uxtb	r3, r3
 801f2b2:	4313      	orrs	r3, r2
 801f2b4:	f10b 0201 	add.w	r2, fp, #1
 801f2b8:	fa5f fb82 	uxtb.w	fp, r2
 801f2bc:	9a03      	ldr	r2, [sp, #12]
 801f2be:	f1bb 0f08 	cmp.w	fp, #8
 801f2c2:	bf15      	itete	ne
 801f2c4:	3201      	addne	r2, #1
 801f2c6:	3202      	addeq	r2, #2
 801f2c8:	9203      	strne	r2, [sp, #12]
 801f2ca:	9203      	streq	r2, [sp, #12]
 801f2cc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f2ce:	b29f      	uxth	r7, r3
 801f2d0:	bf08      	it	eq
 801f2d2:	f04f 0b00 	moveq.w	fp, #0
 801f2d6:	42ba      	cmp	r2, r7
 801f2d8:	d309      	bcc.n	801f2ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801f2da:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801f2de:	2301      	movs	r3, #1
 801f2e0:	9a05      	ldr	r2, [sp, #20]
 801f2e2:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801f2e6:	d30e      	bcc.n	801f306 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801f2e8:	469a      	mov	sl, r3
 801f2ea:	2600      	movs	r6, #0
 801f2ec:	e035      	b.n	801f35a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801f2ee:	9b05      	ldr	r3, [sp, #20]
 801f2f0:	429f      	cmp	r7, r3
 801f2f2:	d318      	bcc.n	801f326 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801f2f4:	eb04 030a 	add.w	r3, r4, sl
 801f2f8:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801f2fc:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801f300:	f10a 0301 	add.w	r3, sl, #1
 801f304:	b29b      	uxth	r3, r3
 801f306:	9a05      	ldr	r2, [sp, #20]
 801f308:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801f30c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f30e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f312:	7116      	strb	r6, [r2, #4]
 801f314:	f10a 0601 	add.w	r6, sl, #1
 801f318:	80d1      	strh	r1, [r2, #6]
 801f31a:	7156      	strb	r6, [r2, #5]
 801f31c:	9a05      	ldr	r2, [sp, #20]
 801f31e:	3201      	adds	r2, #1
 801f320:	b292      	uxth	r2, r2
 801f322:	9205      	str	r2, [sp, #20]
 801f324:	e7e0      	b.n	801f2e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801f326:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801f32a:	463a      	mov	r2, r7
 801f32c:	795b      	ldrb	r3, [r3, #5]
 801f32e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801f332:	4426      	add	r6, r4
 801f334:	9919      	ldr	r1, [sp, #100]	; 0x64
 801f336:	eb01 0c06 	add.w	ip, r1, r6
 801f33a:	f1bc 0f00 	cmp.w	ip, #0
 801f33e:	dd07      	ble.n	801f350 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801f340:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f344:	f892 c004 	ldrb.w	ip, [r2, #4]
 801f348:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801f34c:	88d2      	ldrh	r2, [r2, #6]
 801f34e:	e7f1      	b.n	801f334 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801f350:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801f354:	b29b      	uxth	r3, r3
 801f356:	e7c3      	b.n	801f2e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801f358:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801f35a:	970c      	str	r7, [sp, #48]	; 0x30
 801f35c:	9a01      	ldr	r2, [sp, #4]
 801f35e:	46b4      	mov	ip, r6
 801f360:	461f      	mov	r7, r3
 801f362:	e78c      	b.n	801f27e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801f364:	1b7b      	subs	r3, r7, r5
 801f366:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f36a:	9201      	str	r2, [sp, #4]
 801f36c:	eb0c 0605 	add.w	r6, ip, r5
 801f370:	b29b      	uxth	r3, r3
 801f372:	b2b6      	uxth	r6, r6
 801f374:	2500      	movs	r5, #0
 801f376:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f378:	4282      	cmp	r2, r0
 801f37a:	d88b      	bhi.n	801f294 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f37c:	9a01      	ldr	r2, [sp, #4]
 801f37e:	e74b      	b.n	801f218 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801f380:	4297      	cmp	r7, r2
 801f382:	d332      	bcc.n	801f3ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801f384:	1abb      	subs	r3, r7, r2
 801f386:	b29b      	uxth	r3, r3
 801f388:	9208      	str	r2, [sp, #32]
 801f38a:	9501      	str	r5, [sp, #4]
 801f38c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f38e:	29ff      	cmp	r1, #255	; 0xff
 801f390:	9908      	ldr	r1, [sp, #32]
 801f392:	eb0c 0601 	add.w	r6, ip, r1
 801f396:	d135      	bne.n	801f404 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801f398:	f1a0 0e02 	sub.w	lr, r0, #2
 801f39c:	b2b6      	uxth	r6, r6
 801f39e:	45b4      	cmp	ip, r6
 801f3a0:	f040 808c 	bne.w	801f4bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801f3a4:	9908      	ldr	r1, [sp, #32]
 801f3a6:	4297      	cmp	r7, r2
 801f3a8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f3ac:	d3e2      	bcc.n	801f374 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801f3ae:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801f3b0:	9904      	ldr	r1, [sp, #16]
 801f3b2:	8812      	ldrh	r2, [r2, #0]
 801f3b4:	1a52      	subs	r2, r2, r1
 801f3b6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f3ba:	9a07      	ldr	r2, [sp, #28]
 801f3bc:	9916      	ldr	r1, [sp, #88]	; 0x58
 801f3be:	3201      	adds	r2, #1
 801f3c0:	428a      	cmp	r2, r1
 801f3c2:	9207      	str	r2, [sp, #28]
 801f3c4:	f040 8087 	bne.w	801f4d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801f3c8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801f3cc:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801f3d0:	9b04      	ldr	r3, [sp, #16]
 801f3d2:	1bed      	subs	r5, r5, r7
 801f3d4:	b2ad      	uxth	r5, r5
 801f3d6:	2d00      	cmp	r5, #0
 801f3d8:	bf08      	it	eq
 801f3da:	461a      	moveq	r2, r3
 801f3dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f3de:	bf18      	it	ne
 801f3e0:	2200      	movne	r2, #0
 801f3e2:	3301      	adds	r3, #1
 801f3e4:	930d      	str	r3, [sp, #52]	; 0x34
 801f3e6:	b292      	uxth	r2, r2
 801f3e8:	e70d      	b.n	801f206 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801f3ea:	1bd1      	subs	r1, r2, r7
 801f3ec:	b28b      	uxth	r3, r1
 801f3ee:	9301      	str	r3, [sp, #4]
 801f3f0:	9708      	str	r7, [sp, #32]
 801f3f2:	462b      	mov	r3, r5
 801f3f4:	e7ca      	b.n	801f38c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801f3f6:	bf00      	nop
 801f3f8:	20013854 	.word	0x20013854
 801f3fc:	2001384e 	.word	0x2001384e
 801f400:	fffff7fb 	.word	0xfffff7fb
 801f404:	b2b6      	uxth	r6, r6
 801f406:	900b      	str	r0, [sp, #44]	; 0x2c
 801f408:	45b4      	cmp	ip, r6
 801f40a:	d0cb      	beq.n	801f3a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801f40c:	f10c 0101 	add.w	r1, ip, #1
 801f410:	44a4      	add	ip, r4
 801f412:	9117      	str	r1, [sp, #92]	; 0x5c
 801f414:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f418:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f41a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f41e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f420:	f8b1 c000 	ldrh.w	ip, [r1]
 801f424:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f426:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801f42a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801f42e:	fb1e fe01 	smulbb	lr, lr, r1
 801f432:	ea4f 2825 	mov.w	r8, r5, asr #8
 801f436:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f438:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801f43c:	fb08 e801 	mla	r8, r8, r1, lr
 801f440:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801f444:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f446:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801f44a:	fb19 f901 	smulbb	r9, r9, r1
 801f44e:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801f452:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f454:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f458:	fb0e 9e01 	mla	lr, lr, r1, r9
 801f45c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f460:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f462:	fa5f fc8c 	uxtb.w	ip, ip
 801f466:	fb1c fc01 	smulbb	ip, ip, r1
 801f46a:	00ed      	lsls	r5, r5, #3
 801f46c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f46e:	b2ed      	uxtb	r5, r5
 801f470:	fb05 c501 	mla	r5, r5, r1, ip
 801f474:	fa1f f888 	uxth.w	r8, r8
 801f478:	fa1f fe8e 	uxth.w	lr, lr
 801f47c:	b2ad      	uxth	r5, r5
 801f47e:	f108 0c01 	add.w	ip, r8, #1
 801f482:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801f486:	f10e 0901 	add.w	r9, lr, #1
 801f48a:	f105 0c01 	add.w	ip, r5, #1
 801f48e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801f492:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801f496:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f49a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801f49e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f4a2:	ea4c 0808 	orr.w	r8, ip, r8
 801f4a6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f4a8:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801f4ac:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f4b0:	ea48 0809 	orr.w	r8, r8, r9
 801f4b4:	f821 8b02 	strh.w	r8, [r1], #2
 801f4b8:	910b      	str	r1, [sp, #44]	; 0x2c
 801f4ba:	e7a5      	b.n	801f408 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801f4bc:	f10c 0801 	add.w	r8, ip, #1
 801f4c0:	44a4      	add	ip, r4
 801f4c2:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f4c4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f4c8:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f4cc:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801f4d0:	fa1f fc88 	uxth.w	ip, r8
 801f4d4:	e763      	b.n	801f39e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801f4d6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f4da:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801f4de:	1aad      	subs	r5, r5, r2
 801f4e0:	b2ad      	uxth	r5, r5
 801f4e2:	2d00      	cmp	r5, #0
 801f4e4:	bf18      	it	ne
 801f4e6:	2200      	movne	r2, #0
 801f4e8:	9201      	str	r2, [sp, #4]
 801f4ea:	e744      	b.n	801f376 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801f4ec:	4b03      	ldr	r3, [pc, #12]	; (801f4fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801f4ee:	6818      	ldr	r0, [r3, #0]
 801f4f0:	6803      	ldr	r3, [r0, #0]
 801f4f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f4f4:	4798      	blx	r3
 801f4f6:	b01f      	add	sp, #124	; 0x7c
 801f4f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f4fc:	20013854 	.word	0x20013854

0801f500 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801f500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f504:	b08f      	sub	sp, #60	; 0x3c
 801f506:	461c      	mov	r4, r3
 801f508:	9203      	str	r2, [sp, #12]
 801f50a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f50e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f510:	9202      	str	r2, [sp, #8]
 801f512:	460f      	mov	r7, r1
 801f514:	2a00      	cmp	r2, #0
 801f516:	f000 8128 	beq.w	801f76a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801f51a:	6820      	ldr	r0, [r4, #0]
 801f51c:	6861      	ldr	r1, [r4, #4]
 801f51e:	aa0a      	add	r2, sp, #40	; 0x28
 801f520:	c203      	stmia	r2!, {r0, r1}
 801f522:	6818      	ldr	r0, [r3, #0]
 801f524:	6859      	ldr	r1, [r3, #4]
 801f526:	aa0c      	add	r2, sp, #48	; 0x30
 801f528:	c203      	stmia	r2!, {r0, r1}
 801f52a:	a80a      	add	r0, sp, #40	; 0x28
 801f52c:	f7f8 ffc4 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f530:	4621      	mov	r1, r4
 801f532:	a80c      	add	r0, sp, #48	; 0x30
 801f534:	f7f9 f804 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f538:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f53c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f540:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f544:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f548:	bfde      	ittt	le
 801f54a:	b2b3      	uxthle	r3, r6
 801f54c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f550:	fb92 f3f3 	sdivle	r3, r2, r3
 801f554:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f558:	bfc8      	it	gt
 801f55a:	2301      	movgt	r3, #1
 801f55c:	fb92 f1f3 	sdiv	r1, r2, r3
 801f560:	fa1f fc81 	uxth.w	ip, r1
 801f564:	fb0c 2413 	mls	r4, ip, r3, r2
 801f568:	fb14 f406 	smulbb	r4, r4, r6
 801f56c:	441d      	add	r5, r3
 801f56e:	4404      	add	r4, r0
 801f570:	4661      	mov	r1, ip
 801f572:	3d01      	subs	r5, #1
 801f574:	b2a4      	uxth	r4, r4
 801f576:	fb95 f5f3 	sdiv	r5, r5, r3
 801f57a:	b121      	cbz	r1, 801f586 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801f57c:	9b03      	ldr	r3, [sp, #12]
 801f57e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f582:	ba1b      	rev	r3, r3
 801f584:	441f      	add	r7, r3
 801f586:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f58a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f58e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f592:	4418      	add	r0, r3
 801f594:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f598:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f59c:	441a      	add	r2, r3
 801f59e:	4b74      	ldr	r3, [pc, #464]	; (801f770 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801f5a0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f5a4:	6818      	ldr	r0, [r3, #0]
 801f5a6:	6803      	ldr	r3, [r0, #0]
 801f5a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f5aa:	4798      	blx	r3
 801f5ac:	4a71      	ldr	r2, [pc, #452]	; (801f774 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801f5ae:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801f5b2:	8813      	ldrh	r3, [r2, #0]
 801f5b4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f5b8:	9209      	str	r2, [sp, #36]	; 0x24
 801f5ba:	fb03 c101 	mla	r1, r3, r1, ip
 801f5be:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f5c2:	4373      	muls	r3, r6
 801f5c4:	b2ad      	uxth	r5, r5
 801f5c6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f5ca:	00ad      	lsls	r5, r5, #2
 801f5cc:	2c00      	cmp	r4, #0
 801f5ce:	9304      	str	r3, [sp, #16]
 801f5d0:	f105 0304 	add.w	r3, r5, #4
 801f5d4:	9305      	str	r3, [sp, #20]
 801f5d6:	bf0c      	ite	eq
 801f5d8:	46c8      	moveq	r8, r9
 801f5da:	f04f 0800 	movne.w	r8, #0
 801f5de:	2300      	movs	r3, #0
 801f5e0:	fa1f f888 	uxth.w	r8, r8
 801f5e4:	9301      	str	r3, [sp, #4]
 801f5e6:	9a04      	ldr	r2, [sp, #16]
 801f5e8:	4282      	cmp	r2, r0
 801f5ea:	f240 80b9 	bls.w	801f760 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801f5ee:	b95b      	cbnz	r3, 801f608 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801f5f0:	783a      	ldrb	r2, [r7, #0]
 801f5f2:	0993      	lsrs	r3, r2, #6
 801f5f4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f5f8:	9201      	str	r2, [sp, #4]
 801f5fa:	1e5a      	subs	r2, r3, #1
 801f5fc:	2a02      	cmp	r2, #2
 801f5fe:	bf8d      	iteet	hi
 801f600:	787b      	ldrbhi	r3, [r7, #1]
 801f602:	3701      	addls	r7, #1
 801f604:	b29b      	uxthls	r3, r3
 801f606:	3702      	addhi	r7, #2
 801f608:	b184      	cbz	r4, 801f62c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801f60a:	429c      	cmp	r4, r3
 801f60c:	bf95      	itete	ls
 801f60e:	1b1c      	subls	r4, r3, r4
 801f610:	1ae4      	subhi	r4, r4, r3
 801f612:	fa1f fa84 	uxthls.w	sl, r4
 801f616:	b2a4      	uxthhi	r4, r4
 801f618:	bf87      	ittee	hi
 801f61a:	46c4      	movhi	ip, r8
 801f61c:	f04f 0a00 	movhi.w	sl, #0
 801f620:	fa1f fc89 	uxthls.w	ip, r9
 801f624:	2400      	movls	r4, #0
 801f626:	4653      	mov	r3, sl
 801f628:	46e0      	mov	r8, ip
 801f62a:	e7dc      	b.n	801f5e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801f62c:	2204      	movs	r2, #4
 801f62e:	4615      	mov	r5, r2
 801f630:	9905      	ldr	r1, [sp, #20]
 801f632:	9a01      	ldr	r2, [sp, #4]
 801f634:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f638:	9903      	ldr	r1, [sp, #12]
 801f63a:	588a      	ldr	r2, [r1, r2]
 801f63c:	4543      	cmp	r3, r8
 801f63e:	bf27      	ittee	cs
 801f640:	eba3 0a08 	subcs.w	sl, r3, r8
 801f644:	46c6      	movcs	lr, r8
 801f646:	eba8 0c03 	subcc.w	ip, r8, r3
 801f64a:	469e      	movcc	lr, r3
 801f64c:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801f650:	bf27      	ittee	cs
 801f652:	fa1f fa8a 	uxthcs.w	sl, sl
 801f656:	46a4      	movcs	ip, r4
 801f658:	fa1f fc8c 	uxthcc.w	ip, ip
 801f65c:	46a2      	movcc	sl, r4
 801f65e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801f662:	2900      	cmp	r1, #0
 801f664:	d066      	beq.n	801f734 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801f666:	29ff      	cmp	r1, #255	; 0xff
 801f668:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f66c:	d114      	bne.n	801f698 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801f66e:	9d02      	ldr	r5, [sp, #8]
 801f670:	2dff      	cmp	r5, #255	; 0xff
 801f672:	d111      	bne.n	801f698 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801f674:	0951      	lsrs	r1, r2, #5
 801f676:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801f67a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f67e:	f026 0607 	bic.w	r6, r6, #7
 801f682:	430e      	orrs	r6, r1
 801f684:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f688:	4316      	orrs	r6, r2
 801f68a:	b2b6      	uxth	r6, r6
 801f68c:	4486      	add	lr, r0
 801f68e:	4586      	cmp	lr, r0
 801f690:	d051      	beq.n	801f736 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f692:	f820 6b02 	strh.w	r6, [r0], #2
 801f696:	e7fa      	b.n	801f68e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801f698:	9d02      	ldr	r5, [sp, #8]
 801f69a:	4369      	muls	r1, r5
 801f69c:	1c4d      	adds	r5, r1, #1
 801f69e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801f6a2:	122d      	asrs	r5, r5, #8
 801f6a4:	ea6f 0b05 	mvn.w	fp, r5
 801f6a8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f6ac:	b2ad      	uxth	r5, r5
 801f6ae:	b2f6      	uxtb	r6, r6
 801f6b0:	b2d2      	uxtb	r2, r2
 801f6b2:	fb11 f105 	smulbb	r1, r1, r5
 801f6b6:	fb16 f605 	smulbb	r6, r6, r5
 801f6ba:	fb12 f205 	smulbb	r2, r2, r5
 801f6be:	b289      	uxth	r1, r1
 801f6c0:	b2b6      	uxth	r6, r6
 801f6c2:	b292      	uxth	r2, r2
 801f6c4:	9106      	str	r1, [sp, #24]
 801f6c6:	9607      	str	r6, [sp, #28]
 801f6c8:	9208      	str	r2, [sp, #32]
 801f6ca:	4486      	add	lr, r0
 801f6cc:	fa5f fb8b 	uxtb.w	fp, fp
 801f6d0:	4586      	cmp	lr, r0
 801f6d2:	d030      	beq.n	801f736 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f6d4:	8802      	ldrh	r2, [r0, #0]
 801f6d6:	9906      	ldr	r1, [sp, #24]
 801f6d8:	1216      	asrs	r6, r2, #8
 801f6da:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f6de:	10d5      	asrs	r5, r2, #3
 801f6e0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f6e4:	fb06 160b 	mla	r6, r6, fp, r1
 801f6e8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f6ec:	9907      	ldr	r1, [sp, #28]
 801f6ee:	00d2      	lsls	r2, r2, #3
 801f6f0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801f6f4:	fb05 150b 	mla	r5, r5, fp, r1
 801f6f8:	b2d2      	uxtb	r2, r2
 801f6fa:	9908      	ldr	r1, [sp, #32]
 801f6fc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f700:	b2b6      	uxth	r6, r6
 801f702:	fb02 120b 	mla	r2, r2, fp, r1
 801f706:	b292      	uxth	r2, r2
 801f708:	1c71      	adds	r1, r6, #1
 801f70a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801f70e:	1c51      	adds	r1, r2, #1
 801f710:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f714:	b2ad      	uxth	r5, r5
 801f716:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f71a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f71e:	4316      	orrs	r6, r2
 801f720:	1c6a      	adds	r2, r5, #1
 801f722:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f726:	096d      	lsrs	r5, r5, #5
 801f728:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f72c:	432e      	orrs	r6, r5
 801f72e:	f820 6b02 	strh.w	r6, [r0], #2
 801f732:	e7cd      	b.n	801f6d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801f734:	4470      	add	r0, lr
 801f736:	4543      	cmp	r3, r8
 801f738:	f4ff af75 	bcc.w	801f626 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801f73c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f740:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f742:	fa1f fc89 	uxth.w	ip, r9
 801f746:	eba4 040c 	sub.w	r4, r4, ip
 801f74a:	881b      	ldrh	r3, [r3, #0]
 801f74c:	b2a4      	uxth	r4, r4
 801f74e:	2c00      	cmp	r4, #0
 801f750:	eba3 0309 	sub.w	r3, r3, r9
 801f754:	bf18      	it	ne
 801f756:	f04f 0c00 	movne.w	ip, #0
 801f75a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f75e:	e762      	b.n	801f626 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801f760:	4b03      	ldr	r3, [pc, #12]	; (801f770 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801f762:	6818      	ldr	r0, [r3, #0]
 801f764:	6803      	ldr	r3, [r0, #0]
 801f766:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f768:	4798      	blx	r3
 801f76a:	b00f      	add	sp, #60	; 0x3c
 801f76c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f770:	20013854 	.word	0x20013854
 801f774:	2001384e 	.word	0x2001384e

0801f778 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801f778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f77c:	b093      	sub	sp, #76	; 0x4c
 801f77e:	461c      	mov	r4, r3
 801f780:	9205      	str	r2, [sp, #20]
 801f782:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801f786:	9101      	str	r1, [sp, #4]
 801f788:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f78a:	9202      	str	r2, [sp, #8]
 801f78c:	2a00      	cmp	r2, #0
 801f78e:	f000 812c 	beq.w	801f9ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801f792:	6820      	ldr	r0, [r4, #0]
 801f794:	6861      	ldr	r1, [r4, #4]
 801f796:	aa0e      	add	r2, sp, #56	; 0x38
 801f798:	c203      	stmia	r2!, {r0, r1}
 801f79a:	6818      	ldr	r0, [r3, #0]
 801f79c:	6859      	ldr	r1, [r3, #4]
 801f79e:	aa10      	add	r2, sp, #64	; 0x40
 801f7a0:	c203      	stmia	r2!, {r0, r1}
 801f7a2:	a80e      	add	r0, sp, #56	; 0x38
 801f7a4:	f7f8 fe88 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f7a8:	4621      	mov	r1, r4
 801f7aa:	a810      	add	r0, sp, #64	; 0x40
 801f7ac:	f7f8 fec8 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f7b0:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801f7b4:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801f7b8:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801f7bc:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f7c0:	bfde      	ittt	le
 801f7c2:	b2b3      	uxthle	r3, r6
 801f7c4:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f7c8:	fb92 f3f3 	sdivle	r3, r2, r3
 801f7cc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801f7d0:	bfc8      	it	gt
 801f7d2:	2301      	movgt	r3, #1
 801f7d4:	fb92 f1f3 	sdiv	r1, r2, r3
 801f7d8:	fa1f fc81 	uxth.w	ip, r1
 801f7dc:	fb0c 2413 	mls	r4, ip, r3, r2
 801f7e0:	fb14 f406 	smulbb	r4, r4, r6
 801f7e4:	441d      	add	r5, r3
 801f7e6:	4404      	add	r4, r0
 801f7e8:	4661      	mov	r1, ip
 801f7ea:	3d01      	subs	r5, #1
 801f7ec:	b2a4      	uxth	r4, r4
 801f7ee:	fb95 f5f3 	sdiv	r5, r5, r3
 801f7f2:	b131      	cbz	r1, 801f802 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801f7f4:	9b05      	ldr	r3, [sp, #20]
 801f7f6:	9901      	ldr	r1, [sp, #4]
 801f7f8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f7fc:	ba1b      	rev	r3, r3
 801f7fe:	4419      	add	r1, r3
 801f800:	9101      	str	r1, [sp, #4]
 801f802:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801f806:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f80a:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801f80e:	4418      	add	r0, r3
 801f810:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801f814:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801f818:	441a      	add	r2, r3
 801f81a:	4b75      	ldr	r3, [pc, #468]	; (801f9f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801f81c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801f820:	6818      	ldr	r0, [r3, #0]
 801f822:	6803      	ldr	r3, [r0, #0]
 801f824:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f826:	4798      	blx	r3
 801f828:	4972      	ldr	r1, [pc, #456]	; (801f9f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801f82a:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801f82e:	880b      	ldrh	r3, [r1, #0]
 801f830:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801f834:	910d      	str	r1, [sp, #52]	; 0x34
 801f836:	fb03 c202 	mla	r2, r3, r2, ip
 801f83a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f83e:	4373      	muls	r3, r6
 801f840:	b2ad      	uxth	r5, r5
 801f842:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f846:	00ad      	lsls	r5, r5, #2
 801f848:	9308      	str	r3, [sp, #32]
 801f84a:	1d2b      	adds	r3, r5, #4
 801f84c:	9309      	str	r3, [sp, #36]	; 0x24
 801f84e:	9b02      	ldr	r3, [sp, #8]
 801f850:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f854:	9106      	str	r1, [sp, #24]
 801f856:	43da      	mvns	r2, r3
 801f858:	2c00      	cmp	r4, #0
 801f85a:	bf0c      	ite	eq
 801f85c:	46dc      	moveq	ip, fp
 801f85e:	f04f 0c00 	movne.w	ip, #0
 801f862:	2300      	movs	r3, #0
 801f864:	b2d2      	uxtb	r2, r2
 801f866:	fa1f fc8c 	uxth.w	ip, ip
 801f86a:	9303      	str	r3, [sp, #12]
 801f86c:	9207      	str	r2, [sp, #28]
 801f86e:	9a08      	ldr	r2, [sp, #32]
 801f870:	4282      	cmp	r2, r0
 801f872:	f240 80b5 	bls.w	801f9e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801f876:	b963      	cbnz	r3, 801f892 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801f878:	9b01      	ldr	r3, [sp, #4]
 801f87a:	781a      	ldrb	r2, [r3, #0]
 801f87c:	0993      	lsrs	r3, r2, #6
 801f87e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f882:	9203      	str	r2, [sp, #12]
 801f884:	1e5a      	subs	r2, r3, #1
 801f886:	2a02      	cmp	r2, #2
 801f888:	d815      	bhi.n	801f8b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801f88a:	9a01      	ldr	r2, [sp, #4]
 801f88c:	3201      	adds	r2, #1
 801f88e:	9201      	str	r2, [sp, #4]
 801f890:	b29b      	uxth	r3, r3
 801f892:	b1b4      	cbz	r4, 801f8c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801f894:	429c      	cmp	r4, r3
 801f896:	bf95      	itete	ls
 801f898:	1b1c      	subls	r4, r3, r4
 801f89a:	1ae4      	subhi	r4, r4, r3
 801f89c:	fa1f f884 	uxthls.w	r8, r4
 801f8a0:	b2a4      	uxthhi	r4, r4
 801f8a2:	bf87      	ittee	hi
 801f8a4:	4666      	movhi	r6, ip
 801f8a6:	f04f 0800 	movhi.w	r8, #0
 801f8aa:	fa1f f68b 	uxthls.w	r6, fp
 801f8ae:	2400      	movls	r4, #0
 801f8b0:	4643      	mov	r3, r8
 801f8b2:	46b4      	mov	ip, r6
 801f8b4:	e7db      	b.n	801f86e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801f8b6:	9a01      	ldr	r2, [sp, #4]
 801f8b8:	9b01      	ldr	r3, [sp, #4]
 801f8ba:	3202      	adds	r2, #2
 801f8bc:	785b      	ldrb	r3, [r3, #1]
 801f8be:	9201      	str	r2, [sp, #4]
 801f8c0:	e7e7      	b.n	801f892 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801f8c2:	2203      	movs	r2, #3
 801f8c4:	4615      	mov	r5, r2
 801f8c6:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f8c8:	9a03      	ldr	r2, [sp, #12]
 801f8ca:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f8ce:	9905      	ldr	r1, [sp, #20]
 801f8d0:	4563      	cmp	r3, ip
 801f8d2:	eb01 0502 	add.w	r5, r1, r2
 801f8d6:	9902      	ldr	r1, [sp, #8]
 801f8d8:	bf29      	itett	cs
 801f8da:	eba3 080c 	subcs.w	r8, r3, ip
 801f8de:	ebac 0603 	subcc.w	r6, ip, r3
 801f8e2:	fa1f f888 	uxthcs.w	r8, r8
 801f8e6:	46e1      	movcs	r9, ip
 801f8e8:	bf2f      	iteee	cs
 801f8ea:	4626      	movcs	r6, r4
 801f8ec:	b2b6      	uxthcc	r6, r6
 801f8ee:	4699      	movcc	r9, r3
 801f8f0:	46a0      	movcc	r8, r4
 801f8f2:	29ff      	cmp	r1, #255	; 0xff
 801f8f4:	d04a      	beq.n	801f98c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801f8f6:	9f06      	ldr	r7, [sp, #24]
 801f8f8:	78a9      	ldrb	r1, [r5, #2]
 801f8fa:	9004      	str	r0, [sp, #16]
 801f8fc:	4379      	muls	r1, r7
 801f8fe:	910a      	str	r1, [sp, #40]	; 0x28
 801f900:	7869      	ldrb	r1, [r5, #1]
 801f902:	4379      	muls	r1, r7
 801f904:	910b      	str	r1, [sp, #44]	; 0x2c
 801f906:	9905      	ldr	r1, [sp, #20]
 801f908:	5c8a      	ldrb	r2, [r1, r2]
 801f90a:	437a      	muls	r2, r7
 801f90c:	920c      	str	r2, [sp, #48]	; 0x30
 801f90e:	46ca      	mov	sl, r9
 801f910:	f1ba 0f00 	cmp.w	sl, #0
 801f914:	d03d      	beq.n	801f992 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801f916:	9a04      	ldr	r2, [sp, #16]
 801f918:	9f07      	ldr	r7, [sp, #28]
 801f91a:	8812      	ldrh	r2, [r2, #0]
 801f91c:	1215      	asrs	r5, r2, #8
 801f91e:	46be      	mov	lr, r7
 801f920:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f924:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801f926:	10d1      	asrs	r1, r2, #3
 801f928:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801f92c:	fb05 750e 	mla	r5, r5, lr, r7
 801f930:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f934:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801f936:	00d2      	lsls	r2, r2, #3
 801f938:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801f93c:	fb01 710e 	mla	r1, r1, lr, r7
 801f940:	b2d2      	uxtb	r2, r2
 801f942:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801f944:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f948:	b2ad      	uxth	r5, r5
 801f94a:	fb02 720e 	mla	r2, r2, lr, r7
 801f94e:	b292      	uxth	r2, r2
 801f950:	f105 0e01 	add.w	lr, r5, #1
 801f954:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801f958:	f102 0e01 	add.w	lr, r2, #1
 801f95c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801f960:	b289      	uxth	r1, r1
 801f962:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f966:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f96a:	4315      	orrs	r5, r2
 801f96c:	1c4a      	adds	r2, r1, #1
 801f96e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f972:	0949      	lsrs	r1, r1, #5
 801f974:	9a04      	ldr	r2, [sp, #16]
 801f976:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f97a:	430d      	orrs	r5, r1
 801f97c:	f822 5b02 	strh.w	r5, [r2], #2
 801f980:	f10a 3aff 	add.w	sl, sl, #4294967295
 801f984:	9204      	str	r2, [sp, #16]
 801f986:	fa1f fa8a 	uxth.w	sl, sl
 801f98a:	e7c1      	b.n	801f910 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801f98c:	4649      	mov	r1, r9
 801f98e:	4686      	mov	lr, r0
 801f990:	b999      	cbnz	r1, 801f9ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801f992:	4563      	cmp	r3, ip
 801f994:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801f998:	d38a      	bcc.n	801f8b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801f99a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801f99e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f9a0:	fa1f f68b 	uxth.w	r6, fp
 801f9a4:	1ba4      	subs	r4, r4, r6
 801f9a6:	881b      	ldrh	r3, [r3, #0]
 801f9a8:	b2a4      	uxth	r4, r4
 801f9aa:	2c00      	cmp	r4, #0
 801f9ac:	eba3 030b 	sub.w	r3, r3, fp
 801f9b0:	bf18      	it	ne
 801f9b2:	2600      	movne	r6, #0
 801f9b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f9b8:	e77a      	b.n	801f8b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801f9ba:	78aa      	ldrb	r2, [r5, #2]
 801f9bc:	4f0e      	ldr	r7, [pc, #56]	; (801f9f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801f9be:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801f9c2:	786a      	ldrb	r2, [r5, #1]
 801f9c4:	00d2      	lsls	r2, r2, #3
 801f9c6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f9ca:	ea4a 0202 	orr.w	r2, sl, r2
 801f9ce:	f895 a000 	ldrb.w	sl, [r5]
 801f9d2:	3901      	subs	r1, #1
 801f9d4:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801f9d8:	f82e 2b02 	strh.w	r2, [lr], #2
 801f9dc:	b289      	uxth	r1, r1
 801f9de:	e7d7      	b.n	801f990 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801f9e0:	4b03      	ldr	r3, [pc, #12]	; (801f9f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801f9e2:	6818      	ldr	r0, [r3, #0]
 801f9e4:	6803      	ldr	r3, [r0, #0]
 801f9e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f9e8:	4798      	blx	r3
 801f9ea:	b013      	add	sp, #76	; 0x4c
 801f9ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f9f0:	20013854 	.word	0x20013854
 801f9f4:	2001384e 	.word	0x2001384e
 801f9f8:	fffff800 	.word	0xfffff800

0801f9fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801f9fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa00:	b09d      	sub	sp, #116	; 0x74
 801fa02:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801fa06:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801fa0a:	920e      	str	r2, [sp, #56]	; 0x38
 801fa0c:	461c      	mov	r4, r3
 801fa0e:	4683      	mov	fp, r0
 801fa10:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fa12:	2a00      	cmp	r2, #0
 801fa14:	f000 81e0 	beq.w	801fdd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801fa18:	6820      	ldr	r0, [r4, #0]
 801fa1a:	6861      	ldr	r1, [r4, #4]
 801fa1c:	aa18      	add	r2, sp, #96	; 0x60
 801fa1e:	c203      	stmia	r2!, {r0, r1}
 801fa20:	6818      	ldr	r0, [r3, #0]
 801fa22:	6859      	ldr	r1, [r3, #4]
 801fa24:	aa1a      	add	r2, sp, #104	; 0x68
 801fa26:	c203      	stmia	r2!, {r0, r1}
 801fa28:	a818      	add	r0, sp, #96	; 0x60
 801fa2a:	f7f8 fd45 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fa2e:	4621      	mov	r1, r4
 801fa30:	a81a      	add	r0, sp, #104	; 0x68
 801fa32:	f7f8 fd85 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fa36:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801fa3a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801fa3e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801fa42:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801fa46:	bfd7      	itett	le
 801fa48:	b29a      	uxthle	r2, r3
 801fa4a:	2201      	movgt	r2, #1
 801fa4c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801fa50:	fb91 f2f2 	sdivle	r2, r1, r2
 801fa54:	9202      	str	r2, [sp, #8]
 801fa56:	9802      	ldr	r0, [sp, #8]
 801fa58:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801fa5c:	fb92 f0f0 	sdiv	r0, r2, r0
 801fa60:	b280      	uxth	r0, r0
 801fa62:	900f      	str	r0, [sp, #60]	; 0x3c
 801fa64:	9902      	ldr	r1, [sp, #8]
 801fa66:	9802      	ldr	r0, [sp, #8]
 801fa68:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fa6a:	440c      	add	r4, r1
 801fa6c:	fb05 2510 	mls	r5, r5, r0, r2
 801fa70:	fb15 f503 	smulbb	r5, r5, r3
 801fa74:	3c01      	subs	r4, #1
 801fa76:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801fa7a:	fb94 f4f1 	sdiv	r4, r4, r1
 801fa7e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801fa82:	440d      	add	r5, r1
 801fa84:	4419      	add	r1, r3
 801fa86:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801fa8a:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801fa8e:	441a      	add	r2, r3
 801fa90:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801fa94:	9306      	str	r3, [sp, #24]
 801fa96:	4bb3      	ldr	r3, [pc, #716]	; (801fd64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801fa98:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801fa9c:	6818      	ldr	r0, [r3, #0]
 801fa9e:	6803      	ldr	r3, [r0, #0]
 801faa0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801faa2:	4798      	blx	r3
 801faa4:	4bb0      	ldr	r3, [pc, #704]	; (801fd68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801faa6:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801faaa:	881a      	ldrh	r2, [r3, #0]
 801faac:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801fab0:	9316      	str	r3, [sp, #88]	; 0x58
 801fab2:	fb02 7101 	mla	r1, r2, r1, r7
 801fab6:	3401      	adds	r4, #1
 801fab8:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801fabc:	b2a4      	uxth	r4, r4
 801fabe:	4356      	muls	r6, r2
 801fac0:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801fac4:	00a4      	lsls	r4, r4, #2
 801fac6:	920a      	str	r2, [sp, #40]	; 0x28
 801fac8:	1d22      	adds	r2, r4, #4
 801faca:	b2ad      	uxth	r5, r5
 801facc:	9213      	str	r2, [sp, #76]	; 0x4c
 801face:	4ba7      	ldr	r3, [pc, #668]	; (801fd6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801fad0:	9a06      	ldr	r2, [sp, #24]
 801fad2:	2d00      	cmp	r5, #0
 801fad4:	bf0c      	ite	eq
 801fad6:	4611      	moveq	r1, r2
 801fad8:	2100      	movne	r1, #0
 801fada:	2200      	movs	r2, #0
 801fadc:	eba3 030b 	sub.w	r3, r3, fp
 801fae0:	b289      	uxth	r1, r1
 801fae2:	920d      	str	r2, [sp, #52]	; 0x34
 801fae4:	9317      	str	r3, [sp, #92]	; 0x5c
 801fae6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fae8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801faea:	fa12 f383 	uxtah	r3, r2, r3
 801faee:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801faf0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801faf4:	3304      	adds	r3, #4
 801faf6:	9308      	str	r3, [sp, #32]
 801faf8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fafa:	4543      	cmp	r3, r8
 801fafc:	f240 8167 	bls.w	801fdce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801fb00:	9a02      	ldr	r2, [sp, #8]
 801fb02:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801fb06:	fbb5 f3f3 	udiv	r3, r5, r3
 801fb0a:	1ad3      	subs	r3, r2, r3
 801fb0c:	b29b      	uxth	r3, r3
 801fb0e:	9314      	str	r3, [sp, #80]	; 0x50
 801fb10:	9b08      	ldr	r3, [sp, #32]
 801fb12:	9808      	ldr	r0, [sp, #32]
 801fb14:	785a      	ldrb	r2, [r3, #1]
 801fb16:	789b      	ldrb	r3, [r3, #2]
 801fb18:	7800      	ldrb	r0, [r0, #0]
 801fb1a:	9010      	str	r0, [sp, #64]	; 0x40
 801fb1c:	021b      	lsls	r3, r3, #8
 801fb1e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801fb22:	9a08      	ldr	r2, [sp, #32]
 801fb24:	78d2      	ldrb	r2, [r2, #3]
 801fb26:	4313      	orrs	r3, r2
 801fb28:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801fb2a:	3001      	adds	r0, #1
 801fb2c:	441a      	add	r2, r3
 801fb2e:	9007      	str	r0, [sp, #28]
 801fb30:	1c50      	adds	r0, r2, #1
 801fb32:	9005      	str	r0, [sp, #20]
 801fb34:	7852      	ldrb	r2, [r2, #1]
 801fb36:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fb38:	0212      	lsls	r2, r2, #8
 801fb3a:	5cc3      	ldrb	r3, [r0, r3]
 801fb3c:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801fb40:	431a      	orrs	r2, r3
 801fb42:	b293      	uxth	r3, r2
 801fb44:	930b      	str	r3, [sp, #44]	; 0x2c
 801fb46:	2300      	movs	r3, #0
 801fb48:	9309      	str	r3, [sp, #36]	; 0x24
 801fb4a:	2301      	movs	r3, #1
 801fb4c:	9301      	str	r3, [sp, #4]
 801fb4e:	9304      	str	r3, [sp, #16]
 801fb50:	2300      	movs	r3, #0
 801fb52:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801fb56:	9303      	str	r3, [sp, #12]
 801fb58:	f04f 0e01 	mov.w	lr, #1
 801fb5c:	2d00      	cmp	r5, #0
 801fb5e:	d07c      	beq.n	801fc5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801fb60:	45ae      	cmp	lr, r5
 801fb62:	d26b      	bcs.n	801fc3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801fb64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fb66:	eba5 050e 	sub.w	r5, r5, lr
 801fb6a:	4543      	cmp	r3, r8
 801fb6c:	b2ad      	uxth	r5, r5
 801fb6e:	460c      	mov	r4, r1
 801fb70:	d802      	bhi.n	801fb78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801fb72:	e070      	b.n	801fc56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801fb74:	2b00      	cmp	r3, #0
 801fb76:	d15c      	bne.n	801fc32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801fb78:	9b05      	ldr	r3, [sp, #20]
 801fb7a:	9a04      	ldr	r2, [sp, #16]
 801fb7c:	785b      	ldrb	r3, [r3, #1]
 801fb7e:	9904      	ldr	r1, [sp, #16]
 801fb80:	f1c2 0207 	rsb	r2, r2, #7
 801fb84:	4093      	lsls	r3, r2
 801fb86:	005b      	lsls	r3, r3, #1
 801fb88:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801fb8c:	9b05      	ldr	r3, [sp, #20]
 801fb8e:	781b      	ldrb	r3, [r3, #0]
 801fb90:	410b      	asrs	r3, r1
 801fb92:	3101      	adds	r1, #1
 801fb94:	b2c9      	uxtb	r1, r1
 801fb96:	2908      	cmp	r1, #8
 801fb98:	9104      	str	r1, [sp, #16]
 801fb9a:	9905      	ldr	r1, [sp, #20]
 801fb9c:	bf0a      	itet	eq
 801fb9e:	3102      	addeq	r1, #2
 801fba0:	3101      	addne	r1, #1
 801fba2:	9105      	streq	r1, [sp, #20]
 801fba4:	b2db      	uxtb	r3, r3
 801fba6:	bf0a      	itet	eq
 801fba8:	2100      	moveq	r1, #0
 801fbaa:	9105      	strne	r1, [sp, #20]
 801fbac:	9104      	streq	r1, [sp, #16]
 801fbae:	4313      	orrs	r3, r2
 801fbb0:	9910      	ldr	r1, [sp, #64]	; 0x40
 801fbb2:	b29a      	uxth	r2, r3
 801fbb4:	4291      	cmp	r1, r2
 801fbb6:	d30a      	bcc.n	801fbce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801fbb8:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801fbbc:	2301      	movs	r3, #1
 801fbbe:	9907      	ldr	r1, [sp, #28]
 801fbc0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801fbc4:	d30f      	bcc.n	801fbe6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801fbc6:	2100      	movs	r1, #0
 801fbc8:	9301      	str	r3, [sp, #4]
 801fbca:	9103      	str	r1, [sp, #12]
 801fbcc:	e032      	b.n	801fc34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801fbce:	9b07      	ldr	r3, [sp, #28]
 801fbd0:	429a      	cmp	r2, r3
 801fbd2:	d318      	bcc.n	801fc06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801fbd4:	9b01      	ldr	r3, [sp, #4]
 801fbd6:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801fbda:	445b      	add	r3, fp
 801fbdc:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801fbe0:	9b01      	ldr	r3, [sp, #4]
 801fbe2:	3301      	adds	r3, #1
 801fbe4:	b29b      	uxth	r3, r3
 801fbe6:	9907      	ldr	r1, [sp, #28]
 801fbe8:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801fbec:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801fbf0:	7108      	strb	r0, [r1, #4]
 801fbf2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801fbf4:	80c8      	strh	r0, [r1, #6]
 801fbf6:	9801      	ldr	r0, [sp, #4]
 801fbf8:	3001      	adds	r0, #1
 801fbfa:	7148      	strb	r0, [r1, #5]
 801fbfc:	9907      	ldr	r1, [sp, #28]
 801fbfe:	3101      	adds	r1, #1
 801fc00:	b289      	uxth	r1, r1
 801fc02:	9107      	str	r1, [sp, #28]
 801fc04:	e7df      	b.n	801fbc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801fc06:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801fc0a:	4611      	mov	r1, r2
 801fc0c:	795b      	ldrb	r3, [r3, #5]
 801fc0e:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801fc12:	4458      	add	r0, fp
 801fc14:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801fc16:	4406      	add	r6, r0
 801fc18:	2e00      	cmp	r6, #0
 801fc1a:	dd06      	ble.n	801fc2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801fc1c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801fc20:	790e      	ldrb	r6, [r1, #4]
 801fc22:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801fc26:	88c9      	ldrh	r1, [r1, #6]
 801fc28:	e7f4      	b.n	801fc14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801fc2a:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801fc2e:	b29b      	uxth	r3, r3
 801fc30:	e7c5      	b.n	801fbbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801fc32:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fc34:	920b      	str	r2, [sp, #44]	; 0x2c
 801fc36:	4621      	mov	r1, r4
 801fc38:	469e      	mov	lr, r3
 801fc3a:	e78f      	b.n	801fb5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801fc3c:	9a03      	ldr	r2, [sp, #12]
 801fc3e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801fc42:	442a      	add	r2, r5
 801fc44:	ebae 0305 	sub.w	r3, lr, r5
 801fc48:	b292      	uxth	r2, r2
 801fc4a:	b29b      	uxth	r3, r3
 801fc4c:	9203      	str	r2, [sp, #12]
 801fc4e:	2500      	movs	r5, #0
 801fc50:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fc52:	4542      	cmp	r2, r8
 801fc54:	d88e      	bhi.n	801fb74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801fc56:	4621      	mov	r1, r4
 801fc58:	e74e      	b.n	801faf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801fc5a:	458e      	cmp	lr, r1
 801fc5c:	bf29      	itett	cs
 801fc5e:	ebae 0301 	subcs.w	r3, lr, r1
 801fc62:	eba1 040e 	subcc.w	r4, r1, lr
 801fc66:	b29b      	uxthcs	r3, r3
 801fc68:	910c      	strcs	r1, [sp, #48]	; 0x30
 801fc6a:	bf2f      	iteee	cs
 801fc6c:	462c      	movcs	r4, r5
 801fc6e:	b2a4      	uxthcc	r4, r4
 801fc70:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801fc74:	462b      	movcc	r3, r5
 801fc76:	f04f 0900 	mov.w	r9, #0
 801fc7a:	9a03      	ldr	r2, [sp, #12]
 801fc7c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801fc7e:	444a      	add	r2, r9
 801fc80:	4548      	cmp	r0, r9
 801fc82:	b292      	uxth	r2, r2
 801fc84:	d074      	beq.n	801fd70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801fc86:	445a      	add	r2, fp
 801fc88:	2004      	movs	r0, #4
 801fc8a:	4605      	mov	r5, r0
 801fc8c:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801fc90:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801fc92:	fb15 0202 	smlabb	r2, r5, r2, r0
 801fc96:	9812      	ldr	r0, [sp, #72]	; 0x48
 801fc98:	5880      	ldr	r0, [r0, r2]
 801fc9a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801fc9e:	d014      	beq.n	801fcca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801fca0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801fca4:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801fca8:	d112      	bne.n	801fcd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801fcaa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fcac:	2aff      	cmp	r2, #255	; 0xff
 801fcae:	d10f      	bne.n	801fcd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801fcb0:	0942      	lsrs	r2, r0, #5
 801fcb2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801fcb6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fcba:	f025 0507 	bic.w	r5, r5, #7
 801fcbe:	4315      	orrs	r5, r2
 801fcc0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801fcc4:	4305      	orrs	r5, r0
 801fcc6:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801fcca:	f109 0901 	add.w	r9, r9, #1
 801fcce:	e7d4      	b.n	801fc7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801fcd0:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801fcd4:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801fcd8:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801fcdc:	9215      	str	r2, [sp, #84]	; 0x54
 801fcde:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fce0:	fb02 fa0a 	mul.w	sl, r2, sl
 801fce4:	f10a 0201 	add.w	r2, sl, #1
 801fce8:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801fcec:	ea4f 272c 	mov.w	r7, ip, asr #8
 801fcf0:	1212      	asrs	r2, r2, #8
 801fcf2:	fa1f fa82 	uxth.w	sl, r2
 801fcf6:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801fcfa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801fcfe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fd02:	43d2      	mvns	r2, r2
 801fd04:	b2d2      	uxtb	r2, r2
 801fd06:	fb16 f60a 	smulbb	r6, r6, sl
 801fd0a:	fa5f fc8c 	uxtb.w	ip, ip
 801fd0e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801fd12:	b2c0      	uxtb	r0, r0
 801fd14:	fb07 6702 	mla	r7, r7, r2, r6
 801fd18:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801fd1c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801fd1e:	fb10 f00a 	smulbb	r0, r0, sl
 801fd22:	fb0c 0002 	mla	r0, ip, r2, r0
 801fd26:	b2ed      	uxtb	r5, r5
 801fd28:	b2bf      	uxth	r7, r7
 801fd2a:	fb15 f50a 	smulbb	r5, r5, sl
 801fd2e:	b280      	uxth	r0, r0
 801fd30:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801fd34:	fb06 5602 	mla	r6, r6, r2, r5
 801fd38:	1c7a      	adds	r2, r7, #1
 801fd3a:	1c45      	adds	r5, r0, #1
 801fd3c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801fd40:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801fd44:	b2b6      	uxth	r6, r6
 801fd46:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801fd4a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801fd4e:	432f      	orrs	r7, r5
 801fd50:	1c75      	adds	r5, r6, #1
 801fd52:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801fd56:	096d      	lsrs	r5, r5, #5
 801fd58:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fd5c:	432f      	orrs	r7, r5
 801fd5e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801fd62:	e7b2      	b.n	801fcca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801fd64:	20013854 	.word	0x20013854
 801fd68:	2001384e 	.word	0x2001384e
 801fd6c:	fffff7fb 	.word	0xfffff7fb
 801fd70:	9203      	str	r2, [sp, #12]
 801fd72:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fd74:	458e      	cmp	lr, r1
 801fd76:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801fd7a:	f4ff af68 	bcc.w	801fc4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801fd7e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801fd80:	9906      	ldr	r1, [sp, #24]
 801fd82:	8812      	ldrh	r2, [r2, #0]
 801fd84:	1a52      	subs	r2, r2, r1
 801fd86:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801fd8a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801fd8c:	9914      	ldr	r1, [sp, #80]	; 0x50
 801fd8e:	3201      	adds	r2, #1
 801fd90:	428a      	cmp	r2, r1
 801fd92:	9209      	str	r2, [sp, #36]	; 0x24
 801fd94:	d111      	bne.n	801fdba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801fd96:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801fd9a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801fd9e:	9b06      	ldr	r3, [sp, #24]
 801fda0:	eba5 0509 	sub.w	r5, r5, r9
 801fda4:	b2ad      	uxth	r5, r5
 801fda6:	2d00      	cmp	r5, #0
 801fda8:	bf08      	it	eq
 801fdaa:	4619      	moveq	r1, r3
 801fdac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fdae:	bf18      	it	ne
 801fdb0:	2100      	movne	r1, #0
 801fdb2:	3301      	adds	r3, #1
 801fdb4:	930d      	str	r3, [sp, #52]	; 0x34
 801fdb6:	b289      	uxth	r1, r1
 801fdb8:	e695      	b.n	801fae6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801fdba:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801fdbe:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801fdc2:	1b2d      	subs	r5, r5, r4
 801fdc4:	b2ad      	uxth	r5, r5
 801fdc6:	2d00      	cmp	r5, #0
 801fdc8:	bf18      	it	ne
 801fdca:	2400      	movne	r4, #0
 801fdcc:	e740      	b.n	801fc50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801fdce:	4b04      	ldr	r3, [pc, #16]	; (801fde0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801fdd0:	6818      	ldr	r0, [r3, #0]
 801fdd2:	6803      	ldr	r3, [r0, #0]
 801fdd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fdd6:	4798      	blx	r3
 801fdd8:	b01d      	add	sp, #116	; 0x74
 801fdda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fdde:	bf00      	nop
 801fde0:	20013854 	.word	0x20013854

0801fde4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801fde4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fde8:	b09f      	sub	sp, #124	; 0x7c
 801fdea:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801fdee:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801fdf2:	920a      	str	r2, [sp, #40]	; 0x28
 801fdf4:	461d      	mov	r5, r3
 801fdf6:	4604      	mov	r4, r0
 801fdf8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fdfa:	2a00      	cmp	r2, #0
 801fdfc:	f000 81fa 	beq.w	80201f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801fe00:	6828      	ldr	r0, [r5, #0]
 801fe02:	6869      	ldr	r1, [r5, #4]
 801fe04:	aa1a      	add	r2, sp, #104	; 0x68
 801fe06:	c203      	stmia	r2!, {r0, r1}
 801fe08:	6818      	ldr	r0, [r3, #0]
 801fe0a:	6859      	ldr	r1, [r3, #4]
 801fe0c:	aa1c      	add	r2, sp, #112	; 0x70
 801fe0e:	c203      	stmia	r2!, {r0, r1}
 801fe10:	a81a      	add	r0, sp, #104	; 0x68
 801fe12:	f7f8 fb51 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fe16:	4629      	mov	r1, r5
 801fe18:	a81c      	add	r0, sp, #112	; 0x70
 801fe1a:	f7f8 fb91 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fe1e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801fe22:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801fe26:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801fe2a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801fe2e:	bfd7      	itett	le
 801fe30:	b29a      	uxthle	r2, r3
 801fe32:	2201      	movgt	r2, #1
 801fe34:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801fe38:	fb91 f2f2 	sdivle	r2, r1, r2
 801fe3c:	9201      	str	r2, [sp, #4]
 801fe3e:	9801      	ldr	r0, [sp, #4]
 801fe40:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801fe44:	fb92 f0f0 	sdiv	r0, r2, r0
 801fe48:	b280      	uxth	r0, r0
 801fe4a:	9010      	str	r0, [sp, #64]	; 0x40
 801fe4c:	9901      	ldr	r1, [sp, #4]
 801fe4e:	9801      	ldr	r0, [sp, #4]
 801fe50:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801fe52:	440e      	add	r6, r1
 801fe54:	fb05 2510 	mls	r5, r5, r0, r2
 801fe58:	fb15 f503 	smulbb	r5, r5, r3
 801fe5c:	3e01      	subs	r6, #1
 801fe5e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801fe62:	fb96 f6f1 	sdiv	r6, r6, r1
 801fe66:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801fe6a:	440d      	add	r5, r1
 801fe6c:	4419      	add	r1, r3
 801fe6e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801fe72:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801fe76:	441a      	add	r2, r3
 801fe78:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801fe7c:	9304      	str	r3, [sp, #16]
 801fe7e:	4b96      	ldr	r3, [pc, #600]	; (80200d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801fe80:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801fe84:	6818      	ldr	r0, [r3, #0]
 801fe86:	6803      	ldr	r3, [r0, #0]
 801fe88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fe8a:	4798      	blx	r3
 801fe8c:	4b93      	ldr	r3, [pc, #588]	; (80200dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801fe8e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801fe92:	881a      	ldrh	r2, [r3, #0]
 801fe94:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801fe98:	9318      	str	r3, [sp, #96]	; 0x60
 801fe9a:	fb02 c101 	mla	r1, r2, r1, ip
 801fe9e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801fea2:	4357      	muls	r7, r2
 801fea4:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801fea8:	3601      	adds	r6, #1
 801feaa:	920b      	str	r2, [sp, #44]	; 0x2c
 801feac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801feae:	4b8c      	ldr	r3, [pc, #560]	; (80200e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801feb0:	b2b6      	uxth	r6, r6
 801feb2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801feb6:	1d32      	adds	r2, r6, #4
 801feb8:	9206      	str	r2, [sp, #24]
 801feba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801febc:	43d2      	mvns	r2, r2
 801febe:	b2d2      	uxtb	r2, r2
 801fec0:	b2ad      	uxth	r5, r5
 801fec2:	9215      	str	r2, [sp, #84]	; 0x54
 801fec4:	9a04      	ldr	r2, [sp, #16]
 801fec6:	2d00      	cmp	r5, #0
 801fec8:	bf0c      	ite	eq
 801feca:	4611      	moveq	r1, r2
 801fecc:	2100      	movne	r1, #0
 801fece:	2200      	movs	r2, #0
 801fed0:	1b1b      	subs	r3, r3, r4
 801fed2:	b289      	uxth	r1, r1
 801fed4:	920d      	str	r2, [sp, #52]	; 0x34
 801fed6:	9319      	str	r3, [sp, #100]	; 0x64
 801fed8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801feda:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fedc:	fa12 f383 	uxtah	r3, r2, r3
 801fee0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801fee2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801fee6:	3304      	adds	r3, #4
 801fee8:	9307      	str	r3, [sp, #28]
 801feea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801feec:	455b      	cmp	r3, fp
 801feee:	f240 817c 	bls.w	80201ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801fef2:	9a01      	ldr	r2, [sp, #4]
 801fef4:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801fef8:	fbb5 f3f3 	udiv	r3, r5, r3
 801fefc:	1ad3      	subs	r3, r2, r3
 801fefe:	b29b      	uxth	r3, r3
 801ff00:	9316      	str	r3, [sp, #88]	; 0x58
 801ff02:	9b07      	ldr	r3, [sp, #28]
 801ff04:	9807      	ldr	r0, [sp, #28]
 801ff06:	785a      	ldrb	r2, [r3, #1]
 801ff08:	789b      	ldrb	r3, [r3, #2]
 801ff0a:	7800      	ldrb	r0, [r0, #0]
 801ff0c:	9011      	str	r0, [sp, #68]	; 0x44
 801ff0e:	021b      	lsls	r3, r3, #8
 801ff10:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801ff14:	9a07      	ldr	r2, [sp, #28]
 801ff16:	78d2      	ldrb	r2, [r2, #3]
 801ff18:	4313      	orrs	r3, r2
 801ff1a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ff1c:	3001      	adds	r0, #1
 801ff1e:	441a      	add	r2, r3
 801ff20:	9005      	str	r0, [sp, #20]
 801ff22:	1c50      	adds	r0, r2, #1
 801ff24:	9003      	str	r0, [sp, #12]
 801ff26:	7852      	ldrb	r2, [r2, #1]
 801ff28:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ff2a:	0212      	lsls	r2, r2, #8
 801ff2c:	5cc3      	ldrb	r3, [r0, r3]
 801ff2e:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801ff32:	431a      	orrs	r2, r3
 801ff34:	b293      	uxth	r3, r2
 801ff36:	930c      	str	r3, [sp, #48]	; 0x30
 801ff38:	2300      	movs	r3, #0
 801ff3a:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801ff3e:	9308      	str	r3, [sp, #32]
 801ff40:	461a      	mov	r2, r3
 801ff42:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801ff46:	930e      	str	r3, [sp, #56]	; 0x38
 801ff48:	f04f 0801 	mov.w	r8, #1
 801ff4c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801ff50:	f8cd 8008 	str.w	r8, [sp, #8]
 801ff54:	46c4      	mov	ip, r8
 801ff56:	930f      	str	r3, [sp, #60]	; 0x3c
 801ff58:	2d00      	cmp	r5, #0
 801ff5a:	d07c      	beq.n	8020056 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801ff5c:	45ac      	cmp	ip, r5
 801ff5e:	d26c      	bcs.n	802003a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801ff60:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ff62:	eba5 050c 	sub.w	r5, r5, ip
 801ff66:	455b      	cmp	r3, fp
 801ff68:	b2ad      	uxth	r5, r5
 801ff6a:	4608      	mov	r0, r1
 801ff6c:	d802      	bhi.n	801ff74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801ff6e:	e070      	b.n	8020052 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801ff70:	2b00      	cmp	r3, #0
 801ff72:	d15c      	bne.n	802002e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801ff74:	9b03      	ldr	r3, [sp, #12]
 801ff76:	9a02      	ldr	r2, [sp, #8]
 801ff78:	785b      	ldrb	r3, [r3, #1]
 801ff7a:	9902      	ldr	r1, [sp, #8]
 801ff7c:	f1c2 0207 	rsb	r2, r2, #7
 801ff80:	4093      	lsls	r3, r2
 801ff82:	005b      	lsls	r3, r3, #1
 801ff84:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801ff88:	9b03      	ldr	r3, [sp, #12]
 801ff8a:	781b      	ldrb	r3, [r3, #0]
 801ff8c:	410b      	asrs	r3, r1
 801ff8e:	3101      	adds	r1, #1
 801ff90:	b2c9      	uxtb	r1, r1
 801ff92:	2908      	cmp	r1, #8
 801ff94:	9102      	str	r1, [sp, #8]
 801ff96:	9903      	ldr	r1, [sp, #12]
 801ff98:	bf0a      	itet	eq
 801ff9a:	3102      	addeq	r1, #2
 801ff9c:	3101      	addne	r1, #1
 801ff9e:	9103      	streq	r1, [sp, #12]
 801ffa0:	b2db      	uxtb	r3, r3
 801ffa2:	bf0a      	itet	eq
 801ffa4:	2100      	moveq	r1, #0
 801ffa6:	9103      	strne	r1, [sp, #12]
 801ffa8:	9102      	streq	r1, [sp, #8]
 801ffaa:	4313      	orrs	r3, r2
 801ffac:	9911      	ldr	r1, [sp, #68]	; 0x44
 801ffae:	b29a      	uxth	r2, r3
 801ffb0:	4291      	cmp	r1, r2
 801ffb2:	d30a      	bcc.n	801ffca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801ffb4:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801ffb8:	2301      	movs	r3, #1
 801ffba:	9905      	ldr	r1, [sp, #20]
 801ffbc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801ffc0:	d30f      	bcc.n	801ffe2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801ffc2:	2100      	movs	r1, #0
 801ffc4:	4698      	mov	r8, r3
 801ffc6:	9100      	str	r1, [sp, #0]
 801ffc8:	e032      	b.n	8020030 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801ffca:	9b05      	ldr	r3, [sp, #20]
 801ffcc:	429a      	cmp	r2, r3
 801ffce:	d318      	bcc.n	8020002 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801ffd0:	eb04 0308 	add.w	r3, r4, r8
 801ffd4:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801ffd8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801ffdc:	f108 0301 	add.w	r3, r8, #1
 801ffe0:	b29b      	uxth	r3, r3
 801ffe2:	9905      	ldr	r1, [sp, #20]
 801ffe4:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801ffe8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801ffec:	710e      	strb	r6, [r1, #4]
 801ffee:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801fff0:	80ce      	strh	r6, [r1, #6]
 801fff2:	f108 0601 	add.w	r6, r8, #1
 801fff6:	714e      	strb	r6, [r1, #5]
 801fff8:	9905      	ldr	r1, [sp, #20]
 801fffa:	3101      	adds	r1, #1
 801fffc:	b289      	uxth	r1, r1
 801fffe:	9105      	str	r1, [sp, #20]
 8020000:	e7df      	b.n	801ffc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8020002:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8020006:	4611      	mov	r1, r2
 8020008:	795b      	ldrb	r3, [r3, #5]
 802000a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 802000e:	4426      	add	r6, r4
 8020010:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8020012:	4437      	add	r7, r6
 8020014:	2f00      	cmp	r7, #0
 8020016:	dd06      	ble.n	8020026 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8020018:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 802001c:	790f      	ldrb	r7, [r1, #4]
 802001e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8020022:	88c9      	ldrh	r1, [r1, #6]
 8020024:	e7f4      	b.n	8020010 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 8020026:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 802002a:	b29b      	uxth	r3, r3
 802002c:	e7c5      	b.n	801ffba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 802002e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020030:	920c      	str	r2, [sp, #48]	; 0x30
 8020032:	4601      	mov	r1, r0
 8020034:	9a00      	ldr	r2, [sp, #0]
 8020036:	469c      	mov	ip, r3
 8020038:	e78e      	b.n	801ff58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 802003a:	1957      	adds	r7, r2, r5
 802003c:	ebac 0305 	sub.w	r3, ip, r5
 8020040:	b2ba      	uxth	r2, r7
 8020042:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8020046:	9200      	str	r2, [sp, #0]
 8020048:	b29b      	uxth	r3, r3
 802004a:	2500      	movs	r5, #0
 802004c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802004e:	455a      	cmp	r2, fp
 8020050:	d88e      	bhi.n	801ff70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 8020052:	4601      	mov	r1, r0
 8020054:	e749      	b.n	801feea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 8020056:	458c      	cmp	ip, r1
 8020058:	bf2c      	ite	cs
 802005a:	4628      	movcs	r0, r5
 802005c:	462b      	movcc	r3, r5
 802005e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8020060:	bf27      	ittee	cs
 8020062:	9109      	strcs	r1, [sp, #36]	; 0x24
 8020064:	ebac 0301 	subcs.w	r3, ip, r1
 8020068:	eba1 000c 	subcc.w	r0, r1, ip
 802006c:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 8020070:	bf2c      	ite	cs
 8020072:	b29b      	uxthcs	r3, r3
 8020074:	b280      	uxthcc	r0, r0
 8020076:	2dff      	cmp	r5, #255	; 0xff
 8020078:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802007a:	eb02 0705 	add.w	r7, r2, r5
 802007e:	b2bd      	uxth	r5, r7
 8020080:	9500      	str	r5, [sp, #0]
 8020082:	d12f      	bne.n	80200e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8020084:	465e      	mov	r6, fp
 8020086:	9d00      	ldr	r5, [sp, #0]
 8020088:	42aa      	cmp	r2, r5
 802008a:	f040 8084 	bne.w	8020196 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 802008e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020090:	458c      	cmp	ip, r1
 8020092:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8020096:	d3d8      	bcc.n	802004a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8020098:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802009a:	9904      	ldr	r1, [sp, #16]
 802009c:	8812      	ldrh	r2, [r2, #0]
 802009e:	1a52      	subs	r2, r2, r1
 80200a0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80200a4:	9a08      	ldr	r2, [sp, #32]
 80200a6:	9916      	ldr	r1, [sp, #88]	; 0x58
 80200a8:	3201      	adds	r2, #1
 80200aa:	428a      	cmp	r2, r1
 80200ac:	9208      	str	r2, [sp, #32]
 80200ae:	f040 8092 	bne.w	80201d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 80200b2:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 80200b6:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 80200ba:	9b04      	ldr	r3, [sp, #16]
 80200bc:	eba5 050c 	sub.w	r5, r5, ip
 80200c0:	b2ad      	uxth	r5, r5
 80200c2:	2d00      	cmp	r5, #0
 80200c4:	bf08      	it	eq
 80200c6:	4619      	moveq	r1, r3
 80200c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80200ca:	bf18      	it	ne
 80200cc:	2100      	movne	r1, #0
 80200ce:	3301      	adds	r3, #1
 80200d0:	930d      	str	r3, [sp, #52]	; 0x34
 80200d2:	b289      	uxth	r1, r1
 80200d4:	e700      	b.n	801fed8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80200d6:	bf00      	nop
 80200d8:	20013854 	.word	0x20013854
 80200dc:	2001384e 	.word	0x2001384e
 80200e0:	fffff7fb 	.word	0xfffff7fb
 80200e4:	46d9      	mov	r9, fp
 80200e6:	9d00      	ldr	r5, [sp, #0]
 80200e8:	42aa      	cmp	r2, r5
 80200ea:	d0d0      	beq.n	802008e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 80200ec:	1c55      	adds	r5, r2, #1
 80200ee:	4422      	add	r2, r4
 80200f0:	9517      	str	r5, [sp, #92]	; 0x5c
 80200f2:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 80200f6:	9a06      	ldr	r2, [sp, #24]
 80200f8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80200fc:	4472      	add	r2, lr
 80200fe:	9212      	str	r2, [sp, #72]	; 0x48
 8020100:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8020102:	f8b9 2000 	ldrh.w	r2, [r9]
 8020106:	f897 a002 	ldrb.w	sl, [r7, #2]
 802010a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 802010c:	1216      	asrs	r6, r2, #8
 802010e:	fb1a fa07 	smulbb	sl, sl, r7
 8020112:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020116:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020118:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 802011c:	fb06 a607 	mla	r6, r6, r7, sl
 8020120:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8020122:	f897 a001 	ldrb.w	sl, [r7, #1]
 8020126:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8020128:	10d5      	asrs	r5, r2, #3
 802012a:	fb1a fa07 	smulbb	sl, sl, r7
 802012e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020132:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020134:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020138:	fb05 a507 	mla	r5, r5, r7, sl
 802013c:	9f06      	ldr	r7, [sp, #24]
 802013e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020142:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8020144:	00d2      	lsls	r2, r2, #3
 8020146:	fb1e fe07 	smulbb	lr, lr, r7
 802014a:	b2d2      	uxtb	r2, r2
 802014c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 802014e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020152:	b2b6      	uxth	r6, r6
 8020154:	fb02 e207 	mla	r2, r2, r7, lr
 8020158:	b292      	uxth	r2, r2
 802015a:	b2ad      	uxth	r5, r5
 802015c:	f106 0a01 	add.w	sl, r6, #1
 8020160:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8020164:	f102 0e01 	add.w	lr, r2, #1
 8020168:	f105 0a01 	add.w	sl, r5, #1
 802016c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8020170:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8020174:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8020178:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 802017c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020180:	ea4e 0606 	orr.w	r6, lr, r6
 8020184:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020188:	ea46 060a 	orr.w	r6, r6, sl
 802018c:	f829 6b02 	strh.w	r6, [r9], #2
 8020190:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8020194:	e7a7      	b.n	80200e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8020196:	f102 0e01 	add.w	lr, r2, #1
 802019a:	4422      	add	r2, r4
 802019c:	9f06      	ldr	r7, [sp, #24]
 802019e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 80201a2:	9a06      	ldr	r2, [sp, #24]
 80201a4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80201a8:	eb02 0a05 	add.w	sl, r2, r5
 80201ac:	4a13      	ldr	r2, [pc, #76]	; (80201fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 80201ae:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80201b2:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 80201b6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80201ba:	00d2      	lsls	r2, r2, #3
 80201bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80201c0:	ea49 0202 	orr.w	r2, r9, r2
 80201c4:	f817 9005 	ldrb.w	r9, [r7, r5]
 80201c8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80201cc:	f826 2b02 	strh.w	r2, [r6], #2
 80201d0:	fa1f f28e 	uxth.w	r2, lr
 80201d4:	e757      	b.n	8020086 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 80201d6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80201da:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 80201de:	1a2d      	subs	r5, r5, r0
 80201e0:	b2ad      	uxth	r5, r5
 80201e2:	2d00      	cmp	r5, #0
 80201e4:	bf18      	it	ne
 80201e6:	2000      	movne	r0, #0
 80201e8:	e730      	b.n	802004c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 80201ea:	4b05      	ldr	r3, [pc, #20]	; (8020200 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 80201ec:	6818      	ldr	r0, [r3, #0]
 80201ee:	6803      	ldr	r3, [r0, #0]
 80201f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80201f2:	4798      	blx	r3
 80201f4:	b01f      	add	sp, #124	; 0x7c
 80201f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80201fa:	bf00      	nop
 80201fc:	fffff800 	.word	0xfffff800
 8020200:	20013854 	.word	0x20013854

08020204 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8020204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020208:	b091      	sub	sp, #68	; 0x44
 802020a:	469b      	mov	fp, r3
 802020c:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8020210:	4616      	mov	r6, r2
 8020212:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8020216:	f9b3 2000 	ldrsh.w	r2, [r3]
 802021a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 802021e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8020222:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8020226:	4604      	mov	r4, r0
 8020228:	460d      	mov	r5, r1
 802022a:	4640      	mov	r0, r8
 802022c:	4659      	mov	r1, fp
 802022e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8020232:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8020236:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 802023a:	f7f2 fb9f 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 802023e:	4631      	mov	r1, r6
 8020240:	4640      	mov	r0, r8
 8020242:	f7f2 fb9b 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 8020246:	4b74      	ldr	r3, [pc, #464]	; (8020418 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8020248:	8818      	ldrh	r0, [r3, #0]
 802024a:	4b74      	ldr	r3, [pc, #464]	; (802041c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 802024c:	8819      	ldrh	r1, [r3, #0]
 802024e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8020252:	2b00      	cmp	r3, #0
 8020254:	b202      	sxth	r2, r0
 8020256:	b20e      	sxth	r6, r1
 8020258:	da07      	bge.n	802026a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 802025a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 802025e:	4463      	add	r3, ip
 8020260:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8020264:	2300      	movs	r3, #0
 8020266:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 802026a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802026e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8020272:	1ad2      	subs	r2, r2, r3
 8020274:	4594      	cmp	ip, r2
 8020276:	bfc4      	itt	gt
 8020278:	1ac2      	subgt	r2, r0, r3
 802027a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 802027e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020282:	2a00      	cmp	r2, #0
 8020284:	da07      	bge.n	8020296 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8020286:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 802028a:	4462      	add	r2, ip
 802028c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8020290:	2200      	movs	r2, #0
 8020292:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8020296:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 802029a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 802029e:	eba6 060a 	sub.w	r6, r6, sl
 80202a2:	42b2      	cmp	r2, r6
 80202a4:	bfc4      	itt	gt
 80202a6:	eba1 020a 	subgt.w	r2, r1, sl
 80202aa:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 80202ae:	4a5c      	ldr	r2, [pc, #368]	; (8020420 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80202b0:	7812      	ldrb	r2, [r2, #0]
 80202b2:	b9a2      	cbnz	r2, 80202de <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80202b4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 80202b8:	4286      	cmp	r6, r0
 80202ba:	4640      	mov	r0, r8
 80202bc:	9303      	str	r3, [sp, #12]
 80202be:	bf14      	ite	ne
 80202c0:	2600      	movne	r6, #0
 80202c2:	2601      	moveq	r6, #1
 80202c4:	f7f2 fb9d 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80202c8:	9b03      	ldr	r3, [sp, #12]
 80202ca:	b160      	cbz	r0, 80202e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80202cc:	2300      	movs	r3, #0
 80202ce:	8023      	strh	r3, [r4, #0]
 80202d0:	8063      	strh	r3, [r4, #2]
 80202d2:	80a3      	strh	r3, [r4, #4]
 80202d4:	4620      	mov	r0, r4
 80202d6:	80e3      	strh	r3, [r4, #6]
 80202d8:	b011      	add	sp, #68	; 0x44
 80202da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80202de:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80202e2:	428e      	cmp	r6, r1
 80202e4:	e7e9      	b.n	80202ba <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80202e6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80202ea:	9205      	str	r2, [sp, #20]
 80202ec:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80202f0:	9206      	str	r2, [sp, #24]
 80202f2:	f8bb 2000 	ldrh.w	r2, [fp]
 80202f6:	900e      	str	r0, [sp, #56]	; 0x38
 80202f8:	1a9b      	subs	r3, r3, r2
 80202fa:	b21b      	sxth	r3, r3
 80202fc:	9303      	str	r3, [sp, #12]
 80202fe:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8020302:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8020306:	ebaa 0a03 	sub.w	sl, sl, r3
 802030a:	fa0f f38a 	sxth.w	r3, sl
 802030e:	9304      	str	r3, [sp, #16]
 8020310:	9b03      	ldr	r3, [sp, #12]
 8020312:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8020316:	9b04      	ldr	r3, [sp, #16]
 8020318:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 802031c:	9b05      	ldr	r3, [sp, #20]
 802031e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8020322:	a90e      	add	r1, sp, #56	; 0x38
 8020324:	9b06      	ldr	r3, [sp, #24]
 8020326:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 802032a:	a80c      	add	r0, sp, #48	; 0x30
 802032c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8020330:	f7f8 f906 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020334:	4640      	mov	r0, r8
 8020336:	f7f8 f8bf 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802033a:	a80e      	add	r0, sp, #56	; 0x38
 802033c:	f7f8 f8bc 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020340:	4b38      	ldr	r3, [pc, #224]	; (8020424 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8020342:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8020346:	881b      	ldrh	r3, [r3, #0]
 8020348:	9307      	str	r3, [sp, #28]
 802034a:	682b      	ldr	r3, [r5, #0]
 802034c:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8020428 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8020350:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020352:	4628      	mov	r0, r5
 8020354:	4798      	blx	r3
 8020356:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 802035a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 802035e:	4681      	mov	r9, r0
 8020360:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8020364:	f8db 0000 	ldr.w	r0, [fp]
 8020368:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802036a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 802036e:	6803      	ldr	r3, [r0, #0]
 8020370:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020372:	4798      	blx	r3
 8020374:	4607      	mov	r7, r0
 8020376:	f8db 0000 	ldr.w	r0, [fp]
 802037a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 802037e:	6803      	ldr	r3, [r0, #0]
 8020380:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020384:	9109      	str	r1, [sp, #36]	; 0x24
 8020386:	9208      	str	r2, [sp, #32]
 8020388:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802038a:	4798      	blx	r3
 802038c:	f010 0f01 	tst.w	r0, #1
 8020390:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020394:	d012      	beq.n	80203bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8020396:	f8db 0000 	ldr.w	r0, [fp]
 802039a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 802039e:	6803      	ldr	r3, [r0, #0]
 80203a0:	9200      	str	r2, [sp, #0]
 80203a2:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80203a4:	e898 0006 	ldmia.w	r8, {r1, r2}
 80203a8:	462b      	mov	r3, r5
 80203aa:	47b0      	blx	r6
 80203ac:	9b03      	ldr	r3, [sp, #12]
 80203ae:	8023      	strh	r3, [r4, #0]
 80203b0:	9b04      	ldr	r3, [sp, #16]
 80203b2:	8063      	strh	r3, [r4, #2]
 80203b4:	9b05      	ldr	r3, [sp, #20]
 80203b6:	80a3      	strh	r3, [r4, #4]
 80203b8:	9b06      	ldr	r3, [sp, #24]
 80203ba:	e78b      	b.n	80202d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80203bc:	fb09 f202 	mul.w	r2, r9, r2
 80203c0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80203c4:	440f      	add	r7, r1
 80203c6:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 80203ca:	b166      	cbz	r6, 80203e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80203cc:	9a07      	ldr	r2, [sp, #28]
 80203ce:	4592      	cmp	sl, r2
 80203d0:	d109      	bne.n	80203e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80203d2:	f8db 0000 	ldr.w	r0, [fp]
 80203d6:	6802      	ldr	r2, [r0, #0]
 80203d8:	fb09 f303 	mul.w	r3, r9, r3
 80203dc:	6b56      	ldr	r6, [r2, #52]	; 0x34
 80203de:	4629      	mov	r1, r5
 80203e0:	463a      	mov	r2, r7
 80203e2:	47b0      	blx	r6
 80203e4:	e7e2      	b.n	80203ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80203e6:	fb0a f303 	mul.w	r3, sl, r3
 80203ea:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8020428 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80203ee:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 80203f2:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80203f6:	4545      	cmp	r5, r8
 80203f8:	d2d8      	bcs.n	80203ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80203fa:	f8db 0000 	ldr.w	r0, [fp]
 80203fe:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8020402:	6802      	ldr	r2, [r0, #0]
 8020404:	4629      	mov	r1, r5
 8020406:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 802040a:	005b      	lsls	r3, r3, #1
 802040c:	463a      	mov	r2, r7
 802040e:	47d0      	blx	sl
 8020410:	444f      	add	r7, r9
 8020412:	4435      	add	r5, r6
 8020414:	e7ef      	b.n	80203f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8020416:	bf00      	nop
 8020418:	20013848 	.word	0x20013848
 802041c:	2001384a 	.word	0x2001384a
 8020420:	2001384c 	.word	0x2001384c
 8020424:	2001384e 	.word	0x2001384e
 8020428:	20013854 	.word	0x20013854

0802042c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 802042c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802042e:	4606      	mov	r6, r0
 8020430:	b087      	sub	sp, #28
 8020432:	460c      	mov	r4, r1
 8020434:	4617      	mov	r7, r2
 8020436:	461d      	mov	r5, r3
 8020438:	b333      	cbz	r3, 8020488 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 802043a:	4608      	mov	r0, r1
 802043c:	f7f2 fae1 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8020440:	bb10      	cbnz	r0, 8020488 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8020442:	6820      	ldr	r0, [r4, #0]
 8020444:	6861      	ldr	r1, [r4, #4]
 8020446:	4c1c      	ldr	r4, [pc, #112]	; (80204b8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8020448:	ab04      	add	r3, sp, #16
 802044a:	c303      	stmia	r3!, {r0, r1}
 802044c:	a804      	add	r0, sp, #16
 802044e:	f7f8 f833 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020452:	6820      	ldr	r0, [r4, #0]
 8020454:	6803      	ldr	r3, [r0, #0]
 8020456:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020458:	4798      	blx	r3
 802045a:	2dff      	cmp	r5, #255	; 0xff
 802045c:	d016      	beq.n	802048c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 802045e:	f010 0f08 	tst.w	r0, #8
 8020462:	6820      	ldr	r0, [r4, #0]
 8020464:	d015      	beq.n	8020492 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8020466:	2400      	movs	r4, #0
 8020468:	6801      	ldr	r1, [r0, #0]
 802046a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 802046e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8020472:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8020476:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 802047a:	9401      	str	r4, [sp, #4]
 802047c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8020480:	9400      	str	r4, [sp, #0]
 8020482:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8020484:	4639      	mov	r1, r7
 8020486:	47a0      	blx	r4
 8020488:	b007      	add	sp, #28
 802048a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802048c:	f010 0f02 	tst.w	r0, #2
 8020490:	e7e7      	b.n	8020462 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8020492:	6803      	ldr	r3, [r0, #0]
 8020494:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020496:	4798      	blx	r3
 8020498:	4b08      	ldr	r3, [pc, #32]	; (80204bc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 802049a:	881a      	ldrh	r2, [r3, #0]
 802049c:	6833      	ldr	r3, [r6, #0]
 802049e:	e9cd 7500 	strd	r7, r5, [sp]
 80204a2:	4601      	mov	r1, r0
 80204a4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80204a6:	4630      	mov	r0, r6
 80204a8:	ab04      	add	r3, sp, #16
 80204aa:	47a8      	blx	r5
 80204ac:	6820      	ldr	r0, [r4, #0]
 80204ae:	6803      	ldr	r3, [r0, #0]
 80204b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80204b2:	4798      	blx	r3
 80204b4:	e7e8      	b.n	8020488 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80204b6:	bf00      	nop
 80204b8:	20013854 	.word	0x20013854
 80204bc:	2001384e 	.word	0x2001384e

080204c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80204c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80204c4:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 80204c8:	9e08      	ldr	r6, [sp, #32]
 80204ca:	4688      	mov	r8, r1
 80204cc:	4614      	mov	r4, r2
 80204ce:	461d      	mov	r5, r3
 80204d0:	2f00      	cmp	r7, #0
 80204d2:	f000 80a9 	beq.w	8020628 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80204d6:	4618      	mov	r0, r3
 80204d8:	f7f2 fa93 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80204dc:	2800      	cmp	r0, #0
 80204de:	f040 80a3 	bne.w	8020628 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80204e2:	f9b5 1000 	ldrsh.w	r1, [r5]
 80204e6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80204ea:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 80204ee:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 80204f2:	fb04 1303 	mla	r3, r4, r3, r1
 80204f6:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80204fa:	4365      	muls	r5, r4
 80204fc:	2fff      	cmp	r7, #255	; 0xff
 80204fe:	eba4 0200 	sub.w	r2, r4, r0
 8020502:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8020506:	ea4f 2816 	mov.w	r8, r6, lsr #8
 802050a:	d04a      	beq.n	80205a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 802050c:	b2bc      	uxth	r4, r7
 802050e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8020512:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8020516:	fa5f f788 	uxtb.w	r7, r8
 802051a:	b2f3      	uxtb	r3, r6
 802051c:	0040      	lsls	r0, r0, #1
 802051e:	fb0e fe04 	mul.w	lr, lr, r4
 8020522:	4367      	muls	r7, r4
 8020524:	4363      	muls	r3, r4
 8020526:	ea4f 0842 	mov.w	r8, r2, lsl #1
 802052a:	fa1f fc8c 	uxth.w	ip, ip
 802052e:	42a9      	cmp	r1, r5
 8020530:	d27a      	bcs.n	8020628 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020532:	eb01 0900 	add.w	r9, r1, r0
 8020536:	4549      	cmp	r1, r9
 8020538:	d231      	bcs.n	802059e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 802053a:	880a      	ldrh	r2, [r1, #0]
 802053c:	1214      	asrs	r4, r2, #8
 802053e:	10d6      	asrs	r6, r2, #3
 8020540:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8020544:	00d2      	lsls	r2, r2, #3
 8020546:	b2d2      	uxtb	r2, r2
 8020548:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802054c:	fb14 f40c 	smulbb	r4, r4, ip
 8020550:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020554:	4474      	add	r4, lr
 8020556:	fb12 f20c 	smulbb	r2, r2, ip
 802055a:	b2a4      	uxth	r4, r4
 802055c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020560:	441a      	add	r2, r3
 8020562:	b292      	uxth	r2, r2
 8020564:	f104 0a01 	add.w	sl, r4, #1
 8020568:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802056c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020570:	fb16 f60c 	smulbb	r6, r6, ip
 8020574:	f102 0a01 	add.w	sl, r2, #1
 8020578:	443e      	add	r6, r7
 802057a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 802057e:	b2b6      	uxth	r6, r6
 8020580:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8020584:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020588:	4322      	orrs	r2, r4
 802058a:	1c74      	adds	r4, r6, #1
 802058c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8020590:	0976      	lsrs	r6, r6, #5
 8020592:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8020596:	4332      	orrs	r2, r6
 8020598:	f821 2b02 	strh.w	r2, [r1], #2
 802059c:	e7cb      	b.n	8020536 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 802059e:	4441      	add	r1, r8
 80205a0:	e7c5      	b.n	802052e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 80205a2:	4f22      	ldr	r7, [pc, #136]	; (802062c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 80205a4:	0973      	lsrs	r3, r6, #5
 80205a6:	ea08 0707 	and.w	r7, r8, r7
 80205aa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80205ae:	433b      	orrs	r3, r7
 80205b0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80205b4:	4333      	orrs	r3, r6
 80205b6:	07e7      	lsls	r7, r4, #31
 80205b8:	b29b      	uxth	r3, r3
 80205ba:	d50b      	bpl.n	80205d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 80205bc:	0040      	lsls	r0, r0, #1
 80205be:	0052      	lsls	r2, r2, #1
 80205c0:	42a9      	cmp	r1, r5
 80205c2:	d231      	bcs.n	8020628 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80205c4:	180c      	adds	r4, r1, r0
 80205c6:	42a1      	cmp	r1, r4
 80205c8:	d202      	bcs.n	80205d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 80205ca:	f821 3b02 	strh.w	r3, [r1], #2
 80205ce:	e7fa      	b.n	80205c6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 80205d0:	4411      	add	r1, r2
 80205d2:	e7f5      	b.n	80205c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 80205d4:	078e      	lsls	r6, r1, #30
 80205d6:	d008      	beq.n	80205ea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 80205d8:	0066      	lsls	r6, r4, #1
 80205da:	460a      	mov	r2, r1
 80205dc:	42aa      	cmp	r2, r5
 80205de:	d202      	bcs.n	80205e6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 80205e0:	8013      	strh	r3, [r2, #0]
 80205e2:	4432      	add	r2, r6
 80205e4:	e7fa      	b.n	80205dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 80205e6:	3102      	adds	r1, #2
 80205e8:	3801      	subs	r0, #1
 80205ea:	07c2      	lsls	r2, r0, #31
 80205ec:	d50b      	bpl.n	8020606 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 80205ee:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 80205f2:	3a01      	subs	r2, #1
 80205f4:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80205f8:	0066      	lsls	r6, r4, #1
 80205fa:	42aa      	cmp	r2, r5
 80205fc:	d202      	bcs.n	8020604 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 80205fe:	8013      	strh	r3, [r2, #0]
 8020600:	4432      	add	r2, r6
 8020602:	e7fa      	b.n	80205fa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8020604:	3801      	subs	r0, #1
 8020606:	b178      	cbz	r0, 8020628 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020608:	1040      	asrs	r0, r0, #1
 802060a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 802060e:	0080      	lsls	r0, r0, #2
 8020610:	0064      	lsls	r4, r4, #1
 8020612:	42a9      	cmp	r1, r5
 8020614:	d208      	bcs.n	8020628 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020616:	180e      	adds	r6, r1, r0
 8020618:	460a      	mov	r2, r1
 802061a:	42b2      	cmp	r2, r6
 802061c:	d202      	bcs.n	8020624 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 802061e:	f842 3b04 	str.w	r3, [r2], #4
 8020622:	e7fa      	b.n	802061a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8020624:	4421      	add	r1, r4
 8020626:	e7f4      	b.n	8020612 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8020628:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802062c:	00fff800 	.word	0x00fff800

08020630 <_ZN8touchgfx8LCD16bppC1Ev>:
 8020630:	2200      	movs	r2, #0
 8020632:	4912      	ldr	r1, [pc, #72]	; (802067c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8020634:	6042      	str	r2, [r0, #4]
 8020636:	6001      	str	r1, [r0, #0]
 8020638:	e9c0 2202 	strd	r2, r2, [r0, #8]
 802063c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8020640:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8020644:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8020648:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 802064c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8020650:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8020654:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8020658:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 802065c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8020660:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8020664:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8020668:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 802066c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8020670:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 8020674:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8020678:	4770      	bx	lr
 802067a:	bf00      	nop
 802067c:	0803201c 	.word	0x0803201c

08020680 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8020680:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020684:	460d      	mov	r5, r1
 8020686:	b08d      	sub	sp, #52	; 0x34
 8020688:	4604      	mov	r4, r0
 802068a:	6808      	ldr	r0, [r1, #0]
 802068c:	6849      	ldr	r1, [r1, #4]
 802068e:	4699      	mov	r9, r3
 8020690:	ab08      	add	r3, sp, #32
 8020692:	c303      	stmia	r3!, {r0, r1}
 8020694:	6810      	ldr	r0, [r2, #0]
 8020696:	6851      	ldr	r1, [r2, #4]
 8020698:	ab0a      	add	r3, sp, #40	; 0x28
 802069a:	c303      	stmia	r3!, {r0, r1}
 802069c:	a808      	add	r0, sp, #32
 802069e:	f7f7 ff0b 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80206a2:	4629      	mov	r1, r5
 80206a4:	a80a      	add	r0, sp, #40	; 0x28
 80206a6:	f7f7 ff4b 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80206aa:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80206ae:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80206b2:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80206b6:	4d63      	ldr	r5, [pc, #396]	; (8020844 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80206b8:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 80206bc:	6828      	ldr	r0, [r5, #0]
 80206be:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80206c2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80206c6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80206ca:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80206ce:	440a      	add	r2, r1
 80206d0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80206d4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80206d8:	4413      	add	r3, r2
 80206da:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80206de:	6803      	ldr	r3, [r0, #0]
 80206e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80206e2:	4798      	blx	r3
 80206e4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80206e8:	d119      	bne.n	802071e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 80206ea:	f010 0f20 	tst.w	r0, #32
 80206ee:	6828      	ldr	r0, [r5, #0]
 80206f0:	d018      	beq.n	8020724 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 80206f2:	2500      	movs	r5, #0
 80206f4:	6801      	ldr	r1, [r0, #0]
 80206f6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80206fa:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80206fe:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8020702:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8020706:	9502      	str	r5, [sp, #8]
 8020708:	b2b6      	uxth	r6, r6
 802070a:	fa1f f588 	uxth.w	r5, r8
 802070e:	9601      	str	r6, [sp, #4]
 8020710:	9500      	str	r5, [sp, #0]
 8020712:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8020714:	4621      	mov	r1, r4
 8020716:	47a8      	blx	r5
 8020718:	b00d      	add	sp, #52	; 0x34
 802071a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802071e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8020722:	e7e4      	b.n	80206ee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8020724:	6803      	ldr	r3, [r0, #0]
 8020726:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020728:	4798      	blx	r3
 802072a:	4947      	ldr	r1, [pc, #284]	; (8020848 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 802072c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020730:	880b      	ldrh	r3, [r1, #0]
 8020732:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8020736:	fb03 5202 	mla	r2, r3, r2, r5
 802073a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 802073e:	4373      	muls	r3, r6
 8020740:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020744:	9307      	str	r3, [sp, #28]
 8020746:	ea4f 0348 	mov.w	r3, r8, lsl #1
 802074a:	9306      	str	r3, [sp, #24]
 802074c:	468a      	mov	sl, r1
 802074e:	9b07      	ldr	r3, [sp, #28]
 8020750:	4298      	cmp	r0, r3
 8020752:	d270      	bcs.n	8020836 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8020754:	9b06      	ldr	r3, [sp, #24]
 8020756:	4621      	mov	r1, r4
 8020758:	eb00 0b03 	add.w	fp, r0, r3
 802075c:	4558      	cmp	r0, fp
 802075e:	d25d      	bcs.n	802081c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8020760:	f851 4b04 	ldr.w	r4, [r1], #4
 8020764:	0e23      	lsrs	r3, r4, #24
 8020766:	d014      	beq.n	8020792 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8020768:	2bff      	cmp	r3, #255	; 0xff
 802076a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 802076e:	d112      	bne.n	8020796 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8020770:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020774:	d10f      	bne.n	8020796 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8020776:	0963      	lsrs	r3, r4, #5
 8020778:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802077c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020780:	f02c 0c07 	bic.w	ip, ip, #7
 8020784:	ea43 0c0c 	orr.w	ip, r3, ip
 8020788:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 802078c:	ea4c 0404 	orr.w	r4, ip, r4
 8020790:	8004      	strh	r4, [r0, #0]
 8020792:	3002      	adds	r0, #2
 8020794:	e7e2      	b.n	802075c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8020796:	fb09 f303 	mul.w	r3, r9, r3
 802079a:	8807      	ldrh	r7, [r0, #0]
 802079c:	1c5a      	adds	r2, r3, #1
 802079e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80207a2:	1212      	asrs	r2, r2, #8
 80207a4:	123e      	asrs	r6, r7, #8
 80207a6:	b293      	uxth	r3, r2
 80207a8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80207ac:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80207b0:	43d2      	mvns	r2, r2
 80207b2:	b2d2      	uxtb	r2, r2
 80207b4:	10fd      	asrs	r5, r7, #3
 80207b6:	fb1e fe03 	smulbb	lr, lr, r3
 80207ba:	00ff      	lsls	r7, r7, #3
 80207bc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80207c0:	fb06 e602 	mla	r6, r6, r2, lr
 80207c4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80207c8:	b2ff      	uxtb	r7, r7
 80207ca:	fa5f fc8c 	uxtb.w	ip, ip
 80207ce:	b2e4      	uxtb	r4, r4
 80207d0:	b2b6      	uxth	r6, r6
 80207d2:	fb1c fc03 	smulbb	ip, ip, r3
 80207d6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80207da:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80207de:	fb14 f403 	smulbb	r4, r4, r3
 80207e2:	fb05 c502 	mla	r5, r5, r2, ip
 80207e6:	f106 0e01 	add.w	lr, r6, #1
 80207ea:	fb07 4702 	mla	r7, r7, r2, r4
 80207ee:	b2ad      	uxth	r5, r5
 80207f0:	b2bf      	uxth	r7, r7
 80207f2:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 80207f6:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 80207fa:	f105 0c01 	add.w	ip, r5, #1
 80207fe:	1c7e      	adds	r6, r7, #1
 8020800:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8020804:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020808:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 802080c:	096d      	lsrs	r5, r5, #5
 802080e:	ea46 060e 	orr.w	r6, r6, lr
 8020812:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020816:	432e      	orrs	r6, r5
 8020818:	8006      	strh	r6, [r0, #0]
 802081a:	e7ba      	b.n	8020792 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 802081c:	f8ba 3000 	ldrh.w	r3, [sl]
 8020820:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8020824:	eba3 0308 	sub.w	r3, r3, r8
 8020828:	eba4 0408 	sub.w	r4, r4, r8
 802082c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020830:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8020834:	e78b      	b.n	802074e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8020836:	4b03      	ldr	r3, [pc, #12]	; (8020844 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020838:	6818      	ldr	r0, [r3, #0]
 802083a:	6803      	ldr	r3, [r0, #0]
 802083c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802083e:	4798      	blx	r3
 8020840:	e76a      	b.n	8020718 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8020842:	bf00      	nop
 8020844:	20013854 	.word	0x20013854
 8020848:	2001384e 	.word	0x2001384e

0802084c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 802084c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8020850:	460c      	mov	r4, r1
 8020852:	b085      	sub	sp, #20
 8020854:	6810      	ldr	r0, [r2, #0]
 8020856:	6851      	ldr	r1, [r2, #4]
 8020858:	466d      	mov	r5, sp
 802085a:	c503      	stmia	r5!, {r0, r1}
 802085c:	6818      	ldr	r0, [r3, #0]
 802085e:	6859      	ldr	r1, [r3, #4]
 8020860:	4616      	mov	r6, r2
 8020862:	c503      	stmia	r5!, {r0, r1}
 8020864:	4668      	mov	r0, sp
 8020866:	f7f7 fe27 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802086a:	4631      	mov	r1, r6
 802086c:	a802      	add	r0, sp, #8
 802086e:	f7f7 fe67 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020872:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8020876:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 802087a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 802087e:	4d28      	ldr	r5, [pc, #160]	; (8020920 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8020880:	4e28      	ldr	r6, [pc, #160]	; (8020924 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8020882:	6828      	ldr	r0, [r5, #0]
 8020884:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8020888:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 802088c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020890:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8020894:	f8bd 1000 	ldrh.w	r1, [sp]
 8020898:	440a      	add	r2, r1
 802089a:	f8ad 2008 	strh.w	r2, [sp, #8]
 802089e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80208a2:	4413      	add	r3, r2
 80208a4:	f8ad 300a 	strh.w	r3, [sp, #10]
 80208a8:	6803      	ldr	r3, [r0, #0]
 80208aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80208ac:	4798      	blx	r3
 80208ae:	8833      	ldrh	r3, [r6, #0]
 80208b0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80208b4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80208b8:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8020928 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 80208bc:	fb03 1202 	mla	r2, r3, r2, r1
 80208c0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80208c4:	fb08 f303 	mul.w	r3, r8, r3
 80208c8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80208cc:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 80208d0:	4298      	cmp	r0, r3
 80208d2:	d21d      	bcs.n	8020910 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 80208d4:	eb00 080c 	add.w	r8, r0, ip
 80208d8:	4540      	cmp	r0, r8
 80208da:	d20f      	bcs.n	80208fc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 80208dc:	f854 1b04 	ldr.w	r1, [r4], #4
 80208e0:	ea4f 1951 	mov.w	r9, r1, lsr #5
 80208e4:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 80208e8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80208ec:	ea42 0209 	orr.w	r2, r2, r9
 80208f0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80208f4:	430a      	orrs	r2, r1
 80208f6:	f820 2b02 	strh.w	r2, [r0], #2
 80208fa:	e7ed      	b.n	80208d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 80208fc:	8832      	ldrh	r2, [r6, #0]
 80208fe:	1bd2      	subs	r2, r2, r7
 8020900:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020904:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8020908:	1bd2      	subs	r2, r2, r7
 802090a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 802090e:	e7df      	b.n	80208d0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8020910:	6828      	ldr	r0, [r5, #0]
 8020912:	6803      	ldr	r3, [r0, #0]
 8020914:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020916:	4798      	blx	r3
 8020918:	b005      	add	sp, #20
 802091a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802091e:	bf00      	nop
 8020920:	20013854 	.word	0x20013854
 8020924:	2001384e 	.word	0x2001384e
 8020928:	fffff800 	.word	0xfffff800

0802092c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 802092c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020930:	460e      	mov	r6, r1
 8020932:	b08e      	sub	sp, #56	; 0x38
 8020934:	4604      	mov	r4, r0
 8020936:	6808      	ldr	r0, [r1, #0]
 8020938:	6849      	ldr	r1, [r1, #4]
 802093a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8020b14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 802093e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8020b18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8020942:	461d      	mov	r5, r3
 8020944:	ab0a      	add	r3, sp, #40	; 0x28
 8020946:	c303      	stmia	r3!, {r0, r1}
 8020948:	6810      	ldr	r0, [r2, #0]
 802094a:	6851      	ldr	r1, [r2, #4]
 802094c:	ab0c      	add	r3, sp, #48	; 0x30
 802094e:	c303      	stmia	r3!, {r0, r1}
 8020950:	a80a      	add	r0, sp, #40	; 0x28
 8020952:	f7f7 fdb1 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020956:	4631      	mov	r1, r6
 8020958:	a80c      	add	r0, sp, #48	; 0x30
 802095a:	f7f7 fdf1 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802095e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8020962:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8020966:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 802096a:	f8d8 0000 	ldr.w	r0, [r8]
 802096e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8020972:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8020976:	fb11 2103 	smlabb	r1, r1, r3, r2
 802097a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802097e:	440c      	add	r4, r1
 8020980:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8020984:	440a      	add	r2, r1
 8020986:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 802098a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 802098e:	4413      	add	r3, r2
 8020990:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8020994:	6803      	ldr	r3, [r0, #0]
 8020996:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020998:	4798      	blx	r3
 802099a:	2dff      	cmp	r5, #255	; 0xff
 802099c:	d124      	bne.n	80209e8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 802099e:	f010 0f01 	tst.w	r0, #1
 80209a2:	f8d8 0000 	ldr.w	r0, [r8]
 80209a6:	d022      	beq.n	80209ee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80209a8:	2100      	movs	r1, #0
 80209aa:	f8d0 c000 	ldr.w	ip, [r0]
 80209ae:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80209b2:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80209b6:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80209ba:	f04f 0e01 	mov.w	lr, #1
 80209be:	f8cd e018 	str.w	lr, [sp, #24]
 80209c2:	f8b9 e000 	ldrh.w	lr, [r9]
 80209c6:	9503      	str	r5, [sp, #12]
 80209c8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80209cc:	b2b6      	uxth	r6, r6
 80209ce:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80209d2:	9102      	str	r1, [sp, #8]
 80209d4:	b2bf      	uxth	r7, r7
 80209d6:	9601      	str	r6, [sp, #4]
 80209d8:	9700      	str	r7, [sp, #0]
 80209da:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 80209de:	4621      	mov	r1, r4
 80209e0:	47a8      	blx	r5
 80209e2:	b00e      	add	sp, #56	; 0x38
 80209e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80209e8:	f010 0f04 	tst.w	r0, #4
 80209ec:	e7d9      	b.n	80209a2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 80209ee:	6803      	ldr	r3, [r0, #0]
 80209f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80209f2:	4798      	blx	r3
 80209f4:	f8b9 3000 	ldrh.w	r3, [r9]
 80209f8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 80209fc:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8020a00:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8020a04:	fb03 1202 	mla	r2, r3, r2, r1
 8020a08:	ebac 0c07 	sub.w	ip, ip, r7
 8020a0c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020a10:	435e      	muls	r6, r3
 8020a12:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8020a16:	2dff      	cmp	r5, #255	; 0xff
 8020a18:	eba3 0707 	sub.w	r7, r3, r7
 8020a1c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8020a20:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8020a24:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8020a28:	d049      	beq.n	8020abe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8020a2a:	43eb      	mvns	r3, r5
 8020a2c:	fa1f f985 	uxth.w	r9, r5
 8020a30:	b2db      	uxtb	r3, r3
 8020a32:	42b0      	cmp	r0, r6
 8020a34:	d266      	bcs.n	8020b04 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020a36:	eb00 0a0e 	add.w	sl, r0, lr
 8020a3a:	4550      	cmp	r0, sl
 8020a3c:	4621      	mov	r1, r4
 8020a3e:	f104 0403 	add.w	r4, r4, #3
 8020a42:	d25b      	bcs.n	8020afc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8020a44:	8802      	ldrh	r2, [r0, #0]
 8020a46:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020a4a:	ea4f 2822 	mov.w	r8, r2, asr #8
 8020a4e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8020a52:	fb11 f109 	smulbb	r1, r1, r9
 8020a56:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8020a5a:	10d5      	asrs	r5, r2, #3
 8020a5c:	fb08 1803 	mla	r8, r8, r3, r1
 8020a60:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8020a64:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020a68:	fb11 f109 	smulbb	r1, r1, r9
 8020a6c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020a70:	fb05 1503 	mla	r5, r5, r3, r1
 8020a74:	00d2      	lsls	r2, r2, #3
 8020a76:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020a7a:	b2d2      	uxtb	r2, r2
 8020a7c:	fb11 f109 	smulbb	r1, r1, r9
 8020a80:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020a84:	fa1f f888 	uxth.w	r8, r8
 8020a88:	fb02 1203 	mla	r2, r2, r3, r1
 8020a8c:	b292      	uxth	r2, r2
 8020a8e:	f108 0101 	add.w	r1, r8, #1
 8020a92:	b2ad      	uxth	r5, r5
 8020a94:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8020a98:	1c51      	adds	r1, r2, #1
 8020a9a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020a9e:	1c69      	adds	r1, r5, #1
 8020aa0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8020aa4:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8020aa8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020aac:	096d      	lsrs	r5, r5, #5
 8020aae:	ea42 0208 	orr.w	r2, r2, r8
 8020ab2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020ab6:	432a      	orrs	r2, r5
 8020ab8:	f820 2b02 	strh.w	r2, [r0], #2
 8020abc:	e7bd      	b.n	8020a3a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8020abe:	4a14      	ldr	r2, [pc, #80]	; (8020b10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8020ac0:	42b0      	cmp	r0, r6
 8020ac2:	d21f      	bcs.n	8020b04 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020ac4:	eb00 050e 	add.w	r5, r0, lr
 8020ac8:	42a8      	cmp	r0, r5
 8020aca:	4621      	mov	r1, r4
 8020acc:	f104 0403 	add.w	r4, r4, #3
 8020ad0:	d210      	bcs.n	8020af4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8020ad2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8020ad6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020ada:	00db      	lsls	r3, r3, #3
 8020adc:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8020ae0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020ae4:	430b      	orrs	r3, r1
 8020ae6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020aea:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8020aee:	f820 3b02 	strh.w	r3, [r0], #2
 8020af2:	e7e9      	b.n	8020ac8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8020af4:	4438      	add	r0, r7
 8020af6:	eb01 040c 	add.w	r4, r1, ip
 8020afa:	e7e1      	b.n	8020ac0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8020afc:	4438      	add	r0, r7
 8020afe:	eb01 040c 	add.w	r4, r1, ip
 8020b02:	e796      	b.n	8020a32 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8020b04:	4b03      	ldr	r3, [pc, #12]	; (8020b14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8020b06:	6818      	ldr	r0, [r3, #0]
 8020b08:	6803      	ldr	r3, [r0, #0]
 8020b0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020b0c:	4798      	blx	r3
 8020b0e:	e768      	b.n	80209e2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8020b10:	fffff800 	.word	0xfffff800
 8020b14:	20013854 	.word	0x20013854
 8020b18:	2001384e 	.word	0x2001384e

08020b1c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8020b1c:	b4f0      	push	{r4, r5, r6, r7}
 8020b1e:	4616      	mov	r6, r2
 8020b20:	2e01      	cmp	r6, #1
 8020b22:	461c      	mov	r4, r3
 8020b24:	460d      	mov	r5, r1
 8020b26:	9a04      	ldr	r2, [sp, #16]
 8020b28:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8020b2c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8020b30:	d012      	beq.n	8020b58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8020b32:	d303      	bcc.n	8020b3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8020b34:	2e02      	cmp	r6, #2
 8020b36:	d00a      	beq.n	8020b4e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8020b38:	bcf0      	pop	{r4, r5, r6, r7}
 8020b3a:	4770      	bx	lr
 8020b3c:	6805      	ldr	r5, [r0, #0]
 8020b3e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8020b42:	68ed      	ldr	r5, [r5, #12]
 8020b44:	4613      	mov	r3, r2
 8020b46:	46ac      	mov	ip, r5
 8020b48:	4622      	mov	r2, r4
 8020b4a:	bcf0      	pop	{r4, r5, r6, r7}
 8020b4c:	4760      	bx	ip
 8020b4e:	4621      	mov	r1, r4
 8020b50:	4628      	mov	r0, r5
 8020b52:	bcf0      	pop	{r4, r5, r6, r7}
 8020b54:	f7ff bd94 	b.w	8020680 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020b58:	4621      	mov	r1, r4
 8020b5a:	4628      	mov	r0, r5
 8020b5c:	bcf0      	pop	{r4, r5, r6, r7}
 8020b5e:	f7ff bee5 	b.w	802092c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08020b64 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8020b64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b68:	4681      	mov	r9, r0
 8020b6a:	b093      	sub	sp, #76	; 0x4c
 8020b6c:	6810      	ldr	r0, [r2, #0]
 8020b6e:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8020b72:	4f6d      	ldr	r7, [pc, #436]	; (8020d28 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8020b74:	4688      	mov	r8, r1
 8020b76:	6851      	ldr	r1, [r2, #4]
 8020b78:	ac0e      	add	r4, sp, #56	; 0x38
 8020b7a:	c403      	stmia	r4!, {r0, r1}
 8020b7c:	6818      	ldr	r0, [r3, #0]
 8020b7e:	6859      	ldr	r1, [r3, #4]
 8020b80:	ac10      	add	r4, sp, #64	; 0x40
 8020b82:	4616      	mov	r6, r2
 8020b84:	c403      	stmia	r4!, {r0, r1}
 8020b86:	a80e      	add	r0, sp, #56	; 0x38
 8020b88:	f7f7 fc96 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020b8c:	4631      	mov	r1, r6
 8020b8e:	a810      	add	r0, sp, #64	; 0x40
 8020b90:	f7f7 fcd6 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020b94:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8020b98:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8020b9c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8020ba0:	4e62      	ldr	r6, [pc, #392]	; (8020d2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020ba2:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8020ba6:	6830      	ldr	r0, [r6, #0]
 8020ba8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8020bac:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020bb0:	4489      	add	r9, r1
 8020bb2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8020bb6:	440a      	add	r2, r1
 8020bb8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8020bbc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8020bc0:	4413      	add	r3, r2
 8020bc2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8020bc6:	6803      	ldr	r3, [r0, #0]
 8020bc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020bca:	4798      	blx	r3
 8020bcc:	f010 0f80 	tst.w	r0, #128	; 0x80
 8020bd0:	6830      	ldr	r0, [r6, #0]
 8020bd2:	d01d      	beq.n	8020c10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8020bd4:	2200      	movs	r2, #0
 8020bd6:	6801      	ldr	r1, [r0, #0]
 8020bd8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8020bdc:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8020be0:	220b      	movs	r2, #11
 8020be2:	9207      	str	r2, [sp, #28]
 8020be4:	883a      	ldrh	r2, [r7, #0]
 8020be6:	9206      	str	r2, [sp, #24]
 8020be8:	2201      	movs	r2, #1
 8020bea:	e9cd a204 	strd	sl, r2, [sp, #16]
 8020bee:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8020bf2:	9203      	str	r2, [sp, #12]
 8020bf4:	b2a4      	uxth	r4, r4
 8020bf6:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8020bfa:	9200      	str	r2, [sp, #0]
 8020bfc:	b2ad      	uxth	r5, r5
 8020bfe:	9502      	str	r5, [sp, #8]
 8020c00:	9401      	str	r4, [sp, #4]
 8020c02:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8020c04:	4642      	mov	r2, r8
 8020c06:	4649      	mov	r1, r9
 8020c08:	47a0      	blx	r4
 8020c0a:	b013      	add	sp, #76	; 0x4c
 8020c0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c10:	6803      	ldr	r3, [r0, #0]
 8020c12:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020c14:	4798      	blx	r3
 8020c16:	883b      	ldrh	r3, [r7, #0]
 8020c18:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8020c1c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8020c20:	fb03 1202 	mla	r2, r3, r2, r1
 8020c24:	435d      	muls	r5, r3
 8020c26:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020c2a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8020c2e:	920c      	str	r2, [sp, #48]	; 0x30
 8020c30:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8020c34:	1b12      	subs	r2, r2, r4
 8020c36:	920d      	str	r2, [sp, #52]	; 0x34
 8020c38:	0062      	lsls	r2, r4, #1
 8020c3a:	1b1c      	subs	r4, r3, r4
 8020c3c:	0063      	lsls	r3, r4, #1
 8020c3e:	920a      	str	r2, [sp, #40]	; 0x28
 8020c40:	930b      	str	r3, [sp, #44]	; 0x2c
 8020c42:	f04f 0e04 	mov.w	lr, #4
 8020c46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020c48:	4298      	cmp	r0, r3
 8020c4a:	d266      	bcs.n	8020d1a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8020c4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020c4e:	eb00 0b03 	add.w	fp, r0, r3
 8020c52:	4558      	cmp	r0, fp
 8020c54:	d25c      	bcs.n	8020d10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8020c56:	f819 3b01 	ldrb.w	r3, [r9], #1
 8020c5a:	fb1e e303 	smlabb	r3, lr, r3, lr
 8020c5e:	f858 2003 	ldr.w	r2, [r8, r3]
 8020c62:	0e11      	lsrs	r1, r2, #24
 8020c64:	d012      	beq.n	8020c8c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020c66:	29ff      	cmp	r1, #255	; 0xff
 8020c68:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8020c6c:	d110      	bne.n	8020c90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020c6e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8020c72:	d10d      	bne.n	8020c90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020c74:	0953      	lsrs	r3, r2, #5
 8020c76:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8020c7a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020c7e:	f027 0707 	bic.w	r7, r7, #7
 8020c82:	431f      	orrs	r7, r3
 8020c84:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020c88:	433a      	orrs	r2, r7
 8020c8a:	8002      	strh	r2, [r0, #0]
 8020c8c:	3002      	adds	r0, #2
 8020c8e:	e7e0      	b.n	8020c52 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8020c90:	fb0a f101 	mul.w	r1, sl, r1
 8020c94:	8806      	ldrh	r6, [r0, #0]
 8020c96:	1c4b      	adds	r3, r1, #1
 8020c98:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8020c9c:	1235      	asrs	r5, r6, #8
 8020c9e:	10f4      	asrs	r4, r6, #3
 8020ca0:	121b      	asrs	r3, r3, #8
 8020ca2:	00f6      	lsls	r6, r6, #3
 8020ca4:	b299      	uxth	r1, r3
 8020ca6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8020caa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020cae:	b2f6      	uxtb	r6, r6
 8020cb0:	43db      	mvns	r3, r3
 8020cb2:	b2d2      	uxtb	r2, r2
 8020cb4:	b2db      	uxtb	r3, r3
 8020cb6:	fb1c fc01 	smulbb	ip, ip, r1
 8020cba:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8020cbe:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020cc2:	fb12 f201 	smulbb	r2, r2, r1
 8020cc6:	fb05 c503 	mla	r5, r5, r3, ip
 8020cca:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8020cce:	b2ff      	uxtb	r7, r7
 8020cd0:	fb06 2203 	mla	r2, r6, r3, r2
 8020cd4:	b2ad      	uxth	r5, r5
 8020cd6:	fb17 f701 	smulbb	r7, r7, r1
 8020cda:	b292      	uxth	r2, r2
 8020cdc:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8020ce0:	fb04 7403 	mla	r4, r4, r3, r7
 8020ce4:	f105 0c01 	add.w	ip, r5, #1
 8020ce8:	1c57      	adds	r7, r2, #1
 8020cea:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020cee:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8020cf2:	b2a4      	uxth	r4, r4
 8020cf4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020cf8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020cfc:	433d      	orrs	r5, r7
 8020cfe:	1c67      	adds	r7, r4, #1
 8020d00:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8020d04:	0964      	lsrs	r4, r4, #5
 8020d06:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020d0a:	4325      	orrs	r5, r4
 8020d0c:	8005      	strh	r5, [r0, #0]
 8020d0e:	e7bd      	b.n	8020c8c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020d10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020d12:	4418      	add	r0, r3
 8020d14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020d16:	4499      	add	r9, r3
 8020d18:	e795      	b.n	8020c46 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8020d1a:	4b04      	ldr	r3, [pc, #16]	; (8020d2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020d1c:	6818      	ldr	r0, [r3, #0]
 8020d1e:	6803      	ldr	r3, [r0, #0]
 8020d20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020d22:	4798      	blx	r3
 8020d24:	e771      	b.n	8020c0a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8020d26:	bf00      	nop
 8020d28:	2001384e 	.word	0x2001384e
 8020d2c:	20013854 	.word	0x20013854

08020d30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8020d30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d34:	b087      	sub	sp, #28
 8020d36:	4680      	mov	r8, r0
 8020d38:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8020d3c:	460d      	mov	r5, r1
 8020d3e:	4614      	mov	r4, r2
 8020d40:	2e00      	cmp	r6, #0
 8020d42:	f000 80b9 	beq.w	8020eb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8020d46:	6810      	ldr	r0, [r2, #0]
 8020d48:	6851      	ldr	r1, [r2, #4]
 8020d4a:	af02      	add	r7, sp, #8
 8020d4c:	c703      	stmia	r7!, {r0, r1}
 8020d4e:	6818      	ldr	r0, [r3, #0]
 8020d50:	6859      	ldr	r1, [r3, #4]
 8020d52:	af04      	add	r7, sp, #16
 8020d54:	c703      	stmia	r7!, {r0, r1}
 8020d56:	a802      	add	r0, sp, #8
 8020d58:	f7f7 fbae 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020d5c:	4621      	mov	r1, r4
 8020d5e:	a804      	add	r0, sp, #16
 8020d60:	f7f7 fbee 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020d64:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8020d68:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8020d6c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8020d70:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8020d74:	fb14 2103 	smlabb	r1, r4, r3, r2
 8020d78:	eb08 0401 	add.w	r4, r8, r1
 8020d7c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8020d80:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8020d84:	440a      	add	r2, r1
 8020d86:	f8ad 2010 	strh.w	r2, [sp, #16]
 8020d8a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8020d8e:	4413      	add	r3, r2
 8020d90:	f8ad 3012 	strh.w	r3, [sp, #18]
 8020d94:	4b4a      	ldr	r3, [pc, #296]	; (8020ec0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8020d96:	6818      	ldr	r0, [r3, #0]
 8020d98:	6803      	ldr	r3, [r0, #0]
 8020d9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020d9c:	4798      	blx	r3
 8020d9e:	4b49      	ldr	r3, [pc, #292]	; (8020ec4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8020da0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8020da4:	881a      	ldrh	r2, [r3, #0]
 8020da6:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8020daa:	2eff      	cmp	r6, #255	; 0xff
 8020dac:	fb02 c101 	mla	r1, r2, r1, ip
 8020db0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8020db4:	fb02 f207 	mul.w	r2, r2, r7
 8020db8:	f105 0104 	add.w	r1, r5, #4
 8020dbc:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8020dc0:	461d      	mov	r5, r3
 8020dc2:	d05a      	beq.n	8020e7a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8020dc4:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8020dc8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8020dcc:	b2b6      	uxth	r6, r6
 8020dce:	fa1f fe8e 	uxth.w	lr, lr
 8020dd2:	9301      	str	r3, [sp, #4]
 8020dd4:	4282      	cmp	r2, r0
 8020dd6:	d96a      	bls.n	8020eae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8020dd8:	eb00 0b0a 	add.w	fp, r0, sl
 8020ddc:	4583      	cmp	fp, r0
 8020dde:	d940      	bls.n	8020e62 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8020de0:	f814 3b01 	ldrb.w	r3, [r4], #1
 8020de4:	8805      	ldrh	r5, [r0, #0]
 8020de6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8020dea:	122f      	asrs	r7, r5, #8
 8020dec:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8020df0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8020df4:	fb17 f70e 	smulbb	r7, r7, lr
 8020df8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8020dfc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020e00:	00ed      	lsls	r5, r5, #3
 8020e02:	fb0c 7c06 	mla	ip, ip, r6, r7
 8020e06:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8020e0a:	10df      	asrs	r7, r3, #3
 8020e0c:	b2ed      	uxtb	r5, r5
 8020e0e:	00db      	lsls	r3, r3, #3
 8020e10:	fa1f fc8c 	uxth.w	ip, ip
 8020e14:	fb19 f90e 	smulbb	r9, r9, lr
 8020e18:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020e1c:	b2db      	uxtb	r3, r3
 8020e1e:	fb15 f50e 	smulbb	r5, r5, lr
 8020e22:	fb07 9706 	mla	r7, r7, r6, r9
 8020e26:	fb03 5306 	mla	r3, r3, r6, r5
 8020e2a:	f10c 0901 	add.w	r9, ip, #1
 8020e2e:	b29b      	uxth	r3, r3
 8020e30:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8020e34:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8020e38:	f103 0c01 	add.w	ip, r3, #1
 8020e3c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8020e40:	b2bf      	uxth	r7, r7
 8020e42:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020e46:	ea4c 0c09 	orr.w	ip, ip, r9
 8020e4a:	f107 0901 	add.w	r9, r7, #1
 8020e4e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8020e52:	097f      	lsrs	r7, r7, #5
 8020e54:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020e58:	ea4c 0c07 	orr.w	ip, ip, r7
 8020e5c:	f820 cb02 	strh.w	ip, [r0], #2
 8020e60:	e7bc      	b.n	8020ddc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8020e62:	9b01      	ldr	r3, [sp, #4]
 8020e64:	881b      	ldrh	r3, [r3, #0]
 8020e66:	eba3 0308 	sub.w	r3, r3, r8
 8020e6a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020e6e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8020e72:	eba3 0308 	sub.w	r3, r3, r8
 8020e76:	441c      	add	r4, r3
 8020e78:	e7ac      	b.n	8020dd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8020e7a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8020e7e:	4282      	cmp	r2, r0
 8020e80:	d915      	bls.n	8020eae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8020e82:	eb00 060a 	add.w	r6, r0, sl
 8020e86:	4286      	cmp	r6, r0
 8020e88:	d906      	bls.n	8020e98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8020e8a:	f814 3b01 	ldrb.w	r3, [r4], #1
 8020e8e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8020e92:	f820 3b02 	strh.w	r3, [r0], #2
 8020e96:	e7f6      	b.n	8020e86 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8020e98:	882b      	ldrh	r3, [r5, #0]
 8020e9a:	eba3 0308 	sub.w	r3, r3, r8
 8020e9e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020ea2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8020ea6:	eba3 0308 	sub.w	r3, r3, r8
 8020eaa:	441c      	add	r4, r3
 8020eac:	e7e7      	b.n	8020e7e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8020eae:	4b04      	ldr	r3, [pc, #16]	; (8020ec0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8020eb0:	6818      	ldr	r0, [r3, #0]
 8020eb2:	6803      	ldr	r3, [r0, #0]
 8020eb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020eb6:	4798      	blx	r3
 8020eb8:	b007      	add	sp, #28
 8020eba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020ebe:	bf00      	nop
 8020ec0:	20013854 	.word	0x20013854
 8020ec4:	2001384e 	.word	0x2001384e

08020ec8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8020ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020ecc:	b091      	sub	sp, #68	; 0x44
 8020ece:	4680      	mov	r8, r0
 8020ed0:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8020ed4:	460f      	mov	r7, r1
 8020ed6:	4614      	mov	r4, r2
 8020ed8:	2d00      	cmp	r5, #0
 8020eda:	d051      	beq.n	8020f80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8020edc:	6810      	ldr	r0, [r2, #0]
 8020ede:	6851      	ldr	r1, [r2, #4]
 8020ee0:	f8df 9200 	ldr.w	r9, [pc, #512]	; 80210e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8020ee4:	ae0c      	add	r6, sp, #48	; 0x30
 8020ee6:	c603      	stmia	r6!, {r0, r1}
 8020ee8:	6818      	ldr	r0, [r3, #0]
 8020eea:	6859      	ldr	r1, [r3, #4]
 8020eec:	ae0e      	add	r6, sp, #56	; 0x38
 8020eee:	c603      	stmia	r6!, {r0, r1}
 8020ef0:	a80c      	add	r0, sp, #48	; 0x30
 8020ef2:	f7f7 fae1 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020ef6:	4621      	mov	r1, r4
 8020ef8:	a80e      	add	r0, sp, #56	; 0x38
 8020efa:	f7f7 fb21 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020efe:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8020f02:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8020f06:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8020f0a:	f8d9 0000 	ldr.w	r0, [r9]
 8020f0e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8020f12:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8020f16:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020f1a:	eb08 0401 	add.w	r4, r8, r1
 8020f1e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8020f22:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 80210e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8020f26:	440a      	add	r2, r1
 8020f28:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8020f2c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8020f30:	4413      	add	r3, r2
 8020f32:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8020f36:	6803      	ldr	r3, [r0, #0]
 8020f38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020f3a:	4798      	blx	r3
 8020f3c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8020f40:	f8d9 0000 	ldr.w	r0, [r9]
 8020f44:	d01f      	beq.n	8020f86 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8020f46:	2200      	movs	r2, #0
 8020f48:	6801      	ldr	r1, [r0, #0]
 8020f4a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8020f4e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8020f52:	220b      	movs	r2, #11
 8020f54:	9207      	str	r2, [sp, #28]
 8020f56:	f8b8 2000 	ldrh.w	r2, [r8]
 8020f5a:	9206      	str	r2, [sp, #24]
 8020f5c:	2201      	movs	r2, #1
 8020f5e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8020f62:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8020f66:	9203      	str	r2, [sp, #12]
 8020f68:	fa1f f28a 	uxth.w	r2, sl
 8020f6c:	9202      	str	r2, [sp, #8]
 8020f6e:	b2b6      	uxth	r6, r6
 8020f70:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8020f74:	9200      	str	r2, [sp, #0]
 8020f76:	9601      	str	r6, [sp, #4]
 8020f78:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8020f7a:	463a      	mov	r2, r7
 8020f7c:	4621      	mov	r1, r4
 8020f7e:	47a8      	blx	r5
 8020f80:	b011      	add	sp, #68	; 0x44
 8020f82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020f86:	6803      	ldr	r3, [r0, #0]
 8020f88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020f8a:	4798      	blx	r3
 8020f8c:	f8b8 2000 	ldrh.w	r2, [r8]
 8020f90:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8020f94:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8020f98:	2dff      	cmp	r5, #255	; 0xff
 8020f9a:	fb02 1303 	mla	r3, r2, r3, r1
 8020f9e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020fa2:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8020fa6:	fb0a fa02 	mul.w	sl, sl, r2
 8020faa:	d062      	beq.n	8021072 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8020fac:	ea6f 0c05 	mvn.w	ip, r5
 8020fb0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8020fb4:	930a      	str	r3, [sp, #40]	; 0x28
 8020fb6:	b2ad      	uxth	r5, r5
 8020fb8:	fa5f fc8c 	uxtb.w	ip, ip
 8020fbc:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8020fc0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020fc2:	4298      	cmp	r0, r3
 8020fc4:	f080 8085 	bcs.w	80210d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8020fc8:	eb00 0b09 	add.w	fp, r0, r9
 8020fcc:	4558      	cmp	r0, fp
 8020fce:	d246      	bcs.n	802105e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8020fd0:	f814 eb01 	ldrb.w	lr, [r4], #1
 8020fd4:	2303      	movs	r3, #3
 8020fd6:	2204      	movs	r2, #4
 8020fd8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8020fdc:	eb07 0a0e 	add.w	sl, r7, lr
 8020fe0:	8803      	ldrh	r3, [r0, #0]
 8020fe2:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8020fe6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020fea:	1219      	asrs	r1, r3, #8
 8020fec:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020ff0:	fb18 f805 	smulbb	r8, r8, r5
 8020ff4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8020ff8:	10da      	asrs	r2, r3, #3
 8020ffa:	fb01 810c 	mla	r1, r1, ip, r8
 8020ffe:	00db      	lsls	r3, r3, #3
 8021000:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021004:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021008:	b2db      	uxtb	r3, r3
 802100a:	fb18 f805 	smulbb	r8, r8, r5
 802100e:	fb1e fe05 	smulbb	lr, lr, r5
 8021012:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8021016:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 802101a:	b289      	uxth	r1, r1
 802101c:	fb02 820c 	mla	r2, r2, ip, r8
 8021020:	fb03 e30c 	mla	r3, r3, ip, lr
 8021024:	b292      	uxth	r2, r2
 8021026:	b29b      	uxth	r3, r3
 8021028:	f101 0801 	add.w	r8, r1, #1
 802102c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8021030:	f103 0e01 	add.w	lr, r3, #1
 8021034:	f102 0801 	add.w	r8, r2, #1
 8021038:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 802103c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8021040:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8021044:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8021048:	ea4f 1858 	mov.w	r8, r8, lsr #5
 802104c:	ea4e 0101 	orr.w	r1, lr, r1
 8021050:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021054:	ea41 0108 	orr.w	r1, r1, r8
 8021058:	f820 1b02 	strh.w	r1, [r0], #2
 802105c:	e7b6      	b.n	8020fcc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 802105e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021060:	881b      	ldrh	r3, [r3, #0]
 8021062:	1b9b      	subs	r3, r3, r6
 8021064:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021068:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802106c:	1b9b      	subs	r3, r3, r6
 802106e:	441c      	add	r4, r3
 8021070:	e7a6      	b.n	8020fc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8021072:	491b      	ldr	r1, [pc, #108]	; (80210e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8021074:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8021078:	2203      	movs	r2, #3
 802107a:	2504      	movs	r5, #4
 802107c:	4550      	cmp	r0, sl
 802107e:	d228      	bcs.n	80210d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8021080:	eb00 0c09 	add.w	ip, r0, r9
 8021084:	4560      	cmp	r0, ip
 8021086:	4623      	mov	r3, r4
 8021088:	d219      	bcs.n	80210be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 802108a:	f893 e000 	ldrb.w	lr, [r3]
 802108e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8021092:	eb07 0b0e 	add.w	fp, r7, lr
 8021096:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802109a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 802109e:	f89b b001 	ldrb.w	fp, [fp, #1]
 80210a2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80210a6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80210aa:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80210ae:	ea43 030b 	orr.w	r3, r3, fp
 80210b2:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80210b6:	3401      	adds	r4, #1
 80210b8:	f820 3b02 	strh.w	r3, [r0], #2
 80210bc:	e7e2      	b.n	8021084 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80210be:	f8b8 3000 	ldrh.w	r3, [r8]
 80210c2:	1b9b      	subs	r3, r3, r6
 80210c4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80210c8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80210cc:	1b9b      	subs	r3, r3, r6
 80210ce:	441c      	add	r4, r3
 80210d0:	e7d4      	b.n	802107c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80210d2:	4b04      	ldr	r3, [pc, #16]	; (80210e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80210d4:	6818      	ldr	r0, [r3, #0]
 80210d6:	6803      	ldr	r3, [r0, #0]
 80210d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80210da:	4798      	blx	r3
 80210dc:	e750      	b.n	8020f80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80210de:	bf00      	nop
 80210e0:	fffff800 	.word	0xfffff800
 80210e4:	20013854 	.word	0x20013854
 80210e8:	2001384e 	.word	0x2001384e

080210ec <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80210ec:	b4f0      	push	{r4, r5, r6, r7}
 80210ee:	460c      	mov	r4, r1
 80210f0:	4611      	mov	r1, r2
 80210f2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80210f6:	780f      	ldrb	r7, [r1, #0]
 80210f8:	784e      	ldrb	r6, [r1, #1]
 80210fa:	2f01      	cmp	r7, #1
 80210fc:	461a      	mov	r2, r3
 80210fe:	9b04      	ldr	r3, [sp, #16]
 8021100:	d036      	beq.n	8021170 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 8021102:	d31e      	bcc.n	8021142 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 8021104:	2f02      	cmp	r7, #2
 8021106:	d14a      	bne.n	802119e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021108:	2e03      	cmp	r6, #3
 802110a:	d848      	bhi.n	802119e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 802110c:	e8df f006 	tbb	[pc, r6]
 8021110:	16140702 	.word	0x16140702
 8021114:	9504      	str	r5, [sp, #16]
 8021116:	4620      	mov	r0, r4
 8021118:	bcf0      	pop	{r4, r5, r6, r7}
 802111a:	f7ff be09 	b.w	8020d30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 802111e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8021120:	2800      	cmp	r0, #0
 8021122:	d03c      	beq.n	802119e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021124:	6806      	ldr	r6, [r0, #0]
 8021126:	e9cd 3504 	strd	r3, r5, [sp, #16]
 802112a:	68b5      	ldr	r5, [r6, #8]
 802112c:	4613      	mov	r3, r2
 802112e:	46ac      	mov	ip, r5
 8021130:	460a      	mov	r2, r1
 8021132:	4621      	mov	r1, r4
 8021134:	bcf0      	pop	{r4, r5, r6, r7}
 8021136:	4760      	bx	ip
 8021138:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 802113a:	e7f1      	b.n	8021120 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 802113c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 8021140:	e7ee      	b.n	8021120 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8021142:	2e03      	cmp	r6, #3
 8021144:	d82b      	bhi.n	802119e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021146:	e8df f006 	tbb	[pc, r6]
 802114a:	0702      	.short	0x0702
 802114c:	100e      	.short	0x100e
 802114e:	9504      	str	r5, [sp, #16]
 8021150:	4620      	mov	r0, r4
 8021152:	bcf0      	pop	{r4, r5, r6, r7}
 8021154:	f7ff bd06 	b.w	8020b64 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8021158:	6f80      	ldr	r0, [r0, #120]	; 0x78
 802115a:	b300      	cbz	r0, 802119e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 802115c:	6806      	ldr	r6, [r0, #0]
 802115e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8021162:	68f5      	ldr	r5, [r6, #12]
 8021164:	e7e2      	b.n	802112c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8021166:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8021168:	e7f7      	b.n	802115a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 802116a:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 802116e:	e7f4      	b.n	802115a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 8021170:	2e03      	cmp	r6, #3
 8021172:	d814      	bhi.n	802119e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021174:	e8df f006 	tbb	[pc, r6]
 8021178:	100e0702 	.word	0x100e0702
 802117c:	9504      	str	r5, [sp, #16]
 802117e:	4620      	mov	r0, r4
 8021180:	bcf0      	pop	{r4, r5, r6, r7}
 8021182:	f7ff bea1 	b.w	8020ec8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8021186:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8021188:	b148      	cbz	r0, 802119e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 802118a:	6806      	ldr	r6, [r0, #0]
 802118c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8021190:	6935      	ldr	r5, [r6, #16]
 8021192:	e7cb      	b.n	802112c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8021194:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8021196:	e7f7      	b.n	8021188 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8021198:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 802119c:	e7f4      	b.n	8021188 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 802119e:	bcf0      	pop	{r4, r5, r6, r7}
 80211a0:	4770      	bx	lr
	...

080211a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80211a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80211a8:	4604      	mov	r4, r0
 80211aa:	b087      	sub	sp, #28
 80211ac:	6810      	ldr	r0, [r2, #0]
 80211ae:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80211b2:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80213ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80211b6:	460e      	mov	r6, r1
 80211b8:	6851      	ldr	r1, [r2, #4]
 80211ba:	ad02      	add	r5, sp, #8
 80211bc:	c503      	stmia	r5!, {r0, r1}
 80211be:	6818      	ldr	r0, [r3, #0]
 80211c0:	6859      	ldr	r1, [r3, #4]
 80211c2:	ad04      	add	r5, sp, #16
 80211c4:	4617      	mov	r7, r2
 80211c6:	c503      	stmia	r5!, {r0, r1}
 80211c8:	a802      	add	r0, sp, #8
 80211ca:	f7f7 f975 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80211ce:	4639      	mov	r1, r7
 80211d0:	a804      	add	r0, sp, #16
 80211d2:	f7f7 f9b5 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80211d6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80211da:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80211de:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80211e2:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80211e6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80211ea:	fb11 2103 	smlabb	r1, r1, r3, r2
 80211ee:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80211f2:	440e      	add	r6, r1
 80211f4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80211f8:	440a      	add	r2, r1
 80211fa:	f8ad 2010 	strh.w	r2, [sp, #16]
 80211fe:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8021202:	4413      	add	r3, r2
 8021204:	f8ad 3012 	strh.w	r3, [sp, #18]
 8021208:	4b77      	ldr	r3, [pc, #476]	; (80213e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802120a:	6818      	ldr	r0, [r3, #0]
 802120c:	6803      	ldr	r3, [r0, #0]
 802120e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021210:	4798      	blx	r3
 8021212:	f8b9 b000 	ldrh.w	fp, [r9]
 8021216:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802121a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802121e:	fb0b 2303 	mla	r3, fp, r3, r2
 8021222:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021226:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 802122a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 802122e:	fb05 f50b 	mul.w	r5, r5, fp
 8021232:	9300      	str	r3, [sp, #0]
 8021234:	d069      	beq.n	802130a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8021236:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 802123a:	4558      	cmp	r0, fp
 802123c:	f080 80cc 	bcs.w	80213d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8021240:	9b00      	ldr	r3, [sp, #0]
 8021242:	18c3      	adds	r3, r0, r3
 8021244:	9301      	str	r3, [sp, #4]
 8021246:	4631      	mov	r1, r6
 8021248:	9b01      	ldr	r3, [sp, #4]
 802124a:	4298      	cmp	r0, r3
 802124c:	d24f      	bcs.n	80212ee <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 802124e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8021252:	2a00      	cmp	r2, #0
 8021254:	d048      	beq.n	80212e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8021256:	fb0a f202 	mul.w	r2, sl, r2
 802125a:	1c53      	adds	r3, r2, #1
 802125c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021260:	121b      	asrs	r3, r3, #8
 8021262:	d041      	beq.n	80212e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8021264:	8802      	ldrh	r2, [r0, #0]
 8021266:	f8b4 c000 	ldrh.w	ip, [r4]
 802126a:	b29e      	uxth	r6, r3
 802126c:	1215      	asrs	r5, r2, #8
 802126e:	43db      	mvns	r3, r3
 8021270:	b2db      	uxtb	r3, r3
 8021272:	ea4f 272c 	mov.w	r7, ip, asr #8
 8021276:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802127a:	fb15 f503 	smulbb	r5, r5, r3
 802127e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8021282:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8021286:	00d2      	lsls	r2, r2, #3
 8021288:	fb07 5706 	mla	r7, r7, r6, r5
 802128c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8021290:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8021294:	b2d2      	uxtb	r2, r2
 8021296:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802129a:	b2bf      	uxth	r7, r7
 802129c:	fb1e fe03 	smulbb	lr, lr, r3
 80212a0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80212a4:	fa5f fc8c 	uxtb.w	ip, ip
 80212a8:	fb12 f203 	smulbb	r2, r2, r3
 80212ac:	fb05 e506 	mla	r5, r5, r6, lr
 80212b0:	fb0c 2c06 	mla	ip, ip, r6, r2
 80212b4:	f107 0e01 	add.w	lr, r7, #1
 80212b8:	fa1f fc8c 	uxth.w	ip, ip
 80212bc:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80212c0:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80212c4:	f10c 0701 	add.w	r7, ip, #1
 80212c8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80212cc:	b2ad      	uxth	r5, r5
 80212ce:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80212d2:	ea47 070e 	orr.w	r7, r7, lr
 80212d6:	f105 0e01 	add.w	lr, r5, #1
 80212da:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80212de:	096d      	lsrs	r5, r5, #5
 80212e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80212e4:	432f      	orrs	r7, r5
 80212e6:	8007      	strh	r7, [r0, #0]
 80212e8:	3002      	adds	r0, #2
 80212ea:	3402      	adds	r4, #2
 80212ec:	e7ac      	b.n	8021248 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80212ee:	f8b9 3000 	ldrh.w	r3, [r9]
 80212f2:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80212f6:	eba3 0308 	sub.w	r3, r3, r8
 80212fa:	eba6 0608 	sub.w	r6, r6, r8
 80212fe:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8021302:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021306:	440e      	add	r6, r1
 8021308:	e797      	b.n	802123a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 802130a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 802130e:	42a8      	cmp	r0, r5
 8021310:	d262      	bcs.n	80213d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8021312:	9b00      	ldr	r3, [sp, #0]
 8021314:	4631      	mov	r1, r6
 8021316:	eb00 0b03 	add.w	fp, r0, r3
 802131a:	4558      	cmp	r0, fp
 802131c:	d24e      	bcs.n	80213bc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 802131e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8021322:	b12b      	cbz	r3, 8021330 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8021324:	2bff      	cmp	r3, #255	; 0xff
 8021326:	f8b4 e000 	ldrh.w	lr, [r4]
 802132a:	d104      	bne.n	8021336 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 802132c:	f8a0 e000 	strh.w	lr, [r0]
 8021330:	3002      	adds	r0, #2
 8021332:	3402      	adds	r4, #2
 8021334:	e7f1      	b.n	802131a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8021336:	8802      	ldrh	r2, [r0, #0]
 8021338:	b29f      	uxth	r7, r3
 802133a:	1216      	asrs	r6, r2, #8
 802133c:	43db      	mvns	r3, r3
 802133e:	b2db      	uxtb	r3, r3
 8021340:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8021344:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8021348:	fb16 f603 	smulbb	r6, r6, r3
 802134c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8021350:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021354:	00d2      	lsls	r2, r2, #3
 8021356:	fb0c 6c07 	mla	ip, ip, r7, r6
 802135a:	b2d2      	uxtb	r2, r2
 802135c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8021360:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8021364:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8021368:	fb1a fa03 	smulbb	sl, sl, r3
 802136c:	fa1f fc8c 	uxth.w	ip, ip
 8021370:	fb12 f303 	smulbb	r3, r2, r3
 8021374:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021378:	fa5f fe8e 	uxtb.w	lr, lr
 802137c:	fb06 a607 	mla	r6, r6, r7, sl
 8021380:	f10c 0201 	add.w	r2, ip, #1
 8021384:	fb0e 3307 	mla	r3, lr, r7, r3
 8021388:	b2b6      	uxth	r6, r6
 802138a:	b29b      	uxth	r3, r3
 802138c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8021390:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8021394:	f106 0a01 	add.w	sl, r6, #1
 8021398:	f103 0c01 	add.w	ip, r3, #1
 802139c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80213a0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80213a4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80213a8:	0976      	lsrs	r6, r6, #5
 80213aa:	ea4c 0c02 	orr.w	ip, ip, r2
 80213ae:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80213b2:	ea4c 0c06 	orr.w	ip, ip, r6
 80213b6:	f8a0 c000 	strh.w	ip, [r0]
 80213ba:	e7b9      	b.n	8021330 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80213bc:	f8b9 3000 	ldrh.w	r3, [r9]
 80213c0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80213c4:	eba3 0308 	sub.w	r3, r3, r8
 80213c8:	eba6 0608 	sub.w	r6, r6, r8
 80213cc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80213d0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80213d4:	440e      	add	r6, r1
 80213d6:	e79a      	b.n	802130e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80213d8:	4b03      	ldr	r3, [pc, #12]	; (80213e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80213da:	6818      	ldr	r0, [r3, #0]
 80213dc:	6803      	ldr	r3, [r0, #0]
 80213de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80213e0:	4798      	blx	r3
 80213e2:	b007      	add	sp, #28
 80213e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80213e8:	20013854 	.word	0x20013854
 80213ec:	2001384e 	.word	0x2001384e

080213f0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80213f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80213f4:	b089      	sub	sp, #36	; 0x24
 80213f6:	4682      	mov	sl, r0
 80213f8:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80213fc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80213fe:	460f      	mov	r7, r1
 8021400:	4691      	mov	r9, r2
 8021402:	4698      	mov	r8, r3
 8021404:	2e00      	cmp	r6, #0
 8021406:	d03d      	beq.n	8021484 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021408:	4608      	mov	r0, r1
 802140a:	f7fa fe59 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802140e:	4605      	mov	r5, r0
 8021410:	4638      	mov	r0, r7
 8021412:	f7fa fe89 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8021416:	f8ad 000e 	strh.w	r0, [sp, #14]
 802141a:	4638      	mov	r0, r7
 802141c:	f8ad 9008 	strh.w	r9, [sp, #8]
 8021420:	f8ad 500c 	strh.w	r5, [sp, #12]
 8021424:	f8ad 800a 	strh.w	r8, [sp, #10]
 8021428:	f7fa ff36 	bl	801c298 <_ZNK8touchgfx6Bitmap7getDataEv>
 802142c:	4605      	mov	r5, r0
 802142e:	4638      	mov	r0, r7
 8021430:	f7fa ff62 	bl	801c2f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8021434:	4681      	mov	r9, r0
 8021436:	4638      	mov	r0, r7
 8021438:	f7fa ffb2 	bl	801c3a0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 802143c:	280b      	cmp	r0, #11
 802143e:	d821      	bhi.n	8021484 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021440:	e8df f000 	tbb	[pc, r0]
 8021444:	2006aebe 	.word	0x2006aebe
 8021448:	20202020 	.word	0x20202020
 802144c:	b5202020 	.word	0xb5202020
 8021450:	4bb0      	ldr	r3, [pc, #704]	; (8021714 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8021452:	6818      	ldr	r0, [r3, #0]
 8021454:	6803      	ldr	r3, [r0, #0]
 8021456:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021458:	4798      	blx	r3
 802145a:	2eff      	cmp	r6, #255	; 0xff
 802145c:	d101      	bne.n	8021462 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 802145e:	0683      	lsls	r3, r0, #26
 8021460:	d506      	bpl.n	8021470 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 8021462:	4633      	mov	r3, r6
 8021464:	4622      	mov	r2, r4
 8021466:	a902      	add	r1, sp, #8
 8021468:	4628      	mov	r0, r5
 802146a:	f7ff f909 	bl	8020680 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 802146e:	e009      	b.n	8021484 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021470:	4638      	mov	r0, r7
 8021472:	f7fa fed9 	bl	801c228 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8021476:	b940      	cbnz	r0, 802148a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 8021478:	4623      	mov	r3, r4
 802147a:	aa02      	add	r2, sp, #8
 802147c:	4629      	mov	r1, r5
 802147e:	4650      	mov	r0, sl
 8021480:	f7ff f9e4 	bl	802084c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8021484:	b009      	add	sp, #36	; 0x24
 8021486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802148a:	f10d 0818 	add.w	r8, sp, #24
 802148e:	4639      	mov	r1, r7
 8021490:	4640      	mov	r0, r8
 8021492:	f7fa fe7d 	bl	801c190 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8021496:	e898 0003 	ldmia.w	r8, {r0, r1}
 802149a:	af04      	add	r7, sp, #16
 802149c:	e887 0003 	stmia.w	r7, {r0, r1}
 80214a0:	4638      	mov	r0, r7
 80214a2:	4621      	mov	r1, r4
 80214a4:	f7f1 fa6a 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 80214a8:	4638      	mov	r0, r7
 80214aa:	f7f1 faaa 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80214ae:	2800      	cmp	r0, #0
 80214b0:	d1d7      	bne.n	8021462 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80214b2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80214b6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80214ba:	4293      	cmp	r3, r2
 80214bc:	dd12      	ble.n	80214e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 80214be:	1a9b      	subs	r3, r3, r2
 80214c0:	f9b4 0000 	ldrsh.w	r0, [r4]
 80214c4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80214c8:	f8ad 0018 	strh.w	r0, [sp, #24]
 80214cc:	f8ad 201a 	strh.w	r2, [sp, #26]
 80214d0:	f8ad 101c 	strh.w	r1, [sp, #28]
 80214d4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80214d8:	4642      	mov	r2, r8
 80214da:	4633      	mov	r3, r6
 80214dc:	a902      	add	r1, sp, #8
 80214de:	4628      	mov	r0, r5
 80214e0:	f7ff f8ce 	bl	8020680 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80214e4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80214e8:	f9b4 2000 	ldrsh.w	r2, [r4]
 80214ec:	4293      	cmp	r3, r2
 80214ee:	dd12      	ble.n	8021516 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 80214f0:	1a9b      	subs	r3, r3, r2
 80214f2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80214f6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80214fa:	f8ad 2018 	strh.w	r2, [sp, #24]
 80214fe:	f8ad 001a 	strh.w	r0, [sp, #26]
 8021502:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021506:	f8ad 101e 	strh.w	r1, [sp, #30]
 802150a:	23ff      	movs	r3, #255	; 0xff
 802150c:	4642      	mov	r2, r8
 802150e:	a902      	add	r1, sp, #8
 8021510:	4628      	mov	r0, r5
 8021512:	f7ff f8b5 	bl	8020680 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021516:	463b      	mov	r3, r7
 8021518:	aa02      	add	r2, sp, #8
 802151a:	4629      	mov	r1, r5
 802151c:	4650      	mov	r0, sl
 802151e:	f7ff f995 	bl	802084c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8021522:	88a2      	ldrh	r2, [r4, #4]
 8021524:	8823      	ldrh	r3, [r4, #0]
 8021526:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 802152a:	4413      	add	r3, r2
 802152c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8021530:	440a      	add	r2, r1
 8021532:	b29b      	uxth	r3, r3
 8021534:	b292      	uxth	r2, r2
 8021536:	b211      	sxth	r1, r2
 8021538:	b218      	sxth	r0, r3
 802153a:	4288      	cmp	r0, r1
 802153c:	dd12      	ble.n	8021564 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 802153e:	1a9b      	subs	r3, r3, r2
 8021540:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8021544:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8021548:	f8ad 1018 	strh.w	r1, [sp, #24]
 802154c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021550:	f8ad 001e 	strh.w	r0, [sp, #30]
 8021554:	23ff      	movs	r3, #255	; 0xff
 8021556:	4642      	mov	r2, r8
 8021558:	a902      	add	r1, sp, #8
 802155a:	4628      	mov	r0, r5
 802155c:	f8ad 601a 	strh.w	r6, [sp, #26]
 8021560:	f7ff f88e 	bl	8020680 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021564:	88e2      	ldrh	r2, [r4, #6]
 8021566:	8863      	ldrh	r3, [r4, #2]
 8021568:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 802156c:	4413      	add	r3, r2
 802156e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8021572:	440a      	add	r2, r1
 8021574:	b29b      	uxth	r3, r3
 8021576:	b292      	uxth	r2, r2
 8021578:	b211      	sxth	r1, r2
 802157a:	b218      	sxth	r0, r3
 802157c:	4288      	cmp	r0, r1
 802157e:	dd81      	ble.n	8021484 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021580:	1a9b      	subs	r3, r3, r2
 8021582:	f9b4 6000 	ldrsh.w	r6, [r4]
 8021586:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802158a:	f8ad 301e 	strh.w	r3, [sp, #30]
 802158e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8021592:	f8ad 101a 	strh.w	r1, [sp, #26]
 8021596:	f8ad 001c 	strh.w	r0, [sp, #28]
 802159a:	23ff      	movs	r3, #255	; 0xff
 802159c:	4642      	mov	r2, r8
 802159e:	e762      	b.n	8021466 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 80215a0:	4633      	mov	r3, r6
 80215a2:	4622      	mov	r2, r4
 80215a4:	a902      	add	r1, sp, #8
 80215a6:	4628      	mov	r0, r5
 80215a8:	f7ff f9c0 	bl	802092c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80215ac:	e76a      	b.n	8021484 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80215ae:	e9cd 4600 	strd	r4, r6, [sp]
 80215b2:	ab02      	add	r3, sp, #8
 80215b4:	464a      	mov	r2, r9
 80215b6:	4629      	mov	r1, r5
 80215b8:	4650      	mov	r0, sl
 80215ba:	f7ff fd97 	bl	80210ec <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80215be:	e761      	b.n	8021484 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80215c0:	4638      	mov	r0, r7
 80215c2:	f7fa fe31 	bl	801c228 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80215c6:	b950      	cbnz	r0, 80215de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 80215c8:	e9cd 6000 	strd	r6, r0, [sp]
 80215cc:	f8da 3000 	ldr.w	r3, [sl]
 80215d0:	aa02      	add	r2, sp, #8
 80215d2:	68de      	ldr	r6, [r3, #12]
 80215d4:	4629      	mov	r1, r5
 80215d6:	4623      	mov	r3, r4
 80215d8:	4650      	mov	r0, sl
 80215da:	47b0      	blx	r6
 80215dc:	e752      	b.n	8021484 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80215de:	f10d 0818 	add.w	r8, sp, #24
 80215e2:	4639      	mov	r1, r7
 80215e4:	4640      	mov	r0, r8
 80215e6:	f7fa fdd3 	bl	801c190 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80215ea:	e898 0003 	ldmia.w	r8, {r0, r1}
 80215ee:	af04      	add	r7, sp, #16
 80215f0:	e887 0003 	stmia.w	r7, {r0, r1}
 80215f4:	4638      	mov	r0, r7
 80215f6:	4621      	mov	r1, r4
 80215f8:	f7f1 f9c0 	bl	801297c <_ZN8touchgfx4RectaNERKS0_>
 80215fc:	4638      	mov	r0, r7
 80215fe:	f7f1 fa00 	bl	8012a02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8021602:	b138      	cbz	r0, 8021614 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8021604:	9600      	str	r6, [sp, #0]
 8021606:	4623      	mov	r3, r4
 8021608:	aa02      	add	r2, sp, #8
 802160a:	4649      	mov	r1, r9
 802160c:	4628      	mov	r0, r5
 802160e:	f7ff fdc9 	bl	80211a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021612:	e737      	b.n	8021484 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021614:	e9cd 6000 	strd	r6, r0, [sp]
 8021618:	f8da 3000 	ldr.w	r3, [sl]
 802161c:	aa02      	add	r2, sp, #8
 802161e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8021622:	4629      	mov	r1, r5
 8021624:	463b      	mov	r3, r7
 8021626:	4650      	mov	r0, sl
 8021628:	47d8      	blx	fp
 802162a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802162e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8021632:	4293      	cmp	r3, r2
 8021634:	dd13      	ble.n	802165e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 8021636:	f9b4 0000 	ldrsh.w	r0, [r4]
 802163a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802163e:	f8ad 0018 	strh.w	r0, [sp, #24]
 8021642:	1a9b      	subs	r3, r3, r2
 8021644:	f8ad 201a 	strh.w	r2, [sp, #26]
 8021648:	f8ad 101c 	strh.w	r1, [sp, #28]
 802164c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021650:	9600      	str	r6, [sp, #0]
 8021652:	4643      	mov	r3, r8
 8021654:	aa02      	add	r2, sp, #8
 8021656:	4649      	mov	r1, r9
 8021658:	4628      	mov	r0, r5
 802165a:	f7ff fda3 	bl	80211a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 802165e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8021662:	f9b4 2000 	ldrsh.w	r2, [r4]
 8021666:	4293      	cmp	r3, r2
 8021668:	dd13      	ble.n	8021692 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 802166a:	1a9b      	subs	r3, r3, r2
 802166c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8021670:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8021674:	f8ad 2018 	strh.w	r2, [sp, #24]
 8021678:	f8ad 001a 	strh.w	r0, [sp, #26]
 802167c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021680:	f8ad 101e 	strh.w	r1, [sp, #30]
 8021684:	9600      	str	r6, [sp, #0]
 8021686:	4643      	mov	r3, r8
 8021688:	aa02      	add	r2, sp, #8
 802168a:	4649      	mov	r1, r9
 802168c:	4628      	mov	r0, r5
 802168e:	f7ff fd89 	bl	80211a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021692:	88a2      	ldrh	r2, [r4, #4]
 8021694:	8823      	ldrh	r3, [r4, #0]
 8021696:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 802169a:	4413      	add	r3, r2
 802169c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80216a0:	440a      	add	r2, r1
 80216a2:	b29b      	uxth	r3, r3
 80216a4:	b292      	uxth	r2, r2
 80216a6:	b211      	sxth	r1, r2
 80216a8:	b218      	sxth	r0, r3
 80216aa:	4288      	cmp	r0, r1
 80216ac:	dd13      	ble.n	80216d6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 80216ae:	1a9b      	subs	r3, r3, r2
 80216b0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80216b4:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80216b8:	f8ad 1018 	strh.w	r1, [sp, #24]
 80216bc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80216c0:	f8ad 001e 	strh.w	r0, [sp, #30]
 80216c4:	9600      	str	r6, [sp, #0]
 80216c6:	4643      	mov	r3, r8
 80216c8:	aa02      	add	r2, sp, #8
 80216ca:	4649      	mov	r1, r9
 80216cc:	4628      	mov	r0, r5
 80216ce:	f8ad 701a 	strh.w	r7, [sp, #26]
 80216d2:	f7ff fd67 	bl	80211a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80216d6:	88e2      	ldrh	r2, [r4, #6]
 80216d8:	8863      	ldrh	r3, [r4, #2]
 80216da:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80216de:	4413      	add	r3, r2
 80216e0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80216e4:	440a      	add	r2, r1
 80216e6:	b29b      	uxth	r3, r3
 80216e8:	b292      	uxth	r2, r2
 80216ea:	b211      	sxth	r1, r2
 80216ec:	b218      	sxth	r0, r3
 80216ee:	4288      	cmp	r0, r1
 80216f0:	f77f aec8 	ble.w	8021484 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80216f4:	f9b4 7000 	ldrsh.w	r7, [r4]
 80216f8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80216fc:	f8ad 7018 	strh.w	r7, [sp, #24]
 8021700:	1a9b      	subs	r3, r3, r2
 8021702:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021706:	f8ad 101a 	strh.w	r1, [sp, #26]
 802170a:	f8ad 001c 	strh.w	r0, [sp, #28]
 802170e:	9600      	str	r6, [sp, #0]
 8021710:	4643      	mov	r3, r8
 8021712:	e779      	b.n	8021608 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 8021714:	20013854 	.word	0x20013854

08021718 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8021718:	b180      	cbz	r0, 802173c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 802171a:	2903      	cmp	r1, #3
 802171c:	d81c      	bhi.n	8021758 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 802171e:	e8df f001 	tbb	[pc, r1]
 8021722:	1d02      	.short	0x1d02
 8021724:	1f08      	.short	0x1f08
 8021726:	4b10      	ldr	r3, [pc, #64]	; (8021768 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8021728:	8818      	ldrh	r0, [r3, #0]
 802172a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 802172e:	4240      	negs	r0, r0
 8021730:	4770      	bx	lr
 8021732:	4b0d      	ldr	r3, [pc, #52]	; (8021768 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8021734:	8818      	ldrh	r0, [r3, #0]
 8021736:	f3c0 000e 	ubfx	r0, r0, #0, #15
 802173a:	4770      	bx	lr
 802173c:	2903      	cmp	r1, #3
 802173e:	d80b      	bhi.n	8021758 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8021740:	a301      	add	r3, pc, #4	; (adr r3, 8021748 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8021742:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8021746:	bf00      	nop
 8021748:	0802175d 	.word	0x0802175d
 802174c:	08021733 	.word	0x08021733
 8021750:	08021761 	.word	0x08021761
 8021754:	08021727 	.word	0x08021727
 8021758:	2000      	movs	r0, #0
 802175a:	4770      	bx	lr
 802175c:	2001      	movs	r0, #1
 802175e:	4770      	bx	lr
 8021760:	f04f 30ff 	mov.w	r0, #4294967295
 8021764:	4770      	bx	lr
 8021766:	bf00      	nop
 8021768:	2001384e 	.word	0x2001384e

0802176c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 802176c:	b180      	cbz	r0, 8021790 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 802176e:	2903      	cmp	r1, #3
 8021770:	d81c      	bhi.n	80217ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8021772:	e8df f001 	tbb	[pc, r1]
 8021776:	021d      	.short	0x021d
 8021778:	071f      	.short	0x071f
 802177a:	4b10      	ldr	r3, [pc, #64]	; (80217bc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 802177c:	8818      	ldrh	r0, [r3, #0]
 802177e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021782:	4770      	bx	lr
 8021784:	4b0d      	ldr	r3, [pc, #52]	; (80217bc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8021786:	8818      	ldrh	r0, [r3, #0]
 8021788:	f3c0 000e 	ubfx	r0, r0, #0, #15
 802178c:	4240      	negs	r0, r0
 802178e:	4770      	bx	lr
 8021790:	2903      	cmp	r1, #3
 8021792:	d80b      	bhi.n	80217ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8021794:	a301      	add	r3, pc, #4	; (adr r3, 802179c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8021796:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 802179a:	bf00      	nop
 802179c:	0802177b 	.word	0x0802177b
 80217a0:	080217b5 	.word	0x080217b5
 80217a4:	08021785 	.word	0x08021785
 80217a8:	080217b1 	.word	0x080217b1
 80217ac:	2000      	movs	r0, #0
 80217ae:	4770      	bx	lr
 80217b0:	2001      	movs	r0, #1
 80217b2:	4770      	bx	lr
 80217b4:	f04f 30ff 	mov.w	r0, #4294967295
 80217b8:	4770      	bx	lr
 80217ba:	bf00      	nop
 80217bc:	2001384e 	.word	0x2001384e

080217c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80217c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80217c4:	b099      	sub	sp, #100	; 0x64
 80217c6:	910b      	str	r1, [sp, #44]	; 0x2c
 80217c8:	a914      	add	r1, sp, #80	; 0x50
 80217ca:	e881 000c 	stmia.w	r1, {r2, r3}
 80217ce:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 80217d2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 80217d6:	f891 900d 	ldrb.w	r9, [r1, #13]
 80217da:	9309      	str	r3, [sp, #36]	; 0x24
 80217dc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80217e0:	9310      	str	r3, [sp, #64]	; 0x40
 80217e2:	ea4f 1749 	mov.w	r7, r9, lsl #5
 80217e6:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 80217ea:	930c      	str	r3, [sp, #48]	; 0x30
 80217ec:	f407 7380 	and.w	r3, r7, #256	; 0x100
 80217f0:	798f      	ldrb	r7, [r1, #6]
 80217f2:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 80217f6:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 80217fa:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 80217fe:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8021802:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8021806:	431f      	orrs	r7, r3
 8021808:	f000 8195 	beq.w	8021b36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 802180c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8021810:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8021814:	f891 9007 	ldrb.w	r9, [r1, #7]
 8021818:	ea59 0903 	orrs.w	r9, r9, r3
 802181c:	f000 818b 	beq.w	8021b36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021820:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8021824:	b29b      	uxth	r3, r3
 8021826:	2d00      	cmp	r5, #0
 8021828:	f000 812e 	beq.w	8021a88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 802182c:	1aed      	subs	r5, r5, r3
 802182e:	b2ad      	uxth	r5, r5
 8021830:	042b      	lsls	r3, r5, #16
 8021832:	d502      	bpl.n	802183a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8021834:	1b64      	subs	r4, r4, r5
 8021836:	b224      	sxth	r4, r4
 8021838:	2500      	movs	r5, #0
 802183a:	f9b2 1000 	ldrsh.w	r1, [r2]
 802183e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8021842:	428c      	cmp	r4, r1
 8021844:	b28b      	uxth	r3, r1
 8021846:	bfbf      	itttt	lt
 8021848:	18ed      	addlt	r5, r5, r3
 802184a:	1b2c      	sublt	r4, r5, r4
 802184c:	b2a5      	uxthlt	r5, r4
 802184e:	460c      	movlt	r4, r1
 8021850:	8891      	ldrh	r1, [r2, #4]
 8021852:	440b      	add	r3, r1
 8021854:	b21b      	sxth	r3, r3
 8021856:	930f      	str	r3, [sp, #60]	; 0x3c
 8021858:	88d3      	ldrh	r3, [r2, #6]
 802185a:	8852      	ldrh	r2, [r2, #2]
 802185c:	4413      	add	r3, r2
 802185e:	b21b      	sxth	r3, r3
 8021860:	930d      	str	r3, [sp, #52]	; 0x34
 8021862:	4bbe      	ldr	r3, [pc, #760]	; (8021b5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8021864:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021866:	f893 b000 	ldrb.w	fp, [r3]
 802186a:	f10b 3cff 	add.w	ip, fp, #4294967295
 802186e:	f1dc 0300 	rsbs	r3, ip, #0
 8021872:	eb43 030c 	adc.w	r3, r3, ip
 8021876:	930e      	str	r3, [sp, #56]	; 0x38
 8021878:	4621      	mov	r1, r4
 802187a:	4653      	mov	r3, sl
 802187c:	a814      	add	r0, sp, #80	; 0x50
 802187e:	f7f6 fc90 	bl	80181a2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8021882:	4621      	mov	r1, r4
 8021884:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8021888:	4653      	mov	r3, sl
 802188a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802188c:	a814      	add	r0, sp, #80	; 0x50
 802188e:	f7f6 fca5 	bl	80181dc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8021892:	a918      	add	r1, sp, #96	; 0x60
 8021894:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8021898:	a817      	add	r0, sp, #92	; 0x5c
 802189a:	f7f6 fdcb 	bl	8018434 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 802189e:	f1ba 0f00 	cmp.w	sl, #0
 80218a2:	f040 80f4 	bne.w	8021a8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80218a6:	f1bb 0f01 	cmp.w	fp, #1
 80218aa:	f040 80f8 	bne.w	8021a9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 80218ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80218b0:	2b00      	cmp	r3, #0
 80218b2:	f040 8145 	bne.w	8021b40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 80218b6:	b2ba      	uxth	r2, r7
 80218b8:	b905      	cbnz	r5, 80218bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 80218ba:	b16e      	cbz	r6, 80218d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 80218bc:	fb06 5302 	mla	r3, r6, r2, r5
 80218c0:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80218c2:	fb08 f303 	mul.w	r3, r8, r3
 80218c6:	4631      	mov	r1, r6
 80218c8:	f003 0607 	and.w	r6, r3, #7
 80218cc:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 80218d0:	9328      	str	r3, [sp, #160]	; 0xa0
 80218d2:	eba9 0301 	sub.w	r3, r9, r1
 80218d6:	930a      	str	r3, [sp, #40]	; 0x28
 80218d8:	4651      	mov	r1, sl
 80218da:	980e      	ldr	r0, [sp, #56]	; 0x38
 80218dc:	f7ff ff1c 	bl	8021718 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80218e0:	4681      	mov	r9, r0
 80218e2:	980e      	ldr	r0, [sp, #56]	; 0x38
 80218e4:	f7ff ff42 	bl	802176c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80218e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80218ea:	9909      	ldr	r1, [sp, #36]	; 0x24
 80218ec:	eba3 0a01 	sub.w	sl, r3, r1
 80218f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80218f2:	459a      	cmp	sl, r3
 80218f4:	bfa8      	it	ge
 80218f6:	469a      	movge	sl, r3
 80218f8:	f1ba 0f00 	cmp.w	sl, #0
 80218fc:	4683      	mov	fp, r0
 80218fe:	f340 811a 	ble.w	8021b36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021902:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021904:	1b64      	subs	r4, r4, r5
 8021906:	1b1c      	subs	r4, r3, r4
 8021908:	42bc      	cmp	r4, r7
 802190a:	bfd4      	ite	le
 802190c:	ebc5 0504 	rsble	r5, r5, r4
 8021910:	ebc5 0507 	rsbgt	r5, r5, r7
 8021914:	2d00      	cmp	r5, #0
 8021916:	f340 810e 	ble.w	8021b36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 802191a:	1b52      	subs	r2, r2, r5
 802191c:	fb08 f302 	mul.w	r3, r8, r2
 8021920:	930f      	str	r3, [sp, #60]	; 0x3c
 8021922:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021924:	2b00      	cmp	r3, #0
 8021926:	f040 8116 	bne.w	8021b56 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 802192a:	4b8d      	ldr	r3, [pc, #564]	; (8021b60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 802192c:	6818      	ldr	r0, [r3, #0]
 802192e:	6803      	ldr	r3, [r0, #0]
 8021930:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021932:	4798      	blx	r3
 8021934:	2301      	movs	r3, #1
 8021936:	fa03 f308 	lsl.w	r3, r3, r8
 802193a:	4a8a      	ldr	r2, [pc, #552]	; (8021b64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 802193c:	3b01      	subs	r3, #1
 802193e:	b2db      	uxtb	r3, r3
 8021940:	8811      	ldrh	r1, [r2, #0]
 8021942:	930e      	str	r3, [sp, #56]	; 0x38
 8021944:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8021948:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 802194c:	fb01 2303 	mla	r3, r1, r3, r2
 8021950:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8021954:	930a      	str	r3, [sp, #40]	; 0x28
 8021956:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021958:	f3c3 4307 	ubfx	r3, r3, #16, #8
 802195c:	9313      	str	r3, [sp, #76]	; 0x4c
 802195e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021960:	0a19      	lsrs	r1, r3, #8
 8021962:	b2cb      	uxtb	r3, r1
 8021964:	9312      	str	r3, [sp, #72]	; 0x48
 8021966:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021968:	b2db      	uxtb	r3, r3
 802196a:	9311      	str	r3, [sp, #68]	; 0x44
 802196c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802196e:	095a      	lsrs	r2, r3, #5
 8021970:	4b7d      	ldr	r3, [pc, #500]	; (8021b68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8021972:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021976:	400b      	ands	r3, r1
 8021978:	4313      	orrs	r3, r2
 802197a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 802197c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021980:	4313      	orrs	r3, r2
 8021982:	b29b      	uxth	r3, r3
 8021984:	9310      	str	r3, [sp, #64]	; 0x40
 8021986:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021988:	781a      	ldrb	r2, [r3, #0]
 802198a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 802198e:	4132      	asrs	r2, r6
 8021990:	fb05 b919 	mls	r9, r5, r9, fp
 8021994:	fb03 fb05 	mul.w	fp, r3, r5
 8021998:	b2d2      	uxtb	r2, r2
 802199a:	930d      	str	r3, [sp, #52]	; 0x34
 802199c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80219a0:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80219a4:	f0c0 80f5 	bcc.w	8021b92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 80219a8:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 80219ac:	46ae      	mov	lr, r5
 80219ae:	f11e 3eff 	adds.w	lr, lr, #4294967295
 80219b2:	f0c0 80dd 	bcc.w	8021b70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 80219b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80219b8:	4013      	ands	r3, r2
 80219ba:	d055      	beq.n	8021a68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 80219bc:	20ff      	movs	r0, #255	; 0xff
 80219be:	990e      	ldr	r1, [sp, #56]	; 0x38
 80219c0:	fb90 f1f1 	sdiv	r1, r0, r1
 80219c4:	434b      	muls	r3, r1
 80219c6:	2bfe      	cmp	r3, #254	; 0xfe
 80219c8:	dd03      	ble.n	80219d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 80219ca:	990c      	ldr	r1, [sp, #48]	; 0x30
 80219cc:	4281      	cmp	r1, r0
 80219ce:	f000 80cd 	beq.w	8021b6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 80219d2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80219d4:	f8bc 4000 	ldrh.w	r4, [ip]
 80219d8:	fb11 f303 	smulbb	r3, r1, r3
 80219dc:	b29b      	uxth	r3, r3
 80219de:	1c59      	adds	r1, r3, #1
 80219e0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80219e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80219e8:	b29f      	uxth	r7, r3
 80219ea:	43db      	mvns	r3, r3
 80219ec:	b2db      	uxtb	r3, r3
 80219ee:	9309      	str	r3, [sp, #36]	; 0x24
 80219f0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80219f2:	1220      	asrs	r0, r4, #8
 80219f4:	fb13 f907 	smulbb	r9, r3, r7
 80219f8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80219fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80219fe:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8021a02:	fb00 9003 	mla	r0, r0, r3, r9
 8021a06:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8021a08:	10e1      	asrs	r1, r4, #3
 8021a0a:	fb13 f907 	smulbb	r9, r3, r7
 8021a0e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021a12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021a14:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8021a18:	fb01 9103 	mla	r1, r1, r3, r9
 8021a1c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021a1e:	00e4      	lsls	r4, r4, #3
 8021a20:	fb13 f707 	smulbb	r7, r3, r7
 8021a24:	b2e4      	uxtb	r4, r4
 8021a26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021a28:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021a2c:	fb04 7403 	mla	r4, r4, r3, r7
 8021a30:	b280      	uxth	r0, r0
 8021a32:	b2a4      	uxth	r4, r4
 8021a34:	1c43      	adds	r3, r0, #1
 8021a36:	f104 0901 	add.w	r9, r4, #1
 8021a3a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021a3e:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8021a42:	b289      	uxth	r1, r1
 8021a44:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8021a48:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021a4c:	ea49 0000 	orr.w	r0, r9, r0
 8021a50:	f101 0901 	add.w	r9, r1, #1
 8021a54:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8021a58:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021a5c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021a60:	ea40 0009 	orr.w	r0, r0, r9
 8021a64:	f8ac 0000 	strh.w	r0, [ip]
 8021a68:	4446      	add	r6, r8
 8021a6a:	b2b6      	uxth	r6, r6
 8021a6c:	2e07      	cmp	r6, #7
 8021a6e:	bf81      	itttt	hi
 8021a70:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8021a72:	785a      	ldrbhi	r2, [r3, #1]
 8021a74:	3301      	addhi	r3, #1
 8021a76:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8021a78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021a7a:	bf9a      	itte	ls
 8021a7c:	fa42 f208 	asrls.w	r2, r2, r8
 8021a80:	b2d2      	uxtbls	r2, r2
 8021a82:	2600      	movhi	r6, #0
 8021a84:	449c      	add	ip, r3
 8021a86:	e792      	b.n	80219ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8021a88:	441c      	add	r4, r3
 8021a8a:	b224      	sxth	r4, r4
 8021a8c:	e6d5      	b.n	802183a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8021a8e:	f1ba 0f01 	cmp.w	sl, #1
 8021a92:	f47f af0c 	bne.w	80218ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021a96:	f1bb 0f01 	cmp.w	fp, #1
 8021a9a:	f47f af08 	bne.w	80218ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021a9e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8021b60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8021aa2:	f8db 0000 	ldr.w	r0, [fp]
 8021aa6:	6803      	ldr	r3, [r0, #0]
 8021aa8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021aaa:	4798      	blx	r3
 8021aac:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8021ab0:	465a      	mov	r2, fp
 8021ab2:	d006      	beq.n	8021ac2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021ab4:	f1b8 0f04 	cmp.w	r8, #4
 8021ab8:	d140      	bne.n	8021b3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8021aba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021abc:	3300      	adds	r3, #0
 8021abe:	bf18      	it	ne
 8021ac0:	2301      	movne	r3, #1
 8021ac2:	0580      	lsls	r0, r0, #22
 8021ac4:	d56e      	bpl.n	8021ba4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021ac6:	f1b8 0f08 	cmp.w	r8, #8
 8021aca:	d16b      	bne.n	8021ba4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021acc:	2b00      	cmp	r3, #0
 8021ace:	bf0c      	ite	eq
 8021ad0:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8021ad4:	f44f 7180 	movne.w	r1, #256	; 0x100
 8021ad8:	2d00      	cmp	r5, #0
 8021ada:	f47f aee8 	bne.w	80218ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021ade:	2e00      	cmp	r6, #0
 8021ae0:	f47f aee5 	bne.w	80218ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021ae4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021ae6:	19e3      	adds	r3, r4, r7
 8021ae8:	4283      	cmp	r3, r0
 8021aea:	f73f aee0 	bgt.w	80218ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021aee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021af0:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021af2:	444b      	add	r3, r9
 8021af4:	4283      	cmp	r3, r0
 8021af6:	f73f aeda 	bgt.w	80218ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021afa:	6810      	ldr	r0, [r2, #0]
 8021afc:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8021b00:	6804      	ldr	r4, [r0, #0]
 8021b02:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8021b06:	b2bf      	uxth	r7, r7
 8021b08:	f1b8 0f08 	cmp.w	r8, #8
 8021b0c:	f04f 0500 	mov.w	r5, #0
 8021b10:	bf18      	it	ne
 8021b12:	3701      	addne	r7, #1
 8021b14:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8021b18:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021b1a:	9104      	str	r1, [sp, #16]
 8021b1c:	bf18      	it	ne
 8021b1e:	f027 0701 	bicne.w	r7, r7, #1
 8021b22:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8021b24:	bf18      	it	ne
 8021b26:	b2bf      	uxthne	r7, r7
 8021b28:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8021b2c:	e9cd 7900 	strd	r7, r9, [sp]
 8021b30:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021b32:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8021b34:	47a0      	blx	r4
 8021b36:	b019      	add	sp, #100	; 0x64
 8021b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021b3c:	2300      	movs	r3, #0
 8021b3e:	e7c0      	b.n	8021ac2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021b40:	2208      	movs	r2, #8
 8021b42:	fb92 f3f8 	sdiv	r3, r2, r8
 8021b46:	1e5a      	subs	r2, r3, #1
 8021b48:	443a      	add	r2, r7
 8021b4a:	fb92 f2f3 	sdiv	r2, r2, r3
 8021b4e:	fb12 f203 	smulbb	r2, r2, r3
 8021b52:	b292      	uxth	r2, r2
 8021b54:	e6b0      	b.n	80218b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8021b56:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021b58:	e6ec      	b.n	8021934 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8021b5a:	bf00      	nop
 8021b5c:	2001384c 	.word	0x2001384c
 8021b60:	20013854 	.word	0x20013854
 8021b64:	2001384e 	.word	0x2001384e
 8021b68:	00fff800 	.word	0x00fff800
 8021b6c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8021b6e:	e779      	b.n	8021a64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8021b70:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021b72:	b153      	cbz	r3, 8021b8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8021b74:	441e      	add	r6, r3
 8021b76:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021b78:	b2b6      	uxth	r6, r6
 8021b7a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8021b7e:	f006 0607 	and.w	r6, r6, #7
 8021b82:	781a      	ldrb	r2, [r3, #0]
 8021b84:	9328      	str	r3, [sp, #160]	; 0xa0
 8021b86:	4132      	asrs	r2, r6
 8021b88:	b2d2      	uxtb	r2, r2
 8021b8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021b8c:	445b      	add	r3, fp
 8021b8e:	930a      	str	r3, [sp, #40]	; 0x28
 8021b90:	e706      	b.n	80219a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8021b92:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021b94:	2b00      	cmp	r3, #0
 8021b96:	d1ce      	bne.n	8021b36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021b98:	4b05      	ldr	r3, [pc, #20]	; (8021bb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8021b9a:	6818      	ldr	r0, [r3, #0]
 8021b9c:	6803      	ldr	r3, [r0, #0]
 8021b9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021ba0:	4798      	blx	r3
 8021ba2:	e7c8      	b.n	8021b36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021ba4:	2b00      	cmp	r3, #0
 8021ba6:	f43f ae82 	beq.w	80218ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021baa:	f44f 7180 	mov.w	r1, #256	; 0x100
 8021bae:	e793      	b.n	8021ad8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8021bb0:	20013854 	.word	0x20013854

08021bb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8021bb4:	b538      	push	{r3, r4, r5, lr}
 8021bb6:	4c15      	ldr	r4, [pc, #84]	; (8021c0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8021bb8:	7823      	ldrb	r3, [r4, #0]
 8021bba:	f3bf 8f5b 	dmb	ish
 8021bbe:	07da      	lsls	r2, r3, #31
 8021bc0:	4605      	mov	r5, r0
 8021bc2:	d40b      	bmi.n	8021bdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021bc4:	4620      	mov	r0, r4
 8021bc6:	f00a ff16 	bl	802c9f6 <__cxa_guard_acquire>
 8021bca:	b138      	cbz	r0, 8021bdc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021bcc:	4620      	mov	r0, r4
 8021bce:	f00a ff1e 	bl	802ca0e <__cxa_guard_release>
 8021bd2:	4a0f      	ldr	r2, [pc, #60]	; (8021c10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021bd4:	490f      	ldr	r1, [pc, #60]	; (8021c14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8021bd6:	4810      	ldr	r0, [pc, #64]	; (8021c18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021bd8:	f00a ff06 	bl	802c9e8 <__aeabi_atexit>
 8021bdc:	4c0f      	ldr	r4, [pc, #60]	; (8021c1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8021bde:	7823      	ldrb	r3, [r4, #0]
 8021be0:	f3bf 8f5b 	dmb	ish
 8021be4:	07db      	lsls	r3, r3, #31
 8021be6:	d40b      	bmi.n	8021c00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021be8:	4620      	mov	r0, r4
 8021bea:	f00a ff04 	bl	802c9f6 <__cxa_guard_acquire>
 8021bee:	b138      	cbz	r0, 8021c00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021bf0:	4620      	mov	r0, r4
 8021bf2:	f00a ff0c 	bl	802ca0e <__cxa_guard_release>
 8021bf6:	4a06      	ldr	r2, [pc, #24]	; (8021c10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021bf8:	4909      	ldr	r1, [pc, #36]	; (8021c20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8021bfa:	480a      	ldr	r0, [pc, #40]	; (8021c24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021bfc:	f00a fef4 	bl	802c9e8 <__aeabi_atexit>
 8021c00:	4b05      	ldr	r3, [pc, #20]	; (8021c18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021c02:	612b      	str	r3, [r5, #16]
 8021c04:	4b07      	ldr	r3, [pc, #28]	; (8021c24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021c06:	616b      	str	r3, [r5, #20]
 8021c08:	bd38      	pop	{r3, r4, r5, pc}
 8021c0a:	bf00      	nop
 8021c0c:	20013934 	.word	0x20013934
 8021c10:	20000000 	.word	0x20000000
 8021c14:	0801e9b7 	.word	0x0801e9b7
 8021c18:	200000d8 	.word	0x200000d8
 8021c1c:	20013938 	.word	0x20013938
 8021c20:	0801e9b5 	.word	0x0801e9b5
 8021c24:	200000dc 	.word	0x200000dc

08021c28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8021c28:	b538      	push	{r3, r4, r5, lr}
 8021c2a:	4c15      	ldr	r4, [pc, #84]	; (8021c80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8021c2c:	7823      	ldrb	r3, [r4, #0]
 8021c2e:	f3bf 8f5b 	dmb	ish
 8021c32:	07da      	lsls	r2, r3, #31
 8021c34:	4605      	mov	r5, r0
 8021c36:	d40b      	bmi.n	8021c50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021c38:	4620      	mov	r0, r4
 8021c3a:	f00a fedc 	bl	802c9f6 <__cxa_guard_acquire>
 8021c3e:	b138      	cbz	r0, 8021c50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021c40:	4620      	mov	r0, r4
 8021c42:	f00a fee4 	bl	802ca0e <__cxa_guard_release>
 8021c46:	4a0f      	ldr	r2, [pc, #60]	; (8021c84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021c48:	490f      	ldr	r1, [pc, #60]	; (8021c88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8021c4a:	4810      	ldr	r0, [pc, #64]	; (8021c8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021c4c:	f00a fecc 	bl	802c9e8 <__aeabi_atexit>
 8021c50:	4c0f      	ldr	r4, [pc, #60]	; (8021c90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8021c52:	7823      	ldrb	r3, [r4, #0]
 8021c54:	f3bf 8f5b 	dmb	ish
 8021c58:	07db      	lsls	r3, r3, #31
 8021c5a:	d40b      	bmi.n	8021c74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021c5c:	4620      	mov	r0, r4
 8021c5e:	f00a feca 	bl	802c9f6 <__cxa_guard_acquire>
 8021c62:	b138      	cbz	r0, 8021c74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021c64:	4620      	mov	r0, r4
 8021c66:	f00a fed2 	bl	802ca0e <__cxa_guard_release>
 8021c6a:	4a06      	ldr	r2, [pc, #24]	; (8021c84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021c6c:	4909      	ldr	r1, [pc, #36]	; (8021c94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8021c6e:	480a      	ldr	r0, [pc, #40]	; (8021c98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021c70:	f00a feba 	bl	802c9e8 <__aeabi_atexit>
 8021c74:	4b05      	ldr	r3, [pc, #20]	; (8021c8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021c76:	60ab      	str	r3, [r5, #8]
 8021c78:	4b07      	ldr	r3, [pc, #28]	; (8021c98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021c7a:	60eb      	str	r3, [r5, #12]
 8021c7c:	bd38      	pop	{r3, r4, r5, pc}
 8021c7e:	bf00      	nop
 8021c80:	2001390c 	.word	0x2001390c
 8021c84:	20000000 	.word	0x20000000
 8021c88:	0801e9bb 	.word	0x0801e9bb
 8021c8c:	200000b0 	.word	0x200000b0
 8021c90:	20013910 	.word	0x20013910
 8021c94:	0801e9b9 	.word	0x0801e9b9
 8021c98:	200000b4 	.word	0x200000b4

08021c9c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8021c9c:	b510      	push	{r4, lr}
 8021c9e:	4604      	mov	r4, r0
 8021ca0:	f7ff ff88 	bl	8021bb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8021ca4:	4620      	mov	r0, r4
 8021ca6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021caa:	f7ff bfbd 	b.w	8021c28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08021cb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8021cb0:	b538      	push	{r3, r4, r5, lr}
 8021cb2:	4c15      	ldr	r4, [pc, #84]	; (8021d08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8021cb4:	7823      	ldrb	r3, [r4, #0]
 8021cb6:	f3bf 8f5b 	dmb	ish
 8021cba:	07da      	lsls	r2, r3, #31
 8021cbc:	4605      	mov	r5, r0
 8021cbe:	d40b      	bmi.n	8021cd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021cc0:	4620      	mov	r0, r4
 8021cc2:	f00a fe98 	bl	802c9f6 <__cxa_guard_acquire>
 8021cc6:	b138      	cbz	r0, 8021cd8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021cc8:	4620      	mov	r0, r4
 8021cca:	f00a fea0 	bl	802ca0e <__cxa_guard_release>
 8021cce:	4a0f      	ldr	r2, [pc, #60]	; (8021d0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021cd0:	490f      	ldr	r1, [pc, #60]	; (8021d10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8021cd2:	4810      	ldr	r0, [pc, #64]	; (8021d14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021cd4:	f00a fe88 	bl	802c9e8 <__aeabi_atexit>
 8021cd8:	4c0f      	ldr	r4, [pc, #60]	; (8021d18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8021cda:	7823      	ldrb	r3, [r4, #0]
 8021cdc:	f3bf 8f5b 	dmb	ish
 8021ce0:	07db      	lsls	r3, r3, #31
 8021ce2:	d40b      	bmi.n	8021cfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021ce4:	4620      	mov	r0, r4
 8021ce6:	f00a fe86 	bl	802c9f6 <__cxa_guard_acquire>
 8021cea:	b138      	cbz	r0, 8021cfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021cec:	4620      	mov	r0, r4
 8021cee:	f00a fe8e 	bl	802ca0e <__cxa_guard_release>
 8021cf2:	4a06      	ldr	r2, [pc, #24]	; (8021d0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021cf4:	4909      	ldr	r1, [pc, #36]	; (8021d1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8021cf6:	480a      	ldr	r0, [pc, #40]	; (8021d20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021cf8:	f00a fe76 	bl	802c9e8 <__aeabi_atexit>
 8021cfc:	4b05      	ldr	r3, [pc, #20]	; (8021d14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021cfe:	622b      	str	r3, [r5, #32]
 8021d00:	4b07      	ldr	r3, [pc, #28]	; (8021d20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021d02:	626b      	str	r3, [r5, #36]	; 0x24
 8021d04:	bd38      	pop	{r3, r4, r5, pc}
 8021d06:	bf00      	nop
 8021d08:	2001393c 	.word	0x2001393c
 8021d0c:	20000000 	.word	0x20000000
 8021d10:	0801e9af 	.word	0x0801e9af
 8021d14:	200000e0 	.word	0x200000e0
 8021d18:	20013940 	.word	0x20013940
 8021d1c:	0801e9ad 	.word	0x0801e9ad
 8021d20:	200000e4 	.word	0x200000e4

08021d24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8021d24:	b538      	push	{r3, r4, r5, lr}
 8021d26:	4c15      	ldr	r4, [pc, #84]	; (8021d7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8021d28:	7823      	ldrb	r3, [r4, #0]
 8021d2a:	f3bf 8f5b 	dmb	ish
 8021d2e:	07da      	lsls	r2, r3, #31
 8021d30:	4605      	mov	r5, r0
 8021d32:	d40b      	bmi.n	8021d4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021d34:	4620      	mov	r0, r4
 8021d36:	f00a fe5e 	bl	802c9f6 <__cxa_guard_acquire>
 8021d3a:	b138      	cbz	r0, 8021d4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021d3c:	4620      	mov	r0, r4
 8021d3e:	f00a fe66 	bl	802ca0e <__cxa_guard_release>
 8021d42:	4a0f      	ldr	r2, [pc, #60]	; (8021d80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021d44:	490f      	ldr	r1, [pc, #60]	; (8021d84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8021d46:	4810      	ldr	r0, [pc, #64]	; (8021d88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8021d48:	f00a fe4e 	bl	802c9e8 <__aeabi_atexit>
 8021d4c:	4c0f      	ldr	r4, [pc, #60]	; (8021d8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8021d4e:	7823      	ldrb	r3, [r4, #0]
 8021d50:	f3bf 8f5b 	dmb	ish
 8021d54:	07db      	lsls	r3, r3, #31
 8021d56:	d40b      	bmi.n	8021d70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8021d58:	4620      	mov	r0, r4
 8021d5a:	f00a fe4c 	bl	802c9f6 <__cxa_guard_acquire>
 8021d5e:	b138      	cbz	r0, 8021d70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8021d60:	4620      	mov	r0, r4
 8021d62:	f00a fe54 	bl	802ca0e <__cxa_guard_release>
 8021d66:	4a06      	ldr	r2, [pc, #24]	; (8021d80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021d68:	4909      	ldr	r1, [pc, #36]	; (8021d90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8021d6a:	480a      	ldr	r0, [pc, #40]	; (8021d94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8021d6c:	f00a fe3c 	bl	802c9e8 <__aeabi_atexit>
 8021d70:	4b05      	ldr	r3, [pc, #20]	; (8021d88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8021d72:	61ab      	str	r3, [r5, #24]
 8021d74:	4b07      	ldr	r3, [pc, #28]	; (8021d94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8021d76:	61eb      	str	r3, [r5, #28]
 8021d78:	bd38      	pop	{r3, r4, r5, pc}
 8021d7a:	bf00      	nop
 8021d7c:	20013914 	.word	0x20013914
 8021d80:	20000000 	.word	0x20000000
 8021d84:	0801e9b3 	.word	0x0801e9b3
 8021d88:	200000b8 	.word	0x200000b8
 8021d8c:	20013918 	.word	0x20013918
 8021d90:	0801e9b1 	.word	0x0801e9b1
 8021d94:	200000bc 	.word	0x200000bc

08021d98 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8021d98:	b510      	push	{r4, lr}
 8021d9a:	4604      	mov	r4, r0
 8021d9c:	f7ff ff88 	bl	8021cb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8021da0:	4620      	mov	r0, r4
 8021da2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021da6:	f7ff bfbd 	b.w	8021d24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08021dac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8021dac:	b538      	push	{r3, r4, r5, lr}
 8021dae:	4c15      	ldr	r4, [pc, #84]	; (8021e04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8021db0:	7823      	ldrb	r3, [r4, #0]
 8021db2:	f3bf 8f5b 	dmb	ish
 8021db6:	07da      	lsls	r2, r3, #31
 8021db8:	4605      	mov	r5, r0
 8021dba:	d40b      	bmi.n	8021dd4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8021dbc:	4620      	mov	r0, r4
 8021dbe:	f00a fe1a 	bl	802c9f6 <__cxa_guard_acquire>
 8021dc2:	b138      	cbz	r0, 8021dd4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8021dc4:	4620      	mov	r0, r4
 8021dc6:	f00a fe22 	bl	802ca0e <__cxa_guard_release>
 8021dca:	4a0f      	ldr	r2, [pc, #60]	; (8021e08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8021dcc:	490f      	ldr	r1, [pc, #60]	; (8021e0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8021dce:	4810      	ldr	r0, [pc, #64]	; (8021e10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8021dd0:	f00a fe0a 	bl	802c9e8 <__aeabi_atexit>
 8021dd4:	4c0f      	ldr	r4, [pc, #60]	; (8021e14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8021dd6:	7823      	ldrb	r3, [r4, #0]
 8021dd8:	f3bf 8f5b 	dmb	ish
 8021ddc:	07db      	lsls	r3, r3, #31
 8021dde:	d40b      	bmi.n	8021df8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8021de0:	4620      	mov	r0, r4
 8021de2:	f00a fe08 	bl	802c9f6 <__cxa_guard_acquire>
 8021de6:	b138      	cbz	r0, 8021df8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8021de8:	4620      	mov	r0, r4
 8021dea:	f00a fe10 	bl	802ca0e <__cxa_guard_release>
 8021dee:	4a06      	ldr	r2, [pc, #24]	; (8021e08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8021df0:	4909      	ldr	r1, [pc, #36]	; (8021e18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8021df2:	480a      	ldr	r0, [pc, #40]	; (8021e1c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8021df4:	f00a fdf8 	bl	802c9e8 <__aeabi_atexit>
 8021df8:	4b05      	ldr	r3, [pc, #20]	; (8021e10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8021dfa:	632b      	str	r3, [r5, #48]	; 0x30
 8021dfc:	4b07      	ldr	r3, [pc, #28]	; (8021e1c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8021dfe:	636b      	str	r3, [r5, #52]	; 0x34
 8021e00:	bd38      	pop	{r3, r4, r5, pc}
 8021e02:	bf00      	nop
 8021e04:	2001394c 	.word	0x2001394c
 8021e08:	20000000 	.word	0x20000000
 8021e0c:	0801e9a7 	.word	0x0801e9a7
 8021e10:	200000f0 	.word	0x200000f0
 8021e14:	20013950 	.word	0x20013950
 8021e18:	0801e9a5 	.word	0x0801e9a5
 8021e1c:	200000f4 	.word	0x200000f4

08021e20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8021e20:	b538      	push	{r3, r4, r5, lr}
 8021e22:	4c15      	ldr	r4, [pc, #84]	; (8021e78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8021e24:	7823      	ldrb	r3, [r4, #0]
 8021e26:	f3bf 8f5b 	dmb	ish
 8021e2a:	07da      	lsls	r2, r3, #31
 8021e2c:	4605      	mov	r5, r0
 8021e2e:	d40b      	bmi.n	8021e48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8021e30:	4620      	mov	r0, r4
 8021e32:	f00a fde0 	bl	802c9f6 <__cxa_guard_acquire>
 8021e36:	b138      	cbz	r0, 8021e48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8021e38:	4620      	mov	r0, r4
 8021e3a:	f00a fde8 	bl	802ca0e <__cxa_guard_release>
 8021e3e:	4a0f      	ldr	r2, [pc, #60]	; (8021e7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8021e40:	490f      	ldr	r1, [pc, #60]	; (8021e80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8021e42:	4810      	ldr	r0, [pc, #64]	; (8021e84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8021e44:	f00a fdd0 	bl	802c9e8 <__aeabi_atexit>
 8021e48:	4c0f      	ldr	r4, [pc, #60]	; (8021e88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8021e4a:	7823      	ldrb	r3, [r4, #0]
 8021e4c:	f3bf 8f5b 	dmb	ish
 8021e50:	07db      	lsls	r3, r3, #31
 8021e52:	d40b      	bmi.n	8021e6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8021e54:	4620      	mov	r0, r4
 8021e56:	f00a fdce 	bl	802c9f6 <__cxa_guard_acquire>
 8021e5a:	b138      	cbz	r0, 8021e6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8021e5c:	4620      	mov	r0, r4
 8021e5e:	f00a fdd6 	bl	802ca0e <__cxa_guard_release>
 8021e62:	4a06      	ldr	r2, [pc, #24]	; (8021e7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8021e64:	4909      	ldr	r1, [pc, #36]	; (8021e8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8021e66:	480a      	ldr	r0, [pc, #40]	; (8021e90 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8021e68:	f00a fdbe 	bl	802c9e8 <__aeabi_atexit>
 8021e6c:	4b05      	ldr	r3, [pc, #20]	; (8021e84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8021e6e:	62ab      	str	r3, [r5, #40]	; 0x28
 8021e70:	4b07      	ldr	r3, [pc, #28]	; (8021e90 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8021e72:	62eb      	str	r3, [r5, #44]	; 0x2c
 8021e74:	bd38      	pop	{r3, r4, r5, pc}
 8021e76:	bf00      	nop
 8021e78:	2001391c 	.word	0x2001391c
 8021e7c:	20000000 	.word	0x20000000
 8021e80:	0801e9ab 	.word	0x0801e9ab
 8021e84:	200000c0 	.word	0x200000c0
 8021e88:	20013920 	.word	0x20013920
 8021e8c:	0801e9a9 	.word	0x0801e9a9
 8021e90:	200000c4 	.word	0x200000c4

08021e94 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8021e94:	b510      	push	{r4, lr}
 8021e96:	4604      	mov	r4, r0
 8021e98:	f7ff ff88 	bl	8021dac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8021e9c:	4620      	mov	r0, r4
 8021e9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021ea2:	f7ff bfbd 	b.w	8021e20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08021ea8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8021ea8:	b538      	push	{r3, r4, r5, lr}
 8021eaa:	4c15      	ldr	r4, [pc, #84]	; (8021f00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8021eac:	7823      	ldrb	r3, [r4, #0]
 8021eae:	f3bf 8f5b 	dmb	ish
 8021eb2:	07da      	lsls	r2, r3, #31
 8021eb4:	4605      	mov	r5, r0
 8021eb6:	d40b      	bmi.n	8021ed0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8021eb8:	4620      	mov	r0, r4
 8021eba:	f00a fd9c 	bl	802c9f6 <__cxa_guard_acquire>
 8021ebe:	b138      	cbz	r0, 8021ed0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8021ec0:	4620      	mov	r0, r4
 8021ec2:	f00a fda4 	bl	802ca0e <__cxa_guard_release>
 8021ec6:	4a0f      	ldr	r2, [pc, #60]	; (8021f04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8021ec8:	490f      	ldr	r1, [pc, #60]	; (8021f08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8021eca:	4810      	ldr	r0, [pc, #64]	; (8021f0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8021ecc:	f00a fd8c 	bl	802c9e8 <__aeabi_atexit>
 8021ed0:	4c0f      	ldr	r4, [pc, #60]	; (8021f10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8021ed2:	7823      	ldrb	r3, [r4, #0]
 8021ed4:	f3bf 8f5b 	dmb	ish
 8021ed8:	07db      	lsls	r3, r3, #31
 8021eda:	d40b      	bmi.n	8021ef4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8021edc:	4620      	mov	r0, r4
 8021ede:	f00a fd8a 	bl	802c9f6 <__cxa_guard_acquire>
 8021ee2:	b138      	cbz	r0, 8021ef4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8021ee4:	4620      	mov	r0, r4
 8021ee6:	f00a fd92 	bl	802ca0e <__cxa_guard_release>
 8021eea:	4a06      	ldr	r2, [pc, #24]	; (8021f04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8021eec:	4909      	ldr	r1, [pc, #36]	; (8021f14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8021eee:	480a      	ldr	r0, [pc, #40]	; (8021f18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8021ef0:	f00a fd7a 	bl	802c9e8 <__aeabi_atexit>
 8021ef4:	4b05      	ldr	r3, [pc, #20]	; (8021f0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8021ef6:	652b      	str	r3, [r5, #80]	; 0x50
 8021ef8:	4b07      	ldr	r3, [pc, #28]	; (8021f18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8021efa:	656b      	str	r3, [r5, #84]	; 0x54
 8021efc:	bd38      	pop	{r3, r4, r5, pc}
 8021efe:	bf00      	nop
 8021f00:	20013954 	.word	0x20013954
 8021f04:	20000000 	.word	0x20000000
 8021f08:	0801e997 	.word	0x0801e997
 8021f0c:	200000f8 	.word	0x200000f8
 8021f10:	20013958 	.word	0x20013958
 8021f14:	0801e995 	.word	0x0801e995
 8021f18:	200000fc 	.word	0x200000fc

08021f1c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8021f1c:	b538      	push	{r3, r4, r5, lr}
 8021f1e:	4c15      	ldr	r4, [pc, #84]	; (8021f74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8021f20:	7823      	ldrb	r3, [r4, #0]
 8021f22:	f3bf 8f5b 	dmb	ish
 8021f26:	07da      	lsls	r2, r3, #31
 8021f28:	4605      	mov	r5, r0
 8021f2a:	d40b      	bmi.n	8021f44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8021f2c:	4620      	mov	r0, r4
 8021f2e:	f00a fd62 	bl	802c9f6 <__cxa_guard_acquire>
 8021f32:	b138      	cbz	r0, 8021f44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8021f34:	4620      	mov	r0, r4
 8021f36:	f00a fd6a 	bl	802ca0e <__cxa_guard_release>
 8021f3a:	4a0f      	ldr	r2, [pc, #60]	; (8021f78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8021f3c:	490f      	ldr	r1, [pc, #60]	; (8021f7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8021f3e:	4810      	ldr	r0, [pc, #64]	; (8021f80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8021f40:	f00a fd52 	bl	802c9e8 <__aeabi_atexit>
 8021f44:	4c0f      	ldr	r4, [pc, #60]	; (8021f84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8021f46:	7823      	ldrb	r3, [r4, #0]
 8021f48:	f3bf 8f5b 	dmb	ish
 8021f4c:	07db      	lsls	r3, r3, #31
 8021f4e:	d40b      	bmi.n	8021f68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8021f50:	4620      	mov	r0, r4
 8021f52:	f00a fd50 	bl	802c9f6 <__cxa_guard_acquire>
 8021f56:	b138      	cbz	r0, 8021f68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8021f58:	4620      	mov	r0, r4
 8021f5a:	f00a fd58 	bl	802ca0e <__cxa_guard_release>
 8021f5e:	4a06      	ldr	r2, [pc, #24]	; (8021f78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8021f60:	4909      	ldr	r1, [pc, #36]	; (8021f88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8021f62:	480a      	ldr	r0, [pc, #40]	; (8021f8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8021f64:	f00a fd40 	bl	802c9e8 <__aeabi_atexit>
 8021f68:	4b05      	ldr	r3, [pc, #20]	; (8021f80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8021f6a:	64ab      	str	r3, [r5, #72]	; 0x48
 8021f6c:	4b07      	ldr	r3, [pc, #28]	; (8021f8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8021f6e:	64eb      	str	r3, [r5, #76]	; 0x4c
 8021f70:	bd38      	pop	{r3, r4, r5, pc}
 8021f72:	bf00      	nop
 8021f74:	2001395c 	.word	0x2001395c
 8021f78:	20000000 	.word	0x20000000
 8021f7c:	0801e99b 	.word	0x0801e99b
 8021f80:	20000100 	.word	0x20000100
 8021f84:	20013960 	.word	0x20013960
 8021f88:	0801e999 	.word	0x0801e999
 8021f8c:	20000104 	.word	0x20000104

08021f90 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8021f90:	b538      	push	{r3, r4, r5, lr}
 8021f92:	4c15      	ldr	r4, [pc, #84]	; (8021fe8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8021f94:	7823      	ldrb	r3, [r4, #0]
 8021f96:	f3bf 8f5b 	dmb	ish
 8021f9a:	07da      	lsls	r2, r3, #31
 8021f9c:	4605      	mov	r5, r0
 8021f9e:	d40b      	bmi.n	8021fb8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8021fa0:	4620      	mov	r0, r4
 8021fa2:	f00a fd28 	bl	802c9f6 <__cxa_guard_acquire>
 8021fa6:	b138      	cbz	r0, 8021fb8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8021fa8:	4620      	mov	r0, r4
 8021faa:	f00a fd30 	bl	802ca0e <__cxa_guard_release>
 8021fae:	4a0f      	ldr	r2, [pc, #60]	; (8021fec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8021fb0:	490f      	ldr	r1, [pc, #60]	; (8021ff0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8021fb2:	4810      	ldr	r0, [pc, #64]	; (8021ff4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8021fb4:	f00a fd18 	bl	802c9e8 <__aeabi_atexit>
 8021fb8:	4c0f      	ldr	r4, [pc, #60]	; (8021ff8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8021fba:	7823      	ldrb	r3, [r4, #0]
 8021fbc:	f3bf 8f5b 	dmb	ish
 8021fc0:	07db      	lsls	r3, r3, #31
 8021fc2:	d40b      	bmi.n	8021fdc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8021fc4:	4620      	mov	r0, r4
 8021fc6:	f00a fd16 	bl	802c9f6 <__cxa_guard_acquire>
 8021fca:	b138      	cbz	r0, 8021fdc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8021fcc:	4620      	mov	r0, r4
 8021fce:	f00a fd1e 	bl	802ca0e <__cxa_guard_release>
 8021fd2:	4a06      	ldr	r2, [pc, #24]	; (8021fec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8021fd4:	4909      	ldr	r1, [pc, #36]	; (8021ffc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8021fd6:	480a      	ldr	r0, [pc, #40]	; (8022000 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8021fd8:	f00a fd06 	bl	802c9e8 <__aeabi_atexit>
 8021fdc:	4b05      	ldr	r3, [pc, #20]	; (8021ff4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8021fde:	642b      	str	r3, [r5, #64]	; 0x40
 8021fe0:	4b07      	ldr	r3, [pc, #28]	; (8022000 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8021fe2:	646b      	str	r3, [r5, #68]	; 0x44
 8021fe4:	bd38      	pop	{r3, r4, r5, pc}
 8021fe6:	bf00      	nop
 8021fe8:	20013924 	.word	0x20013924
 8021fec:	20000000 	.word	0x20000000
 8021ff0:	0801e99f 	.word	0x0801e99f
 8021ff4:	200000c8 	.word	0x200000c8
 8021ff8:	20013928 	.word	0x20013928
 8021ffc:	0801e99d 	.word	0x0801e99d
 8022000:	200000cc 	.word	0x200000cc

08022004 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8022004:	b538      	push	{r3, r4, r5, lr}
 8022006:	4c15      	ldr	r4, [pc, #84]	; (802205c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8022008:	7823      	ldrb	r3, [r4, #0]
 802200a:	f3bf 8f5b 	dmb	ish
 802200e:	07da      	lsls	r2, r3, #31
 8022010:	4605      	mov	r5, r0
 8022012:	d40b      	bmi.n	802202c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8022014:	4620      	mov	r0, r4
 8022016:	f00a fcee 	bl	802c9f6 <__cxa_guard_acquire>
 802201a:	b138      	cbz	r0, 802202c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 802201c:	4620      	mov	r0, r4
 802201e:	f00a fcf6 	bl	802ca0e <__cxa_guard_release>
 8022022:	4a0f      	ldr	r2, [pc, #60]	; (8022060 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8022024:	490f      	ldr	r1, [pc, #60]	; (8022064 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8022026:	4810      	ldr	r0, [pc, #64]	; (8022068 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8022028:	f00a fcde 	bl	802c9e8 <__aeabi_atexit>
 802202c:	4c0f      	ldr	r4, [pc, #60]	; (802206c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 802202e:	7823      	ldrb	r3, [r4, #0]
 8022030:	f3bf 8f5b 	dmb	ish
 8022034:	07db      	lsls	r3, r3, #31
 8022036:	d40b      	bmi.n	8022050 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8022038:	4620      	mov	r0, r4
 802203a:	f00a fcdc 	bl	802c9f6 <__cxa_guard_acquire>
 802203e:	b138      	cbz	r0, 8022050 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8022040:	4620      	mov	r0, r4
 8022042:	f00a fce4 	bl	802ca0e <__cxa_guard_release>
 8022046:	4a06      	ldr	r2, [pc, #24]	; (8022060 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8022048:	4909      	ldr	r1, [pc, #36]	; (8022070 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 802204a:	480a      	ldr	r0, [pc, #40]	; (8022074 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 802204c:	f00a fccc 	bl	802c9e8 <__aeabi_atexit>
 8022050:	4b05      	ldr	r3, [pc, #20]	; (8022068 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8022052:	63ab      	str	r3, [r5, #56]	; 0x38
 8022054:	4b07      	ldr	r3, [pc, #28]	; (8022074 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8022056:	63eb      	str	r3, [r5, #60]	; 0x3c
 8022058:	bd38      	pop	{r3, r4, r5, pc}
 802205a:	bf00      	nop
 802205c:	20013944 	.word	0x20013944
 8022060:	20000000 	.word	0x20000000
 8022064:	0801e9a3 	.word	0x0801e9a3
 8022068:	200000e8 	.word	0x200000e8
 802206c:	20013948 	.word	0x20013948
 8022070:	0801e9a1 	.word	0x0801e9a1
 8022074:	200000ec 	.word	0x200000ec

08022078 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8022078:	b510      	push	{r4, lr}
 802207a:	4604      	mov	r4, r0
 802207c:	f7ff ff14 	bl	8021ea8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8022080:	4620      	mov	r0, r4
 8022082:	f7ff ff85 	bl	8021f90 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8022086:	4620      	mov	r0, r4
 8022088:	f7ff ff48 	bl	8021f1c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 802208c:	4620      	mov	r0, r4
 802208e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022092:	f7ff bfb7 	b.w	8022004 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08022098 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8022098:	b538      	push	{r3, r4, r5, lr}
 802209a:	4c15      	ldr	r4, [pc, #84]	; (80220f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 802209c:	7823      	ldrb	r3, [r4, #0]
 802209e:	f3bf 8f5b 	dmb	ish
 80220a2:	07da      	lsls	r2, r3, #31
 80220a4:	4605      	mov	r5, r0
 80220a6:	d40b      	bmi.n	80220c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80220a8:	4620      	mov	r0, r4
 80220aa:	f00a fca4 	bl	802c9f6 <__cxa_guard_acquire>
 80220ae:	b138      	cbz	r0, 80220c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80220b0:	4620      	mov	r0, r4
 80220b2:	f00a fcac 	bl	802ca0e <__cxa_guard_release>
 80220b6:	4a0f      	ldr	r2, [pc, #60]	; (80220f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80220b8:	490f      	ldr	r1, [pc, #60]	; (80220f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80220ba:	4810      	ldr	r0, [pc, #64]	; (80220fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80220bc:	f00a fc94 	bl	802c9e8 <__aeabi_atexit>
 80220c0:	4c0f      	ldr	r4, [pc, #60]	; (8022100 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80220c2:	7823      	ldrb	r3, [r4, #0]
 80220c4:	f3bf 8f5b 	dmb	ish
 80220c8:	07db      	lsls	r3, r3, #31
 80220ca:	d40b      	bmi.n	80220e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80220cc:	4620      	mov	r0, r4
 80220ce:	f00a fc92 	bl	802c9f6 <__cxa_guard_acquire>
 80220d2:	b138      	cbz	r0, 80220e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80220d4:	4620      	mov	r0, r4
 80220d6:	f00a fc9a 	bl	802ca0e <__cxa_guard_release>
 80220da:	4a06      	ldr	r2, [pc, #24]	; (80220f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80220dc:	4909      	ldr	r1, [pc, #36]	; (8022104 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80220de:	480a      	ldr	r0, [pc, #40]	; (8022108 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80220e0:	f00a fc82 	bl	802c9e8 <__aeabi_atexit>
 80220e4:	4b05      	ldr	r3, [pc, #20]	; (80220fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80220e6:	662b      	str	r3, [r5, #96]	; 0x60
 80220e8:	4b07      	ldr	r3, [pc, #28]	; (8022108 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80220ea:	666b      	str	r3, [r5, #100]	; 0x64
 80220ec:	bd38      	pop	{r3, r4, r5, pc}
 80220ee:	bf00      	nop
 80220f0:	2001392c 	.word	0x2001392c
 80220f4:	20000000 	.word	0x20000000
 80220f8:	0801e98f 	.word	0x0801e98f
 80220fc:	200000d0 	.word	0x200000d0
 8022100:	20013930 	.word	0x20013930
 8022104:	0801e98d 	.word	0x0801e98d
 8022108:	200000d4 	.word	0x200000d4

0802210c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 802210c:	b538      	push	{r3, r4, r5, lr}
 802210e:	4c15      	ldr	r4, [pc, #84]	; (8022164 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8022110:	7823      	ldrb	r3, [r4, #0]
 8022112:	f3bf 8f5b 	dmb	ish
 8022116:	07da      	lsls	r2, r3, #31
 8022118:	4605      	mov	r5, r0
 802211a:	d40b      	bmi.n	8022134 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 802211c:	4620      	mov	r0, r4
 802211e:	f00a fc6a 	bl	802c9f6 <__cxa_guard_acquire>
 8022122:	b138      	cbz	r0, 8022134 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8022124:	4620      	mov	r0, r4
 8022126:	f00a fc72 	bl	802ca0e <__cxa_guard_release>
 802212a:	4a0f      	ldr	r2, [pc, #60]	; (8022168 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 802212c:	490f      	ldr	r1, [pc, #60]	; (802216c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 802212e:	4810      	ldr	r0, [pc, #64]	; (8022170 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8022130:	f00a fc5a 	bl	802c9e8 <__aeabi_atexit>
 8022134:	4c0f      	ldr	r4, [pc, #60]	; (8022174 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8022136:	7823      	ldrb	r3, [r4, #0]
 8022138:	f3bf 8f5b 	dmb	ish
 802213c:	07db      	lsls	r3, r3, #31
 802213e:	d40b      	bmi.n	8022158 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8022140:	4620      	mov	r0, r4
 8022142:	f00a fc58 	bl	802c9f6 <__cxa_guard_acquire>
 8022146:	b138      	cbz	r0, 8022158 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8022148:	4620      	mov	r0, r4
 802214a:	f00a fc60 	bl	802ca0e <__cxa_guard_release>
 802214e:	4a06      	ldr	r2, [pc, #24]	; (8022168 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8022150:	4909      	ldr	r1, [pc, #36]	; (8022178 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8022152:	480a      	ldr	r0, [pc, #40]	; (802217c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8022154:	f00a fc48 	bl	802c9e8 <__aeabi_atexit>
 8022158:	4b05      	ldr	r3, [pc, #20]	; (8022170 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 802215a:	65ab      	str	r3, [r5, #88]	; 0x58
 802215c:	4b07      	ldr	r3, [pc, #28]	; (802217c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 802215e:	65eb      	str	r3, [r5, #92]	; 0x5c
 8022160:	bd38      	pop	{r3, r4, r5, pc}
 8022162:	bf00      	nop
 8022164:	20013904 	.word	0x20013904
 8022168:	20000000 	.word	0x20000000
 802216c:	0801e993 	.word	0x0801e993
 8022170:	200000a8 	.word	0x200000a8
 8022174:	20013908 	.word	0x20013908
 8022178:	0801e991 	.word	0x0801e991
 802217c:	200000ac 	.word	0x200000ac

08022180 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8022180:	b510      	push	{r4, lr}
 8022182:	4604      	mov	r4, r0
 8022184:	f7ff ff88 	bl	8022098 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8022188:	4620      	mov	r0, r4
 802218a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802218e:	f7ff bfbd 	b.w	802210c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08022194 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8022194:	b538      	push	{r3, r4, r5, lr}
 8022196:	4c15      	ldr	r4, [pc, #84]	; (80221ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8022198:	7823      	ldrb	r3, [r4, #0]
 802219a:	f3bf 8f5b 	dmb	ish
 802219e:	07da      	lsls	r2, r3, #31
 80221a0:	4605      	mov	r5, r0
 80221a2:	d40b      	bmi.n	80221bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80221a4:	4620      	mov	r0, r4
 80221a6:	f00a fc26 	bl	802c9f6 <__cxa_guard_acquire>
 80221aa:	b138      	cbz	r0, 80221bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80221ac:	4620      	mov	r0, r4
 80221ae:	f00a fc2e 	bl	802ca0e <__cxa_guard_release>
 80221b2:	4a0f      	ldr	r2, [pc, #60]	; (80221f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80221b4:	490f      	ldr	r1, [pc, #60]	; (80221f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80221b6:	4810      	ldr	r0, [pc, #64]	; (80221f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80221b8:	f00a fc16 	bl	802c9e8 <__aeabi_atexit>
 80221bc:	4c0f      	ldr	r4, [pc, #60]	; (80221fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80221be:	7823      	ldrb	r3, [r4, #0]
 80221c0:	f3bf 8f5b 	dmb	ish
 80221c4:	07db      	lsls	r3, r3, #31
 80221c6:	d40b      	bmi.n	80221e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80221c8:	4620      	mov	r0, r4
 80221ca:	f00a fc14 	bl	802c9f6 <__cxa_guard_acquire>
 80221ce:	b138      	cbz	r0, 80221e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80221d0:	4620      	mov	r0, r4
 80221d2:	f00a fc1c 	bl	802ca0e <__cxa_guard_release>
 80221d6:	4a06      	ldr	r2, [pc, #24]	; (80221f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80221d8:	4909      	ldr	r1, [pc, #36]	; (8022200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80221da:	480a      	ldr	r0, [pc, #40]	; (8022204 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80221dc:	f00a fc04 	bl	802c9e8 <__aeabi_atexit>
 80221e0:	4b05      	ldr	r3, [pc, #20]	; (80221f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80221e2:	672b      	str	r3, [r5, #112]	; 0x70
 80221e4:	4b07      	ldr	r3, [pc, #28]	; (8022204 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80221e6:	676b      	str	r3, [r5, #116]	; 0x74
 80221e8:	bd38      	pop	{r3, r4, r5, pc}
 80221ea:	bf00      	nop
 80221ec:	200138fc 	.word	0x200138fc
 80221f0:	20000000 	.word	0x20000000
 80221f4:	0801e987 	.word	0x0801e987
 80221f8:	200000a0 	.word	0x200000a0
 80221fc:	20013900 	.word	0x20013900
 8022200:	0801e985 	.word	0x0801e985
 8022204:	200000a4 	.word	0x200000a4

08022208 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8022208:	b538      	push	{r3, r4, r5, lr}
 802220a:	4c15      	ldr	r4, [pc, #84]	; (8022260 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 802220c:	7823      	ldrb	r3, [r4, #0]
 802220e:	f3bf 8f5b 	dmb	ish
 8022212:	07da      	lsls	r2, r3, #31
 8022214:	4605      	mov	r5, r0
 8022216:	d40b      	bmi.n	8022230 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8022218:	4620      	mov	r0, r4
 802221a:	f00a fbec 	bl	802c9f6 <__cxa_guard_acquire>
 802221e:	b138      	cbz	r0, 8022230 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8022220:	4620      	mov	r0, r4
 8022222:	f00a fbf4 	bl	802ca0e <__cxa_guard_release>
 8022226:	4a0f      	ldr	r2, [pc, #60]	; (8022264 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8022228:	490f      	ldr	r1, [pc, #60]	; (8022268 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 802222a:	4810      	ldr	r0, [pc, #64]	; (802226c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 802222c:	f00a fbdc 	bl	802c9e8 <__aeabi_atexit>
 8022230:	4c0f      	ldr	r4, [pc, #60]	; (8022270 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8022232:	7823      	ldrb	r3, [r4, #0]
 8022234:	f3bf 8f5b 	dmb	ish
 8022238:	07db      	lsls	r3, r3, #31
 802223a:	d40b      	bmi.n	8022254 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 802223c:	4620      	mov	r0, r4
 802223e:	f00a fbda 	bl	802c9f6 <__cxa_guard_acquire>
 8022242:	b138      	cbz	r0, 8022254 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8022244:	4620      	mov	r0, r4
 8022246:	f00a fbe2 	bl	802ca0e <__cxa_guard_release>
 802224a:	4a06      	ldr	r2, [pc, #24]	; (8022264 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 802224c:	4909      	ldr	r1, [pc, #36]	; (8022274 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 802224e:	480a      	ldr	r0, [pc, #40]	; (8022278 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8022250:	f00a fbca 	bl	802c9e8 <__aeabi_atexit>
 8022254:	4b05      	ldr	r3, [pc, #20]	; (802226c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8022256:	66ab      	str	r3, [r5, #104]	; 0x68
 8022258:	4b07      	ldr	r3, [pc, #28]	; (8022278 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 802225a:	66eb      	str	r3, [r5, #108]	; 0x6c
 802225c:	bd38      	pop	{r3, r4, r5, pc}
 802225e:	bf00      	nop
 8022260:	200138f4 	.word	0x200138f4
 8022264:	20000000 	.word	0x20000000
 8022268:	0801e98b 	.word	0x0801e98b
 802226c:	20000098 	.word	0x20000098
 8022270:	200138f8 	.word	0x200138f8
 8022274:	0801e989 	.word	0x0801e989
 8022278:	2000009c 	.word	0x2000009c

0802227c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 802227c:	b510      	push	{r4, lr}
 802227e:	4604      	mov	r4, r0
 8022280:	f7ff ff88 	bl	8022194 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8022284:	4620      	mov	r0, r4
 8022286:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802228a:	f7ff bfbd 	b.w	8022208 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802228e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802228e:	b510      	push	{r4, lr}
 8022290:	4604      	mov	r4, r0
 8022292:	f7ff fff3 	bl	802227c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8022296:	4620      	mov	r0, r4
 8022298:	f7ff ff72 	bl	8022180 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 802229c:	4620      	mov	r0, r4
 802229e:	f7ff fdf9 	bl	8021e94 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80222a2:	4620      	mov	r0, r4
 80222a4:	f7ff fcfa 	bl	8021c9c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80222a8:	4620      	mov	r0, r4
 80222aa:	f7ff fd75 	bl	8021d98 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80222ae:	4620      	mov	r0, r4
 80222b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80222b4:	f7ff bee0 	b.w	8022078 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080222b8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 80222b8:	b538      	push	{r3, r4, r5, lr}
 80222ba:	4c0b      	ldr	r4, [pc, #44]	; (80222e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 80222bc:	7823      	ldrb	r3, [r4, #0]
 80222be:	f3bf 8f5b 	dmb	ish
 80222c2:	07db      	lsls	r3, r3, #31
 80222c4:	4605      	mov	r5, r0
 80222c6:	d40b      	bmi.n	80222e0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80222c8:	4620      	mov	r0, r4
 80222ca:	f00a fb94 	bl	802c9f6 <__cxa_guard_acquire>
 80222ce:	b138      	cbz	r0, 80222e0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80222d0:	4620      	mov	r0, r4
 80222d2:	f00a fb9c 	bl	802ca0e <__cxa_guard_release>
 80222d6:	4a05      	ldr	r2, [pc, #20]	; (80222ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 80222d8:	4905      	ldr	r1, [pc, #20]	; (80222f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 80222da:	4806      	ldr	r0, [pc, #24]	; (80222f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80222dc:	f00a fb84 	bl	802c9e8 <__aeabi_atexit>
 80222e0:	4b04      	ldr	r3, [pc, #16]	; (80222f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80222e2:	67ab      	str	r3, [r5, #120]	; 0x78
 80222e4:	bd38      	pop	{r3, r4, r5, pc}
 80222e6:	bf00      	nop
 80222e8:	200138e8 	.word	0x200138e8
 80222ec:	20000000 	.word	0x20000000
 80222f0:	0801e983 	.word	0x0801e983
 80222f4:	20000090 	.word	0x20000090

080222f8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 80222f8:	b538      	push	{r3, r4, r5, lr}
 80222fa:	4c0b      	ldr	r4, [pc, #44]	; (8022328 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 80222fc:	7823      	ldrb	r3, [r4, #0]
 80222fe:	f3bf 8f5b 	dmb	ish
 8022302:	07db      	lsls	r3, r3, #31
 8022304:	4605      	mov	r5, r0
 8022306:	d40b      	bmi.n	8022320 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8022308:	4620      	mov	r0, r4
 802230a:	f00a fb74 	bl	802c9f6 <__cxa_guard_acquire>
 802230e:	b138      	cbz	r0, 8022320 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8022310:	4620      	mov	r0, r4
 8022312:	f00a fb7c 	bl	802ca0e <__cxa_guard_release>
 8022316:	4a05      	ldr	r2, [pc, #20]	; (802232c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8022318:	4905      	ldr	r1, [pc, #20]	; (8022330 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 802231a:	4806      	ldr	r0, [pc, #24]	; (8022334 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 802231c:	f00a fb64 	bl	802c9e8 <__aeabi_atexit>
 8022320:	4b04      	ldr	r3, [pc, #16]	; (8022334 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8022322:	67eb      	str	r3, [r5, #124]	; 0x7c
 8022324:	bd38      	pop	{r3, r4, r5, pc}
 8022326:	bf00      	nop
 8022328:	200138ec 	.word	0x200138ec
 802232c:	20000000 	.word	0x20000000
 8022330:	0801e981 	.word	0x0801e981
 8022334:	20000094 	.word	0x20000094

08022338 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8022338:	b570      	push	{r4, r5, r6, lr}
 802233a:	4d0d      	ldr	r5, [pc, #52]	; (8022370 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 802233c:	4c0d      	ldr	r4, [pc, #52]	; (8022374 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 802233e:	782b      	ldrb	r3, [r5, #0]
 8022340:	f3bf 8f5b 	dmb	ish
 8022344:	f013 0f01 	tst.w	r3, #1
 8022348:	4606      	mov	r6, r0
 802234a:	d10d      	bne.n	8022368 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 802234c:	4628      	mov	r0, r5
 802234e:	f00a fb52 	bl	802c9f6 <__cxa_guard_acquire>
 8022352:	b148      	cbz	r0, 8022368 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8022354:	4b08      	ldr	r3, [pc, #32]	; (8022378 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8022356:	6023      	str	r3, [r4, #0]
 8022358:	4628      	mov	r0, r5
 802235a:	f00a fb58 	bl	802ca0e <__cxa_guard_release>
 802235e:	4a07      	ldr	r2, [pc, #28]	; (802237c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8022360:	4907      	ldr	r1, [pc, #28]	; (8022380 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8022362:	4620      	mov	r0, r4
 8022364:	f00a fb40 	bl	802c9e8 <__aeabi_atexit>
 8022368:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 802236c:	bd70      	pop	{r4, r5, r6, pc}
 802236e:	bf00      	nop
 8022370:	200138f0 	.word	0x200138f0
 8022374:	20013964 	.word	0x20013964
 8022378:	08031dd0 	.word	0x08031dd0
 802237c:	20000000 	.word	0x20000000
 8022380:	0801e97f 	.word	0x0801e97f

08022384 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8022384:	b510      	push	{r4, lr}
 8022386:	4604      	mov	r4, r0
 8022388:	f7ff ff96 	bl	80222b8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 802238c:	4620      	mov	r0, r4
 802238e:	f7ff ffb3 	bl	80222f8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8022392:	4620      	mov	r0, r4
 8022394:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022398:	f7ff bfce 	b.w	8022338 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0802239c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 802239c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80223a0:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80223a4:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80223a8:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80223ac:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80223b0:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 80223b4:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 80223b8:	8808      	ldrh	r0, [r1, #0]
 80223ba:	fb05 4c0e 	mla	ip, r5, lr, r4
 80223be:	2d00      	cmp	r5, #0
 80223c0:	eb02 0a0c 	add.w	sl, r2, ip
 80223c4:	f2c0 80b0 	blt.w	8022528 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80223c8:	45ab      	cmp	fp, r5
 80223ca:	f340 80ad 	ble.w	8022528 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80223ce:	2c00      	cmp	r4, #0
 80223d0:	f2c0 80a8 	blt.w	8022524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80223d4:	45a6      	cmp	lr, r4
 80223d6:	f340 80a5 	ble.w	8022524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80223da:	f812 200c 	ldrb.w	r2, [r2, ip]
 80223de:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80223e2:	1c62      	adds	r2, r4, #1
 80223e4:	f100 80a3 	bmi.w	802252e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80223e8:	4596      	cmp	lr, r2
 80223ea:	f340 80a0 	ble.w	802252e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80223ee:	f1b9 0f00 	cmp.w	r9, #0
 80223f2:	f000 809c 	beq.w	802252e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80223f6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80223fa:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80223fe:	3501      	adds	r5, #1
 8022400:	f100 8099 	bmi.w	8022536 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022404:	45ab      	cmp	fp, r5
 8022406:	f340 8096 	ble.w	8022536 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 802240a:	2f00      	cmp	r7, #0
 802240c:	f000 8093 	beq.w	8022536 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022410:	2c00      	cmp	r4, #0
 8022412:	f2c0 808e 	blt.w	8022532 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8022416:	45a6      	cmp	lr, r4
 8022418:	f340 808b 	ble.w	8022532 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 802241c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8022420:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8022424:	3401      	adds	r4, #1
 8022426:	f100 8089 	bmi.w	802253c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 802242a:	45a6      	cmp	lr, r4
 802242c:	f340 8086 	ble.w	802253c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8022430:	f1b9 0f00 	cmp.w	r9, #0
 8022434:	f000 8082 	beq.w	802253c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8022438:	44d6      	add	lr, sl
 802243a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802243e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8022442:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022446:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802244a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 802244e:	fb19 fe07 	smulbb	lr, r9, r7
 8022452:	ea44 0808 	orr.w	r8, r4, r8
 8022456:	ea4f 440c 	mov.w	r4, ip, lsl #16
 802245a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802245e:	f1c7 0210 	rsb	r2, r7, #16
 8022462:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022466:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802246a:	ea44 0c0c 	orr.w	ip, r4, ip
 802246e:	eba2 0209 	sub.w	r2, r2, r9
 8022472:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022476:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 802247a:	fb04 f40c 	mul.w	r4, r4, ip
 802247e:	fb02 4808 	mla	r8, r2, r8, r4
 8022482:	041a      	lsls	r2, r3, #16
 8022484:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022488:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802248c:	4313      	orrs	r3, r2
 802248e:	042a      	lsls	r2, r5, #16
 8022490:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022494:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022498:	fb0e 8303 	mla	r3, lr, r3, r8
 802249c:	432a      	orrs	r2, r5
 802249e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80224a2:	fb07 3202 	mla	r2, r7, r2, r3
 80224a6:	0d53      	lsrs	r3, r2, #21
 80224a8:	0952      	lsrs	r2, r2, #5
 80224aa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80224ae:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80224b2:	431a      	orrs	r2, r3
 80224b4:	b293      	uxth	r3, r2
 80224b6:	b2b4      	uxth	r4, r6
 80224b8:	1202      	asrs	r2, r0, #8
 80224ba:	43f6      	mvns	r6, r6
 80224bc:	b2f6      	uxtb	r6, r6
 80224be:	121d      	asrs	r5, r3, #8
 80224c0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80224c4:	fb12 f206 	smulbb	r2, r2, r6
 80224c8:	10c7      	asrs	r7, r0, #3
 80224ca:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80224ce:	00c0      	lsls	r0, r0, #3
 80224d0:	fb05 2504 	mla	r5, r5, r4, r2
 80224d4:	b2c0      	uxtb	r0, r0
 80224d6:	10da      	asrs	r2, r3, #3
 80224d8:	00db      	lsls	r3, r3, #3
 80224da:	b2db      	uxtb	r3, r3
 80224dc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80224e0:	fb10 f006 	smulbb	r0, r0, r6
 80224e4:	b2ad      	uxth	r5, r5
 80224e6:	fb03 0004 	mla	r0, r3, r4, r0
 80224ea:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80224ee:	fb17 f706 	smulbb	r7, r7, r6
 80224f2:	b280      	uxth	r0, r0
 80224f4:	1c6b      	adds	r3, r5, #1
 80224f6:	fb02 7204 	mla	r2, r2, r4, r7
 80224fa:	b292      	uxth	r2, r2
 80224fc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022500:	1c43      	adds	r3, r0, #1
 8022502:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022506:	1c50      	adds	r0, r2, #1
 8022508:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802250c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022510:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022514:	0952      	lsrs	r2, r2, #5
 8022516:	432b      	orrs	r3, r5
 8022518:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802251c:	4313      	orrs	r3, r2
 802251e:	800b      	strh	r3, [r1, #0]
 8022520:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022524:	4680      	mov	r8, r0
 8022526:	e75c      	b.n	80223e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8022528:	4684      	mov	ip, r0
 802252a:	4680      	mov	r8, r0
 802252c:	e767      	b.n	80223fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 802252e:	4684      	mov	ip, r0
 8022530:	e765      	b.n	80223fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8022532:	4605      	mov	r5, r0
 8022534:	e776      	b.n	8022424 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8022536:	4603      	mov	r3, r0
 8022538:	4605      	mov	r5, r0
 802253a:	e782      	b.n	8022442 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 802253c:	4603      	mov	r3, r0
 802253e:	e780      	b.n	8022442 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08022540 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022544:	b099      	sub	sp, #100	; 0x64
 8022546:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 802254a:	9215      	str	r2, [sp, #84]	; 0x54
 802254c:	9309      	str	r3, [sp, #36]	; 0x24
 802254e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8022550:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8022554:	930d      	str	r3, [sp, #52]	; 0x34
 8022556:	910c      	str	r1, [sp, #48]	; 0x30
 8022558:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 802255c:	9016      	str	r0, [sp, #88]	; 0x58
 802255e:	6850      	ldr	r0, [r2, #4]
 8022560:	6812      	ldr	r2, [r2, #0]
 8022562:	fb00 1303 	mla	r3, r0, r3, r1
 8022566:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 802256a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802256c:	681b      	ldr	r3, [r3, #0]
 802256e:	930b      	str	r3, [sp, #44]	; 0x2c
 8022570:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022572:	685e      	ldr	r6, [r3, #4]
 8022574:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022576:	43db      	mvns	r3, r3
 8022578:	b2db      	uxtb	r3, r3
 802257a:	3604      	adds	r6, #4
 802257c:	930a      	str	r3, [sp, #40]	; 0x28
 802257e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022580:	2b00      	cmp	r3, #0
 8022582:	dc03      	bgt.n	802258c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022584:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8022586:	2b00      	cmp	r3, #0
 8022588:	f340 8225 	ble.w	80229d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 802258c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802258e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022592:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022596:	1e48      	subs	r0, r1, #1
 8022598:	1e57      	subs	r7, r2, #1
 802259a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802259c:	2b00      	cmp	r3, #0
 802259e:	f340 80e3 	ble.w	8022768 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80225a2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80225a6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80225aa:	d406      	bmi.n	80225ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80225ac:	4584      	cmp	ip, r0
 80225ae:	da04      	bge.n	80225ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80225b0:	2b00      	cmp	r3, #0
 80225b2:	db02      	blt.n	80225ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80225b4:	42bb      	cmp	r3, r7
 80225b6:	f2c0 80d8 	blt.w	802276a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80225ba:	f11c 0c01 	adds.w	ip, ip, #1
 80225be:	f100 80c9 	bmi.w	8022754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80225c2:	4561      	cmp	r1, ip
 80225c4:	f2c0 80c6 	blt.w	8022754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80225c8:	3301      	adds	r3, #1
 80225ca:	f100 80c3 	bmi.w	8022754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80225ce:	429a      	cmp	r2, r3
 80225d0:	f2c0 80c0 	blt.w	8022754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80225d4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80225d8:	4647      	mov	r7, r8
 80225da:	f1bb 0f00 	cmp.w	fp, #0
 80225de:	f340 80e3 	ble.w	80227a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80225e2:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80225e4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80225e6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80225ea:	689b      	ldr	r3, [r3, #8]
 80225ec:	ea5f 422a 	movs.w	r2, sl, asr #16
 80225f0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80225f4:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80225f8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80225fc:	f100 8121 	bmi.w	8022842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022600:	f103 39ff 	add.w	r9, r3, #4294967295
 8022604:	454a      	cmp	r2, r9
 8022606:	f280 811c 	bge.w	8022842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802260a:	f1bc 0f00 	cmp.w	ip, #0
 802260e:	f2c0 8118 	blt.w	8022842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022612:	f10e 39ff 	add.w	r9, lr, #4294967295
 8022616:	45cc      	cmp	ip, r9
 8022618:	f280 8113 	bge.w	8022842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802261c:	b21b      	sxth	r3, r3
 802261e:	fb0c 2203 	mla	r2, ip, r3, r2
 8022622:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022624:	eb04 0902 	add.w	r9, r4, r2
 8022628:	5ca2      	ldrb	r2, [r4, r2]
 802262a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 802262e:	2800      	cmp	r0, #0
 8022630:	f000 80fe 	beq.w	8022830 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8022634:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022638:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802263c:	9211      	str	r2, [sp, #68]	; 0x44
 802263e:	b151      	cbz	r1, 8022656 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022640:	eb09 0203 	add.w	r2, r9, r3
 8022644:	f819 3003 	ldrb.w	r3, [r9, r3]
 8022648:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802264c:	930f      	str	r3, [sp, #60]	; 0x3c
 802264e:	7853      	ldrb	r3, [r2, #1]
 8022650:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022654:	9312      	str	r3, [sp, #72]	; 0x48
 8022656:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8022658:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802265a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802265e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022662:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022666:	ea4c 0c03 	orr.w	ip, ip, r3
 802266a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802266c:	041b      	lsls	r3, r3, #16
 802266e:	fb10 f201 	smulbb	r2, r0, r1
 8022672:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022676:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802267a:	10d2      	asrs	r2, r2, #3
 802267c:	4323      	orrs	r3, r4
 802267e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8022682:	4353      	muls	r3, r2
 8022684:	fb09 330c 	mla	r3, r9, ip, r3
 8022688:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 802268c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022690:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022694:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022698:	f1c1 0c10 	rsb	ip, r1, #16
 802269c:	ebac 0c00 	sub.w	ip, ip, r0
 80226a0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80226a4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80226a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80226aa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80226ac:	0418      	lsls	r0, r3, #16
 80226ae:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80226b2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80226b6:	4318      	orrs	r0, r3
 80226b8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80226bc:	fb02 c200 	mla	r2, r2, r0, ip
 80226c0:	0d53      	lsrs	r3, r2, #21
 80226c2:	0952      	lsrs	r2, r2, #5
 80226c4:	8838      	ldrh	r0, [r7, #0]
 80226c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80226ca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80226ce:	431a      	orrs	r2, r3
 80226d0:	b292      	uxth	r2, r2
 80226d2:	1201      	asrs	r1, r0, #8
 80226d4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80226d8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80226dc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80226e0:	fb11 f104 	smulbb	r1, r1, r4
 80226e4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80226e8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80226ec:	00c0      	lsls	r0, r0, #3
 80226ee:	fb0c 1c03 	mla	ip, ip, r3, r1
 80226f2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80226f6:	10d1      	asrs	r1, r2, #3
 80226f8:	b2c0      	uxtb	r0, r0
 80226fa:	00d2      	lsls	r2, r2, #3
 80226fc:	b2d2      	uxtb	r2, r2
 80226fe:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022702:	fb1e fe04 	smulbb	lr, lr, r4
 8022706:	fb10 f004 	smulbb	r0, r0, r4
 802270a:	fa1f fc8c 	uxth.w	ip, ip
 802270e:	fb01 e103 	mla	r1, r1, r3, lr
 8022712:	fb02 0303 	mla	r3, r2, r3, r0
 8022716:	b29a      	uxth	r2, r3
 8022718:	f10c 0301 	add.w	r3, ip, #1
 802271c:	b289      	uxth	r1, r1
 802271e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022722:	1c53      	adds	r3, r2, #1
 8022724:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022728:	1c4a      	adds	r2, r1, #1
 802272a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802272e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022732:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022736:	0949      	lsrs	r1, r1, #5
 8022738:	ea43 030c 	orr.w	r3, r3, ip
 802273c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022740:	430b      	orrs	r3, r1
 8022742:	803b      	strh	r3, [r7, #0]
 8022744:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022746:	449a      	add	sl, r3
 8022748:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802274a:	3702      	adds	r7, #2
 802274c:	441d      	add	r5, r3
 802274e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022752:	e742      	b.n	80225da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022754:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022756:	449a      	add	sl, r3
 8022758:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802275a:	441d      	add	r5, r3
 802275c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802275e:	3b01      	subs	r3, #1
 8022760:	9309      	str	r3, [sp, #36]	; 0x24
 8022762:	f108 0802 	add.w	r8, r8, #2
 8022766:	e718      	b.n	802259a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8022768:	d023      	beq.n	80227b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 802276a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802276c:	9825      	ldr	r0, [sp, #148]	; 0x94
 802276e:	3b01      	subs	r3, #1
 8022770:	fb00 a003 	mla	r0, r0, r3, sl
 8022774:	1400      	asrs	r0, r0, #16
 8022776:	f53f af2d 	bmi.w	80225d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802277a:	3901      	subs	r1, #1
 802277c:	4288      	cmp	r0, r1
 802277e:	f6bf af29 	bge.w	80225d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022782:	9926      	ldr	r1, [sp, #152]	; 0x98
 8022784:	fb01 5303 	mla	r3, r1, r3, r5
 8022788:	141b      	asrs	r3, r3, #16
 802278a:	f53f af23 	bmi.w	80225d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802278e:	3a01      	subs	r2, #1
 8022790:	4293      	cmp	r3, r2
 8022792:	f6bf af1f 	bge.w	80225d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022796:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 802279a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 802279e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80227a2:	f1be 0f00 	cmp.w	lr, #0
 80227a6:	dc6c      	bgt.n	8022882 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80227a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80227aa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80227ae:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80227b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80227b4:	2b00      	cmp	r3, #0
 80227b6:	f340 810e 	ble.w	80229d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80227ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 80227be:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80227c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80227c6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80227c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80227cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80227d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80227d4:	eef0 6a62 	vmov.f32	s13, s5
 80227d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80227dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80227e0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80227e4:	ee16 aa90 	vmov	sl, s13
 80227e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80227ec:	eef0 6a43 	vmov.f32	s13, s6
 80227f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80227f4:	ee12 2a90 	vmov	r2, s5
 80227f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80227fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8022800:	ee13 2a10 	vmov	r2, s6
 8022804:	9325      	str	r3, [sp, #148]	; 0x94
 8022806:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022808:	fb92 f3f3 	sdiv	r3, r2, r3
 802280c:	9326      	str	r3, [sp, #152]	; 0x98
 802280e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022810:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8022812:	3b01      	subs	r3, #1
 8022814:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022818:	930c      	str	r3, [sp, #48]	; 0x30
 802281a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802281c:	bf08      	it	eq
 802281e:	4613      	moveq	r3, r2
 8022820:	ee16 5a90 	vmov	r5, s13
 8022824:	9309      	str	r3, [sp, #36]	; 0x24
 8022826:	eeb0 3a67 	vmov.f32	s6, s15
 802282a:	eef0 2a47 	vmov.f32	s5, s14
 802282e:	e6a6      	b.n	802257e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8022830:	2900      	cmp	r1, #0
 8022832:	f43f af10 	beq.w	8022656 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022836:	f819 3003 	ldrb.w	r3, [r9, r3]
 802283a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802283e:	930f      	str	r3, [sp, #60]	; 0x3c
 8022840:	e709      	b.n	8022656 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8022842:	f112 0901 	adds.w	r9, r2, #1
 8022846:	f53f af7d 	bmi.w	8022744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802284a:	454b      	cmp	r3, r9
 802284c:	f6ff af7a 	blt.w	8022744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022850:	f11c 0901 	adds.w	r9, ip, #1
 8022854:	f53f af76 	bmi.w	8022744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022858:	45ce      	cmp	lr, r9
 802285a:	f6ff af73 	blt.w	8022744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802285e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022860:	9202      	str	r2, [sp, #8]
 8022862:	b21b      	sxth	r3, r3
 8022864:	fa0f f28e 	sxth.w	r2, lr
 8022868:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802286c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8022870:	9201      	str	r2, [sp, #4]
 8022872:	9300      	str	r3, [sp, #0]
 8022874:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022876:	9816      	ldr	r0, [sp, #88]	; 0x58
 8022878:	4633      	mov	r3, r6
 802287a:	4639      	mov	r1, r7
 802287c:	f7ff fd8e 	bl	802239c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8022880:	e760      	b.n	8022744 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022882:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022884:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022886:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802288a:	ea4f 422a 	mov.w	r2, sl, asr #16
 802288e:	1429      	asrs	r1, r5, #16
 8022890:	fb03 2101 	mla	r1, r3, r1, r2
 8022894:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022896:	440a      	add	r2, r1
 8022898:	5c61      	ldrb	r1, [r4, r1]
 802289a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 802289e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80228a2:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80228a6:	f1bc 0f00 	cmp.w	ip, #0
 80228aa:	f000 808c 	beq.w	80229c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 80228ae:	7857      	ldrb	r7, [r2, #1]
 80228b0:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80228b4:	9413      	str	r4, [sp, #76]	; 0x4c
 80228b6:	b140      	cbz	r0, 80228ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80228b8:	18d7      	adds	r7, r2, r3
 80228ba:	5cd3      	ldrb	r3, [r2, r3]
 80228bc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80228c0:	9310      	str	r3, [sp, #64]	; 0x40
 80228c2:	787b      	ldrb	r3, [r7, #1]
 80228c4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80228c8:	9314      	str	r3, [sp, #80]	; 0x50
 80228ca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80228cc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80228ce:	fb1c f200 	smulbb	r2, ip, r0
 80228d2:	041f      	lsls	r7, r3, #16
 80228d4:	10d2      	asrs	r2, r2, #3
 80228d6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80228da:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80228de:	431f      	orrs	r7, r3
 80228e0:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80228e4:	9317      	str	r3, [sp, #92]	; 0x5c
 80228e6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80228e8:	041b      	lsls	r3, r3, #16
 80228ea:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80228ee:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80228f2:	ea43 030b 	orr.w	r3, r3, fp
 80228f6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80228f8:	4353      	muls	r3, r2
 80228fa:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80228fe:	fb04 3707 	mla	r7, r4, r7, r3
 8022902:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022906:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 802290a:	ea43 0b01 	orr.w	fp, r3, r1
 802290e:	f1c0 0110 	rsb	r1, r0, #16
 8022912:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022914:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022916:	eba1 0c0c 	sub.w	ip, r1, ip
 802291a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 802291e:	fb0c 770b 	mla	r7, ip, fp, r7
 8022922:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022926:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 802292a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802292e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8022932:	ea4c 0c0b 	orr.w	ip, ip, fp
 8022936:	fb02 770c 	mla	r7, r2, ip, r7
 802293a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802293c:	0d79      	lsrs	r1, r7, #21
 802293e:	097f      	lsrs	r7, r7, #5
 8022940:	8812      	ldrh	r2, [r2, #0]
 8022942:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022946:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802294a:	430f      	orrs	r7, r1
 802294c:	b2bb      	uxth	r3, r7
 802294e:	1211      	asrs	r1, r2, #8
 8022950:	1218      	asrs	r0, r3, #8
 8022952:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022956:	fb11 f104 	smulbb	r1, r1, r4
 802295a:	10d7      	asrs	r7, r2, #3
 802295c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022960:	00d2      	lsls	r2, r2, #3
 8022962:	fb00 1009 	mla	r0, r0, r9, r1
 8022966:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802296a:	10d9      	asrs	r1, r3, #3
 802296c:	b2d2      	uxtb	r2, r2
 802296e:	00db      	lsls	r3, r3, #3
 8022970:	fb17 f704 	smulbb	r7, r7, r4
 8022974:	fb12 f204 	smulbb	r2, r2, r4
 8022978:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802297c:	b2db      	uxtb	r3, r3
 802297e:	b280      	uxth	r0, r0
 8022980:	fb01 7109 	mla	r1, r1, r9, r7
 8022984:	fb03 2309 	mla	r3, r3, r9, r2
 8022988:	b29b      	uxth	r3, r3
 802298a:	b289      	uxth	r1, r1
 802298c:	1c42      	adds	r2, r0, #1
 802298e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022992:	1c4f      	adds	r7, r1, #1
 8022994:	1c5a      	adds	r2, r3, #1
 8022996:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802299a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802299e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80229a2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80229a6:	0949      	lsrs	r1, r1, #5
 80229a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80229aa:	4310      	orrs	r0, r2
 80229ac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80229b0:	4308      	orrs	r0, r1
 80229b2:	f823 0b02 	strh.w	r0, [r3], #2
 80229b6:	930e      	str	r3, [sp, #56]	; 0x38
 80229b8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80229ba:	449a      	add	sl, r3
 80229bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80229be:	f10e 3eff 	add.w	lr, lr, #4294967295
 80229c2:	441d      	add	r5, r3
 80229c4:	e6ed      	b.n	80227a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80229c6:	2800      	cmp	r0, #0
 80229c8:	f43f af7f 	beq.w	80228ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80229cc:	5cd3      	ldrb	r3, [r2, r3]
 80229ce:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80229d2:	9310      	str	r3, [sp, #64]	; 0x40
 80229d4:	e779      	b.n	80228ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80229d6:	b019      	add	sp, #100	; 0x64
 80229d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080229dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80229dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80229e0:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 80229e4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80229e8:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 80229ec:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80229f0:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80229f4:	8808      	ldrh	r0, [r1, #0]
 80229f6:	fb08 470e 	mla	r7, r8, lr, r4
 80229fa:	f1b8 0f00 	cmp.w	r8, #0
 80229fe:	eb02 0907 	add.w	r9, r2, r7
 8022a02:	db67      	blt.n	8022ad4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022a04:	45c2      	cmp	sl, r8
 8022a06:	dd65      	ble.n	8022ad4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022a08:	2c00      	cmp	r4, #0
 8022a0a:	db61      	blt.n	8022ad0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022a0c:	45a6      	cmp	lr, r4
 8022a0e:	dd5f      	ble.n	8022ad0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022a10:	5dd2      	ldrb	r2, [r2, r7]
 8022a12:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8022a16:	1c62      	adds	r2, r4, #1
 8022a18:	d45f      	bmi.n	8022ada <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022a1a:	4596      	cmp	lr, r2
 8022a1c:	dd5d      	ble.n	8022ada <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022a1e:	2d00      	cmp	r5, #0
 8022a20:	d05b      	beq.n	8022ada <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022a22:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022a26:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8022a2a:	f118 0801 	adds.w	r8, r8, #1
 8022a2e:	d458      	bmi.n	8022ae2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022a30:	45c2      	cmp	sl, r8
 8022a32:	dd56      	ble.n	8022ae2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022a34:	2e00      	cmp	r6, #0
 8022a36:	d054      	beq.n	8022ae2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022a38:	2c00      	cmp	r4, #0
 8022a3a:	db50      	blt.n	8022ade <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022a3c:	45a6      	cmp	lr, r4
 8022a3e:	dd4e      	ble.n	8022ade <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022a40:	f819 200e 	ldrb.w	r2, [r9, lr]
 8022a44:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8022a48:	3401      	adds	r4, #1
 8022a4a:	d407      	bmi.n	8022a5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022a4c:	45a6      	cmp	lr, r4
 8022a4e:	dd05      	ble.n	8022a5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022a50:	b125      	cbz	r5, 8022a5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022a52:	44ce      	add	lr, r9
 8022a54:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8022a58:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8022a5c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022a60:	fb15 f406 	smulbb	r4, r5, r6
 8022a64:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022a68:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022a6c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022a70:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022a74:	ea43 0c0c 	orr.w	ip, r3, ip
 8022a78:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022a7c:	f1c6 0310 	rsb	r3, r6, #16
 8022a80:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022a84:	1b5b      	subs	r3, r3, r5
 8022a86:	ea4e 0707 	orr.w	r7, lr, r7
 8022a8a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022a8e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022a92:	437d      	muls	r5, r7
 8022a94:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022a98:	0403      	lsls	r3, r0, #16
 8022a9a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022a9e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022aa2:	4318      	orrs	r0, r3
 8022aa4:	0413      	lsls	r3, r2, #16
 8022aa6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022aaa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022aae:	4313      	orrs	r3, r2
 8022ab0:	fb04 c000 	mla	r0, r4, r0, ip
 8022ab4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022ab8:	fb06 0003 	mla	r0, r6, r3, r0
 8022abc:	0d43      	lsrs	r3, r0, #21
 8022abe:	0940      	lsrs	r0, r0, #5
 8022ac0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ac4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022ac8:	4318      	orrs	r0, r3
 8022aca:	8008      	strh	r0, [r1, #0]
 8022acc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022ad0:	4684      	mov	ip, r0
 8022ad2:	e7a0      	b.n	8022a16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8022ad4:	4607      	mov	r7, r0
 8022ad6:	4684      	mov	ip, r0
 8022ad8:	e7a7      	b.n	8022a2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022ada:	4607      	mov	r7, r0
 8022adc:	e7a5      	b.n	8022a2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022ade:	4602      	mov	r2, r0
 8022ae0:	e7b2      	b.n	8022a48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8022ae2:	4602      	mov	r2, r0
 8022ae4:	e7ba      	b.n	8022a5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08022ae6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022ae6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022aea:	b093      	sub	sp, #76	; 0x4c
 8022aec:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022af0:	920f      	str	r2, [sp, #60]	; 0x3c
 8022af2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8022af4:	9108      	str	r1, [sp, #32]
 8022af6:	9306      	str	r3, [sp, #24]
 8022af8:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022afc:	9010      	str	r0, [sp, #64]	; 0x40
 8022afe:	6850      	ldr	r0, [r2, #4]
 8022b00:	6812      	ldr	r2, [r2, #0]
 8022b02:	fb00 1303 	mla	r3, r0, r3, r1
 8022b06:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022b0a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022b0c:	681b      	ldr	r3, [r3, #0]
 8022b0e:	9307      	str	r3, [sp, #28]
 8022b10:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022b12:	685f      	ldr	r7, [r3, #4]
 8022b14:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8022b18:	3704      	adds	r7, #4
 8022b1a:	9b08      	ldr	r3, [sp, #32]
 8022b1c:	2b00      	cmp	r3, #0
 8022b1e:	dc03      	bgt.n	8022b28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8022b20:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022b22:	2b00      	cmp	r3, #0
 8022b24:	f340 81b2 	ble.w	8022e8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022b28:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022b2a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022b2e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022b32:	1e48      	subs	r0, r1, #1
 8022b34:	f102 3cff 	add.w	ip, r2, #4294967295
 8022b38:	9b06      	ldr	r3, [sp, #24]
 8022b3a:	2b00      	cmp	r3, #0
 8022b3c:	f340 80a9 	ble.w	8022c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8022b40:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022b44:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022b48:	d406      	bmi.n	8022b58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022b4a:	4586      	cmp	lr, r0
 8022b4c:	da04      	bge.n	8022b58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022b4e:	2b00      	cmp	r3, #0
 8022b50:	db02      	blt.n	8022b58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022b52:	4563      	cmp	r3, ip
 8022b54:	f2c0 809e 	blt.w	8022c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022b58:	f11e 0e01 	adds.w	lr, lr, #1
 8022b5c:	f100 808f 	bmi.w	8022c7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022b60:	4571      	cmp	r1, lr
 8022b62:	f2c0 808c 	blt.w	8022c7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022b66:	3301      	adds	r3, #1
 8022b68:	f100 8089 	bmi.w	8022c7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022b6c:	429a      	cmp	r2, r3
 8022b6e:	f2c0 8086 	blt.w	8022c7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022b72:	f8dd b018 	ldr.w	fp, [sp, #24]
 8022b76:	46c8      	mov	r8, r9
 8022b78:	f1bb 0f00 	cmp.w	fp, #0
 8022b7c:	f340 80a6 	ble.w	8022ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8022b80:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8022b82:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022b84:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022b88:	689b      	ldr	r3, [r3, #8]
 8022b8a:	1422      	asrs	r2, r4, #16
 8022b8c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022b90:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022b94:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022b98:	f100 80e3 	bmi.w	8022d62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022b9c:	f103 3aff 	add.w	sl, r3, #4294967295
 8022ba0:	4552      	cmp	r2, sl
 8022ba2:	f280 80de 	bge.w	8022d62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022ba6:	f1bc 0f00 	cmp.w	ip, #0
 8022baa:	f2c0 80da 	blt.w	8022d62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022bae:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022bb2:	45d4      	cmp	ip, sl
 8022bb4:	f280 80d5 	bge.w	8022d62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022bb8:	b21b      	sxth	r3, r3
 8022bba:	fb0c 2203 	mla	r2, ip, r3, r2
 8022bbe:	9d07      	ldr	r5, [sp, #28]
 8022bc0:	eb05 0a02 	add.w	sl, r5, r2
 8022bc4:	5caa      	ldrb	r2, [r5, r2]
 8022bc6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8022bca:	2800      	cmp	r0, #0
 8022bcc:	f000 80c0 	beq.w	8022d50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8022bd0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8022bd4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8022bd8:	920b      	str	r2, [sp, #44]	; 0x2c
 8022bda:	b151      	cbz	r1, 8022bf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022bdc:	eb0a 0203 	add.w	r2, sl, r3
 8022be0:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022be4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022be8:	9309      	str	r3, [sp, #36]	; 0x24
 8022bea:	7853      	ldrb	r3, [r2, #1]
 8022bec:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022bf0:	930c      	str	r3, [sp, #48]	; 0x30
 8022bf2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022bf4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022bf6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022bfa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022bfe:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022c02:	ea4c 0c03 	orr.w	ip, ip, r3
 8022c06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022c08:	041b      	lsls	r3, r3, #16
 8022c0a:	fb10 f201 	smulbb	r2, r0, r1
 8022c0e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022c12:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022c16:	10d2      	asrs	r2, r2, #3
 8022c18:	432b      	orrs	r3, r5
 8022c1a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8022c1e:	4353      	muls	r3, r2
 8022c20:	fb0a 330c 	mla	r3, sl, ip, r3
 8022c24:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8022c28:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022c2c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022c30:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022c34:	f1c1 0c10 	rsb	ip, r1, #16
 8022c38:	ebac 0c00 	sub.w	ip, ip, r0
 8022c3c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022c40:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022c44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022c46:	0418      	lsls	r0, r3, #16
 8022c48:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022c4c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022c50:	4318      	orrs	r0, r3
 8022c52:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8022c56:	fb02 c200 	mla	r2, r2, r0, ip
 8022c5a:	0d53      	lsrs	r3, r2, #21
 8022c5c:	0952      	lsrs	r2, r2, #5
 8022c5e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022c62:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022c66:	431a      	orrs	r2, r3
 8022c68:	f8a8 2000 	strh.w	r2, [r8]
 8022c6c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022c6e:	441c      	add	r4, r3
 8022c70:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022c72:	f108 0802 	add.w	r8, r8, #2
 8022c76:	441e      	add	r6, r3
 8022c78:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022c7c:	e77c      	b.n	8022b78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022c7e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022c80:	441c      	add	r4, r3
 8022c82:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022c84:	441e      	add	r6, r3
 8022c86:	9b06      	ldr	r3, [sp, #24]
 8022c88:	3b01      	subs	r3, #1
 8022c8a:	9306      	str	r3, [sp, #24]
 8022c8c:	f109 0902 	add.w	r9, r9, #2
 8022c90:	e752      	b.n	8022b38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8022c92:	d020      	beq.n	8022cd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022c94:	9b06      	ldr	r3, [sp, #24]
 8022c96:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022c98:	3b01      	subs	r3, #1
 8022c9a:	fb00 4003 	mla	r0, r0, r3, r4
 8022c9e:	1400      	asrs	r0, r0, #16
 8022ca0:	f53f af67 	bmi.w	8022b72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022ca4:	3901      	subs	r1, #1
 8022ca6:	4288      	cmp	r0, r1
 8022ca8:	f6bf af63 	bge.w	8022b72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022cac:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022cae:	fb01 6303 	mla	r3, r1, r3, r6
 8022cb2:	141b      	asrs	r3, r3, #16
 8022cb4:	f53f af5d 	bmi.w	8022b72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022cb8:	3a01      	subs	r2, #1
 8022cba:	4293      	cmp	r3, r2
 8022cbc:	f6bf af59 	bge.w	8022b72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022cc0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8022cc4:	46ca      	mov	sl, r9
 8022cc6:	f1b8 0f00 	cmp.w	r8, #0
 8022cca:	dc67      	bgt.n	8022d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8022ccc:	9b06      	ldr	r3, [sp, #24]
 8022cce:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022cd2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022cd6:	9b08      	ldr	r3, [sp, #32]
 8022cd8:	2b00      	cmp	r3, #0
 8022cda:	f340 80d7 	ble.w	8022e8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022cde:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022ce2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022ce6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8022cea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022cec:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022cf0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022cf4:	eeb0 6a62 	vmov.f32	s12, s5
 8022cf8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022cfc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022d00:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022d04:	ee16 4a10 	vmov	r4, s12
 8022d08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022d0c:	eeb0 6a43 	vmov.f32	s12, s6
 8022d10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022d14:	ee12 2a90 	vmov	r2, s5
 8022d18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022d1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022d20:	ee13 2a10 	vmov	r2, s6
 8022d24:	931f      	str	r3, [sp, #124]	; 0x7c
 8022d26:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022d28:	fb92 f3f3 	sdiv	r3, r2, r3
 8022d2c:	9320      	str	r3, [sp, #128]	; 0x80
 8022d2e:	9b08      	ldr	r3, [sp, #32]
 8022d30:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022d32:	3b01      	subs	r3, #1
 8022d34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022d38:	9308      	str	r3, [sp, #32]
 8022d3a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022d3c:	bf08      	it	eq
 8022d3e:	4613      	moveq	r3, r2
 8022d40:	ee16 6a10 	vmov	r6, s12
 8022d44:	9306      	str	r3, [sp, #24]
 8022d46:	eeb0 3a67 	vmov.f32	s6, s15
 8022d4a:	eef0 2a47 	vmov.f32	s5, s14
 8022d4e:	e6e4      	b.n	8022b1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8022d50:	2900      	cmp	r1, #0
 8022d52:	f43f af4e 	beq.w	8022bf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022d56:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022d5a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022d5e:	9309      	str	r3, [sp, #36]	; 0x24
 8022d60:	e747      	b.n	8022bf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022d62:	f112 0a01 	adds.w	sl, r2, #1
 8022d66:	d481      	bmi.n	8022c6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022d68:	4553      	cmp	r3, sl
 8022d6a:	f6ff af7f 	blt.w	8022c6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022d6e:	f11c 0a01 	adds.w	sl, ip, #1
 8022d72:	f53f af7b 	bmi.w	8022c6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022d76:	45d6      	cmp	lr, sl
 8022d78:	f6ff af78 	blt.w	8022c6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022d7c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8022d80:	b21b      	sxth	r3, r3
 8022d82:	fa0f f28e 	sxth.w	r2, lr
 8022d86:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8022d8a:	9201      	str	r2, [sp, #4]
 8022d8c:	9300      	str	r3, [sp, #0]
 8022d8e:	9a07      	ldr	r2, [sp, #28]
 8022d90:	9810      	ldr	r0, [sp, #64]	; 0x40
 8022d92:	463b      	mov	r3, r7
 8022d94:	4641      	mov	r1, r8
 8022d96:	f7ff fe21 	bl	80229dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022d9a:	e767      	b.n	8022c6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022d9c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022d9e:	9d07      	ldr	r5, [sp, #28]
 8022da0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022da4:	1422      	asrs	r2, r4, #16
 8022da6:	1431      	asrs	r1, r6, #16
 8022da8:	fb03 2101 	mla	r1, r3, r1, r2
 8022dac:	9a07      	ldr	r2, [sp, #28]
 8022dae:	440a      	add	r2, r1
 8022db0:	5c69      	ldrb	r1, [r5, r1]
 8022db2:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8022db6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022dba:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8022dbe:	f1be 0f00 	cmp.w	lr, #0
 8022dc2:	d05c      	beq.n	8022e7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8022dc4:	f892 c001 	ldrb.w	ip, [r2, #1]
 8022dc8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8022dcc:	950d      	str	r5, [sp, #52]	; 0x34
 8022dce:	b150      	cbz	r0, 8022de6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8022dd0:	eb02 0c03 	add.w	ip, r2, r3
 8022dd4:	5cd3      	ldrb	r3, [r2, r3]
 8022dd6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022dda:	930a      	str	r3, [sp, #40]	; 0x28
 8022ddc:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8022de0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022de4:	930e      	str	r3, [sp, #56]	; 0x38
 8022de6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022de8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022dea:	fb1e f200 	smulbb	r2, lr, r0
 8022dee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022df2:	10d2      	asrs	r2, r2, #3
 8022df4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022df8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022dfc:	ea4c 0c03 	orr.w	ip, ip, r3
 8022e00:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8022e04:	9311      	str	r3, [sp, #68]	; 0x44
 8022e06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022e08:	041b      	lsls	r3, r3, #16
 8022e0a:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8022e0e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022e12:	ea43 030b 	orr.w	r3, r3, fp
 8022e16:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022e18:	4353      	muls	r3, r2
 8022e1a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022e1e:	fb05 3c0c 	mla	ip, r5, ip, r3
 8022e22:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022e26:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8022e2a:	ea43 0b01 	orr.w	fp, r3, r1
 8022e2e:	f1c0 0110 	rsb	r1, r0, #16
 8022e32:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022e34:	eba1 0e0e 	sub.w	lr, r1, lr
 8022e38:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8022e3c:	fb0e cc0b 	mla	ip, lr, fp, ip
 8022e40:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8022e44:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8022e48:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022e4c:	ea4b 0e0e 	orr.w	lr, fp, lr
 8022e50:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8022e54:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022e58:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8022e5c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022e60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022e64:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022e68:	ea43 0c0c 	orr.w	ip, r3, ip
 8022e6c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022e6e:	f82a cb02 	strh.w	ip, [sl], #2
 8022e72:	441c      	add	r4, r3
 8022e74:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e76:	f108 38ff 	add.w	r8, r8, #4294967295
 8022e7a:	441e      	add	r6, r3
 8022e7c:	e723      	b.n	8022cc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8022e7e:	2800      	cmp	r0, #0
 8022e80:	d0b1      	beq.n	8022de6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8022e82:	5cd3      	ldrb	r3, [r2, r3]
 8022e84:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022e88:	930a      	str	r3, [sp, #40]	; 0x28
 8022e8a:	e7ac      	b.n	8022de6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8022e8c:	b013      	add	sp, #76	; 0x4c
 8022e8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022e92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8022e92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022e96:	880d      	ldrh	r5, [r1, #0]
 8022e98:	b087      	sub	sp, #28
 8022e9a:	10ef      	asrs	r7, r5, #3
 8022e9c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8022ea0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022ea4:	00ed      	lsls	r5, r5, #3
 8022ea6:	9701      	str	r7, [sp, #4]
 8022ea8:	b2ed      	uxtb	r5, r5
 8022eaa:	9502      	str	r5, [sp, #8]
 8022eac:	9d01      	ldr	r5, [sp, #4]
 8022eae:	9103      	str	r1, [sp, #12]
 8022eb0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8022eb4:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8022eb8:	9902      	ldr	r1, [sp, #8]
 8022eba:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8022ebe:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8022ec2:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8022ec6:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8022eca:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8022ece:	022d      	lsls	r5, r5, #8
 8022ed0:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8022ed4:	fb06 0709 	mla	r7, r6, r9, r0
 8022ed8:	430d      	orrs	r5, r1
 8022eda:	2e00      	cmp	r6, #0
 8022edc:	eb02 0c07 	add.w	ip, r2, r7
 8022ee0:	9505      	str	r5, [sp, #20]
 8022ee2:	f2c0 80b6 	blt.w	8023052 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8022ee6:	45b3      	cmp	fp, r6
 8022ee8:	f340 80b3 	ble.w	8023052 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8022eec:	2800      	cmp	r0, #0
 8022eee:	f2c0 80ae 	blt.w	802304e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8022ef2:	4581      	cmp	r9, r0
 8022ef4:	f340 80ab 	ble.w	802304e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8022ef8:	5dd7      	ldrb	r7, [r2, r7]
 8022efa:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8022efe:	441f      	add	r7, r3
 8022f00:	1c42      	adds	r2, r0, #1
 8022f02:	f100 80a9 	bmi.w	8023058 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8022f06:	4591      	cmp	r9, r2
 8022f08:	f340 80a6 	ble.w	8023058 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8022f0c:	2c00      	cmp	r4, #0
 8022f0e:	f000 80a3 	beq.w	8023058 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8022f12:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8022f16:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8022f1a:	441d      	add	r5, r3
 8022f1c:	3601      	adds	r6, #1
 8022f1e:	f100 809f 	bmi.w	8023060 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8022f22:	45b3      	cmp	fp, r6
 8022f24:	f340 809c 	ble.w	8023060 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8022f28:	f1be 0f00 	cmp.w	lr, #0
 8022f2c:	f000 8098 	beq.w	8023060 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8022f30:	2800      	cmp	r0, #0
 8022f32:	f2c0 8093 	blt.w	802305c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8022f36:	4581      	cmp	r9, r0
 8022f38:	f340 8090 	ble.w	802305c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8022f3c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8022f40:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8022f44:	441e      	add	r6, r3
 8022f46:	3001      	adds	r0, #1
 8022f48:	f100 808d 	bmi.w	8023066 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8022f4c:	4581      	cmp	r9, r0
 8022f4e:	f340 808a 	ble.w	8023066 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8022f52:	2c00      	cmp	r4, #0
 8022f54:	f000 8087 	beq.w	8023066 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8022f58:	44e1      	add	r9, ip
 8022f5a:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022f5e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8022f62:	4413      	add	r3, r2
 8022f64:	b2a4      	uxth	r4, r4
 8022f66:	fa1f fe8e 	uxth.w	lr, lr
 8022f6a:	fb04 fb0e 	mul.w	fp, r4, lr
 8022f6e:	0124      	lsls	r4, r4, #4
 8022f70:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8022f74:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8022f78:	eba4 040b 	sub.w	r4, r4, fp
 8022f7c:	fa1f f08e 	uxth.w	r0, lr
 8022f80:	b2a2      	uxth	r2, r4
 8022f82:	78ac      	ldrb	r4, [r5, #2]
 8022f84:	f897 c002 	ldrb.w	ip, [r7, #2]
 8022f88:	9901      	ldr	r1, [sp, #4]
 8022f8a:	eba9 0900 	sub.w	r9, r9, r0
 8022f8e:	fa1f f989 	uxth.w	r9, r9
 8022f92:	4354      	muls	r4, r2
 8022f94:	fb09 440c 	mla	r4, r9, ip, r4
 8022f98:	f896 c002 	ldrb.w	ip, [r6, #2]
 8022f9c:	fb00 440c 	mla	r4, r0, ip, r4
 8022fa0:	f893 c002 	ldrb.w	ip, [r3, #2]
 8022fa4:	fa1f fe88 	uxth.w	lr, r8
 8022fa8:	ea6f 0808 	mvn.w	r8, r8
 8022fac:	fa5f f888 	uxtb.w	r8, r8
 8022fb0:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8022fb4:	fb1a fa08 	smulbb	sl, sl, r8
 8022fb8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8022fbc:	fb0c ac0e 	mla	ip, ip, lr, sl
 8022fc0:	f895 a001 	ldrb.w	sl, [r5, #1]
 8022fc4:	787c      	ldrb	r4, [r7, #1]
 8022fc6:	782d      	ldrb	r5, [r5, #0]
 8022fc8:	783f      	ldrb	r7, [r7, #0]
 8022fca:	fb02 fa0a 	mul.w	sl, r2, sl
 8022fce:	fb09 aa04 	mla	sl, r9, r4, sl
 8022fd2:	7874      	ldrb	r4, [r6, #1]
 8022fd4:	436a      	muls	r2, r5
 8022fd6:	7835      	ldrb	r5, [r6, #0]
 8022fd8:	fb00 aa04 	mla	sl, r0, r4, sl
 8022fdc:	fb09 2207 	mla	r2, r9, r7, r2
 8022fe0:	785c      	ldrb	r4, [r3, #1]
 8022fe2:	781b      	ldrb	r3, [r3, #0]
 8022fe4:	fb00 2005 	mla	r0, r0, r5, r2
 8022fe8:	fb0b a404 	mla	r4, fp, r4, sl
 8022fec:	fb0b 0b03 	mla	fp, fp, r3, r0
 8022ff0:	9b02      	ldr	r3, [sp, #8]
 8022ff2:	fb11 fa08 	smulbb	sl, r1, r8
 8022ff6:	fa1f fc8c 	uxth.w	ip, ip
 8022ffa:	fb13 f808 	smulbb	r8, r3, r8
 8022ffe:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8023002:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8023006:	fb04 a40e 	mla	r4, r4, lr, sl
 802300a:	f10c 0301 	add.w	r3, ip, #1
 802300e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8023012:	fa1f fe8e 	uxth.w	lr, lr
 8023016:	b2a4      	uxth	r4, r4
 8023018:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802301c:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8023020:	f104 0a01 	add.w	sl, r4, #1
 8023024:	f10e 0c01 	add.w	ip, lr, #1
 8023028:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802302c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8023030:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023034:	0964      	lsrs	r4, r4, #5
 8023036:	ea4c 0c03 	orr.w	ip, ip, r3
 802303a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802303e:	9b03      	ldr	r3, [sp, #12]
 8023040:	ea4c 0c04 	orr.w	ip, ip, r4
 8023044:	f8a3 c000 	strh.w	ip, [r3]
 8023048:	b007      	add	sp, #28
 802304a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802304e:	af05      	add	r7, sp, #20
 8023050:	e756      	b.n	8022f00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8023052:	ad05      	add	r5, sp, #20
 8023054:	462f      	mov	r7, r5
 8023056:	e761      	b.n	8022f1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8023058:	ad05      	add	r5, sp, #20
 802305a:	e75f      	b.n	8022f1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 802305c:	ae05      	add	r6, sp, #20
 802305e:	e772      	b.n	8022f46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8023060:	ab05      	add	r3, sp, #20
 8023062:	461e      	mov	r6, r3
 8023064:	e77e      	b.n	8022f64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8023066:	ab05      	add	r3, sp, #20
 8023068:	e77c      	b.n	8022f64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0802306a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802306a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802306e:	b095      	sub	sp, #84	; 0x54
 8023070:	9212      	str	r2, [sp, #72]	; 0x48
 8023072:	9309      	str	r3, [sp, #36]	; 0x24
 8023074:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023076:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 802307a:	930f      	str	r3, [sp, #60]	; 0x3c
 802307c:	910e      	str	r1, [sp, #56]	; 0x38
 802307e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8023082:	9013      	str	r0, [sp, #76]	; 0x4c
 8023084:	6850      	ldr	r0, [r2, #4]
 8023086:	6812      	ldr	r2, [r2, #0]
 8023088:	fb00 1303 	mla	r3, r0, r3, r1
 802308c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023090:	930a      	str	r3, [sp, #40]	; 0x28
 8023092:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023094:	681b      	ldr	r3, [r3, #0]
 8023096:	930d      	str	r3, [sp, #52]	; 0x34
 8023098:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802309a:	685c      	ldr	r4, [r3, #4]
 802309c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802309e:	43db      	mvns	r3, r3
 80230a0:	b2db      	uxtb	r3, r3
 80230a2:	3404      	adds	r4, #4
 80230a4:	930b      	str	r3, [sp, #44]	; 0x2c
 80230a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80230a8:	2b00      	cmp	r3, #0
 80230aa:	dc03      	bgt.n	80230b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80230ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80230ae:	2b00      	cmp	r3, #0
 80230b0:	f340 8255 	ble.w	802355e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80230b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80230b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80230ba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80230be:	1e48      	subs	r0, r1, #1
 80230c0:	1e55      	subs	r5, r2, #1
 80230c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80230c4:	2b00      	cmp	r3, #0
 80230c6:	f340 80f9 	ble.w	80232bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80230ca:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80230cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80230ce:	1436      	asrs	r6, r6, #16
 80230d0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80230d4:	d406      	bmi.n	80230e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80230d6:	4286      	cmp	r6, r0
 80230d8:	da04      	bge.n	80230e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80230da:	2b00      	cmp	r3, #0
 80230dc:	db02      	blt.n	80230e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80230de:	42ab      	cmp	r3, r5
 80230e0:	f2c0 80ed 	blt.w	80232be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 80230e4:	3601      	adds	r6, #1
 80230e6:	f100 80da 	bmi.w	802329e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80230ea:	42b1      	cmp	r1, r6
 80230ec:	f2c0 80d7 	blt.w	802329e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80230f0:	3301      	adds	r3, #1
 80230f2:	f100 80d4 	bmi.w	802329e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80230f6:	429a      	cmp	r2, r3
 80230f8:	f2c0 80d1 	blt.w	802329e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80230fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80230fe:	9311      	str	r3, [sp, #68]	; 0x44
 8023100:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023102:	930c      	str	r3, [sp, #48]	; 0x30
 8023104:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023106:	2b00      	cmp	r3, #0
 8023108:	f340 80fa 	ble.w	8023300 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802310c:	9826      	ldr	r0, [sp, #152]	; 0x98
 802310e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023110:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023112:	68c6      	ldr	r6, [r0, #12]
 8023114:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023116:	141d      	asrs	r5, r3, #16
 8023118:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802311c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802311e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8023120:	1400      	asrs	r0, r0, #16
 8023122:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8023126:	6892      	ldr	r2, [r2, #8]
 8023128:	f100 813e 	bmi.w	80233a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802312c:	1e57      	subs	r7, r2, #1
 802312e:	42b8      	cmp	r0, r7
 8023130:	f280 813a 	bge.w	80233a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8023134:	2d00      	cmp	r5, #0
 8023136:	f2c0 8137 	blt.w	80233a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802313a:	1e77      	subs	r7, r6, #1
 802313c:	42bd      	cmp	r5, r7
 802313e:	f280 8133 	bge.w	80233a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8023142:	b212      	sxth	r2, r2
 8023144:	fb05 0002 	mla	r0, r5, r2, r0
 8023148:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802314a:	f815 a000 	ldrb.w	sl, [r5, r0]
 802314e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8023152:	182e      	adds	r6, r5, r0
 8023154:	eb04 050a 	add.w	r5, r4, sl
 8023158:	2b00      	cmp	r3, #0
 802315a:	f000 8117 	beq.w	802338c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 802315e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8023162:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8023166:	44a4      	add	ip, r4
 8023168:	2900      	cmp	r1, #0
 802316a:	f000 8117 	beq.w	802339c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 802316e:	18b0      	adds	r0, r6, r2
 8023170:	5cb2      	ldrb	r2, [r6, r2]
 8023172:	7840      	ldrb	r0, [r0, #1]
 8023174:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023178:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802317c:	4422      	add	r2, r4
 802317e:	4420      	add	r0, r4
 8023180:	b29b      	uxth	r3, r3
 8023182:	b289      	uxth	r1, r1
 8023184:	fb03 f901 	mul.w	r9, r3, r1
 8023188:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802318c:	011b      	lsls	r3, r3, #4
 802318e:	b289      	uxth	r1, r1
 8023190:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8023194:	f895 b002 	ldrb.w	fp, [r5, #2]
 8023198:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802319a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 802319e:	f8b6 e000 	ldrh.w	lr, [r6]
 80231a2:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80231a6:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80231aa:	eba3 0309 	sub.w	r3, r3, r9
 80231ae:	b29b      	uxth	r3, r3
 80231b0:	eba8 0801 	sub.w	r8, r8, r1
 80231b4:	fa1f f888 	uxth.w	r8, r8
 80231b8:	435f      	muls	r7, r3
 80231ba:	fb08 770b 	mla	r7, r8, fp, r7
 80231be:	f892 b002 	ldrb.w	fp, [r2, #2]
 80231c2:	9310      	str	r3, [sp, #64]	; 0x40
 80231c4:	fb01 770b 	mla	r7, r1, fp, r7
 80231c8:	f890 b002 	ldrb.w	fp, [r0, #2]
 80231cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80231ce:	fb09 770b 	mla	r7, r9, fp, r7
 80231d2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80231d6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80231da:	fb1b fb03 	smulbb	fp, fp, r3
 80231de:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80231e2:	fb07 b706 	mla	r7, r7, r6, fp
 80231e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80231e8:	f895 b001 	ldrb.w	fp, [r5, #1]
 80231ec:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80231f0:	f89c c000 	ldrb.w	ip, [ip]
 80231f4:	435d      	muls	r5, r3
 80231f6:	fb08 550b 	mla	r5, r8, fp, r5
 80231fa:	f892 b001 	ldrb.w	fp, [r2, #1]
 80231fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023200:	fb01 550b 	mla	r5, r1, fp, r5
 8023204:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023208:	fb09 550b 	mla	r5, r9, fp, r5
 802320c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8023210:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8023214:	fb1b fb03 	smulbb	fp, fp, r3
 8023218:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802321a:	fb03 f30c 	mul.w	r3, r3, ip
 802321e:	f892 c000 	ldrb.w	ip, [r2]
 8023222:	fb08 330a 	mla	r3, r8, sl, r3
 8023226:	fb01 330c 	mla	r3, r1, ip, r3
 802322a:	f890 c000 	ldrb.w	ip, [r0]
 802322e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023232:	fb09 3c0c 	mla	ip, r9, ip, r3
 8023236:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023238:	fa5f fe8e 	uxtb.w	lr, lr
 802323c:	b2bf      	uxth	r7, r7
 802323e:	fb1e fe03 	smulbb	lr, lr, r3
 8023242:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8023246:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802324a:	fb05 b506 	mla	r5, r5, r6, fp
 802324e:	1c7b      	adds	r3, r7, #1
 8023250:	fb0c e606 	mla	r6, ip, r6, lr
 8023254:	b2ad      	uxth	r5, r5
 8023256:	b2b6      	uxth	r6, r6
 8023258:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802325c:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8023260:	f105 0b01 	add.w	fp, r5, #1
 8023264:	1c77      	adds	r7, r6, #1
 8023266:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 802326a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802326e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023272:	096d      	lsrs	r5, r5, #5
 8023274:	431f      	orrs	r7, r3
 8023276:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802327a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802327c:	433d      	orrs	r5, r7
 802327e:	801d      	strh	r5, [r3, #0]
 8023280:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023282:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023284:	3302      	adds	r3, #2
 8023286:	930c      	str	r3, [sp, #48]	; 0x30
 8023288:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802328a:	4413      	add	r3, r2
 802328c:	931f      	str	r3, [sp, #124]	; 0x7c
 802328e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023290:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023292:	4413      	add	r3, r2
 8023294:	9320      	str	r3, [sp, #128]	; 0x80
 8023296:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023298:	3b01      	subs	r3, #1
 802329a:	9311      	str	r3, [sp, #68]	; 0x44
 802329c:	e732      	b.n	8023104 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802329e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80232a0:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80232a2:	4433      	add	r3, r6
 80232a4:	931f      	str	r3, [sp, #124]	; 0x7c
 80232a6:	9e22      	ldr	r6, [sp, #136]	; 0x88
 80232a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80232aa:	4433      	add	r3, r6
 80232ac:	9320      	str	r3, [sp, #128]	; 0x80
 80232ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80232b0:	3b01      	subs	r3, #1
 80232b2:	9309      	str	r3, [sp, #36]	; 0x24
 80232b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80232b6:	3302      	adds	r3, #2
 80232b8:	930a      	str	r3, [sp, #40]	; 0x28
 80232ba:	e702      	b.n	80230c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80232bc:	d027      	beq.n	802330e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80232be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80232c0:	9821      	ldr	r0, [sp, #132]	; 0x84
 80232c2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80232c4:	3b01      	subs	r3, #1
 80232c6:	fb00 5003 	mla	r0, r0, r3, r5
 80232ca:	1400      	asrs	r0, r0, #16
 80232cc:	f53f af16 	bmi.w	80230fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80232d0:	3901      	subs	r1, #1
 80232d2:	4288      	cmp	r0, r1
 80232d4:	f6bf af12 	bge.w	80230fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80232d8:	9922      	ldr	r1, [sp, #136]	; 0x88
 80232da:	9820      	ldr	r0, [sp, #128]	; 0x80
 80232dc:	fb01 0303 	mla	r3, r1, r3, r0
 80232e0:	141b      	asrs	r3, r3, #16
 80232e2:	f53f af0b 	bmi.w	80230fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80232e6:	3a01      	subs	r2, #1
 80232e8:	4293      	cmp	r3, r2
 80232ea:	f6bf af07 	bge.w	80230fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80232ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80232f0:	9311      	str	r3, [sp, #68]	; 0x44
 80232f2:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80232f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80232f8:	930c      	str	r3, [sp, #48]	; 0x30
 80232fa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80232fc:	2b00      	cmp	r3, #0
 80232fe:	dc70      	bgt.n	80233e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023300:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023302:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023304:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023308:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802330c:	930a      	str	r3, [sp, #40]	; 0x28
 802330e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023310:	2b00      	cmp	r3, #0
 8023312:	f340 8124 	ble.w	802355e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8023316:	ee30 0a04 	vadd.f32	s0, s0, s8
 802331a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802331e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023322:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023324:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023328:	ee31 1a05 	vadd.f32	s2, s2, s10
 802332c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023330:	eef0 6a62 	vmov.f32	s13, s5
 8023334:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023338:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802333c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023340:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8023344:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023348:	eef0 6a43 	vmov.f32	s13, s6
 802334c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023350:	ee12 2a90 	vmov	r2, s5
 8023354:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023358:	fb92 f3f3 	sdiv	r3, r2, r3
 802335c:	ee13 2a10 	vmov	r2, s6
 8023360:	9321      	str	r3, [sp, #132]	; 0x84
 8023362:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023364:	fb92 f3f3 	sdiv	r3, r2, r3
 8023368:	9322      	str	r3, [sp, #136]	; 0x88
 802336a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802336c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802336e:	3b01      	subs	r3, #1
 8023370:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023374:	930e      	str	r3, [sp, #56]	; 0x38
 8023376:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023378:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 802337c:	bf08      	it	eq
 802337e:	4613      	moveq	r3, r2
 8023380:	9309      	str	r3, [sp, #36]	; 0x24
 8023382:	eeb0 3a67 	vmov.f32	s6, s15
 8023386:	eef0 2a47 	vmov.f32	s5, s14
 802338a:	e68c      	b.n	80230a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802338c:	b149      	cbz	r1, 80233a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 802338e:	5cb2      	ldrb	r2, [r6, r2]
 8023390:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023394:	4422      	add	r2, r4
 8023396:	4628      	mov	r0, r5
 8023398:	46ac      	mov	ip, r5
 802339a:	e6f1      	b.n	8023180 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802339c:	4628      	mov	r0, r5
 802339e:	462a      	mov	r2, r5
 80233a0:	e6ee      	b.n	8023180 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80233a2:	4628      	mov	r0, r5
 80233a4:	462a      	mov	r2, r5
 80233a6:	e7f7      	b.n	8023398 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80233a8:	1c47      	adds	r7, r0, #1
 80233aa:	f53f af69 	bmi.w	8023280 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80233ae:	42ba      	cmp	r2, r7
 80233b0:	f6ff af66 	blt.w	8023280 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80233b4:	1c6f      	adds	r7, r5, #1
 80233b6:	f53f af63 	bmi.w	8023280 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80233ba:	42be      	cmp	r6, r7
 80233bc:	f6ff af60 	blt.w	8023280 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80233c0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80233c2:	9002      	str	r0, [sp, #8]
 80233c4:	b236      	sxth	r6, r6
 80233c6:	b212      	sxth	r2, r2
 80233c8:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80233cc:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80233d0:	9200      	str	r2, [sp, #0]
 80233d2:	9601      	str	r6, [sp, #4]
 80233d4:	4623      	mov	r3, r4
 80233d6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80233da:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80233dc:	f7ff fd59 	bl	8022e92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 80233e0:	e74e      	b.n	8023280 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80233e2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80233e4:	9820      	ldr	r0, [sp, #128]	; 0x80
 80233e6:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80233e8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80233ea:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80233ee:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80233f0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80233f4:	142d      	asrs	r5, r5, #16
 80233f6:	1400      	asrs	r0, r0, #16
 80233f8:	fb02 5000 	mla	r0, r2, r0, r5
 80233fc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80233fe:	f815 9000 	ldrb.w	r9, [r5, r0]
 8023402:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8023406:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802340a:	182e      	adds	r6, r5, r0
 802340c:	eb04 0509 	add.w	r5, r4, r9
 8023410:	2b00      	cmp	r3, #0
 8023412:	f000 8096 	beq.w	8023542 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8023416:	7877      	ldrb	r7, [r6, #1]
 8023418:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802341c:	4427      	add	r7, r4
 802341e:	2900      	cmp	r1, #0
 8023420:	f000 8097 	beq.w	8023552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8023424:	18b0      	adds	r0, r6, r2
 8023426:	5cb2      	ldrb	r2, [r6, r2]
 8023428:	7840      	ldrb	r0, [r0, #1]
 802342a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802342e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023432:	4422      	add	r2, r4
 8023434:	4420      	add	r0, r4
 8023436:	b29b      	uxth	r3, r3
 8023438:	b289      	uxth	r1, r1
 802343a:	fb03 f801 	mul.w	r8, r3, r1
 802343e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8023440:	f895 b002 	ldrb.w	fp, [r5, #2]
 8023444:	f8b6 c000 	ldrh.w	ip, [r6]
 8023448:	78be      	ldrb	r6, [r7, #2]
 802344a:	f814 9009 	ldrb.w	r9, [r4, r9]
 802344e:	011b      	lsls	r3, r3, #4
 8023450:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8023454:	b289      	uxth	r1, r1
 8023456:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802345a:	eba3 0308 	sub.w	r3, r3, r8
 802345e:	b29b      	uxth	r3, r3
 8023460:	ebae 0e01 	sub.w	lr, lr, r1
 8023464:	fa1f fe8e 	uxth.w	lr, lr
 8023468:	435e      	muls	r6, r3
 802346a:	fb0e 660b 	mla	r6, lr, fp, r6
 802346e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8023472:	9310      	str	r3, [sp, #64]	; 0x40
 8023474:	fb01 660b 	mla	r6, r1, fp, r6
 8023478:	f890 b002 	ldrb.w	fp, [r0, #2]
 802347c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802347e:	fb08 660b 	mla	r6, r8, fp, r6
 8023482:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8023486:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802348a:	fb1b fb03 	smulbb	fp, fp, r3
 802348e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023492:	fb06 b60a 	mla	r6, r6, sl, fp
 8023496:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023498:	f895 b001 	ldrb.w	fp, [r5, #1]
 802349c:	787d      	ldrb	r5, [r7, #1]
 802349e:	783f      	ldrb	r7, [r7, #0]
 80234a0:	435d      	muls	r5, r3
 80234a2:	fb0e 550b 	mla	r5, lr, fp, r5
 80234a6:	f892 b001 	ldrb.w	fp, [r2, #1]
 80234aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80234ac:	fb01 550b 	mla	r5, r1, fp, r5
 80234b0:	f890 b001 	ldrb.w	fp, [r0, #1]
 80234b4:	fb08 550b 	mla	r5, r8, fp, r5
 80234b8:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80234bc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80234c0:	fb1b fb03 	smulbb	fp, fp, r3
 80234c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80234c6:	437b      	muls	r3, r7
 80234c8:	7817      	ldrb	r7, [r2, #0]
 80234ca:	fb0e 3309 	mla	r3, lr, r9, r3
 80234ce:	fb01 3307 	mla	r3, r1, r7, r3
 80234d2:	7807      	ldrb	r7, [r0, #0]
 80234d4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80234d8:	fb08 3707 	mla	r7, r8, r7, r3
 80234dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80234de:	fa5f fc8c 	uxtb.w	ip, ip
 80234e2:	fb1c fc03 	smulbb	ip, ip, r3
 80234e6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80234ea:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80234ee:	fb05 b50a 	mla	r5, r5, sl, fp
 80234f2:	fb07 c70a 	mla	r7, r7, sl, ip
 80234f6:	b2b6      	uxth	r6, r6
 80234f8:	b2ad      	uxth	r5, r5
 80234fa:	b2bf      	uxth	r7, r7
 80234fc:	1c73      	adds	r3, r6, #1
 80234fe:	1c7a      	adds	r2, r7, #1
 8023500:	f105 0b01 	add.w	fp, r5, #1
 8023504:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8023508:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802350c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8023510:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023514:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8023518:	096d      	lsrs	r5, r5, #5
 802351a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802351c:	4316      	orrs	r6, r2
 802351e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023522:	432e      	orrs	r6, r5
 8023524:	f823 6b02 	strh.w	r6, [r3], #2
 8023528:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802352a:	930c      	str	r3, [sp, #48]	; 0x30
 802352c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802352e:	4413      	add	r3, r2
 8023530:	931f      	str	r3, [sp, #124]	; 0x7c
 8023532:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023534:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023536:	4413      	add	r3, r2
 8023538:	9320      	str	r3, [sp, #128]	; 0x80
 802353a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802353c:	3b01      	subs	r3, #1
 802353e:	9311      	str	r3, [sp, #68]	; 0x44
 8023540:	e6db      	b.n	80232fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8023542:	b149      	cbz	r1, 8023558 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8023544:	5cb2      	ldrb	r2, [r6, r2]
 8023546:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802354a:	4422      	add	r2, r4
 802354c:	4628      	mov	r0, r5
 802354e:	462f      	mov	r7, r5
 8023550:	e771      	b.n	8023436 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8023552:	4628      	mov	r0, r5
 8023554:	462a      	mov	r2, r5
 8023556:	e76e      	b.n	8023436 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8023558:	4628      	mov	r0, r5
 802355a:	462a      	mov	r2, r5
 802355c:	e7f7      	b.n	802354e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802355e:	b015      	add	sp, #84	; 0x54
 8023560:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023564 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8023564:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023568:	880f      	ldrh	r7, [r1, #0]
 802356a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 802356e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8023572:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8023576:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802357a:	023c      	lsls	r4, r7, #8
 802357c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8023580:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8023584:	017c      	lsls	r4, r7, #5
 8023586:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 802358a:	00ff      	lsls	r7, r7, #3
 802358c:	ea4b 0404 	orr.w	r4, fp, r4
 8023590:	b2ff      	uxtb	r7, r7
 8023592:	fb05 ca0e 	mla	sl, r5, lr, ip
 8023596:	4327      	orrs	r7, r4
 8023598:	2d00      	cmp	r5, #0
 802359a:	eb02 080a 	add.w	r8, r2, sl
 802359e:	9701      	str	r7, [sp, #4]
 80235a0:	db7e      	blt.n	80236a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80235a2:	45a9      	cmp	r9, r5
 80235a4:	dd7c      	ble.n	80236a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80235a6:	f1bc 0f00 	cmp.w	ip, #0
 80235aa:	db77      	blt.n	802369c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80235ac:	45e6      	cmp	lr, ip
 80235ae:	dd75      	ble.n	802369c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80235b0:	f812 700a 	ldrb.w	r7, [r2, sl]
 80235b4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80235b8:	441f      	add	r7, r3
 80235ba:	f11c 0201 	adds.w	r2, ip, #1
 80235be:	d472      	bmi.n	80236a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80235c0:	4596      	cmp	lr, r2
 80235c2:	dd70      	ble.n	80236a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80235c4:	2800      	cmp	r0, #0
 80235c6:	d06e      	beq.n	80236a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80235c8:	f898 4001 	ldrb.w	r4, [r8, #1]
 80235cc:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80235d0:	441c      	add	r4, r3
 80235d2:	3501      	adds	r5, #1
 80235d4:	d46b      	bmi.n	80236ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80235d6:	45a9      	cmp	r9, r5
 80235d8:	dd69      	ble.n	80236ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80235da:	2e00      	cmp	r6, #0
 80235dc:	d067      	beq.n	80236ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80235de:	f1bc 0f00 	cmp.w	ip, #0
 80235e2:	db62      	blt.n	80236aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80235e4:	45e6      	cmp	lr, ip
 80235e6:	dd60      	ble.n	80236aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80235e8:	f818 500e 	ldrb.w	r5, [r8, lr]
 80235ec:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80235f0:	441d      	add	r5, r3
 80235f2:	f11c 0201 	adds.w	r2, ip, #1
 80235f6:	d45d      	bmi.n	80236b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80235f8:	4596      	cmp	lr, r2
 80235fa:	dd5b      	ble.n	80236b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80235fc:	2800      	cmp	r0, #0
 80235fe:	d059      	beq.n	80236b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023600:	44c6      	add	lr, r8
 8023602:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023606:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802360a:	4413      	add	r3, r2
 802360c:	b280      	uxth	r0, r0
 802360e:	b2b2      	uxth	r2, r6
 8023610:	fb00 f602 	mul.w	r6, r0, r2
 8023614:	0100      	lsls	r0, r0, #4
 8023616:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802361a:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 802361e:	1b80      	subs	r0, r0, r6
 8023620:	fa1f fc82 	uxth.w	ip, r2
 8023624:	b282      	uxth	r2, r0
 8023626:	78a0      	ldrb	r0, [r4, #2]
 8023628:	f897 e002 	ldrb.w	lr, [r7, #2]
 802362c:	f897 9000 	ldrb.w	r9, [r7]
 8023630:	787f      	ldrb	r7, [r7, #1]
 8023632:	eba8 080c 	sub.w	r8, r8, ip
 8023636:	fa1f f888 	uxth.w	r8, r8
 802363a:	4350      	muls	r0, r2
 802363c:	fb08 0e0e 	mla	lr, r8, lr, r0
 8023640:	78a8      	ldrb	r0, [r5, #2]
 8023642:	fb0c e000 	mla	r0, ip, r0, lr
 8023646:	f893 e002 	ldrb.w	lr, [r3, #2]
 802364a:	fb06 0e0e 	mla	lr, r6, lr, r0
 802364e:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8023652:	f894 e000 	ldrb.w	lr, [r4]
 8023656:	fb02 fe0e 	mul.w	lr, r2, lr
 802365a:	fb08 e909 	mla	r9, r8, r9, lr
 802365e:	f895 e000 	ldrb.w	lr, [r5]
 8023662:	fb0c 990e 	mla	r9, ip, lr, r9
 8023666:	f893 e000 	ldrb.w	lr, [r3]
 802366a:	785b      	ldrb	r3, [r3, #1]
 802366c:	fb06 9e0e 	mla	lr, r6, lr, r9
 8023670:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8023674:	ea4e 0e00 	orr.w	lr, lr, r0
 8023678:	7860      	ldrb	r0, [r4, #1]
 802367a:	4350      	muls	r0, r2
 802367c:	786a      	ldrb	r2, [r5, #1]
 802367e:	fb08 0007 	mla	r0, r8, r7, r0
 8023682:	fb0c 0202 	mla	r2, ip, r2, r0
 8023686:	fb06 2303 	mla	r3, r6, r3, r2
 802368a:	095b      	lsrs	r3, r3, #5
 802368c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023690:	ea4e 0303 	orr.w	r3, lr, r3
 8023694:	800b      	strh	r3, [r1, #0]
 8023696:	b003      	add	sp, #12
 8023698:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802369c:	af01      	add	r7, sp, #4
 802369e:	e78c      	b.n	80235ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 80236a0:	ac01      	add	r4, sp, #4
 80236a2:	4627      	mov	r7, r4
 80236a4:	e795      	b.n	80235d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80236a6:	ac01      	add	r4, sp, #4
 80236a8:	e793      	b.n	80235d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80236aa:	ad01      	add	r5, sp, #4
 80236ac:	e7a1      	b.n	80235f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 80236ae:	ab01      	add	r3, sp, #4
 80236b0:	461d      	mov	r5, r3
 80236b2:	e7ab      	b.n	802360c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 80236b4:	ab01      	add	r3, sp, #4
 80236b6:	e7a9      	b.n	802360c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

080236b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80236b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80236bc:	b08f      	sub	sp, #60	; 0x3c
 80236be:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 80236c2:	920c      	str	r2, [sp, #48]	; 0x30
 80236c4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80236c6:	910a      	str	r1, [sp, #40]	; 0x28
 80236c8:	9306      	str	r3, [sp, #24]
 80236ca:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 80236ce:	900d      	str	r0, [sp, #52]	; 0x34
 80236d0:	6850      	ldr	r0, [r2, #4]
 80236d2:	6812      	ldr	r2, [r2, #0]
 80236d4:	fb00 1303 	mla	r3, r0, r3, r1
 80236d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80236dc:	9307      	str	r3, [sp, #28]
 80236de:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80236e0:	681b      	ldr	r3, [r3, #0]
 80236e2:	9308      	str	r3, [sp, #32]
 80236e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80236e6:	685c      	ldr	r4, [r3, #4]
 80236e8:	3404      	adds	r4, #4
 80236ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80236ec:	2b00      	cmp	r3, #0
 80236ee:	dc03      	bgt.n	80236f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80236f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80236f2:	2b00      	cmp	r3, #0
 80236f4:	f340 81d6 	ble.w	8023aa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80236f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80236fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80236fe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023702:	1e48      	subs	r0, r1, #1
 8023704:	1e56      	subs	r6, r2, #1
 8023706:	9b06      	ldr	r3, [sp, #24]
 8023708:	2b00      	cmp	r3, #0
 802370a:	f340 80b7 	ble.w	802387c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 802370e:	ea5f 472b 	movs.w	r7, fp, asr #16
 8023712:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023716:	d406      	bmi.n	8023726 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023718:	4287      	cmp	r7, r0
 802371a:	da04      	bge.n	8023726 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802371c:	2b00      	cmp	r3, #0
 802371e:	db02      	blt.n	8023726 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023720:	42b3      	cmp	r3, r6
 8023722:	f2c0 80ac 	blt.w	802387e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8023726:	3701      	adds	r7, #1
 8023728:	f100 809d 	bmi.w	8023866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802372c:	42b9      	cmp	r1, r7
 802372e:	f2c0 809a 	blt.w	8023866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023732:	3301      	adds	r3, #1
 8023734:	f100 8097 	bmi.w	8023866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8023738:	429a      	cmp	r2, r3
 802373a:	f2c0 8094 	blt.w	8023866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 802373e:	9b06      	ldr	r3, [sp, #24]
 8023740:	930b      	str	r3, [sp, #44]	; 0x2c
 8023742:	9b07      	ldr	r3, [sp, #28]
 8023744:	9309      	str	r3, [sp, #36]	; 0x24
 8023746:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023748:	2b00      	cmp	r3, #0
 802374a:	f340 80b5 	ble.w	80238b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802374e:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023750:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023752:	68c7      	ldr	r7, [r0, #12]
 8023754:	6892      	ldr	r2, [r2, #8]
 8023756:	ea5f 402b 	movs.w	r0, fp, asr #16
 802375a:	ea4f 4625 	mov.w	r6, r5, asr #16
 802375e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8023762:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023766:	f100 80fb 	bmi.w	8023960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802376a:	f102 3cff 	add.w	ip, r2, #4294967295
 802376e:	4560      	cmp	r0, ip
 8023770:	f280 80f6 	bge.w	8023960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023774:	2e00      	cmp	r6, #0
 8023776:	f2c0 80f3 	blt.w	8023960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802377a:	f107 3cff 	add.w	ip, r7, #4294967295
 802377e:	4566      	cmp	r6, ip
 8023780:	f280 80ee 	bge.w	8023960 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023784:	b212      	sxth	r2, r2
 8023786:	fb06 0002 	mla	r0, r6, r2, r0
 802378a:	9e08      	ldr	r6, [sp, #32]
 802378c:	1837      	adds	r7, r6, r0
 802378e:	5c30      	ldrb	r0, [r6, r0]
 8023790:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8023794:	eb04 0c08 	add.w	ip, r4, r8
 8023798:	2b00      	cmp	r3, #0
 802379a:	f000 80d3 	beq.w	8023944 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802379e:	787e      	ldrb	r6, [r7, #1]
 80237a0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80237a4:	4426      	add	r6, r4
 80237a6:	2900      	cmp	r1, #0
 80237a8:	f000 80d4 	beq.w	8023954 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 80237ac:	18b8      	adds	r0, r7, r2
 80237ae:	5cba      	ldrb	r2, [r7, r2]
 80237b0:	7840      	ldrb	r0, [r0, #1]
 80237b2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80237b6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80237ba:	4422      	add	r2, r4
 80237bc:	4420      	add	r0, r4
 80237be:	b29b      	uxth	r3, r3
 80237c0:	b289      	uxth	r1, r1
 80237c2:	fb03 f901 	mul.w	r9, r3, r1
 80237c6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80237ca:	011b      	lsls	r3, r3, #4
 80237cc:	b289      	uxth	r1, r1
 80237ce:	78b7      	ldrb	r7, [r6, #2]
 80237d0:	f89c a002 	ldrb.w	sl, [ip, #2]
 80237d4:	f89c c001 	ldrb.w	ip, [ip, #1]
 80237d8:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80237dc:	eba3 0309 	sub.w	r3, r3, r9
 80237e0:	b29b      	uxth	r3, r3
 80237e2:	ebae 0e01 	sub.w	lr, lr, r1
 80237e6:	fa1f fe8e 	uxth.w	lr, lr
 80237ea:	435f      	muls	r7, r3
 80237ec:	fb0e 770a 	mla	r7, lr, sl, r7
 80237f0:	f892 a002 	ldrb.w	sl, [r2, #2]
 80237f4:	fb01 770a 	mla	r7, r1, sl, r7
 80237f8:	f890 a002 	ldrb.w	sl, [r0, #2]
 80237fc:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023800:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023804:	f896 8000 	ldrb.w	r8, [r6]
 8023808:	7876      	ldrb	r6, [r6, #1]
 802380a:	fb03 f808 	mul.w	r8, r3, r8
 802380e:	fb0e 8807 	mla	r8, lr, r7, r8
 8023812:	7817      	ldrb	r7, [r2, #0]
 8023814:	fb01 8807 	mla	r8, r1, r7, r8
 8023818:	7807      	ldrb	r7, [r0, #0]
 802381a:	fb09 8707 	mla	r7, r9, r7, r8
 802381e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8023822:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023826:	ea47 070a 	orr.w	r7, r7, sl
 802382a:	4373      	muls	r3, r6
 802382c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8023830:	fb0e 330c 	mla	r3, lr, ip, r3
 8023834:	fb01 310a 	mla	r1, r1, sl, r3
 8023838:	f890 a001 	ldrb.w	sl, [r0, #1]
 802383c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802383e:	fb09 1a0a 	mla	sl, r9, sl, r1
 8023842:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023846:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802384a:	ea47 070a 	orr.w	r7, r7, sl
 802384e:	801f      	strh	r7, [r3, #0]
 8023850:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023852:	3302      	adds	r3, #2
 8023854:	9309      	str	r3, [sp, #36]	; 0x24
 8023856:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023858:	449b      	add	fp, r3
 802385a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802385c:	441d      	add	r5, r3
 802385e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023860:	3b01      	subs	r3, #1
 8023862:	930b      	str	r3, [sp, #44]	; 0x2c
 8023864:	e76f      	b.n	8023746 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023866:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023868:	449b      	add	fp, r3
 802386a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802386c:	441d      	add	r5, r3
 802386e:	9b06      	ldr	r3, [sp, #24]
 8023870:	3b01      	subs	r3, #1
 8023872:	9306      	str	r3, [sp, #24]
 8023874:	9b07      	ldr	r3, [sp, #28]
 8023876:	3302      	adds	r3, #2
 8023878:	9307      	str	r3, [sp, #28]
 802387a:	e744      	b.n	8023706 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 802387c:	d023      	beq.n	80238c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802387e:	9b06      	ldr	r3, [sp, #24]
 8023880:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023882:	3b01      	subs	r3, #1
 8023884:	fb00 b003 	mla	r0, r0, r3, fp
 8023888:	1400      	asrs	r0, r0, #16
 802388a:	f53f af58 	bmi.w	802373e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802388e:	3901      	subs	r1, #1
 8023890:	4288      	cmp	r0, r1
 8023892:	f6bf af54 	bge.w	802373e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023896:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023898:	fb01 5303 	mla	r3, r1, r3, r5
 802389c:	141b      	asrs	r3, r3, #16
 802389e:	f53f af4e 	bmi.w	802373e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80238a2:	3a01      	subs	r2, #1
 80238a4:	4293      	cmp	r3, r2
 80238a6:	f6bf af4a 	bge.w	802373e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80238aa:	9b06      	ldr	r3, [sp, #24]
 80238ac:	9309      	str	r3, [sp, #36]	; 0x24
 80238ae:	9b07      	ldr	r3, [sp, #28]
 80238b0:	930b      	str	r3, [sp, #44]	; 0x2c
 80238b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80238b4:	2b00      	cmp	r3, #0
 80238b6:	dc70      	bgt.n	802399a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 80238b8:	9b06      	ldr	r3, [sp, #24]
 80238ba:	9a07      	ldr	r2, [sp, #28]
 80238bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80238c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80238c4:	9307      	str	r3, [sp, #28]
 80238c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80238c8:	2b00      	cmp	r3, #0
 80238ca:	f340 80eb 	ble.w	8023aa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80238ce:	ee30 0a04 	vadd.f32	s0, s0, s8
 80238d2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80238d6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80238da:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80238dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80238e0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80238e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80238e8:	eef0 6a62 	vmov.f32	s13, s5
 80238ec:	ee61 7a27 	vmul.f32	s15, s2, s15
 80238f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80238f4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80238f8:	ee16 ba90 	vmov	fp, s13
 80238fc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023900:	eef0 6a43 	vmov.f32	s13, s6
 8023904:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023908:	ee12 2a90 	vmov	r2, s5
 802390c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023910:	fb92 f3f3 	sdiv	r3, r2, r3
 8023914:	ee13 2a10 	vmov	r2, s6
 8023918:	931b      	str	r3, [sp, #108]	; 0x6c
 802391a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802391c:	fb92 f3f3 	sdiv	r3, r2, r3
 8023920:	931c      	str	r3, [sp, #112]	; 0x70
 8023922:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023924:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023926:	3b01      	subs	r3, #1
 8023928:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802392c:	930a      	str	r3, [sp, #40]	; 0x28
 802392e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023930:	bf08      	it	eq
 8023932:	4613      	moveq	r3, r2
 8023934:	ee16 5a90 	vmov	r5, s13
 8023938:	9306      	str	r3, [sp, #24]
 802393a:	eeb0 3a67 	vmov.f32	s6, s15
 802393e:	eef0 2a47 	vmov.f32	s5, s14
 8023942:	e6d2      	b.n	80236ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8023944:	b149      	cbz	r1, 802395a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8023946:	5cba      	ldrb	r2, [r7, r2]
 8023948:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802394c:	4422      	add	r2, r4
 802394e:	4660      	mov	r0, ip
 8023950:	4666      	mov	r6, ip
 8023952:	e734      	b.n	80237be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023954:	4660      	mov	r0, ip
 8023956:	4662      	mov	r2, ip
 8023958:	e731      	b.n	80237be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 802395a:	4660      	mov	r0, ip
 802395c:	4662      	mov	r2, ip
 802395e:	e7f7      	b.n	8023950 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8023960:	f110 0c01 	adds.w	ip, r0, #1
 8023964:	f53f af74 	bmi.w	8023850 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023968:	4562      	cmp	r2, ip
 802396a:	f6ff af71 	blt.w	8023850 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802396e:	f116 0c01 	adds.w	ip, r6, #1
 8023972:	f53f af6d 	bmi.w	8023850 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023976:	4567      	cmp	r7, ip
 8023978:	f6ff af6a 	blt.w	8023850 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802397c:	b23f      	sxth	r7, r7
 802397e:	b212      	sxth	r2, r2
 8023980:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8023984:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8023988:	9200      	str	r2, [sp, #0]
 802398a:	9701      	str	r7, [sp, #4]
 802398c:	4623      	mov	r3, r4
 802398e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8023992:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023994:	f7ff fde6 	bl	8023564 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8023998:	e75a      	b.n	8023850 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802399a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 802399c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80239a0:	ea4f 462b 	mov.w	r6, fp, asr #16
 80239a4:	1428      	asrs	r0, r5, #16
 80239a6:	fb02 6000 	mla	r0, r2, r0, r6
 80239aa:	9e08      	ldr	r6, [sp, #32]
 80239ac:	f816 8000 	ldrb.w	r8, [r6, r0]
 80239b0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80239b4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80239b8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80239bc:	1837      	adds	r7, r6, r0
 80239be:	eb04 0c08 	add.w	ip, r4, r8
 80239c2:	2b00      	cmp	r3, #0
 80239c4:	d060      	beq.n	8023a88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 80239c6:	787e      	ldrb	r6, [r7, #1]
 80239c8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80239cc:	4426      	add	r6, r4
 80239ce:	2900      	cmp	r1, #0
 80239d0:	d062      	beq.n	8023a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 80239d2:	18b8      	adds	r0, r7, r2
 80239d4:	5cba      	ldrb	r2, [r7, r2]
 80239d6:	7840      	ldrb	r0, [r0, #1]
 80239d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80239dc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80239e0:	4422      	add	r2, r4
 80239e2:	4420      	add	r0, r4
 80239e4:	b29b      	uxth	r3, r3
 80239e6:	b289      	uxth	r1, r1
 80239e8:	fb03 f901 	mul.w	r9, r3, r1
 80239ec:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80239f0:	011b      	lsls	r3, r3, #4
 80239f2:	b289      	uxth	r1, r1
 80239f4:	78b7      	ldrb	r7, [r6, #2]
 80239f6:	f89c a002 	ldrb.w	sl, [ip, #2]
 80239fa:	f89c c001 	ldrb.w	ip, [ip, #1]
 80239fe:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023a02:	eba3 0309 	sub.w	r3, r3, r9
 8023a06:	b29b      	uxth	r3, r3
 8023a08:	ebae 0e01 	sub.w	lr, lr, r1
 8023a0c:	fa1f fe8e 	uxth.w	lr, lr
 8023a10:	435f      	muls	r7, r3
 8023a12:	fb0e 770a 	mla	r7, lr, sl, r7
 8023a16:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023a1a:	fb01 770a 	mla	r7, r1, sl, r7
 8023a1e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8023a22:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023a26:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023a2a:	f896 8000 	ldrb.w	r8, [r6]
 8023a2e:	7876      	ldrb	r6, [r6, #1]
 8023a30:	fb03 f808 	mul.w	r8, r3, r8
 8023a34:	fb0e 8807 	mla	r8, lr, r7, r8
 8023a38:	7817      	ldrb	r7, [r2, #0]
 8023a3a:	fb01 8807 	mla	r8, r1, r7, r8
 8023a3e:	7807      	ldrb	r7, [r0, #0]
 8023a40:	fb09 8707 	mla	r7, r9, r7, r8
 8023a44:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8023a48:	4373      	muls	r3, r6
 8023a4a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023a4e:	7856      	ldrb	r6, [r2, #1]
 8023a50:	ea47 070a 	orr.w	r7, r7, sl
 8023a54:	fb0e 330c 	mla	r3, lr, ip, r3
 8023a58:	f890 a001 	ldrb.w	sl, [r0, #1]
 8023a5c:	fb01 3306 	mla	r3, r1, r6, r3
 8023a60:	fb09 3a0a 	mla	sl, r9, sl, r3
 8023a64:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023a68:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023a6a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023a6e:	ea47 070a 	orr.w	r7, r7, sl
 8023a72:	f823 7b02 	strh.w	r7, [r3], #2
 8023a76:	930b      	str	r3, [sp, #44]	; 0x2c
 8023a78:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023a7a:	449b      	add	fp, r3
 8023a7c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023a7e:	441d      	add	r5, r3
 8023a80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023a82:	3b01      	subs	r3, #1
 8023a84:	9309      	str	r3, [sp, #36]	; 0x24
 8023a86:	e714      	b.n	80238b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8023a88:	b149      	cbz	r1, 8023a9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023a8a:	5cba      	ldrb	r2, [r7, r2]
 8023a8c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023a90:	4422      	add	r2, r4
 8023a92:	4660      	mov	r0, ip
 8023a94:	4666      	mov	r6, ip
 8023a96:	e7a5      	b.n	80239e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023a98:	4660      	mov	r0, ip
 8023a9a:	4662      	mov	r2, ip
 8023a9c:	e7a2      	b.n	80239e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023a9e:	4660      	mov	r0, ip
 8023aa0:	4662      	mov	r2, ip
 8023aa2:	e7f7      	b.n	8023a94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8023aa4:	b00f      	add	sp, #60	; 0x3c
 8023aa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023aaa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8023aaa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023aae:	b085      	sub	sp, #20
 8023ab0:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8023ab4:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8023ab8:	9102      	str	r1, [sp, #8]
 8023aba:	2c00      	cmp	r4, #0
 8023abc:	fb04 710c 	mla	r1, r4, ip, r7
 8023ac0:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8023ac4:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8023ac8:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8023acc:	eb02 0e01 	add.w	lr, r2, r1
 8023ad0:	f2c0 8122 	blt.w	8023d18 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023ad4:	45a0      	cmp	r8, r4
 8023ad6:	f340 811f 	ble.w	8023d18 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023ada:	2f00      	cmp	r7, #0
 8023adc:	f2c0 811a 	blt.w	8023d14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023ae0:	45bc      	cmp	ip, r7
 8023ae2:	f340 8117 	ble.w	8023d14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023ae6:	5c52      	ldrb	r2, [r2, r1]
 8023ae8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8023aec:	1c7a      	adds	r2, r7, #1
 8023aee:	f100 8116 	bmi.w	8023d1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023af2:	4594      	cmp	ip, r2
 8023af4:	f340 8113 	ble.w	8023d1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023af8:	2e00      	cmp	r6, #0
 8023afa:	f000 8112 	beq.w	8023d22 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8023afe:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023b02:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8023b06:	3401      	adds	r4, #1
 8023b08:	f100 810f 	bmi.w	8023d2a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023b0c:	45a0      	cmp	r8, r4
 8023b0e:	f340 810c 	ble.w	8023d2a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023b12:	2800      	cmp	r0, #0
 8023b14:	f000 810c 	beq.w	8023d30 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8023b18:	2f00      	cmp	r7, #0
 8023b1a:	f2c0 8104 	blt.w	8023d26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023b1e:	45bc      	cmp	ip, r7
 8023b20:	f340 8101 	ble.w	8023d26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023b24:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8023b28:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8023b2c:	3701      	adds	r7, #1
 8023b2e:	f100 8102 	bmi.w	8023d36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023b32:	45bc      	cmp	ip, r7
 8023b34:	f340 80ff 	ble.w	8023d36 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023b38:	2e00      	cmp	r6, #0
 8023b3a:	f000 80fe 	beq.w	8023d3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8023b3e:	44f4      	add	ip, lr
 8023b40:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8023b44:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8023b48:	b2b6      	uxth	r6, r6
 8023b4a:	b280      	uxth	r0, r0
 8023b4c:	fb00 fe06 	mul.w	lr, r0, r6
 8023b50:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023b54:	0136      	lsls	r6, r6, #4
 8023b56:	eba6 070e 	sub.w	r7, r6, lr
 8023b5a:	b280      	uxth	r0, r0
 8023b5c:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023b60:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023b64:	b2bf      	uxth	r7, r7
 8023b66:	1a1b      	subs	r3, r3, r0
 8023b68:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023b6c:	b29b      	uxth	r3, r3
 8023b6e:	fb0a f607 	mul.w	r6, sl, r7
 8023b72:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023b76:	fb0b 6603 	mla	r6, fp, r3, r6
 8023b7a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023b7e:	fb00 6609 	mla	r6, r0, r9, r6
 8023b82:	fb0e 6608 	mla	r6, lr, r8, r6
 8023b86:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023b8a:	9600      	str	r6, [sp, #0]
 8023b8c:	2e00      	cmp	r6, #0
 8023b8e:	f000 80be 	beq.w	8023d0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8023b92:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023b96:	fb0b fc0c 	mul.w	ip, fp, ip
 8023b9a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023b9e:	fb0b f505 	mul.w	r5, fp, r5
 8023ba2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023ba6:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023baa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023bae:	44dc      	add	ip, fp
 8023bb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023bb4:	9501      	str	r5, [sp, #4]
 8023bb6:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023bba:	9503      	str	r5, [sp, #12]
 8023bbc:	9d01      	ldr	r5, [sp, #4]
 8023bbe:	9e02      	ldr	r6, [sp, #8]
 8023bc0:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023bc4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023bc8:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023bcc:	fb0a fc0c 	mul.w	ip, sl, ip
 8023bd0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023bd4:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023bd8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023bdc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023be0:	4465      	add	r5, ip
 8023be2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023be6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023bea:	fb09 fc0c 	mul.w	ip, r9, ip
 8023bee:	fb09 f904 	mul.w	r9, r9, r4
 8023bf2:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023bf6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023bfa:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023bfe:	fb08 f404 	mul.w	r4, r8, r4
 8023c02:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023c06:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023c0a:	fb08 f802 	mul.w	r8, r8, r2
 8023c0e:	fb0a fa01 	mul.w	sl, sl, r1
 8023c12:	0a22      	lsrs	r2, r4, #8
 8023c14:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023c18:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023c1c:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023c20:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023c24:	4414      	add	r4, r2
 8023c26:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023c2a:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023c2e:	0a2d      	lsrs	r5, r5, #8
 8023c30:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023c34:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023c38:	9a03      	ldr	r2, [sp, #12]
 8023c3a:	8836      	ldrh	r6, [r6, #0]
 8023c3c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023c40:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023c44:	437d      	muls	r5, r7
 8023c46:	4461      	add	r1, ip
 8023c48:	0a24      	lsrs	r4, r4, #8
 8023c4a:	fb02 5503 	mla	r5, r2, r3, r5
 8023c4e:	0a09      	lsrs	r1, r1, #8
 8023c50:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023c54:	fb04 540e 	mla	r4, r4, lr, r5
 8023c58:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023c5c:	fb01 4100 	mla	r1, r1, r0, r4
 8023c60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c64:	0a09      	lsrs	r1, r1, #8
 8023c66:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023c6a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023c6e:	fb07 f70a 	mul.w	r7, r7, sl
 8023c72:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023c76:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023c7a:	fb03 7101 	mla	r1, r3, r1, r7
 8023c7e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023c82:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023c86:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023c8a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023c8e:	fb00 e101 	mla	r1, r0, r1, lr
 8023c92:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8023c96:	9a00      	ldr	r2, [sp, #0]
 8023c98:	b287      	uxth	r7, r0
 8023c9a:	437a      	muls	r2, r7
 8023c9c:	0a09      	lsrs	r1, r1, #8
 8023c9e:	1c53      	adds	r3, r2, #1
 8023ca0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023ca4:	4321      	orrs	r1, r4
 8023ca6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023caa:	1235      	asrs	r5, r6, #8
 8023cac:	0c0a      	lsrs	r2, r1, #16
 8023cae:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023cb2:	b2db      	uxtb	r3, r3
 8023cb4:	fb12 f207 	smulbb	r2, r2, r7
 8023cb8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023cbc:	fb05 2503 	mla	r5, r5, r3, r2
 8023cc0:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8023cc4:	10f2      	asrs	r2, r6, #3
 8023cc6:	b2c8      	uxtb	r0, r1
 8023cc8:	00f6      	lsls	r6, r6, #3
 8023cca:	fb14 f407 	smulbb	r4, r4, r7
 8023cce:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023cd2:	b2f6      	uxtb	r6, r6
 8023cd4:	fb10 f007 	smulbb	r0, r0, r7
 8023cd8:	fb02 4203 	mla	r2, r2, r3, r4
 8023cdc:	b2ad      	uxth	r5, r5
 8023cde:	fb06 0303 	mla	r3, r6, r3, r0
 8023ce2:	b299      	uxth	r1, r3
 8023ce4:	b294      	uxth	r4, r2
 8023ce6:	1c6b      	adds	r3, r5, #1
 8023ce8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023cec:	1c62      	adds	r2, r4, #1
 8023cee:	1c4b      	adds	r3, r1, #1
 8023cf0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023cf4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023cf8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023cfc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023d00:	0952      	lsrs	r2, r2, #5
 8023d02:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023d06:	432b      	orrs	r3, r5
 8023d08:	4313      	orrs	r3, r2
 8023d0a:	9a02      	ldr	r2, [sp, #8]
 8023d0c:	8013      	strh	r3, [r2, #0]
 8023d0e:	b005      	add	sp, #20
 8023d10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023d14:	2500      	movs	r5, #0
 8023d16:	e6e9      	b.n	8023aec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8023d18:	2100      	movs	r1, #0
 8023d1a:	460d      	mov	r5, r1
 8023d1c:	e6f3      	b.n	8023b06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023d1e:	2100      	movs	r1, #0
 8023d20:	e6f1      	b.n	8023b06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023d22:	4631      	mov	r1, r6
 8023d24:	e6ef      	b.n	8023b06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023d26:	2400      	movs	r4, #0
 8023d28:	e700      	b.n	8023b2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8023d2a:	2200      	movs	r2, #0
 8023d2c:	4614      	mov	r4, r2
 8023d2e:	e70b      	b.n	8023b48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023d30:	4602      	mov	r2, r0
 8023d32:	4604      	mov	r4, r0
 8023d34:	e708      	b.n	8023b48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023d36:	2200      	movs	r2, #0
 8023d38:	e706      	b.n	8023b48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023d3a:	4632      	mov	r2, r6
 8023d3c:	e704      	b.n	8023b48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08023d3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023d3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023d42:	b09f      	sub	sp, #124	; 0x7c
 8023d44:	921b      	str	r2, [sp, #108]	; 0x6c
 8023d46:	9309      	str	r3, [sp, #36]	; 0x24
 8023d48:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8023d4a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8023d4e:	931c      	str	r3, [sp, #112]	; 0x70
 8023d50:	9119      	str	r1, [sp, #100]	; 0x64
 8023d52:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8023d56:	901d      	str	r0, [sp, #116]	; 0x74
 8023d58:	6850      	ldr	r0, [r2, #4]
 8023d5a:	6812      	ldr	r2, [r2, #0]
 8023d5c:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8023d5e:	fb00 1303 	mla	r3, r0, r3, r1
 8023d62:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023d66:	930c      	str	r3, [sp, #48]	; 0x30
 8023d68:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023d6a:	681b      	ldr	r3, [r3, #0]
 8023d6c:	9312      	str	r3, [sp, #72]	; 0x48
 8023d6e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023d70:	685e      	ldr	r6, [r3, #4]
 8023d72:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8023d76:	930d      	str	r3, [sp, #52]	; 0x34
 8023d78:	3604      	adds	r6, #4
 8023d7a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023d7c:	2b00      	cmp	r3, #0
 8023d7e:	dc03      	bgt.n	8023d88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023d80:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023d82:	2b00      	cmp	r3, #0
 8023d84:	f340 8388 	ble.w	8024498 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8023d88:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023d8a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023d8e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023d92:	1e48      	subs	r0, r1, #1
 8023d94:	1e57      	subs	r7, r2, #1
 8023d96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023d98:	2b00      	cmp	r3, #0
 8023d9a:	f340 8195 	ble.w	80240c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8023d9e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8023da0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023da4:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023da8:	d406      	bmi.n	8023db8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023daa:	4584      	cmp	ip, r0
 8023dac:	da04      	bge.n	8023db8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023dae:	2b00      	cmp	r3, #0
 8023db0:	db02      	blt.n	8023db8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023db2:	42bb      	cmp	r3, r7
 8023db4:	f2c0 8189 	blt.w	80240ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8023db8:	f11c 0c01 	adds.w	ip, ip, #1
 8023dbc:	f100 8177 	bmi.w	80240ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023dc0:	4561      	cmp	r1, ip
 8023dc2:	f2c0 8174 	blt.w	80240ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023dc6:	3301      	adds	r3, #1
 8023dc8:	f100 8171 	bmi.w	80240ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023dcc:	429a      	cmp	r2, r3
 8023dce:	f2c0 816e 	blt.w	80240ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023dd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023dd4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8023dd6:	931a      	str	r3, [sp, #104]	; 0x68
 8023dd8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8023dda:	2b00      	cmp	r3, #0
 8023ddc:	f340 8193 	ble.w	8024106 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8023de0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023de2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023de6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023de8:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8023dec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023dee:	141b      	asrs	r3, r3, #16
 8023df0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8023df4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023df8:	f100 81d6 	bmi.w	80241a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023dfc:	f100 38ff 	add.w	r8, r0, #4294967295
 8023e00:	4543      	cmp	r3, r8
 8023e02:	f280 81d1 	bge.w	80241a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023e06:	f1bc 0f00 	cmp.w	ip, #0
 8023e0a:	f2c0 81cd 	blt.w	80241a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023e0e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023e12:	45c4      	cmp	ip, r8
 8023e14:	f280 81c8 	bge.w	80241a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023e18:	b200      	sxth	r0, r0
 8023e1a:	fb0c 3300 	mla	r3, ip, r0, r3
 8023e1e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023e20:	eb04 0803 	add.w	r8, r4, r3
 8023e24:	5ce3      	ldrb	r3, [r4, r3]
 8023e26:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023e2a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8023e2e:	2a00      	cmp	r2, #0
 8023e30:	f000 81af 	beq.w	8024192 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8023e34:	f898 c001 	ldrb.w	ip, [r8, #1]
 8023e38:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8023e3c:	940e      	str	r4, [sp, #56]	; 0x38
 8023e3e:	0e24      	lsrs	r4, r4, #24
 8023e40:	9415      	str	r4, [sp, #84]	; 0x54
 8023e42:	b179      	cbz	r1, 8023e64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8023e44:	eb08 0c00 	add.w	ip, r8, r0
 8023e48:	f818 0000 	ldrb.w	r0, [r8, r0]
 8023e4c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8023e50:	900a      	str	r0, [sp, #40]	; 0x28
 8023e52:	0e00      	lsrs	r0, r0, #24
 8023e54:	9013      	str	r0, [sp, #76]	; 0x4c
 8023e56:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8023e5a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8023e5e:	900f      	str	r0, [sp, #60]	; 0x3c
 8023e60:	0e00      	lsrs	r0, r0, #24
 8023e62:	9016      	str	r0, [sp, #88]	; 0x58
 8023e64:	b292      	uxth	r2, r2
 8023e66:	b289      	uxth	r1, r1
 8023e68:	fb02 f901 	mul.w	r9, r2, r1
 8023e6c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023e70:	0112      	lsls	r2, r2, #4
 8023e72:	eba2 0809 	sub.w	r8, r2, r9
 8023e76:	b289      	uxth	r1, r1
 8023e78:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023e7c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8023e7e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023e80:	fa1f f888 	uxth.w	r8, r8
 8023e84:	1a52      	subs	r2, r2, r1
 8023e86:	b292      	uxth	r2, r2
 8023e88:	fb08 f000 	mul.w	r0, r8, r0
 8023e8c:	fb02 000e 	mla	r0, r2, lr, r0
 8023e90:	fb01 0004 	mla	r0, r1, r4, r0
 8023e94:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8023e96:	fb09 0004 	mla	r0, r9, r4, r0
 8023e9a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8023e9e:	2800      	cmp	r0, #0
 8023ea0:	f000 80fa 	beq.w	8024098 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023ea4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023ea8:	d01b      	beq.n	8023ee2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023eaa:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023eae:	fb0e fa0a 	mul.w	sl, lr, sl
 8023eb2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023eb6:	fb0e fe03 	mul.w	lr, lr, r3
 8023eba:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023ebe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023ec2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023ec6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023eca:	4453      	add	r3, sl
 8023ecc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023ed0:	0a1b      	lsrs	r3, r3, #8
 8023ed2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ed6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023eda:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023ede:	ea43 030c 	orr.w	r3, r3, ip
 8023ee2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8023ee4:	2cff      	cmp	r4, #255	; 0xff
 8023ee6:	d021      	beq.n	8023f2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8023ee8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023eea:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8023eee:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8023ef0:	fb04 fb0b 	mul.w	fp, r4, fp
 8023ef4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023ef6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023efa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8023efc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023f00:	fb04 fa0a 	mul.w	sl, r4, sl
 8023f04:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023f08:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023f0c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023f10:	44de      	add	lr, fp
 8023f12:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023f16:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023f1a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f1e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023f22:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f26:	ea4e 040a 	orr.w	r4, lr, sl
 8023f2a:	940e      	str	r4, [sp, #56]	; 0x38
 8023f2c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023f2e:	2cff      	cmp	r4, #255	; 0xff
 8023f30:	d021      	beq.n	8023f76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8023f32:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023f34:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8023f38:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023f3a:	fb04 fb0b 	mul.w	fp, r4, fp
 8023f3e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023f40:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023f44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023f46:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023f4a:	fb04 fa0a 	mul.w	sl, r4, sl
 8023f4e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023f52:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023f56:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023f5a:	44de      	add	lr, fp
 8023f5c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023f60:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023f64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f68:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023f6c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f70:	ea4e 040a 	orr.w	r4, lr, sl
 8023f74:	940a      	str	r4, [sp, #40]	; 0x28
 8023f76:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8023f78:	2cff      	cmp	r4, #255	; 0xff
 8023f7a:	d021      	beq.n	8023fc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8023f7c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023f7e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8023f82:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8023f84:	fb04 fb0b 	mul.w	fp, r4, fp
 8023f88:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023f8a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023f8e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8023f90:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023f94:	fb04 fa0a 	mul.w	sl, r4, sl
 8023f98:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023f9c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023fa0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023fa4:	44de      	add	lr, fp
 8023fa6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023faa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023fae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023fb2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023fb6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023fba:	ea4e 040a 	orr.w	r4, lr, sl
 8023fbe:	940f      	str	r4, [sp, #60]	; 0x3c
 8023fc0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023fc2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023fc6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023fc8:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8023fcc:	fb08 fc0c 	mul.w	ip, r8, ip
 8023fd0:	fb02 cc0e 	mla	ip, r2, lr, ip
 8023fd4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8023fd8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023fda:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023fde:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8023fe2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023fe4:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023fe8:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8023fec:	fb08 f80e 	mul.w	r8, r8, lr
 8023ff0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023ff4:	fb02 8303 	mla	r3, r2, r3, r8
 8023ff8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023ffa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023ffc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024000:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024002:	fb01 330a 	mla	r3, r1, sl, r3
 8024006:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802400a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802400c:	fb09 3901 	mla	r9, r9, r1, r3
 8024010:	4342      	muls	r2, r0
 8024012:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024016:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802401a:	883b      	ldrh	r3, [r7, #0]
 802401c:	1c50      	adds	r0, r2, #1
 802401e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024022:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024026:	ea4c 0c09 	orr.w	ip, ip, r9
 802402a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802402e:	1219      	asrs	r1, r3, #8
 8024030:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8024034:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8024038:	b2c0      	uxtb	r0, r0
 802403a:	fb12 f204 	smulbb	r2, r2, r4
 802403e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024042:	fb01 2100 	mla	r1, r1, r0, r2
 8024046:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802404a:	10da      	asrs	r2, r3, #3
 802404c:	fa5f fc8c 	uxtb.w	ip, ip
 8024050:	00db      	lsls	r3, r3, #3
 8024052:	fb1c fc04 	smulbb	ip, ip, r4
 8024056:	b2db      	uxtb	r3, r3
 8024058:	b289      	uxth	r1, r1
 802405a:	fb03 c300 	mla	r3, r3, r0, ip
 802405e:	fa1f fc83 	uxth.w	ip, r3
 8024062:	1c4b      	adds	r3, r1, #1
 8024064:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024068:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802406c:	fb1e fe04 	smulbb	lr, lr, r4
 8024070:	f10c 0301 	add.w	r3, ip, #1
 8024074:	fb02 e200 	mla	r2, r2, r0, lr
 8024078:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802407c:	b292      	uxth	r2, r2
 802407e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024082:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024086:	430b      	orrs	r3, r1
 8024088:	1c51      	adds	r1, r2, #1
 802408a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802408e:	0952      	lsrs	r2, r2, #5
 8024090:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024094:	4313      	orrs	r3, r2
 8024096:	803b      	strh	r3, [r7, #0]
 8024098:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802409a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802409c:	441a      	add	r2, r3
 802409e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80240a0:	9229      	str	r2, [sp, #164]	; 0xa4
 80240a2:	441d      	add	r5, r3
 80240a4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80240a6:	3b01      	subs	r3, #1
 80240a8:	3702      	adds	r7, #2
 80240aa:	931a      	str	r3, [sp, #104]	; 0x68
 80240ac:	e694      	b.n	8023dd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80240ae:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80240b0:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80240b2:	441c      	add	r4, r3
 80240b4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80240b6:	9429      	str	r4, [sp, #164]	; 0xa4
 80240b8:	441d      	add	r5, r3
 80240ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80240bc:	3b01      	subs	r3, #1
 80240be:	9309      	str	r3, [sp, #36]	; 0x24
 80240c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80240c2:	3302      	adds	r3, #2
 80240c4:	930c      	str	r3, [sp, #48]	; 0x30
 80240c6:	e666      	b.n	8023d96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80240c8:	d024      	beq.n	8024114 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80240ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80240cc:	982b      	ldr	r0, [sp, #172]	; 0xac
 80240ce:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80240d0:	3b01      	subs	r3, #1
 80240d2:	fb00 4003 	mla	r0, r0, r3, r4
 80240d6:	1400      	asrs	r0, r0, #16
 80240d8:	f53f ae7b 	bmi.w	8023dd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80240dc:	3901      	subs	r1, #1
 80240de:	4288      	cmp	r0, r1
 80240e0:	f6bf ae77 	bge.w	8023dd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80240e4:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80240e6:	fb01 5303 	mla	r3, r1, r3, r5
 80240ea:	141b      	asrs	r3, r3, #16
 80240ec:	f53f ae71 	bmi.w	8023dd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80240f0:	3a01      	subs	r2, #1
 80240f2:	4293      	cmp	r3, r2
 80240f4:	f6bf ae6d 	bge.w	8023dd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80240f8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80240fc:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8024100:	f1bb 0f00 	cmp.w	fp, #0
 8024104:	dc70      	bgt.n	80241e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8024106:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024108:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802410c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802410e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024112:	930c      	str	r3, [sp, #48]	; 0x30
 8024114:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024116:	2b00      	cmp	r3, #0
 8024118:	f340 81be 	ble.w	8024498 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802411c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024120:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024124:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024128:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802412a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802412e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024132:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024136:	eef0 6a62 	vmov.f32	s13, s5
 802413a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802413e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024142:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024146:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 802414a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802414e:	eef0 6a43 	vmov.f32	s13, s6
 8024152:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024156:	ee12 2a90 	vmov	r2, s5
 802415a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802415e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024162:	ee13 2a10 	vmov	r2, s6
 8024166:	932b      	str	r3, [sp, #172]	; 0xac
 8024168:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802416a:	fb92 f3f3 	sdiv	r3, r2, r3
 802416e:	932c      	str	r3, [sp, #176]	; 0xb0
 8024170:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024172:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8024174:	3b01      	subs	r3, #1
 8024176:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802417a:	9319      	str	r3, [sp, #100]	; 0x64
 802417c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802417e:	bf08      	it	eq
 8024180:	4613      	moveq	r3, r2
 8024182:	ee16 5a90 	vmov	r5, s13
 8024186:	9309      	str	r3, [sp, #36]	; 0x24
 8024188:	eeb0 3a67 	vmov.f32	s6, s15
 802418c:	eef0 2a47 	vmov.f32	s5, s14
 8024190:	e5f3      	b.n	8023d7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8024192:	2900      	cmp	r1, #0
 8024194:	f43f ae66 	beq.w	8023e64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024198:	f818 0000 	ldrb.w	r0, [r8, r0]
 802419c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80241a0:	900a      	str	r0, [sp, #40]	; 0x28
 80241a2:	0e00      	lsrs	r0, r0, #24
 80241a4:	9013      	str	r0, [sp, #76]	; 0x4c
 80241a6:	e65d      	b.n	8023e64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80241a8:	f113 0801 	adds.w	r8, r3, #1
 80241ac:	f53f af74 	bmi.w	8024098 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80241b0:	4540      	cmp	r0, r8
 80241b2:	f6ff af71 	blt.w	8024098 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80241b6:	f11c 0801 	adds.w	r8, ip, #1
 80241ba:	f53f af6d 	bmi.w	8024098 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80241be:	45c6      	cmp	lr, r8
 80241c0:	f6ff af6a 	blt.w	8024098 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80241c4:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80241c6:	9302      	str	r3, [sp, #8]
 80241c8:	b200      	sxth	r0, r0
 80241ca:	fa0f f38e 	sxth.w	r3, lr
 80241ce:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80241d2:	e9cd c203 	strd	ip, r2, [sp, #12]
 80241d6:	9301      	str	r3, [sp, #4]
 80241d8:	9000      	str	r0, [sp, #0]
 80241da:	4633      	mov	r3, r6
 80241dc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80241de:	981d      	ldr	r0, [sp, #116]	; 0x74
 80241e0:	4639      	mov	r1, r7
 80241e2:	f7ff fc62 	bl	8023aaa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80241e6:	e757      	b.n	8024098 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80241e8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80241ea:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80241ec:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80241f0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80241f2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80241f6:	1427      	asrs	r7, r4, #16
 80241f8:	142b      	asrs	r3, r5, #16
 80241fa:	fb01 7303 	mla	r3, r1, r3, r7
 80241fe:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024200:	18e7      	adds	r7, r4, r3
 8024202:	5ce3      	ldrb	r3, [r4, r3]
 8024204:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024208:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802420c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024210:	2a00      	cmp	r2, #0
 8024212:	f000 8137 	beq.w	8024484 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024216:	f897 e001 	ldrb.w	lr, [r7, #1]
 802421a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802421e:	9410      	str	r4, [sp, #64]	; 0x40
 8024220:	0e24      	lsrs	r4, r4, #24
 8024222:	9417      	str	r4, [sp, #92]	; 0x5c
 8024224:	b170      	cbz	r0, 8024244 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024226:	eb07 0e01 	add.w	lr, r7, r1
 802422a:	5c79      	ldrb	r1, [r7, r1]
 802422c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024230:	910b      	str	r1, [sp, #44]	; 0x2c
 8024232:	0e09      	lsrs	r1, r1, #24
 8024234:	9114      	str	r1, [sp, #80]	; 0x50
 8024236:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802423a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802423e:	9111      	str	r1, [sp, #68]	; 0x44
 8024240:	0e09      	lsrs	r1, r1, #24
 8024242:	9118      	str	r1, [sp, #96]	; 0x60
 8024244:	b292      	uxth	r2, r2
 8024246:	b280      	uxth	r0, r0
 8024248:	fb02 f800 	mul.w	r8, r2, r0
 802424c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024250:	0112      	lsls	r2, r2, #4
 8024252:	eba2 0e08 	sub.w	lr, r2, r8
 8024256:	b280      	uxth	r0, r0
 8024258:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802425c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802425e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024260:	fa1f fe8e 	uxth.w	lr, lr
 8024264:	1a12      	subs	r2, r2, r0
 8024266:	b292      	uxth	r2, r2
 8024268:	fb0e f101 	mul.w	r1, lr, r1
 802426c:	fb02 110c 	mla	r1, r2, ip, r1
 8024270:	fb00 1104 	mla	r1, r0, r4, r1
 8024274:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024276:	fb08 1104 	mla	r1, r8, r4, r1
 802427a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802427e:	2900      	cmp	r1, #0
 8024280:	f000 80f5 	beq.w	802446e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024284:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024288:	d019      	beq.n	80242be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802428a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802428e:	fb0c fa0a 	mul.w	sl, ip, sl
 8024292:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024296:	fb0c fc03 	mul.w	ip, ip, r3
 802429a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802429e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80242a2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80242a6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80242aa:	4453      	add	r3, sl
 80242ac:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80242b0:	0a1b      	lsrs	r3, r3, #8
 80242b2:	0a3f      	lsrs	r7, r7, #8
 80242b4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80242b8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80242bc:	433b      	orrs	r3, r7
 80242be:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80242c0:	2cff      	cmp	r4, #255	; 0xff
 80242c2:	d020      	beq.n	8024306 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80242c4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80242c6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80242ca:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80242cc:	4367      	muls	r7, r4
 80242ce:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80242d0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80242d4:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80242d6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80242da:	fb04 fa0a 	mul.w	sl, r4, sl
 80242de:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80242e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80242e6:	44bc      	add	ip, r7
 80242e8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80242ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80242f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80242f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80242f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80242fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024300:	ea4c 040a 	orr.w	r4, ip, sl
 8024304:	9410      	str	r4, [sp, #64]	; 0x40
 8024306:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024308:	2cff      	cmp	r4, #255	; 0xff
 802430a:	d020      	beq.n	802434e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 802430c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802430e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024312:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024314:	4367      	muls	r7, r4
 8024316:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024318:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802431c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802431e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024322:	fb04 fa0a 	mul.w	sl, r4, sl
 8024326:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802432a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802432e:	44bc      	add	ip, r7
 8024330:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024334:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024338:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802433c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024340:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024344:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024348:	ea4c 040a 	orr.w	r4, ip, sl
 802434c:	940b      	str	r4, [sp, #44]	; 0x2c
 802434e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024350:	2cff      	cmp	r4, #255	; 0xff
 8024352:	d020      	beq.n	8024396 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8024354:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024356:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802435a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802435c:	4367      	muls	r7, r4
 802435e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024360:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024364:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8024366:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802436a:	fb04 fa0a 	mul.w	sl, r4, sl
 802436e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024372:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024376:	44bc      	add	ip, r7
 8024378:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802437c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024380:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024384:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024388:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802438c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024390:	ea4c 040a 	orr.w	r4, ip, sl
 8024394:	9411      	str	r4, [sp, #68]	; 0x44
 8024396:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024398:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802439c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802439e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80243a2:	fb0e f707 	mul.w	r7, lr, r7
 80243a6:	fb02 770c 	mla	r7, r2, ip, r7
 80243aa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80243ae:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80243b0:	fb00 770c 	mla	r7, r0, ip, r7
 80243b4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80243b8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80243ba:	fb08 770c 	mla	r7, r8, ip, r7
 80243be:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80243c2:	fb0e fe0c 	mul.w	lr, lr, ip
 80243c6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80243ca:	fb02 e303 	mla	r3, r2, r3, lr
 80243ce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80243d0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80243d2:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80243d6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80243d8:	fb00 330a 	mla	r3, r0, sl, r3
 80243dc:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80243e0:	fb08 3c0c 	mla	ip, r8, ip, r3
 80243e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80243e6:	f8b9 0000 	ldrh.w	r0, [r9]
 80243ea:	434b      	muls	r3, r1
 80243ec:	0a3f      	lsrs	r7, r7, #8
 80243ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80243f2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80243f6:	1c59      	adds	r1, r3, #1
 80243f8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80243fc:	ea47 070c 	orr.w	r7, r7, ip
 8024400:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024404:	1202      	asrs	r2, r0, #8
 8024406:	0c3b      	lsrs	r3, r7, #16
 8024408:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802440c:	b2c9      	uxtb	r1, r1
 802440e:	fb13 f304 	smulbb	r3, r3, r4
 8024412:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024416:	fb02 3201 	mla	r2, r2, r1, r3
 802441a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802441e:	10c3      	asrs	r3, r0, #3
 8024420:	b2ff      	uxtb	r7, r7
 8024422:	00c0      	lsls	r0, r0, #3
 8024424:	b292      	uxth	r2, r2
 8024426:	fb1c fc04 	smulbb	ip, ip, r4
 802442a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802442e:	b2c0      	uxtb	r0, r0
 8024430:	fb17 f704 	smulbb	r7, r7, r4
 8024434:	fb03 c301 	mla	r3, r3, r1, ip
 8024438:	fb00 7001 	mla	r0, r0, r1, r7
 802443c:	f102 0c01 	add.w	ip, r2, #1
 8024440:	b280      	uxth	r0, r0
 8024442:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8024446:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 802444a:	1c42      	adds	r2, r0, #1
 802444c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024450:	b29b      	uxth	r3, r3
 8024452:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8024456:	ea42 020c 	orr.w	r2, r2, ip
 802445a:	f103 0c01 	add.w	ip, r3, #1
 802445e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8024462:	095b      	lsrs	r3, r3, #5
 8024464:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024468:	431a      	orrs	r2, r3
 802446a:	f8a9 2000 	strh.w	r2, [r9]
 802446e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024470:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024472:	441a      	add	r2, r3
 8024474:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024476:	9229      	str	r2, [sp, #164]	; 0xa4
 8024478:	f109 0902 	add.w	r9, r9, #2
 802447c:	441d      	add	r5, r3
 802447e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024482:	e63d      	b.n	8024100 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8024484:	2800      	cmp	r0, #0
 8024486:	f43f aedd 	beq.w	8024244 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802448a:	5c79      	ldrb	r1, [r7, r1]
 802448c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024490:	910b      	str	r1, [sp, #44]	; 0x2c
 8024492:	0e09      	lsrs	r1, r1, #24
 8024494:	9114      	str	r1, [sp, #80]	; 0x50
 8024496:	e6d5      	b.n	8024244 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024498:	b01f      	add	sp, #124	; 0x7c
 802449a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802449e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802449e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80244a2:	b089      	sub	sp, #36	; 0x24
 80244a4:	9101      	str	r1, [sp, #4]
 80244a6:	9801      	ldr	r0, [sp, #4]
 80244a8:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 80244ac:	8800      	ldrh	r0, [r0, #0]
 80244ae:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 80244b2:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80244b6:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 80244ba:	1206      	asrs	r6, r0, #8
 80244bc:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 80244c0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80244c4:	9602      	str	r6, [sp, #8]
 80244c6:	10c6      	asrs	r6, r0, #3
 80244c8:	00c0      	lsls	r0, r0, #3
 80244ca:	b2c0      	uxtb	r0, r0
 80244cc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80244d0:	9004      	str	r0, [sp, #16]
 80244d2:	2f00      	cmp	r7, #0
 80244d4:	fb07 100c 	mla	r0, r7, ip, r1
 80244d8:	9603      	str	r6, [sp, #12]
 80244da:	eb02 0e00 	add.w	lr, r2, r0
 80244de:	f2c0 810a 	blt.w	80246f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80244e2:	45b8      	cmp	r8, r7
 80244e4:	f340 8107 	ble.w	80246f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80244e8:	2900      	cmp	r1, #0
 80244ea:	f2c0 8102 	blt.w	80246f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80244ee:	458c      	cmp	ip, r1
 80244f0:	f340 80ff 	ble.w	80246f2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80244f4:	5c12      	ldrb	r2, [r2, r0]
 80244f6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80244fa:	1c4a      	adds	r2, r1, #1
 80244fc:	f100 80fe 	bmi.w	80246fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8024500:	4594      	cmp	ip, r2
 8024502:	f340 80fb 	ble.w	80246fc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8024506:	2d00      	cmp	r5, #0
 8024508:	f000 80fa 	beq.w	8024700 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 802450c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8024510:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8024514:	3701      	adds	r7, #1
 8024516:	f100 80f7 	bmi.w	8024708 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802451a:	45b8      	cmp	r8, r7
 802451c:	f340 80f4 	ble.w	8024708 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8024520:	2c00      	cmp	r4, #0
 8024522:	f000 80f4 	beq.w	802470e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8024526:	2900      	cmp	r1, #0
 8024528:	eb0e 020c 	add.w	r2, lr, ip
 802452c:	f2c0 80ea 	blt.w	8024704 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8024530:	458c      	cmp	ip, r1
 8024532:	f340 80e7 	ble.w	8024704 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8024536:	f81e 700c 	ldrb.w	r7, [lr, ip]
 802453a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 802453e:	3101      	adds	r1, #1
 8024540:	f100 80e8 	bmi.w	8024714 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8024544:	458c      	cmp	ip, r1
 8024546:	f340 80e5 	ble.w	8024714 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 802454a:	2d00      	cmp	r5, #0
 802454c:	f000 80e4 	beq.w	8024718 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8024550:	7852      	ldrb	r2, [r2, #1]
 8024552:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8024556:	0e0b      	lsrs	r3, r1, #24
 8024558:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 802455c:	9300      	str	r3, [sp, #0]
 802455e:	b2a4      	uxth	r4, r4
 8024560:	b2ab      	uxth	r3, r5
 8024562:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8024566:	fb03 f904 	mul.w	r9, r3, r4
 802456a:	fb0a f505 	mul.w	r5, sl, r5
 802456e:	011b      	lsls	r3, r3, #4
 8024570:	eba3 0e09 	sub.w	lr, r3, r9
 8024574:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8024578:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 802457c:	0a28      	lsrs	r0, r5, #8
 802457e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8024582:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8024586:	4405      	add	r5, r0
 8024588:	0a2d      	lsrs	r5, r5, #8
 802458a:	fb0a f303 	mul.w	r3, sl, r3
 802458e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8024592:	9005      	str	r0, [sp, #20]
 8024594:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8024598:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802459c:	0a1b      	lsrs	r3, r3, #8
 802459e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80245a2:	9306      	str	r3, [sp, #24]
 80245a4:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 80245a8:	fb0b f303 	mul.w	r3, fp, r3
 80245ac:	0a1d      	lsrs	r5, r3, #8
 80245ae:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80245b2:	ea4f 6817 	mov.w	r8, r7, lsr #24
 80245b6:	fb0b f606 	mul.w	r6, fp, r6
 80245ba:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80245be:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80245c2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80245c6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80245ca:	fb08 f707 	mul.w	r7, r8, r7
 80245ce:	441d      	add	r5, r3
 80245d0:	f506 7380 	add.w	r3, r6, #256	; 0x100
 80245d4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80245d8:	f507 7380 	add.w	r3, r7, #256	; 0x100
 80245dc:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80245e0:	fb08 fc0c 	mul.w	ip, r8, ip
 80245e4:	0a1b      	lsrs	r3, r3, #8
 80245e6:	9307      	str	r3, [sp, #28]
 80245e8:	ea4f 201c 	mov.w	r0, ip, lsr #8
 80245ec:	0e0b      	lsrs	r3, r1, #24
 80245ee:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 80245f2:	435f      	muls	r7, r3
 80245f4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80245f8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80245fc:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8024600:	4460      	add	r0, ip
 8024602:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024606:	b2a4      	uxth	r4, r4
 8024608:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802460c:	0a2d      	lsrs	r5, r5, #8
 802460e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024612:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024616:	fa1f fe8e 	uxth.w	lr, lr
 802461a:	4359      	muls	r1, r3
 802461c:	1b12      	subs	r2, r2, r4
 802461e:	9b05      	ldr	r3, [sp, #20]
 8024620:	44bc      	add	ip, r7
 8024622:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024626:	b292      	uxth	r2, r2
 8024628:	fb05 f50e 	mul.w	r5, r5, lr
 802462c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024630:	fb03 5502 	mla	r5, r3, r2, r5
 8024634:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024638:	9b06      	ldr	r3, [sp, #24]
 802463a:	f501 7780 	add.w	r7, r1, #256	; 0x100
 802463e:	0a36      	lsrs	r6, r6, #8
 8024640:	0a00      	lsrs	r0, r0, #8
 8024642:	fb0c 5509 	mla	r5, ip, r9, r5
 8024646:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802464a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802464e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8024652:	fb00 5504 	mla	r5, r0, r4, r5
 8024656:	fb0e f606 	mul.w	r6, lr, r6
 802465a:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 802465e:	0a09      	lsrs	r1, r1, #8
 8024660:	9b07      	ldr	r3, [sp, #28]
 8024662:	fb02 6000 	mla	r0, r2, r0, r6
 8024666:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802466a:	fb09 0001 	mla	r0, r9, r1, r0
 802466e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024672:	fb0e fe0b 	mul.w	lr, lr, fp
 8024676:	fb04 0003 	mla	r0, r4, r3, r0
 802467a:	fb02 e20a 	mla	r2, r2, sl, lr
 802467e:	9b00      	ldr	r3, [sp, #0]
 8024680:	fb04 2408 	mla	r4, r4, r8, r2
 8024684:	fb09 4903 	mla	r9, r9, r3, r4
 8024688:	ea6f 2929 	mvn.w	r9, r9, asr #8
 802468c:	9b02      	ldr	r3, [sp, #8]
 802468e:	9a04      	ldr	r2, [sp, #16]
 8024690:	fa5f f989 	uxtb.w	r9, r9
 8024694:	fb03 f109 	mul.w	r1, r3, r9
 8024698:	9b03      	ldr	r3, [sp, #12]
 802469a:	0a2d      	lsrs	r5, r5, #8
 802469c:	0a00      	lsrs	r0, r0, #8
 802469e:	fb03 f309 	mul.w	r3, r3, r9
 80246a2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80246a6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80246aa:	4305      	orrs	r5, r0
 80246ac:	fb02 f909 	mul.w	r9, r2, r9
 80246b0:	1c58      	adds	r0, r3, #1
 80246b2:	1c4a      	adds	r2, r1, #1
 80246b4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80246b8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80246bc:	0a2b      	lsrs	r3, r5, #8
 80246be:	0c2a      	lsrs	r2, r5, #16
 80246c0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80246c4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80246c8:	00db      	lsls	r3, r3, #3
 80246ca:	0212      	lsls	r2, r2, #8
 80246cc:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80246d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80246d4:	4313      	orrs	r3, r2
 80246d6:	f109 0201 	add.w	r2, r9, #1
 80246da:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80246de:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80246e2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80246e6:	431d      	orrs	r5, r3
 80246e8:	9b01      	ldr	r3, [sp, #4]
 80246ea:	801d      	strh	r5, [r3, #0]
 80246ec:	b009      	add	sp, #36	; 0x24
 80246ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80246f2:	2000      	movs	r0, #0
 80246f4:	e701      	b.n	80244fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 80246f6:	2600      	movs	r6, #0
 80246f8:	4630      	mov	r0, r6
 80246fa:	e70b      	b.n	8024514 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80246fc:	2600      	movs	r6, #0
 80246fe:	e709      	b.n	8024514 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024700:	462e      	mov	r6, r5
 8024702:	e707      	b.n	8024514 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024704:	2700      	movs	r7, #0
 8024706:	e71a      	b.n	802453e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8024708:	2100      	movs	r1, #0
 802470a:	460f      	mov	r7, r1
 802470c:	e723      	b.n	8024556 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802470e:	4621      	mov	r1, r4
 8024710:	4627      	mov	r7, r4
 8024712:	e720      	b.n	8024556 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024714:	2100      	movs	r1, #0
 8024716:	e71e      	b.n	8024556 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024718:	4629      	mov	r1, r5
 802471a:	e71c      	b.n	8024556 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0802471c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802471c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024720:	b09b      	sub	sp, #108	; 0x6c
 8024722:	9218      	str	r2, [sp, #96]	; 0x60
 8024724:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024726:	9116      	str	r1, [sp, #88]	; 0x58
 8024728:	9307      	str	r3, [sp, #28]
 802472a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 802472e:	9019      	str	r0, [sp, #100]	; 0x64
 8024730:	6850      	ldr	r0, [r2, #4]
 8024732:	6812      	ldr	r2, [r2, #0]
 8024734:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8024736:	fb00 1303 	mla	r3, r0, r3, r1
 802473a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802473e:	930a      	str	r3, [sp, #40]	; 0x28
 8024740:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024742:	681b      	ldr	r3, [r3, #0]
 8024744:	930f      	str	r3, [sp, #60]	; 0x3c
 8024746:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024748:	685e      	ldr	r6, [r3, #4]
 802474a:	3604      	adds	r6, #4
 802474c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802474e:	2b00      	cmp	r3, #0
 8024750:	dc03      	bgt.n	802475a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8024752:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024754:	2b00      	cmp	r3, #0
 8024756:	f340 8373 	ble.w	8024e40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 802475a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802475c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024760:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024764:	1e48      	subs	r0, r1, #1
 8024766:	1e57      	subs	r7, r2, #1
 8024768:	9b07      	ldr	r3, [sp, #28]
 802476a:	2b00      	cmp	r3, #0
 802476c:	f340 8190 	ble.w	8024a90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8024770:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024772:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024776:	ea4f 4325 	mov.w	r3, r5, asr #16
 802477a:	d406      	bmi.n	802478a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802477c:	4584      	cmp	ip, r0
 802477e:	da04      	bge.n	802478a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024780:	2b00      	cmp	r3, #0
 8024782:	db02      	blt.n	802478a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024784:	42bb      	cmp	r3, r7
 8024786:	f2c0 8184 	blt.w	8024a92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802478a:	f11c 0c01 	adds.w	ip, ip, #1
 802478e:	f100 8172 	bmi.w	8024a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024792:	4561      	cmp	r1, ip
 8024794:	f2c0 816f 	blt.w	8024a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024798:	3301      	adds	r3, #1
 802479a:	f100 816c 	bmi.w	8024a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802479e:	429a      	cmp	r2, r3
 80247a0:	f2c0 8169 	blt.w	8024a76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80247a4:	9b07      	ldr	r3, [sp, #28]
 80247a6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80247a8:	9317      	str	r3, [sp, #92]	; 0x5c
 80247aa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80247ac:	2b00      	cmp	r3, #0
 80247ae:	f340 818e 	ble.w	8024ace <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 80247b2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80247b4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80247b8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80247ba:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80247be:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80247c0:	141b      	asrs	r3, r3, #16
 80247c2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80247c6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80247ca:	f100 81d1 	bmi.w	8024b70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80247ce:	f101 38ff 	add.w	r8, r1, #4294967295
 80247d2:	4543      	cmp	r3, r8
 80247d4:	f280 81cc 	bge.w	8024b70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80247d8:	f1bc 0f00 	cmp.w	ip, #0
 80247dc:	f2c0 81c8 	blt.w	8024b70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80247e0:	f10e 38ff 	add.w	r8, lr, #4294967295
 80247e4:	45c4      	cmp	ip, r8
 80247e6:	f280 81c3 	bge.w	8024b70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80247ea:	b209      	sxth	r1, r1
 80247ec:	fb0c 3301 	mla	r3, ip, r1, r3
 80247f0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80247f2:	eb04 0803 	add.w	r8, r4, r3
 80247f6:	5ce3      	ldrb	r3, [r4, r3]
 80247f8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80247fc:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8024800:	2a00      	cmp	r2, #0
 8024802:	f000 81aa 	beq.w	8024b5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8024806:	f898 c001 	ldrb.w	ip, [r8, #1]
 802480a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802480e:	940b      	str	r4, [sp, #44]	; 0x2c
 8024810:	0e24      	lsrs	r4, r4, #24
 8024812:	9412      	str	r4, [sp, #72]	; 0x48
 8024814:	b178      	cbz	r0, 8024836 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024816:	eb08 0c01 	add.w	ip, r8, r1
 802481a:	f818 1001 	ldrb.w	r1, [r8, r1]
 802481e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024822:	9108      	str	r1, [sp, #32]
 8024824:	0e09      	lsrs	r1, r1, #24
 8024826:	9110      	str	r1, [sp, #64]	; 0x40
 8024828:	f89c 1001 	ldrb.w	r1, [ip, #1]
 802482c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024830:	910c      	str	r1, [sp, #48]	; 0x30
 8024832:	0e09      	lsrs	r1, r1, #24
 8024834:	9113      	str	r1, [sp, #76]	; 0x4c
 8024836:	b292      	uxth	r2, r2
 8024838:	b280      	uxth	r0, r0
 802483a:	fb02 f900 	mul.w	r9, r2, r0
 802483e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024842:	0112      	lsls	r2, r2, #4
 8024844:	eba2 0809 	sub.w	r8, r2, r9
 8024848:	b280      	uxth	r0, r0
 802484a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802484e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8024850:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024852:	fa1f f888 	uxth.w	r8, r8
 8024856:	1a12      	subs	r2, r2, r0
 8024858:	b292      	uxth	r2, r2
 802485a:	fb08 f101 	mul.w	r1, r8, r1
 802485e:	fb02 110e 	mla	r1, r2, lr, r1
 8024862:	fb00 1104 	mla	r1, r0, r4, r1
 8024866:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024868:	fb09 1104 	mla	r1, r9, r4, r1
 802486c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8024870:	2900      	cmp	r1, #0
 8024872:	f000 80f5 	beq.w	8024a60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024876:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802487a:	d01b      	beq.n	80248b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802487c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024880:	fb0e fa0a 	mul.w	sl, lr, sl
 8024884:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024888:	fb0e fe03 	mul.w	lr, lr, r3
 802488c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024890:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024894:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024898:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802489c:	4453      	add	r3, sl
 802489e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80248a2:	0a1b      	lsrs	r3, r3, #8
 80248a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80248a8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80248ac:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80248b0:	ea43 030c 	orr.w	r3, r3, ip
 80248b4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80248b6:	2cff      	cmp	r4, #255	; 0xff
 80248b8:	d021      	beq.n	80248fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 80248ba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80248bc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80248c0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80248c2:	fb04 fb0b 	mul.w	fp, r4, fp
 80248c6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80248c8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80248cc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80248ce:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80248d2:	fb04 fa0a 	mul.w	sl, r4, sl
 80248d6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80248da:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80248de:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80248e2:	44de      	add	lr, fp
 80248e4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80248e8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80248ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80248f0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80248f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80248f8:	ea4e 040a 	orr.w	r4, lr, sl
 80248fc:	940b      	str	r4, [sp, #44]	; 0x2c
 80248fe:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024900:	2cff      	cmp	r4, #255	; 0xff
 8024902:	d021      	beq.n	8024948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8024904:	9c08      	ldr	r4, [sp, #32]
 8024906:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802490a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802490c:	fb04 fb0b 	mul.w	fp, r4, fp
 8024910:	9c08      	ldr	r4, [sp, #32]
 8024912:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024916:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024918:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802491c:	fb04 fa0a 	mul.w	sl, r4, sl
 8024920:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024924:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024928:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802492c:	44de      	add	lr, fp
 802492e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024932:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024936:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802493a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802493e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024942:	ea4e 040a 	orr.w	r4, lr, sl
 8024946:	9408      	str	r4, [sp, #32]
 8024948:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802494a:	2cff      	cmp	r4, #255	; 0xff
 802494c:	d021      	beq.n	8024992 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802494e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024950:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024954:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024956:	fb04 fb0b 	mul.w	fp, r4, fp
 802495a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802495c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024960:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024962:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024966:	fb04 fa0a 	mul.w	sl, r4, sl
 802496a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802496e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024972:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024976:	44de      	add	lr, fp
 8024978:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802497c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024980:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024984:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024988:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802498c:	ea4e 040a 	orr.w	r4, lr, sl
 8024990:	940c      	str	r4, [sp, #48]	; 0x30
 8024992:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024994:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024998:	9c08      	ldr	r4, [sp, #32]
 802499a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802499e:	fb08 fc0c 	mul.w	ip, r8, ip
 80249a2:	fb02 cc0e 	mla	ip, r2, lr, ip
 80249a6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80249aa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80249ac:	fb00 cc0e 	mla	ip, r0, lr, ip
 80249b0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80249b4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80249b6:	fb09 cc0e 	mla	ip, r9, lr, ip
 80249ba:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80249be:	fb08 f80e 	mul.w	r8, r8, lr
 80249c2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80249c6:	fb02 8303 	mla	r3, r2, r3, r8
 80249ca:	9a08      	ldr	r2, [sp, #32]
 80249cc:	f8b7 8000 	ldrh.w	r8, [r7]
 80249d0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80249d4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80249d6:	fb00 330a 	mla	r3, r0, sl, r3
 80249da:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80249de:	fb09 3900 	mla	r9, r9, r0, r3
 80249e2:	43c9      	mvns	r1, r1
 80249e4:	ea4f 2228 	mov.w	r2, r8, asr #8
 80249e8:	fa5f fe81 	uxtb.w	lr, r1
 80249ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80249f0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80249f4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80249f8:	fb02 f20e 	mul.w	r2, r2, lr
 80249fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024a00:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024a04:	ea4c 0c09 	orr.w	ip, ip, r9
 8024a08:	1c53      	adds	r3, r2, #1
 8024a0a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8024a0e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8024a12:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8024a16:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024a1a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024a1e:	4a63      	ldr	r2, [pc, #396]	; (8024bac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8024a20:	fb00 f00e 	mul.w	r0, r0, lr
 8024a24:	b2db      	uxtb	r3, r3
 8024a26:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8024a2a:	1c43      	adds	r3, r0, #1
 8024a2c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024a30:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8024a34:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8024a38:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024a3c:	b2c9      	uxtb	r1, r1
 8024a3e:	00db      	lsls	r3, r3, #3
 8024a40:	fb01 f10e 	mul.w	r1, r1, lr
 8024a44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024a48:	4313      	orrs	r3, r2
 8024a4a:	1c4a      	adds	r2, r1, #1
 8024a4c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024a50:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024a54:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8024a58:	ea4c 0c03 	orr.w	ip, ip, r3
 8024a5c:	f8a7 c000 	strh.w	ip, [r7]
 8024a60:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024a62:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024a64:	441a      	add	r2, r3
 8024a66:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024a68:	9225      	str	r2, [sp, #148]	; 0x94
 8024a6a:	441d      	add	r5, r3
 8024a6c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024a6e:	3b01      	subs	r3, #1
 8024a70:	3702      	adds	r7, #2
 8024a72:	9317      	str	r3, [sp, #92]	; 0x5c
 8024a74:	e699      	b.n	80247aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024a76:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024a78:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024a7a:	441c      	add	r4, r3
 8024a7c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024a7e:	9425      	str	r4, [sp, #148]	; 0x94
 8024a80:	441d      	add	r5, r3
 8024a82:	9b07      	ldr	r3, [sp, #28]
 8024a84:	3b01      	subs	r3, #1
 8024a86:	9307      	str	r3, [sp, #28]
 8024a88:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024a8a:	3302      	adds	r3, #2
 8024a8c:	930a      	str	r3, [sp, #40]	; 0x28
 8024a8e:	e66b      	b.n	8024768 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8024a90:	d024      	beq.n	8024adc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8024a92:	9b07      	ldr	r3, [sp, #28]
 8024a94:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8024a96:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024a98:	3b01      	subs	r3, #1
 8024a9a:	fb00 4003 	mla	r0, r0, r3, r4
 8024a9e:	1400      	asrs	r0, r0, #16
 8024aa0:	f53f ae80 	bmi.w	80247a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024aa4:	3901      	subs	r1, #1
 8024aa6:	4288      	cmp	r0, r1
 8024aa8:	f6bf ae7c 	bge.w	80247a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024aac:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024aae:	fb01 5303 	mla	r3, r1, r3, r5
 8024ab2:	141b      	asrs	r3, r3, #16
 8024ab4:	f53f ae76 	bmi.w	80247a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024ab8:	3a01      	subs	r2, #1
 8024aba:	4293      	cmp	r3, r2
 8024abc:	f6bf ae72 	bge.w	80247a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024ac0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024ac4:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8024ac8:	f1bb 0f00 	cmp.w	fp, #0
 8024acc:	dc70      	bgt.n	8024bb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8024ace:	9b07      	ldr	r3, [sp, #28]
 8024ad0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024ad4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024ad6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024ada:	930a      	str	r3, [sp, #40]	; 0x28
 8024adc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024ade:	2b00      	cmp	r3, #0
 8024ae0:	f340 81ae 	ble.w	8024e40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8024ae4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024ae8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024aec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024af0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024af2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024af6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024afa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024afe:	eef0 6a62 	vmov.f32	s13, s5
 8024b02:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024b06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024b0a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024b0e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8024b12:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024b16:	eef0 6a43 	vmov.f32	s13, s6
 8024b1a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024b1e:	ee12 2a90 	vmov	r2, s5
 8024b22:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024b26:	fb92 f3f3 	sdiv	r3, r2, r3
 8024b2a:	ee13 2a10 	vmov	r2, s6
 8024b2e:	9327      	str	r3, [sp, #156]	; 0x9c
 8024b30:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024b32:	fb92 f3f3 	sdiv	r3, r2, r3
 8024b36:	9328      	str	r3, [sp, #160]	; 0xa0
 8024b38:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024b3a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024b3c:	3b01      	subs	r3, #1
 8024b3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024b42:	9316      	str	r3, [sp, #88]	; 0x58
 8024b44:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024b46:	bf08      	it	eq
 8024b48:	4613      	moveq	r3, r2
 8024b4a:	ee16 5a90 	vmov	r5, s13
 8024b4e:	9307      	str	r3, [sp, #28]
 8024b50:	eeb0 3a67 	vmov.f32	s6, s15
 8024b54:	eef0 2a47 	vmov.f32	s5, s14
 8024b58:	e5f8      	b.n	802474c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8024b5a:	2800      	cmp	r0, #0
 8024b5c:	f43f ae6b 	beq.w	8024836 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024b60:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024b64:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024b68:	9108      	str	r1, [sp, #32]
 8024b6a:	0e09      	lsrs	r1, r1, #24
 8024b6c:	9110      	str	r1, [sp, #64]	; 0x40
 8024b6e:	e662      	b.n	8024836 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024b70:	f113 0801 	adds.w	r8, r3, #1
 8024b74:	f53f af74 	bmi.w	8024a60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024b78:	4541      	cmp	r1, r8
 8024b7a:	f6ff af71 	blt.w	8024a60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024b7e:	f11c 0801 	adds.w	r8, ip, #1
 8024b82:	f53f af6d 	bmi.w	8024a60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024b86:	45c6      	cmp	lr, r8
 8024b88:	f6ff af6a 	blt.w	8024a60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024b8c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8024b90:	b209      	sxth	r1, r1
 8024b92:	fa0f f38e 	sxth.w	r3, lr
 8024b96:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8024b9a:	9301      	str	r3, [sp, #4]
 8024b9c:	9100      	str	r1, [sp, #0]
 8024b9e:	4633      	mov	r3, r6
 8024ba0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024ba2:	9819      	ldr	r0, [sp, #100]	; 0x64
 8024ba4:	4639      	mov	r1, r7
 8024ba6:	f7ff fc7a 	bl	802449e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8024baa:	e759      	b.n	8024a60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024bac:	fffff800 	.word	0xfffff800
 8024bb0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024bb2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024bb4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024bb8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024bba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024bbe:	1427      	asrs	r7, r4, #16
 8024bc0:	142b      	asrs	r3, r5, #16
 8024bc2:	fb01 7303 	mla	r3, r1, r3, r7
 8024bc6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024bc8:	18e7      	adds	r7, r4, r3
 8024bca:	5ce3      	ldrb	r3, [r4, r3]
 8024bcc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024bd0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024bd4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024bd8:	2a00      	cmp	r2, #0
 8024bda:	f000 8127 	beq.w	8024e2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024bde:	f897 e001 	ldrb.w	lr, [r7, #1]
 8024be2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8024be6:	940d      	str	r4, [sp, #52]	; 0x34
 8024be8:	0e24      	lsrs	r4, r4, #24
 8024bea:	9414      	str	r4, [sp, #80]	; 0x50
 8024bec:	b170      	cbz	r0, 8024c0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024bee:	eb07 0e01 	add.w	lr, r7, r1
 8024bf2:	5c79      	ldrb	r1, [r7, r1]
 8024bf4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024bf8:	9109      	str	r1, [sp, #36]	; 0x24
 8024bfa:	0e09      	lsrs	r1, r1, #24
 8024bfc:	9111      	str	r1, [sp, #68]	; 0x44
 8024bfe:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8024c02:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024c06:	910e      	str	r1, [sp, #56]	; 0x38
 8024c08:	0e09      	lsrs	r1, r1, #24
 8024c0a:	9115      	str	r1, [sp, #84]	; 0x54
 8024c0c:	b292      	uxth	r2, r2
 8024c0e:	b280      	uxth	r0, r0
 8024c10:	fb02 f800 	mul.w	r8, r2, r0
 8024c14:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024c18:	0112      	lsls	r2, r2, #4
 8024c1a:	eba2 0e08 	sub.w	lr, r2, r8
 8024c1e:	b280      	uxth	r0, r0
 8024c20:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8024c24:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024c26:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024c28:	fa1f fe8e 	uxth.w	lr, lr
 8024c2c:	1a09      	subs	r1, r1, r0
 8024c2e:	b289      	uxth	r1, r1
 8024c30:	fb0e f202 	mul.w	r2, lr, r2
 8024c34:	fb01 220c 	mla	r2, r1, ip, r2
 8024c38:	fb00 2204 	mla	r2, r0, r4, r2
 8024c3c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024c3e:	fb08 2204 	mla	r2, r8, r4, r2
 8024c42:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8024c46:	2a00      	cmp	r2, #0
 8024c48:	f000 80e5 	beq.w	8024e16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8024c4c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024c50:	d019      	beq.n	8024c86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8024c52:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024c56:	fb0c fa0a 	mul.w	sl, ip, sl
 8024c5a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024c5e:	fb0c fc03 	mul.w	ip, ip, r3
 8024c62:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024c66:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024c6a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024c6e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024c72:	4453      	add	r3, sl
 8024c74:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024c78:	0a1b      	lsrs	r3, r3, #8
 8024c7a:	0a3f      	lsrs	r7, r7, #8
 8024c7c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024c80:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024c84:	433b      	orrs	r3, r7
 8024c86:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024c88:	2cff      	cmp	r4, #255	; 0xff
 8024c8a:	d020      	beq.n	8024cce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8024c8c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024c8e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024c92:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024c94:	4367      	muls	r7, r4
 8024c96:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024c98:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024c9c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024c9e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024ca2:	fb04 fa0a 	mul.w	sl, r4, sl
 8024ca6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024caa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024cae:	44bc      	add	ip, r7
 8024cb0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024cb4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024cb8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024cbc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024cc0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024cc4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024cc8:	ea4c 040a 	orr.w	r4, ip, sl
 8024ccc:	940d      	str	r4, [sp, #52]	; 0x34
 8024cce:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024cd0:	2cff      	cmp	r4, #255	; 0xff
 8024cd2:	d020      	beq.n	8024d16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8024cd4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024cd6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024cda:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024cdc:	4367      	muls	r7, r4
 8024cde:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024ce0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024ce4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024ce6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024cea:	fb04 fa0a 	mul.w	sl, r4, sl
 8024cee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024cf2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024cf6:	44bc      	add	ip, r7
 8024cf8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024cfc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024d00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024d04:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024d08:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024d0c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024d10:	ea4c 040a 	orr.w	r4, ip, sl
 8024d14:	9409      	str	r4, [sp, #36]	; 0x24
 8024d16:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024d18:	2cff      	cmp	r4, #255	; 0xff
 8024d1a:	d020      	beq.n	8024d5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8024d1c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024d1e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024d22:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024d24:	4367      	muls	r7, r4
 8024d26:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024d28:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024d2c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024d2e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024d32:	fb04 fa0a 	mul.w	sl, r4, sl
 8024d36:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024d3a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024d3e:	44bc      	add	ip, r7
 8024d40:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024d44:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024d48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024d4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024d50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024d54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024d58:	ea4c 040a 	orr.w	r4, ip, sl
 8024d5c:	940e      	str	r4, [sp, #56]	; 0x38
 8024d5e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024d60:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024d64:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024d66:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024d6a:	fb0e f707 	mul.w	r7, lr, r7
 8024d6e:	fb01 770c 	mla	r7, r1, ip, r7
 8024d72:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024d76:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024d78:	fb00 770c 	mla	r7, r0, ip, r7
 8024d7c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024d80:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024d82:	fb08 770c 	mla	r7, r8, ip, r7
 8024d86:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8024d8a:	fb0e fe0c 	mul.w	lr, lr, ip
 8024d8e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024d92:	fb01 e303 	mla	r3, r1, r3, lr
 8024d96:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024d98:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024d9c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024d9e:	fb00 330a 	mla	r3, r0, sl, r3
 8024da2:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024da6:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024daa:	f8b9 3000 	ldrh.w	r3, [r9]
 8024dae:	43d2      	mvns	r2, r2
 8024db0:	1218      	asrs	r0, r3, #8
 8024db2:	b2d2      	uxtb	r2, r2
 8024db4:	10d9      	asrs	r1, r3, #3
 8024db6:	0a3f      	lsrs	r7, r7, #8
 8024db8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024dbc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024dc0:	00db      	lsls	r3, r3, #3
 8024dc2:	4350      	muls	r0, r2
 8024dc4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024dc8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024dcc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024dd0:	b2db      	uxtb	r3, r3
 8024dd2:	ea47 070c 	orr.w	r7, r7, ip
 8024dd6:	4351      	muls	r1, r2
 8024dd8:	4353      	muls	r3, r2
 8024dda:	1c42      	adds	r2, r0, #1
 8024ddc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024de0:	0c3a      	lsrs	r2, r7, #16
 8024de2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024de6:	4a18      	ldr	r2, [pc, #96]	; (8024e48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8024de8:	b2c0      	uxtb	r0, r0
 8024dea:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8024dee:	1c4a      	adds	r2, r1, #1
 8024df0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024df4:	0a3a      	lsrs	r2, r7, #8
 8024df6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024dfa:	00c9      	lsls	r1, r1, #3
 8024dfc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024e00:	4301      	orrs	r1, r0
 8024e02:	1c58      	adds	r0, r3, #1
 8024e04:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024e08:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8024e0c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8024e10:	4308      	orrs	r0, r1
 8024e12:	f8a9 0000 	strh.w	r0, [r9]
 8024e16:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024e18:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024e1a:	441a      	add	r2, r3
 8024e1c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024e1e:	9225      	str	r2, [sp, #148]	; 0x94
 8024e20:	f109 0902 	add.w	r9, r9, #2
 8024e24:	441d      	add	r5, r3
 8024e26:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024e2a:	e64d      	b.n	8024ac8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8024e2c:	2800      	cmp	r0, #0
 8024e2e:	f43f aeed 	beq.w	8024c0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024e32:	5c79      	ldrb	r1, [r7, r1]
 8024e34:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024e38:	9109      	str	r1, [sp, #36]	; 0x24
 8024e3a:	0e09      	lsrs	r1, r1, #24
 8024e3c:	9111      	str	r1, [sp, #68]	; 0x44
 8024e3e:	e6e5      	b.n	8024c0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024e40:	b01b      	add	sp, #108	; 0x6c
 8024e42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024e46:	bf00      	nop
 8024e48:	fffff800 	.word	0xfffff800

08024e4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8024e4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024e50:	b085      	sub	sp, #20
 8024e52:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8024e56:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8024e5a:	9103      	str	r1, [sp, #12]
 8024e5c:	fb00 7406 	mla	r4, r0, r6, r7
 8024e60:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8024e64:	2800      	cmp	r0, #0
 8024e66:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8024e6a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8024e6e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8024e72:	9501      	str	r5, [sp, #4]
 8024e74:	eb03 0904 	add.w	r9, r3, r4
 8024e78:	f2c0 8150 	blt.w	802511c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8024e7c:	4583      	cmp	fp, r0
 8024e7e:	f340 814d 	ble.w	802511c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8024e82:	2f00      	cmp	r7, #0
 8024e84:	f2c0 8146 	blt.w	8025114 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8024e88:	42be      	cmp	r6, r7
 8024e8a:	f340 8143 	ble.w	8025114 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8024e8e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8024e92:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8024e96:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024e9a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8024e9e:	4355      	muls	r5, r2
 8024ea0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024ea4:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8024ea8:	fb0c f203 	mul.w	r2, ip, r3
 8024eac:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8024eb0:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8024eb4:	441d      	add	r5, r3
 8024eb6:	f102 0320 	add.w	r3, r2, #32
 8024eba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024ebe:	0a1b      	lsrs	r3, r3, #8
 8024ec0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8024ec4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024ec8:	431c      	orrs	r4, r3
 8024eca:	1c7b      	adds	r3, r7, #1
 8024ecc:	f100 812b 	bmi.w	8025126 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8024ed0:	429e      	cmp	r6, r3
 8024ed2:	f340 8128 	ble.w	8025126 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8024ed6:	2900      	cmp	r1, #0
 8024ed8:	f000 8128 	beq.w	802512c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8024edc:	9a01      	ldr	r2, [sp, #4]
 8024ede:	f899 3001 	ldrb.w	r3, [r9, #1]
 8024ee2:	8855      	ldrh	r5, [r2, #2]
 8024ee4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8024ee8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8024eec:	fb08 f802 	mul.w	r8, r8, r2
 8024ef0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024ef4:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8024ef8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8024efc:	435d      	muls	r5, r3
 8024efe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024f02:	44d0      	add	r8, sl
 8024f04:	f105 0a20 	add.w	sl, r5, #32
 8024f08:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8024f0c:	0a2d      	lsrs	r5, r5, #8
 8024f0e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8024f12:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024f16:	432a      	orrs	r2, r5
 8024f18:	3001      	adds	r0, #1
 8024f1a:	f100 810d 	bmi.w	8025138 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8024f1e:	4583      	cmp	fp, r0
 8024f20:	f340 810a 	ble.w	8025138 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8024f24:	f1be 0f00 	cmp.w	lr, #0
 8024f28:	f000 810b 	beq.w	8025142 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8024f2c:	2f00      	cmp	r7, #0
 8024f2e:	f2c0 8100 	blt.w	8025132 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8024f32:	42be      	cmp	r6, r7
 8024f34:	f340 80fd 	ble.w	8025132 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8024f38:	9801      	ldr	r0, [sp, #4]
 8024f3a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8024f3e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8024f42:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8024f46:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8024f4a:	fb0a fa00 	mul.w	sl, sl, r0
 8024f4e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8024f52:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8024f56:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8024f5a:	fb05 f808 	mul.w	r8, r5, r8
 8024f5e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8024f62:	4482      	add	sl, r0
 8024f64:	f108 0020 	add.w	r0, r8, #32
 8024f68:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8024f6c:	0a00      	lsrs	r0, r0, #8
 8024f6e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8024f72:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024f76:	ea4b 0b00 	orr.w	fp, fp, r0
 8024f7a:	3701      	adds	r7, #1
 8024f7c:	f100 80e6 	bmi.w	802514c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8024f80:	42be      	cmp	r6, r7
 8024f82:	f340 80e3 	ble.w	802514c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8024f86:	2900      	cmp	r1, #0
 8024f88:	f000 80e3 	beq.w	8025152 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8024f8c:	3601      	adds	r6, #1
 8024f8e:	9801      	ldr	r0, [sp, #4]
 8024f90:	f819 7006 	ldrb.w	r7, [r9, r6]
 8024f94:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8024f98:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8024f9c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8024fa0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024fa4:	fb09 f906 	mul.w	r9, r9, r6
 8024fa8:	fb07 f800 	mul.w	r8, r7, r0
 8024fac:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8024fb0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8024fb4:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8024fb8:	44d1      	add	r9, sl
 8024fba:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8024fbe:	f108 0020 	add.w	r0, r8, #32
 8024fc2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8024fc6:	0a00      	lsrs	r0, r0, #8
 8024fc8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024fcc:	4330      	orrs	r0, r6
 8024fce:	b28e      	uxth	r6, r1
 8024fd0:	fa1f f98e 	uxth.w	r9, lr
 8024fd4:	fb06 f809 	mul.w	r8, r6, r9
 8024fd8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8024fdc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8024fe0:	0136      	lsls	r6, r6, #4
 8024fe2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024fe6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8024fea:	9601      	str	r6, [sp, #4]
 8024fec:	ea4a 0404 	orr.w	r4, sl, r4
 8024ff0:	fa1f f689 	uxth.w	r6, r9
 8024ff4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024ff8:	fb11 f90e 	smulbb	r9, r1, lr
 8024ffc:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025000:	9602      	str	r6, [sp, #8]
 8025002:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025006:	4626      	mov	r6, r4
 8025008:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802500c:	f1ce 0410 	rsb	r4, lr, #16
 8025010:	1a64      	subs	r4, r4, r1
 8025012:	ea4a 0202 	orr.w	r2, sl, r2
 8025016:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802501a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802501e:	434a      	muls	r2, r1
 8025020:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025024:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025028:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802502c:	fb04 2406 	mla	r4, r4, r6, r2
 8025030:	ea4a 0000 	orr.w	r0, sl, r0
 8025034:	fb09 4200 	mla	r2, r9, r0, r4
 8025038:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802503c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8025040:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025044:	ea44 0b0b 	orr.w	fp, r4, fp
 8025048:	9c01      	ldr	r4, [sp, #4]
 802504a:	9e02      	ldr	r6, [sp, #8]
 802504c:	9903      	ldr	r1, [sp, #12]
 802504e:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8025052:	1ba4      	subs	r4, r4, r6
 8025054:	9e01      	ldr	r6, [sp, #4]
 8025056:	8808      	ldrh	r0, [r1, #0]
 8025058:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 802505c:	eba6 0608 	sub.w	r6, r6, r8
 8025060:	b2b6      	uxth	r6, r6
 8025062:	b2a4      	uxth	r4, r4
 8025064:	4373      	muls	r3, r6
 8025066:	fb0c 3304 	mla	r3, ip, r4, r3
 802506a:	9c02      	ldr	r4, [sp, #8]
 802506c:	fb04 3505 	mla	r5, r4, r5, r3
 8025070:	fb08 5707 	mla	r7, r8, r7, r5
 8025074:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8025078:	b289      	uxth	r1, r1
 802507a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802507e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8025082:	434f      	muls	r7, r1
 8025084:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025088:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802508c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025090:	1c7b      	adds	r3, r7, #1
 8025092:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025096:	ea42 0e0e 	orr.w	lr, r2, lr
 802509a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802509e:	fa1f f28e 	uxth.w	r2, lr
 80250a2:	1203      	asrs	r3, r0, #8
 80250a4:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80250a8:	b2ff      	uxtb	r7, r7
 80250aa:	1215      	asrs	r5, r2, #8
 80250ac:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80250b0:	fb13 f307 	smulbb	r3, r3, r7
 80250b4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80250b8:	fb05 3501 	mla	r5, r5, r1, r3
 80250bc:	10c3      	asrs	r3, r0, #3
 80250be:	10d4      	asrs	r4, r2, #3
 80250c0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80250c4:	fb13 f307 	smulbb	r3, r3, r7
 80250c8:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80250cc:	fb04 3401 	mla	r4, r4, r1, r3
 80250d0:	00c3      	lsls	r3, r0, #3
 80250d2:	00d2      	lsls	r2, r2, #3
 80250d4:	b2db      	uxtb	r3, r3
 80250d6:	fb13 f307 	smulbb	r3, r3, r7
 80250da:	b2d2      	uxtb	r2, r2
 80250dc:	fb02 3101 	mla	r1, r2, r1, r3
 80250e0:	b2ad      	uxth	r5, r5
 80250e2:	b289      	uxth	r1, r1
 80250e4:	b2a4      	uxth	r4, r4
 80250e6:	1c6b      	adds	r3, r5, #1
 80250e8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80250ec:	1c62      	adds	r2, r4, #1
 80250ee:	1c4b      	adds	r3, r1, #1
 80250f0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80250f4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80250f8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80250fc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025100:	0964      	lsrs	r4, r4, #5
 8025102:	432b      	orrs	r3, r5
 8025104:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025108:	9a03      	ldr	r2, [sp, #12]
 802510a:	4323      	orrs	r3, r4
 802510c:	8013      	strh	r3, [r2, #0]
 802510e:	b005      	add	sp, #20
 8025110:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025114:	f04f 0c00 	mov.w	ip, #0
 8025118:	4664      	mov	r4, ip
 802511a:	e6d6      	b.n	8024eca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 802511c:	2300      	movs	r3, #0
 802511e:	469c      	mov	ip, r3
 8025120:	461a      	mov	r2, r3
 8025122:	461c      	mov	r4, r3
 8025124:	e6f8      	b.n	8024f18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8025126:	2300      	movs	r3, #0
 8025128:	461a      	mov	r2, r3
 802512a:	e6f5      	b.n	8024f18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802512c:	460b      	mov	r3, r1
 802512e:	460a      	mov	r2, r1
 8025130:	e6f2      	b.n	8024f18 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8025132:	2500      	movs	r5, #0
 8025134:	46ab      	mov	fp, r5
 8025136:	e720      	b.n	8024f7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8025138:	2700      	movs	r7, #0
 802513a:	463d      	mov	r5, r7
 802513c:	4638      	mov	r0, r7
 802513e:	46bb      	mov	fp, r7
 8025140:	e745      	b.n	8024fce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8025142:	4677      	mov	r7, lr
 8025144:	4675      	mov	r5, lr
 8025146:	4670      	mov	r0, lr
 8025148:	46f3      	mov	fp, lr
 802514a:	e740      	b.n	8024fce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802514c:	2700      	movs	r7, #0
 802514e:	4638      	mov	r0, r7
 8025150:	e73d      	b.n	8024fce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8025152:	460f      	mov	r7, r1
 8025154:	4608      	mov	r0, r1
 8025156:	e73a      	b.n	8024fce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08025158 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802515c:	b097      	sub	sp, #92	; 0x5c
 802515e:	9214      	str	r2, [sp, #80]	; 0x50
 8025160:	9308      	str	r3, [sp, #32]
 8025162:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8025164:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8025168:	9312      	str	r3, [sp, #72]	; 0x48
 802516a:	9111      	str	r1, [sp, #68]	; 0x44
 802516c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8025170:	9015      	str	r0, [sp, #84]	; 0x54
 8025172:	6850      	ldr	r0, [r2, #4]
 8025174:	6812      	ldr	r2, [r2, #0]
 8025176:	fb00 1303 	mla	r3, r0, r3, r1
 802517a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802517e:	9309      	str	r3, [sp, #36]	; 0x24
 8025180:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025182:	681b      	ldr	r3, [r3, #0]
 8025184:	930b      	str	r3, [sp, #44]	; 0x2c
 8025186:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025188:	685b      	ldr	r3, [r3, #4]
 802518a:	930c      	str	r3, [sp, #48]	; 0x30
 802518c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8025190:	930a      	str	r3, [sp, #40]	; 0x28
 8025192:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8025194:	2b00      	cmp	r3, #0
 8025196:	dc03      	bgt.n	80251a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025198:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802519a:	2b00      	cmp	r3, #0
 802519c:	f340 83cb 	ble.w	8025936 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80251a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80251a2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80251a6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80251aa:	1e48      	subs	r0, r1, #1
 80251ac:	1e55      	subs	r5, r2, #1
 80251ae:	9b08      	ldr	r3, [sp, #32]
 80251b0:	2b00      	cmp	r3, #0
 80251b2:	f340 81a3 	ble.w	80254fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80251b6:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80251b8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80251ba:	1436      	asrs	r6, r6, #16
 80251bc:	ea4f 4323 	mov.w	r3, r3, asr #16
 80251c0:	d406      	bmi.n	80251d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80251c2:	4286      	cmp	r6, r0
 80251c4:	da04      	bge.n	80251d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80251c6:	2b00      	cmp	r3, #0
 80251c8:	db02      	blt.n	80251d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80251ca:	42ab      	cmp	r3, r5
 80251cc:	f2c0 8197 	blt.w	80254fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80251d0:	3601      	adds	r6, #1
 80251d2:	f100 8184 	bmi.w	80254de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80251d6:	42b1      	cmp	r1, r6
 80251d8:	f2c0 8181 	blt.w	80254de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80251dc:	3301      	adds	r3, #1
 80251de:	f100 817e 	bmi.w	80254de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80251e2:	429a      	cmp	r2, r3
 80251e4:	f2c0 817b 	blt.w	80254de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80251e8:	9b08      	ldr	r3, [sp, #32]
 80251ea:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80251ec:	9313      	str	r3, [sp, #76]	; 0x4c
 80251ee:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80251f2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80251f4:	2b00      	cmp	r3, #0
 80251f6:	f340 81a4 	ble.w	8025542 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80251fa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80251fc:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80251fe:	1418      	asrs	r0, r3, #16
 8025200:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025202:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025206:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025208:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802520c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802520e:	142d      	asrs	r5, r5, #16
 8025210:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8025214:	f100 81f8 	bmi.w	8025608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025218:	f102 3eff 	add.w	lr, r2, #4294967295
 802521c:	4575      	cmp	r5, lr
 802521e:	f280 81f3 	bge.w	8025608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025222:	2800      	cmp	r0, #0
 8025224:	f2c0 81f0 	blt.w	8025608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025228:	f103 3eff 	add.w	lr, r3, #4294967295
 802522c:	4570      	cmp	r0, lr
 802522e:	f280 81eb 	bge.w	8025608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025232:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025234:	b212      	sxth	r2, r2
 8025236:	fb00 5002 	mla	r0, r0, r2, r5
 802523a:	fa1f fe81 	uxth.w	lr, r1
 802523e:	eb03 0a00 	add.w	sl, r3, r0
 8025242:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8025246:	f813 9000 	ldrb.w	r9, [r3, r0]
 802524a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802524e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8025252:	b29b      	uxth	r3, r3
 8025254:	f1bc 0f00 	cmp.w	ip, #0
 8025258:	f000 81b9 	beq.w	80255ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 802525c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8025260:	940d      	str	r4, [sp, #52]	; 0x34
 8025262:	eb0a 0b02 	add.w	fp, sl, r2
 8025266:	fa1f fa8c 	uxth.w	sl, ip
 802526a:	fb0a fe0e 	mul.w	lr, sl, lr
 802526e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8025272:	fa1f fa8a 	uxth.w	sl, sl
 8025276:	eba5 050e 	sub.w	r5, r5, lr
 802527a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802527e:	940e      	str	r4, [sp, #56]	; 0x38
 8025280:	eba3 030a 	sub.w	r3, r3, sl
 8025284:	b2ad      	uxth	r5, r5
 8025286:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025288:	b29b      	uxth	r3, r3
 802528a:	fb08 f505 	mul.w	r5, r8, r5
 802528e:	fb09 5303 	mla	r3, r9, r3, r5
 8025292:	fb0a 3304 	mla	r3, sl, r4, r3
 8025296:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025298:	fb0e 3304 	mla	r3, lr, r4, r3
 802529c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80252a0:	2b00      	cmp	r3, #0
 80252a2:	f000 810f 	beq.w	80254c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80252a6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80252a8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80252ac:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80252b0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80252b4:	f000 8190 	beq.w	80255d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80252b8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80252bc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80252c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80252c4:	fb09 f000 	mul.w	r0, r9, r0
 80252c8:	fb0a fe0e 	mul.w	lr, sl, lr
 80252cc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80252d0:	f100 0b20 	add.w	fp, r0, #32
 80252d4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80252d8:	44ce      	add	lr, r9
 80252da:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80252de:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80252e2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80252e6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80252ea:	ea4e 0909 	orr.w	r9, lr, r9
 80252ee:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80252f2:	8868      	ldrh	r0, [r5, #2]
 80252f4:	d019      	beq.n	802532a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80252f6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80252fa:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80252fe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025302:	fb08 f800 	mul.w	r8, r8, r0
 8025306:	fb0a fe0e 	mul.w	lr, sl, lr
 802530a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802530e:	f108 0b20 	add.w	fp, r8, #32
 8025312:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025316:	4486      	add	lr, r0
 8025318:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802531c:	0a00      	lsrs	r0, r0, #8
 802531e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025322:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025326:	ea4e 0000 	orr.w	r0, lr, r0
 802532a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802532e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025332:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8025336:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802533a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802533e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025342:	ea4e 0909 	orr.w	r9, lr, r9
 8025346:	ea4a 0000 	orr.w	r0, sl, r0
 802534a:	f1bc 0f00 	cmp.w	ip, #0
 802534e:	f000 8145 	beq.w	80255dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8025352:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8025356:	3a01      	subs	r2, #1
 8025358:	0052      	lsls	r2, r2, #1
 802535a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802535c:	3202      	adds	r2, #2
 802535e:	2cff      	cmp	r4, #255	; 0xff
 8025360:	eb05 0e02 	add.w	lr, r5, r2
 8025364:	5aaa      	ldrh	r2, [r5, r2]
 8025366:	d018      	beq.n	802539a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8025368:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 802536c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025370:	fb04 fa02 	mul.w	sl, r4, r2
 8025374:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025378:	fb08 f805 	mul.w	r8, r8, r5
 802537c:	f10a 0520 	add.w	r5, sl, #32
 8025380:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8025384:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8025388:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802538c:	4442      	add	r2, r8
 802538e:	0a2d      	lsrs	r5, r5, #8
 8025390:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8025394:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025398:	432a      	orrs	r2, r5
 802539a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802539c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80253a0:	2cff      	cmp	r4, #255	; 0xff
 80253a2:	d01a      	beq.n	80253da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80253a4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80253a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80253ac:	fb04 fa05 	mul.w	sl, r4, r5
 80253b0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80253b4:	fb08 f80e 	mul.w	r8, r8, lr
 80253b8:	f10a 0e20 	add.w	lr, sl, #32
 80253bc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80253c0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80253c4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80253c8:	4445      	add	r5, r8
 80253ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80253ce:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80253d2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80253d6:	ea45 050e 	orr.w	r5, r5, lr
 80253da:	fb1c fe01 	smulbb	lr, ip, r1
 80253de:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80253e2:	f1cc 0810 	rsb	r8, ip, #16
 80253e6:	eba8 0801 	sub.w	r8, r8, r1
 80253ea:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80253ee:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80253f2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80253f6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80253fa:	4341      	muls	r1, r0
 80253fc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025400:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025404:	ea4a 0202 	orr.w	r2, sl, r2
 8025408:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802540c:	fb09 1108 	mla	r1, r9, r8, r1
 8025410:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025414:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8025418:	fb0c 1102 	mla	r1, ip, r2, r1
 802541c:	ea4b 0505 	orr.w	r5, fp, r5
 8025420:	fb0e 1e05 	mla	lr, lr, r5, r1
 8025424:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025428:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802542c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025430:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025434:	ea42 0e0e 	orr.w	lr, r2, lr
 8025438:	fa1f f28e 	uxth.w	r2, lr
 802543c:	2bff      	cmp	r3, #255	; 0xff
 802543e:	d103      	bne.n	8025448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8025440:	9912      	ldr	r1, [sp, #72]	; 0x48
 8025442:	29ff      	cmp	r1, #255	; 0xff
 8025444:	f000 80de 	beq.w	8025604 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8025448:	990a      	ldr	r1, [sp, #40]	; 0x28
 802544a:	8838      	ldrh	r0, [r7, #0]
 802544c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802544e:	434b      	muls	r3, r1
 8025450:	f103 0c01 	add.w	ip, r3, #1
 8025454:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8025458:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802545c:	fa5f fc83 	uxtb.w	ip, r3
 8025460:	1203      	asrs	r3, r0, #8
 8025462:	1215      	asrs	r5, r2, #8
 8025464:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025468:	fb13 f30c 	smulbb	r3, r3, ip
 802546c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025470:	fb05 3501 	mla	r5, r5, r1, r3
 8025474:	10c3      	asrs	r3, r0, #3
 8025476:	10d1      	asrs	r1, r2, #3
 8025478:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802547c:	fb13 f30c 	smulbb	r3, r3, ip
 8025480:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025484:	fb01 3104 	mla	r1, r1, r4, r3
 8025488:	00c3      	lsls	r3, r0, #3
 802548a:	00d2      	lsls	r2, r2, #3
 802548c:	b2db      	uxtb	r3, r3
 802548e:	b2d2      	uxtb	r2, r2
 8025490:	fb13 f30c 	smulbb	r3, r3, ip
 8025494:	b2ad      	uxth	r5, r5
 8025496:	fb02 3304 	mla	r3, r2, r4, r3
 802549a:	b29a      	uxth	r2, r3
 802549c:	1c6b      	adds	r3, r5, #1
 802549e:	b289      	uxth	r1, r1
 80254a0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80254a4:	1c53      	adds	r3, r2, #1
 80254a6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80254aa:	1c4a      	adds	r2, r1, #1
 80254ac:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80254b0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80254b4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80254b8:	0949      	lsrs	r1, r1, #5
 80254ba:	432b      	orrs	r3, r5
 80254bc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80254c0:	430b      	orrs	r3, r1
 80254c2:	803b      	strh	r3, [r7, #0]
 80254c4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80254c6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80254c8:	4413      	add	r3, r2
 80254ca:	9321      	str	r3, [sp, #132]	; 0x84
 80254cc:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80254ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80254d0:	441a      	add	r2, r3
 80254d2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80254d4:	9222      	str	r2, [sp, #136]	; 0x88
 80254d6:	3b01      	subs	r3, #1
 80254d8:	3702      	adds	r7, #2
 80254da:	9313      	str	r3, [sp, #76]	; 0x4c
 80254dc:	e689      	b.n	80251f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80254de:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80254e0:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80254e2:	9c22      	ldr	r4, [sp, #136]	; 0x88
 80254e4:	4433      	add	r3, r6
 80254e6:	9321      	str	r3, [sp, #132]	; 0x84
 80254e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80254ea:	441c      	add	r4, r3
 80254ec:	9b08      	ldr	r3, [sp, #32]
 80254ee:	9422      	str	r4, [sp, #136]	; 0x88
 80254f0:	3b01      	subs	r3, #1
 80254f2:	9308      	str	r3, [sp, #32]
 80254f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80254f6:	3302      	adds	r3, #2
 80254f8:	9309      	str	r3, [sp, #36]	; 0x24
 80254fa:	e658      	b.n	80251ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80254fc:	d028      	beq.n	8025550 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80254fe:	9b08      	ldr	r3, [sp, #32]
 8025500:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025502:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8025504:	3b01      	subs	r3, #1
 8025506:	fb00 5003 	mla	r0, r0, r3, r5
 802550a:	1400      	asrs	r0, r0, #16
 802550c:	f53f ae6c 	bmi.w	80251e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025510:	3901      	subs	r1, #1
 8025512:	4288      	cmp	r0, r1
 8025514:	f6bf ae68 	bge.w	80251e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025518:	9924      	ldr	r1, [sp, #144]	; 0x90
 802551a:	9822      	ldr	r0, [sp, #136]	; 0x88
 802551c:	fb01 0303 	mla	r3, r1, r3, r0
 8025520:	141b      	asrs	r3, r3, #16
 8025522:	f53f ae61 	bmi.w	80251e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025526:	3a01      	subs	r2, #1
 8025528:	4293      	cmp	r3, r2
 802552a:	f6bf ae5d 	bge.w	80251e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802552e:	9b08      	ldr	r3, [sp, #32]
 8025530:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8025534:	9313      	str	r3, [sp, #76]	; 0x4c
 8025536:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802553a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802553c:	2b00      	cmp	r3, #0
 802553e:	f300 8082 	bgt.w	8025646 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8025542:	9b08      	ldr	r3, [sp, #32]
 8025544:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8025548:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802554a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802554e:	9309      	str	r3, [sp, #36]	; 0x24
 8025550:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8025552:	2b00      	cmp	r3, #0
 8025554:	f340 81ef 	ble.w	8025936 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8025558:	ee30 0a04 	vadd.f32	s0, s0, s8
 802555c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025560:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025564:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025566:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802556a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802556e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025572:	eef0 6a62 	vmov.f32	s13, s5
 8025576:	ee61 7a27 	vmul.f32	s15, s2, s15
 802557a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802557e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025582:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8025586:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802558a:	eef0 6a43 	vmov.f32	s13, s6
 802558e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025592:	ee12 2a90 	vmov	r2, s5
 8025596:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802559a:	fb92 f3f3 	sdiv	r3, r2, r3
 802559e:	ee13 2a10 	vmov	r2, s6
 80255a2:	9323      	str	r3, [sp, #140]	; 0x8c
 80255a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80255a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80255aa:	9324      	str	r3, [sp, #144]	; 0x90
 80255ac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80255ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80255b0:	3b01      	subs	r3, #1
 80255b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80255b6:	9311      	str	r3, [sp, #68]	; 0x44
 80255b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80255ba:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 80255be:	bf08      	it	eq
 80255c0:	4613      	moveq	r3, r2
 80255c2:	9308      	str	r3, [sp, #32]
 80255c4:	eeb0 3a67 	vmov.f32	s6, s15
 80255c8:	eef0 2a47 	vmov.f32	s5, s14
 80255cc:	e5e1      	b.n	8025192 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80255ce:	fb08 f505 	mul.w	r5, r8, r5
 80255d2:	fb09 5303 	mla	r3, r9, r3, r5
 80255d6:	e661      	b.n	802529c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80255d8:	4681      	mov	r9, r0
 80255da:	e688      	b.n	80252ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80255dc:	f1c1 0210 	rsb	r2, r1, #16
 80255e0:	4341      	muls	r1, r0
 80255e2:	fb09 1902 	mla	r9, r9, r2, r1
 80255e6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80255ea:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80255ee:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80255f2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80255f6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80255fa:	ea42 0909 	orr.w	r9, r2, r9
 80255fe:	fa1f f289 	uxth.w	r2, r9
 8025602:	e71b      	b.n	802543c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8025604:	803a      	strh	r2, [r7, #0]
 8025606:	e75d      	b.n	80254c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025608:	f115 0e01 	adds.w	lr, r5, #1
 802560c:	f53f af5a 	bmi.w	80254c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025610:	4572      	cmp	r2, lr
 8025612:	f6ff af57 	blt.w	80254c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025616:	f110 0e01 	adds.w	lr, r0, #1
 802561a:	f53f af53 	bmi.w	80254c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802561e:	4573      	cmp	r3, lr
 8025620:	f6ff af50 	blt.w	80254c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025624:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8025626:	9502      	str	r5, [sp, #8]
 8025628:	b21b      	sxth	r3, r3
 802562a:	b212      	sxth	r2, r2
 802562c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8025630:	9301      	str	r3, [sp, #4]
 8025632:	9200      	str	r2, [sp, #0]
 8025634:	e9cd c405 	strd	ip, r4, [sp, #20]
 8025638:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 802563c:	4639      	mov	r1, r7
 802563e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8025640:	f7ff fc04 	bl	8024e4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8025644:	e73e      	b.n	80254c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025646:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025648:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802564c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802564e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8025652:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025654:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025658:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802565a:	141f      	asrs	r7, r3, #16
 802565c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802565e:	141b      	asrs	r3, r3, #16
 8025660:	fb01 3707 	mla	r7, r1, r7, r3
 8025664:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025666:	fa1f fc82 	uxth.w	ip, r2
 802566a:	eb03 0a07 	add.w	sl, r3, r7
 802566e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8025672:	f813 9007 	ldrb.w	r9, [r3, r7]
 8025676:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802567a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802567e:	b29b      	uxth	r3, r3
 8025680:	2d00      	cmp	r5, #0
 8025682:	f000 813d 	beq.w	8025900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8025686:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802568a:	940f      	str	r4, [sp, #60]	; 0x3c
 802568c:	eb0a 0b01 	add.w	fp, sl, r1
 8025690:	fa1f fa85 	uxth.w	sl, r5
 8025694:	fb0a fc0c 	mul.w	ip, sl, ip
 8025698:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802569c:	fa1f fa8a 	uxth.w	sl, sl
 80256a0:	eba0 000c 	sub.w	r0, r0, ip
 80256a4:	eba3 030a 	sub.w	r3, r3, sl
 80256a8:	b280      	uxth	r0, r0
 80256aa:	fb08 f000 	mul.w	r0, r8, r0
 80256ae:	b29b      	uxth	r3, r3
 80256b0:	fb09 0303 	mla	r3, r9, r3, r0
 80256b4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80256b6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80256ba:	9410      	str	r4, [sp, #64]	; 0x40
 80256bc:	fb0a 3300 	mla	r3, sl, r0, r3
 80256c0:	fb0c 3304 	mla	r3, ip, r4, r3
 80256c4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80256c8:	2b00      	cmp	r3, #0
 80256ca:	f000 810b 	beq.w	80258e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80256ce:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80256d0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80256d2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80256d6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80256da:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80256de:	f000 8114 	beq.w	802590a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 80256e2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80256e6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80256ea:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80256ee:	fb09 f707 	mul.w	r7, r9, r7
 80256f2:	fb0a fc0c 	mul.w	ip, sl, ip
 80256f6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80256fa:	f107 0b20 	add.w	fp, r7, #32
 80256fe:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8025702:	44cc      	add	ip, r9
 8025704:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8025708:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802570c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025710:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8025714:	ea4c 0909 	orr.w	r9, ip, r9
 8025718:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802571c:	8847      	ldrh	r7, [r0, #2]
 802571e:	d019      	beq.n	8025754 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8025720:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8025724:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025728:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802572c:	fb08 f807 	mul.w	r8, r8, r7
 8025730:	fb0a fc0c 	mul.w	ip, sl, ip
 8025734:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8025738:	f108 0b20 	add.w	fp, r8, #32
 802573c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8025740:	44bc      	add	ip, r7
 8025742:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8025746:	0a3f      	lsrs	r7, r7, #8
 8025748:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802574c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025750:	ea4c 0707 	orr.w	r7, ip, r7
 8025754:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8025758:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802575c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8025760:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025764:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025768:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802576c:	ea4c 0909 	orr.w	r9, ip, r9
 8025770:	ea4a 0707 	orr.w	r7, sl, r7
 8025774:	2d00      	cmp	r5, #0
 8025776:	f000 80ca 	beq.w	802590e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 802577a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802577e:	3901      	subs	r1, #1
 8025780:	0049      	lsls	r1, r1, #1
 8025782:	3102      	adds	r1, #2
 8025784:	eb00 0c01 	add.w	ip, r0, r1
 8025788:	5a41      	ldrh	r1, [r0, r1]
 802578a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802578c:	28ff      	cmp	r0, #255	; 0xff
 802578e:	d019      	beq.n	80257c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8025790:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8025792:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8025796:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802579a:	fb04 fa01 	mul.w	sl, r4, r1
 802579e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80257a2:	fb08 f800 	mul.w	r8, r8, r0
 80257a6:	f10a 0020 	add.w	r0, sl, #32
 80257aa:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80257ae:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80257b2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80257b6:	4441      	add	r1, r8
 80257b8:	0a00      	lsrs	r0, r0, #8
 80257ba:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80257be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80257c2:	4301      	orrs	r1, r0
 80257c4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80257c6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80257ca:	2cff      	cmp	r4, #255	; 0xff
 80257cc:	d01a      	beq.n	8025804 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 80257ce:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80257d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80257d6:	fb04 fa00 	mul.w	sl, r4, r0
 80257da:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80257de:	fb08 f80c 	mul.w	r8, r8, ip
 80257e2:	f10a 0c20 	add.w	ip, sl, #32
 80257e6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80257ea:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80257ee:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80257f2:	4440      	add	r0, r8
 80257f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80257f8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80257fc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025800:	ea40 000c 	orr.w	r0, r0, ip
 8025804:	fb15 fc02 	smulbb	ip, r5, r2
 8025808:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802580c:	f1c5 0810 	rsb	r8, r5, #16
 8025810:	eba8 0802 	sub.w	r8, r8, r2
 8025814:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025818:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802581c:	437a      	muls	r2, r7
 802581e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8025822:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8025826:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802582a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802582e:	fb09 2208 	mla	r2, r9, r8, r2
 8025832:	ea4a 0101 	orr.w	r1, sl, r1
 8025836:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802583a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802583e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025842:	fb05 2201 	mla	r2, r5, r1, r2
 8025846:	ea4b 0000 	orr.w	r0, fp, r0
 802584a:	fb0c 2200 	mla	r2, ip, r0, r2
 802584e:	0d57      	lsrs	r7, r2, #21
 8025850:	0952      	lsrs	r2, r2, #5
 8025852:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025856:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802585a:	433a      	orrs	r2, r7
 802585c:	2bff      	cmp	r3, #255	; 0xff
 802585e:	b292      	uxth	r2, r2
 8025860:	d102      	bne.n	8025868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8025862:	9912      	ldr	r1, [sp, #72]	; 0x48
 8025864:	29ff      	cmp	r1, #255	; 0xff
 8025866:	d063      	beq.n	8025930 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8025868:	980a      	ldr	r0, [sp, #40]	; 0x28
 802586a:	f8be 1000 	ldrh.w	r1, [lr]
 802586e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025870:	4343      	muls	r3, r0
 8025872:	1c58      	adds	r0, r3, #1
 8025874:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8025878:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802587c:	1208      	asrs	r0, r1, #8
 802587e:	b2db      	uxtb	r3, r3
 8025880:	1215      	asrs	r5, r2, #8
 8025882:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025886:	fb10 f003 	smulbb	r0, r0, r3
 802588a:	10cf      	asrs	r7, r1, #3
 802588c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025890:	00c9      	lsls	r1, r1, #3
 8025892:	fb05 0504 	mla	r5, r5, r4, r0
 8025896:	b2c9      	uxtb	r1, r1
 8025898:	10d0      	asrs	r0, r2, #3
 802589a:	00d2      	lsls	r2, r2, #3
 802589c:	fb11 f103 	smulbb	r1, r1, r3
 80258a0:	b2d2      	uxtb	r2, r2
 80258a2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80258a6:	fb02 1204 	mla	r2, r2, r4, r1
 80258aa:	fb17 f703 	smulbb	r7, r7, r3
 80258ae:	b2ad      	uxth	r5, r5
 80258b0:	b292      	uxth	r2, r2
 80258b2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80258b6:	fb00 7004 	mla	r0, r0, r4, r7
 80258ba:	1c6b      	adds	r3, r5, #1
 80258bc:	1c57      	adds	r7, r2, #1
 80258be:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80258c2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80258c6:	b280      	uxth	r0, r0
 80258c8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80258cc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80258d0:	433d      	orrs	r5, r7
 80258d2:	1c47      	adds	r7, r0, #1
 80258d4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80258d8:	097f      	lsrs	r7, r7, #5
 80258da:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80258de:	433d      	orrs	r5, r7
 80258e0:	f8ae 5000 	strh.w	r5, [lr]
 80258e4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80258e6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80258e8:	4413      	add	r3, r2
 80258ea:	9321      	str	r3, [sp, #132]	; 0x84
 80258ec:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80258ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80258f0:	441a      	add	r2, r3
 80258f2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80258f4:	9222      	str	r2, [sp, #136]	; 0x88
 80258f6:	3b01      	subs	r3, #1
 80258f8:	f10e 0e02 	add.w	lr, lr, #2
 80258fc:	9313      	str	r3, [sp, #76]	; 0x4c
 80258fe:	e61c      	b.n	802553a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8025900:	fb08 f000 	mul.w	r0, r8, r0
 8025904:	fb09 0303 	mla	r3, r9, r3, r0
 8025908:	e6dc      	b.n	80256c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 802590a:	46b9      	mov	r9, r7
 802590c:	e704      	b.n	8025718 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 802590e:	f1c2 0110 	rsb	r1, r2, #16
 8025912:	437a      	muls	r2, r7
 8025914:	fb09 2901 	mla	r9, r9, r1, r2
 8025918:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802591c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8025920:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8025924:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025928:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802592c:	4302      	orrs	r2, r0
 802592e:	e795      	b.n	802585c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8025930:	f8ae 2000 	strh.w	r2, [lr]
 8025934:	e7d6      	b.n	80258e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8025936:	b017      	add	sp, #92	; 0x5c
 8025938:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802593c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 802593c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025940:	b085      	sub	sp, #20
 8025942:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8025946:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802594a:	9103      	str	r1, [sp, #12]
 802594c:	fb00 7406 	mla	r4, r0, r6, r7
 8025950:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8025954:	2800      	cmp	r0, #0
 8025956:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802595a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802595e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8025962:	9501      	str	r5, [sp, #4]
 8025964:	eb02 0904 	add.w	r9, r2, r4
 8025968:	f2c0 8141 	blt.w	8025bee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 802596c:	4583      	cmp	fp, r0
 802596e:	f340 813e 	ble.w	8025bee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025972:	2f00      	cmp	r7, #0
 8025974:	f2c0 8137 	blt.w	8025be6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025978:	42be      	cmp	r6, r7
 802597a:	f340 8134 	ble.w	8025be6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802597e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8025982:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8025986:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802598a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802598e:	4355      	muls	r5, r2
 8025990:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025994:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025998:	fb0c f203 	mul.w	r2, ip, r3
 802599c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80259a0:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80259a4:	441d      	add	r5, r3
 80259a6:	f102 0320 	add.w	r3, r2, #32
 80259aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80259ae:	0a1b      	lsrs	r3, r3, #8
 80259b0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80259b4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80259b8:	431c      	orrs	r4, r3
 80259ba:	1c7b      	adds	r3, r7, #1
 80259bc:	f100 811c 	bmi.w	8025bf8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80259c0:	429e      	cmp	r6, r3
 80259c2:	f340 8119 	ble.w	8025bf8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80259c6:	2900      	cmp	r1, #0
 80259c8:	f000 8119 	beq.w	8025bfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 80259cc:	9a01      	ldr	r2, [sp, #4]
 80259ce:	f899 3001 	ldrb.w	r3, [r9, #1]
 80259d2:	8855      	ldrh	r5, [r2, #2]
 80259d4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80259d8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80259dc:	fb08 f802 	mul.w	r8, r8, r2
 80259e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80259e4:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80259e8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80259ec:	435d      	muls	r5, r3
 80259ee:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80259f2:	44d0      	add	r8, sl
 80259f4:	f105 0a20 	add.w	sl, r5, #32
 80259f8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80259fc:	0a2d      	lsrs	r5, r5, #8
 80259fe:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8025a02:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025a06:	432a      	orrs	r2, r5
 8025a08:	3001      	adds	r0, #1
 8025a0a:	f100 80fe 	bmi.w	8025c0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025a0e:	4583      	cmp	fp, r0
 8025a10:	f340 80fb 	ble.w	8025c0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025a14:	f1be 0f00 	cmp.w	lr, #0
 8025a18:	f000 80fc 	beq.w	8025c14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8025a1c:	2f00      	cmp	r7, #0
 8025a1e:	f2c0 80f1 	blt.w	8025c04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025a22:	42be      	cmp	r6, r7
 8025a24:	f340 80ee 	ble.w	8025c04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025a28:	9801      	ldr	r0, [sp, #4]
 8025a2a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8025a2e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8025a32:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8025a36:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8025a3a:	fb0a fa00 	mul.w	sl, sl, r0
 8025a3e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8025a42:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8025a46:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8025a4a:	fb05 f808 	mul.w	r8, r5, r8
 8025a4e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8025a52:	4482      	add	sl, r0
 8025a54:	f108 0020 	add.w	r0, r8, #32
 8025a58:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025a5c:	0a00      	lsrs	r0, r0, #8
 8025a5e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8025a62:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025a66:	ea4b 0b00 	orr.w	fp, fp, r0
 8025a6a:	3701      	adds	r7, #1
 8025a6c:	f100 80d7 	bmi.w	8025c1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025a70:	42be      	cmp	r6, r7
 8025a72:	f340 80d4 	ble.w	8025c1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025a76:	2900      	cmp	r1, #0
 8025a78:	f000 80d4 	beq.w	8025c24 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8025a7c:	3601      	adds	r6, #1
 8025a7e:	9801      	ldr	r0, [sp, #4]
 8025a80:	f819 7006 	ldrb.w	r7, [r9, r6]
 8025a84:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8025a88:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8025a8c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8025a90:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025a94:	fb09 f906 	mul.w	r9, r9, r6
 8025a98:	fb07 f800 	mul.w	r8, r7, r0
 8025a9c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025aa0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025aa4:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025aa8:	44d1      	add	r9, sl
 8025aaa:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8025aae:	f108 0020 	add.w	r0, r8, #32
 8025ab2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025ab6:	0a00      	lsrs	r0, r0, #8
 8025ab8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025abc:	4330      	orrs	r0, r6
 8025abe:	b28e      	uxth	r6, r1
 8025ac0:	fa1f f98e 	uxth.w	r9, lr
 8025ac4:	fb06 f809 	mul.w	r8, r6, r9
 8025ac8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8025acc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025ad0:	0136      	lsls	r6, r6, #4
 8025ad2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025ad6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8025ada:	9601      	str	r6, [sp, #4]
 8025adc:	ea4a 0404 	orr.w	r4, sl, r4
 8025ae0:	fa1f f689 	uxth.w	r6, r9
 8025ae4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025ae8:	fb11 f90e 	smulbb	r9, r1, lr
 8025aec:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025af0:	9602      	str	r6, [sp, #8]
 8025af2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025af6:	4626      	mov	r6, r4
 8025af8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025afc:	f1ce 0410 	rsb	r4, lr, #16
 8025b00:	1a64      	subs	r4, r4, r1
 8025b02:	ea4a 0202 	orr.w	r2, sl, r2
 8025b06:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8025b0a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025b0e:	434a      	muls	r2, r1
 8025b10:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025b14:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025b18:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025b1c:	fb04 2406 	mla	r4, r4, r6, r2
 8025b20:	ea4a 0000 	orr.w	r0, sl, r0
 8025b24:	fb09 4200 	mla	r2, r9, r0, r4
 8025b28:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8025b2c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8025b30:	9801      	ldr	r0, [sp, #4]
 8025b32:	9903      	ldr	r1, [sp, #12]
 8025b34:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025b38:	ea44 0b0b 	orr.w	fp, r4, fp
 8025b3c:	9c02      	ldr	r4, [sp, #8]
 8025b3e:	8809      	ldrh	r1, [r1, #0]
 8025b40:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8025b44:	1b00      	subs	r0, r0, r4
 8025b46:	9c01      	ldr	r4, [sp, #4]
 8025b48:	eba4 0608 	sub.w	r6, r4, r8
 8025b4c:	b2b6      	uxth	r6, r6
 8025b4e:	b280      	uxth	r0, r0
 8025b50:	4373      	muls	r3, r6
 8025b52:	fb0c 3300 	mla	r3, ip, r0, r3
 8025b56:	9802      	ldr	r0, [sp, #8]
 8025b58:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8025b5c:	fb00 3505 	mla	r5, r0, r5, r3
 8025b60:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8025b64:	fb08 5707 	mla	r7, r8, r7, r5
 8025b68:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025b6c:	120b      	asrs	r3, r1, #8
 8025b6e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025b72:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8025b76:	b2ff      	uxtb	r7, r7
 8025b78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025b7c:	10c8      	asrs	r0, r1, #3
 8025b7e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025b82:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025b86:	00c9      	lsls	r1, r1, #3
 8025b88:	437b      	muls	r3, r7
 8025b8a:	ea42 0e0e 	orr.w	lr, r2, lr
 8025b8e:	b2c9      	uxtb	r1, r1
 8025b90:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025b94:	fa1f f28e 	uxth.w	r2, lr
 8025b98:	4378      	muls	r0, r7
 8025b9a:	434f      	muls	r7, r1
 8025b9c:	1c59      	adds	r1, r3, #1
 8025b9e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025ba2:	1213      	asrs	r3, r2, #8
 8025ba4:	f023 0307 	bic.w	r3, r3, #7
 8025ba8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8025bac:	1c41      	adds	r1, r0, #1
 8025bae:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025bb2:	10d1      	asrs	r1, r2, #3
 8025bb4:	f021 0103 	bic.w	r1, r1, #3
 8025bb8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025bbc:	021b      	lsls	r3, r3, #8
 8025bbe:	00c9      	lsls	r1, r1, #3
 8025bc0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025bc4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8025bc8:	430b      	orrs	r3, r1
 8025bca:	1c79      	adds	r1, r7, #1
 8025bcc:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8025bd0:	00d2      	lsls	r2, r2, #3
 8025bd2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8025bd6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025bda:	431a      	orrs	r2, r3
 8025bdc:	9b03      	ldr	r3, [sp, #12]
 8025bde:	801a      	strh	r2, [r3, #0]
 8025be0:	b005      	add	sp, #20
 8025be2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025be6:	f04f 0c00 	mov.w	ip, #0
 8025bea:	4664      	mov	r4, ip
 8025bec:	e6e5      	b.n	80259ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8025bee:	2300      	movs	r3, #0
 8025bf0:	469c      	mov	ip, r3
 8025bf2:	461a      	mov	r2, r3
 8025bf4:	461c      	mov	r4, r3
 8025bf6:	e707      	b.n	8025a08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025bf8:	2300      	movs	r3, #0
 8025bfa:	461a      	mov	r2, r3
 8025bfc:	e704      	b.n	8025a08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025bfe:	460b      	mov	r3, r1
 8025c00:	460a      	mov	r2, r1
 8025c02:	e701      	b.n	8025a08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025c04:	2500      	movs	r5, #0
 8025c06:	46ab      	mov	fp, r5
 8025c08:	e72f      	b.n	8025a6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8025c0a:	2700      	movs	r7, #0
 8025c0c:	463d      	mov	r5, r7
 8025c0e:	4638      	mov	r0, r7
 8025c10:	46bb      	mov	fp, r7
 8025c12:	e754      	b.n	8025abe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025c14:	4677      	mov	r7, lr
 8025c16:	4675      	mov	r5, lr
 8025c18:	4670      	mov	r0, lr
 8025c1a:	46f3      	mov	fp, lr
 8025c1c:	e74f      	b.n	8025abe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025c1e:	2700      	movs	r7, #0
 8025c20:	4638      	mov	r0, r7
 8025c22:	e74c      	b.n	8025abe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025c24:	460f      	mov	r7, r1
 8025c26:	4608      	mov	r0, r1
 8025c28:	e749      	b.n	8025abe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08025c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025c2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025c30:	b093      	sub	sp, #76	; 0x4c
 8025c32:	9210      	str	r2, [sp, #64]	; 0x40
 8025c34:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025c36:	910e      	str	r1, [sp, #56]	; 0x38
 8025c38:	9306      	str	r3, [sp, #24]
 8025c3a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025c3e:	9011      	str	r0, [sp, #68]	; 0x44
 8025c40:	6850      	ldr	r0, [r2, #4]
 8025c42:	6812      	ldr	r2, [r2, #0]
 8025c44:	fb00 1303 	mla	r3, r0, r3, r1
 8025c48:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025c4c:	9307      	str	r3, [sp, #28]
 8025c4e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025c50:	681b      	ldr	r3, [r3, #0]
 8025c52:	9308      	str	r3, [sp, #32]
 8025c54:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025c56:	685b      	ldr	r3, [r3, #4]
 8025c58:	9309      	str	r3, [sp, #36]	; 0x24
 8025c5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025c5c:	2b00      	cmp	r3, #0
 8025c5e:	dc03      	bgt.n	8025c68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8025c60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8025c62:	2b00      	cmp	r3, #0
 8025c64:	f340 83b4 	ble.w	80263d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8025c68:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025c6a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025c6e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025c72:	1e48      	subs	r0, r1, #1
 8025c74:	1e55      	subs	r5, r2, #1
 8025c76:	9b06      	ldr	r3, [sp, #24]
 8025c78:	2b00      	cmp	r3, #0
 8025c7a:	f340 8163 	ble.w	8025f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8025c7e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8025c80:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025c82:	1436      	asrs	r6, r6, #16
 8025c84:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025c88:	d406      	bmi.n	8025c98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025c8a:	4286      	cmp	r6, r0
 8025c8c:	da04      	bge.n	8025c98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025c8e:	2b00      	cmp	r3, #0
 8025c90:	db02      	blt.n	8025c98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025c92:	42ab      	cmp	r3, r5
 8025c94:	f2c0 8157 	blt.w	8025f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8025c98:	3601      	adds	r6, #1
 8025c9a:	f100 8144 	bmi.w	8025f26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025c9e:	42b1      	cmp	r1, r6
 8025ca0:	f2c0 8141 	blt.w	8025f26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025ca4:	3301      	adds	r3, #1
 8025ca6:	f100 813e 	bmi.w	8025f26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025caa:	429a      	cmp	r2, r3
 8025cac:	f2c0 813b 	blt.w	8025f26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025cb0:	9b06      	ldr	r3, [sp, #24]
 8025cb2:	9f07      	ldr	r7, [sp, #28]
 8025cb4:	930f      	str	r3, [sp, #60]	; 0x3c
 8025cb6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025cba:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8025cbc:	2b00      	cmp	r3, #0
 8025cbe:	f340 8164 	ble.w	8025f8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8025cc2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025cc4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8025cc6:	1418      	asrs	r0, r3, #16
 8025cc8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025cca:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025cce:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025cd0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8025cd4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025cd6:	142d      	asrs	r5, r5, #16
 8025cd8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8025cdc:	f100 81ee 	bmi.w	80260bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025ce0:	f102 3eff 	add.w	lr, r2, #4294967295
 8025ce4:	4575      	cmp	r5, lr
 8025ce6:	f280 81e9 	bge.w	80260bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025cea:	2800      	cmp	r0, #0
 8025cec:	f2c0 81e6 	blt.w	80260bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025cf0:	f103 3eff 	add.w	lr, r3, #4294967295
 8025cf4:	4570      	cmp	r0, lr
 8025cf6:	f280 81e1 	bge.w	80260bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025cfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025cfc:	b212      	sxth	r2, r2
 8025cfe:	fb00 5002 	mla	r0, r0, r2, r5
 8025d02:	fa1f fe81 	uxth.w	lr, r1
 8025d06:	eb03 0a00 	add.w	sl, r3, r0
 8025d0a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8025d0e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8025d12:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8025d16:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8025d1a:	b29b      	uxth	r3, r3
 8025d1c:	f1bc 0f00 	cmp.w	ip, #0
 8025d20:	f000 8179 	beq.w	8026016 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8025d24:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8025d28:	940a      	str	r4, [sp, #40]	; 0x28
 8025d2a:	eb0a 0b02 	add.w	fp, sl, r2
 8025d2e:	fa1f fa8c 	uxth.w	sl, ip
 8025d32:	fb0a fe0e 	mul.w	lr, sl, lr
 8025d36:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8025d3a:	fa1f fa8a 	uxth.w	sl, sl
 8025d3e:	eba5 050e 	sub.w	r5, r5, lr
 8025d42:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025d46:	940b      	str	r4, [sp, #44]	; 0x2c
 8025d48:	eba3 030a 	sub.w	r3, r3, sl
 8025d4c:	b2ad      	uxth	r5, r5
 8025d4e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025d50:	b29b      	uxth	r3, r3
 8025d52:	fb08 f505 	mul.w	r5, r8, r5
 8025d56:	fb09 5303 	mla	r3, r9, r3, r5
 8025d5a:	fb0a 3304 	mla	r3, sl, r4, r3
 8025d5e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025d60:	fb0e 3304 	mla	r3, lr, r4, r3
 8025d64:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025d68:	2b00      	cmp	r3, #0
 8025d6a:	f000 80cf 	beq.w	8025f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8025d6e:	9c08      	ldr	r4, [sp, #32]
 8025d70:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025d74:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025d78:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025d7c:	f000 8150 	beq.w	8026020 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8025d80:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025d84:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025d88:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025d8c:	fb09 f000 	mul.w	r0, r9, r0
 8025d90:	fb0a fe0e 	mul.w	lr, sl, lr
 8025d94:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025d98:	f100 0b20 	add.w	fp, r0, #32
 8025d9c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025da0:	44ce      	add	lr, r9
 8025da2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8025da6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025daa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025dae:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8025db2:	ea4e 0909 	orr.w	r9, lr, r9
 8025db6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025dba:	8868      	ldrh	r0, [r5, #2]
 8025dbc:	d019      	beq.n	8025df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8025dbe:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025dc2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025dc6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025dca:	fb08 f800 	mul.w	r8, r8, r0
 8025dce:	fb0a fe0e 	mul.w	lr, sl, lr
 8025dd2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8025dd6:	f108 0b20 	add.w	fp, r8, #32
 8025dda:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025dde:	4486      	add	lr, r0
 8025de0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8025de4:	0a00      	lsrs	r0, r0, #8
 8025de6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025dea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025dee:	ea4e 0000 	orr.w	r0, lr, r0
 8025df2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8025df6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025dfa:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8025dfe:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025e02:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025e06:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025e0a:	ea4e 0909 	orr.w	r9, lr, r9
 8025e0e:	ea4a 0000 	orr.w	r0, sl, r0
 8025e12:	f1bc 0f00 	cmp.w	ip, #0
 8025e16:	f000 8105 	beq.w	8026024 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8025e1a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8025e1e:	3a01      	subs	r2, #1
 8025e20:	0052      	lsls	r2, r2, #1
 8025e22:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025e24:	3202      	adds	r2, #2
 8025e26:	2cff      	cmp	r4, #255	; 0xff
 8025e28:	eb05 0e02 	add.w	lr, r5, r2
 8025e2c:	5aaa      	ldrh	r2, [r5, r2]
 8025e2e:	d018      	beq.n	8025e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8025e30:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8025e34:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025e38:	fb04 fa02 	mul.w	sl, r4, r2
 8025e3c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025e40:	fb08 f805 	mul.w	r8, r8, r5
 8025e44:	f10a 0520 	add.w	r5, sl, #32
 8025e48:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8025e4c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8025e50:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025e54:	4442      	add	r2, r8
 8025e56:	0a2d      	lsrs	r5, r5, #8
 8025e58:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8025e5c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025e60:	432a      	orrs	r2, r5
 8025e62:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025e64:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025e68:	2cff      	cmp	r4, #255	; 0xff
 8025e6a:	d01a      	beq.n	8025ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8025e6c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8025e70:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025e74:	fb04 fa05 	mul.w	sl, r4, r5
 8025e78:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025e7c:	fb08 f80e 	mul.w	r8, r8, lr
 8025e80:	f10a 0e20 	add.w	lr, sl, #32
 8025e84:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8025e88:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8025e8c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025e90:	4445      	add	r5, r8
 8025e92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025e96:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8025e9a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025e9e:	ea45 050e 	orr.w	r5, r5, lr
 8025ea2:	fb1c fe01 	smulbb	lr, ip, r1
 8025ea6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8025eaa:	f1cc 0810 	rsb	r8, ip, #16
 8025eae:	eba8 0801 	sub.w	r8, r8, r1
 8025eb2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025eb6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8025eba:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8025ebe:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8025ec2:	4341      	muls	r1, r0
 8025ec4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025ec8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025ecc:	ea4a 0202 	orr.w	r2, sl, r2
 8025ed0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8025ed4:	fb09 1108 	mla	r1, r9, r8, r1
 8025ed8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025edc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8025ee0:	fb0c 1102 	mla	r1, ip, r2, r1
 8025ee4:	ea4b 0505 	orr.w	r5, fp, r5
 8025ee8:	fb0e 1e05 	mla	lr, lr, r5, r1
 8025eec:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025ef0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025ef4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025ef8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025efc:	ea42 0e0e 	orr.w	lr, r2, lr
 8025f00:	fa1f f28e 	uxth.w	r2, lr
 8025f04:	2bff      	cmp	r3, #255	; 0xff
 8025f06:	f040 80a1 	bne.w	802604c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8025f0a:	803a      	strh	r2, [r7, #0]
 8025f0c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025f0e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8025f10:	4413      	add	r3, r2
 8025f12:	931d      	str	r3, [sp, #116]	; 0x74
 8025f14:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8025f16:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025f18:	441a      	add	r2, r3
 8025f1a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8025f1c:	921e      	str	r2, [sp, #120]	; 0x78
 8025f1e:	3b01      	subs	r3, #1
 8025f20:	3702      	adds	r7, #2
 8025f22:	930f      	str	r3, [sp, #60]	; 0x3c
 8025f24:	e6c9      	b.n	8025cba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025f26:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025f28:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8025f2a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8025f2c:	4433      	add	r3, r6
 8025f2e:	931d      	str	r3, [sp, #116]	; 0x74
 8025f30:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025f32:	441c      	add	r4, r3
 8025f34:	9b06      	ldr	r3, [sp, #24]
 8025f36:	941e      	str	r4, [sp, #120]	; 0x78
 8025f38:	3b01      	subs	r3, #1
 8025f3a:	9306      	str	r3, [sp, #24]
 8025f3c:	9b07      	ldr	r3, [sp, #28]
 8025f3e:	3302      	adds	r3, #2
 8025f40:	9307      	str	r3, [sp, #28]
 8025f42:	e698      	b.n	8025c76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8025f44:	d028      	beq.n	8025f98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025f46:	9b06      	ldr	r3, [sp, #24]
 8025f48:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8025f4a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8025f4c:	3b01      	subs	r3, #1
 8025f4e:	fb00 5003 	mla	r0, r0, r3, r5
 8025f52:	1400      	asrs	r0, r0, #16
 8025f54:	f53f aeac 	bmi.w	8025cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8025f58:	3901      	subs	r1, #1
 8025f5a:	4288      	cmp	r0, r1
 8025f5c:	f6bf aea8 	bge.w	8025cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8025f60:	9920      	ldr	r1, [sp, #128]	; 0x80
 8025f62:	981e      	ldr	r0, [sp, #120]	; 0x78
 8025f64:	fb01 0303 	mla	r3, r1, r3, r0
 8025f68:	141b      	asrs	r3, r3, #16
 8025f6a:	f53f aea1 	bmi.w	8025cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8025f6e:	3a01      	subs	r2, #1
 8025f70:	4293      	cmp	r3, r2
 8025f72:	f6bf ae9d 	bge.w	8025cb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8025f76:	9b06      	ldr	r3, [sp, #24]
 8025f78:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8025f7c:	930f      	str	r3, [sp, #60]	; 0x3c
 8025f7e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025f82:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8025f84:	2b00      	cmp	r3, #0
 8025f86:	f300 80b6 	bgt.w	80260f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8025f8a:	9b06      	ldr	r3, [sp, #24]
 8025f8c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8025f90:	9b07      	ldr	r3, [sp, #28]
 8025f92:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8025f96:	9307      	str	r3, [sp, #28]
 8025f98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025f9a:	2b00      	cmp	r3, #0
 8025f9c:	f340 8218 	ble.w	80263d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8025fa0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025fa4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025fa8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025fac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025fae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025fb2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025fb6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025fba:	eef0 6a62 	vmov.f32	s13, s5
 8025fbe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025fc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025fc6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025fca:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8025fce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025fd2:	eef0 6a43 	vmov.f32	s13, s6
 8025fd6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025fda:	ee12 2a90 	vmov	r2, s5
 8025fde:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025fe2:	fb92 f3f3 	sdiv	r3, r2, r3
 8025fe6:	ee13 2a10 	vmov	r2, s6
 8025fea:	931f      	str	r3, [sp, #124]	; 0x7c
 8025fec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025fee:	fb92 f3f3 	sdiv	r3, r2, r3
 8025ff2:	9320      	str	r3, [sp, #128]	; 0x80
 8025ff4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025ff6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025ff8:	3b01      	subs	r3, #1
 8025ffa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025ffe:	930e      	str	r3, [sp, #56]	; 0x38
 8026000:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026002:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8026006:	bf08      	it	eq
 8026008:	4613      	moveq	r3, r2
 802600a:	9306      	str	r3, [sp, #24]
 802600c:	eeb0 3a67 	vmov.f32	s6, s15
 8026010:	eef0 2a47 	vmov.f32	s5, s14
 8026014:	e621      	b.n	8025c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8026016:	fb08 f505 	mul.w	r5, r8, r5
 802601a:	fb09 5303 	mla	r3, r9, r3, r5
 802601e:	e6a1      	b.n	8025d64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8026020:	4681      	mov	r9, r0
 8026022:	e6c8      	b.n	8025db6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8026024:	f1c1 0210 	rsb	r2, r1, #16
 8026028:	4341      	muls	r1, r0
 802602a:	fb09 1902 	mla	r9, r9, r2, r1
 802602e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8026032:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8026036:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802603a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802603e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8026042:	ea42 0909 	orr.w	r9, r2, r9
 8026046:	fa1f f289 	uxth.w	r2, r9
 802604a:	e75b      	b.n	8025f04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802604c:	f8b7 c000 	ldrh.w	ip, [r7]
 8026050:	43db      	mvns	r3, r3
 8026052:	ea4f 202c 	mov.w	r0, ip, asr #8
 8026056:	fa5f fe83 	uxtb.w	lr, r3
 802605a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802605e:	fb00 f00e 	mul.w	r0, r0, lr
 8026062:	1c41      	adds	r1, r0, #1
 8026064:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8026068:	1211      	asrs	r1, r2, #8
 802606a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802606e:	f021 0107 	bic.w	r1, r1, #7
 8026072:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026076:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802607a:	48d7      	ldr	r0, [pc, #860]	; (80263d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802607c:	fb05 f50e 	mul.w	r5, r5, lr
 8026080:	b2c9      	uxtb	r1, r1
 8026082:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8026086:	1c69      	adds	r1, r5, #1
 8026088:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802608c:	10d1      	asrs	r1, r2, #3
 802608e:	f021 0103 	bic.w	r1, r1, #3
 8026092:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8026096:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802609a:	b2db      	uxtb	r3, r3
 802609c:	00c9      	lsls	r1, r1, #3
 802609e:	fb03 f30e 	mul.w	r3, r3, lr
 80260a2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80260a6:	4301      	orrs	r1, r0
 80260a8:	1c58      	adds	r0, r3, #1
 80260aa:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80260ae:	00d2      	lsls	r2, r2, #3
 80260b0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80260b4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80260b8:	430a      	orrs	r2, r1
 80260ba:	e726      	b.n	8025f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80260bc:	f115 0e01 	adds.w	lr, r5, #1
 80260c0:	f53f af24 	bmi.w	8025f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80260c4:	4572      	cmp	r2, lr
 80260c6:	f6ff af21 	blt.w	8025f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80260ca:	f110 0e01 	adds.w	lr, r0, #1
 80260ce:	f53f af1d 	bmi.w	8025f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80260d2:	4573      	cmp	r3, lr
 80260d4:	f6ff af1a 	blt.w	8025f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80260d8:	b21b      	sxth	r3, r3
 80260da:	b212      	sxth	r2, r2
 80260dc:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80260e0:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80260e4:	9301      	str	r3, [sp, #4]
 80260e6:	9200      	str	r2, [sp, #0]
 80260e8:	4639      	mov	r1, r7
 80260ea:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80260ee:	9811      	ldr	r0, [sp, #68]	; 0x44
 80260f0:	f7ff fc24 	bl	802593c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80260f4:	e70a      	b.n	8025f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80260f6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80260f8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80260fc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80260fe:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8026102:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026104:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026108:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802610a:	141f      	asrs	r7, r3, #16
 802610c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802610e:	141b      	asrs	r3, r3, #16
 8026110:	fb01 3707 	mla	r7, r1, r7, r3
 8026114:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026116:	fa1f fc82 	uxth.w	ip, r2
 802611a:	eb03 0a07 	add.w	sl, r3, r7
 802611e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8026122:	f813 9007 	ldrb.w	r9, [r3, r7]
 8026126:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802612a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802612e:	b29b      	uxth	r3, r3
 8026130:	2d00      	cmp	r5, #0
 8026132:	f000 80fe 	beq.w	8026332 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8026136:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802613a:	940c      	str	r4, [sp, #48]	; 0x30
 802613c:	eb0a 0b01 	add.w	fp, sl, r1
 8026140:	fa1f fa85 	uxth.w	sl, r5
 8026144:	fb0a fc0c 	mul.w	ip, sl, ip
 8026148:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802614c:	fa1f fa8a 	uxth.w	sl, sl
 8026150:	eba0 000c 	sub.w	r0, r0, ip
 8026154:	eba3 030a 	sub.w	r3, r3, sl
 8026158:	b280      	uxth	r0, r0
 802615a:	fb08 f000 	mul.w	r0, r8, r0
 802615e:	b29b      	uxth	r3, r3
 8026160:	fb09 0303 	mla	r3, r9, r3, r0
 8026164:	980c      	ldr	r0, [sp, #48]	; 0x30
 8026166:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802616a:	940d      	str	r4, [sp, #52]	; 0x34
 802616c:	fb0a 3300 	mla	r3, sl, r0, r3
 8026170:	fb0c 3304 	mla	r3, ip, r4, r3
 8026174:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026178:	2b00      	cmp	r3, #0
 802617a:	f000 80cc 	beq.w	8026316 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802617e:	9808      	ldr	r0, [sp, #32]
 8026180:	9c08      	ldr	r4, [sp, #32]
 8026182:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8026186:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802618a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802618e:	f000 80d5 	beq.w	802633c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8026192:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8026196:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802619a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802619e:	fb09 f707 	mul.w	r7, r9, r7
 80261a2:	fb0a fc0c 	mul.w	ip, sl, ip
 80261a6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80261aa:	f107 0b20 	add.w	fp, r7, #32
 80261ae:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80261b2:	44cc      	add	ip, r9
 80261b4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80261b8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80261bc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80261c0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80261c4:	ea4c 0909 	orr.w	r9, ip, r9
 80261c8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80261cc:	8847      	ldrh	r7, [r0, #2]
 80261ce:	d019      	beq.n	8026204 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80261d0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80261d4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80261d8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80261dc:	fb08 f807 	mul.w	r8, r8, r7
 80261e0:	fb0a fc0c 	mul.w	ip, sl, ip
 80261e4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80261e8:	f108 0b20 	add.w	fp, r8, #32
 80261ec:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80261f0:	44bc      	add	ip, r7
 80261f2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80261f6:	0a3f      	lsrs	r7, r7, #8
 80261f8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80261fc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026200:	ea4c 0707 	orr.w	r7, ip, r7
 8026204:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8026208:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802620c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8026210:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8026214:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026218:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802621c:	ea4c 0909 	orr.w	r9, ip, r9
 8026220:	ea4a 0707 	orr.w	r7, sl, r7
 8026224:	2d00      	cmp	r5, #0
 8026226:	f000 808b 	beq.w	8026340 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802622a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802622e:	3901      	subs	r1, #1
 8026230:	0049      	lsls	r1, r1, #1
 8026232:	3102      	adds	r1, #2
 8026234:	eb00 0c01 	add.w	ip, r0, r1
 8026238:	5a41      	ldrh	r1, [r0, r1]
 802623a:	980c      	ldr	r0, [sp, #48]	; 0x30
 802623c:	28ff      	cmp	r0, #255	; 0xff
 802623e:	d019      	beq.n	8026274 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8026240:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8026242:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8026246:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802624a:	fb04 fa01 	mul.w	sl, r4, r1
 802624e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8026252:	fb08 f800 	mul.w	r8, r8, r0
 8026256:	f10a 0020 	add.w	r0, sl, #32
 802625a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802625e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8026262:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026266:	4441      	add	r1, r8
 8026268:	0a00      	lsrs	r0, r0, #8
 802626a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802626e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026272:	4301      	orrs	r1, r0
 8026274:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8026276:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802627a:	2cff      	cmp	r4, #255	; 0xff
 802627c:	d01a      	beq.n	80262b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802627e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8026282:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026286:	fb04 fa00 	mul.w	sl, r4, r0
 802628a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802628e:	fb08 f80c 	mul.w	r8, r8, ip
 8026292:	f10a 0c20 	add.w	ip, sl, #32
 8026296:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802629a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802629e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80262a2:	4440      	add	r0, r8
 80262a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80262a8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80262ac:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80262b0:	ea40 000c 	orr.w	r0, r0, ip
 80262b4:	fb15 fc02 	smulbb	ip, r5, r2
 80262b8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80262bc:	f1c5 0810 	rsb	r8, r5, #16
 80262c0:	eba8 0802 	sub.w	r8, r8, r2
 80262c4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80262c8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80262cc:	437a      	muls	r2, r7
 80262ce:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80262d2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80262d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80262da:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80262de:	fb09 2208 	mla	r2, r9, r8, r2
 80262e2:	ea4a 0101 	orr.w	r1, sl, r1
 80262e6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80262ea:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80262ee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80262f2:	fb05 2201 	mla	r2, r5, r1, r2
 80262f6:	ea4b 0000 	orr.w	r0, fp, r0
 80262fa:	fb0c 2200 	mla	r2, ip, r0, r2
 80262fe:	0d57      	lsrs	r7, r2, #21
 8026300:	0952      	lsrs	r2, r2, #5
 8026302:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026306:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802630a:	433a      	orrs	r2, r7
 802630c:	2bff      	cmp	r3, #255	; 0xff
 802630e:	b292      	uxth	r2, r2
 8026310:	d127      	bne.n	8026362 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8026312:	f8ae 2000 	strh.w	r2, [lr]
 8026316:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026318:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802631a:	4413      	add	r3, r2
 802631c:	931d      	str	r3, [sp, #116]	; 0x74
 802631e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8026320:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026322:	441a      	add	r2, r3
 8026324:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026326:	921e      	str	r2, [sp, #120]	; 0x78
 8026328:	3b01      	subs	r3, #1
 802632a:	f10e 0e02 	add.w	lr, lr, #2
 802632e:	930f      	str	r3, [sp, #60]	; 0x3c
 8026330:	e627      	b.n	8025f82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026332:	fb08 f000 	mul.w	r0, r8, r0
 8026336:	fb09 0303 	mla	r3, r9, r3, r0
 802633a:	e71b      	b.n	8026174 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802633c:	46b9      	mov	r9, r7
 802633e:	e743      	b.n	80261c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8026340:	f1c2 0110 	rsb	r1, r2, #16
 8026344:	437a      	muls	r2, r7
 8026346:	fb09 2901 	mla	r9, r9, r1, r2
 802634a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802634e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8026352:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8026356:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802635a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802635e:	4302      	orrs	r2, r0
 8026360:	e7d4      	b.n	802630c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8026362:	f8be 7000 	ldrh.w	r7, [lr]
 8026366:	4c1c      	ldr	r4, [pc, #112]	; (80263d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8026368:	43db      	mvns	r3, r3
 802636a:	1238      	asrs	r0, r7, #8
 802636c:	fa5f fc83 	uxtb.w	ip, r3
 8026370:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026374:	10fd      	asrs	r5, r7, #3
 8026376:	fb00 f00c 	mul.w	r0, r0, ip
 802637a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802637e:	fb05 f10c 	mul.w	r1, r5, ip
 8026382:	1c45      	adds	r5, r0, #1
 8026384:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8026388:	1215      	asrs	r5, r2, #8
 802638a:	f025 0507 	bic.w	r5, r5, #7
 802638e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8026392:	1c4d      	adds	r5, r1, #1
 8026394:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8026398:	10d1      	asrs	r1, r2, #3
 802639a:	f021 0103 	bic.w	r1, r1, #3
 802639e:	00fb      	lsls	r3, r7, #3
 80263a0:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80263a4:	b2db      	uxtb	r3, r3
 80263a6:	b2c0      	uxtb	r0, r0
 80263a8:	00c9      	lsls	r1, r1, #3
 80263aa:	fb03 f30c 	mul.w	r3, r3, ip
 80263ae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80263b2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80263b6:	4308      	orrs	r0, r1
 80263b8:	1c59      	adds	r1, r3, #1
 80263ba:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80263be:	00d2      	lsls	r2, r2, #3
 80263c0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80263c4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80263c8:	4318      	orrs	r0, r3
 80263ca:	f8ae 0000 	strh.w	r0, [lr]
 80263ce:	e7a2      	b.n	8026316 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80263d0:	b013      	add	sp, #76	; 0x4c
 80263d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80263d6:	bf00      	nop
 80263d8:	fffff800 	.word	0xfffff800

080263dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80263dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80263e0:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 80263e4:	fb05 4c03 	mla	ip, r5, r3, r4
 80263e8:	2d00      	cmp	r5, #0
 80263ea:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80263ee:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80263f2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80263f6:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80263fa:	8808      	ldrh	r0, [r1, #0]
 80263fc:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8026400:	f2c0 80a7 	blt.w	8026552 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8026404:	45aa      	cmp	sl, r5
 8026406:	f340 80a4 	ble.w	8026552 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802640a:	2c00      	cmp	r4, #0
 802640c:	f2c0 809f 	blt.w	802654e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8026410:	42a3      	cmp	r3, r4
 8026412:	f340 809c 	ble.w	802654e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8026416:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802641a:	1c62      	adds	r2, r4, #1
 802641c:	f100 809c 	bmi.w	8026558 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8026420:	4293      	cmp	r3, r2
 8026422:	f340 8099 	ble.w	8026558 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8026426:	f1b9 0f00 	cmp.w	r9, #0
 802642a:	f000 8095 	beq.w	8026558 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802642e:	f8be c002 	ldrh.w	ip, [lr, #2]
 8026432:	3501      	adds	r5, #1
 8026434:	f100 8094 	bmi.w	8026560 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8026438:	45aa      	cmp	sl, r5
 802643a:	f340 8091 	ble.w	8026560 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802643e:	2f00      	cmp	r7, #0
 8026440:	f000 808e 	beq.w	8026560 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8026444:	2c00      	cmp	r4, #0
 8026446:	f2c0 8089 	blt.w	802655c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802644a:	42a3      	cmp	r3, r4
 802644c:	f340 8086 	ble.w	802655c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8026450:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8026454:	3401      	adds	r4, #1
 8026456:	f100 8086 	bmi.w	8026566 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802645a:	42a3      	cmp	r3, r4
 802645c:	f340 8083 	ble.w	8026566 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8026460:	f1b9 0f00 	cmp.w	r9, #0
 8026464:	d07f      	beq.n	8026566 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8026466:	3301      	adds	r3, #1
 8026468:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 802646c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8026470:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026474:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8026478:	fb19 fe07 	smulbb	lr, r9, r7
 802647c:	ea44 0808 	orr.w	r8, r4, r8
 8026480:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8026484:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8026488:	f1c7 0210 	rsb	r2, r7, #16
 802648c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026490:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026494:	ea44 0c0c 	orr.w	ip, r4, ip
 8026498:	eba2 0209 	sub.w	r2, r2, r9
 802649c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80264a0:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80264a4:	fb04 f40c 	mul.w	r4, r4, ip
 80264a8:	fb02 4808 	mla	r8, r2, r8, r4
 80264ac:	041a      	lsls	r2, r3, #16
 80264ae:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80264b2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80264b6:	4313      	orrs	r3, r2
 80264b8:	042a      	lsls	r2, r5, #16
 80264ba:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80264be:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80264c2:	fb0e 8303 	mla	r3, lr, r3, r8
 80264c6:	432a      	orrs	r2, r5
 80264c8:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80264cc:	fb07 3202 	mla	r2, r7, r2, r3
 80264d0:	0d53      	lsrs	r3, r2, #21
 80264d2:	0952      	lsrs	r2, r2, #5
 80264d4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80264d8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80264dc:	431a      	orrs	r2, r3
 80264de:	b293      	uxth	r3, r2
 80264e0:	b2b4      	uxth	r4, r6
 80264e2:	1202      	asrs	r2, r0, #8
 80264e4:	43f6      	mvns	r6, r6
 80264e6:	b2f6      	uxtb	r6, r6
 80264e8:	121d      	asrs	r5, r3, #8
 80264ea:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80264ee:	fb12 f206 	smulbb	r2, r2, r6
 80264f2:	10c7      	asrs	r7, r0, #3
 80264f4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80264f8:	00c0      	lsls	r0, r0, #3
 80264fa:	fb05 2504 	mla	r5, r5, r4, r2
 80264fe:	b2c0      	uxtb	r0, r0
 8026500:	10da      	asrs	r2, r3, #3
 8026502:	00db      	lsls	r3, r3, #3
 8026504:	b2db      	uxtb	r3, r3
 8026506:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802650a:	fb10 f006 	smulbb	r0, r0, r6
 802650e:	b2ad      	uxth	r5, r5
 8026510:	fb03 0004 	mla	r0, r3, r4, r0
 8026514:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026518:	fb17 f706 	smulbb	r7, r7, r6
 802651c:	b280      	uxth	r0, r0
 802651e:	1c6b      	adds	r3, r5, #1
 8026520:	fb02 7204 	mla	r2, r2, r4, r7
 8026524:	b292      	uxth	r2, r2
 8026526:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802652a:	1c43      	adds	r3, r0, #1
 802652c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8026530:	1c50      	adds	r0, r2, #1
 8026532:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8026536:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802653a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802653e:	0952      	lsrs	r2, r2, #5
 8026540:	432b      	orrs	r3, r5
 8026542:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026546:	4313      	orrs	r3, r2
 8026548:	800b      	strh	r3, [r1, #0]
 802654a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802654e:	4680      	mov	r8, r0
 8026550:	e763      	b.n	802641a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8026552:	4684      	mov	ip, r0
 8026554:	4680      	mov	r8, r0
 8026556:	e76c      	b.n	8026432 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8026558:	4684      	mov	ip, r0
 802655a:	e76a      	b.n	8026432 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802655c:	4605      	mov	r5, r0
 802655e:	e779      	b.n	8026454 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8026560:	4603      	mov	r3, r0
 8026562:	4605      	mov	r5, r0
 8026564:	e782      	b.n	802646c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8026566:	4603      	mov	r3, r0
 8026568:	e780      	b.n	802646c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802656a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802656a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802656e:	b093      	sub	sp, #76	; 0x4c
 8026570:	461d      	mov	r5, r3
 8026572:	9210      	str	r2, [sp, #64]	; 0x40
 8026574:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8026576:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802657a:	920b      	str	r2, [sp, #44]	; 0x2c
 802657c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8026580:	910a      	str	r1, [sp, #40]	; 0x28
 8026582:	6859      	ldr	r1, [r3, #4]
 8026584:	681b      	ldr	r3, [r3, #0]
 8026586:	9011      	str	r0, [sp, #68]	; 0x44
 8026588:	fb01 2707 	mla	r7, r1, r7, r2
 802658c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8026590:	9307      	str	r3, [sp, #28]
 8026592:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026594:	681b      	ldr	r3, [r3, #0]
 8026596:	9309      	str	r3, [sp, #36]	; 0x24
 8026598:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802659a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802659e:	43db      	mvns	r3, r3
 80265a0:	b2db      	uxtb	r3, r3
 80265a2:	9308      	str	r3, [sp, #32]
 80265a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80265a6:	2b00      	cmp	r3, #0
 80265a8:	dc03      	bgt.n	80265b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80265aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80265ac:	2b00      	cmp	r3, #0
 80265ae:	f340 8203 	ble.w	80269b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80265b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80265b4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80265b8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80265bc:	1e48      	subs	r0, r1, #1
 80265be:	f102 3cff 	add.w	ip, r2, #4294967295
 80265c2:	2d00      	cmp	r5, #0
 80265c4:	f340 80da 	ble.w	802677c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80265c8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80265cc:	ea4f 4326 	mov.w	r3, r6, asr #16
 80265d0:	d406      	bmi.n	80265e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80265d2:	4586      	cmp	lr, r0
 80265d4:	da04      	bge.n	80265e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80265d6:	2b00      	cmp	r3, #0
 80265d8:	db02      	blt.n	80265e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80265da:	4563      	cmp	r3, ip
 80265dc:	f2c0 80cf 	blt.w	802677e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80265e0:	f11e 0e01 	adds.w	lr, lr, #1
 80265e4:	f100 80c1 	bmi.w	802676a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80265e8:	4571      	cmp	r1, lr
 80265ea:	f2c0 80be 	blt.w	802676a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80265ee:	3301      	adds	r3, #1
 80265f0:	f100 80bb 	bmi.w	802676a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80265f4:	429a      	cmp	r2, r3
 80265f6:	f2c0 80b8 	blt.w	802676a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80265fa:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80265fe:	46a9      	mov	r9, r5
 8026600:	f1b9 0f00 	cmp.w	r9, #0
 8026604:	f340 80d8 	ble.w	80267b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8026608:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802660a:	1421      	asrs	r1, r4, #16
 802660c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026610:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026614:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026618:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802661c:	f100 8111 	bmi.w	8026842 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026620:	f10e 3aff 	add.w	sl, lr, #4294967295
 8026624:	4551      	cmp	r1, sl
 8026626:	f280 810c 	bge.w	8026842 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802662a:	2800      	cmp	r0, #0
 802662c:	f2c0 8109 	blt.w	8026842 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8026630:	f103 3aff 	add.w	sl, r3, #4294967295
 8026634:	4550      	cmp	r0, sl
 8026636:	f280 8104 	bge.w	8026842 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802663a:	fa0f f38e 	sxth.w	r3, lr
 802663e:	fb00 1103 	mla	r1, r0, r3, r1
 8026642:	9809      	ldr	r0, [sp, #36]	; 0x24
 8026644:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8026648:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 802664c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8026650:	f1bc 0f00 	cmp.w	ip, #0
 8026654:	d007      	beq.n	8026666 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8026656:	005b      	lsls	r3, r3, #1
 8026658:	eb0a 0003 	add.w	r0, sl, r3
 802665c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8026660:	930c      	str	r3, [sp, #48]	; 0x30
 8026662:	8843      	ldrh	r3, [r0, #2]
 8026664:	930d      	str	r3, [sp, #52]	; 0x34
 8026666:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802666a:	fb12 f30c 	smulbb	r3, r2, ip
 802666e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8026672:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026676:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802667a:	10db      	asrs	r3, r3, #3
 802667c:	ea40 000e 	orr.w	r0, r0, lr
 8026680:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026684:	f1cc 0e10 	rsb	lr, ip, #16
 8026688:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802668c:	ebae 0e02 	sub.w	lr, lr, r2
 8026690:	ea4a 0101 	orr.w	r1, sl, r1
 8026694:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026698:	4351      	muls	r1, r2
 802669a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802669c:	9f08      	ldr	r7, [sp, #32]
 802669e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80266a2:	fb0e 1e00 	mla	lr, lr, r0, r1
 80266a6:	0410      	lsls	r0, r2, #16
 80266a8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80266ac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80266b0:	4310      	orrs	r0, r2
 80266b2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80266b4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80266b6:	0412      	lsls	r2, r2, #16
 80266b8:	fb03 e000 	mla	r0, r3, r0, lr
 80266bc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80266c0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80266c4:	ea42 020e 	orr.w	r2, r2, lr
 80266c8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80266cc:	fb03 0302 	mla	r3, r3, r2, r0
 80266d0:	0d5a      	lsrs	r2, r3, #21
 80266d2:	095b      	lsrs	r3, r3, #5
 80266d4:	f8b8 0000 	ldrh.w	r0, [r8]
 80266d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80266dc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80266e0:	4313      	orrs	r3, r2
 80266e2:	b29b      	uxth	r3, r3
 80266e4:	1201      	asrs	r1, r0, #8
 80266e6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80266ea:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80266ee:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80266f2:	fb11 f107 	smulbb	r1, r1, r7
 80266f6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80266fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80266fe:	00c0      	lsls	r0, r0, #3
 8026700:	fb0c 1c02 	mla	ip, ip, r2, r1
 8026704:	b2c0      	uxtb	r0, r0
 8026706:	10d9      	asrs	r1, r3, #3
 8026708:	00db      	lsls	r3, r3, #3
 802670a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802670e:	b2db      	uxtb	r3, r3
 8026710:	fb10 f007 	smulbb	r0, r0, r7
 8026714:	fa1f fc8c 	uxth.w	ip, ip
 8026718:	fb03 0302 	mla	r3, r3, r2, r0
 802671c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026720:	fb1e fe07 	smulbb	lr, lr, r7
 8026724:	fb01 e102 	mla	r1, r1, r2, lr
 8026728:	b29a      	uxth	r2, r3
 802672a:	f10c 0301 	add.w	r3, ip, #1
 802672e:	b289      	uxth	r1, r1
 8026730:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8026734:	1c53      	adds	r3, r2, #1
 8026736:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802673a:	1c4a      	adds	r2, r1, #1
 802673c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8026740:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8026744:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026748:	0949      	lsrs	r1, r1, #5
 802674a:	ea43 030c 	orr.w	r3, r3, ip
 802674e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026752:	430b      	orrs	r3, r1
 8026754:	f8a8 3000 	strh.w	r3, [r8]
 8026758:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802675a:	441c      	add	r4, r3
 802675c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802675e:	f108 0802 	add.w	r8, r8, #2
 8026762:	441e      	add	r6, r3
 8026764:	f109 39ff 	add.w	r9, r9, #4294967295
 8026768:	e74a      	b.n	8026600 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802676a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802676c:	441c      	add	r4, r3
 802676e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026770:	441e      	add	r6, r3
 8026772:	9b07      	ldr	r3, [sp, #28]
 8026774:	3302      	adds	r3, #2
 8026776:	3d01      	subs	r5, #1
 8026778:	9307      	str	r3, [sp, #28]
 802677a:	e722      	b.n	80265c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802677c:	d022      	beq.n	80267c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802677e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026780:	1e6b      	subs	r3, r5, #1
 8026782:	fb00 4003 	mla	r0, r0, r3, r4
 8026786:	1400      	asrs	r0, r0, #16
 8026788:	f53f af37 	bmi.w	80265fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802678c:	3901      	subs	r1, #1
 802678e:	4288      	cmp	r0, r1
 8026790:	f6bf af33 	bge.w	80265fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026794:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026796:	fb01 6303 	mla	r3, r1, r3, r6
 802679a:	141b      	asrs	r3, r3, #16
 802679c:	f53f af2d 	bmi.w	80265fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80267a0:	3a01      	subs	r2, #1
 80267a2:	4293      	cmp	r3, r2
 80267a4:	f6bf af29 	bge.w	80265fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80267a8:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80267ac:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 80267b0:	46a8      	mov	r8, r5
 80267b2:	f1b8 0f00 	cmp.w	r8, #0
 80267b6:	dc5e      	bgt.n	8026876 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80267b8:	9b07      	ldr	r3, [sp, #28]
 80267ba:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80267be:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80267c2:	9307      	str	r3, [sp, #28]
 80267c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80267c6:	2b00      	cmp	r3, #0
 80267c8:	f340 80f6 	ble.w	80269b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80267cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80267d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80267d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80267d8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80267da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80267de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80267e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80267e6:	eef0 6a62 	vmov.f32	s13, s5
 80267ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80267ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80267f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80267f6:	ee16 4a90 	vmov	r4, s13
 80267fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80267fe:	eef0 6a43 	vmov.f32	s13, s6
 8026802:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026806:	ee12 2a90 	vmov	r2, s5
 802680a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802680e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026812:	ee13 2a10 	vmov	r2, s6
 8026816:	931f      	str	r3, [sp, #124]	; 0x7c
 8026818:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802681a:	fb92 f3f3 	sdiv	r3, r2, r3
 802681e:	9320      	str	r3, [sp, #128]	; 0x80
 8026820:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026822:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026824:	3b01      	subs	r3, #1
 8026826:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802682a:	930a      	str	r3, [sp, #40]	; 0x28
 802682c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802682e:	ee16 6a90 	vmov	r6, s13
 8026832:	bf14      	ite	ne
 8026834:	461d      	movne	r5, r3
 8026836:	4615      	moveq	r5, r2
 8026838:	eeb0 3a67 	vmov.f32	s6, s15
 802683c:	eef0 2a47 	vmov.f32	s5, s14
 8026840:	e6b0      	b.n	80265a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026842:	f111 0a01 	adds.w	sl, r1, #1
 8026846:	d487      	bmi.n	8026758 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026848:	45d6      	cmp	lr, sl
 802684a:	db85      	blt.n	8026758 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802684c:	f110 0a01 	adds.w	sl, r0, #1
 8026850:	d482      	bmi.n	8026758 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026852:	4553      	cmp	r3, sl
 8026854:	db80      	blt.n	8026758 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026856:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8026858:	9101      	str	r1, [sp, #4]
 802685a:	b21b      	sxth	r3, r3
 802685c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8026860:	9300      	str	r3, [sp, #0]
 8026862:	e9cd c704 	strd	ip, r7, [sp, #16]
 8026866:	fa0f f38e 	sxth.w	r3, lr
 802686a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802686c:	9811      	ldr	r0, [sp, #68]	; 0x44
 802686e:	4641      	mov	r1, r8
 8026870:	f7ff fdb4 	bl	80263dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8026874:	e770      	b.n	8026758 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8026876:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026878:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802687a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802687e:	1430      	asrs	r0, r6, #16
 8026880:	1423      	asrs	r3, r4, #16
 8026882:	fb01 3000 	mla	r0, r1, r0, r3
 8026886:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026888:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 802688c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8026890:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026894:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026898:	8858      	ldrh	r0, [r3, #2]
 802689a:	f1be 0f00 	cmp.w	lr, #0
 802689e:	d00b      	beq.n	80268b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 80268a0:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80268a4:	3901      	subs	r1, #1
 80268a6:	0049      	lsls	r1, r1, #1
 80268a8:	3102      	adds	r1, #2
 80268aa:	eb03 0b01 	add.w	fp, r3, r1
 80268ae:	5a5b      	ldrh	r3, [r3, r1]
 80268b0:	930e      	str	r3, [sp, #56]	; 0x38
 80268b2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80268b6:	930f      	str	r3, [sp, #60]	; 0x3c
 80268b8:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80268bc:	fb12 f30e 	smulbb	r3, r2, lr
 80268c0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80268c4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80268c8:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 80268cc:	10db      	asrs	r3, r3, #3
 80268ce:	ea41 010c 	orr.w	r1, r1, ip
 80268d2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80268d6:	f1ce 0c10 	rsb	ip, lr, #16
 80268da:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80268de:	ebac 0c02 	sub.w	ip, ip, r2
 80268e2:	ea4b 0000 	orr.w	r0, fp, r0
 80268e6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80268ea:	4350      	muls	r0, r2
 80268ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80268ee:	9f08      	ldr	r7, [sp, #32]
 80268f0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80268f4:	fb0c 0c01 	mla	ip, ip, r1, r0
 80268f8:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80268fc:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8026900:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026902:	980e      	ldr	r0, [sp, #56]	; 0x38
 8026904:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026908:	0412      	lsls	r2, r2, #16
 802690a:	ea4b 0101 	orr.w	r1, fp, r1
 802690e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026912:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026916:	fb03 c101 	mla	r1, r3, r1, ip
 802691a:	4302      	orrs	r2, r0
 802691c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8026920:	fb03 1202 	mla	r2, r3, r2, r1
 8026924:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8026928:	0952      	lsrs	r2, r2, #5
 802692a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 802692e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8026932:	f8b9 2000 	ldrh.w	r2, [r9]
 8026936:	ea4b 0303 	orr.w	r3, fp, r3
 802693a:	b29b      	uxth	r3, r3
 802693c:	1211      	asrs	r1, r2, #8
 802693e:	1218      	asrs	r0, r3, #8
 8026940:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026944:	fb11 f107 	smulbb	r1, r1, r7
 8026948:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 802694c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026950:	00d2      	lsls	r2, r2, #3
 8026952:	fb00 100a 	mla	r0, r0, sl, r1
 8026956:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 802695a:	10d9      	asrs	r1, r3, #3
 802695c:	b2d2      	uxtb	r2, r2
 802695e:	00db      	lsls	r3, r3, #3
 8026960:	fb1c fc07 	smulbb	ip, ip, r7
 8026964:	fb12 f207 	smulbb	r2, r2, r7
 8026968:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802696c:	b2db      	uxtb	r3, r3
 802696e:	b280      	uxth	r0, r0
 8026970:	fb01 c10a 	mla	r1, r1, sl, ip
 8026974:	fb03 230a 	mla	r3, r3, sl, r2
 8026978:	b29b      	uxth	r3, r3
 802697a:	b289      	uxth	r1, r1
 802697c:	1c42      	adds	r2, r0, #1
 802697e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026982:	f101 0c01 	add.w	ip, r1, #1
 8026986:	1c5a      	adds	r2, r3, #1
 8026988:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802698c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8026990:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026992:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026996:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802699a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802699e:	4310      	orrs	r0, r2
 80269a0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80269a4:	441c      	add	r4, r3
 80269a6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80269a8:	ea40 000c 	orr.w	r0, r0, ip
 80269ac:	f829 0b02 	strh.w	r0, [r9], #2
 80269b0:	441e      	add	r6, r3
 80269b2:	f108 38ff 	add.w	r8, r8, #4294967295
 80269b6:	e6fc      	b.n	80267b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 80269b8:	b013      	add	sp, #76	; 0x4c
 80269ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080269be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80269be:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80269c2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 80269c6:	fb0e 4703 	mla	r7, lr, r3, r4
 80269ca:	f1be 0f00 	cmp.w	lr, #0
 80269ce:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 80269d2:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 80269d6:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 80269da:	8808      	ldrh	r0, [r1, #0]
 80269dc:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 80269e0:	db60      	blt.n	8026aa4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80269e2:	45f1      	cmp	r9, lr
 80269e4:	dd5e      	ble.n	8026aa4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80269e6:	2c00      	cmp	r4, #0
 80269e8:	db5a      	blt.n	8026aa0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80269ea:	42a3      	cmp	r3, r4
 80269ec:	dd58      	ble.n	8026aa0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80269ee:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 80269f2:	1c62      	adds	r2, r4, #1
 80269f4:	d459      	bmi.n	8026aaa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80269f6:	4293      	cmp	r3, r2
 80269f8:	dd57      	ble.n	8026aaa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80269fa:	2d00      	cmp	r5, #0
 80269fc:	d055      	beq.n	8026aaa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80269fe:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8026a02:	f11e 0e01 	adds.w	lr, lr, #1
 8026a06:	d454      	bmi.n	8026ab2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026a08:	45f1      	cmp	r9, lr
 8026a0a:	dd52      	ble.n	8026ab2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026a0c:	2e00      	cmp	r6, #0
 8026a0e:	d050      	beq.n	8026ab2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026a10:	2c00      	cmp	r4, #0
 8026a12:	db4c      	blt.n	8026aae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026a14:	42a3      	cmp	r3, r4
 8026a16:	dd4a      	ble.n	8026aae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026a18:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8026a1c:	3401      	adds	r4, #1
 8026a1e:	d405      	bmi.n	8026a2c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026a20:	42a3      	cmp	r3, r4
 8026a22:	dd03      	ble.n	8026a2c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026a24:	b115      	cbz	r5, 8026a2c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026a26:	3301      	adds	r3, #1
 8026a28:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8026a2c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8026a30:	fb15 f406 	smulbb	r4, r5, r6
 8026a34:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026a38:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8026a3c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026a40:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8026a44:	ea43 0c0c 	orr.w	ip, r3, ip
 8026a48:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8026a4c:	f1c6 0310 	rsb	r3, r6, #16
 8026a50:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8026a54:	1b5b      	subs	r3, r3, r5
 8026a56:	ea4e 0707 	orr.w	r7, lr, r7
 8026a5a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8026a5e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026a62:	437d      	muls	r5, r7
 8026a64:	fb03 5c0c 	mla	ip, r3, ip, r5
 8026a68:	0403      	lsls	r3, r0, #16
 8026a6a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026a6e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026a72:	4318      	orrs	r0, r3
 8026a74:	0413      	lsls	r3, r2, #16
 8026a76:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026a7a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026a7e:	4313      	orrs	r3, r2
 8026a80:	fb04 c000 	mla	r0, r4, r0, ip
 8026a84:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8026a88:	fb06 0003 	mla	r0, r6, r3, r0
 8026a8c:	0d43      	lsrs	r3, r0, #21
 8026a8e:	0940      	lsrs	r0, r0, #5
 8026a90:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026a94:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026a98:	4318      	orrs	r0, r3
 8026a9a:	8008      	strh	r0, [r1, #0]
 8026a9c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8026aa0:	4684      	mov	ip, r0
 8026aa2:	e7a6      	b.n	80269f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8026aa4:	4607      	mov	r7, r0
 8026aa6:	4684      	mov	ip, r0
 8026aa8:	e7ab      	b.n	8026a02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026aaa:	4607      	mov	r7, r0
 8026aac:	e7a9      	b.n	8026a02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026aae:	4602      	mov	r2, r0
 8026ab0:	e7b4      	b.n	8026a1c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8026ab2:	4602      	mov	r2, r0
 8026ab4:	e7ba      	b.n	8026a2c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08026ab6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026ab6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026aba:	b08f      	sub	sp, #60	; 0x3c
 8026abc:	461d      	mov	r5, r3
 8026abe:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026ac0:	920c      	str	r2, [sp, #48]	; 0x30
 8026ac2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8026ac6:	9107      	str	r1, [sp, #28]
 8026ac8:	6859      	ldr	r1, [r3, #4]
 8026aca:	681b      	ldr	r3, [r3, #0]
 8026acc:	900d      	str	r0, [sp, #52]	; 0x34
 8026ace:	fb01 2707 	mla	r7, r1, r7, r2
 8026ad2:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8026ad6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026ad8:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8026adc:	f8d3 8000 	ldr.w	r8, [r3]
 8026ae0:	9b07      	ldr	r3, [sp, #28]
 8026ae2:	2b00      	cmp	r3, #0
 8026ae4:	dc03      	bgt.n	8026aee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8026ae6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026ae8:	2b00      	cmp	r3, #0
 8026aea:	f340 8181 	ble.w	8026df0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026aee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026af0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026af4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026af8:	1e48      	subs	r0, r1, #1
 8026afa:	f102 3cff 	add.w	ip, r2, #4294967295
 8026afe:	2d00      	cmp	r5, #0
 8026b00:	f340 809b 	ble.w	8026c3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8026b04:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026b08:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026b0c:	d406      	bmi.n	8026b1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026b0e:	4586      	cmp	lr, r0
 8026b10:	da04      	bge.n	8026b1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026b12:	2b00      	cmp	r3, #0
 8026b14:	db02      	blt.n	8026b1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026b16:	4563      	cmp	r3, ip
 8026b18:	f2c0 8090 	blt.w	8026c3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8026b1c:	f11e 0e01 	adds.w	lr, lr, #1
 8026b20:	f100 8084 	bmi.w	8026c2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026b24:	4571      	cmp	r1, lr
 8026b26:	f2c0 8081 	blt.w	8026c2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026b2a:	3301      	adds	r3, #1
 8026b2c:	d47e      	bmi.n	8026c2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026b2e:	429a      	cmp	r2, r3
 8026b30:	db7c      	blt.n	8026c2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026b32:	46aa      	mov	sl, r5
 8026b34:	46b9      	mov	r9, r7
 8026b36:	f1ba 0f00 	cmp.w	sl, #0
 8026b3a:	f340 8099 	ble.w	8026c70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8026b3e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026b40:	1421      	asrs	r1, r4, #16
 8026b42:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026b46:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026b4a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026b4e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8026b52:	f100 80d0 	bmi.w	8026cf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026b56:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026b5a:	4559      	cmp	r1, fp
 8026b5c:	f280 80cb 	bge.w	8026cf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026b60:	2800      	cmp	r0, #0
 8026b62:	f2c0 80c8 	blt.w	8026cf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026b66:	f103 3bff 	add.w	fp, r3, #4294967295
 8026b6a:	4558      	cmp	r0, fp
 8026b6c:	f280 80c3 	bge.w	8026cf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026b70:	fa0f fe8e 	sxth.w	lr, lr
 8026b74:	fb00 110e 	mla	r1, r0, lr, r1
 8026b78:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026b7c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8026b80:	8841      	ldrh	r1, [r0, #2]
 8026b82:	f1bc 0f00 	cmp.w	ip, #0
 8026b86:	d00b      	beq.n	8026ba0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8026b88:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8026b8c:	3b01      	subs	r3, #1
 8026b8e:	005b      	lsls	r3, r3, #1
 8026b90:	3302      	adds	r3, #2
 8026b92:	eb00 0e03 	add.w	lr, r0, r3
 8026b96:	5ac3      	ldrh	r3, [r0, r3]
 8026b98:	9308      	str	r3, [sp, #32]
 8026b9a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8026b9e:	9309      	str	r3, [sp, #36]	; 0x24
 8026ba0:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8026ba4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026ba8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8026bac:	ea40 000b 	orr.w	r0, r0, fp
 8026bb0:	fb12 f30c 	smulbb	r3, r2, ip
 8026bb4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026bb8:	10db      	asrs	r3, r3, #3
 8026bba:	f1cc 0e10 	rsb	lr, ip, #16
 8026bbe:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026bc2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026bc6:	ebae 0e02 	sub.w	lr, lr, r2
 8026bca:	ea4b 0101 	orr.w	r1, fp, r1
 8026bce:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026bd2:	4351      	muls	r1, r2
 8026bd4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026bd6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8026bda:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026bde:	0410      	lsls	r0, r2, #16
 8026be0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026be4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026be8:	4310      	orrs	r0, r2
 8026bea:	9a08      	ldr	r2, [sp, #32]
 8026bec:	9908      	ldr	r1, [sp, #32]
 8026bee:	0412      	lsls	r2, r2, #16
 8026bf0:	fb03 e000 	mla	r0, r3, r0, lr
 8026bf4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026bf8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8026bfc:	ea42 020e 	orr.w	r2, r2, lr
 8026c00:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8026c04:	fb03 0302 	mla	r3, r3, r2, r0
 8026c08:	0d5a      	lsrs	r2, r3, #21
 8026c0a:	095b      	lsrs	r3, r3, #5
 8026c0c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026c10:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026c14:	4313      	orrs	r3, r2
 8026c16:	f8a9 3000 	strh.w	r3, [r9]
 8026c1a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026c1c:	441c      	add	r4, r3
 8026c1e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026c20:	f109 0902 	add.w	r9, r9, #2
 8026c24:	441e      	add	r6, r3
 8026c26:	f10a 3aff 	add.w	sl, sl, #4294967295
 8026c2a:	e784      	b.n	8026b36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8026c2c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026c2e:	441c      	add	r4, r3
 8026c30:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026c32:	3d01      	subs	r5, #1
 8026c34:	441e      	add	r6, r3
 8026c36:	3702      	adds	r7, #2
 8026c38:	e761      	b.n	8026afe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026c3a:	d01d      	beq.n	8026c78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8026c3c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8026c3e:	1e6b      	subs	r3, r5, #1
 8026c40:	fb00 4003 	mla	r0, r0, r3, r4
 8026c44:	1400      	asrs	r0, r0, #16
 8026c46:	f53f af74 	bmi.w	8026b32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026c4a:	3901      	subs	r1, #1
 8026c4c:	4288      	cmp	r0, r1
 8026c4e:	f6bf af70 	bge.w	8026b32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026c52:	991c      	ldr	r1, [sp, #112]	; 0x70
 8026c54:	fb01 6303 	mla	r3, r1, r3, r6
 8026c58:	141b      	asrs	r3, r3, #16
 8026c5a:	f53f af6a 	bmi.w	8026b32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026c5e:	3a01      	subs	r2, #1
 8026c60:	4293      	cmp	r3, r2
 8026c62:	f6bf af66 	bge.w	8026b32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026c66:	46a9      	mov	r9, r5
 8026c68:	46ba      	mov	sl, r7
 8026c6a:	f1b9 0f00 	cmp.w	r9, #0
 8026c6e:	dc5a      	bgt.n	8026d26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8026c70:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026c74:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8026c78:	9b07      	ldr	r3, [sp, #28]
 8026c7a:	2b00      	cmp	r3, #0
 8026c7c:	f340 80b8 	ble.w	8026df0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026c80:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026c84:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026c88:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026c8c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026c8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026c92:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026c96:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026c9a:	eef0 6a62 	vmov.f32	s13, s5
 8026c9e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026ca2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026ca6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026caa:	ee16 4a90 	vmov	r4, s13
 8026cae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026cb2:	eef0 6a43 	vmov.f32	s13, s6
 8026cb6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026cba:	ee12 2a90 	vmov	r2, s5
 8026cbe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026cc2:	fb92 f3f3 	sdiv	r3, r2, r3
 8026cc6:	ee13 2a10 	vmov	r2, s6
 8026cca:	931b      	str	r3, [sp, #108]	; 0x6c
 8026ccc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026cce:	fb92 f3f3 	sdiv	r3, r2, r3
 8026cd2:	931c      	str	r3, [sp, #112]	; 0x70
 8026cd4:	9b07      	ldr	r3, [sp, #28]
 8026cd6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026cd8:	3b01      	subs	r3, #1
 8026cda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026cde:	9307      	str	r3, [sp, #28]
 8026ce0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026ce2:	ee16 6a90 	vmov	r6, s13
 8026ce6:	bf14      	ite	ne
 8026ce8:	461d      	movne	r5, r3
 8026cea:	4615      	moveq	r5, r2
 8026cec:	eeb0 3a67 	vmov.f32	s6, s15
 8026cf0:	eef0 2a47 	vmov.f32	s5, s14
 8026cf4:	e6f4      	b.n	8026ae0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8026cf6:	f111 0b01 	adds.w	fp, r1, #1
 8026cfa:	d48e      	bmi.n	8026c1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026cfc:	45de      	cmp	lr, fp
 8026cfe:	db8c      	blt.n	8026c1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026d00:	f110 0b01 	adds.w	fp, r0, #1
 8026d04:	d489      	bmi.n	8026c1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026d06:	455b      	cmp	r3, fp
 8026d08:	db87      	blt.n	8026c1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026d0a:	b21b      	sxth	r3, r3
 8026d0c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8026d10:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8026d14:	9300      	str	r3, [sp, #0]
 8026d16:	4642      	mov	r2, r8
 8026d18:	fa0f f38e 	sxth.w	r3, lr
 8026d1c:	4649      	mov	r1, r9
 8026d1e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8026d20:	f7ff fe4d 	bl	80269be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8026d24:	e779      	b.n	8026c1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026d26:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026d28:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8026d2c:	1420      	asrs	r0, r4, #16
 8026d2e:	1431      	asrs	r1, r6, #16
 8026d30:	fb03 0101 	mla	r1, r3, r1, r0
 8026d34:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026d38:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026d3c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8026d40:	8841      	ldrh	r1, [r0, #2]
 8026d42:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026d46:	f1be 0f00 	cmp.w	lr, #0
 8026d4a:	d00b      	beq.n	8026d64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8026d4c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8026d50:	3b01      	subs	r3, #1
 8026d52:	005b      	lsls	r3, r3, #1
 8026d54:	3302      	adds	r3, #2
 8026d56:	eb00 0b03 	add.w	fp, r0, r3
 8026d5a:	5ac3      	ldrh	r3, [r0, r3]
 8026d5c:	930a      	str	r3, [sp, #40]	; 0x28
 8026d5e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026d62:	930b      	str	r3, [sp, #44]	; 0x2c
 8026d64:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8026d68:	fb12 f30e 	smulbb	r3, r2, lr
 8026d6c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026d70:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026d74:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026d78:	10db      	asrs	r3, r3, #3
 8026d7a:	ea40 000c 	orr.w	r0, r0, ip
 8026d7e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026d82:	f1ce 0c10 	rsb	ip, lr, #16
 8026d86:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026d8a:	ebac 0c02 	sub.w	ip, ip, r2
 8026d8e:	ea4b 0101 	orr.w	r1, fp, r1
 8026d92:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026d96:	4351      	muls	r1, r2
 8026d98:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8026d9a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8026d9e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8026da2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8026da6:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8026daa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026dac:	990a      	ldr	r1, [sp, #40]	; 0x28
 8026dae:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026db2:	0412      	lsls	r2, r2, #16
 8026db4:	ea4b 0000 	orr.w	r0, fp, r0
 8026db8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026dbc:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8026dc0:	fb03 c000 	mla	r0, r3, r0, ip
 8026dc4:	ea42 0b0b 	orr.w	fp, r2, fp
 8026dc8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8026dcc:	fb03 000b 	mla	r0, r3, fp, r0
 8026dd0:	0d43      	lsrs	r3, r0, #21
 8026dd2:	0940      	lsrs	r0, r0, #5
 8026dd4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026dd8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026ddc:	4318      	orrs	r0, r3
 8026dde:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026de0:	f82a 0b02 	strh.w	r0, [sl], #2
 8026de4:	441c      	add	r4, r3
 8026de6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026de8:	f109 39ff 	add.w	r9, r9, #4294967295
 8026dec:	441e      	add	r6, r3
 8026dee:	e73c      	b.n	8026c6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8026df0:	b00f      	add	sp, #60	; 0x3c
 8026df2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026df6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8026df6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026dfa:	b085      	sub	sp, #20
 8026dfc:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8026e00:	9102      	str	r1, [sp, #8]
 8026e02:	2c00      	cmp	r4, #0
 8026e04:	fb04 7103 	mla	r1, r4, r3, r7
 8026e08:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8026e0c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8026e10:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8026e14:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8026e18:	f2c0 811b 	blt.w	8027052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8026e1c:	45a6      	cmp	lr, r4
 8026e1e:	f340 8118 	ble.w	8027052 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8026e22:	2f00      	cmp	r7, #0
 8026e24:	f2c0 8113 	blt.w	802704e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8026e28:	42bb      	cmp	r3, r7
 8026e2a:	f340 8110 	ble.w	802704e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8026e2e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8026e32:	1c7a      	adds	r2, r7, #1
 8026e34:	f100 8110 	bmi.w	8027058 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8026e38:	4293      	cmp	r3, r2
 8026e3a:	f340 810d 	ble.w	8027058 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8026e3e:	2e00      	cmp	r6, #0
 8026e40:	f000 810c 	beq.w	802705c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8026e44:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8026e48:	3401      	adds	r4, #1
 8026e4a:	f100 810b 	bmi.w	8027064 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8026e4e:	45a6      	cmp	lr, r4
 8026e50:	f340 8108 	ble.w	8027064 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8026e54:	2800      	cmp	r0, #0
 8026e56:	f000 8108 	beq.w	802706a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8026e5a:	2f00      	cmp	r7, #0
 8026e5c:	f2c0 8100 	blt.w	8027060 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8026e60:	42bb      	cmp	r3, r7
 8026e62:	f340 80fd 	ble.w	8027060 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8026e66:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8026e6a:	3701      	adds	r7, #1
 8026e6c:	f100 8100 	bmi.w	8027070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8026e70:	42bb      	cmp	r3, r7
 8026e72:	f340 80fd 	ble.w	8027070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8026e76:	2e00      	cmp	r6, #0
 8026e78:	f000 80fc 	beq.w	8027074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8026e7c:	3301      	adds	r3, #1
 8026e7e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8026e82:	b2b6      	uxth	r6, r6
 8026e84:	b280      	uxth	r0, r0
 8026e86:	fb00 fe06 	mul.w	lr, r0, r6
 8026e8a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8026e8e:	0136      	lsls	r6, r6, #4
 8026e90:	eba6 070e 	sub.w	r7, r6, lr
 8026e94:	b280      	uxth	r0, r0
 8026e96:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8026e9a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8026e9e:	b2bf      	uxth	r7, r7
 8026ea0:	1a1b      	subs	r3, r3, r0
 8026ea2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8026ea6:	b29b      	uxth	r3, r3
 8026ea8:	fb0a f607 	mul.w	r6, sl, r7
 8026eac:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8026eb0:	fb0b 6603 	mla	r6, fp, r3, r6
 8026eb4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8026eb8:	fb00 6609 	mla	r6, r0, r9, r6
 8026ebc:	fb0e 6608 	mla	r6, lr, r8, r6
 8026ec0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8026ec4:	9600      	str	r6, [sp, #0]
 8026ec6:	2e00      	cmp	r6, #0
 8026ec8:	f000 80be 	beq.w	8027048 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8026ecc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026ed0:	fb0b fc0c 	mul.w	ip, fp, ip
 8026ed4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8026ed8:	fb0b f505 	mul.w	r5, fp, r5
 8026edc:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8026ee0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8026ee4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8026ee8:	44dc      	add	ip, fp
 8026eea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026eee:	9501      	str	r5, [sp, #4]
 8026ef0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8026ef4:	9503      	str	r5, [sp, #12]
 8026ef6:	9d01      	ldr	r5, [sp, #4]
 8026ef8:	9e02      	ldr	r6, [sp, #8]
 8026efa:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8026efe:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8026f02:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8026f06:	fb0a fc0c 	mul.w	ip, sl, ip
 8026f0a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8026f0e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8026f12:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8026f16:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8026f1a:	4465      	add	r5, ip
 8026f1c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8026f20:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8026f24:	fb09 fc0c 	mul.w	ip, r9, ip
 8026f28:	fb09 f904 	mul.w	r9, r9, r4
 8026f2c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8026f30:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8026f34:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8026f38:	fb08 f404 	mul.w	r4, r8, r4
 8026f3c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8026f40:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026f44:	fb08 f802 	mul.w	r8, r8, r2
 8026f48:	fb0a fa01 	mul.w	sl, sl, r1
 8026f4c:	0a22      	lsrs	r2, r4, #8
 8026f4e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8026f52:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026f56:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8026f5a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8026f5e:	4414      	add	r4, r2
 8026f60:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8026f64:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8026f68:	0a2d      	lsrs	r5, r5, #8
 8026f6a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8026f6e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8026f72:	9a03      	ldr	r2, [sp, #12]
 8026f74:	8836      	ldrh	r6, [r6, #0]
 8026f76:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8026f7a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8026f7e:	437d      	muls	r5, r7
 8026f80:	4461      	add	r1, ip
 8026f82:	0a24      	lsrs	r4, r4, #8
 8026f84:	fb02 5503 	mla	r5, r2, r3, r5
 8026f88:	0a09      	lsrs	r1, r1, #8
 8026f8a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8026f8e:	fb04 540e 	mla	r4, r4, lr, r5
 8026f92:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8026f96:	fb01 4100 	mla	r1, r1, r0, r4
 8026f9a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026f9e:	0a09      	lsrs	r1, r1, #8
 8026fa0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026fa4:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8026fa8:	fb07 f70a 	mul.w	r7, r7, sl
 8026fac:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8026fb0:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8026fb4:	fb03 7101 	mla	r1, r3, r1, r7
 8026fb8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026fbc:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8026fc0:	fb0e 1e08 	mla	lr, lr, r8, r1
 8026fc4:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8026fc8:	fb00 e101 	mla	r1, r0, r1, lr
 8026fcc:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8026fd0:	9a00      	ldr	r2, [sp, #0]
 8026fd2:	b287      	uxth	r7, r0
 8026fd4:	437a      	muls	r2, r7
 8026fd6:	0a09      	lsrs	r1, r1, #8
 8026fd8:	1c53      	adds	r3, r2, #1
 8026fda:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8026fde:	4321      	orrs	r1, r4
 8026fe0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026fe4:	1235      	asrs	r5, r6, #8
 8026fe6:	0c0a      	lsrs	r2, r1, #16
 8026fe8:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8026fec:	b2db      	uxtb	r3, r3
 8026fee:	fb12 f207 	smulbb	r2, r2, r7
 8026ff2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8026ff6:	fb05 2503 	mla	r5, r5, r3, r2
 8026ffa:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8026ffe:	10f2      	asrs	r2, r6, #3
 8027000:	b2c8      	uxtb	r0, r1
 8027002:	00f6      	lsls	r6, r6, #3
 8027004:	fb14 f407 	smulbb	r4, r4, r7
 8027008:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802700c:	b2f6      	uxtb	r6, r6
 802700e:	fb10 f007 	smulbb	r0, r0, r7
 8027012:	fb02 4203 	mla	r2, r2, r3, r4
 8027016:	b2ad      	uxth	r5, r5
 8027018:	fb06 0303 	mla	r3, r6, r3, r0
 802701c:	b299      	uxth	r1, r3
 802701e:	b294      	uxth	r4, r2
 8027020:	1c6b      	adds	r3, r5, #1
 8027022:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8027026:	1c62      	adds	r2, r4, #1
 8027028:	1c4b      	adds	r3, r1, #1
 802702a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802702e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8027032:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8027036:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802703a:	0952      	lsrs	r2, r2, #5
 802703c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027040:	432b      	orrs	r3, r5
 8027042:	4313      	orrs	r3, r2
 8027044:	9a02      	ldr	r2, [sp, #8]
 8027046:	8013      	strh	r3, [r2, #0]
 8027048:	b005      	add	sp, #20
 802704a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802704e:	2500      	movs	r5, #0
 8027050:	e6ef      	b.n	8026e32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8027052:	2100      	movs	r1, #0
 8027054:	460d      	mov	r5, r1
 8027056:	e6f7      	b.n	8026e48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8027058:	2100      	movs	r1, #0
 802705a:	e6f5      	b.n	8026e48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802705c:	4631      	mov	r1, r6
 802705e:	e6f3      	b.n	8026e48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8027060:	2400      	movs	r4, #0
 8027062:	e702      	b.n	8026e6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8027064:	2200      	movs	r2, #0
 8027066:	4614      	mov	r4, r2
 8027068:	e70b      	b.n	8026e82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802706a:	4602      	mov	r2, r0
 802706c:	4604      	mov	r4, r0
 802706e:	e708      	b.n	8026e82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8027070:	2200      	movs	r2, #0
 8027072:	e706      	b.n	8026e82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8027074:	4632      	mov	r2, r6
 8027076:	e704      	b.n	8026e82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08027078 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027078:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802707c:	b09d      	sub	sp, #116	; 0x74
 802707e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8027082:	9219      	str	r2, [sp, #100]	; 0x64
 8027084:	9307      	str	r3, [sp, #28]
 8027086:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8027088:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 802708c:	931a      	str	r3, [sp, #104]	; 0x68
 802708e:	9117      	str	r1, [sp, #92]	; 0x5c
 8027090:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8027094:	901b      	str	r0, [sp, #108]	; 0x6c
 8027096:	6850      	ldr	r0, [r2, #4]
 8027098:	6812      	ldr	r2, [r2, #0]
 802709a:	fb00 1303 	mla	r3, r0, r3, r1
 802709e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80270a2:	930a      	str	r3, [sp, #40]	; 0x28
 80270a4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80270a6:	681b      	ldr	r3, [r3, #0]
 80270a8:	9310      	str	r3, [sp, #64]	; 0x40
 80270aa:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80270ae:	930b      	str	r3, [sp, #44]	; 0x2c
 80270b0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80270b2:	2b00      	cmp	r3, #0
 80270b4:	dc03      	bgt.n	80270be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80270b6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80270b8:	2b00      	cmp	r3, #0
 80270ba:	f340 8375 	ble.w	80277a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80270be:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80270c0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80270c4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80270c8:	1e48      	subs	r0, r1, #1
 80270ca:	1e57      	subs	r7, r2, #1
 80270cc:	9b07      	ldr	r3, [sp, #28]
 80270ce:	2b00      	cmp	r3, #0
 80270d0:	f340 818e 	ble.w	80273f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80270d4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80270d8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80270dc:	d406      	bmi.n	80270ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80270de:	4584      	cmp	ip, r0
 80270e0:	da04      	bge.n	80270ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80270e2:	2b00      	cmp	r3, #0
 80270e4:	db02      	blt.n	80270ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80270e6:	42bb      	cmp	r3, r7
 80270e8:	f2c0 8183 	blt.w	80273f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80270ec:	f11c 0c01 	adds.w	ip, ip, #1
 80270f0:	f100 8173 	bmi.w	80273da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80270f4:	4561      	cmp	r1, ip
 80270f6:	f2c0 8170 	blt.w	80273da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80270fa:	3301      	adds	r3, #1
 80270fc:	f100 816d 	bmi.w	80273da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027100:	429a      	cmp	r2, r3
 8027102:	f2c0 816a 	blt.w	80273da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027106:	9b07      	ldr	r3, [sp, #28]
 8027108:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802710a:	9318      	str	r3, [sp, #96]	; 0x60
 802710c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802710e:	2b00      	cmp	r3, #0
 8027110:	f340 818c 	ble.w	802742c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8027114:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8027116:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027118:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802711c:	689b      	ldr	r3, [r3, #8]
 802711e:	1422      	asrs	r2, r4, #16
 8027120:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8027124:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8027128:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802712c:	f100 81cd 	bmi.w	80274ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8027130:	f103 38ff 	add.w	r8, r3, #4294967295
 8027134:	4542      	cmp	r2, r8
 8027136:	f280 81c8 	bge.w	80274ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802713a:	f1bc 0f00 	cmp.w	ip, #0
 802713e:	f2c0 81c4 	blt.w	80274ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8027142:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027146:	45c4      	cmp	ip, r8
 8027148:	f280 81bf 	bge.w	80274ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802714c:	b21b      	sxth	r3, r3
 802714e:	fb0c 2203 	mla	r2, ip, r3, r2
 8027152:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027154:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8027158:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802715c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8027160:	2800      	cmp	r0, #0
 8027162:	f000 81a9 	beq.w	80274b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8027166:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802716a:	950c      	str	r5, [sp, #48]	; 0x30
 802716c:	0e2d      	lsrs	r5, r5, #24
 802716e:	9513      	str	r5, [sp, #76]	; 0x4c
 8027170:	b181      	cbz	r1, 8027194 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8027172:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8027176:	3b01      	subs	r3, #1
 8027178:	009b      	lsls	r3, r3, #2
 802717a:	3304      	adds	r3, #4
 802717c:	eb08 0c03 	add.w	ip, r8, r3
 8027180:	f858 3003 	ldr.w	r3, [r8, r3]
 8027184:	9308      	str	r3, [sp, #32]
 8027186:	0e1b      	lsrs	r3, r3, #24
 8027188:	9311      	str	r3, [sp, #68]	; 0x44
 802718a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802718e:	930d      	str	r3, [sp, #52]	; 0x34
 8027190:	0e1b      	lsrs	r3, r3, #24
 8027192:	9314      	str	r3, [sp, #80]	; 0x50
 8027194:	b280      	uxth	r0, r0
 8027196:	b289      	uxth	r1, r1
 8027198:	fb00 f901 	mul.w	r9, r0, r1
 802719c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80271a0:	0100      	lsls	r0, r0, #4
 80271a2:	eba0 0809 	sub.w	r8, r0, r9
 80271a6:	b289      	uxth	r1, r1
 80271a8:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80271ac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80271ae:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80271b0:	fa1f f888 	uxth.w	r8, r8
 80271b4:	1a5b      	subs	r3, r3, r1
 80271b6:	b29b      	uxth	r3, r3
 80271b8:	fb08 f000 	mul.w	r0, r8, r0
 80271bc:	fb03 000e 	mla	r0, r3, lr, r0
 80271c0:	fb01 0005 	mla	r0, r1, r5, r0
 80271c4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80271c6:	fb09 0005 	mla	r0, r9, r5, r0
 80271ca:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80271ce:	2800      	cmp	r0, #0
 80271d0:	f000 80fa 	beq.w	80273c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80271d4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80271d8:	d01b      	beq.n	8027212 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80271da:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80271de:	fb0e fa0a 	mul.w	sl, lr, sl
 80271e2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80271e6:	fb0e fe02 	mul.w	lr, lr, r2
 80271ea:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80271ee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80271f2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80271f6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80271fa:	4452      	add	r2, sl
 80271fc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027200:	0a12      	lsrs	r2, r2, #8
 8027202:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027206:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802720a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802720e:	ea42 020c 	orr.w	r2, r2, ip
 8027212:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027214:	2dff      	cmp	r5, #255	; 0xff
 8027216:	d021      	beq.n	802725c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027218:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802721a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802721e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027220:	fb05 fb0b 	mul.w	fp, r5, fp
 8027224:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027226:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802722a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802722c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027230:	fb05 fa0a 	mul.w	sl, r5, sl
 8027234:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027238:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802723c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027240:	44de      	add	lr, fp
 8027242:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027246:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802724a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802724e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027252:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027256:	ea4e 050a 	orr.w	r5, lr, sl
 802725a:	950c      	str	r5, [sp, #48]	; 0x30
 802725c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802725e:	2dff      	cmp	r5, #255	; 0xff
 8027260:	d021      	beq.n	80272a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8027262:	9d08      	ldr	r5, [sp, #32]
 8027264:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027268:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802726a:	fb05 fb0b 	mul.w	fp, r5, fp
 802726e:	9d08      	ldr	r5, [sp, #32]
 8027270:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027274:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027276:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802727a:	fb05 fa0a 	mul.w	sl, r5, sl
 802727e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027282:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027286:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802728a:	44de      	add	lr, fp
 802728c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027290:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027294:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027298:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802729c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80272a0:	ea4e 050a 	orr.w	r5, lr, sl
 80272a4:	9508      	str	r5, [sp, #32]
 80272a6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80272a8:	2dff      	cmp	r5, #255	; 0xff
 80272aa:	d021      	beq.n	80272f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80272ac:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80272ae:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80272b2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80272b4:	fb05 fb0b 	mul.w	fp, r5, fp
 80272b8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80272ba:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80272be:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80272c0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80272c4:	fb05 fa0a 	mul.w	sl, r5, sl
 80272c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80272cc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80272d0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80272d4:	44de      	add	lr, fp
 80272d6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80272da:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80272de:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80272e2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80272e6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80272ea:	ea4e 050a 	orr.w	r5, lr, sl
 80272ee:	950d      	str	r5, [sp, #52]	; 0x34
 80272f0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80272f2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80272f6:	9d08      	ldr	r5, [sp, #32]
 80272f8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80272fc:	fb08 fc0c 	mul.w	ip, r8, ip
 8027300:	fb03 cc0e 	mla	ip, r3, lr, ip
 8027304:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027308:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802730a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802730e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027312:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027314:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027318:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802731c:	fb08 f80e 	mul.w	r8, r8, lr
 8027320:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027324:	fb03 8202 	mla	r2, r3, r2, r8
 8027328:	9b08      	ldr	r3, [sp, #32]
 802732a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802732c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8027330:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8027332:	fb01 220a 	mla	r2, r1, sl, r2
 8027336:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 802733a:	fb09 2901 	mla	r9, r9, r1, r2
 802733e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8027340:	883b      	ldrh	r3, [r7, #0]
 8027342:	4342      	muls	r2, r0
 8027344:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027348:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802734c:	1c50      	adds	r0, r2, #1
 802734e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027352:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8027356:	ea4c 0c09 	orr.w	ip, ip, r9
 802735a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802735e:	1219      	asrs	r1, r3, #8
 8027360:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8027364:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8027368:	b2c0      	uxtb	r0, r0
 802736a:	fb12 f205 	smulbb	r2, r2, r5
 802736e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8027372:	fb01 2100 	mla	r1, r1, r0, r2
 8027376:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802737a:	10da      	asrs	r2, r3, #3
 802737c:	fa5f fc8c 	uxtb.w	ip, ip
 8027380:	00db      	lsls	r3, r3, #3
 8027382:	fb1c fc05 	smulbb	ip, ip, r5
 8027386:	b2db      	uxtb	r3, r3
 8027388:	b289      	uxth	r1, r1
 802738a:	fb03 c300 	mla	r3, r3, r0, ip
 802738e:	fa1f fc83 	uxth.w	ip, r3
 8027392:	1c4b      	adds	r3, r1, #1
 8027394:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8027398:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802739c:	fb1e fe05 	smulbb	lr, lr, r5
 80273a0:	f10c 0301 	add.w	r3, ip, #1
 80273a4:	fb02 e200 	mla	r2, r2, r0, lr
 80273a8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80273ac:	b292      	uxth	r2, r2
 80273ae:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80273b2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80273b6:	430b      	orrs	r3, r1
 80273b8:	1c51      	adds	r1, r2, #1
 80273ba:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80273be:	0952      	lsrs	r2, r2, #5
 80273c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80273c4:	4313      	orrs	r3, r2
 80273c6:	803b      	strh	r3, [r7, #0]
 80273c8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80273ca:	441c      	add	r4, r3
 80273cc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80273ce:	441e      	add	r6, r3
 80273d0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80273d2:	3b01      	subs	r3, #1
 80273d4:	3702      	adds	r7, #2
 80273d6:	9318      	str	r3, [sp, #96]	; 0x60
 80273d8:	e698      	b.n	802710c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80273da:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80273dc:	441c      	add	r4, r3
 80273de:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80273e0:	441e      	add	r6, r3
 80273e2:	9b07      	ldr	r3, [sp, #28]
 80273e4:	3b01      	subs	r3, #1
 80273e6:	9307      	str	r3, [sp, #28]
 80273e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80273ea:	3302      	adds	r3, #2
 80273ec:	930a      	str	r3, [sp, #40]	; 0x28
 80273ee:	e66d      	b.n	80270cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80273f0:	d023      	beq.n	802743a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80273f2:	9b07      	ldr	r3, [sp, #28]
 80273f4:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80273f6:	3b01      	subs	r3, #1
 80273f8:	fb00 4003 	mla	r0, r0, r3, r4
 80273fc:	1400      	asrs	r0, r0, #16
 80273fe:	f53f ae82 	bmi.w	8027106 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027402:	3901      	subs	r1, #1
 8027404:	4288      	cmp	r0, r1
 8027406:	f6bf ae7e 	bge.w	8027106 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802740a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 802740c:	fb01 6303 	mla	r3, r1, r3, r6
 8027410:	141b      	asrs	r3, r3, #16
 8027412:	f53f ae78 	bmi.w	8027106 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027416:	3a01      	subs	r2, #1
 8027418:	4293      	cmp	r3, r2
 802741a:	f6bf ae74 	bge.w	8027106 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802741e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027422:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8027426:	f1bb 0f00 	cmp.w	fp, #0
 802742a:	dc6c      	bgt.n	8027506 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802742c:	9b07      	ldr	r3, [sp, #28]
 802742e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027432:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027434:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8027438:	930a      	str	r3, [sp, #40]	; 0x28
 802743a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802743c:	2b00      	cmp	r3, #0
 802743e:	f340 81b3 	ble.w	80277a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8027442:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027446:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802744a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802744e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027450:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027454:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027458:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802745c:	eef0 6a62 	vmov.f32	s13, s5
 8027460:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027464:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027468:	ee77 2a62 	vsub.f32	s5, s14, s5
 802746c:	ee16 4a90 	vmov	r4, s13
 8027470:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027474:	eef0 6a43 	vmov.f32	s13, s6
 8027478:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802747c:	ee12 2a90 	vmov	r2, s5
 8027480:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027484:	fb92 f3f3 	sdiv	r3, r2, r3
 8027488:	ee13 2a10 	vmov	r2, s6
 802748c:	9329      	str	r3, [sp, #164]	; 0xa4
 802748e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027490:	fb92 f3f3 	sdiv	r3, r2, r3
 8027494:	932a      	str	r3, [sp, #168]	; 0xa8
 8027496:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027498:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802749a:	3b01      	subs	r3, #1
 802749c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80274a0:	9317      	str	r3, [sp, #92]	; 0x5c
 80274a2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80274a4:	bf08      	it	eq
 80274a6:	4613      	moveq	r3, r2
 80274a8:	ee16 6a90 	vmov	r6, s13
 80274ac:	9307      	str	r3, [sp, #28]
 80274ae:	eeb0 3a67 	vmov.f32	s6, s15
 80274b2:	eef0 2a47 	vmov.f32	s5, s14
 80274b6:	e5fb      	b.n	80270b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80274b8:	2900      	cmp	r1, #0
 80274ba:	f43f ae6b 	beq.w	8027194 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80274be:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80274c2:	9308      	str	r3, [sp, #32]
 80274c4:	0e1b      	lsrs	r3, r3, #24
 80274c6:	9311      	str	r3, [sp, #68]	; 0x44
 80274c8:	e664      	b.n	8027194 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80274ca:	f112 0801 	adds.w	r8, r2, #1
 80274ce:	f53f af7b 	bmi.w	80273c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80274d2:	4543      	cmp	r3, r8
 80274d4:	f6ff af78 	blt.w	80273c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80274d8:	f11c 0801 	adds.w	r8, ip, #1
 80274dc:	f53f af74 	bmi.w	80273c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80274e0:	45c6      	cmp	lr, r8
 80274e2:	f6ff af71 	blt.w	80273c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80274e6:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80274e8:	9201      	str	r2, [sp, #4]
 80274ea:	fa0f f28e 	sxth.w	r2, lr
 80274ee:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80274f2:	e9cd c002 	strd	ip, r0, [sp, #8]
 80274f6:	9200      	str	r2, [sp, #0]
 80274f8:	b21b      	sxth	r3, r3
 80274fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80274fc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80274fe:	4639      	mov	r1, r7
 8027500:	f7ff fc79 	bl	8026df6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8027504:	e760      	b.n	80273c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027506:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027508:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802750a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802750e:	1427      	asrs	r7, r4, #16
 8027510:	1433      	asrs	r3, r6, #16
 8027512:	fb01 7303 	mla	r3, r1, r3, r7
 8027516:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802751a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802751e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027522:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027526:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802752a:	2a00      	cmp	r2, #0
 802752c:	f000 8133 	beq.w	8027796 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8027530:	687d      	ldr	r5, [r7, #4]
 8027532:	950e      	str	r5, [sp, #56]	; 0x38
 8027534:	0e2d      	lsrs	r5, r5, #24
 8027536:	9515      	str	r5, [sp, #84]	; 0x54
 8027538:	b178      	cbz	r0, 802755a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802753a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802753e:	3901      	subs	r1, #1
 8027540:	0089      	lsls	r1, r1, #2
 8027542:	3104      	adds	r1, #4
 8027544:	eb07 0e01 	add.w	lr, r7, r1
 8027548:	5879      	ldr	r1, [r7, r1]
 802754a:	9109      	str	r1, [sp, #36]	; 0x24
 802754c:	0e09      	lsrs	r1, r1, #24
 802754e:	9112      	str	r1, [sp, #72]	; 0x48
 8027550:	f8de 1004 	ldr.w	r1, [lr, #4]
 8027554:	910f      	str	r1, [sp, #60]	; 0x3c
 8027556:	0e09      	lsrs	r1, r1, #24
 8027558:	9116      	str	r1, [sp, #88]	; 0x58
 802755a:	b292      	uxth	r2, r2
 802755c:	b280      	uxth	r0, r0
 802755e:	fb02 f800 	mul.w	r8, r2, r0
 8027562:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8027566:	0112      	lsls	r2, r2, #4
 8027568:	eba2 0e08 	sub.w	lr, r2, r8
 802756c:	b280      	uxth	r0, r0
 802756e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8027572:	9915      	ldr	r1, [sp, #84]	; 0x54
 8027574:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027576:	fa1f fe8e 	uxth.w	lr, lr
 802757a:	1a12      	subs	r2, r2, r0
 802757c:	b292      	uxth	r2, r2
 802757e:	fb0e f101 	mul.w	r1, lr, r1
 8027582:	fb02 110c 	mla	r1, r2, ip, r1
 8027586:	fb00 1105 	mla	r1, r0, r5, r1
 802758a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802758c:	fb08 1105 	mla	r1, r8, r5, r1
 8027590:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8027594:	2900      	cmp	r1, #0
 8027596:	f000 80f5 	beq.w	8027784 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802759a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802759e:	d019      	beq.n	80275d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80275a0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80275a4:	fb0c fa0a 	mul.w	sl, ip, sl
 80275a8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80275ac:	fb0c fc03 	mul.w	ip, ip, r3
 80275b0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80275b4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80275b8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80275bc:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80275c0:	4453      	add	r3, sl
 80275c2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80275c6:	0a1b      	lsrs	r3, r3, #8
 80275c8:	0a3f      	lsrs	r7, r7, #8
 80275ca:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80275ce:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80275d2:	433b      	orrs	r3, r7
 80275d4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80275d6:	2dff      	cmp	r5, #255	; 0xff
 80275d8:	d020      	beq.n	802761c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80275da:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80275dc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80275e0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80275e2:	436f      	muls	r7, r5
 80275e4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80275e6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80275ea:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80275ec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80275f0:	fb05 fa0a 	mul.w	sl, r5, sl
 80275f4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80275f8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80275fc:	44bc      	add	ip, r7
 80275fe:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027602:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027606:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802760a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802760e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027612:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027616:	ea4c 050a 	orr.w	r5, ip, sl
 802761a:	950e      	str	r5, [sp, #56]	; 0x38
 802761c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802761e:	2dff      	cmp	r5, #255	; 0xff
 8027620:	d020      	beq.n	8027664 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8027622:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027624:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027628:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802762a:	436f      	muls	r7, r5
 802762c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802762e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027632:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027634:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027638:	fb05 fa0a 	mul.w	sl, r5, sl
 802763c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027640:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027644:	44bc      	add	ip, r7
 8027646:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802764a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802764e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027652:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027656:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802765a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802765e:	ea4c 050a 	orr.w	r5, ip, sl
 8027662:	9509      	str	r5, [sp, #36]	; 0x24
 8027664:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027666:	2dff      	cmp	r5, #255	; 0xff
 8027668:	d020      	beq.n	80276ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802766a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802766c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027670:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8027672:	436f      	muls	r7, r5
 8027674:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027676:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802767a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802767c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027680:	fb05 fa0a 	mul.w	sl, r5, sl
 8027684:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027688:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802768c:	44bc      	add	ip, r7
 802768e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027692:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027696:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802769a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802769e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80276a2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80276a6:	ea4c 050a 	orr.w	r5, ip, sl
 80276aa:	950f      	str	r5, [sp, #60]	; 0x3c
 80276ac:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80276ae:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80276b2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80276b4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80276b8:	fb0e f707 	mul.w	r7, lr, r7
 80276bc:	fb02 770c 	mla	r7, r2, ip, r7
 80276c0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80276c4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80276c6:	fb00 770c 	mla	r7, r0, ip, r7
 80276ca:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80276ce:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80276d0:	fb08 770c 	mla	r7, r8, ip, r7
 80276d4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80276d8:	fb0e fe0c 	mul.w	lr, lr, ip
 80276dc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80276e0:	fb02 e303 	mla	r3, r2, r3, lr
 80276e4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80276e6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80276e8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80276ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80276ee:	fb00 330a 	mla	r3, r0, sl, r3
 80276f2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80276f6:	fb08 3c0c 	mla	ip, r8, ip, r3
 80276fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80276fc:	f8b9 0000 	ldrh.w	r0, [r9]
 8027700:	4359      	muls	r1, r3
 8027702:	0a3f      	lsrs	r7, r7, #8
 8027704:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027708:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802770c:	1c4b      	adds	r3, r1, #1
 802770e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8027712:	ea47 070c 	orr.w	r7, r7, ip
 8027716:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802771a:	1202      	asrs	r2, r0, #8
 802771c:	0c3b      	lsrs	r3, r7, #16
 802771e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8027722:	b2c9      	uxtb	r1, r1
 8027724:	fb13 f305 	smulbb	r3, r3, r5
 8027728:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802772c:	fb02 3201 	mla	r2, r2, r1, r3
 8027730:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8027734:	10c3      	asrs	r3, r0, #3
 8027736:	b2ff      	uxtb	r7, r7
 8027738:	00c0      	lsls	r0, r0, #3
 802773a:	b2c0      	uxtb	r0, r0
 802773c:	fb17 f705 	smulbb	r7, r7, r5
 8027740:	fb00 7001 	mla	r0, r0, r1, r7
 8027744:	b292      	uxth	r2, r2
 8027746:	fb1c fc05 	smulbb	ip, ip, r5
 802774a:	b280      	uxth	r0, r0
 802774c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8027750:	fb03 c301 	mla	r3, r3, r1, ip
 8027754:	1c51      	adds	r1, r2, #1
 8027756:	f100 0c01 	add.w	ip, r0, #1
 802775a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802775e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8027762:	b29b      	uxth	r3, r3
 8027764:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8027768:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 802776c:	ea4c 0202 	orr.w	r2, ip, r2
 8027770:	f103 0c01 	add.w	ip, r3, #1
 8027774:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8027778:	095b      	lsrs	r3, r3, #5
 802777a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802777e:	431a      	orrs	r2, r3
 8027780:	f8a9 2000 	strh.w	r2, [r9]
 8027784:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027786:	441c      	add	r4, r3
 8027788:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802778a:	f109 0902 	add.w	r9, r9, #2
 802778e:	441e      	add	r6, r3
 8027790:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027794:	e647      	b.n	8027426 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8027796:	2800      	cmp	r0, #0
 8027798:	f43f aedf 	beq.w	802755a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802779c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80277a0:	9109      	str	r1, [sp, #36]	; 0x24
 80277a2:	0e09      	lsrs	r1, r1, #24
 80277a4:	9112      	str	r1, [sp, #72]	; 0x48
 80277a6:	e6d8      	b.n	802755a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80277a8:	b01d      	add	sp, #116	; 0x74
 80277aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080277ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80277ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80277b2:	b085      	sub	sp, #20
 80277b4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80277b8:	9102      	str	r1, [sp, #8]
 80277ba:	2c00      	cmp	r4, #0
 80277bc:	fb04 7103 	mla	r1, r4, r3, r7
 80277c0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80277c4:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80277c8:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80277cc:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80277d0:	f2c0 810c 	blt.w	80279ec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80277d4:	45a6      	cmp	lr, r4
 80277d6:	f340 8109 	ble.w	80279ec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80277da:	2f00      	cmp	r7, #0
 80277dc:	f2c0 8104 	blt.w	80279e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80277e0:	42bb      	cmp	r3, r7
 80277e2:	f340 8101 	ble.w	80279e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80277e6:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80277ea:	1c7a      	adds	r2, r7, #1
 80277ec:	f100 8101 	bmi.w	80279f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80277f0:	4293      	cmp	r3, r2
 80277f2:	f340 80fe 	ble.w	80279f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80277f6:	2e00      	cmp	r6, #0
 80277f8:	f000 80fd 	beq.w	80279f6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 80277fc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8027800:	3401      	adds	r4, #1
 8027802:	f100 80fc 	bmi.w	80279fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8027806:	45a6      	cmp	lr, r4
 8027808:	f340 80f9 	ble.w	80279fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802780c:	2800      	cmp	r0, #0
 802780e:	f000 80f9 	beq.w	8027a04 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8027812:	2f00      	cmp	r7, #0
 8027814:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8027818:	f2c0 80ef 	blt.w	80279fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802781c:	42bb      	cmp	r3, r7
 802781e:	f340 80ec 	ble.w	80279fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8027822:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8027826:	3701      	adds	r7, #1
 8027828:	f100 80ef 	bmi.w	8027a0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802782c:	42bb      	cmp	r3, r7
 802782e:	f340 80ec 	ble.w	8027a0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8027832:	2e00      	cmp	r6, #0
 8027834:	f000 80eb 	beq.w	8027a0e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8027838:	6852      	ldr	r2, [r2, #4]
 802783a:	b2b6      	uxth	r6, r6
 802783c:	b280      	uxth	r0, r0
 802783e:	fb00 fe06 	mul.w	lr, r0, r6
 8027842:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8027846:	0136      	lsls	r6, r6, #4
 8027848:	eba6 070e 	sub.w	r7, r6, lr
 802784c:	b280      	uxth	r0, r0
 802784e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8027852:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8027856:	b2bf      	uxth	r7, r7
 8027858:	1a1b      	subs	r3, r3, r0
 802785a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802785e:	b29b      	uxth	r3, r3
 8027860:	fb07 f60a 	mul.w	r6, r7, sl
 8027864:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027868:	fb0b 6603 	mla	r6, fp, r3, r6
 802786c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027870:	fb00 6609 	mla	r6, r0, r9, r6
 8027874:	fb0e 6608 	mla	r6, lr, r8, r6
 8027878:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802787c:	9600      	str	r6, [sp, #0]
 802787e:	2e00      	cmp	r6, #0
 8027880:	f000 80af 	beq.w	80279e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8027884:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027888:	fb0b fc0c 	mul.w	ip, fp, ip
 802788c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8027890:	fb0b f505 	mul.w	r5, fp, r5
 8027894:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8027898:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802789c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80278a0:	44dc      	add	ip, fp
 80278a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80278a6:	9501      	str	r5, [sp, #4]
 80278a8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80278ac:	9503      	str	r5, [sp, #12]
 80278ae:	9d01      	ldr	r5, [sp, #4]
 80278b0:	9e02      	ldr	r6, [sp, #8]
 80278b2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80278b6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80278ba:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80278be:	fb0a fc0c 	mul.w	ip, sl, ip
 80278c2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80278c6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80278ca:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80278ce:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80278d2:	4465      	add	r5, ip
 80278d4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80278d8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80278dc:	fb09 fc0c 	mul.w	ip, r9, ip
 80278e0:	fb09 f904 	mul.w	r9, r9, r4
 80278e4:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80278e8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80278ec:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80278f0:	fb08 f404 	mul.w	r4, r8, r4
 80278f4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80278f8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80278fc:	fb08 f802 	mul.w	r8, r8, r2
 8027900:	fb0a fa01 	mul.w	sl, sl, r1
 8027904:	0a22      	lsrs	r2, r4, #8
 8027906:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802790a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802790e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8027912:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8027916:	4414      	add	r4, r2
 8027918:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802791c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8027920:	0a2d      	lsrs	r5, r5, #8
 8027922:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8027926:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802792a:	9a03      	ldr	r2, [sp, #12]
 802792c:	8836      	ldrh	r6, [r6, #0]
 802792e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027932:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027936:	437d      	muls	r5, r7
 8027938:	4461      	add	r1, ip
 802793a:	0a24      	lsrs	r4, r4, #8
 802793c:	fb02 5503 	mla	r5, r2, r3, r5
 8027940:	0a09      	lsrs	r1, r1, #8
 8027942:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8027946:	fb04 540e 	mla	r4, r4, lr, r5
 802794a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802794e:	fb01 4100 	mla	r1, r1, r0, r4
 8027952:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027956:	0a09      	lsrs	r1, r1, #8
 8027958:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802795c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027960:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027964:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8027968:	fb07 f70a 	mul.w	r7, r7, sl
 802796c:	fb03 7101 	mla	r1, r3, r1, r7
 8027970:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027974:	9b00      	ldr	r3, [sp, #0]
 8027976:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802797a:	fb0e 1e08 	mla	lr, lr, r8, r1
 802797e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027982:	fb00 e101 	mla	r1, r0, r1, lr
 8027986:	43da      	mvns	r2, r3
 8027988:	1233      	asrs	r3, r6, #8
 802798a:	b2d2      	uxtb	r2, r2
 802798c:	10f0      	asrs	r0, r6, #3
 802798e:	0a09      	lsrs	r1, r1, #8
 8027990:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8027994:	00f6      	lsls	r6, r6, #3
 8027996:	4353      	muls	r3, r2
 8027998:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802799c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80279a0:	b2f6      	uxtb	r6, r6
 80279a2:	4321      	orrs	r1, r4
 80279a4:	4350      	muls	r0, r2
 80279a6:	4356      	muls	r6, r2
 80279a8:	1c5a      	adds	r2, r3, #1
 80279aa:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80279ae:	0c0b      	lsrs	r3, r1, #16
 80279b0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80279b4:	1c42      	adds	r2, r0, #1
 80279b6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80279ba:	0a0a      	lsrs	r2, r1, #8
 80279bc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80279c0:	021b      	lsls	r3, r3, #8
 80279c2:	00d2      	lsls	r2, r2, #3
 80279c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80279c8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80279cc:	4313      	orrs	r3, r2
 80279ce:	1c72      	adds	r2, r6, #1
 80279d0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80279d4:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 80279d8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80279dc:	4319      	orrs	r1, r3
 80279de:	9b02      	ldr	r3, [sp, #8]
 80279e0:	8019      	strh	r1, [r3, #0]
 80279e2:	b005      	add	sp, #20
 80279e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80279e8:	2500      	movs	r5, #0
 80279ea:	e6fe      	b.n	80277ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 80279ec:	2100      	movs	r1, #0
 80279ee:	460d      	mov	r5, r1
 80279f0:	e706      	b.n	8027800 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80279f2:	2100      	movs	r1, #0
 80279f4:	e704      	b.n	8027800 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80279f6:	4631      	mov	r1, r6
 80279f8:	e702      	b.n	8027800 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80279fa:	2400      	movs	r4, #0
 80279fc:	e713      	b.n	8027826 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 80279fe:	2200      	movs	r2, #0
 8027a00:	4614      	mov	r4, r2
 8027a02:	e71a      	b.n	802783a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027a04:	4602      	mov	r2, r0
 8027a06:	4604      	mov	r4, r0
 8027a08:	e717      	b.n	802783a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027a0a:	2200      	movs	r2, #0
 8027a0c:	e715      	b.n	802783a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027a0e:	4632      	mov	r2, r6
 8027a10:	e713      	b.n	802783a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08027a14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027a14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027a18:	b09b      	sub	sp, #108	; 0x6c
 8027a1a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8027a1e:	9218      	str	r2, [sp, #96]	; 0x60
 8027a20:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8027a22:	9116      	str	r1, [sp, #88]	; 0x58
 8027a24:	9307      	str	r3, [sp, #28]
 8027a26:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8027a2a:	9019      	str	r0, [sp, #100]	; 0x64
 8027a2c:	6850      	ldr	r0, [r2, #4]
 8027a2e:	6812      	ldr	r2, [r2, #0]
 8027a30:	fb00 1303 	mla	r3, r0, r3, r1
 8027a34:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027a38:	930a      	str	r3, [sp, #40]	; 0x28
 8027a3a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027a3c:	681b      	ldr	r3, [r3, #0]
 8027a3e:	930f      	str	r3, [sp, #60]	; 0x3c
 8027a40:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027a42:	2b00      	cmp	r3, #0
 8027a44:	dc03      	bgt.n	8027a4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8027a46:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027a48:	2b00      	cmp	r3, #0
 8027a4a:	f340 8386 	ble.w	802815a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027a4e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027a50:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027a54:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027a58:	1e48      	subs	r0, r1, #1
 8027a5a:	1e57      	subs	r7, r2, #1
 8027a5c:	9b07      	ldr	r3, [sp, #28]
 8027a5e:	2b00      	cmp	r3, #0
 8027a60:	f340 8166 	ble.w	8027d30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8027a64:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027a68:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027a6c:	d406      	bmi.n	8027a7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027a6e:	4584      	cmp	ip, r0
 8027a70:	da04      	bge.n	8027a7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027a72:	2b00      	cmp	r3, #0
 8027a74:	db02      	blt.n	8027a7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027a76:	42bb      	cmp	r3, r7
 8027a78:	f2c0 815b 	blt.w	8027d32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8027a7c:	f11c 0c01 	adds.w	ip, ip, #1
 8027a80:	f100 814b 	bmi.w	8027d1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027a84:	4561      	cmp	r1, ip
 8027a86:	f2c0 8148 	blt.w	8027d1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027a8a:	3301      	adds	r3, #1
 8027a8c:	f100 8145 	bmi.w	8027d1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027a90:	429a      	cmp	r2, r3
 8027a92:	f2c0 8142 	blt.w	8027d1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027a96:	9b07      	ldr	r3, [sp, #28]
 8027a98:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8027a9a:	9317      	str	r3, [sp, #92]	; 0x5c
 8027a9c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027a9e:	2b00      	cmp	r3, #0
 8027aa0:	f340 8165 	ble.w	8027d6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027aa4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8027aa6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027aa8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8027aac:	689b      	ldr	r3, [r3, #8]
 8027aae:	1422      	asrs	r2, r4, #16
 8027ab0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8027ab4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8027ab8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027abc:	f100 81d5 	bmi.w	8027e6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027ac0:	f103 38ff 	add.w	r8, r3, #4294967295
 8027ac4:	4542      	cmp	r2, r8
 8027ac6:	f280 81d0 	bge.w	8027e6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027aca:	f1bc 0f00 	cmp.w	ip, #0
 8027ace:	f2c0 81cc 	blt.w	8027e6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027ad2:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027ad6:	45c4      	cmp	ip, r8
 8027ad8:	f280 81c7 	bge.w	8027e6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027adc:	b21b      	sxth	r3, r3
 8027ade:	fb0c 2203 	mla	r2, ip, r3, r2
 8027ae2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027ae4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8027ae8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8027aec:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8027af0:	2900      	cmp	r1, #0
 8027af2:	f000 8182 	beq.w	8027dfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8027af6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8027afa:	950b      	str	r5, [sp, #44]	; 0x2c
 8027afc:	0e2d      	lsrs	r5, r5, #24
 8027afe:	9512      	str	r5, [sp, #72]	; 0x48
 8027b00:	b180      	cbz	r0, 8027b24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027b02:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8027b06:	3b01      	subs	r3, #1
 8027b08:	009b      	lsls	r3, r3, #2
 8027b0a:	3304      	adds	r3, #4
 8027b0c:	eb08 0c03 	add.w	ip, r8, r3
 8027b10:	f858 3003 	ldr.w	r3, [r8, r3]
 8027b14:	9308      	str	r3, [sp, #32]
 8027b16:	0e1b      	lsrs	r3, r3, #24
 8027b18:	9310      	str	r3, [sp, #64]	; 0x40
 8027b1a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8027b1e:	930c      	str	r3, [sp, #48]	; 0x30
 8027b20:	0e1b      	lsrs	r3, r3, #24
 8027b22:	9313      	str	r3, [sp, #76]	; 0x4c
 8027b24:	b289      	uxth	r1, r1
 8027b26:	b280      	uxth	r0, r0
 8027b28:	fb01 f900 	mul.w	r9, r1, r0
 8027b2c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8027b30:	0109      	lsls	r1, r1, #4
 8027b32:	eba1 0809 	sub.w	r8, r1, r9
 8027b36:	b280      	uxth	r0, r0
 8027b38:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8027b3c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8027b3e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027b40:	fa1f f888 	uxth.w	r8, r8
 8027b44:	1a09      	subs	r1, r1, r0
 8027b46:	b289      	uxth	r1, r1
 8027b48:	fb08 f303 	mul.w	r3, r8, r3
 8027b4c:	fb01 330e 	mla	r3, r1, lr, r3
 8027b50:	fb00 3305 	mla	r3, r0, r5, r3
 8027b54:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027b56:	fb09 3305 	mla	r3, r9, r5, r3
 8027b5a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027b5e:	2b00      	cmp	r3, #0
 8027b60:	f000 80d2 	beq.w	8027d08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027b64:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027b68:	d01b      	beq.n	8027ba2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8027b6a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8027b6e:	fb0e fa0a 	mul.w	sl, lr, sl
 8027b72:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027b76:	fb0e fe02 	mul.w	lr, lr, r2
 8027b7a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8027b7e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027b82:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027b86:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8027b8a:	4452      	add	r2, sl
 8027b8c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027b90:	0a12      	lsrs	r2, r2, #8
 8027b92:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027b96:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027b9a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027b9e:	ea42 020c 	orr.w	r2, r2, ip
 8027ba2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027ba4:	2dff      	cmp	r5, #255	; 0xff
 8027ba6:	d021      	beq.n	8027bec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8027ba8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027baa:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027bae:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027bb0:	fb05 fb0b 	mul.w	fp, r5, fp
 8027bb4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027bb6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027bba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027bbc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027bc0:	fb05 fa0a 	mul.w	sl, r5, sl
 8027bc4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027bc8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027bcc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027bd0:	44de      	add	lr, fp
 8027bd2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027bd6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027bda:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027bde:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027be2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027be6:	ea4e 050a 	orr.w	r5, lr, sl
 8027bea:	950b      	str	r5, [sp, #44]	; 0x2c
 8027bec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027bee:	2dff      	cmp	r5, #255	; 0xff
 8027bf0:	d021      	beq.n	8027c36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8027bf2:	9d08      	ldr	r5, [sp, #32]
 8027bf4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027bf8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027bfa:	fb05 fb0b 	mul.w	fp, r5, fp
 8027bfe:	9d08      	ldr	r5, [sp, #32]
 8027c00:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027c04:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027c06:	fb05 fa0e 	mul.w	sl, r5, lr
 8027c0a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027c0e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027c12:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027c16:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027c1a:	44de      	add	lr, fp
 8027c1c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027c20:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027c24:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027c28:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027c2c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027c30:	ea4e 050a 	orr.w	r5, lr, sl
 8027c34:	9508      	str	r5, [sp, #32]
 8027c36:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027c38:	2dff      	cmp	r5, #255	; 0xff
 8027c3a:	d021      	beq.n	8027c80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8027c3c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027c3e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027c42:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027c44:	fb05 fb0b 	mul.w	fp, r5, fp
 8027c48:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027c4a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027c4e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027c50:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027c54:	fb05 fa0a 	mul.w	sl, r5, sl
 8027c58:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027c5c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027c60:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027c64:	44de      	add	lr, fp
 8027c66:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027c6a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027c6e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027c72:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027c76:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027c7a:	ea4e 050a 	orr.w	r5, lr, sl
 8027c7e:	950c      	str	r5, [sp, #48]	; 0x30
 8027c80:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027c82:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027c86:	9d08      	ldr	r5, [sp, #32]
 8027c88:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8027c8c:	fb08 fc0c 	mul.w	ip, r8, ip
 8027c90:	fb01 cc0e 	mla	ip, r1, lr, ip
 8027c94:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027c98:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027c9a:	fb00 cc0e 	mla	ip, r0, lr, ip
 8027c9e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027ca2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027ca4:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027ca8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027cac:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027cb0:	fb08 f80e 	mul.w	r8, r8, lr
 8027cb4:	fb01 8202 	mla	r2, r1, r2, r8
 8027cb8:	9908      	ldr	r1, [sp, #32]
 8027cba:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8027cbe:	990c      	ldr	r1, [sp, #48]	; 0x30
 8027cc0:	fb00 220a 	mla	r2, r0, sl, r2
 8027cc4:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8027cc8:	fb09 2900 	mla	r9, r9, r0, r2
 8027ccc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027cd0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027cd4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027cd8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8027cdc:	ea4c 0c09 	orr.w	ip, ip, r9
 8027ce0:	2bff      	cmp	r3, #255	; 0xff
 8027ce2:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8027ce6:	f040 8091 	bne.w	8027e0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8027cea:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8027cee:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8027cf2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027cf6:	f022 0207 	bic.w	r2, r2, #7
 8027cfa:	431a      	orrs	r2, r3
 8027cfc:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8027d00:	ea4c 0c02 	orr.w	ip, ip, r2
 8027d04:	f8a7 c000 	strh.w	ip, [r7]
 8027d08:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027d0a:	441c      	add	r4, r3
 8027d0c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027d0e:	441e      	add	r6, r3
 8027d10:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027d12:	3b01      	subs	r3, #1
 8027d14:	3702      	adds	r7, #2
 8027d16:	9317      	str	r3, [sp, #92]	; 0x5c
 8027d18:	e6c0      	b.n	8027a9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027d1a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027d1c:	441c      	add	r4, r3
 8027d1e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027d20:	441e      	add	r6, r3
 8027d22:	9b07      	ldr	r3, [sp, #28]
 8027d24:	3b01      	subs	r3, #1
 8027d26:	9307      	str	r3, [sp, #28]
 8027d28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027d2a:	3302      	adds	r3, #2
 8027d2c:	930a      	str	r3, [sp, #40]	; 0x28
 8027d2e:	e695      	b.n	8027a5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8027d30:	d024      	beq.n	8027d7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8027d32:	9b07      	ldr	r3, [sp, #28]
 8027d34:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8027d36:	3b01      	subs	r3, #1
 8027d38:	fb00 4003 	mla	r0, r0, r3, r4
 8027d3c:	1400      	asrs	r0, r0, #16
 8027d3e:	f53f aeaa 	bmi.w	8027a96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027d42:	3901      	subs	r1, #1
 8027d44:	4288      	cmp	r0, r1
 8027d46:	f6bf aea6 	bge.w	8027a96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027d4a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8027d4c:	fb01 6303 	mla	r3, r1, r3, r6
 8027d50:	141b      	asrs	r3, r3, #16
 8027d52:	f53f aea0 	bmi.w	8027a96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027d56:	3a01      	subs	r2, #1
 8027d58:	4293      	cmp	r3, r2
 8027d5a:	f6bf ae9c 	bge.w	8027a96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027d5e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027d62:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8027d66:	f1bb 0f00 	cmp.w	fp, #0
 8027d6a:	f300 809a 	bgt.w	8027ea2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8027d6e:	9b07      	ldr	r3, [sp, #28]
 8027d70:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027d74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027d76:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8027d7a:	930a      	str	r3, [sp, #40]	; 0x28
 8027d7c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027d7e:	2b00      	cmp	r3, #0
 8027d80:	f340 81eb 	ble.w	802815a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027d84:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027d88:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027d8c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027d90:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027d92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027d96:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027d9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027d9e:	eef0 6a62 	vmov.f32	s13, s5
 8027da2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027da6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027daa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027dae:	ee16 4a90 	vmov	r4, s13
 8027db2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027db6:	eef0 6a43 	vmov.f32	s13, s6
 8027dba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027dbe:	ee12 2a90 	vmov	r2, s5
 8027dc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027dc6:	fb92 f3f3 	sdiv	r3, r2, r3
 8027dca:	ee13 2a10 	vmov	r2, s6
 8027dce:	9327      	str	r3, [sp, #156]	; 0x9c
 8027dd0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027dd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8027dd6:	9328      	str	r3, [sp, #160]	; 0xa0
 8027dd8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027dda:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8027ddc:	3b01      	subs	r3, #1
 8027dde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027de2:	9316      	str	r3, [sp, #88]	; 0x58
 8027de4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027de6:	bf08      	it	eq
 8027de8:	4613      	moveq	r3, r2
 8027dea:	ee16 6a90 	vmov	r6, s13
 8027dee:	9307      	str	r3, [sp, #28]
 8027df0:	eeb0 3a67 	vmov.f32	s6, s15
 8027df4:	eef0 2a47 	vmov.f32	s5, s14
 8027df8:	e622      	b.n	8027a40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8027dfa:	2800      	cmp	r0, #0
 8027dfc:	f43f ae92 	beq.w	8027b24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027e00:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8027e04:	9308      	str	r3, [sp, #32]
 8027e06:	0e1b      	lsrs	r3, r3, #24
 8027e08:	9310      	str	r3, [sp, #64]	; 0x40
 8027e0a:	e68b      	b.n	8027b24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027e0c:	8839      	ldrh	r1, [r7, #0]
 8027e0e:	4dd4      	ldr	r5, [pc, #848]	; (8028160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8027e10:	43db      	mvns	r3, r3
 8027e12:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8027e16:	fa5f f883 	uxtb.w	r8, r3
 8027e1a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8027e1e:	fb0e fe08 	mul.w	lr, lr, r8
 8027e22:	10c8      	asrs	r0, r1, #3
 8027e24:	00cb      	lsls	r3, r1, #3
 8027e26:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027e2a:	f10e 0101 	add.w	r1, lr, #1
 8027e2e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8027e32:	fb00 f008 	mul.w	r0, r0, r8
 8027e36:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8027e3a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8027e3e:	f100 0e01 	add.w	lr, r0, #1
 8027e42:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8027e46:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8027e4a:	b2db      	uxtb	r3, r3
 8027e4c:	b2c9      	uxtb	r1, r1
 8027e4e:	00d2      	lsls	r2, r2, #3
 8027e50:	fb03 f308 	mul.w	r3, r3, r8
 8027e54:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8027e58:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027e5c:	430a      	orrs	r2, r1
 8027e5e:	1c59      	adds	r1, r3, #1
 8027e60:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8027e64:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8027e68:	e748      	b.n	8027cfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8027e6a:	f112 0801 	adds.w	r8, r2, #1
 8027e6e:	f53f af4b 	bmi.w	8027d08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027e72:	4543      	cmp	r3, r8
 8027e74:	f6ff af48 	blt.w	8027d08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027e78:	f11c 0801 	adds.w	r8, ip, #1
 8027e7c:	f53f af44 	bmi.w	8027d08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027e80:	45c6      	cmp	lr, r8
 8027e82:	f6ff af41 	blt.w	8027d08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027e86:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8027e8a:	fa0f f28e 	sxth.w	r2, lr
 8027e8e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8027e92:	9200      	str	r2, [sp, #0]
 8027e94:	b21b      	sxth	r3, r3
 8027e96:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8027e98:	9819      	ldr	r0, [sp, #100]	; 0x64
 8027e9a:	4639      	mov	r1, r7
 8027e9c:	f7ff fc87 	bl	80277ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8027ea0:	e732      	b.n	8027d08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027ea2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027ea4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027ea6:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8027eaa:	1421      	asrs	r1, r4, #16
 8027eac:	1433      	asrs	r3, r6, #16
 8027eae:	fb07 1303 	mla	r3, r7, r3, r1
 8027eb2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8027eb4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8027eb8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8027ebc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027ec0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027ec4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8027ec8:	2a00      	cmp	r2, #0
 8027eca:	f000 8107 	beq.w	80280dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8027ece:	684d      	ldr	r5, [r1, #4]
 8027ed0:	950d      	str	r5, [sp, #52]	; 0x34
 8027ed2:	0e2d      	lsrs	r5, r5, #24
 8027ed4:	9514      	str	r5, [sp, #80]	; 0x50
 8027ed6:	b178      	cbz	r0, 8027ef8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8027ed8:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8027edc:	3f01      	subs	r7, #1
 8027ede:	00bf      	lsls	r7, r7, #2
 8027ee0:	3704      	adds	r7, #4
 8027ee2:	eb01 0e07 	add.w	lr, r1, r7
 8027ee6:	59c9      	ldr	r1, [r1, r7]
 8027ee8:	9109      	str	r1, [sp, #36]	; 0x24
 8027eea:	0e09      	lsrs	r1, r1, #24
 8027eec:	9111      	str	r1, [sp, #68]	; 0x44
 8027eee:	f8de 1004 	ldr.w	r1, [lr, #4]
 8027ef2:	910e      	str	r1, [sp, #56]	; 0x38
 8027ef4:	0e09      	lsrs	r1, r1, #24
 8027ef6:	9115      	str	r1, [sp, #84]	; 0x54
 8027ef8:	b292      	uxth	r2, r2
 8027efa:	b280      	uxth	r0, r0
 8027efc:	fb02 f900 	mul.w	r9, r2, r0
 8027f00:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8027f04:	0112      	lsls	r2, r2, #4
 8027f06:	eba2 0e09 	sub.w	lr, r2, r9
 8027f0a:	b280      	uxth	r0, r0
 8027f0c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8027f10:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8027f12:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027f14:	fa1f fe8e 	uxth.w	lr, lr
 8027f18:	1a09      	subs	r1, r1, r0
 8027f1a:	b289      	uxth	r1, r1
 8027f1c:	fb0e f202 	mul.w	r2, lr, r2
 8027f20:	fb01 220c 	mla	r2, r1, ip, r2
 8027f24:	fb00 2205 	mla	r2, r0, r5, r2
 8027f28:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027f2a:	fb09 2205 	mla	r2, r9, r5, r2
 8027f2e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8027f32:	2a00      	cmp	r2, #0
 8027f34:	f000 80c9 	beq.w	80280ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8027f38:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8027f3c:	d019      	beq.n	8027f72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8027f3e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8027f42:	fb0c fa0a 	mul.w	sl, ip, sl
 8027f46:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027f4a:	fb0c fc03 	mul.w	ip, ip, r3
 8027f4e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027f52:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027f56:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027f5a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8027f5e:	4453      	add	r3, sl
 8027f60:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8027f64:	0a1b      	lsrs	r3, r3, #8
 8027f66:	0a3f      	lsrs	r7, r7, #8
 8027f68:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027f6c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8027f70:	433b      	orrs	r3, r7
 8027f72:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027f74:	2dff      	cmp	r5, #255	; 0xff
 8027f76:	d020      	beq.n	8027fba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8027f78:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027f7a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027f7e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027f80:	436f      	muls	r7, r5
 8027f82:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8027f84:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027f88:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027f8a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027f8e:	fb05 fa0a 	mul.w	sl, r5, sl
 8027f92:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027f96:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027f9a:	44bc      	add	ip, r7
 8027f9c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027fa0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027fa4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027fa8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027fac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027fb0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027fb4:	ea4c 050a 	orr.w	r5, ip, sl
 8027fb8:	950d      	str	r5, [sp, #52]	; 0x34
 8027fba:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027fbc:	2dff      	cmp	r5, #255	; 0xff
 8027fbe:	d020      	beq.n	8028002 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8027fc0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027fc2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027fc6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027fc8:	436f      	muls	r7, r5
 8027fca:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027fcc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8027fd0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027fd2:	fb05 fa0c 	mul.w	sl, r5, ip
 8027fd6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027fda:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027fde:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027fe2:	44bc      	add	ip, r7
 8027fe4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027fe8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027fec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027ff0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027ff4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027ff8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027ffc:	ea4c 050a 	orr.w	r5, ip, sl
 8028000:	9509      	str	r5, [sp, #36]	; 0x24
 8028002:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028004:	2dff      	cmp	r5, #255	; 0xff
 8028006:	d020      	beq.n	802804a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8028008:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802800a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802800e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028010:	436f      	muls	r7, r5
 8028012:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028014:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8028018:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802801a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802801e:	fb05 fa0a 	mul.w	sl, r5, sl
 8028022:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028026:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802802a:	44bc      	add	ip, r7
 802802c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028030:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028034:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028038:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802803c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028040:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028044:	ea4c 050a 	orr.w	r5, ip, sl
 8028048:	950e      	str	r5, [sp, #56]	; 0x38
 802804a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802804c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8028050:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8028052:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8028056:	fb0e f707 	mul.w	r7, lr, r7
 802805a:	fb01 770c 	mla	r7, r1, ip, r7
 802805e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8028062:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028064:	fb00 770c 	mla	r7, r0, ip, r7
 8028068:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802806c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802806e:	fb09 770c 	mla	r7, r9, ip, r7
 8028072:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8028076:	fb0e fe0c 	mul.w	lr, lr, ip
 802807a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802807e:	fb01 e303 	mla	r3, r1, r3, lr
 8028082:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028084:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8028088:	990e      	ldr	r1, [sp, #56]	; 0x38
 802808a:	fb00 330a 	mla	r3, r0, sl, r3
 802808e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8028092:	fb09 3c0c 	mla	ip, r9, ip, r3
 8028096:	0a3f      	lsrs	r7, r7, #8
 8028098:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802809c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80280a0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80280a4:	ea47 070c 	orr.w	r7, r7, ip
 80280a8:	2aff      	cmp	r2, #255	; 0xff
 80280aa:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80280ae:	d11e      	bne.n	80280ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80280b0:	097a      	lsrs	r2, r7, #5
 80280b2:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80280b6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80280ba:	f023 0307 	bic.w	r3, r3, #7
 80280be:	4313      	orrs	r3, r2
 80280c0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80280c4:	431f      	orrs	r7, r3
 80280c6:	f8a8 7000 	strh.w	r7, [r8]
 80280ca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80280cc:	441c      	add	r4, r3
 80280ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80280d0:	f108 0802 	add.w	r8, r8, #2
 80280d4:	441e      	add	r6, r3
 80280d6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80280da:	e644      	b.n	8027d66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80280dc:	2800      	cmp	r0, #0
 80280de:	f43f af0b 	beq.w	8027ef8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80280e2:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80280e6:	9109      	str	r1, [sp, #36]	; 0x24
 80280e8:	0e09      	lsrs	r1, r1, #24
 80280ea:	9111      	str	r1, [sp, #68]	; 0x44
 80280ec:	e704      	b.n	8027ef8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80280ee:	f8b8 1000 	ldrh.w	r1, [r8]
 80280f2:	43d2      	mvns	r2, r2
 80280f4:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80280f8:	fa5f fe82 	uxtb.w	lr, r2
 80280fc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8028100:	fb0c fc0e 	mul.w	ip, ip, lr
 8028104:	10c8      	asrs	r0, r1, #3
 8028106:	00ca      	lsls	r2, r1, #3
 8028108:	f10c 0101 	add.w	r1, ip, #1
 802810c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028110:	0c39      	lsrs	r1, r7, #16
 8028112:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028116:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802811a:	4911      	ldr	r1, [pc, #68]	; (8028160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802811c:	fb00 f00e 	mul.w	r0, r0, lr
 8028120:	fa5f fc8c 	uxtb.w	ip, ip
 8028124:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8028128:	b2d2      	uxtb	r2, r2
 802812a:	1c41      	adds	r1, r0, #1
 802812c:	fb02 f20e 	mul.w	r2, r2, lr
 8028130:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8028134:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8028138:	1c51      	adds	r1, r2, #1
 802813a:	00c0      	lsls	r0, r0, #3
 802813c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8028140:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028144:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8028148:	ea4c 0c00 	orr.w	ip, ip, r0
 802814c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8028150:	ea47 0c0c 	orr.w	ip, r7, ip
 8028154:	f8a8 c000 	strh.w	ip, [r8]
 8028158:	e7b7      	b.n	80280ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802815a:	b01b      	add	sp, #108	; 0x6c
 802815c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028160:	fffff800 	.word	0xfffff800

08028164 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8028164:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028168:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802816c:	2d00      	cmp	r5, #0
 802816e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8028172:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8028176:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802817a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802817e:	fb05 0e03 	mla	lr, r5, r3, r0
 8028182:	f2c0 808c 	blt.w	802829e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8028186:	45a9      	cmp	r9, r5
 8028188:	f340 8089 	ble.w	802829e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802818c:	2800      	cmp	r0, #0
 802818e:	f2c0 8084 	blt.w	802829a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8028192:	4580      	cmp	r8, r0
 8028194:	f340 8081 	ble.w	802829a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8028198:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802819c:	f01e 0f01 	tst.w	lr, #1
 80281a0:	5d16      	ldrb	r6, [r2, r4]
 80281a2:	bf0c      	ite	eq
 80281a4:	f006 060f 	andeq.w	r6, r6, #15
 80281a8:	1136      	asrne	r6, r6, #4
 80281aa:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80281ae:	b2f6      	uxtb	r6, r6
 80281b0:	1c44      	adds	r4, r0, #1
 80281b2:	d477      	bmi.n	80282a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80281b4:	45a0      	cmp	r8, r4
 80281b6:	dd75      	ble.n	80282a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80281b8:	2f00      	cmp	r7, #0
 80281ba:	d075      	beq.n	80282a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80281bc:	f10e 0a01 	add.w	sl, lr, #1
 80281c0:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80281c4:	f01a 0f01 	tst.w	sl, #1
 80281c8:	5d14      	ldrb	r4, [r2, r4]
 80281ca:	bf0c      	ite	eq
 80281cc:	f004 040f 	andeq.w	r4, r4, #15
 80281d0:	1124      	asrne	r4, r4, #4
 80281d2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80281d6:	b2e4      	uxtb	r4, r4
 80281d8:	3501      	adds	r5, #1
 80281da:	d469      	bmi.n	80282b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80281dc:	45a9      	cmp	r9, r5
 80281de:	dd67      	ble.n	80282b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80281e0:	f1bc 0f00 	cmp.w	ip, #0
 80281e4:	d067      	beq.n	80282b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80281e6:	2800      	cmp	r0, #0
 80281e8:	db60      	blt.n	80282ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80281ea:	4580      	cmp	r8, r0
 80281ec:	dd5e      	ble.n	80282ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80281ee:	eb03 090e 	add.w	r9, r3, lr
 80281f2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80281f6:	f019 0f01 	tst.w	r9, #1
 80281fa:	5d55      	ldrb	r5, [r2, r5]
 80281fc:	bf0c      	ite	eq
 80281fe:	f005 050f 	andeq.w	r5, r5, #15
 8028202:	112d      	asrne	r5, r5, #4
 8028204:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028208:	b2ed      	uxtb	r5, r5
 802820a:	3001      	adds	r0, #1
 802820c:	d456      	bmi.n	80282bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802820e:	4580      	cmp	r8, r0
 8028210:	dd54      	ble.n	80282bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8028212:	2f00      	cmp	r7, #0
 8028214:	d054      	beq.n	80282c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8028216:	3301      	adds	r3, #1
 8028218:	449e      	add	lr, r3
 802821a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802821e:	f01e 0f01 	tst.w	lr, #1
 8028222:	5cd0      	ldrb	r0, [r2, r3]
 8028224:	bf0c      	ite	eq
 8028226:	f000 000f 	andeq.w	r0, r0, #15
 802822a:	1100      	asrne	r0, r0, #4
 802822c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028230:	b2c3      	uxtb	r3, r0
 8028232:	b2ba      	uxth	r2, r7
 8028234:	fa1f fc8c 	uxth.w	ip, ip
 8028238:	fb02 f00c 	mul.w	r0, r2, ip
 802823c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8028240:	0112      	lsls	r2, r2, #4
 8028242:	fa1f fc8c 	uxth.w	ip, ip
 8028246:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802824a:	1a12      	subs	r2, r2, r0
 802824c:	eba7 070c 	sub.w	r7, r7, ip
 8028250:	b292      	uxth	r2, r2
 8028252:	b2bf      	uxth	r7, r7
 8028254:	4362      	muls	r2, r4
 8028256:	fb06 2207 	mla	r2, r6, r7, r2
 802825a:	fb0c 2505 	mla	r5, ip, r5, r2
 802825e:	fb00 5303 	mla	r3, r0, r3, r5
 8028262:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028266:	b1b3      	cbz	r3, 8028296 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8028268:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 802826c:	435a      	muls	r2, r3
 802826e:	1c53      	adds	r3, r2, #1
 8028270:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028274:	4a2d      	ldr	r2, [pc, #180]	; (802832c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8028276:	121b      	asrs	r3, r3, #8
 8028278:	6812      	ldr	r2, [r2, #0]
 802827a:	2bff      	cmp	r3, #255	; 0xff
 802827c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8028280:	d120      	bne.n	80282c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8028282:	4b2b      	ldr	r3, [pc, #172]	; (8028330 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8028284:	0950      	lsrs	r0, r2, #5
 8028286:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802828a:	4033      	ands	r3, r6
 802828c:	4318      	orrs	r0, r3
 802828e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028292:	4302      	orrs	r2, r0
 8028294:	800a      	strh	r2, [r1, #0]
 8028296:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802829a:	2600      	movs	r6, #0
 802829c:	e788      	b.n	80281b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802829e:	2400      	movs	r4, #0
 80282a0:	4626      	mov	r6, r4
 80282a2:	e799      	b.n	80281d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80282a4:	2400      	movs	r4, #0
 80282a6:	e797      	b.n	80281d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80282a8:	463c      	mov	r4, r7
 80282aa:	e795      	b.n	80281d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80282ac:	2500      	movs	r5, #0
 80282ae:	e7ac      	b.n	802820a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80282b0:	2300      	movs	r3, #0
 80282b2:	461d      	mov	r5, r3
 80282b4:	e7bd      	b.n	8028232 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80282b6:	4663      	mov	r3, ip
 80282b8:	4665      	mov	r5, ip
 80282ba:	e7ba      	b.n	8028232 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80282bc:	2300      	movs	r3, #0
 80282be:	e7b8      	b.n	8028232 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80282c0:	463b      	mov	r3, r7
 80282c2:	e7b6      	b.n	8028232 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80282c4:	880d      	ldrh	r5, [r1, #0]
 80282c6:	b29f      	uxth	r7, r3
 80282c8:	122c      	asrs	r4, r5, #8
 80282ca:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80282ce:	43db      	mvns	r3, r3
 80282d0:	b2db      	uxtb	r3, r3
 80282d2:	fb10 f007 	smulbb	r0, r0, r7
 80282d6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80282da:	fb04 0403 	mla	r4, r4, r3, r0
 80282de:	b2f6      	uxtb	r6, r6
 80282e0:	10e8      	asrs	r0, r5, #3
 80282e2:	b2d2      	uxtb	r2, r2
 80282e4:	00ed      	lsls	r5, r5, #3
 80282e6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80282ea:	fb12 f207 	smulbb	r2, r2, r7
 80282ee:	fb16 f607 	smulbb	r6, r6, r7
 80282f2:	b2ed      	uxtb	r5, r5
 80282f4:	b2a4      	uxth	r4, r4
 80282f6:	fb00 6603 	mla	r6, r0, r3, r6
 80282fa:	fb05 2303 	mla	r3, r5, r3, r2
 80282fe:	b29a      	uxth	r2, r3
 8028300:	1c63      	adds	r3, r4, #1
 8028302:	b2b0      	uxth	r0, r6
 8028304:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028308:	1c53      	adds	r3, r2, #1
 802830a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802830e:	1c42      	adds	r2, r0, #1
 8028310:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028314:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028318:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802831c:	0940      	lsrs	r0, r0, #5
 802831e:	4323      	orrs	r3, r4
 8028320:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028324:	4303      	orrs	r3, r0
 8028326:	800b      	strh	r3, [r1, #0]
 8028328:	e7b5      	b.n	8028296 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802832a:	bf00      	nop
 802832c:	20013864 	.word	0x20013864
 8028330:	00fff800 	.word	0x00fff800

08028334 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028338:	b097      	sub	sp, #92	; 0x5c
 802833a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802833e:	9214      	str	r2, [sp, #80]	; 0x50
 8028340:	9309      	str	r3, [sp, #36]	; 0x24
 8028342:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8028344:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8028348:	910d      	str	r1, [sp, #52]	; 0x34
 802834a:	930f      	str	r3, [sp, #60]	; 0x3c
 802834c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8028350:	9015      	str	r0, [sp, #84]	; 0x54
 8028352:	6850      	ldr	r0, [r2, #4]
 8028354:	6812      	ldr	r2, [r2, #0]
 8028356:	fb00 1303 	mla	r3, r0, r3, r1
 802835a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802835e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028360:	689b      	ldr	r3, [r3, #8]
 8028362:	3301      	adds	r3, #1
 8028364:	f023 0301 	bic.w	r3, r3, #1
 8028368:	930a      	str	r3, [sp, #40]	; 0x28
 802836a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802836c:	681f      	ldr	r7, [r3, #0]
 802836e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028370:	2b00      	cmp	r3, #0
 8028372:	dc03      	bgt.n	802837c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8028374:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8028376:	2b00      	cmp	r3, #0
 8028378:	f340 8287 	ble.w	802888a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802837c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802837e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028382:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028386:	1e48      	subs	r0, r1, #1
 8028388:	f102 3cff 	add.w	ip, r2, #4294967295
 802838c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802838e:	2b00      	cmp	r3, #0
 8028390:	f340 80c4 	ble.w	802851c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8028394:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028398:	ea4f 4326 	mov.w	r3, r6, asr #16
 802839c:	d406      	bmi.n	80283ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802839e:	4586      	cmp	lr, r0
 80283a0:	da04      	bge.n	80283ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80283a2:	2b00      	cmp	r3, #0
 80283a4:	db02      	blt.n	80283ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80283a6:	4563      	cmp	r3, ip
 80283a8:	f2c0 80b9 	blt.w	802851e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80283ac:	f11e 0e01 	adds.w	lr, lr, #1
 80283b0:	f100 80aa 	bmi.w	8028508 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80283b4:	4571      	cmp	r1, lr
 80283b6:	f2c0 80a7 	blt.w	8028508 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80283ba:	3301      	adds	r3, #1
 80283bc:	f100 80a4 	bmi.w	8028508 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80283c0:	429a      	cmp	r2, r3
 80283c2:	f2c0 80a1 	blt.w	8028508 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80283c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80283c8:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80283cc:	930e      	str	r3, [sp, #56]	; 0x38
 80283ce:	46c8      	mov	r8, r9
 80283d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80283d2:	2b00      	cmp	r3, #0
 80283d4:	f340 80c3 	ble.w	802855e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80283d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80283da:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80283de:	1423      	asrs	r3, r4, #16
 80283e0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80283e4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80283e8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80283ec:	f100 814d 	bmi.w	802868a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80283f0:	f10c 3bff 	add.w	fp, ip, #4294967295
 80283f4:	455b      	cmp	r3, fp
 80283f6:	f280 8148 	bge.w	802868a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80283fa:	2800      	cmp	r0, #0
 80283fc:	f2c0 8145 	blt.w	802868a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028400:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028404:	4558      	cmp	r0, fp
 8028406:	f280 8140 	bge.w	802868a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802840a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802840c:	fb00 3305 	mla	r3, r0, r5, r3
 8028410:	0858      	lsrs	r0, r3, #1
 8028412:	07dd      	lsls	r5, r3, #31
 8028414:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028418:	bf54      	ite	pl
 802841a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802841e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028422:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028426:	fa5f fc8c 	uxtb.w	ip, ip
 802842a:	2a00      	cmp	r2, #0
 802842c:	f000 80db 	beq.w	80285e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8028430:	1c58      	adds	r0, r3, #1
 8028432:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8028436:	07c0      	lsls	r0, r0, #31
 8028438:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802843c:	bf54      	ite	pl
 802843e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8028442:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8028446:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802844a:	fa5f f08e 	uxtb.w	r0, lr
 802844e:	9010      	str	r0, [sp, #64]	; 0x40
 8028450:	b1c9      	cbz	r1, 8028486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028452:	4453      	add	r3, sl
 8028454:	0858      	lsrs	r0, r3, #1
 8028456:	07dd      	lsls	r5, r3, #31
 8028458:	5c38      	ldrb	r0, [r7, r0]
 802845a:	bf54      	ite	pl
 802845c:	f000 000f 	andpl.w	r0, r0, #15
 8028460:	1100      	asrmi	r0, r0, #4
 8028462:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028466:	3301      	adds	r3, #1
 8028468:	b2c0      	uxtb	r0, r0
 802846a:	900b      	str	r0, [sp, #44]	; 0x2c
 802846c:	0858      	lsrs	r0, r3, #1
 802846e:	07dd      	lsls	r5, r3, #31
 8028470:	f817 e000 	ldrb.w	lr, [r7, r0]
 8028474:	bf54      	ite	pl
 8028476:	f00e 030f 	andpl.w	r3, lr, #15
 802847a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802847e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028482:	b2db      	uxtb	r3, r3
 8028484:	9311      	str	r3, [sp, #68]	; 0x44
 8028486:	b292      	uxth	r2, r2
 8028488:	b289      	uxth	r1, r1
 802848a:	fb02 f301 	mul.w	r3, r2, r1
 802848e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028492:	0112      	lsls	r2, r2, #4
 8028494:	b289      	uxth	r1, r1
 8028496:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802849a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802849c:	1ad2      	subs	r2, r2, r3
 802849e:	1a40      	subs	r0, r0, r1
 80284a0:	b292      	uxth	r2, r2
 80284a2:	436a      	muls	r2, r5
 80284a4:	b280      	uxth	r0, r0
 80284a6:	fb0c 2c00 	mla	ip, ip, r0, r2
 80284aa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80284ac:	fb01 c102 	mla	r1, r1, r2, ip
 80284b0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80284b2:	fb03 1302 	mla	r3, r3, r2, r1
 80284b6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80284ba:	b1db      	cbz	r3, 80284f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80284bc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80284be:	4353      	muls	r3, r2
 80284c0:	1c5a      	adds	r2, r3, #1
 80284c2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80284c6:	4ac6      	ldr	r2, [pc, #792]	; (80287e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80284c8:	121b      	asrs	r3, r3, #8
 80284ca:	6812      	ldr	r2, [r2, #0]
 80284cc:	2bff      	cmp	r3, #255	; 0xff
 80284ce:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80284d2:	f040 8099 	bne.w	8028608 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 80284d6:	0953      	lsrs	r3, r2, #5
 80284d8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80284dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80284e0:	f02c 0c07 	bic.w	ip, ip, #7
 80284e4:	ea43 0c0c 	orr.w	ip, r3, ip
 80284e8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80284ec:	ea4c 0202 	orr.w	r2, ip, r2
 80284f0:	f8a8 2000 	strh.w	r2, [r8]
 80284f4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80284f6:	441c      	add	r4, r3
 80284f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80284fa:	441e      	add	r6, r3
 80284fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80284fe:	3b01      	subs	r3, #1
 8028500:	f108 0802 	add.w	r8, r8, #2
 8028504:	930e      	str	r3, [sp, #56]	; 0x38
 8028506:	e763      	b.n	80283d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8028508:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802850a:	441c      	add	r4, r3
 802850c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802850e:	441e      	add	r6, r3
 8028510:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028512:	3b01      	subs	r3, #1
 8028514:	9309      	str	r3, [sp, #36]	; 0x24
 8028516:	f109 0902 	add.w	r9, r9, #2
 802851a:	e737      	b.n	802838c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802851c:	d024      	beq.n	8028568 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802851e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028520:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8028522:	3b01      	subs	r3, #1
 8028524:	fb00 4003 	mla	r0, r0, r3, r4
 8028528:	1400      	asrs	r0, r0, #16
 802852a:	f53f af4c 	bmi.w	80283c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802852e:	3901      	subs	r1, #1
 8028530:	4288      	cmp	r0, r1
 8028532:	f6bf af48 	bge.w	80283c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028536:	9924      	ldr	r1, [sp, #144]	; 0x90
 8028538:	fb01 6303 	mla	r3, r1, r3, r6
 802853c:	141b      	asrs	r3, r3, #16
 802853e:	f53f af42 	bmi.w	80283c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028542:	3a01      	subs	r2, #1
 8028544:	4293      	cmp	r3, r2
 8028546:	f6bf af3e 	bge.w	80283c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802854a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802854e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8028552:	930e      	str	r3, [sp, #56]	; 0x38
 8028554:	46c8      	mov	r8, r9
 8028556:	f1bb 0f00 	cmp.w	fp, #0
 802855a:	f300 80b7 	bgt.w	80286cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802855e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028560:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8028564:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8028568:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802856a:	2b00      	cmp	r3, #0
 802856c:	f340 818d 	ble.w	802888a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8028570:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028574:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028578:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802857c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802857e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028582:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028586:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802858a:	eef0 6a62 	vmov.f32	s13, s5
 802858e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028592:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028596:	ee77 2a62 	vsub.f32	s5, s14, s5
 802859a:	ee16 4a90 	vmov	r4, s13
 802859e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80285a2:	eef0 6a43 	vmov.f32	s13, s6
 80285a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80285aa:	ee12 2a90 	vmov	r2, s5
 80285ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80285b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80285b6:	ee13 2a10 	vmov	r2, s6
 80285ba:	9323      	str	r3, [sp, #140]	; 0x8c
 80285bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80285be:	fb92 f3f3 	sdiv	r3, r2, r3
 80285c2:	9324      	str	r3, [sp, #144]	; 0x90
 80285c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80285c6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80285c8:	3b01      	subs	r3, #1
 80285ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80285ce:	930d      	str	r3, [sp, #52]	; 0x34
 80285d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80285d2:	bf08      	it	eq
 80285d4:	4613      	moveq	r3, r2
 80285d6:	ee16 6a90 	vmov	r6, s13
 80285da:	9309      	str	r3, [sp, #36]	; 0x24
 80285dc:	eeb0 3a67 	vmov.f32	s6, s15
 80285e0:	eef0 2a47 	vmov.f32	s5, s14
 80285e4:	e6c3      	b.n	802836e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80285e6:	2900      	cmp	r1, #0
 80285e8:	f43f af4d 	beq.w	8028486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80285ec:	eb0a 0003 	add.w	r0, sl, r3
 80285f0:	0843      	lsrs	r3, r0, #1
 80285f2:	07c0      	lsls	r0, r0, #31
 80285f4:	5cfb      	ldrb	r3, [r7, r3]
 80285f6:	bf54      	ite	pl
 80285f8:	f003 030f 	andpl.w	r3, r3, #15
 80285fc:	111b      	asrmi	r3, r3, #4
 80285fe:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028602:	b2db      	uxtb	r3, r3
 8028604:	930b      	str	r3, [sp, #44]	; 0x2c
 8028606:	e73e      	b.n	8028486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028608:	f8b8 e000 	ldrh.w	lr, [r8]
 802860c:	fa1f fb83 	uxth.w	fp, r3
 8028610:	ea4f 202e 	mov.w	r0, lr, asr #8
 8028614:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8028618:	43db      	mvns	r3, r3
 802861a:	b2db      	uxtb	r3, r3
 802861c:	fb11 f10b 	smulbb	r1, r1, fp
 8028620:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8028624:	fb00 1003 	mla	r0, r0, r3, r1
 8028628:	fa5f fc8c 	uxtb.w	ip, ip
 802862c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8028630:	b2d2      	uxtb	r2, r2
 8028632:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8028636:	b280      	uxth	r0, r0
 8028638:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802863c:	fb1c fc0b 	smulbb	ip, ip, fp
 8028640:	fa5f fe8e 	uxtb.w	lr, lr
 8028644:	fb12 fb0b 	smulbb	fp, r2, fp
 8028648:	fb01 cc03 	mla	ip, r1, r3, ip
 802864c:	fb0e bb03 	mla	fp, lr, r3, fp
 8028650:	1c43      	adds	r3, r0, #1
 8028652:	fa1f fc8c 	uxth.w	ip, ip
 8028656:	fa1f fb8b 	uxth.w	fp, fp
 802865a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802865e:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8028662:	f10c 0101 	add.w	r1, ip, #1
 8028666:	f10b 0001 	add.w	r0, fp, #1
 802866a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802866e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028672:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8028676:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802867a:	4318      	orrs	r0, r3
 802867c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028680:	ea40 000c 	orr.w	r0, r0, ip
 8028684:	f8a8 0000 	strh.w	r0, [r8]
 8028688:	e734      	b.n	80284f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802868a:	f113 0b01 	adds.w	fp, r3, #1
 802868e:	f53f af31 	bmi.w	80284f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028692:	45dc      	cmp	ip, fp
 8028694:	f6ff af2e 	blt.w	80284f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028698:	f110 0b01 	adds.w	fp, r0, #1
 802869c:	f53f af2a 	bmi.w	80284f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80286a0:	45de      	cmp	lr, fp
 80286a2:	f6ff af27 	blt.w	80284f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80286a6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80286a8:	9302      	str	r3, [sp, #8]
 80286aa:	fa0f f38e 	sxth.w	r3, lr
 80286ae:	9301      	str	r3, [sp, #4]
 80286b0:	fa0f f38c 	sxth.w	r3, ip
 80286b4:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80286b8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80286bc:	9300      	str	r3, [sp, #0]
 80286be:	463a      	mov	r2, r7
 80286c0:	4653      	mov	r3, sl
 80286c2:	4641      	mov	r1, r8
 80286c4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80286c6:	f7ff fd4d 	bl	8028164 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80286ca:	e713      	b.n	80284f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80286cc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80286ce:	1422      	asrs	r2, r4, #16
 80286d0:	1433      	asrs	r3, r6, #16
 80286d2:	fb05 2303 	mla	r3, r5, r3, r2
 80286d6:	085a      	lsrs	r2, r3, #1
 80286d8:	07dd      	lsls	r5, r3, #31
 80286da:	5cba      	ldrb	r2, [r7, r2]
 80286dc:	bf54      	ite	pl
 80286de:	f002 020f 	andpl.w	r2, r2, #15
 80286e2:	1112      	asrmi	r2, r2, #4
 80286e4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80286e8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80286ec:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80286f0:	b2d2      	uxtb	r2, r2
 80286f2:	2900      	cmp	r1, #0
 80286f4:	d076      	beq.n	80287e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80286f6:	f103 0e01 	add.w	lr, r3, #1
 80286fa:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80286fe:	f01e 0f01 	tst.w	lr, #1
 8028702:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028706:	bf0c      	ite	eq
 8028708:	f00c 0c0f 	andeq.w	ip, ip, #15
 802870c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8028710:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028714:	fa5f f58c 	uxtb.w	r5, ip
 8028718:	9512      	str	r5, [sp, #72]	; 0x48
 802871a:	b300      	cbz	r0, 802875e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802871c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802871e:	442b      	add	r3, r5
 8028720:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028724:	07dd      	lsls	r5, r3, #31
 8028726:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802872a:	bf54      	ite	pl
 802872c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028730:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028734:	3301      	adds	r3, #1
 8028736:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802873a:	fa5f f58c 	uxtb.w	r5, ip
 802873e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028742:	950c      	str	r5, [sp, #48]	; 0x30
 8028744:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028748:	07dd      	lsls	r5, r3, #31
 802874a:	bf54      	ite	pl
 802874c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028750:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028754:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028758:	fa5f f38c 	uxtb.w	r3, ip
 802875c:	9313      	str	r3, [sp, #76]	; 0x4c
 802875e:	b289      	uxth	r1, r1
 8028760:	b280      	uxth	r0, r0
 8028762:	fb01 f300 	mul.w	r3, r1, r0
 8028766:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802876a:	0109      	lsls	r1, r1, #4
 802876c:	b280      	uxth	r0, r0
 802876e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8028772:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8028774:	1ac9      	subs	r1, r1, r3
 8028776:	ebac 0c00 	sub.w	ip, ip, r0
 802877a:	b289      	uxth	r1, r1
 802877c:	4369      	muls	r1, r5
 802877e:	fa1f fc8c 	uxth.w	ip, ip
 8028782:	fb02 120c 	mla	r2, r2, ip, r1
 8028786:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028788:	fb00 2001 	mla	r0, r0, r1, r2
 802878c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802878e:	fb03 0302 	mla	r3, r3, r2, r0
 8028792:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028796:	b1d3      	cbz	r3, 80287ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028798:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802879a:	4353      	muls	r3, r2
 802879c:	1c5a      	adds	r2, r3, #1
 802879e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80287a2:	4a0f      	ldr	r2, [pc, #60]	; (80287e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80287a4:	121b      	asrs	r3, r3, #8
 80287a6:	6812      	ldr	r2, [r2, #0]
 80287a8:	2bff      	cmp	r3, #255	; 0xff
 80287aa:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80287ae:	d12d      	bne.n	802880c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80287b0:	0953      	lsrs	r3, r2, #5
 80287b2:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80287b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80287ba:	f02c 0c07 	bic.w	ip, ip, #7
 80287be:	ea43 0c0c 	orr.w	ip, r3, ip
 80287c2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80287c6:	ea4c 0202 	orr.w	r2, ip, r2
 80287ca:	f8a8 2000 	strh.w	r2, [r8]
 80287ce:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80287d0:	441c      	add	r4, r3
 80287d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80287d4:	f108 0802 	add.w	r8, r8, #2
 80287d8:	441e      	add	r6, r3
 80287da:	f10b 3bff 	add.w	fp, fp, #4294967295
 80287de:	e6ba      	b.n	8028556 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80287e0:	20013864 	.word	0x20013864
 80287e4:	2800      	cmp	r0, #0
 80287e6:	d0ba      	beq.n	802875e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80287e8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80287ea:	442b      	add	r3, r5
 80287ec:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80287f0:	07db      	lsls	r3, r3, #31
 80287f2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80287f6:	bf54      	ite	pl
 80287f8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80287fc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028800:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028804:	fa5f f38c 	uxtb.w	r3, ip
 8028808:	930c      	str	r3, [sp, #48]	; 0x30
 802880a:	e7a8      	b.n	802875e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802880c:	f8b8 e000 	ldrh.w	lr, [r8]
 8028810:	fa1f fa83 	uxth.w	sl, r3
 8028814:	ea4f 202e 	mov.w	r0, lr, asr #8
 8028818:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802881c:	43db      	mvns	r3, r3
 802881e:	b2db      	uxtb	r3, r3
 8028820:	fb11 f10a 	smulbb	r1, r1, sl
 8028824:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8028828:	fb00 1003 	mla	r0, r0, r3, r1
 802882c:	b2d2      	uxtb	r2, r2
 802882e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8028832:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8028836:	fa5f fe8e 	uxtb.w	lr, lr
 802883a:	fb12 f20a 	smulbb	r2, r2, sl
 802883e:	fb0e 2203 	mla	r2, lr, r3, r2
 8028842:	fa5f fc8c 	uxtb.w	ip, ip
 8028846:	b280      	uxth	r0, r0
 8028848:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802884c:	b292      	uxth	r2, r2
 802884e:	fb1c fc0a 	smulbb	ip, ip, sl
 8028852:	fb01 cc03 	mla	ip, r1, r3, ip
 8028856:	1c43      	adds	r3, r0, #1
 8028858:	1c51      	adds	r1, r2, #1
 802885a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802885e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8028862:	fa1f fc8c 	uxth.w	ip, ip
 8028866:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802886a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802886e:	4308      	orrs	r0, r1
 8028870:	f10c 0101 	add.w	r1, ip, #1
 8028874:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028878:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802887c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028880:	ea40 000c 	orr.w	r0, r0, ip
 8028884:	f8a8 0000 	strh.w	r0, [r8]
 8028888:	e7a1      	b.n	80287ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802888a:	b017      	add	sp, #92	; 0x5c
 802888c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028890 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8028890:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028894:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8028898:	2d00      	cmp	r5, #0
 802889a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802889e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80288a2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80288a6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80288aa:	fb05 0e03 	mla	lr, r5, r3, r0
 80288ae:	f2c0 80b0 	blt.w	8028a12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80288b2:	45a9      	cmp	r9, r5
 80288b4:	f340 80ad 	ble.w	8028a12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80288b8:	2800      	cmp	r0, #0
 80288ba:	f2c0 80a8 	blt.w	8028a0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80288be:	4580      	cmp	r8, r0
 80288c0:	f340 80a5 	ble.w	8028a0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80288c4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80288c8:	f01e 0f01 	tst.w	lr, #1
 80288cc:	5d16      	ldrb	r6, [r2, r4]
 80288ce:	bf0c      	ite	eq
 80288d0:	f006 060f 	andeq.w	r6, r6, #15
 80288d4:	1136      	asrne	r6, r6, #4
 80288d6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80288da:	b2f6      	uxtb	r6, r6
 80288dc:	1c44      	adds	r4, r0, #1
 80288de:	f100 809b 	bmi.w	8028a18 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80288e2:	45a0      	cmp	r8, r4
 80288e4:	f340 8098 	ble.w	8028a18 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80288e8:	2f00      	cmp	r7, #0
 80288ea:	f000 8097 	beq.w	8028a1c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 80288ee:	f10e 0a01 	add.w	sl, lr, #1
 80288f2:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80288f6:	f01a 0f01 	tst.w	sl, #1
 80288fa:	5d14      	ldrb	r4, [r2, r4]
 80288fc:	bf0c      	ite	eq
 80288fe:	f004 040f 	andeq.w	r4, r4, #15
 8028902:	1124      	asrne	r4, r4, #4
 8028904:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028908:	b2e4      	uxtb	r4, r4
 802890a:	3501      	adds	r5, #1
 802890c:	f100 808a 	bmi.w	8028a24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028910:	45a9      	cmp	r9, r5
 8028912:	f340 8087 	ble.w	8028a24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028916:	f1bc 0f00 	cmp.w	ip, #0
 802891a:	f000 8086 	beq.w	8028a2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802891e:	2800      	cmp	r0, #0
 8028920:	db7e      	blt.n	8028a20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028922:	4580      	cmp	r8, r0
 8028924:	dd7c      	ble.n	8028a20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028926:	eb03 090e 	add.w	r9, r3, lr
 802892a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802892e:	f019 0f01 	tst.w	r9, #1
 8028932:	5d55      	ldrb	r5, [r2, r5]
 8028934:	bf0c      	ite	eq
 8028936:	f005 050f 	andeq.w	r5, r5, #15
 802893a:	112d      	asrne	r5, r5, #4
 802893c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028940:	b2ed      	uxtb	r5, r5
 8028942:	3001      	adds	r0, #1
 8028944:	d474      	bmi.n	8028a30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028946:	4580      	cmp	r8, r0
 8028948:	dd72      	ble.n	8028a30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802894a:	2f00      	cmp	r7, #0
 802894c:	d072      	beq.n	8028a34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802894e:	3301      	adds	r3, #1
 8028950:	449e      	add	lr, r3
 8028952:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8028956:	f01e 0f01 	tst.w	lr, #1
 802895a:	5cd0      	ldrb	r0, [r2, r3]
 802895c:	bf0c      	ite	eq
 802895e:	f000 000f 	andeq.w	r0, r0, #15
 8028962:	1100      	asrne	r0, r0, #4
 8028964:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028968:	b2c3      	uxtb	r3, r0
 802896a:	b2ba      	uxth	r2, r7
 802896c:	fa1f fc8c 	uxth.w	ip, ip
 8028970:	fb02 f00c 	mul.w	r0, r2, ip
 8028974:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8028978:	0112      	lsls	r2, r2, #4
 802897a:	fa1f fc8c 	uxth.w	ip, ip
 802897e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8028982:	1a12      	subs	r2, r2, r0
 8028984:	eba7 070c 	sub.w	r7, r7, ip
 8028988:	b292      	uxth	r2, r2
 802898a:	b2bf      	uxth	r7, r7
 802898c:	4362      	muls	r2, r4
 802898e:	fb06 2207 	mla	r2, r6, r7, r2
 8028992:	fb0c 2505 	mla	r5, ip, r5, r2
 8028996:	fb00 5303 	mla	r3, r0, r3, r5
 802899a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802899e:	b3a3      	cbz	r3, 8028a0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80289a0:	4a25      	ldr	r2, [pc, #148]	; (8028a38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80289a2:	880e      	ldrh	r6, [r1, #0]
 80289a4:	6815      	ldr	r5, [r2, #0]
 80289a6:	1234      	asrs	r4, r6, #8
 80289a8:	b29a      	uxth	r2, r3
 80289aa:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80289ae:	43db      	mvns	r3, r3
 80289b0:	b2db      	uxtb	r3, r3
 80289b2:	fb10 f002 	smulbb	r0, r0, r2
 80289b6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80289ba:	fb04 0403 	mla	r4, r4, r3, r0
 80289be:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80289c2:	10f0      	asrs	r0, r6, #3
 80289c4:	b2ed      	uxtb	r5, r5
 80289c6:	00f6      	lsls	r6, r6, #3
 80289c8:	fb17 f702 	smulbb	r7, r7, r2
 80289cc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80289d0:	fb15 f202 	smulbb	r2, r5, r2
 80289d4:	b2f6      	uxtb	r6, r6
 80289d6:	b2a4      	uxth	r4, r4
 80289d8:	fb00 7003 	mla	r0, r0, r3, r7
 80289dc:	fb06 2303 	mla	r3, r6, r3, r2
 80289e0:	b29a      	uxth	r2, r3
 80289e2:	1c63      	adds	r3, r4, #1
 80289e4:	b280      	uxth	r0, r0
 80289e6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80289ea:	1c53      	adds	r3, r2, #1
 80289ec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80289f0:	1c42      	adds	r2, r0, #1
 80289f2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80289f6:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80289fa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80289fe:	0940      	lsrs	r0, r0, #5
 8028a00:	4323      	orrs	r3, r4
 8028a02:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028a06:	4303      	orrs	r3, r0
 8028a08:	800b      	strh	r3, [r1, #0]
 8028a0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028a0e:	2600      	movs	r6, #0
 8028a10:	e764      	b.n	80288dc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8028a12:	2400      	movs	r4, #0
 8028a14:	4626      	mov	r6, r4
 8028a16:	e778      	b.n	802890a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028a18:	2400      	movs	r4, #0
 8028a1a:	e776      	b.n	802890a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028a1c:	463c      	mov	r4, r7
 8028a1e:	e774      	b.n	802890a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028a20:	2500      	movs	r5, #0
 8028a22:	e78e      	b.n	8028942 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8028a24:	2300      	movs	r3, #0
 8028a26:	461d      	mov	r5, r3
 8028a28:	e79f      	b.n	802896a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028a2a:	4663      	mov	r3, ip
 8028a2c:	4665      	mov	r5, ip
 8028a2e:	e79c      	b.n	802896a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028a30:	2300      	movs	r3, #0
 8028a32:	e79a      	b.n	802896a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028a34:	463b      	mov	r3, r7
 8028a36:	e798      	b.n	802896a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028a38:	20013864 	.word	0x20013864

08028a3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028a40:	b093      	sub	sp, #76	; 0x4c
 8028a42:	461d      	mov	r5, r3
 8028a44:	920c      	str	r2, [sp, #48]	; 0x30
 8028a46:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8028a48:	9107      	str	r1, [sp, #28]
 8028a4a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8028a4e:	9011      	str	r0, [sp, #68]	; 0x44
 8028a50:	6850      	ldr	r0, [r2, #4]
 8028a52:	6812      	ldr	r2, [r2, #0]
 8028a54:	fb00 1303 	mla	r3, r0, r3, r1
 8028a58:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8028a5c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028a5e:	689b      	ldr	r3, [r3, #8]
 8028a60:	3301      	adds	r3, #1
 8028a62:	f023 0301 	bic.w	r3, r3, #1
 8028a66:	9306      	str	r3, [sp, #24]
 8028a68:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028a6a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8028a6e:	681f      	ldr	r7, [r3, #0]
 8028a70:	9b07      	ldr	r3, [sp, #28]
 8028a72:	2b00      	cmp	r3, #0
 8028a74:	dc03      	bgt.n	8028a7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8028a76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8028a78:	2b00      	cmp	r3, #0
 8028a7a:	f340 8267 	ble.w	8028f4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028a7e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028a80:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028a84:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028a88:	1e48      	subs	r0, r1, #1
 8028a8a:	f102 3cff 	add.w	ip, r2, #4294967295
 8028a8e:	2d00      	cmp	r5, #0
 8028a90:	f340 80b8 	ble.w	8028c04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028a94:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028a98:	ea4f 4326 	mov.w	r3, r6, asr #16
 8028a9c:	d406      	bmi.n	8028aac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028a9e:	4586      	cmp	lr, r0
 8028aa0:	da04      	bge.n	8028aac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028aa2:	2b00      	cmp	r3, #0
 8028aa4:	db02      	blt.n	8028aac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028aa6:	4563      	cmp	r3, ip
 8028aa8:	f2c0 80ad 	blt.w	8028c06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8028aac:	f11e 0e01 	adds.w	lr, lr, #1
 8028ab0:	f100 80a0 	bmi.w	8028bf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028ab4:	4571      	cmp	r1, lr
 8028ab6:	f2c0 809d 	blt.w	8028bf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028aba:	3301      	adds	r3, #1
 8028abc:	f100 809a 	bmi.w	8028bf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028ac0:	429a      	cmp	r2, r3
 8028ac2:	f2c0 8097 	blt.w	8028bf4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028ac6:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8028aca:	9509      	str	r5, [sp, #36]	; 0x24
 8028acc:	46c8      	mov	r8, r9
 8028ace:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028ad0:	2b00      	cmp	r3, #0
 8028ad2:	f340 80b6 	ble.w	8028c42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8028ad6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8028ada:	9308      	str	r3, [sp, #32]
 8028adc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028ade:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8028ae2:	1423      	asrs	r3, r4, #16
 8028ae4:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028ae8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8028aec:	f100 813e 	bmi.w	8028d6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028af0:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028af4:	455b      	cmp	r3, fp
 8028af6:	f280 8139 	bge.w	8028d6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028afa:	2800      	cmp	r0, #0
 8028afc:	f2c0 8136 	blt.w	8028d6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028b00:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028b04:	4558      	cmp	r0, fp
 8028b06:	f280 8131 	bge.w	8028d6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028b0a:	9a06      	ldr	r2, [sp, #24]
 8028b0c:	fb00 3302 	mla	r3, r0, r2, r3
 8028b10:	0858      	lsrs	r0, r3, #1
 8028b12:	07da      	lsls	r2, r3, #31
 8028b14:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028b18:	9a08      	ldr	r2, [sp, #32]
 8028b1a:	bf54      	ite	pl
 8028b1c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028b20:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028b24:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028b28:	fa5f fc8c 	uxtb.w	ip, ip
 8028b2c:	2a00      	cmp	r2, #0
 8028b2e:	f000 80cb 	beq.w	8028cc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8028b32:	1c58      	adds	r0, r3, #1
 8028b34:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8028b38:	07c0      	lsls	r0, r0, #31
 8028b3a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8028b3e:	bf54      	ite	pl
 8028b40:	f00e 0e0f 	andpl.w	lr, lr, #15
 8028b44:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8028b48:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8028b4c:	fa5f fe8e 	uxtb.w	lr, lr
 8028b50:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8028b54:	b1b9      	cbz	r1, 8028b86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028b56:	4453      	add	r3, sl
 8028b58:	0858      	lsrs	r0, r3, #1
 8028b5a:	07da      	lsls	r2, r3, #31
 8028b5c:	5c38      	ldrb	r0, [r7, r0]
 8028b5e:	bf54      	ite	pl
 8028b60:	f000 000f 	andpl.w	r0, r0, #15
 8028b64:	1100      	asrmi	r0, r0, #4
 8028b66:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028b6a:	b2c0      	uxtb	r0, r0
 8028b6c:	900a      	str	r0, [sp, #40]	; 0x28
 8028b6e:	1c58      	adds	r0, r3, #1
 8028b70:	0843      	lsrs	r3, r0, #1
 8028b72:	07c2      	lsls	r2, r0, #31
 8028b74:	5cfb      	ldrb	r3, [r7, r3]
 8028b76:	bf54      	ite	pl
 8028b78:	f003 030f 	andpl.w	r3, r3, #15
 8028b7c:	111b      	asrmi	r3, r3, #4
 8028b7e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028b82:	b2db      	uxtb	r3, r3
 8028b84:	930e      	str	r3, [sp, #56]	; 0x38
 8028b86:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8028b8a:	b289      	uxth	r1, r1
 8028b8c:	fb02 f301 	mul.w	r3, r2, r1
 8028b90:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028b94:	0112      	lsls	r2, r2, #4
 8028b96:	b289      	uxth	r1, r1
 8028b98:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8028b9c:	1a40      	subs	r0, r0, r1
 8028b9e:	fa1f fe80 	uxth.w	lr, r0
 8028ba2:	1ad2      	subs	r2, r2, r3
 8028ba4:	980d      	ldr	r0, [sp, #52]	; 0x34
 8028ba6:	b292      	uxth	r2, r2
 8028ba8:	4342      	muls	r2, r0
 8028baa:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8028bae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028bb0:	fb01 c102 	mla	r1, r1, r2, ip
 8028bb4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8028bb6:	fb03 1302 	mla	r3, r3, r2, r1
 8028bba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028bbe:	2bff      	cmp	r3, #255	; 0xff
 8028bc0:	f040 8093 	bne.w	8028cea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8028bc4:	4bbe      	ldr	r3, [pc, #760]	; (8028ec0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028bc6:	681a      	ldr	r2, [r3, #0]
 8028bc8:	4bbe      	ldr	r3, [pc, #760]	; (8028ec4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8028bca:	0951      	lsrs	r1, r2, #5
 8028bcc:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8028bd0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8028bd4:	430b      	orrs	r3, r1
 8028bd6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028bda:	4313      	orrs	r3, r2
 8028bdc:	f8a8 3000 	strh.w	r3, [r8]
 8028be0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028be2:	441c      	add	r4, r3
 8028be4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028be6:	441e      	add	r6, r3
 8028be8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028bea:	3b01      	subs	r3, #1
 8028bec:	f108 0802 	add.w	r8, r8, #2
 8028bf0:	9309      	str	r3, [sp, #36]	; 0x24
 8028bf2:	e76c      	b.n	8028ace <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028bf4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028bf6:	441c      	add	r4, r3
 8028bf8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028bfa:	3d01      	subs	r5, #1
 8028bfc:	441e      	add	r6, r3
 8028bfe:	f109 0902 	add.w	r9, r9, #2
 8028c02:	e744      	b.n	8028a8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8028c04:	d021      	beq.n	8028c4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8028c06:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8028c08:	1e6b      	subs	r3, r5, #1
 8028c0a:	fb00 4003 	mla	r0, r0, r3, r4
 8028c0e:	1400      	asrs	r0, r0, #16
 8028c10:	f53f af59 	bmi.w	8028ac6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028c14:	3901      	subs	r1, #1
 8028c16:	4288      	cmp	r0, r1
 8028c18:	f6bf af55 	bge.w	8028ac6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028c1c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8028c1e:	fb01 6303 	mla	r3, r1, r3, r6
 8028c22:	141b      	asrs	r3, r3, #16
 8028c24:	f53f af4f 	bmi.w	8028ac6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028c28:	3a01      	subs	r2, #1
 8028c2a:	4293      	cmp	r3, r2
 8028c2c:	f6bf af4b 	bge.w	8028ac6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028c30:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8028c34:	9308      	str	r3, [sp, #32]
 8028c36:	46a8      	mov	r8, r5
 8028c38:	46ce      	mov	lr, r9
 8028c3a:	f1b8 0f00 	cmp.w	r8, #0
 8028c3e:	f300 80b5 	bgt.w	8028dac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8028c42:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8028c46:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8028c4a:	9b07      	ldr	r3, [sp, #28]
 8028c4c:	2b00      	cmp	r3, #0
 8028c4e:	f340 817d 	ble.w	8028f4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028c52:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028c56:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028c5a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028c5e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028c60:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028c64:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028c68:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8028c6c:	eef0 6a62 	vmov.f32	s13, s5
 8028c70:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028c74:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028c78:	ee77 2a62 	vsub.f32	s5, s14, s5
 8028c7c:	ee16 4a90 	vmov	r4, s13
 8028c80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028c84:	eef0 6a43 	vmov.f32	s13, s6
 8028c88:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8028c8c:	ee12 2a90 	vmov	r2, s5
 8028c90:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028c94:	fb92 f3f3 	sdiv	r3, r2, r3
 8028c98:	ee13 2a10 	vmov	r2, s6
 8028c9c:	931f      	str	r3, [sp, #124]	; 0x7c
 8028c9e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028ca0:	fb92 f3f3 	sdiv	r3, r2, r3
 8028ca4:	9320      	str	r3, [sp, #128]	; 0x80
 8028ca6:	9b07      	ldr	r3, [sp, #28]
 8028ca8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8028caa:	3b01      	subs	r3, #1
 8028cac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028cb0:	9307      	str	r3, [sp, #28]
 8028cb2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028cb4:	ee16 6a90 	vmov	r6, s13
 8028cb8:	bf14      	ite	ne
 8028cba:	461d      	movne	r5, r3
 8028cbc:	4615      	moveq	r5, r2
 8028cbe:	eeb0 3a67 	vmov.f32	s6, s15
 8028cc2:	eef0 2a47 	vmov.f32	s5, s14
 8028cc6:	e6d3      	b.n	8028a70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8028cc8:	2900      	cmp	r1, #0
 8028cca:	f43f af5c 	beq.w	8028b86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028cce:	eb0a 0003 	add.w	r0, sl, r3
 8028cd2:	0843      	lsrs	r3, r0, #1
 8028cd4:	07c0      	lsls	r0, r0, #31
 8028cd6:	5cfb      	ldrb	r3, [r7, r3]
 8028cd8:	bf54      	ite	pl
 8028cda:	f003 030f 	andpl.w	r3, r3, #15
 8028cde:	111b      	asrmi	r3, r3, #4
 8028ce0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028ce4:	b2db      	uxtb	r3, r3
 8028ce6:	930a      	str	r3, [sp, #40]	; 0x28
 8028ce8:	e74d      	b.n	8028b86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028cea:	2b00      	cmp	r3, #0
 8028cec:	f43f af78 	beq.w	8028be0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028cf0:	4a73      	ldr	r2, [pc, #460]	; (8028ec0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028cf2:	f8b8 c000 	ldrh.w	ip, [r8]
 8028cf6:	6810      	ldr	r0, [r2, #0]
 8028cf8:	fa1f fe83 	uxth.w	lr, r3
 8028cfc:	ea4f 212c 	mov.w	r1, ip, asr #8
 8028d00:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8028d04:	43db      	mvns	r3, r3
 8028d06:	b2db      	uxtb	r3, r3
 8028d08:	fb12 f20e 	smulbb	r2, r2, lr
 8028d0c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8028d10:	fb01 2103 	mla	r1, r1, r3, r2
 8028d14:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8028d18:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8028d1c:	b2c0      	uxtb	r0, r0
 8028d1e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8028d22:	fb1b fb0e 	smulbb	fp, fp, lr
 8028d26:	b289      	uxth	r1, r1
 8028d28:	fb10 fe0e 	smulbb	lr, r0, lr
 8028d2c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8028d30:	fa5f fc8c 	uxtb.w	ip, ip
 8028d34:	fb02 b203 	mla	r2, r2, r3, fp
 8028d38:	1c48      	adds	r0, r1, #1
 8028d3a:	fb0c e303 	mla	r3, ip, r3, lr
 8028d3e:	b292      	uxth	r2, r2
 8028d40:	b29b      	uxth	r3, r3
 8028d42:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8028d46:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8028d4a:	f102 0b01 	add.w	fp, r2, #1
 8028d4e:	1c59      	adds	r1, r3, #1
 8028d50:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8028d54:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8028d58:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8028d5c:	0952      	lsrs	r2, r2, #5
 8028d5e:	4301      	orrs	r1, r0
 8028d60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8028d64:	4311      	orrs	r1, r2
 8028d66:	f8a8 1000 	strh.w	r1, [r8]
 8028d6a:	e739      	b.n	8028be0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028d6c:	f113 0b01 	adds.w	fp, r3, #1
 8028d70:	f53f af36 	bmi.w	8028be0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028d74:	45dc      	cmp	ip, fp
 8028d76:	f6ff af33 	blt.w	8028be0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028d7a:	f110 0b01 	adds.w	fp, r0, #1
 8028d7e:	f53f af2f 	bmi.w	8028be0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028d82:	45de      	cmp	lr, fp
 8028d84:	f6ff af2c 	blt.w	8028be0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028d88:	9a08      	ldr	r2, [sp, #32]
 8028d8a:	9302      	str	r3, [sp, #8]
 8028d8c:	fa0f f38e 	sxth.w	r3, lr
 8028d90:	9301      	str	r3, [sp, #4]
 8028d92:	fa0f f38c 	sxth.w	r3, ip
 8028d96:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028d9a:	9105      	str	r1, [sp, #20]
 8028d9c:	9300      	str	r3, [sp, #0]
 8028d9e:	463a      	mov	r2, r7
 8028da0:	4653      	mov	r3, sl
 8028da2:	4641      	mov	r1, r8
 8028da4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8028da6:	f7ff fd73 	bl	8028890 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8028daa:	e719      	b.n	8028be0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028dac:	9906      	ldr	r1, [sp, #24]
 8028dae:	1422      	asrs	r2, r4, #16
 8028db0:	1433      	asrs	r3, r6, #16
 8028db2:	fb01 2303 	mla	r3, r1, r3, r2
 8028db6:	085a      	lsrs	r2, r3, #1
 8028db8:	07d9      	lsls	r1, r3, #31
 8028dba:	5cba      	ldrb	r2, [r7, r2]
 8028dbc:	bf54      	ite	pl
 8028dbe:	f002 020f 	andpl.w	r2, r2, #15
 8028dc2:	1112      	asrmi	r2, r2, #4
 8028dc4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028dc8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8028dcc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8028dd0:	b2d2      	uxtb	r2, r2
 8028dd2:	2800      	cmp	r0, #0
 8028dd4:	d062      	beq.n	8028e9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8028dd6:	f103 0a01 	add.w	sl, r3, #1
 8028dda:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8028dde:	f01a 0f01 	tst.w	sl, #1
 8028de2:	5c79      	ldrb	r1, [r7, r1]
 8028de4:	bf0c      	ite	eq
 8028de6:	f001 010f 	andeq.w	r1, r1, #15
 8028dea:	1109      	asrne	r1, r1, #4
 8028dec:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028df0:	b2c9      	uxtb	r1, r1
 8028df2:	910f      	str	r1, [sp, #60]	; 0x3c
 8028df4:	f1bc 0f00 	cmp.w	ip, #0
 8028df8:	d019      	beq.n	8028e2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8028dfa:	9908      	ldr	r1, [sp, #32]
 8028dfc:	440b      	add	r3, r1
 8028dfe:	0859      	lsrs	r1, r3, #1
 8028e00:	f013 0f01 	tst.w	r3, #1
 8028e04:	5c79      	ldrb	r1, [r7, r1]
 8028e06:	bf0c      	ite	eq
 8028e08:	f001 010f 	andeq.w	r1, r1, #15
 8028e0c:	1109      	asrne	r1, r1, #4
 8028e0e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028e12:	b2c9      	uxtb	r1, r1
 8028e14:	3301      	adds	r3, #1
 8028e16:	910b      	str	r1, [sp, #44]	; 0x2c
 8028e18:	0859      	lsrs	r1, r3, #1
 8028e1a:	07db      	lsls	r3, r3, #31
 8028e1c:	5c79      	ldrb	r1, [r7, r1]
 8028e1e:	bf54      	ite	pl
 8028e20:	f001 010f 	andpl.w	r1, r1, #15
 8028e24:	1109      	asrmi	r1, r1, #4
 8028e26:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028e2a:	b2c9      	uxtb	r1, r1
 8028e2c:	9110      	str	r1, [sp, #64]	; 0x40
 8028e2e:	b280      	uxth	r0, r0
 8028e30:	fa1f fc8c 	uxth.w	ip, ip
 8028e34:	fb00 f30c 	mul.w	r3, r0, ip
 8028e38:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8028e3c:	0100      	lsls	r0, r0, #4
 8028e3e:	fa1f fc8c 	uxth.w	ip, ip
 8028e42:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8028e46:	eba1 010c 	sub.w	r1, r1, ip
 8028e4a:	fa1f fa81 	uxth.w	sl, r1
 8028e4e:	1ac0      	subs	r0, r0, r3
 8028e50:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028e52:	b280      	uxth	r0, r0
 8028e54:	4348      	muls	r0, r1
 8028e56:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8028e58:	fb02 020a 	mla	r2, r2, sl, r0
 8028e5c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8028e60:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8028e62:	fb03 c302 	mla	r3, r3, r2, ip
 8028e66:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028e6a:	2bff      	cmp	r3, #255	; 0xff
 8028e6c:	d12c      	bne.n	8028ec8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8028e6e:	4b14      	ldr	r3, [pc, #80]	; (8028ec0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028e70:	681a      	ldr	r2, [r3, #0]
 8028e72:	4b14      	ldr	r3, [pc, #80]	; (8028ec4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8028e74:	0951      	lsrs	r1, r2, #5
 8028e76:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8028e7a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8028e7e:	430b      	orrs	r3, r1
 8028e80:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028e84:	4313      	orrs	r3, r2
 8028e86:	f8ae 3000 	strh.w	r3, [lr]
 8028e8a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028e8c:	441c      	add	r4, r3
 8028e8e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028e90:	f10e 0e02 	add.w	lr, lr, #2
 8028e94:	441e      	add	r6, r3
 8028e96:	f108 38ff 	add.w	r8, r8, #4294967295
 8028e9a:	e6ce      	b.n	8028c3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8028e9c:	f1bc 0f00 	cmp.w	ip, #0
 8028ea0:	d0c5      	beq.n	8028e2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8028ea2:	9908      	ldr	r1, [sp, #32]
 8028ea4:	440b      	add	r3, r1
 8028ea6:	0859      	lsrs	r1, r3, #1
 8028ea8:	07db      	lsls	r3, r3, #31
 8028eaa:	5c79      	ldrb	r1, [r7, r1]
 8028eac:	bf54      	ite	pl
 8028eae:	f001 010f 	andpl.w	r1, r1, #15
 8028eb2:	1109      	asrmi	r1, r1, #4
 8028eb4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028eb8:	b2c9      	uxtb	r1, r1
 8028eba:	910b      	str	r1, [sp, #44]	; 0x2c
 8028ebc:	e7b7      	b.n	8028e2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8028ebe:	bf00      	nop
 8028ec0:	20013864 	.word	0x20013864
 8028ec4:	fffff800 	.word	0xfffff800
 8028ec8:	2b00      	cmp	r3, #0
 8028eca:	d0de      	beq.n	8028e8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8028ecc:	4a21      	ldr	r2, [pc, #132]	; (8028f54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8028ece:	f8be c000 	ldrh.w	ip, [lr]
 8028ed2:	6810      	ldr	r0, [r2, #0]
 8028ed4:	fa1f fa83 	uxth.w	sl, r3
 8028ed8:	ea4f 212c 	mov.w	r1, ip, asr #8
 8028edc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8028ee0:	43db      	mvns	r3, r3
 8028ee2:	b2db      	uxtb	r3, r3
 8028ee4:	fb12 f20a 	smulbb	r2, r2, sl
 8028ee8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8028eec:	fb01 2103 	mla	r1, r1, r3, r2
 8028ef0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8028ef4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8028ef8:	b2c0      	uxtb	r0, r0
 8028efa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8028efe:	fa5f fc8c 	uxtb.w	ip, ip
 8028f02:	fb10 f00a 	smulbb	r0, r0, sl
 8028f06:	fb0c 0003 	mla	r0, ip, r3, r0
 8028f0a:	b289      	uxth	r1, r1
 8028f0c:	fb1b fb0a 	smulbb	fp, fp, sl
 8028f10:	b280      	uxth	r0, r0
 8028f12:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8028f16:	fb02 b203 	mla	r2, r2, r3, fp
 8028f1a:	1c4b      	adds	r3, r1, #1
 8028f1c:	f100 0b01 	add.w	fp, r0, #1
 8028f20:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8028f24:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8028f28:	b292      	uxth	r2, r2
 8028f2a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8028f2e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8028f32:	ea4b 0101 	orr.w	r1, fp, r1
 8028f36:	f102 0b01 	add.w	fp, r2, #1
 8028f3a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8028f3e:	0952      	lsrs	r2, r2, #5
 8028f40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8028f44:	4311      	orrs	r1, r2
 8028f46:	f8ae 1000 	strh.w	r1, [lr]
 8028f4a:	e79e      	b.n	8028e8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8028f4c:	b013      	add	sp, #76	; 0x4c
 8028f4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028f52:	bf00      	nop
 8028f54:	20013864 	.word	0x20013864

08028f58 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8028f58:	b570      	push	{r4, r5, r6, lr}
 8028f5a:	1208      	asrs	r0, r1, #8
 8028f5c:	b29e      	uxth	r6, r3
 8028f5e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8028f62:	1213      	asrs	r3, r2, #8
 8028f64:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8028f68:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8028f6c:	fb13 f305 	smulbb	r3, r3, r5
 8028f70:	fb10 f006 	smulbb	r0, r0, r6
 8028f74:	4418      	add	r0, r3
 8028f76:	10cc      	asrs	r4, r1, #3
 8028f78:	10d3      	asrs	r3, r2, #3
 8028f7a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8028f7e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8028f82:	fb13 f305 	smulbb	r3, r3, r5
 8028f86:	fb14 f406 	smulbb	r4, r4, r6
 8028f8a:	00c9      	lsls	r1, r1, #3
 8028f8c:	00d2      	lsls	r2, r2, #3
 8028f8e:	441c      	add	r4, r3
 8028f90:	b2d2      	uxtb	r2, r2
 8028f92:	b2cb      	uxtb	r3, r1
 8028f94:	fb12 f205 	smulbb	r2, r2, r5
 8028f98:	b280      	uxth	r0, r0
 8028f9a:	fb13 f306 	smulbb	r3, r3, r6
 8028f9e:	4413      	add	r3, r2
 8028fa0:	1c42      	adds	r2, r0, #1
 8028fa2:	b29b      	uxth	r3, r3
 8028fa4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028fa8:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8028fac:	1c58      	adds	r0, r3, #1
 8028fae:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8028fb2:	b2a4      	uxth	r4, r4
 8028fb4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8028fb8:	4310      	orrs	r0, r2
 8028fba:	1c62      	adds	r2, r4, #1
 8028fbc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8028fc0:	0964      	lsrs	r4, r4, #5
 8028fc2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8028fc6:	4320      	orrs	r0, r4
 8028fc8:	bd70      	pop	{r4, r5, r6, pc}
	...

08028fcc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8028fcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028fd0:	b08f      	sub	sp, #60	; 0x3c
 8028fd2:	461c      	mov	r4, r3
 8028fd4:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8028fd8:	9004      	str	r0, [sp, #16]
 8028fda:	460d      	mov	r5, r1
 8028fdc:	4616      	mov	r6, r2
 8028fde:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8028fe0:	2f00      	cmp	r7, #0
 8028fe2:	f000 80f6 	beq.w	80291d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8028fe6:	6820      	ldr	r0, [r4, #0]
 8028fe8:	6861      	ldr	r1, [r4, #4]
 8028fea:	aa0a      	add	r2, sp, #40	; 0x28
 8028fec:	c203      	stmia	r2!, {r0, r1}
 8028fee:	6818      	ldr	r0, [r3, #0]
 8028ff0:	6859      	ldr	r1, [r3, #4]
 8028ff2:	aa0c      	add	r2, sp, #48	; 0x30
 8028ff4:	c203      	stmia	r2!, {r0, r1}
 8028ff6:	a80a      	add	r0, sp, #40	; 0x28
 8028ff8:	f7ef fa5e 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028ffc:	4621      	mov	r1, r4
 8028ffe:	a80c      	add	r0, sp, #48	; 0x30
 8029000:	f7ef fa9e 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029004:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8029008:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802900c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8029010:	f002 0301 	and.w	r3, r2, #1
 8029014:	9306      	str	r3, [sp, #24]
 8029016:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802901a:	f003 0101 	and.w	r1, r3, #1
 802901e:	9105      	str	r1, [sp, #20]
 8029020:	9805      	ldr	r0, [sp, #20]
 8029022:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8029026:	4403      	add	r3, r0
 8029028:	fb01 2303 	mla	r3, r1, r3, r2
 802902c:	f04f 0802 	mov.w	r8, #2
 8029030:	fb93 f3f8 	sdiv	r3, r3, r8
 8029034:	441d      	add	r5, r3
 8029036:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802903a:	441a      	add	r2, r3
 802903c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8029040:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8029044:	4419      	add	r1, r3
 8029046:	4b64      	ldr	r3, [pc, #400]	; (80291d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8029048:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802904c:	6818      	ldr	r0, [r3, #0]
 802904e:	6803      	ldr	r3, [r0, #0]
 8029050:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8029052:	4798      	blx	r3
 8029054:	4a61      	ldr	r2, [pc, #388]	; (80291dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8029056:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802905a:	8813      	ldrh	r3, [r2, #0]
 802905c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8029060:	2fff      	cmp	r7, #255	; 0xff
 8029062:	fb03 a404 	mla	r4, r3, r4, sl
 8029066:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802906a:	f106 0604 	add.w	r6, r6, #4
 802906e:	4611      	mov	r1, r2
 8029070:	fb03 fb0b 	mul.w	fp, r3, fp
 8029074:	d06b      	beq.n	802914e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8029076:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802907a:	9303      	str	r3, [sp, #12]
 802907c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8029080:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8029084:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8029088:	9b07      	ldr	r3, [sp, #28]
 802908a:	42a3      	cmp	r3, r4
 802908c:	f240 809c 	bls.w	80291c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8029090:	9b06      	ldr	r3, [sp, #24]
 8029092:	2b00      	cmp	r3, #0
 8029094:	d039      	beq.n	802910a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8029096:	782b      	ldrb	r3, [r5, #0]
 8029098:	8822      	ldrh	r2, [r4, #0]
 802909a:	9804      	ldr	r0, [sp, #16]
 802909c:	f003 030f 	and.w	r3, r3, #15
 80290a0:	f105 0801 	add.w	r8, r5, #1
 80290a4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80290a8:	9b03      	ldr	r3, [sp, #12]
 80290aa:	9300      	str	r3, [sp, #0]
 80290ac:	463b      	mov	r3, r7
 80290ae:	f7ff ff53 	bl	8028f58 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80290b2:	f824 0b02 	strh.w	r0, [r4], #2
 80290b6:	f109 3bff 	add.w	fp, r9, #4294967295
 80290ba:	f1bb 0f01 	cmp.w	fp, #1
 80290be:	46a2      	mov	sl, r4
 80290c0:	f104 0404 	add.w	r4, r4, #4
 80290c4:	dd24      	ble.n	8029110 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80290c6:	f898 3000 	ldrb.w	r3, [r8]
 80290ca:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80290ce:	9804      	ldr	r0, [sp, #16]
 80290d0:	091b      	lsrs	r3, r3, #4
 80290d2:	f1ab 0b02 	sub.w	fp, fp, #2
 80290d6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80290da:	9b03      	ldr	r3, [sp, #12]
 80290dc:	9300      	str	r3, [sp, #0]
 80290de:	463b      	mov	r3, r7
 80290e0:	f7ff ff3a 	bl	8028f58 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80290e4:	f824 0c04 	strh.w	r0, [r4, #-4]
 80290e8:	f818 3b01 	ldrb.w	r3, [r8], #1
 80290ec:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80290f0:	9804      	ldr	r0, [sp, #16]
 80290f2:	f003 030f 	and.w	r3, r3, #15
 80290f6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80290fa:	9b03      	ldr	r3, [sp, #12]
 80290fc:	9300      	str	r3, [sp, #0]
 80290fe:	463b      	mov	r3, r7
 8029100:	f7ff ff2a 	bl	8028f58 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029104:	f824 0c02 	strh.w	r0, [r4, #-2]
 8029108:	e7d7      	b.n	80290ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802910a:	46a8      	mov	r8, r5
 802910c:	46cb      	mov	fp, r9
 802910e:	e7d4      	b.n	80290ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8029110:	d10e      	bne.n	8029130 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8029112:	f898 3000 	ldrb.w	r3, [r8]
 8029116:	f8ba 2000 	ldrh.w	r2, [sl]
 802911a:	9804      	ldr	r0, [sp, #16]
 802911c:	091b      	lsrs	r3, r3, #4
 802911e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029122:	9b03      	ldr	r3, [sp, #12]
 8029124:	9300      	str	r3, [sp, #0]
 8029126:	463b      	mov	r3, r7
 8029128:	f7ff ff16 	bl	8028f58 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802912c:	f82a 0b02 	strh.w	r0, [sl], #2
 8029130:	9b08      	ldr	r3, [sp, #32]
 8029132:	9a05      	ldr	r2, [sp, #20]
 8029134:	881c      	ldrh	r4, [r3, #0]
 8029136:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802913a:	eba4 0409 	sub.w	r4, r4, r9
 802913e:	4413      	add	r3, r2
 8029140:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8029144:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029146:	fb93 f3f2 	sdiv	r3, r3, r2
 802914a:	441d      	add	r5, r3
 802914c:	e79c      	b.n	8029088 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802914e:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8029152:	45a3      	cmp	fp, r4
 8029154:	d938      	bls.n	80291c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8029156:	9b06      	ldr	r3, [sp, #24]
 8029158:	b1f3      	cbz	r3, 8029198 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802915a:	782b      	ldrb	r3, [r5, #0]
 802915c:	f003 030f 	and.w	r3, r3, #15
 8029160:	1c6a      	adds	r2, r5, #1
 8029162:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8029166:	8023      	strh	r3, [r4, #0]
 8029168:	f109 30ff 	add.w	r0, r9, #4294967295
 802916c:	3402      	adds	r4, #2
 802916e:	2801      	cmp	r0, #1
 8029170:	4623      	mov	r3, r4
 8029172:	f104 0404 	add.w	r4, r4, #4
 8029176:	dd12      	ble.n	802919e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8029178:	7813      	ldrb	r3, [r2, #0]
 802917a:	091b      	lsrs	r3, r3, #4
 802917c:	3802      	subs	r0, #2
 802917e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8029182:	f824 3c04 	strh.w	r3, [r4, #-4]
 8029186:	f812 3b01 	ldrb.w	r3, [r2], #1
 802918a:	f003 030f 	and.w	r3, r3, #15
 802918e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8029192:	f824 3c02 	strh.w	r3, [r4, #-2]
 8029196:	e7ea      	b.n	802916e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8029198:	462a      	mov	r2, r5
 802919a:	4648      	mov	r0, r9
 802919c:	e7e7      	b.n	802916e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802919e:	d106      	bne.n	80291ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80291a0:	7812      	ldrb	r2, [r2, #0]
 80291a2:	0912      	lsrs	r2, r2, #4
 80291a4:	3302      	adds	r3, #2
 80291a6:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80291aa:	f823 2c02 	strh.w	r2, [r3, #-2]
 80291ae:	880c      	ldrh	r4, [r1, #0]
 80291b0:	9a05      	ldr	r2, [sp, #20]
 80291b2:	eba4 0409 	sub.w	r4, r4, r9
 80291b6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80291ba:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80291be:	4413      	add	r3, r2
 80291c0:	fb93 f3f8 	sdiv	r3, r3, r8
 80291c4:	441d      	add	r5, r3
 80291c6:	e7c4      	b.n	8029152 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80291c8:	4b03      	ldr	r3, [pc, #12]	; (80291d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80291ca:	6818      	ldr	r0, [r3, #0]
 80291cc:	6803      	ldr	r3, [r0, #0]
 80291ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80291d0:	4798      	blx	r3
 80291d2:	b00f      	add	sp, #60	; 0x3c
 80291d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80291d8:	20013854 	.word	0x20013854
 80291dc:	2001384e 	.word	0x2001384e

080291e0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80291e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80291e2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80291e6:	2dff      	cmp	r5, #255	; 0xff
 80291e8:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80291ec:	d10c      	bne.n	8029208 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80291ee:	2bff      	cmp	r3, #255	; 0xff
 80291f0:	d10a      	bne.n	8029208 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80291f2:	4b25      	ldr	r3, [pc, #148]	; (8029288 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80291f4:	0948      	lsrs	r0, r1, #5
 80291f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80291fa:	403b      	ands	r3, r7
 80291fc:	4318      	orrs	r0, r3
 80291fe:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8029202:	4308      	orrs	r0, r1
 8029204:	b280      	uxth	r0, r0
 8029206:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029208:	fb15 f503 	smulbb	r5, r5, r3
 802920c:	b2ab      	uxth	r3, r5
 802920e:	1c5d      	adds	r5, r3, #1
 8029210:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8029214:	1214      	asrs	r4, r2, #8
 8029216:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802921a:	fa1f fc85 	uxth.w	ip, r5
 802921e:	10d6      	asrs	r6, r2, #3
 8029220:	00d0      	lsls	r0, r2, #3
 8029222:	43ed      	mvns	r5, r5
 8029224:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8029228:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802922c:	b2eb      	uxtb	r3, r5
 802922e:	b2c0      	uxtb	r0, r0
 8029230:	fb12 f20c 	smulbb	r2, r2, ip
 8029234:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8029238:	fb04 2403 	mla	r4, r4, r3, r2
 802923c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8029240:	b2c8      	uxtb	r0, r1
 8029242:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8029246:	b2fd      	uxtb	r5, r7
 8029248:	fb10 f00c 	smulbb	r0, r0, ip
 802924c:	b2a4      	uxth	r4, r4
 802924e:	fb02 0003 	mla	r0, r2, r3, r0
 8029252:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8029256:	fb15 f50c 	smulbb	r5, r5, ip
 802925a:	fb06 5503 	mla	r5, r6, r3, r5
 802925e:	b283      	uxth	r3, r0
 8029260:	1c60      	adds	r0, r4, #1
 8029262:	b2ad      	uxth	r5, r5
 8029264:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8029268:	1c58      	adds	r0, r3, #1
 802926a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802926e:	1c6b      	adds	r3, r5, #1
 8029270:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8029274:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8029278:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802927c:	096d      	lsrs	r5, r5, #5
 802927e:	4320      	orrs	r0, r4
 8029280:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8029284:	4328      	orrs	r0, r5
 8029286:	e7be      	b.n	8029206 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8029288:	00fff800 	.word	0x00fff800

0802928c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802928c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029290:	461c      	mov	r4, r3
 8029292:	b08d      	sub	sp, #52	; 0x34
 8029294:	460d      	mov	r5, r1
 8029296:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8029298:	6861      	ldr	r1, [r4, #4]
 802929a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802929e:	4680      	mov	r8, r0
 80292a0:	6820      	ldr	r0, [r4, #0]
 80292a2:	4616      	mov	r6, r2
 80292a4:	aa08      	add	r2, sp, #32
 80292a6:	c203      	stmia	r2!, {r0, r1}
 80292a8:	6818      	ldr	r0, [r3, #0]
 80292aa:	6859      	ldr	r1, [r3, #4]
 80292ac:	aa0a      	add	r2, sp, #40	; 0x28
 80292ae:	c203      	stmia	r2!, {r0, r1}
 80292b0:	a808      	add	r0, sp, #32
 80292b2:	f7ef f901 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80292b6:	4621      	mov	r1, r4
 80292b8:	a80a      	add	r0, sp, #40	; 0x28
 80292ba:	f7ef f941 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80292be:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80292c2:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80292c6:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80292ca:	f002 0301 	and.w	r3, r2, #1
 80292ce:	9303      	str	r3, [sp, #12]
 80292d0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80292d4:	f003 0101 	and.w	r1, r3, #1
 80292d8:	9102      	str	r1, [sp, #8]
 80292da:	9802      	ldr	r0, [sp, #8]
 80292dc:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80292e0:	4403      	add	r3, r0
 80292e2:	fb01 2303 	mla	r3, r1, r3, r2
 80292e6:	f04f 0a02 	mov.w	sl, #2
 80292ea:	fb93 f3fa 	sdiv	r3, r3, sl
 80292ee:	441d      	add	r5, r3
 80292f0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80292f4:	441a      	add	r2, r3
 80292f6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80292fa:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80292fe:	4a3f      	ldr	r2, [pc, #252]	; (80293fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8029300:	9205      	str	r2, [sp, #20]
 8029302:	4419      	add	r1, r3
 8029304:	6810      	ldr	r0, [r2, #0]
 8029306:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 802930a:	6803      	ldr	r3, [r0, #0]
 802930c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802930e:	4798      	blx	r3
 8029310:	4b3b      	ldr	r3, [pc, #236]	; (8029400 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8029312:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8029316:	8819      	ldrh	r1, [r3, #0]
 8029318:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 802931c:	fb01 c404 	mla	r4, r1, r4, ip
 8029320:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029324:	434f      	muls	r7, r1
 8029326:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802932a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802932e:	3604      	adds	r6, #4
 8029330:	9204      	str	r2, [sp, #16]
 8029332:	9b04      	ldr	r3, [sp, #16]
 8029334:	429c      	cmp	r4, r3
 8029336:	d258      	bcs.n	80293ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8029338:	9b03      	ldr	r3, [sp, #12]
 802933a:	2b00      	cmp	r3, #0
 802933c:	d034      	beq.n	80293a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802933e:	782b      	ldrb	r3, [r5, #0]
 8029340:	f003 030f 	and.w	r3, r3, #15
 8029344:	1c6f      	adds	r7, r5, #1
 8029346:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802934a:	0e0b      	lsrs	r3, r1, #24
 802934c:	d006      	beq.n	802935c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802934e:	8822      	ldrh	r2, [r4, #0]
 8029350:	9300      	str	r3, [sp, #0]
 8029352:	4640      	mov	r0, r8
 8029354:	464b      	mov	r3, r9
 8029356:	f7ff ff43 	bl	80291e0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802935a:	8020      	strh	r0, [r4, #0]
 802935c:	3402      	adds	r4, #2
 802935e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8029362:	f1ba 0f01 	cmp.w	sl, #1
 8029366:	dd22      	ble.n	80293ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8029368:	783b      	ldrb	r3, [r7, #0]
 802936a:	091b      	lsrs	r3, r3, #4
 802936c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029370:	0e0b      	lsrs	r3, r1, #24
 8029372:	d006      	beq.n	8029382 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8029374:	8822      	ldrh	r2, [r4, #0]
 8029376:	9300      	str	r3, [sp, #0]
 8029378:	4640      	mov	r0, r8
 802937a:	464b      	mov	r3, r9
 802937c:	f7ff ff30 	bl	80291e0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029380:	8020      	strh	r0, [r4, #0]
 8029382:	f817 3b01 	ldrb.w	r3, [r7], #1
 8029386:	f003 030f 	and.w	r3, r3, #15
 802938a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802938e:	0e0b      	lsrs	r3, r1, #24
 8029390:	d006      	beq.n	80293a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8029392:	8862      	ldrh	r2, [r4, #2]
 8029394:	9300      	str	r3, [sp, #0]
 8029396:	4640      	mov	r0, r8
 8029398:	464b      	mov	r3, r9
 802939a:	f7ff ff21 	bl	80291e0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802939e:	8060      	strh	r0, [r4, #2]
 80293a0:	3404      	adds	r4, #4
 80293a2:	f1aa 0a02 	sub.w	sl, sl, #2
 80293a6:	e7dc      	b.n	8029362 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80293a8:	462f      	mov	r7, r5
 80293aa:	46da      	mov	sl, fp
 80293ac:	e7d9      	b.n	8029362 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80293ae:	d10d      	bne.n	80293cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80293b0:	783b      	ldrb	r3, [r7, #0]
 80293b2:	091b      	lsrs	r3, r3, #4
 80293b4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80293b8:	0e0b      	lsrs	r3, r1, #24
 80293ba:	d006      	beq.n	80293ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80293bc:	8822      	ldrh	r2, [r4, #0]
 80293be:	9300      	str	r3, [sp, #0]
 80293c0:	4640      	mov	r0, r8
 80293c2:	464b      	mov	r3, r9
 80293c4:	f7ff ff0c 	bl	80291e0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80293c8:	8020      	strh	r0, [r4, #0]
 80293ca:	3402      	adds	r4, #2
 80293cc:	9b06      	ldr	r3, [sp, #24]
 80293ce:	9a02      	ldr	r2, [sp, #8]
 80293d0:	881b      	ldrh	r3, [r3, #0]
 80293d2:	eba3 030b 	sub.w	r3, r3, fp
 80293d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80293da:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80293de:	4413      	add	r3, r2
 80293e0:	9a07      	ldr	r2, [sp, #28]
 80293e2:	fb93 f3f2 	sdiv	r3, r3, r2
 80293e6:	441d      	add	r5, r3
 80293e8:	e7a3      	b.n	8029332 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80293ea:	9b05      	ldr	r3, [sp, #20]
 80293ec:	6818      	ldr	r0, [r3, #0]
 80293ee:	6803      	ldr	r3, [r0, #0]
 80293f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80293f2:	4798      	blx	r3
 80293f4:	b00d      	add	sp, #52	; 0x34
 80293f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80293fa:	bf00      	nop
 80293fc:	20013854 	.word	0x20013854
 8029400:	2001384e 	.word	0x2001384e

08029404 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8029404:	b570      	push	{r4, r5, r6, lr}
 8029406:	1214      	asrs	r4, r2, #8
 8029408:	788d      	ldrb	r5, [r1, #2]
 802940a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802940e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8029412:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8029416:	fb15 f503 	smulbb	r5, r5, r3
 802941a:	fb04 5506 	mla	r5, r4, r6, r5
 802941e:	10d0      	asrs	r0, r2, #3
 8029420:	784c      	ldrb	r4, [r1, #1]
 8029422:	7809      	ldrb	r1, [r1, #0]
 8029424:	00d2      	lsls	r2, r2, #3
 8029426:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802942a:	b2d2      	uxtb	r2, r2
 802942c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8029430:	fb14 f403 	smulbb	r4, r4, r3
 8029434:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8029438:	fb11 f303 	smulbb	r3, r1, r3
 802943c:	fb00 4406 	mla	r4, r0, r6, r4
 8029440:	fb02 3306 	mla	r3, r2, r6, r3
 8029444:	b2ad      	uxth	r5, r5
 8029446:	b29b      	uxth	r3, r3
 8029448:	b2a4      	uxth	r4, r4
 802944a:	1c68      	adds	r0, r5, #1
 802944c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8029450:	1c62      	adds	r2, r4, #1
 8029452:	1c58      	adds	r0, r3, #1
 8029454:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8029458:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802945c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8029460:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029464:	0964      	lsrs	r4, r4, #5
 8029466:	4328      	orrs	r0, r5
 8029468:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802946c:	4320      	orrs	r0, r4
 802946e:	bd70      	pop	{r4, r5, r6, pc}

08029470 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8029470:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029474:	b08f      	sub	sp, #60	; 0x3c
 8029476:	461c      	mov	r4, r3
 8029478:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 802947c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802947e:	4682      	mov	sl, r0
 8029480:	460e      	mov	r6, r1
 8029482:	4615      	mov	r5, r2
 8029484:	2f00      	cmp	r7, #0
 8029486:	f000 8142 	beq.w	802970e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802948a:	6820      	ldr	r0, [r4, #0]
 802948c:	6861      	ldr	r1, [r4, #4]
 802948e:	aa0a      	add	r2, sp, #40	; 0x28
 8029490:	c203      	stmia	r2!, {r0, r1}
 8029492:	6818      	ldr	r0, [r3, #0]
 8029494:	6859      	ldr	r1, [r3, #4]
 8029496:	aa0c      	add	r2, sp, #48	; 0x30
 8029498:	c203      	stmia	r2!, {r0, r1}
 802949a:	a80a      	add	r0, sp, #40	; 0x28
 802949c:	f7ef f80c 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80294a0:	4621      	mov	r1, r4
 80294a2:	a80c      	add	r0, sp, #48	; 0x30
 80294a4:	f7ef f84c 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80294a8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80294ac:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80294b0:	f002 0301 	and.w	r3, r2, #1
 80294b4:	9306      	str	r3, [sp, #24]
 80294b6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80294ba:	f003 0101 	and.w	r1, r3, #1
 80294be:	9105      	str	r1, [sp, #20]
 80294c0:	9805      	ldr	r0, [sp, #20]
 80294c2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80294c6:	4403      	add	r3, r0
 80294c8:	fb01 2303 	mla	r3, r1, r3, r2
 80294cc:	f04f 0802 	mov.w	r8, #2
 80294d0:	fb93 f3f8 	sdiv	r3, r3, r8
 80294d4:	441e      	add	r6, r3
 80294d6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80294da:	441a      	add	r2, r3
 80294dc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80294e0:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80294e4:	4419      	add	r1, r3
 80294e6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80294ea:	9303      	str	r3, [sp, #12]
 80294ec:	4b89      	ldr	r3, [pc, #548]	; (8029714 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80294ee:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80294f2:	6818      	ldr	r0, [r3, #0]
 80294f4:	6803      	ldr	r3, [r0, #0]
 80294f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80294f8:	4798      	blx	r3
 80294fa:	4a87      	ldr	r2, [pc, #540]	; (8029718 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80294fc:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8029500:	8813      	ldrh	r3, [r2, #0]
 8029502:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8029506:	2fff      	cmp	r7, #255	; 0xff
 8029508:	fb03 9404 	mla	r4, r3, r4, r9
 802950c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029510:	f105 0504 	add.w	r5, r5, #4
 8029514:	4694      	mov	ip, r2
 8029516:	fb03 f30b 	mul.w	r3, r3, fp
 802951a:	d071      	beq.n	8029600 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802951c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8029520:	43f9      	mvns	r1, r7
 8029522:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8029526:	b2c9      	uxtb	r1, r1
 8029528:	9104      	str	r1, [sp, #16]
 802952a:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802952e:	9b07      	ldr	r3, [sp, #28]
 8029530:	42a3      	cmp	r3, r4
 8029532:	f240 80e7 	bls.w	8029704 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8029536:	9b06      	ldr	r3, [sp, #24]
 8029538:	2b00      	cmp	r3, #0
 802953a:	d03d      	beq.n	80295b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 802953c:	7831      	ldrb	r1, [r6, #0]
 802953e:	9b04      	ldr	r3, [sp, #16]
 8029540:	8822      	ldrh	r2, [r4, #0]
 8029542:	9300      	str	r3, [sp, #0]
 8029544:	f001 010f 	and.w	r1, r1, #15
 8029548:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802954c:	463b      	mov	r3, r7
 802954e:	4429      	add	r1, r5
 8029550:	4650      	mov	r0, sl
 8029552:	f7ff ff57 	bl	8029404 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8029556:	9b03      	ldr	r3, [sp, #12]
 8029558:	f824 0b02 	strh.w	r0, [r4], #2
 802955c:	f106 0801 	add.w	r8, r6, #1
 8029560:	f103 3bff 	add.w	fp, r3, #4294967295
 8029564:	f1bb 0f01 	cmp.w	fp, #1
 8029568:	46a1      	mov	r9, r4
 802956a:	f104 0404 	add.w	r4, r4, #4
 802956e:	dd27      	ble.n	80295c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8029570:	f898 1000 	ldrb.w	r1, [r8]
 8029574:	9b04      	ldr	r3, [sp, #16]
 8029576:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802957a:	9300      	str	r3, [sp, #0]
 802957c:	0909      	lsrs	r1, r1, #4
 802957e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029582:	463b      	mov	r3, r7
 8029584:	4429      	add	r1, r5
 8029586:	4650      	mov	r0, sl
 8029588:	f7ff ff3c 	bl	8029404 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802958c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8029590:	f818 1b01 	ldrb.w	r1, [r8], #1
 8029594:	9b04      	ldr	r3, [sp, #16]
 8029596:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802959a:	9300      	str	r3, [sp, #0]
 802959c:	f001 010f 	and.w	r1, r1, #15
 80295a0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80295a4:	463b      	mov	r3, r7
 80295a6:	4429      	add	r1, r5
 80295a8:	4650      	mov	r0, sl
 80295aa:	f7ff ff2b 	bl	8029404 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80295ae:	f1ab 0b02 	sub.w	fp, fp, #2
 80295b2:	f824 0c02 	strh.w	r0, [r4, #-2]
 80295b6:	e7d5      	b.n	8029564 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80295b8:	46b0      	mov	r8, r6
 80295ba:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80295be:	e7d1      	b.n	8029564 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 80295c0:	d10f      	bne.n	80295e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 80295c2:	f898 1000 	ldrb.w	r1, [r8]
 80295c6:	9b04      	ldr	r3, [sp, #16]
 80295c8:	f8b9 2000 	ldrh.w	r2, [r9]
 80295cc:	9300      	str	r3, [sp, #0]
 80295ce:	0909      	lsrs	r1, r1, #4
 80295d0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80295d4:	463b      	mov	r3, r7
 80295d6:	4429      	add	r1, r5
 80295d8:	4650      	mov	r0, sl
 80295da:	f7ff ff13 	bl	8029404 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80295de:	f829 0b02 	strh.w	r0, [r9], #2
 80295e2:	9b08      	ldr	r3, [sp, #32]
 80295e4:	9a05      	ldr	r2, [sp, #20]
 80295e6:	881c      	ldrh	r4, [r3, #0]
 80295e8:	9b03      	ldr	r3, [sp, #12]
 80295ea:	1ae4      	subs	r4, r4, r3
 80295ec:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80295f0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80295f4:	4413      	add	r3, r2
 80295f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80295f8:	fb93 f3f2 	sdiv	r3, r3, r2
 80295fc:	441e      	add	r6, r3
 80295fe:	e796      	b.n	802952e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8029600:	4f46      	ldr	r7, [pc, #280]	; (802971c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8029602:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8029606:	42a3      	cmp	r3, r4
 8029608:	d97c      	bls.n	8029704 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802960a:	9a06      	ldr	r2, [sp, #24]
 802960c:	2a00      	cmp	r2, #0
 802960e:	d054      	beq.n	80296ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8029610:	7830      	ldrb	r0, [r6, #0]
 8029612:	f000 000f 	and.w	r0, r0, #15
 8029616:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802961a:	eb05 0e00 	add.w	lr, r5, r0
 802961e:	5c28      	ldrb	r0, [r5, r0]
 8029620:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8029624:	f89e e001 	ldrb.w	lr, [lr, #1]
 8029628:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802962c:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8029630:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8029634:	ea42 020e 	orr.w	r2, r2, lr
 8029638:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 802963c:	f824 2b02 	strh.w	r2, [r4], #2
 8029640:	9a03      	ldr	r2, [sp, #12]
 8029642:	1c71      	adds	r1, r6, #1
 8029644:	f102 3eff 	add.w	lr, r2, #4294967295
 8029648:	f1be 0f01 	cmp.w	lr, #1
 802964c:	4620      	mov	r0, r4
 802964e:	f104 0404 	add.w	r4, r4, #4
 8029652:	dd36      	ble.n	80296c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8029654:	7808      	ldrb	r0, [r1, #0]
 8029656:	0900      	lsrs	r0, r0, #4
 8029658:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802965c:	eb05 0a00 	add.w	sl, r5, r0
 8029660:	f1ae 0e02 	sub.w	lr, lr, #2
 8029664:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8029668:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802966c:	00d2      	lsls	r2, r2, #3
 802966e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8029672:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029676:	ea49 0202 	orr.w	r2, r9, r2
 802967a:	f815 9000 	ldrb.w	r9, [r5, r0]
 802967e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029682:	f824 2c04 	strh.w	r2, [r4, #-4]
 8029686:	f811 0b01 	ldrb.w	r0, [r1], #1
 802968a:	f000 000f 	and.w	r0, r0, #15
 802968e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029692:	eb05 0a00 	add.w	sl, r5, r0
 8029696:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802969a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802969e:	00d2      	lsls	r2, r2, #3
 80296a0:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80296a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80296a8:	ea49 0202 	orr.w	r2, r9, r2
 80296ac:	f815 9000 	ldrb.w	r9, [r5, r0]
 80296b0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80296b4:	f824 2c02 	strh.w	r2, [r4, #-2]
 80296b8:	e7c6      	b.n	8029648 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80296ba:	4631      	mov	r1, r6
 80296bc:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80296c0:	e7c2      	b.n	8029648 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 80296c2:	d111      	bne.n	80296e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 80296c4:	7809      	ldrb	r1, [r1, #0]
 80296c6:	0909      	lsrs	r1, r1, #4
 80296c8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80296cc:	186c      	adds	r4, r5, r1
 80296ce:	5c69      	ldrb	r1, [r5, r1]
 80296d0:	78a2      	ldrb	r2, [r4, #2]
 80296d2:	7864      	ldrb	r4, [r4, #1]
 80296d4:	00e4      	lsls	r4, r4, #3
 80296d6:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80296da:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80296de:	4322      	orrs	r2, r4
 80296e0:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80296e4:	f820 2b02 	strh.w	r2, [r0], #2
 80296e8:	9a03      	ldr	r2, [sp, #12]
 80296ea:	f8bc 4000 	ldrh.w	r4, [ip]
 80296ee:	9905      	ldr	r1, [sp, #20]
 80296f0:	1aa4      	subs	r4, r4, r2
 80296f2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80296f6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80296fa:	440a      	add	r2, r1
 80296fc:	fb92 f2f8 	sdiv	r2, r2, r8
 8029700:	4416      	add	r6, r2
 8029702:	e780      	b.n	8029606 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8029704:	4b03      	ldr	r3, [pc, #12]	; (8029714 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8029706:	6818      	ldr	r0, [r3, #0]
 8029708:	6803      	ldr	r3, [r0, #0]
 802970a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802970c:	4798      	blx	r3
 802970e:	b00f      	add	sp, #60	; 0x3c
 8029710:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029714:	20013854 	.word	0x20013854
 8029718:	2001384e 	.word	0x2001384e
 802971c:	fffff800 	.word	0xfffff800

08029720 <CRC_Lock>:
 8029720:	b530      	push	{r4, r5, lr}
 8029722:	4a20      	ldr	r2, [pc, #128]	; (80297a4 <CRC_Lock+0x84>)
 8029724:	6813      	ldr	r3, [r2, #0]
 8029726:	f023 0301 	bic.w	r3, r3, #1
 802972a:	6013      	str	r3, [r2, #0]
 802972c:	4b1e      	ldr	r3, [pc, #120]	; (80297a8 <CRC_Lock+0x88>)
 802972e:	681a      	ldr	r2, [r3, #0]
 8029730:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8029734:	4022      	ands	r2, r4
 8029736:	f24c 2540 	movw	r5, #49728	; 0xc240
 802973a:	42aa      	cmp	r2, r5
 802973c:	d005      	beq.n	802974a <CRC_Lock+0x2a>
 802973e:	681b      	ldr	r3, [r3, #0]
 8029740:	f24c 2270 	movw	r2, #49776	; 0xc270
 8029744:	4023      	ands	r3, r4
 8029746:	4293      	cmp	r3, r2
 8029748:	d124      	bne.n	8029794 <CRC_Lock+0x74>
 802974a:	4b18      	ldr	r3, [pc, #96]	; (80297ac <CRC_Lock+0x8c>)
 802974c:	681b      	ldr	r3, [r3, #0]
 802974e:	bb0b      	cbnz	r3, 8029794 <CRC_Lock+0x74>
 8029750:	4b17      	ldr	r3, [pc, #92]	; (80297b0 <CRC_Lock+0x90>)
 8029752:	681a      	ldr	r2, [r3, #0]
 8029754:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8029758:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 802975c:	d00d      	beq.n	802977a <CRC_Lock+0x5a>
 802975e:	681a      	ldr	r2, [r3, #0]
 8029760:	f240 4483 	movw	r4, #1155	; 0x483
 8029764:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8029768:	42a2      	cmp	r2, r4
 802976a:	d006      	beq.n	802977a <CRC_Lock+0x5a>
 802976c:	681b      	ldr	r3, [r3, #0]
 802976e:	f240 4285 	movw	r2, #1157	; 0x485
 8029772:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8029776:	4293      	cmp	r3, r2
 8029778:	d10c      	bne.n	8029794 <CRC_Lock+0x74>
 802977a:	4b0e      	ldr	r3, [pc, #56]	; (80297b4 <CRC_Lock+0x94>)
 802977c:	2201      	movs	r2, #1
 802977e:	601a      	str	r2, [r3, #0]
 8029780:	681a      	ldr	r2, [r3, #0]
 8029782:	2a00      	cmp	r2, #0
 8029784:	d1fc      	bne.n	8029780 <CRC_Lock+0x60>
 8029786:	4b0c      	ldr	r3, [pc, #48]	; (80297b8 <CRC_Lock+0x98>)
 8029788:	6018      	str	r0, [r3, #0]
 802978a:	6818      	ldr	r0, [r3, #0]
 802978c:	1a43      	subs	r3, r0, r1
 802978e:	4258      	negs	r0, r3
 8029790:	4158      	adcs	r0, r3
 8029792:	bd30      	pop	{r4, r5, pc}
 8029794:	4b09      	ldr	r3, [pc, #36]	; (80297bc <CRC_Lock+0x9c>)
 8029796:	2201      	movs	r2, #1
 8029798:	601a      	str	r2, [r3, #0]
 802979a:	681a      	ldr	r2, [r3, #0]
 802979c:	2a00      	cmp	r2, #0
 802979e:	d1fc      	bne.n	802979a <CRC_Lock+0x7a>
 80297a0:	4b07      	ldr	r3, [pc, #28]	; (80297c0 <CRC_Lock+0xa0>)
 80297a2:	e7f1      	b.n	8029788 <CRC_Lock+0x68>
 80297a4:	e0002000 	.word	0xe0002000
 80297a8:	e000ed00 	.word	0xe000ed00
 80297ac:	e0042000 	.word	0xe0042000
 80297b0:	5c001000 	.word	0x5c001000
 80297b4:	58024c08 	.word	0x58024c08
 80297b8:	58024c00 	.word	0x58024c00
 80297bc:	40023008 	.word	0x40023008
 80297c0:	40023000 	.word	0x40023000

080297c4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80297c4:	6101      	str	r1, [r0, #16]
 80297c6:	4770      	bx	lr

080297c8 <_ZN8touchgfx8Gestures4tickEv>:
 80297c8:	7b83      	ldrb	r3, [r0, #14]
 80297ca:	b14b      	cbz	r3, 80297e0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 80297cc:	8903      	ldrh	r3, [r0, #8]
 80297ce:	3301      	adds	r3, #1
 80297d0:	b29b      	uxth	r3, r3
 80297d2:	2b07      	cmp	r3, #7
 80297d4:	8103      	strh	r3, [r0, #8]
 80297d6:	bf81      	itttt	hi
 80297d8:	2300      	movhi	r3, #0
 80297da:	8143      	strhhi	r3, [r0, #10]
 80297dc:	8183      	strhhi	r3, [r0, #12]
 80297de:	7383      	strbhi	r3, [r0, #14]
 80297e0:	4770      	bx	lr
	...

080297e4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80297e4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80297e8:	4698      	mov	r8, r3
 80297ea:	8883      	ldrh	r3, [r0, #4]
 80297ec:	f8ad 3006 	strh.w	r3, [sp, #6]
 80297f0:	eba8 0303 	sub.w	r3, r8, r3
 80297f4:	b21b      	sxth	r3, r3
 80297f6:	4604      	mov	r4, r0
 80297f8:	2b00      	cmp	r3, #0
 80297fa:	4617      	mov	r7, r2
 80297fc:	4a18      	ldr	r2, [pc, #96]	; (8029860 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80297fe:	9200      	str	r2, [sp, #0]
 8029800:	bfb8      	it	lt
 8029802:	425b      	neglt	r3, r3
 8029804:	8aa2      	ldrh	r2, [r4, #20]
 8029806:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802980a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802980e:	b21b      	sxth	r3, r3
 8029810:	460e      	mov	r6, r1
 8029812:	4293      	cmp	r3, r2
 8029814:	88c1      	ldrh	r1, [r0, #6]
 8029816:	f8ad 1008 	strh.w	r1, [sp, #8]
 802981a:	f04f 0000 	mov.w	r0, #0
 802981e:	f88d 0004 	strb.w	r0, [sp, #4]
 8029822:	f8ad 500c 	strh.w	r5, [sp, #12]
 8029826:	dc07      	bgt.n	8029838 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8029828:	1a69      	subs	r1, r5, r1
 802982a:	b209      	sxth	r1, r1
 802982c:	2900      	cmp	r1, #0
 802982e:	bfb8      	it	lt
 8029830:	4249      	neglt	r1, r1
 8029832:	b209      	sxth	r1, r1
 8029834:	428a      	cmp	r2, r1
 8029836:	da10      	bge.n	802985a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8029838:	6920      	ldr	r0, [r4, #16]
 802983a:	6803      	ldr	r3, [r0, #0]
 802983c:	4669      	mov	r1, sp
 802983e:	685b      	ldr	r3, [r3, #4]
 8029840:	4798      	blx	r3
 8029842:	eba8 0606 	sub.w	r6, r8, r6
 8029846:	2300      	movs	r3, #0
 8029848:	1bef      	subs	r7, r5, r7
 802984a:	2001      	movs	r0, #1
 802984c:	8123      	strh	r3, [r4, #8]
 802984e:	8166      	strh	r6, [r4, #10]
 8029850:	81a7      	strh	r7, [r4, #12]
 8029852:	f8a4 8004 	strh.w	r8, [r4, #4]
 8029856:	80e5      	strh	r5, [r4, #6]
 8029858:	73a0      	strb	r0, [r4, #14]
 802985a:	b004      	add	sp, #16
 802985c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029860:	08031d3c 	.word	0x08031d3c

08029864 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8029864:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029866:	461e      	mov	r6, r3
 8029868:	1e4b      	subs	r3, r1, #1
 802986a:	2b01      	cmp	r3, #1
 802986c:	b085      	sub	sp, #20
 802986e:	4604      	mov	r4, r0
 8029870:	460d      	mov	r5, r1
 8029872:	4617      	mov	r7, r2
 8029874:	d84b      	bhi.n	802990e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8029876:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802987a:	1cd3      	adds	r3, r2, #3
 802987c:	b29b      	uxth	r3, r3
 802987e:	2b06      	cmp	r3, #6
 8029880:	d916      	bls.n	80298b0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8029882:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8029924 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029886:	f8cd c004 	str.w	ip, [sp, #4]
 802988a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802988e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029892:	6900      	ldr	r0, [r0, #16]
 8029894:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029898:	f04f 0c00 	mov.w	ip, #0
 802989c:	f88d c008 	strb.w	ip, [sp, #8]
 80298a0:	f8ad 200a 	strh.w	r2, [sp, #10]
 80298a4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80298a8:	6803      	ldr	r3, [r0, #0]
 80298aa:	a901      	add	r1, sp, #4
 80298ac:	689b      	ldr	r3, [r3, #8]
 80298ae:	4798      	blx	r3
 80298b0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80298b4:	1cd3      	adds	r3, r2, #3
 80298b6:	b29b      	uxth	r3, r3
 80298b8:	2b06      	cmp	r3, #6
 80298ba:	d916      	bls.n	80298ea <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80298bc:	f8df c064 	ldr.w	ip, [pc, #100]	; 8029924 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80298c0:	f8cd c004 	str.w	ip, [sp, #4]
 80298c4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80298c8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80298cc:	6920      	ldr	r0, [r4, #16]
 80298ce:	f8ad 100c 	strh.w	r1, [sp, #12]
 80298d2:	f04f 0c01 	mov.w	ip, #1
 80298d6:	f88d c008 	strb.w	ip, [sp, #8]
 80298da:	f8ad 200a 	strh.w	r2, [sp, #10]
 80298de:	f8ad 300e 	strh.w	r3, [sp, #14]
 80298e2:	6803      	ldr	r3, [r0, #0]
 80298e4:	a901      	add	r1, sp, #4
 80298e6:	689b      	ldr	r3, [r3, #8]
 80298e8:	4798      	blx	r3
 80298ea:	4b0d      	ldr	r3, [pc, #52]	; (8029920 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80298ec:	9301      	str	r3, [sp, #4]
 80298ee:	6920      	ldr	r0, [r4, #16]
 80298f0:	f88d 5008 	strb.w	r5, [sp, #8]
 80298f4:	2300      	movs	r3, #0
 80298f6:	f8ad 700a 	strh.w	r7, [sp, #10]
 80298fa:	f8ad 600c 	strh.w	r6, [sp, #12]
 80298fe:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029902:	6803      	ldr	r3, [r0, #0]
 8029904:	a901      	add	r1, sp, #4
 8029906:	681b      	ldr	r3, [r3, #0]
 8029908:	4798      	blx	r3
 802990a:	b005      	add	sp, #20
 802990c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802990e:	2900      	cmp	r1, #0
 8029910:	d1eb      	bne.n	80298ea <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029912:	80a2      	strh	r2, [r4, #4]
 8029914:	80c6      	strh	r6, [r0, #6]
 8029916:	60a1      	str	r1, [r4, #8]
 8029918:	81a1      	strh	r1, [r4, #12]
 802991a:	73a1      	strb	r1, [r4, #14]
 802991c:	e7e5      	b.n	80298ea <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802991e:	bf00      	nop
 8029920:	08031d28 	.word	0x08031d28
 8029924:	08031d50 	.word	0x08031d50

08029928 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8029928:	10c9      	asrs	r1, r1, #3
 802992a:	2900      	cmp	r1, #0
 802992c:	bfb8      	it	lt
 802992e:	4249      	neglt	r1, r1
 8029930:	2801      	cmp	r0, #1
 8029932:	d108      	bne.n	8029946 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8029934:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8029938:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 802993c:	4601      	mov	r1, r0
 802993e:	dd02      	ble.n	8029946 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8029940:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8029944:	4770      	bx	lr
 8029946:	29ff      	cmp	r1, #255	; 0xff
 8029948:	bfa8      	it	ge
 802994a:	21ff      	movge	r1, #255	; 0xff
 802994c:	4608      	mov	r0, r1
 802994e:	4770      	bx	lr

08029950 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8029950:	b410      	push	{r4}
 8029952:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8029956:	429c      	cmp	r4, r3
 8029958:	d803      	bhi.n	8029962 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802995a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802995e:	f7ed b8b1 	b.w	8016ac4 <_ZN8touchgfx7Outline6lineToEii>
 8029962:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029966:	4770      	bx	lr

08029968 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8029968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802996c:	b08b      	sub	sp, #44	; 0x2c
 802996e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8029972:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8029976:	9308      	str	r3, [sp, #32]
 8029978:	4606      	mov	r6, r0
 802997a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 802997e:	9309      	str	r3, [sp, #36]	; 0x24
 8029980:	468a      	mov	sl, r1
 8029982:	f7ed fa0c 	bl	8016d9e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8029986:	68b5      	ldr	r5, [r6, #8]
 8029988:	4604      	mov	r4, r0
 802998a:	2d00      	cmp	r5, #0
 802998c:	d044      	beq.n	8029a18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802998e:	6873      	ldr	r3, [r6, #4]
 8029990:	42ab      	cmp	r3, r5
 8029992:	d33d      	bcc.n	8029a10 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8029994:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8029998:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 802999c:	eb02 0b03 	add.w	fp, r2, r3
 80299a0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80299a4:	fb02 1203 	mla	r2, r2, r3, r1
 80299a8:	9205      	str	r2, [sp, #20]
 80299aa:	1e6a      	subs	r2, r5, #1
 80299ac:	9204      	str	r2, [sp, #16]
 80299ae:	f04f 0800 	mov.w	r8, #0
 80299b2:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 80299b6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80299ba:	454b      	cmp	r3, r9
 80299bc:	463a      	mov	r2, r7
 80299be:	d008      	beq.n	80299d2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 80299c0:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 80299c4:	eb03 0b09 	add.w	fp, r3, r9
 80299c8:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 80299cc:	fb03 1309 	mla	r3, r3, r9, r1
 80299d0:	9305      	str	r3, [sp, #20]
 80299d2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80299d6:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80299da:	4498      	add	r8, r3
 80299dc:	9b04      	ldr	r3, [sp, #16]
 80299de:	3b01      	subs	r3, #1
 80299e0:	9304      	str	r3, [sp, #16]
 80299e2:	9b04      	ldr	r3, [sp, #16]
 80299e4:	3301      	adds	r3, #1
 80299e6:	d015      	beq.n	8029a14 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 80299e8:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 80299ec:	42bb      	cmp	r3, r7
 80299ee:	d117      	bne.n	8029a20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 80299f0:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80299f4:	9b04      	ldr	r3, [sp, #16]
 80299f6:	4548      	cmp	r0, r9
 80299f8:	f103 33ff 	add.w	r3, r3, #4294967295
 80299fc:	d17f      	bne.n	8029afe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 80299fe:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8029a02:	4401      	add	r1, r0
 8029a04:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8029a08:	4480      	add	r8, r0
 8029a0a:	e7e9      	b.n	80299e0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8029a0c:	461f      	mov	r7, r3
 8029a0e:	e044      	b.n	8029a9a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8029a10:	2000      	movs	r0, #0
 8029a12:	e002      	b.n	8029a1a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8029a14:	2900      	cmp	r1, #0
 8029a16:	d16f      	bne.n	8029af8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8029a18:	2001      	movs	r0, #1
 8029a1a:	b00b      	add	sp, #44	; 0x2c
 8029a1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029a20:	2900      	cmp	r1, #0
 8029a22:	d030      	beq.n	8029a86 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8029a24:	2f00      	cmp	r7, #0
 8029a26:	db29      	blt.n	8029a7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029a28:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029a2c:	42bb      	cmp	r3, r7
 8029a2e:	dd25      	ble.n	8029a7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029a30:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8029a34:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029a38:	f7ff ff76 	bl	8029928 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8029a3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029a3e:	fb10 f003 	smulbb	r0, r0, r3
 8029a42:	b280      	uxth	r0, r0
 8029a44:	1c41      	adds	r1, r0, #1
 8029a46:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029a4a:	1209      	asrs	r1, r1, #8
 8029a4c:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029a50:	d014      	beq.n	8029a7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029a52:	9808      	ldr	r0, [sp, #32]
 8029a54:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029a56:	b2c9      	uxtb	r1, r1
 8029a58:	b2ba      	uxth	r2, r7
 8029a5a:	9102      	str	r1, [sp, #8]
 8029a5c:	2101      	movs	r1, #1
 8029a5e:	4413      	add	r3, r2
 8029a60:	9101      	str	r1, [sp, #4]
 8029a62:	4402      	add	r2, r0
 8029a64:	fa0f f18b 	sxth.w	r1, fp
 8029a68:	f8da 0000 	ldr.w	r0, [sl]
 8029a6c:	9100      	str	r1, [sp, #0]
 8029a6e:	6941      	ldr	r1, [r0, #20]
 8029a70:	b21b      	sxth	r3, r3
 8029a72:	460d      	mov	r5, r1
 8029a74:	b212      	sxth	r2, r2
 8029a76:	9905      	ldr	r1, [sp, #20]
 8029a78:	4650      	mov	r0, sl
 8029a7a:	47a8      	blx	r5
 8029a7c:	9b04      	ldr	r3, [sp, #16]
 8029a7e:	3301      	adds	r3, #1
 8029a80:	f107 0201 	add.w	r2, r7, #1
 8029a84:	d0c8      	beq.n	8029a18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029a86:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029a8a:	1abb      	subs	r3, r7, r2
 8029a8c:	2b00      	cmp	r3, #0
 8029a8e:	dd31      	ble.n	8029af4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029a90:	2a00      	cmp	r2, #0
 8029a92:	dabb      	bge.n	8029a0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8029a94:	2f00      	cmp	r7, #0
 8029a96:	dd2d      	ble.n	8029af4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029a98:	2200      	movs	r2, #0
 8029a9a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029a9e:	19d1      	adds	r1, r2, r7
 8029aa0:	4299      	cmp	r1, r3
 8029aa2:	db02      	blt.n	8029aaa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8029aa4:	1a9f      	subs	r7, r3, r2
 8029aa6:	2f00      	cmp	r7, #0
 8029aa8:	dd24      	ble.n	8029af4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029aaa:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8029aae:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029ab2:	f7ff ff39 	bl	8029928 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8029ab6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029ab8:	fb10 f003 	smulbb	r0, r0, r3
 8029abc:	b280      	uxth	r0, r0
 8029abe:	1c41      	adds	r1, r0, #1
 8029ac0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029ac4:	1209      	asrs	r1, r1, #8
 8029ac6:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029aca:	d013      	beq.n	8029af4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029acc:	9808      	ldr	r0, [sp, #32]
 8029ace:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029ad0:	b292      	uxth	r2, r2
 8029ad2:	b2c9      	uxtb	r1, r1
 8029ad4:	4413      	add	r3, r2
 8029ad6:	9102      	str	r1, [sp, #8]
 8029ad8:	4402      	add	r2, r0
 8029ada:	b23f      	sxth	r7, r7
 8029adc:	f8da 0000 	ldr.w	r0, [sl]
 8029ae0:	9701      	str	r7, [sp, #4]
 8029ae2:	fa0f f18b 	sxth.w	r1, fp
 8029ae6:	9100      	str	r1, [sp, #0]
 8029ae8:	6947      	ldr	r7, [r0, #20]
 8029aea:	9905      	ldr	r1, [sp, #20]
 8029aec:	b21b      	sxth	r3, r3
 8029aee:	b212      	sxth	r2, r2
 8029af0:	4650      	mov	r0, sl
 8029af2:	47b8      	blx	r7
 8029af4:	464b      	mov	r3, r9
 8029af6:	e75c      	b.n	80299b2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8029af8:	2f00      	cmp	r7, #0
 8029afa:	da95      	bge.n	8029a28 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8029afc:	e78c      	b.n	8029a18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029afe:	2900      	cmp	r1, #0
 8029b00:	d0f8      	beq.n	8029af4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029b02:	e78f      	b.n	8029a24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08029b04 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8029b04:	4b4b      	ldr	r3, [pc, #300]	; (8029c34 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8029b06:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8029b0a:	2500      	movs	r5, #0
 8029b0c:	f100 0620 	add.w	r6, r0, #32
 8029b10:	4604      	mov	r4, r0
 8029b12:	e9c0 3100 	strd	r3, r1, [r0]
 8029b16:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8029b1a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8029b1e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8029b22:	f100 0718 	add.w	r7, r0, #24
 8029b26:	4630      	mov	r0, r6
 8029b28:	4690      	mov	r8, r2
 8029b2a:	f7ec fb03 	bl	8016134 <_ZN8touchgfx7OutlineC1Ev>
 8029b2e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8029b32:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8029b36:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8029b3a:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8029b3e:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8029b42:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8029b46:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8029b4a:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8029b4e:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8029b52:	f9b8 2000 	ldrsh.w	r2, [r8]
 8029b56:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8029b5a:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8029b5e:	9500      	str	r5, [sp, #0]
 8029b60:	4410      	add	r0, r2
 8029b62:	b280      	uxth	r0, r0
 8029b64:	fa0f fa80 	sxth.w	sl, r0
 8029b68:	45aa      	cmp	sl, r5
 8029b6a:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8029b6e:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8029b72:	dd5c      	ble.n	8029c2e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029b74:	4591      	cmp	r9, r2
 8029b76:	dd5a      	ble.n	8029c2e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029b78:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8029b7c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8029b80:	440b      	add	r3, r1
 8029b82:	b29b      	uxth	r3, r3
 8029b84:	b21d      	sxth	r5, r3
 8029b86:	2d00      	cmp	r5, #0
 8029b88:	dd51      	ble.n	8029c2e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029b8a:	458e      	cmp	lr, r1
 8029b8c:	dd4f      	ble.n	8029c2e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029b8e:	45d1      	cmp	r9, sl
 8029b90:	bfb8      	it	lt
 8029b92:	fa1f f089 	uxthlt.w	r0, r9
 8029b96:	45ae      	cmp	lr, r5
 8029b98:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8029b9c:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8029ba0:	bfb8      	it	lt
 8029ba2:	fa1f f38e 	uxthlt.w	r3, lr
 8029ba6:	1a80      	subs	r0, r0, r2
 8029ba8:	1a5b      	subs	r3, r3, r1
 8029baa:	f8ad 0004 	strh.w	r0, [sp, #4]
 8029bae:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029bb2:	f8ad 2000 	strh.w	r2, [sp]
 8029bb6:	f8ad 1002 	strh.w	r1, [sp, #2]
 8029bba:	466d      	mov	r5, sp
 8029bbc:	e895 0003 	ldmia.w	r5, {r0, r1}
 8029bc0:	e887 0003 	stmia.w	r7, {r0, r1}
 8029bc4:	f8dc 3000 	ldr.w	r3, [ip]
 8029bc8:	4660      	mov	r0, ip
 8029bca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029bcc:	4639      	mov	r1, r7
 8029bce:	4798      	blx	r3
 8029bd0:	6861      	ldr	r1, [r4, #4]
 8029bd2:	4628      	mov	r0, r5
 8029bd4:	3104      	adds	r1, #4
 8029bd6:	f7ee fcb3 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029bda:	4638      	mov	r0, r7
 8029bdc:	f7ee fc6c 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029be0:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029be4:	f8bd 2000 	ldrh.w	r2, [sp]
 8029be8:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8029bec:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8029bf0:	4630      	mov	r0, r6
 8029bf2:	f7ec fa83 	bl	80160fc <_ZN8touchgfx7Outline5resetEv>
 8029bf6:	f9bd 3000 	ldrsh.w	r3, [sp]
 8029bfa:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8029bfe:	015b      	lsls	r3, r3, #5
 8029c00:	60a3      	str	r3, [r4, #8]
 8029c02:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029c06:	015b      	lsls	r3, r3, #5
 8029c08:	60e3      	str	r3, [r4, #12]
 8029c0a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8029c0e:	015b      	lsls	r3, r3, #5
 8029c10:	6123      	str	r3, [r4, #16]
 8029c12:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8029c16:	015b      	lsls	r3, r3, #5
 8029c18:	6163      	str	r3, [r4, #20]
 8029c1a:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8029c1e:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8029c22:	4620      	mov	r0, r4
 8029c24:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8029c28:	b002      	add	sp, #8
 8029c2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8029c2e:	2300      	movs	r3, #0
 8029c30:	9301      	str	r3, [sp, #4]
 8029c32:	e7c2      	b.n	8029bba <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8029c34:	08032074 	.word	0x08032074

08029c38 <_ZN8touchgfx6Canvas5closeEv>:
 8029c38:	b538      	push	{r3, r4, r5, lr}
 8029c3a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8029c3e:	4604      	mov	r4, r0
 8029c40:	b193      	cbz	r3, 8029c68 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8029c42:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8029c46:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8029c4a:	4213      	tst	r3, r2
 8029c4c:	d10c      	bne.n	8029c68 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8029c4e:	f100 0520 	add.w	r5, r0, #32
 8029c52:	b123      	cbz	r3, 8029c5e <_ZN8touchgfx6Canvas5closeEv+0x26>
 8029c54:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8029c58:	4628      	mov	r0, r5
 8029c5a:	f7ff fe79 	bl	8029950 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029c5e:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8029c62:	4628      	mov	r0, r5
 8029c64:	f7ff fe74 	bl	8029950 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029c68:	2300      	movs	r3, #0
 8029c6a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8029c6e:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8029c72:	4298      	cmp	r0, r3
 8029c74:	bf34      	ite	cc
 8029c76:	2000      	movcc	r0, #0
 8029c78:	2001      	movcs	r0, #1
 8029c7a:	bd38      	pop	{r3, r4, r5, pc}

08029c7c <_ZN8touchgfx6Canvas6renderEh>:
 8029c7c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8029c80:	4604      	mov	r4, r0
 8029c82:	6840      	ldr	r0, [r0, #4]
 8029c84:	6803      	ldr	r3, [r0, #0]
 8029c86:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8029c88:	460d      	mov	r5, r1
 8029c8a:	4798      	blx	r3
 8029c8c:	fb10 f105 	smulbb	r1, r0, r5
 8029c90:	b289      	uxth	r1, r1
 8029c92:	1c4d      	adds	r5, r1, #1
 8029c94:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8029c98:	122d      	asrs	r5, r5, #8
 8029c9a:	f000 809d 	beq.w	8029dd8 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8029c9e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8029ca2:	2b00      	cmp	r3, #0
 8029ca4:	f000 8098 	beq.w	8029dd8 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8029ca8:	4620      	mov	r0, r4
 8029caa:	f7ff ffc5 	bl	8029c38 <_ZN8touchgfx6Canvas5closeEv>
 8029cae:	4607      	mov	r7, r0
 8029cb0:	2800      	cmp	r0, #0
 8029cb2:	d048      	beq.n	8029d46 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8029cb4:	6863      	ldr	r3, [r4, #4]
 8029cb6:	4e49      	ldr	r6, [pc, #292]	; (8029ddc <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8029cb8:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8029cba:	6837      	ldr	r7, [r6, #0]
 8029cbc:	6803      	ldr	r3, [r0, #0]
 8029cbe:	689b      	ldr	r3, [r3, #8]
 8029cc0:	4798      	blx	r3
 8029cc2:	4601      	mov	r1, r0
 8029cc4:	4638      	mov	r0, r7
 8029cc6:	f7ea f9bb 	bl	8014040 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8029cca:	4607      	mov	r7, r0
 8029ccc:	f7db fb44 	bl	8005358 <_ZN8touchgfx3HAL3lcdEv>
 8029cd0:	6803      	ldr	r3, [r0, #0]
 8029cd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8029cd4:	4798      	blx	r3
 8029cd6:	4680      	mov	r8, r0
 8029cd8:	f7db fb3e 	bl	8005358 <_ZN8touchgfx3HAL3lcdEv>
 8029cdc:	6803      	ldr	r3, [r0, #0]
 8029cde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029ce0:	4798      	blx	r3
 8029ce2:	280b      	cmp	r0, #11
 8029ce4:	d85d      	bhi.n	8029da2 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8029ce6:	e8df f000 	tbb	[pc, r0]
 8029cea:	5e53      	.short	0x5e53
 8029cec:	325c066e 	.word	0x325c066e
 8029cf0:	67676742 	.word	0x67676742
 8029cf4:	6767      	.short	0x6767
 8029cf6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029cfa:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029cfe:	2208      	movs	r2, #8
 8029d00:	fb91 f2f2 	sdiv	r2, r1, r2
 8029d04:	fb08 2303 	mla	r3, r8, r3, r2
 8029d08:	441f      	add	r7, r3
 8029d0a:	424b      	negs	r3, r1
 8029d0c:	f003 0307 	and.w	r3, r3, #7
 8029d10:	f001 0107 	and.w	r1, r1, #7
 8029d14:	bf58      	it	pl
 8029d16:	4259      	negpl	r1, r3
 8029d18:	b2c9      	uxtb	r1, r1
 8029d1a:	b2ed      	uxtb	r5, r5
 8029d1c:	e9cd 1500 	strd	r1, r5, [sp]
 8029d20:	6860      	ldr	r0, [r4, #4]
 8029d22:	463a      	mov	r2, r7
 8029d24:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8029d26:	fa0f f388 	sxth.w	r3, r8
 8029d2a:	f104 0020 	add.w	r0, r4, #32
 8029d2e:	f7ff fe1b 	bl	8029968 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8029d32:	6863      	ldr	r3, [r4, #4]
 8029d34:	4607      	mov	r7, r0
 8029d36:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8029d38:	6803      	ldr	r3, [r0, #0]
 8029d3a:	691b      	ldr	r3, [r3, #16]
 8029d3c:	4798      	blx	r3
 8029d3e:	6830      	ldr	r0, [r6, #0]
 8029d40:	6803      	ldr	r3, [r0, #0]
 8029d42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029d44:	4798      	blx	r3
 8029d46:	4638      	mov	r0, r7
 8029d48:	b002      	add	sp, #8
 8029d4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029d4e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029d52:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029d56:	2204      	movs	r2, #4
 8029d58:	fb91 f2f2 	sdiv	r2, r1, r2
 8029d5c:	fb08 2303 	mla	r3, r8, r3, r2
 8029d60:	441f      	add	r7, r3
 8029d62:	424b      	negs	r3, r1
 8029d64:	f003 0303 	and.w	r3, r3, #3
 8029d68:	f001 0103 	and.w	r1, r1, #3
 8029d6c:	e7d2      	b.n	8029d14 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8029d6e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029d72:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029d76:	2900      	cmp	r1, #0
 8029d78:	f04f 0202 	mov.w	r2, #2
 8029d7c:	fb91 f2f2 	sdiv	r2, r1, r2
 8029d80:	f001 0101 	and.w	r1, r1, #1
 8029d84:	fb08 2303 	mla	r3, r8, r3, r2
 8029d88:	441f      	add	r7, r3
 8029d8a:	bfb8      	it	lt
 8029d8c:	4249      	neglt	r1, r1
 8029d8e:	e7c3      	b.n	8029d18 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8029d90:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029d94:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8029d98:	fb08 f303 	mul.w	r3, r8, r3
 8029d9c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8029da0:	441f      	add	r7, r3
 8029da2:	2100      	movs	r1, #0
 8029da4:	e7b9      	b.n	8029d1a <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8029da6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029daa:	fb08 f203 	mul.w	r2, r8, r3
 8029dae:	8b23      	ldrh	r3, [r4, #24]
 8029db0:	2103      	movs	r1, #3
 8029db2:	fb13 2301 	smlabb	r3, r3, r1, r2
 8029db6:	e7f3      	b.n	8029da0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8029db8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029dbc:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8029dc0:	fb08 2303 	mla	r3, r8, r3, r2
 8029dc4:	e7ec      	b.n	8029da0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8029dc6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029dca:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8029dce:	fb08 f303 	mul.w	r3, r8, r3
 8029dd2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8029dd6:	e7e3      	b.n	8029da0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8029dd8:	2701      	movs	r7, #1
 8029dda:	e7b4      	b.n	8029d46 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8029ddc:	20013854 	.word	0x20013854

08029de0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8029de0:	b510      	push	{r4, lr}
 8029de2:	4b07      	ldr	r3, [pc, #28]	; (8029e00 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8029de4:	781b      	ldrb	r3, [r3, #0]
 8029de6:	2b01      	cmp	r3, #1
 8029de8:	d108      	bne.n	8029dfc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8029dea:	6843      	ldr	r3, [r0, #4]
 8029dec:	6814      	ldr	r4, [r2, #0]
 8029dee:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8029df2:	680b      	ldr	r3, [r1, #0]
 8029df4:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8029df8:	6013      	str	r3, [r2, #0]
 8029dfa:	600c      	str	r4, [r1, #0]
 8029dfc:	bd10      	pop	{r4, pc}
 8029dfe:	bf00      	nop
 8029e00:	2001384c 	.word	0x2001384c

08029e04 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8029e04:	b513      	push	{r0, r1, r4, lr}
 8029e06:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8029e0a:	4604      	mov	r4, r0
 8029e0c:	e9cd 2100 	strd	r2, r1, [sp]
 8029e10:	b9a3      	cbnz	r3, 8029e3c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8029e12:	466a      	mov	r2, sp
 8029e14:	a901      	add	r1, sp, #4
 8029e16:	4620      	mov	r0, r4
 8029e18:	f7ff ffe2 	bl	8029de0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8029e1c:	68a3      	ldr	r3, [r4, #8]
 8029e1e:	9901      	ldr	r1, [sp, #4]
 8029e20:	9a00      	ldr	r2, [sp, #0]
 8029e22:	1ac9      	subs	r1, r1, r3
 8029e24:	68e3      	ldr	r3, [r4, #12]
 8029e26:	9101      	str	r1, [sp, #4]
 8029e28:	1ad2      	subs	r2, r2, r3
 8029e2a:	2a00      	cmp	r2, #0
 8029e2c:	9200      	str	r2, [sp, #0]
 8029e2e:	da0b      	bge.n	8029e48 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8029e30:	2301      	movs	r3, #1
 8029e32:	2900      	cmp	r1, #0
 8029e34:	da0e      	bge.n	8029e54 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8029e36:	f043 0304 	orr.w	r3, r3, #4
 8029e3a:	e013      	b.n	8029e64 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8029e3c:	f7ff fefc 	bl	8029c38 <_ZN8touchgfx6Canvas5closeEv>
 8029e40:	2800      	cmp	r0, #0
 8029e42:	d1e6      	bne.n	8029e12 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8029e44:	b002      	add	sp, #8
 8029e46:	bd10      	pop	{r4, pc}
 8029e48:	6963      	ldr	r3, [r4, #20]
 8029e4a:	429a      	cmp	r2, r3
 8029e4c:	bfac      	ite	ge
 8029e4e:	2302      	movge	r3, #2
 8029e50:	2300      	movlt	r3, #0
 8029e52:	e7ee      	b.n	8029e32 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8029e54:	6920      	ldr	r0, [r4, #16]
 8029e56:	4281      	cmp	r1, r0
 8029e58:	bfac      	ite	ge
 8029e5a:	2008      	movge	r0, #8
 8029e5c:	2000      	movlt	r0, #0
 8029e5e:	4318      	orrs	r0, r3
 8029e60:	b2c3      	uxtb	r3, r0
 8029e62:	b158      	cbz	r0, 8029e7c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8029e64:	2200      	movs	r2, #0
 8029e66:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8029e6a:	9901      	ldr	r1, [sp, #4]
 8029e6c:	9a00      	ldr	r2, [sp, #0]
 8029e6e:	66a1      	str	r1, [r4, #104]	; 0x68
 8029e70:	66e2      	str	r2, [r4, #108]	; 0x6c
 8029e72:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8029e76:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8029e7a:	e7e3      	b.n	8029e44 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8029e7c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8029e80:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8029e84:	4298      	cmp	r0, r3
 8029e86:	d803      	bhi.n	8029e90 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8029e88:	f104 0020 	add.w	r0, r4, #32
 8029e8c:	f7ec fe34 	bl	8016af8 <_ZN8touchgfx7Outline6moveToEii>
 8029e90:	2301      	movs	r3, #1
 8029e92:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8029e96:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8029e9a:	2300      	movs	r3, #0
 8029e9c:	e7e5      	b.n	8029e6a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8029e9e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8029ea0:	ab02      	add	r3, sp, #8
 8029ea2:	4604      	mov	r4, r0
 8029ea4:	f843 2d08 	str.w	r2, [r3, #-8]!
 8029ea8:	9101      	str	r1, [sp, #4]
 8029eaa:	461a      	mov	r2, r3
 8029eac:	a901      	add	r1, sp, #4
 8029eae:	f7ff ff97 	bl	8029de0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8029eb2:	68a3      	ldr	r3, [r4, #8]
 8029eb4:	9901      	ldr	r1, [sp, #4]
 8029eb6:	9a00      	ldr	r2, [sp, #0]
 8029eb8:	1ac9      	subs	r1, r1, r3
 8029eba:	68e3      	ldr	r3, [r4, #12]
 8029ebc:	9101      	str	r1, [sp, #4]
 8029ebe:	1ad2      	subs	r2, r2, r3
 8029ec0:	2a00      	cmp	r2, #0
 8029ec2:	9200      	str	r2, [sp, #0]
 8029ec4:	db1c      	blt.n	8029f00 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8029ec6:	6963      	ldr	r3, [r4, #20]
 8029ec8:	429a      	cmp	r2, r3
 8029eca:	bfac      	ite	ge
 8029ecc:	2002      	movge	r0, #2
 8029ece:	2000      	movlt	r0, #0
 8029ed0:	2900      	cmp	r1, #0
 8029ed2:	db17      	blt.n	8029f04 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8029ed4:	6923      	ldr	r3, [r4, #16]
 8029ed6:	4299      	cmp	r1, r3
 8029ed8:	bfac      	ite	ge
 8029eda:	2308      	movge	r3, #8
 8029edc:	2300      	movlt	r3, #0
 8029ede:	4303      	orrs	r3, r0
 8029ee0:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8029ee4:	b2dd      	uxtb	r5, r3
 8029ee6:	b978      	cbnz	r0, 8029f08 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8029ee8:	f104 0020 	add.w	r0, r4, #32
 8029eec:	f7ff fd30 	bl	8029950 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029ef0:	9b01      	ldr	r3, [sp, #4]
 8029ef2:	65e3      	str	r3, [r4, #92]	; 0x5c
 8029ef4:	9b00      	ldr	r3, [sp, #0]
 8029ef6:	6623      	str	r3, [r4, #96]	; 0x60
 8029ef8:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8029efc:	b002      	add	sp, #8
 8029efe:	bd70      	pop	{r4, r5, r6, pc}
 8029f00:	2001      	movs	r0, #1
 8029f02:	e7e5      	b.n	8029ed0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8029f04:	2304      	movs	r3, #4
 8029f06:	e7ea      	b.n	8029ede <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8029f08:	b113      	cbz	r3, 8029f10 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8029f0a:	ea10 0305 	ands.w	r3, r0, r5
 8029f0e:	d11c      	bne.n	8029f4a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8029f10:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8029f14:	f104 0620 	add.w	r6, r4, #32
 8029f18:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8029f1c:	b98b      	cbnz	r3, 8029f42 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8029f1e:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8029f22:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8029f26:	4298      	cmp	r0, r3
 8029f28:	d802      	bhi.n	8029f30 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8029f2a:	4630      	mov	r0, r6
 8029f2c:	f7ec fde4 	bl	8016af8 <_ZN8touchgfx7Outline6moveToEii>
 8029f30:	2301      	movs	r3, #1
 8029f32:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8029f36:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8029f3a:	e9dd 2100 	ldrd	r2, r1, [sp]
 8029f3e:	4630      	mov	r0, r6
 8029f40:	e7d4      	b.n	8029eec <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8029f42:	4630      	mov	r0, r6
 8029f44:	f7ff fd04 	bl	8029950 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029f48:	e7f7      	b.n	8029f3a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8029f4a:	461d      	mov	r5, r3
 8029f4c:	e7d0      	b.n	8029ef0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08029f50 <_ZN8touchgfx6CanvasD1Ev>:
 8029f50:	b510      	push	{r4, lr}
 8029f52:	4b04      	ldr	r3, [pc, #16]	; (8029f64 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8029f54:	4604      	mov	r4, r0
 8029f56:	f840 3b20 	str.w	r3, [r0], #32
 8029f5a:	f7ec f8c7 	bl	80160ec <_ZN8touchgfx7OutlineD1Ev>
 8029f5e:	4620      	mov	r0, r4
 8029f60:	bd10      	pop	{r4, pc}
 8029f62:	bf00      	nop
 8029f64:	08032074 	.word	0x08032074

08029f68 <_ZN8touchgfx6CanvasD0Ev>:
 8029f68:	b510      	push	{r4, lr}
 8029f6a:	4604      	mov	r4, r0
 8029f6c:	f7ff fff0 	bl	8029f50 <_ZN8touchgfx6CanvasD1Ev>
 8029f70:	4620      	mov	r0, r4
 8029f72:	2170      	movs	r1, #112	; 0x70
 8029f74:	f002 fd3d 	bl	802c9f2 <_ZdlPvj>
 8029f78:	4620      	mov	r0, r4
 8029f7a:	bd10      	pop	{r4, pc}

08029f7c <_ZN8touchgfx6CircleD1Ev>:
 8029f7c:	4770      	bx	lr

08029f7e <_ZN8touchgfx6CircleD0Ev>:
 8029f7e:	b510      	push	{r4, lr}
 8029f80:	2148      	movs	r1, #72	; 0x48
 8029f82:	4604      	mov	r4, r0
 8029f84:	f002 fd35 	bl	802c9f2 <_ZdlPvj>
 8029f88:	4620      	mov	r0, r4
 8029f8a:	bd10      	pop	{r4, pc}

08029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8029f8c:	b508      	push	{r3, lr}
 8029f8e:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8029f92:	f7ea fbab 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8029f96:	bd08      	pop	{r3, pc}

08029f98 <_ZN8touchgfx6CircleC1Ev>:
 8029f98:	b510      	push	{r4, lr}
 8029f9a:	4604      	mov	r4, r0
 8029f9c:	f7ea fa42 	bl	8014424 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8029fa0:	4b08      	ldr	r3, [pc, #32]	; (8029fc4 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8029fa2:	6023      	str	r3, [r4, #0]
 8029fa4:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8029fa8:	2300      	movs	r3, #0
 8029faa:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8029fae:	f24b 4205 	movw	r2, #46085	; 0xb405
 8029fb2:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8029fb6:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8029fba:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8029fbe:	60a3      	str	r3, [r4, #8]
 8029fc0:	4620      	mov	r0, r4
 8029fc2:	bd10      	pop	{r4, pc}
 8029fc4:	08032088 	.word	0x08032088

08029fc8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8029fc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029fcc:	428a      	cmp	r2, r1
 8029fce:	4680      	mov	r8, r0
 8029fd0:	4610      	mov	r0, r2
 8029fd2:	4699      	mov	r9, r3
 8029fd4:	bfa6      	itte	ge
 8029fd6:	460a      	movge	r2, r1
 8029fd8:	4603      	movge	r3, r0
 8029fda:	460b      	movlt	r3, r1
 8029fdc:	1a99      	subs	r1, r3, r2
 8029fde:	b085      	sub	sp, #20
 8029fe0:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8029fe4:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8029fe8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8029fea:	bfa4      	itt	ge
 8029fec:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8029ff0:	2200      	movge	r2, #0
 8029ff2:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8029ff6:	9300      	str	r3, [sp, #0]
 8029ff8:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8029ffc:	f102 0b01 	add.w	fp, r2, #1
 802a000:	2c00      	cmp	r4, #0
 802a002:	f040 80af 	bne.w	802a164 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 802a006:	4610      	mov	r0, r2
 802a008:	9201      	str	r2, [sp, #4]
 802a00a:	f7ea fb6f 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a00e:	a903      	add	r1, sp, #12
 802a010:	9003      	str	r0, [sp, #12]
 802a012:	4650      	mov	r0, sl
 802a014:	f7ea fa32 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a018:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802a01c:	9a01      	ldr	r2, [sp, #4]
 802a01e:	4408      	add	r0, r1
 802a020:	f8d9 1000 	ldr.w	r1, [r9]
 802a024:	4281      	cmp	r1, r0
 802a026:	bfc8      	it	gt
 802a028:	f8c9 0000 	strgt.w	r0, [r9]
 802a02c:	6839      	ldr	r1, [r7, #0]
 802a02e:	4288      	cmp	r0, r1
 802a030:	bfc8      	it	gt
 802a032:	6038      	strgt	r0, [r7, #0]
 802a034:	4610      	mov	r0, r2
 802a036:	f7ff ffa9 	bl	8029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a03a:	a903      	add	r1, sp, #12
 802a03c:	9003      	str	r0, [sp, #12]
 802a03e:	4650      	mov	r0, sl
 802a040:	f7ea fa1c 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a044:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a048:	1a10      	subs	r0, r2, r0
 802a04a:	6832      	ldr	r2, [r6, #0]
 802a04c:	4282      	cmp	r2, r0
 802a04e:	bfc8      	it	gt
 802a050:	6030      	strgt	r0, [r6, #0]
 802a052:	682a      	ldr	r2, [r5, #0]
 802a054:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802a058:	4290      	cmp	r0, r2
 802a05a:	fb9b f2f1 	sdiv	r2, fp, r1
 802a05e:	fb01 b212 	mls	r2, r1, r2, fp
 802a062:	eba1 0202 	sub.w	r2, r1, r2
 802a066:	bfc8      	it	gt
 802a068:	6028      	strgt	r0, [r5, #0]
 802a06a:	fb92 f0f1 	sdiv	r0, r2, r1
 802a06e:	fb01 2210 	mls	r2, r1, r0, r2
 802a072:	4493      	add	fp, r2
 802a074:	9b00      	ldr	r3, [sp, #0]
 802a076:	455b      	cmp	r3, fp
 802a078:	db2a      	blt.n	802a0d0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802a07a:	4658      	mov	r0, fp
 802a07c:	f7ea fb36 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a080:	a903      	add	r1, sp, #12
 802a082:	9003      	str	r0, [sp, #12]
 802a084:	4650      	mov	r0, sl
 802a086:	f7ea f9f9 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a08a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a08e:	4410      	add	r0, r2
 802a090:	f8d9 2000 	ldr.w	r2, [r9]
 802a094:	4282      	cmp	r2, r0
 802a096:	bfc8      	it	gt
 802a098:	f8c9 0000 	strgt.w	r0, [r9]
 802a09c:	683a      	ldr	r2, [r7, #0]
 802a09e:	4290      	cmp	r0, r2
 802a0a0:	bfc8      	it	gt
 802a0a2:	6038      	strgt	r0, [r7, #0]
 802a0a4:	4658      	mov	r0, fp
 802a0a6:	f7ff ff71 	bl	8029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a0aa:	a903      	add	r1, sp, #12
 802a0ac:	9003      	str	r0, [sp, #12]
 802a0ae:	4650      	mov	r0, sl
 802a0b0:	f7ea f9e4 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a0b4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a0b8:	1a10      	subs	r0, r2, r0
 802a0ba:	6832      	ldr	r2, [r6, #0]
 802a0bc:	4282      	cmp	r2, r0
 802a0be:	bfc8      	it	gt
 802a0c0:	6030      	strgt	r0, [r6, #0]
 802a0c2:	682a      	ldr	r2, [r5, #0]
 802a0c4:	4290      	cmp	r0, r2
 802a0c6:	bfc8      	it	gt
 802a0c8:	6028      	strgt	r0, [r5, #0]
 802a0ca:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802a0ce:	e7d1      	b.n	802a074 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 802a0d0:	9b00      	ldr	r3, [sp, #0]
 802a0d2:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802a0d6:	455b      	cmp	r3, fp
 802a0d8:	dd27      	ble.n	802a12a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802a0da:	4618      	mov	r0, r3
 802a0dc:	f7ea fb06 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a0e0:	a903      	add	r1, sp, #12
 802a0e2:	9003      	str	r0, [sp, #12]
 802a0e4:	4650      	mov	r0, sl
 802a0e6:	f7ea f9c9 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a0ea:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a0ee:	4410      	add	r0, r2
 802a0f0:	f8d9 2000 	ldr.w	r2, [r9]
 802a0f4:	4282      	cmp	r2, r0
 802a0f6:	bfc8      	it	gt
 802a0f8:	f8c9 0000 	strgt.w	r0, [r9]
 802a0fc:	683a      	ldr	r2, [r7, #0]
 802a0fe:	4290      	cmp	r0, r2
 802a100:	bfc8      	it	gt
 802a102:	6038      	strgt	r0, [r7, #0]
 802a104:	9800      	ldr	r0, [sp, #0]
 802a106:	f7ff ff41 	bl	8029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a10a:	a903      	add	r1, sp, #12
 802a10c:	9003      	str	r0, [sp, #12]
 802a10e:	4650      	mov	r0, sl
 802a110:	f7ea f9b4 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a114:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a118:	1a10      	subs	r0, r2, r0
 802a11a:	6832      	ldr	r2, [r6, #0]
 802a11c:	4282      	cmp	r2, r0
 802a11e:	bfc8      	it	gt
 802a120:	6030      	strgt	r0, [r6, #0]
 802a122:	682a      	ldr	r2, [r5, #0]
 802a124:	4290      	cmp	r0, r2
 802a126:	bfc8      	it	gt
 802a128:	6028      	strgt	r0, [r5, #0]
 802a12a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a12e:	f8d9 1000 	ldr.w	r1, [r9]
 802a132:	4291      	cmp	r1, r2
 802a134:	bfc8      	it	gt
 802a136:	f8c9 2000 	strgt.w	r2, [r9]
 802a13a:	683a      	ldr	r2, [r7, #0]
 802a13c:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 802a140:	429a      	cmp	r2, r3
 802a142:	bfb8      	it	lt
 802a144:	603b      	strlt	r3, [r7, #0]
 802a146:	6832      	ldr	r2, [r6, #0]
 802a148:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a14c:	429a      	cmp	r2, r3
 802a14e:	bfc8      	it	gt
 802a150:	6033      	strgt	r3, [r6, #0]
 802a152:	682a      	ldr	r2, [r5, #0]
 802a154:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a158:	429a      	cmp	r2, r3
 802a15a:	da00      	bge.n	802a15e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802a15c:	602b      	str	r3, [r5, #0]
 802a15e:	b005      	add	sp, #20
 802a160:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a164:	2002      	movs	r0, #2
 802a166:	3401      	adds	r4, #1
 802a168:	fb94 f4f0 	sdiv	r4, r4, r0
 802a16c:	4610      	mov	r0, r2
 802a16e:	9201      	str	r2, [sp, #4]
 802a170:	f7ea fabc 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a174:	a903      	add	r1, sp, #12
 802a176:	9003      	str	r0, [sp, #12]
 802a178:	4650      	mov	r0, sl
 802a17a:	f7ea f97f 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a17e:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802a182:	9a01      	ldr	r2, [sp, #4]
 802a184:	4408      	add	r0, r1
 802a186:	f8d9 1000 	ldr.w	r1, [r9]
 802a18a:	1b03      	subs	r3, r0, r4
 802a18c:	4299      	cmp	r1, r3
 802a18e:	bfc8      	it	gt
 802a190:	f8c9 3000 	strgt.w	r3, [r9]
 802a194:	6839      	ldr	r1, [r7, #0]
 802a196:	428b      	cmp	r3, r1
 802a198:	bfc8      	it	gt
 802a19a:	603b      	strgt	r3, [r7, #0]
 802a19c:	f8d9 1000 	ldr.w	r1, [r9]
 802a1a0:	4420      	add	r0, r4
 802a1a2:	4281      	cmp	r1, r0
 802a1a4:	bfc8      	it	gt
 802a1a6:	f8c9 0000 	strgt.w	r0, [r9]
 802a1aa:	6839      	ldr	r1, [r7, #0]
 802a1ac:	4288      	cmp	r0, r1
 802a1ae:	bfc8      	it	gt
 802a1b0:	6038      	strgt	r0, [r7, #0]
 802a1b2:	4610      	mov	r0, r2
 802a1b4:	f7ff feea 	bl	8029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a1b8:	a903      	add	r1, sp, #12
 802a1ba:	9003      	str	r0, [sp, #12]
 802a1bc:	4650      	mov	r0, sl
 802a1be:	f7ea f95d 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a1c2:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a1c6:	1a10      	subs	r0, r2, r0
 802a1c8:	6832      	ldr	r2, [r6, #0]
 802a1ca:	1b01      	subs	r1, r0, r4
 802a1cc:	428a      	cmp	r2, r1
 802a1ce:	bfc8      	it	gt
 802a1d0:	6031      	strgt	r1, [r6, #0]
 802a1d2:	682a      	ldr	r2, [r5, #0]
 802a1d4:	4291      	cmp	r1, r2
 802a1d6:	bfc8      	it	gt
 802a1d8:	6029      	strgt	r1, [r5, #0]
 802a1da:	6832      	ldr	r2, [r6, #0]
 802a1dc:	4420      	add	r0, r4
 802a1de:	4282      	cmp	r2, r0
 802a1e0:	bfc8      	it	gt
 802a1e2:	6030      	strgt	r0, [r6, #0]
 802a1e4:	682a      	ldr	r2, [r5, #0]
 802a1e6:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802a1ea:	4290      	cmp	r0, r2
 802a1ec:	fb9b f2f1 	sdiv	r2, fp, r1
 802a1f0:	fb01 b212 	mls	r2, r1, r2, fp
 802a1f4:	eba1 0202 	sub.w	r2, r1, r2
 802a1f8:	bfc8      	it	gt
 802a1fa:	6028      	strgt	r0, [r5, #0]
 802a1fc:	fb92 f0f1 	sdiv	r0, r2, r1
 802a200:	fb01 2210 	mls	r2, r1, r0, r2
 802a204:	4493      	add	fp, r2
 802a206:	9b00      	ldr	r3, [sp, #0]
 802a208:	455b      	cmp	r3, fp
 802a20a:	db40      	blt.n	802a28e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 802a20c:	4658      	mov	r0, fp
 802a20e:	f7ea fa6d 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a212:	a903      	add	r1, sp, #12
 802a214:	9003      	str	r0, [sp, #12]
 802a216:	4650      	mov	r0, sl
 802a218:	f7ea f930 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a21c:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a220:	4410      	add	r0, r2
 802a222:	f8d9 2000 	ldr.w	r2, [r9]
 802a226:	1b01      	subs	r1, r0, r4
 802a228:	428a      	cmp	r2, r1
 802a22a:	bfc8      	it	gt
 802a22c:	f8c9 1000 	strgt.w	r1, [r9]
 802a230:	683a      	ldr	r2, [r7, #0]
 802a232:	4291      	cmp	r1, r2
 802a234:	bfc8      	it	gt
 802a236:	6039      	strgt	r1, [r7, #0]
 802a238:	f8d9 2000 	ldr.w	r2, [r9]
 802a23c:	4420      	add	r0, r4
 802a23e:	4282      	cmp	r2, r0
 802a240:	bfc8      	it	gt
 802a242:	f8c9 0000 	strgt.w	r0, [r9]
 802a246:	683a      	ldr	r2, [r7, #0]
 802a248:	4290      	cmp	r0, r2
 802a24a:	bfc8      	it	gt
 802a24c:	6038      	strgt	r0, [r7, #0]
 802a24e:	4658      	mov	r0, fp
 802a250:	f7ff fe9c 	bl	8029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a254:	a903      	add	r1, sp, #12
 802a256:	9003      	str	r0, [sp, #12]
 802a258:	4650      	mov	r0, sl
 802a25a:	f7ea f90f 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a25e:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a262:	1a10      	subs	r0, r2, r0
 802a264:	6832      	ldr	r2, [r6, #0]
 802a266:	1b01      	subs	r1, r0, r4
 802a268:	428a      	cmp	r2, r1
 802a26a:	bfc8      	it	gt
 802a26c:	6031      	strgt	r1, [r6, #0]
 802a26e:	682a      	ldr	r2, [r5, #0]
 802a270:	4291      	cmp	r1, r2
 802a272:	bfc8      	it	gt
 802a274:	6029      	strgt	r1, [r5, #0]
 802a276:	6832      	ldr	r2, [r6, #0]
 802a278:	4420      	add	r0, r4
 802a27a:	4282      	cmp	r2, r0
 802a27c:	bfc8      	it	gt
 802a27e:	6030      	strgt	r0, [r6, #0]
 802a280:	682a      	ldr	r2, [r5, #0]
 802a282:	4290      	cmp	r0, r2
 802a284:	bfc8      	it	gt
 802a286:	6028      	strgt	r0, [r5, #0]
 802a288:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802a28c:	e7bb      	b.n	802a206 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802a28e:	9b00      	ldr	r3, [sp, #0]
 802a290:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802a294:	455b      	cmp	r3, fp
 802a296:	f77f af62 	ble.w	802a15e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802a29a:	4618      	mov	r0, r3
 802a29c:	f7ea fa26 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a2a0:	a903      	add	r1, sp, #12
 802a2a2:	9003      	str	r0, [sp, #12]
 802a2a4:	4650      	mov	r0, sl
 802a2a6:	f7ea f8e9 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a2aa:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a2ae:	4410      	add	r0, r2
 802a2b0:	f8d9 2000 	ldr.w	r2, [r9]
 802a2b4:	1b01      	subs	r1, r0, r4
 802a2b6:	428a      	cmp	r2, r1
 802a2b8:	bfc8      	it	gt
 802a2ba:	f8c9 1000 	strgt.w	r1, [r9]
 802a2be:	683a      	ldr	r2, [r7, #0]
 802a2c0:	4291      	cmp	r1, r2
 802a2c2:	bfc8      	it	gt
 802a2c4:	6039      	strgt	r1, [r7, #0]
 802a2c6:	f8d9 2000 	ldr.w	r2, [r9]
 802a2ca:	4420      	add	r0, r4
 802a2cc:	4282      	cmp	r2, r0
 802a2ce:	bfc8      	it	gt
 802a2d0:	f8c9 0000 	strgt.w	r0, [r9]
 802a2d4:	683b      	ldr	r3, [r7, #0]
 802a2d6:	4298      	cmp	r0, r3
 802a2d8:	bfc8      	it	gt
 802a2da:	6038      	strgt	r0, [r7, #0]
 802a2dc:	9800      	ldr	r0, [sp, #0]
 802a2de:	f7ff fe55 	bl	8029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a2e2:	a903      	add	r1, sp, #12
 802a2e4:	9003      	str	r0, [sp, #12]
 802a2e6:	4650      	mov	r0, sl
 802a2e8:	f7ea f8c8 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a2ec:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a2f0:	6832      	ldr	r2, [r6, #0]
 802a2f2:	1a18      	subs	r0, r3, r0
 802a2f4:	1b03      	subs	r3, r0, r4
 802a2f6:	429a      	cmp	r2, r3
 802a2f8:	bfc8      	it	gt
 802a2fa:	6033      	strgt	r3, [r6, #0]
 802a2fc:	682a      	ldr	r2, [r5, #0]
 802a2fe:	4293      	cmp	r3, r2
 802a300:	bfc8      	it	gt
 802a302:	602b      	strgt	r3, [r5, #0]
 802a304:	6833      	ldr	r3, [r6, #0]
 802a306:	4404      	add	r4, r0
 802a308:	42a3      	cmp	r3, r4
 802a30a:	bfc8      	it	gt
 802a30c:	6034      	strgt	r4, [r6, #0]
 802a30e:	682b      	ldr	r3, [r5, #0]
 802a310:	429c      	cmp	r4, r3
 802a312:	bfc8      	it	gt
 802a314:	602c      	strgt	r4, [r5, #0]
 802a316:	e722      	b.n	802a15e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0802a318 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 802a318:	b530      	push	{r4, r5, lr}
 802a31a:	4604      	mov	r4, r0
 802a31c:	4608      	mov	r0, r1
 802a31e:	4611      	mov	r1, r2
 802a320:	461a      	mov	r2, r3
 802a322:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 802a326:	b089      	sub	sp, #36	; 0x24
 802a328:	015b      	lsls	r3, r3, #5
 802a32a:	9304      	str	r3, [sp, #16]
 802a32c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802a330:	2500      	movs	r5, #0
 802a332:	015b      	lsls	r3, r3, #5
 802a334:	e9cd 3506 	strd	r3, r5, [sp, #24]
 802a338:	ab07      	add	r3, sp, #28
 802a33a:	9302      	str	r3, [sp, #8]
 802a33c:	ab06      	add	r3, sp, #24
 802a33e:	9301      	str	r3, [sp, #4]
 802a340:	ab05      	add	r3, sp, #20
 802a342:	9300      	str	r3, [sp, #0]
 802a344:	ab04      	add	r3, sp, #16
 802a346:	9505      	str	r5, [sp, #20]
 802a348:	f7ff fe3e 	bl	8029fc8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 802a34c:	2520      	movs	r5, #32
 802a34e:	9a04      	ldr	r2, [sp, #16]
 802a350:	9805      	ldr	r0, [sp, #20]
 802a352:	fb92 f2f5 	sdiv	r2, r2, r5
 802a356:	fb90 f0f5 	sdiv	r0, r0, r5
 802a35a:	b292      	uxth	r2, r2
 802a35c:	3002      	adds	r0, #2
 802a35e:	1a80      	subs	r0, r0, r2
 802a360:	9b06      	ldr	r3, [sp, #24]
 802a362:	9907      	ldr	r1, [sp, #28]
 802a364:	fb93 f3f5 	sdiv	r3, r3, r5
 802a368:	fb91 f1f5 	sdiv	r1, r1, r5
 802a36c:	b29b      	uxth	r3, r3
 802a36e:	3102      	adds	r1, #2
 802a370:	1ac9      	subs	r1, r1, r3
 802a372:	3a01      	subs	r2, #1
 802a374:	3b01      	subs	r3, #1
 802a376:	80a0      	strh	r0, [r4, #4]
 802a378:	4620      	mov	r0, r4
 802a37a:	8022      	strh	r2, [r4, #0]
 802a37c:	8063      	strh	r3, [r4, #2]
 802a37e:	80e1      	strh	r1, [r4, #6]
 802a380:	b009      	add	sp, #36	; 0x24
 802a382:	bd30      	pop	{r4, r5, pc}

0802a384 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 802a384:	b510      	push	{r4, lr}
 802a386:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802a38a:	4604      	mov	r4, r0
 802a38c:	f7ff ffc4 	bl	802a318 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802a390:	4620      	mov	r0, r4
 802a392:	bd10      	pop	{r4, pc}

0802a394 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 802a394:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a396:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802a39a:	4606      	mov	r6, r0
 802a39c:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 802a3a0:	6813      	ldr	r3, [r2, #0]
 802a3a2:	42a5      	cmp	r5, r4
 802a3a4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 802a3a8:	da2b      	bge.n	802a402 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802a3aa:	42a3      	cmp	r3, r4
 802a3ac:	dd14      	ble.n	802a3d8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 802a3ae:	b168      	cbz	r0, 802a3cc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a3b0:	4267      	negs	r7, r4
 802a3b2:	fb97 f2f0 	sdiv	r2, r7, r0
 802a3b6:	fb00 7212 	mls	r2, r0, r2, r7
 802a3ba:	1a82      	subs	r2, r0, r2
 802a3bc:	fb92 f7f0 	sdiv	r7, r2, r0
 802a3c0:	fb00 2017 	mls	r0, r0, r7, r2
 802a3c4:	1a24      	subs	r4, r4, r0
 802a3c6:	42ac      	cmp	r4, r5
 802a3c8:	bfb8      	it	lt
 802a3ca:	462c      	movlt	r4, r5
 802a3cc:	4630      	mov	r0, r6
 802a3ce:	4622      	mov	r2, r4
 802a3d0:	f7ff ffa2 	bl	802a318 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802a3d4:	4630      	mov	r0, r6
 802a3d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802a3d8:	42ab      	cmp	r3, r5
 802a3da:	dd0e      	ble.n	802a3fa <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802a3dc:	b168      	cbz	r0, 802a3fa <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802a3de:	425f      	negs	r7, r3
 802a3e0:	fb97 f2f0 	sdiv	r2, r7, r0
 802a3e4:	fb00 7212 	mls	r2, r0, r2, r7
 802a3e8:	1a82      	subs	r2, r0, r2
 802a3ea:	fb92 f7f0 	sdiv	r7, r2, r0
 802a3ee:	fb00 2017 	mls	r0, r0, r7, r2
 802a3f2:	1a1b      	subs	r3, r3, r0
 802a3f4:	42ab      	cmp	r3, r5
 802a3f6:	bfb8      	it	lt
 802a3f8:	462b      	movlt	r3, r5
 802a3fa:	4622      	mov	r2, r4
 802a3fc:	461c      	mov	r4, r3
 802a3fe:	4613      	mov	r3, r2
 802a400:	e7e4      	b.n	802a3cc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a402:	42a3      	cmp	r3, r4
 802a404:	da10      	bge.n	802a428 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 802a406:	b148      	cbz	r0, 802a41c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 802a408:	fb94 f2f0 	sdiv	r2, r4, r0
 802a40c:	fb00 4212 	mls	r2, r0, r2, r4
 802a410:	1a82      	subs	r2, r0, r2
 802a412:	fb92 f7f0 	sdiv	r7, r2, r0
 802a416:	fb00 2017 	mls	r0, r0, r7, r2
 802a41a:	4404      	add	r4, r0
 802a41c:	42a5      	cmp	r5, r4
 802a41e:	bfa8      	it	ge
 802a420:	4625      	movge	r5, r4
 802a422:	461c      	mov	r4, r3
 802a424:	462b      	mov	r3, r5
 802a426:	e7d1      	b.n	802a3cc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a428:	42ab      	cmp	r3, r5
 802a42a:	dacf      	bge.n	802a3cc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a42c:	2800      	cmp	r0, #0
 802a42e:	d0cd      	beq.n	802a3cc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a430:	fb93 f2f0 	sdiv	r2, r3, r0
 802a434:	fb00 3212 	mls	r2, r0, r2, r3
 802a438:	1a82      	subs	r2, r0, r2
 802a43a:	fb92 f7f0 	sdiv	r7, r2, r0
 802a43e:	fb00 2017 	mls	r0, r0, r7, r2
 802a442:	4403      	add	r3, r0
 802a444:	42ab      	cmp	r3, r5
 802a446:	bfa8      	it	ge
 802a448:	462b      	movge	r3, r5
 802a44a:	e7bf      	b.n	802a3cc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

0802a44c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 802a44c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a450:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 802a454:	42ae      	cmp	r6, r5
 802a456:	bfa2      	ittt	ge
 802a458:	4633      	movge	r3, r6
 802a45a:	462e      	movge	r6, r5
 802a45c:	461d      	movge	r5, r3
 802a45e:	1bab      	subs	r3, r5, r6
 802a460:	468b      	mov	fp, r1
 802a462:	6c01      	ldr	r1, [r0, #64]	; 0x40
 802a464:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 802a468:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 802a46c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802a470:	f04f 0220 	mov.w	r2, #32
 802a474:	b0ab      	sub	sp, #172	; 0xac
 802a476:	4604      	mov	r4, r0
 802a478:	bfa4      	itt	ge
 802a47a:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802a47e:	2600      	movge	r6, #0
 802a480:	fb99 f9f2 	sdiv	r9, r9, r2
 802a484:	fb9a faf2 	sdiv	sl, sl, r2
 802a488:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802a48a:	2900      	cmp	r1, #0
 802a48c:	f000 80f5 	beq.w	802a67a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 802a490:	f9bb 0000 	ldrsh.w	r0, [fp]
 802a494:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 802a498:	eba9 0700 	sub.w	r7, r9, r0
 802a49c:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 802a4a0:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 802a4a4:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 802a4a8:	ebaa 0802 	sub.w	r8, sl, r2
 802a4ac:	4407      	add	r7, r0
 802a4ae:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 802a4b2:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 802a4b6:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802a4ba:	b23f      	sxth	r7, r7
 802a4bc:	4490      	add	r8, r2
 802a4be:	eba9 0707 	sub.w	r7, r9, r7
 802a4c2:	fa0f f888 	sxth.w	r8, r8
 802a4c6:	ebaa 0808 	sub.w	r8, sl, r8
 802a4ca:	2f00      	cmp	r7, #0
 802a4cc:	bfb8      	it	lt
 802a4ce:	427f      	neglt	r7, r7
 802a4d0:	f1b8 0f00 	cmp.w	r8, #0
 802a4d4:	bfb8      	it	lt
 802a4d6:	f1c8 0800 	rsblt	r8, r8, #0
 802a4da:	45bc      	cmp	ip, r7
 802a4dc:	bfcc      	ite	gt
 802a4de:	f10c 0701 	addgt.w	r7, ip, #1
 802a4e2:	3701      	addle	r7, #1
 802a4e4:	4540      	cmp	r0, r8
 802a4e6:	bfc8      	it	gt
 802a4e8:	f100 0801 	addgt.w	r8, r0, #1
 802a4ec:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 802a4f0:	f100 0001 	add.w	r0, r0, #1
 802a4f4:	ea4f 0060 	mov.w	r0, r0, asr #1
 802a4f8:	f04f 0202 	mov.w	r2, #2
 802a4fc:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 802a500:	fb91 f1f2 	sdiv	r1, r1, r2
 802a504:	eba3 0301 	sub.w	r3, r3, r1
 802a508:	bfd8      	it	le
 802a50a:	f108 0801 	addle.w	r8, r8, #1
 802a50e:	9201      	str	r2, [sp, #4]
 802a510:	930d      	str	r3, [sp, #52]	; 0x34
 802a512:	f7ea f8cb 	bl	80146ac <_ZN8touchgfx7CWRUtil4sineEi>
 802a516:	a92a      	add	r1, sp, #168	; 0xa8
 802a518:	fb08 f808 	mul.w	r8, r8, r8
 802a51c:	f841 0d70 	str.w	r0, [r1, #-112]!
 802a520:	a80d      	add	r0, sp, #52	; 0x34
 802a522:	f7e9 ffab 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a526:	fb07 8707 	mla	r7, r7, r7, r8
 802a52a:	f04f 0c20 	mov.w	ip, #32
 802a52e:	fb90 f0fc 	sdiv	r0, r0, ip
 802a532:	4340      	muls	r0, r0
 802a534:	4287      	cmp	r7, r0
 802a536:	9a01      	ldr	r2, [sp, #4]
 802a538:	da04      	bge.n	802a544 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 802a53a:	2401      	movs	r4, #1
 802a53c:	4620      	mov	r0, r4
 802a53e:	b02b      	add	sp, #172	; 0xac
 802a540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a544:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802a546:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802a548:	fb91 f3f2 	sdiv	r3, r1, r2
 802a54c:	4403      	add	r3, r0
 802a54e:	fb93 f3fc 	sdiv	r3, r3, ip
 802a552:	f9bb 1000 	ldrsh.w	r1, [fp]
 802a556:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 802a55a:	440a      	add	r2, r1
 802a55c:	b212      	sxth	r2, r2
 802a55e:	454a      	cmp	r2, r9
 802a560:	bfa8      	it	ge
 802a562:	464a      	movge	r2, r9
 802a564:	428a      	cmp	r2, r1
 802a566:	bfac      	ite	ge
 802a568:	eba9 0902 	subge.w	r9, r9, r2
 802a56c:	eba9 0901 	sublt.w	r9, r9, r1
 802a570:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 802a574:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 802a578:	440a      	add	r2, r1
 802a57a:	b212      	sxth	r2, r2
 802a57c:	4552      	cmp	r2, sl
 802a57e:	bfa8      	it	ge
 802a580:	4652      	movge	r2, sl
 802a582:	428a      	cmp	r2, r1
 802a584:	bfac      	ite	ge
 802a586:	ebaa 0a02 	subge.w	sl, sl, r2
 802a58a:	ebaa 0a01 	sublt.w	sl, sl, r1
 802a58e:	3301      	adds	r3, #1
 802a590:	fb0a fa0a 	mul.w	sl, sl, sl
 802a594:	fb09 a909 	mla	r9, r9, r9, sl
 802a598:	435b      	muls	r3, r3
 802a59a:	4599      	cmp	r9, r3
 802a59c:	dccd      	bgt.n	802a53a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 802a59e:	465a      	mov	r2, fp
 802a5a0:	4621      	mov	r1, r4
 802a5a2:	a80e      	add	r0, sp, #56	; 0x38
 802a5a4:	f7ff faae 	bl	8029b04 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 802a5a8:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802a5aa:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802a5ac:	9209      	str	r2, [sp, #36]	; 0x24
 802a5ae:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 802a5b2:	930a      	str	r3, [sp, #40]	; 0x28
 802a5b4:	dd07      	ble.n	802a5c6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 802a5b6:	2102      	movs	r1, #2
 802a5b8:	fb93 f3f1 	sdiv	r3, r3, r1
 802a5bc:	4413      	add	r3, r2
 802a5be:	930a      	str	r3, [sp, #40]	; 0x28
 802a5c0:	fb93 f3f1 	sdiv	r3, r3, r1
 802a5c4:	9309      	str	r3, [sp, #36]	; 0x24
 802a5c6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a5ca:	4630      	mov	r0, r6
 802a5cc:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802a5d0:	930b      	str	r3, [sp, #44]	; 0x2c
 802a5d2:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 802a5d6:	f7ea f889 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a5da:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 802a5de:	f04f 0a02 	mov.w	sl, #2
 802a5e2:	f849 0d74 	str.w	r0, [r9, #-116]!
 802a5e6:	a80b      	add	r0, sp, #44	; 0x2c
 802a5e8:	4649      	mov	r1, r9
 802a5ea:	f7e9 ff47 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a5ee:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a5f0:	fb90 f0fa 	sdiv	r0, r0, sl
 802a5f4:	eb00 0b03 	add.w	fp, r0, r3
 802a5f8:	4630      	mov	r0, r6
 802a5fa:	f7ff fcc7 	bl	8029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a5fe:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 802a602:	017f      	lsls	r7, r7, #5
 802a604:	f848 0d78 	str.w	r0, [r8, #-120]!
 802a608:	a80b      	add	r0, sp, #44	; 0x2c
 802a60a:	4641      	mov	r1, r8
 802a60c:	f7e9 ff36 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a610:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a612:	fb90 f0fa 	sdiv	r0, r0, sl
 802a616:	4659      	mov	r1, fp
 802a618:	1a12      	subs	r2, r2, r0
 802a61a:	a80e      	add	r0, sp, #56	; 0x38
 802a61c:	f7ff fbf2 	bl	8029e04 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 802a620:	f106 0a20 	add.w	sl, r6, #32
 802a624:	bb67      	cbnz	r7, 802a680 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 802a626:	46b3      	mov	fp, r6
 802a628:	45aa      	cmp	sl, r5
 802a62a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802a62c:	dc33      	bgt.n	802a696 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 802a62e:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a630:	4650      	mov	r0, sl
 802a632:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 802a636:	920b      	str	r2, [sp, #44]	; 0x2c
 802a638:	f7ea f858 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a63c:	4641      	mov	r1, r8
 802a63e:	900c      	str	r0, [sp, #48]	; 0x30
 802a640:	a80b      	add	r0, sp, #44	; 0x2c
 802a642:	f7e9 ff1b 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a646:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 802a648:	2302      	movs	r3, #2
 802a64a:	fb90 f0f3 	sdiv	r0, r0, r3
 802a64e:	eb00 0b02 	add.w	fp, r0, r2
 802a652:	4650      	mov	r0, sl
 802a654:	f7ff fc9a 	bl	8029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a658:	4649      	mov	r1, r9
 802a65a:	900d      	str	r0, [sp, #52]	; 0x34
 802a65c:	a80b      	add	r0, sp, #44	; 0x2c
 802a65e:	f7e9 ff0d 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a662:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a664:	2302      	movs	r3, #2
 802a666:	4659      	mov	r1, fp
 802a668:	fb90 f0f3 	sdiv	r0, r0, r3
 802a66c:	1a12      	subs	r2, r2, r0
 802a66e:	a80e      	add	r0, sp, #56	; 0x38
 802a670:	46d3      	mov	fp, sl
 802a672:	f7ff fc14 	bl	8029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a676:	44ba      	add	sl, r7
 802a678:	e7d6      	b.n	802a628 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 802a67a:	fb93 f3f2 	sdiv	r3, r3, r2
 802a67e:	e768      	b.n	802a552 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 802a680:	fb9a f2f7 	sdiv	r2, sl, r7
 802a684:	fb07 a212 	mls	r2, r7, r2, sl
 802a688:	1aba      	subs	r2, r7, r2
 802a68a:	fb92 f1f7 	sdiv	r1, r2, r7
 802a68e:	fb07 2211 	mls	r2, r7, r1, r2
 802a692:	4492      	add	sl, r2
 802a694:	e7c7      	b.n	802a626 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 802a696:	45ab      	cmp	fp, r5
 802a698:	da23      	bge.n	802a6e2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 802a69a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a69c:	4628      	mov	r0, r5
 802a69e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 802a6a2:	920b      	str	r2, [sp, #44]	; 0x2c
 802a6a4:	f7ea f822 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a6a8:	4641      	mov	r1, r8
 802a6aa:	900c      	str	r0, [sp, #48]	; 0x30
 802a6ac:	a80b      	add	r0, sp, #44	; 0x2c
 802a6ae:	f7e9 fee5 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a6b2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a6b4:	f04f 0a02 	mov.w	sl, #2
 802a6b8:	fb90 f0fa 	sdiv	r0, r0, sl
 802a6bc:	4403      	add	r3, r0
 802a6be:	4628      	mov	r0, r5
 802a6c0:	9301      	str	r3, [sp, #4]
 802a6c2:	f7ff fc63 	bl	8029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a6c6:	4649      	mov	r1, r9
 802a6c8:	900d      	str	r0, [sp, #52]	; 0x34
 802a6ca:	a80b      	add	r0, sp, #44	; 0x2c
 802a6cc:	f7e9 fed6 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a6d0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a6d2:	9b01      	ldr	r3, [sp, #4]
 802a6d4:	fb90 f0fa 	sdiv	r0, r0, sl
 802a6d8:	4619      	mov	r1, r3
 802a6da:	1a12      	subs	r2, r2, r0
 802a6dc:	a80e      	add	r0, sp, #56	; 0x38
 802a6de:	f7ff fbde 	bl	8029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a6e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802a6e4:	b99b      	cbnz	r3, 802a70e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 802a6e6:	1bad      	subs	r5, r5, r6
 802a6e8:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 802a6ec:	da04      	bge.n	802a6f8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802a6ee:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 802a6f2:	a80e      	add	r0, sp, #56	; 0x38
 802a6f4:	f7ff fbd3 	bl	8029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a6f8:	21ff      	movs	r1, #255	; 0xff
 802a6fa:	a80e      	add	r0, sp, #56	; 0x38
 802a6fc:	f7ff fabe 	bl	8029c7c <_ZN8touchgfx6Canvas6renderEh>
 802a700:	4604      	mov	r4, r0
 802a702:	4b8a      	ldr	r3, [pc, #552]	; (802a92c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 802a704:	930e      	str	r3, [sp, #56]	; 0x38
 802a706:	a816      	add	r0, sp, #88	; 0x58
 802a708:	f7eb fcf0 	bl	80160ec <_ZN8touchgfx7OutlineD1Ev>
 802a70c:	e716      	b.n	802a53c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 802a70e:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 802a712:	429a      	cmp	r2, r3
 802a714:	f0c0 8107 	bcc.w	802a926 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 802a718:	1bab      	subs	r3, r5, r6
 802a71a:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 802a71e:	9301      	str	r3, [sp, #4]
 802a720:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802a724:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 802a728:	da43      	bge.n	802a7b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802a72a:	4628      	mov	r0, r5
 802a72c:	f7e9 ffde 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a730:	4649      	mov	r1, r9
 802a732:	900d      	str	r0, [sp, #52]	; 0x34
 802a734:	a809      	add	r0, sp, #36	; 0x24
 802a736:	f7e9 fea1 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a73a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a73c:	18c3      	adds	r3, r0, r3
 802a73e:	4628      	mov	r0, r5
 802a740:	9303      	str	r3, [sp, #12]
 802a742:	f7ff fc23 	bl	8029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a746:	4649      	mov	r1, r9
 802a748:	900d      	str	r0, [sp, #52]	; 0x34
 802a74a:	a809      	add	r0, sp, #36	; 0x24
 802a74c:	f7e9 fe96 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a750:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802a752:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 802a756:	1a1b      	subs	r3, r3, r0
 802a758:	9302      	str	r3, [sp, #8]
 802a75a:	9204      	str	r2, [sp, #16]
 802a75c:	eb0a 0305 	add.w	r3, sl, r5
 802a760:	9a04      	ldr	r2, [sp, #16]
 802a762:	4293      	cmp	r3, r2
 802a764:	da25      	bge.n	802a7b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802a766:	4618      	mov	r0, r3
 802a768:	9306      	str	r3, [sp, #24]
 802a76a:	f7e9 ffbf 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a76e:	4649      	mov	r1, r9
 802a770:	900d      	str	r0, [sp, #52]	; 0x34
 802a772:	a80a      	add	r0, sp, #40	; 0x28
 802a774:	f7e9 fe82 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a778:	9b03      	ldr	r3, [sp, #12]
 802a77a:	2202      	movs	r2, #2
 802a77c:	fb90 f0f2 	sdiv	r0, r0, r2
 802a780:	18c3      	adds	r3, r0, r3
 802a782:	9305      	str	r3, [sp, #20]
 802a784:	9b06      	ldr	r3, [sp, #24]
 802a786:	9207      	str	r2, [sp, #28]
 802a788:	4618      	mov	r0, r3
 802a78a:	f7ff fbff 	bl	8029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a78e:	a92a      	add	r1, sp, #168	; 0xa8
 802a790:	f841 0d78 	str.w	r0, [r1, #-120]!
 802a794:	a80a      	add	r0, sp, #40	; 0x28
 802a796:	f7e9 fe71 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a79a:	9b02      	ldr	r3, [sp, #8]
 802a79c:	9a07      	ldr	r2, [sp, #28]
 802a79e:	9905      	ldr	r1, [sp, #20]
 802a7a0:	fb90 f2f2 	sdiv	r2, r0, r2
 802a7a4:	a80e      	add	r0, sp, #56	; 0x38
 802a7a6:	1a9a      	subs	r2, r3, r2
 802a7a8:	f7ff fb79 	bl	8029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a7ac:	9b06      	ldr	r3, [sp, #24]
 802a7ae:	4453      	add	r3, sl
 802a7b0:	e7d6      	b.n	802a760 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 802a7b2:	45ab      	cmp	fp, r5
 802a7b4:	da25      	bge.n	802a802 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 802a7b6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a7ba:	4628      	mov	r0, r5
 802a7bc:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802a7c0:	930b      	str	r3, [sp, #44]	; 0x2c
 802a7c2:	f7e9 ff93 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a7c6:	4641      	mov	r1, r8
 802a7c8:	900c      	str	r0, [sp, #48]	; 0x30
 802a7ca:	a80b      	add	r0, sp, #44	; 0x2c
 802a7cc:	f7e9 fe56 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a7d0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a7d2:	2202      	movs	r2, #2
 802a7d4:	fb90 f0f2 	sdiv	r0, r0, r2
 802a7d8:	eb00 0903 	add.w	r9, r0, r3
 802a7dc:	4628      	mov	r0, r5
 802a7de:	9202      	str	r2, [sp, #8]
 802a7e0:	f7ff fbd4 	bl	8029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a7e4:	a92a      	add	r1, sp, #168	; 0xa8
 802a7e6:	f841 0d74 	str.w	r0, [r1, #-116]!
 802a7ea:	a80b      	add	r0, sp, #44	; 0x2c
 802a7ec:	f7e9 fe46 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a7f0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802a7f2:	9a02      	ldr	r2, [sp, #8]
 802a7f4:	fb90 f2f2 	sdiv	r2, r0, r2
 802a7f8:	4649      	mov	r1, r9
 802a7fa:	1a9a      	subs	r2, r3, r2
 802a7fc:	a80e      	add	r0, sp, #56	; 0x38
 802a7fe:	f7ff fb4e 	bl	8029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a802:	46d9      	mov	r9, fp
 802a804:	2502      	movs	r5, #2
 802a806:	45b1      	cmp	r9, r6
 802a808:	db25      	blt.n	802a856 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 802a80a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a80e:	4648      	mov	r0, r9
 802a810:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802a814:	930b      	str	r3, [sp, #44]	; 0x2c
 802a816:	f7e9 ff69 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a81a:	4641      	mov	r1, r8
 802a81c:	900c      	str	r0, [sp, #48]	; 0x30
 802a81e:	a80b      	add	r0, sp, #44	; 0x2c
 802a820:	f7e9 fe2c 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a824:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a826:	fb90 f0f5 	sdiv	r0, r0, r5
 802a82a:	eb00 0b03 	add.w	fp, r0, r3
 802a82e:	4648      	mov	r0, r9
 802a830:	f7ff fbac 	bl	8029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a834:	a90d      	add	r1, sp, #52	; 0x34
 802a836:	900d      	str	r0, [sp, #52]	; 0x34
 802a838:	a80b      	add	r0, sp, #44	; 0x2c
 802a83a:	f7e9 fe1f 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a83e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a840:	fb90 f0f5 	sdiv	r0, r0, r5
 802a844:	4659      	mov	r1, fp
 802a846:	1a12      	subs	r2, r2, r0
 802a848:	a80e      	add	r0, sp, #56	; 0x38
 802a84a:	46cb      	mov	fp, r9
 802a84c:	f7ff fb27 	bl	8029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a850:	eba9 0907 	sub.w	r9, r9, r7
 802a854:	e7d7      	b.n	802a806 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 802a856:	455e      	cmp	r6, fp
 802a858:	da22      	bge.n	802a8a0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 802a85a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a85e:	4630      	mov	r0, r6
 802a860:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802a864:	930b      	str	r3, [sp, #44]	; 0x2c
 802a866:	f7e9 ff41 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a86a:	4641      	mov	r1, r8
 802a86c:	900c      	str	r0, [sp, #48]	; 0x30
 802a86e:	a80b      	add	r0, sp, #44	; 0x2c
 802a870:	f7e9 fe04 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a874:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 802a876:	2502      	movs	r5, #2
 802a878:	fb90 f0f5 	sdiv	r0, r0, r5
 802a87c:	4407      	add	r7, r0
 802a87e:	4630      	mov	r0, r6
 802a880:	f7ff fb84 	bl	8029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a884:	a92a      	add	r1, sp, #168	; 0xa8
 802a886:	f841 0d74 	str.w	r0, [r1, #-116]!
 802a88a:	a80b      	add	r0, sp, #44	; 0x2c
 802a88c:	f7e9 fdf6 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a890:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a892:	fb90 f0f5 	sdiv	r0, r0, r5
 802a896:	4639      	mov	r1, r7
 802a898:	1a12      	subs	r2, r2, r0
 802a89a:	a80e      	add	r0, sp, #56	; 0x38
 802a89c:	f7ff faff 	bl	8029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a8a0:	9b01      	ldr	r3, [sp, #4]
 802a8a2:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802a8a6:	f6bf af27 	bge.w	802a6f8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802a8aa:	4630      	mov	r0, r6
 802a8ac:	f7e9 ff1e 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a8b0:	ad2a      	add	r5, sp, #168	; 0xa8
 802a8b2:	f04f 0b02 	mov.w	fp, #2
 802a8b6:	f845 0d74 	str.w	r0, [r5, #-116]!
 802a8ba:	a809      	add	r0, sp, #36	; 0x24
 802a8bc:	4629      	mov	r1, r5
 802a8be:	f7e9 fddd 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a8c2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a8c4:	eb00 0903 	add.w	r9, r0, r3
 802a8c8:	4630      	mov	r0, r6
 802a8ca:	f7ff fb5f 	bl	8029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a8ce:	4629      	mov	r1, r5
 802a8d0:	900d      	str	r0, [sp, #52]	; 0x34
 802a8d2:	a809      	add	r0, sp, #36	; 0x24
 802a8d4:	f7e9 fdd2 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a8d8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802a8da:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 802a8de:	eba3 0800 	sub.w	r8, r3, r0
 802a8e2:	4454      	add	r4, sl
 802a8e4:	42a6      	cmp	r6, r4
 802a8e6:	f77f af07 	ble.w	802a6f8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802a8ea:	4620      	mov	r0, r4
 802a8ec:	f7e9 fefe 	bl	80146ec <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a8f0:	4629      	mov	r1, r5
 802a8f2:	900d      	str	r0, [sp, #52]	; 0x34
 802a8f4:	a80a      	add	r0, sp, #40	; 0x28
 802a8f6:	f7e9 fdc1 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a8fa:	fb90 f0fb 	sdiv	r0, r0, fp
 802a8fe:	eb00 0709 	add.w	r7, r0, r9
 802a902:	4620      	mov	r0, r4
 802a904:	f7ff fb42 	bl	8029f8c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a908:	a90c      	add	r1, sp, #48	; 0x30
 802a90a:	900c      	str	r0, [sp, #48]	; 0x30
 802a90c:	a80a      	add	r0, sp, #40	; 0x28
 802a90e:	f7e9 fdb5 	bl	801447c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a912:	4639      	mov	r1, r7
 802a914:	fb90 f2fb 	sdiv	r2, r0, fp
 802a918:	a80e      	add	r0, sp, #56	; 0x38
 802a91a:	eba8 0202 	sub.w	r2, r8, r2
 802a91e:	f7ff fabe 	bl	8029e9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a922:	4454      	add	r4, sl
 802a924:	e7de      	b.n	802a8e4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 802a926:	2400      	movs	r4, #0
 802a928:	e6eb      	b.n	802a702 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 802a92a:	bf00      	nop
 802a92c:	08032074 	.word	0x08032074

0802a930 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 802a930:	b570      	push	{r4, r5, r6, lr}
 802a932:	790b      	ldrb	r3, [r1, #4]
 802a934:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 802a938:	2b00      	cmp	r3, #0
 802a93a:	bf0c      	ite	eq
 802a93c:	2301      	moveq	r3, #1
 802a93e:	2300      	movne	r3, #0
 802a940:	4604      	mov	r4, r0
 802a942:	460e      	mov	r6, r1
 802a944:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 802a948:	d109      	bne.n	802a95e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 802a94a:	b14d      	cbz	r5, 802a960 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 802a94c:	7933      	ldrb	r3, [r6, #4]
 802a94e:	2b01      	cmp	r3, #1
 802a950:	d10c      	bne.n	802a96c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802a952:	6823      	ldr	r3, [r4, #0]
 802a954:	4620      	mov	r0, r4
 802a956:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802a958:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802a95c:	4718      	bx	r3
 802a95e:	b12d      	cbz	r5, 802a96c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802a960:	6823      	ldr	r3, [r4, #0]
 802a962:	4620      	mov	r0, r4
 802a964:	695b      	ldr	r3, [r3, #20]
 802a966:	4798      	blx	r3
 802a968:	2d00      	cmp	r5, #0
 802a96a:	d1ef      	bne.n	802a94c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 802a96c:	bd70      	pop	{r4, r5, r6, pc}

0802a96e <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 802a96e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 802a972:	4770      	bx	lr

0802a974 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 802a974:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 802a978:	4770      	bx	lr

0802a97a <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 802a97a:	6802      	ldr	r2, [r0, #0]
 802a97c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802a980:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802a982:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802a986:	4710      	bx	r2

0802a988 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 802a988:	6802      	ldr	r2, [r0, #0]
 802a98a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802a98e:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802a990:	eef0 0a40 	vmov.f32	s1, s0
 802a994:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802a998:	4710      	bx	r2

0802a99a <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 802a99a:	6802      	ldr	r2, [r0, #0]
 802a99c:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802a9a0:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802a9a2:	eeb0 1a40 	vmov.f32	s2, s0
 802a9a6:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802a9aa:	4710      	bx	r2

0802a9ac <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 802a9ac:	6802      	ldr	r2, [r0, #0]
 802a9ae:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802a9b2:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802a9b4:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802a9b8:	4710      	bx	r2

0802a9ba <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 802a9ba:	6802      	ldr	r2, [r0, #0]
 802a9bc:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802a9c0:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802a9c2:	eef0 0a40 	vmov.f32	s1, s0
 802a9c6:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802a9ca:	4710      	bx	r2

0802a9cc <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 802a9cc:	6802      	ldr	r2, [r0, #0]
 802a9ce:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802a9d2:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802a9d4:	eeb0 1a40 	vmov.f32	s2, s0
 802a9d8:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802a9dc:	4710      	bx	r2

0802a9de <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 802a9de:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802a9e2:	4770      	bx	lr

0802a9e4 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 802a9e4:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 802a9e8:	4770      	bx	lr

0802a9ea <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 802a9ea:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 802a9ee:	4770      	bx	lr

0802a9f0 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 802a9f0:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 802a9f4:	4770      	bx	lr

0802a9f6 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 802a9f6:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 802a9fa:	4770      	bx	lr

0802a9fc <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 802a9fc:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 802aa00:	4770      	bx	lr

0802aa02 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 802aa02:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 802aa06:	4770      	bx	lr

0802aa08 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 802aa08:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 802aa0c:	4770      	bx	lr

0802aa0e <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 802aa0e:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 802aa12:	4770      	bx	lr

0802aa14 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 802aa14:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 802aa18:	4770      	bx	lr

0802aa1a <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 802aa1a:	ee07 2a90 	vmov	s15, r2
 802aa1e:	6803      	ldr	r3, [r0, #0]
 802aa20:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 802aa24:	ee07 1a90 	vmov	s15, r1
 802aa28:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 802aa2c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 802aa30:	4718      	bx	r3

0802aa32 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 802aa32:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 802aa36:	4770      	bx	lr

0802aa38 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 802aa38:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 802aa3c:	4770      	bx	lr

0802aa3e <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 802aa3e:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 802aa42:	4770      	bx	lr

0802aa44 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 802aa44:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 802aa48:	4770      	bx	lr

0802aa4a <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 802aa4a:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 802aa4e:	4770      	bx	lr

0802aa50 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 802aa50:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 802aa54:	4770      	bx	lr

0802aa56 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 802aa56:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 802aa5a:	4770      	bx	lr

0802aa5c <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 802aa5c:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 802aa60:	4770      	bx	lr

0802aa62 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 802aa62:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 802aa66:	4770      	bx	lr

0802aa68 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 802aa68:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 802aa6c:	4770      	bx	lr

0802aa6e <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 802aa6e:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 802aa72:	4770      	bx	lr

0802aa74 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 802aa74:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 802aa78:	4770      	bx	lr

0802aa7a <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 802aa7a:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 802aa7e:	4770      	bx	lr

0802aa80 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 802aa80:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 802aa84:	4770      	bx	lr

0802aa86 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 802aa86:	b510      	push	{r4, lr}
 802aa88:	ed2d 8b04 	vpush	{d8-d9}
 802aa8c:	6803      	ldr	r3, [r0, #0]
 802aa8e:	4604      	mov	r4, r0
 802aa90:	699b      	ldr	r3, [r3, #24]
 802aa92:	eeb0 8a40 	vmov.f32	s16, s0
 802aa96:	eef0 8a60 	vmov.f32	s17, s1
 802aa9a:	eeb0 9a41 	vmov.f32	s18, s2
 802aa9e:	4798      	blx	r3
 802aaa0:	6823      	ldr	r3, [r4, #0]
 802aaa2:	4620      	mov	r0, r4
 802aaa4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 802aaa6:	eeb0 1a49 	vmov.f32	s2, s18
 802aaaa:	eef0 0a68 	vmov.f32	s1, s17
 802aaae:	eeb0 0a48 	vmov.f32	s0, s16
 802aab2:	4798      	blx	r3
 802aab4:	ecbd 8b04 	vpop	{d8-d9}
 802aab8:	6823      	ldr	r3, [r4, #0]
 802aaba:	4620      	mov	r0, r4
 802aabc:	699b      	ldr	r3, [r3, #24]
 802aabe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802aac2:	4718      	bx	r3

0802aac4 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 802aac4:	b510      	push	{r4, lr}
 802aac6:	ed2d 8b02 	vpush	{d8}
 802aaca:	6803      	ldr	r3, [r0, #0]
 802aacc:	4604      	mov	r4, r0
 802aace:	699b      	ldr	r3, [r3, #24]
 802aad0:	eeb0 8a40 	vmov.f32	s16, s0
 802aad4:	4798      	blx	r3
 802aad6:	6823      	ldr	r3, [r4, #0]
 802aad8:	4620      	mov	r0, r4
 802aada:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 802aade:	eeb0 0a48 	vmov.f32	s0, s16
 802aae2:	4798      	blx	r3
 802aae4:	ecbd 8b02 	vpop	{d8}
 802aae8:	6823      	ldr	r3, [r4, #0]
 802aaea:	4620      	mov	r0, r4
 802aaec:	699b      	ldr	r3, [r3, #24]
 802aaee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802aaf2:	4718      	bx	r3

0802aaf4 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 802aaf4:	2200      	movs	r2, #0
 802aaf6:	8002      	strh	r2, [r0, #0]
 802aaf8:	8042      	strh	r2, [r0, #2]
 802aafa:	8082      	strh	r2, [r0, #4]
 802aafc:	80c2      	strh	r2, [r0, #6]
 802aafe:	4770      	bx	lr

0802ab00 <_ZN8touchgfx13TextureMapperD1Ev>:
 802ab00:	4770      	bx	lr

0802ab02 <_ZN8touchgfx13TextureMapperD0Ev>:
 802ab02:	b510      	push	{r4, lr}
 802ab04:	2190      	movs	r1, #144	; 0x90
 802ab06:	4604      	mov	r4, r0
 802ab08:	f001 ff73 	bl	802c9f2 <_ZdlPvj>
 802ab0c:	4620      	mov	r0, r4
 802ab0e:	bd10      	pop	{r4, pc}

0802ab10 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 802ab10:	b538      	push	{r3, r4, r5, lr}
 802ab12:	2500      	movs	r5, #0
 802ab14:	e9c0 5505 	strd	r5, r5, [r0, #20]
 802ab18:	2301      	movs	r3, #1
 802ab1a:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 802ab1e:	4b1f      	ldr	r3, [pc, #124]	; (802ab9c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 802ab20:	8085      	strh	r5, [r0, #4]
 802ab22:	80c5      	strh	r5, [r0, #6]
 802ab24:	8105      	strh	r5, [r0, #8]
 802ab26:	8145      	strh	r5, [r0, #10]
 802ab28:	8185      	strh	r5, [r0, #12]
 802ab2a:	81c5      	strh	r5, [r0, #14]
 802ab2c:	8205      	strh	r5, [r0, #16]
 802ab2e:	8245      	strh	r5, [r0, #18]
 802ab30:	61c5      	str	r5, [r0, #28]
 802ab32:	8405      	strh	r5, [r0, #32]
 802ab34:	8445      	strh	r5, [r0, #34]	; 0x22
 802ab36:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 802ab3a:	6003      	str	r3, [r0, #0]
 802ab3c:	880b      	ldrh	r3, [r1, #0]
 802ab3e:	84c3      	strh	r3, [r0, #38]	; 0x26
 802ab40:	23ff      	movs	r3, #255	; 0xff
 802ab42:	4604      	mov	r4, r0
 802ab44:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 802ab48:	f7eb f96b 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802ab4c:	4b14      	ldr	r3, [pc, #80]	; (802aba0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 802ab4e:	6023      	str	r3, [r4, #0]
 802ab50:	2300      	movs	r3, #0
 802ab52:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 802ab56:	4913      	ldr	r1, [pc, #76]	; (802aba4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 802ab58:	62e3      	str	r3, [r4, #44]	; 0x2c
 802ab5a:	6323      	str	r3, [r4, #48]	; 0x30
 802ab5c:	6363      	str	r3, [r4, #52]	; 0x34
 802ab5e:	63a3      	str	r3, [r4, #56]	; 0x38
 802ab60:	63e3      	str	r3, [r4, #60]	; 0x3c
 802ab62:	6463      	str	r3, [r4, #68]	; 0x44
 802ab64:	64a3      	str	r3, [r4, #72]	; 0x48
 802ab66:	6523      	str	r3, [r4, #80]	; 0x50
 802ab68:	6563      	str	r3, [r4, #84]	; 0x54
 802ab6a:	65e3      	str	r3, [r4, #92]	; 0x5c
 802ab6c:	6623      	str	r3, [r4, #96]	; 0x60
 802ab6e:	66a3      	str	r3, [r4, #104]	; 0x68
 802ab70:	66e3      	str	r3, [r4, #108]	; 0x6c
 802ab72:	6763      	str	r3, [r4, #116]	; 0x74
 802ab74:	67a3      	str	r3, [r4, #120]	; 0x78
 802ab76:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802ab7a:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 802ab7e:	230c      	movs	r3, #12
 802ab80:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 802ab84:	6422      	str	r2, [r4, #64]	; 0x40
 802ab86:	64e1      	str	r1, [r4, #76]	; 0x4c
 802ab88:	65a1      	str	r1, [r4, #88]	; 0x58
 802ab8a:	6662      	str	r2, [r4, #100]	; 0x64
 802ab8c:	6722      	str	r2, [r4, #112]	; 0x70
 802ab8e:	67e2      	str	r2, [r4, #124]	; 0x7c
 802ab90:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 802ab94:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 802ab98:	4620      	mov	r0, r4
 802ab9a:	bd38      	pop	{r3, r4, r5, pc}
 802ab9c:	08031b1c 	.word	0x08031b1c
 802aba0:	08032100 	.word	0x08032100
 802aba4:	447a0000 	.word	0x447a0000

0802aba8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 802aba8:	b570      	push	{r4, r5, r6, lr}
 802abaa:	ed2d 8b04 	vpush	{d8-d9}
 802abae:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 802abb2:	add0      	add	r5, sp, #832	; 0x340
 802abb4:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 802abb6:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802abba:	4604      	mov	r4, r0
 802abbc:	4628      	mov	r0, r5
 802abbe:	f7f1 fa7f 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802abc2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 802abc4:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 802abc8:	4606      	mov	r6, r0
 802abca:	4628      	mov	r0, r5
 802abcc:	f7f1 faac 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802abd0:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 802abd4:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 802abd8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802abda:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 802abde:	9312      	str	r3, [sp, #72]	; 0x48
 802abe0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802abe4:	1c72      	adds	r2, r6, #1
 802abe6:	3001      	adds	r0, #1
 802abe8:	ee76 5ac7 	vsub.f32	s11, s13, s14
 802abec:	ee07 2a90 	vmov	s15, r2
 802abf0:	ee06 0a90 	vmov	s13, r0
 802abf4:	ee36 6a47 	vsub.f32	s12, s12, s14
 802abf8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802abfc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 802ac00:	ee77 7a86 	vadd.f32	s15, s15, s12
 802ac04:	ee76 6aa5 	vadd.f32	s13, s13, s11
 802ac08:	9316      	str	r3, [sp, #88]	; 0x58
 802ac0a:	931a      	str	r3, [sp, #104]	; 0x68
 802ac0c:	931e      	str	r3, [sp, #120]	; 0x78
 802ac0e:	2300      	movs	r3, #0
 802ac10:	9320      	str	r3, [sp, #128]	; 0x80
 802ac12:	9321      	str	r3, [sp, #132]	; 0x84
 802ac14:	9322      	str	r3, [sp, #136]	; 0x88
 802ac16:	9324      	str	r3, [sp, #144]	; 0x90
 802ac18:	9325      	str	r3, [sp, #148]	; 0x94
 802ac1a:	9326      	str	r3, [sp, #152]	; 0x98
 802ac1c:	9328      	str	r3, [sp, #160]	; 0xa0
 802ac1e:	9329      	str	r3, [sp, #164]	; 0xa4
 802ac20:	932a      	str	r3, [sp, #168]	; 0xa8
 802ac22:	932c      	str	r3, [sp, #176]	; 0xb0
 802ac24:	932d      	str	r3, [sp, #180]	; 0xb4
 802ac26:	932e      	str	r3, [sp, #184]	; 0xb8
 802ac28:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 802ac2c:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 802ac30:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802ac34:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802ac38:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 802ac3c:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 802ac40:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 802ac44:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 802ac48:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 802ac4c:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 802ac50:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802ac54:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 802ac58:	a830      	add	r0, sp, #192	; 0xc0
 802ac5a:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 802ac5e:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 802ac62:	f000 fc43 	bl	802b4ec <_ZN8touchgfx9Matrix4x4C1Ev>
 802ac66:	eeb1 0a49 	vneg.f32	s0, s18
 802ac6a:	a830      	add	r0, sp, #192	; 0xc0
 802ac6c:	f000 fd12 	bl	802b694 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802ac70:	eeb1 0a68 	vneg.f32	s0, s17
 802ac74:	f000 fd1c 	bl	802b6b0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802ac78:	eeb1 0a48 	vneg.f32	s0, s16
 802ac7c:	f000 fd27 	bl	802b6ce <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 802ac80:	a840      	add	r0, sp, #256	; 0x100
 802ac82:	f000 fc33 	bl	802b4ec <_ZN8touchgfx9Matrix4x4C1Ev>
 802ac86:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802ac8a:	a840      	add	r0, sp, #256	; 0x100
 802ac8c:	f000 fc86 	bl	802b59c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 802ac90:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 802ac94:	f000 fcac 	bl	802b5f0 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 802ac98:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 802ac9c:	f000 fcd1 	bl	802b642 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 802aca0:	a850      	add	r0, sp, #320	; 0x140
 802aca2:	f000 fc23 	bl	802b4ec <_ZN8touchgfx9Matrix4x4C1Ev>
 802aca6:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802acaa:	a850      	add	r0, sp, #320	; 0x140
 802acac:	f000 fd1e 	bl	802b6ec <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 802acb0:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802acb4:	f000 fd26 	bl	802b704 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 802acb8:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802acbc:	f000 fd2f 	bl	802b71e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 802acc0:	a860      	add	r0, sp, #384	; 0x180
 802acc2:	f000 fc13 	bl	802b4ec <_ZN8touchgfx9Matrix4x4C1Ev>
 802acc6:	eeb0 0a49 	vmov.f32	s0, s18
 802acca:	a860      	add	r0, sp, #384	; 0x180
 802accc:	f000 fce2 	bl	802b694 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802acd0:	eeb0 0a68 	vmov.f32	s0, s17
 802acd4:	f000 fcec 	bl	802b6b0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802acd8:	eeb0 0a48 	vmov.f32	s0, s16
 802acdc:	f000 fcf7 	bl	802b6ce <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 802ace0:	aa50      	add	r2, sp, #320	; 0x140
 802ace2:	a960      	add	r1, sp, #384	; 0x180
 802ace4:	a8b0      	add	r0, sp, #704	; 0x2c0
 802ace6:	f000 fc1b 	bl	802b520 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802acea:	4628      	mov	r0, r5
 802acec:	aa40      	add	r2, sp, #256	; 0x100
 802acee:	a9b0      	add	r1, sp, #704	; 0x2c0
 802acf0:	f000 fc16 	bl	802b520 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802acf4:	4629      	mov	r1, r5
 802acf6:	aa30      	add	r2, sp, #192	; 0xc0
 802acf8:	a870      	add	r0, sp, #448	; 0x1c0
 802acfa:	f000 fc11 	bl	802b520 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802acfe:	a880      	add	r0, sp, #512	; 0x200
 802ad00:	f000 fbf4 	bl	802b4ec <_ZN8touchgfx9Matrix4x4C1Ev>
 802ad04:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802ad08:	a880      	add	r0, sp, #512	; 0x200
 802ad0a:	eeb1 0a40 	vneg.f32	s0, s0
 802ad0e:	f000 fcc1 	bl	802b694 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802ad12:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802ad16:	a880      	add	r0, sp, #512	; 0x200
 802ad18:	eeb1 0a40 	vneg.f32	s0, s0
 802ad1c:	f000 fcc8 	bl	802b6b0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802ad20:	a890      	add	r0, sp, #576	; 0x240
 802ad22:	f000 fbe3 	bl	802b4ec <_ZN8touchgfx9Matrix4x4C1Ev>
 802ad26:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802ad2a:	a890      	add	r0, sp, #576	; 0x240
 802ad2c:	f000 fc26 	bl	802b57c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 802ad30:	a8a0      	add	r0, sp, #640	; 0x280
 802ad32:	f000 fbdb 	bl	802b4ec <_ZN8touchgfx9Matrix4x4C1Ev>
 802ad36:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802ad3a:	a8a0      	add	r0, sp, #640	; 0x280
 802ad3c:	f000 fcaa 	bl	802b694 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802ad40:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802ad44:	f000 fcb4 	bl	802b6b0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802ad48:	aa90      	add	r2, sp, #576	; 0x240
 802ad4a:	a9a0      	add	r1, sp, #640	; 0x280
 802ad4c:	a8b0      	add	r0, sp, #704	; 0x2c0
 802ad4e:	f000 fbe7 	bl	802b520 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802ad52:	4628      	mov	r0, r5
 802ad54:	aa80      	add	r2, sp, #512	; 0x200
 802ad56:	a9b0      	add	r1, sp, #704	; 0x2c0
 802ad58:	f000 fbe2 	bl	802b520 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802ad5c:	4629      	mov	r1, r5
 802ad5e:	aa70      	add	r2, sp, #448	; 0x1c0
 802ad60:	4668      	mov	r0, sp
 802ad62:	466d      	mov	r5, sp
 802ad64:	f000 fbdc 	bl	802b520 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802ad68:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802ad6a:	ae70      	add	r6, sp, #448	; 0x1c0
 802ad6c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802ad6e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802ad70:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802ad72:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802ad74:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802ad76:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802ad7a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 802ad7e:	2500      	movs	r5, #0
 802ad80:	0129      	lsls	r1, r5, #4
 802ad82:	ab20      	add	r3, sp, #128	; 0x80
 802ad84:	185e      	adds	r6, r3, r1
 802ad86:	ab10      	add	r3, sp, #64	; 0x40
 802ad88:	4419      	add	r1, r3
 802ad8a:	a870      	add	r0, sp, #448	; 0x1c0
 802ad8c:	f000 fb7e 	bl	802b48c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 802ad90:	3501      	adds	r5, #1
 802ad92:	2d04      	cmp	r5, #4
 802ad94:	ed86 0a00 	vstr	s0, [r6]
 802ad98:	edc6 0a01 	vstr	s1, [r6, #4]
 802ad9c:	ed86 1a02 	vstr	s2, [r6, #8]
 802ada0:	edc6 1a03 	vstr	s3, [r6, #12]
 802ada4:	d1ec      	bne.n	802ad80 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802ada6:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802adaa:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 802adae:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 802adb2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802adb6:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802adba:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802adbe:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 802adc2:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 802adc6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802adca:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802adce:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 802add2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 802add6:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802adda:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802adde:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 802ade2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802ade6:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802adea:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 802adee:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802adf2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802adf6:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802adfa:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 802adfe:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 802ae02:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802ae06:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802ae0a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802ae0e:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 802ae12:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802ae16:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802ae1a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802ae1e:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 802ae22:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802ae26:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802ae2a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802ae2e:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 802ae32:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802ae36:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802ae3a:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 802ae3e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802ae42:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802ae46:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802ae4a:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 802ae4e:	ecbd 8b04 	vpop	{d8-d9}
 802ae52:	bd70      	pop	{r4, r5, r6, pc}

0802ae54 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 802ae54:	b510      	push	{r4, lr}
 802ae56:	4604      	mov	r4, r0
 802ae58:	f7ea ffe3 	bl	8015e22 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802ae5c:	4620      	mov	r0, r4
 802ae5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ae62:	f7ff bea1 	b.w	802aba8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802ae66 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802ae66:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802ae6a:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 802ae6e:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 802ae72:	f7ff be99 	b.w	802aba8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802ae76 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802ae76:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802ae7a:	f7ff be95 	b.w	802aba8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802ae7e <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 802ae7e:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 802ae82:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802ae86:	f7ff be8f 	b.w	802aba8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802ae8a <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802ae8a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802ae8e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802ae92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ae96:	bfd8      	it	le
 802ae98:	eeb0 0a67 	vmovle.f32	s0, s15
 802ae9c:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 802aea0:	f7ff be82 	b.w	802aba8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802aea4 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 802aea4:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 802aea8:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 802aeac:	f7ff be7c 	b.w	802aba8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802aeb0 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 802aeb0:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802aeb4:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802aeb8:	f7ff be76 	b.w	802aba8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802aebc <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 802aebc:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802aec0:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802aec4:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 802aec8:	f7ff be6e 	b.w	802aba8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802aecc <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 802aecc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802aed0:	ed2d 8b04 	vpush	{d8-d9}
 802aed4:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 802aed8:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 802aedc:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 802aee0:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 802aee4:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802aee8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aeec:	bf54      	ite	pl
 802aeee:	eeb0 0a69 	vmovpl.f32	s0, s19
 802aef2:	eeb0 0a48 	vmovmi.f32	s0, s16
 802aef6:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802aefa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aefe:	bfd8      	it	le
 802af00:	eeb0 0a49 	vmovle.f32	s0, s18
 802af04:	eef4 8ac0 	vcmpe.f32	s17, s0
 802af08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802af0c:	bfd8      	it	le
 802af0e:	eeb0 0a68 	vmovle.f32	s0, s17
 802af12:	460c      	mov	r4, r1
 802af14:	4607      	mov	r7, r0
 802af16:	f001 ff5f 	bl	802cdd8 <floorf>
 802af1a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802af1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802af22:	bf58      	it	pl
 802af24:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802af28:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802af2c:	bf56      	itet	pl
 802af2e:	ee10 3a10 	vmovpl	r3, s0
 802af32:	2600      	movmi	r6, #0
 802af34:	b21e      	sxthpl	r6, r3
 802af36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802af3a:	bfd8      	it	le
 802af3c:	eeb0 8a69 	vmovle.f32	s16, s19
 802af40:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802af44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802af48:	bf58      	it	pl
 802af4a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802af4e:	eef4 8ac8 	vcmpe.f32	s17, s16
 802af52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802af56:	bf54      	ite	pl
 802af58:	eeb0 0a68 	vmovpl.f32	s0, s17
 802af5c:	eeb0 0a48 	vmovmi.f32	s0, s16
 802af60:	f001 fef8 	bl	802cd54 <ceilf>
 802af64:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 802af68:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 802af6c:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 802af70:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 802af74:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 802af78:	ee07 8a90 	vmov	s15, r8
 802af7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802af80:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802af84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802af88:	bfd8      	it	le
 802af8a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802af8e:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802af92:	bfdc      	itt	le
 802af94:	ee10 3a10 	vmovle	r3, s0
 802af98:	fa0f f883 	sxthle.w	r8, r3
 802af9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802afa0:	bf54      	ite	pl
 802afa2:	eeb0 0a69 	vmovpl.f32	s0, s19
 802afa6:	eeb0 0a48 	vmovmi.f32	s0, s16
 802afaa:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802afae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802afb2:	bfd8      	it	le
 802afb4:	eeb0 0a49 	vmovle.f32	s0, s18
 802afb8:	eef4 8ac0 	vcmpe.f32	s17, s0
 802afbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802afc0:	bfd8      	it	le
 802afc2:	eeb0 0a68 	vmovle.f32	s0, s17
 802afc6:	f001 ff07 	bl	802cdd8 <floorf>
 802afca:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802afce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802afd2:	bf58      	it	pl
 802afd4:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802afd8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802afdc:	bf56      	itet	pl
 802afde:	ee10 3a10 	vmovpl	r3, s0
 802afe2:	2500      	movmi	r5, #0
 802afe4:	b21d      	sxthpl	r5, r3
 802afe6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802afea:	bfd8      	it	le
 802afec:	eeb0 8a69 	vmovle.f32	s16, s19
 802aff0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802aff4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aff8:	bf58      	it	pl
 802affa:	eeb0 8a49 	vmovpl.f32	s16, s18
 802affe:	eef4 8ac8 	vcmpe.f32	s17, s16
 802b002:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b006:	bf54      	ite	pl
 802b008:	eeb0 0a68 	vmovpl.f32	s0, s17
 802b00c:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b010:	f001 fea0 	bl	802cd54 <ceilf>
 802b014:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 802b018:	803e      	strh	r6, [r7, #0]
 802b01a:	ee07 3a90 	vmov	s15, r3
 802b01e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b022:	807d      	strh	r5, [r7, #2]
 802b024:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b028:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b02c:	bfd8      	it	le
 802b02e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802b032:	eba8 0606 	sub.w	r6, r8, r6
 802b036:	bfdc      	itt	le
 802b038:	ee10 3a10 	vmovle	r3, s0
 802b03c:	b21b      	sxthle	r3, r3
 802b03e:	1b5d      	subs	r5, r3, r5
 802b040:	80be      	strh	r6, [r7, #4]
 802b042:	80fd      	strh	r5, [r7, #6]
 802b044:	ecbd 8b04 	vpop	{d8-d9}
 802b048:	4638      	mov	r0, r7
 802b04a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0802b04e <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 802b04e:	b513      	push	{r0, r1, r4, lr}
 802b050:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802b054:	4604      	mov	r4, r0
 802b056:	b143      	cbz	r3, 802b06a <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 802b058:	4601      	mov	r1, r0
 802b05a:	4668      	mov	r0, sp
 802b05c:	f7ff ff36 	bl	802aecc <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 802b060:	6823      	ldr	r3, [r4, #0]
 802b062:	4669      	mov	r1, sp
 802b064:	691b      	ldr	r3, [r3, #16]
 802b066:	4620      	mov	r0, r4
 802b068:	4798      	blx	r3
 802b06a:	b002      	add	sp, #8
 802b06c:	bd10      	pop	{r4, pc}

0802b06e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802b06e:	4603      	mov	r3, r0
 802b070:	3026      	adds	r0, #38	; 0x26
 802b072:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 802b076:	b90b      	cbnz	r3, 802b07c <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 802b078:	f7ee bdfa 	b.w	8019c70 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 802b07c:	f7ee be08 	b.w	8019c90 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

0802b080 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 802b080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b084:	ed2d 8b04 	vpush	{d8-d9}
 802b088:	4604      	mov	r4, r0
 802b08a:	469b      	mov	fp, r3
 802b08c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 802b090:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802b094:	f9b1 6000 	ldrsh.w	r6, [r1]
 802b098:	8888      	ldrh	r0, [r1, #4]
 802b09a:	b0b3      	sub	sp, #204	; 0xcc
 802b09c:	4430      	add	r0, r6
 802b09e:	b280      	uxth	r0, r0
 802b0a0:	9206      	str	r2, [sp, #24]
 802b0a2:	fa0f fe80 	sxth.w	lr, r0
 802b0a6:	2200      	movs	r2, #0
 802b0a8:	4596      	cmp	lr, r2
 802b0aa:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802b0ae:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 802b0b2:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802b0b6:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 802b0b8:	9211      	str	r2, [sp, #68]	; 0x44
 802b0ba:	f340 8129 	ble.w	802b310 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b0be:	45b4      	cmp	ip, r6
 802b0c0:	f340 8126 	ble.w	802b310 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b0c4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 802b0c8:	88ca      	ldrh	r2, [r1, #6]
 802b0ca:	442a      	add	r2, r5
 802b0cc:	b292      	uxth	r2, r2
 802b0ce:	b211      	sxth	r1, r2
 802b0d0:	2900      	cmp	r1, #0
 802b0d2:	f340 811d 	ble.w	802b310 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b0d6:	42ab      	cmp	r3, r5
 802b0d8:	f340 811a 	ble.w	802b310 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b0dc:	45f4      	cmp	ip, lr
 802b0de:	bfb8      	it	lt
 802b0e0:	fa1f f08c 	uxthlt.w	r0, ip
 802b0e4:	428b      	cmp	r3, r1
 802b0e6:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802b0ea:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802b0ee:	bfb8      	it	lt
 802b0f0:	b29a      	uxthlt	r2, r3
 802b0f2:	1b80      	subs	r0, r0, r6
 802b0f4:	1b52      	subs	r2, r2, r5
 802b0f6:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802b0fa:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802b0fe:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 802b102:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 802b106:	ab11      	add	r3, sp, #68	; 0x44
 802b108:	e893 0003 	ldmia.w	r3, {r0, r1}
 802b10c:	6822      	ldr	r2, [r4, #0]
 802b10e:	9307      	str	r3, [sp, #28]
 802b110:	ad13      	add	r5, sp, #76	; 0x4c
 802b112:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 802b114:	e885 0003 	stmia.w	r5, {r0, r1}
 802b118:	4629      	mov	r1, r5
 802b11a:	4620      	mov	r0, r4
 802b11c:	4790      	blx	r2
 802b11e:	4621      	mov	r1, r4
 802b120:	a815      	add	r0, sp, #84	; 0x54
 802b122:	f7ee fd01 	bl	8019b28 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802b126:	a815      	add	r0, sp, #84	; 0x54
 802b128:	f7ed f9c6 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802b12c:	9b07      	ldr	r3, [sp, #28]
 802b12e:	1d26      	adds	r6, r4, #4
 802b130:	4618      	mov	r0, r3
 802b132:	4631      	mov	r1, r6
 802b134:	f7ed fa04 	bl	8018540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802b138:	4628      	mov	r0, r5
 802b13a:	f104 0526 	add.w	r5, r4, #38	; 0x26
 802b13e:	f7ed f9bb 	bl	80184b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802b142:	4628      	mov	r0, r5
 802b144:	f7f1 f8a8 	bl	801c298 <_ZNK8touchgfx6Bitmap7getDataEv>
 802b148:	9007      	str	r0, [sp, #28]
 802b14a:	2800      	cmp	r0, #0
 802b14c:	f000 80db 	beq.w	802b306 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 802b150:	f8db 2000 	ldr.w	r2, [fp]
 802b154:	9209      	str	r2, [sp, #36]	; 0x24
 802b156:	f8db 2004 	ldr.w	r2, [fp, #4]
 802b15a:	920a      	str	r2, [sp, #40]	; 0x28
 802b15c:	f8db 2008 	ldr.w	r2, [fp, #8]
 802b160:	920b      	str	r2, [sp, #44]	; 0x2c
 802b162:	f8db 200c 	ldr.w	r2, [fp, #12]
 802b166:	920c      	str	r2, [sp, #48]	; 0x30
 802b168:	f8da 2000 	ldr.w	r2, [sl]
 802b16c:	920d      	str	r2, [sp, #52]	; 0x34
 802b16e:	f8da 2004 	ldr.w	r2, [sl, #4]
 802b172:	920e      	str	r2, [sp, #56]	; 0x38
 802b174:	f8da 2008 	ldr.w	r2, [sl, #8]
 802b178:	920f      	str	r2, [sp, #60]	; 0x3c
 802b17a:	f8da 200c 	ldr.w	r2, [sl, #12]
 802b17e:	9210      	str	r2, [sp, #64]	; 0x40
 802b180:	a90d      	add	r1, sp, #52	; 0x34
 802b182:	4632      	mov	r2, r6
 802b184:	a809      	add	r0, sp, #36	; 0x24
 802b186:	f7ed f9bf 	bl	8018508 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b18a:	4632      	mov	r2, r6
 802b18c:	a90e      	add	r1, sp, #56	; 0x38
 802b18e:	a80a      	add	r0, sp, #40	; 0x28
 802b190:	f7ed f9ba 	bl	8018508 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b194:	4632      	mov	r2, r6
 802b196:	a90f      	add	r1, sp, #60	; 0x3c
 802b198:	a80b      	add	r0, sp, #44	; 0x2c
 802b19a:	f7ed f9b5 	bl	8018508 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b19e:	4632      	mov	r2, r6
 802b1a0:	a910      	add	r1, sp, #64	; 0x40
 802b1a2:	a80c      	add	r0, sp, #48	; 0x30
 802b1a4:	f7ed f9b0 	bl	8018508 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b1a8:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 802b1ac:	edd7 4a00 	vldr	s9, [r7]
 802b1b0:	edd7 5a01 	vldr	s11, [r7, #4]
 802b1b4:	ed98 4a00 	vldr	s8, [r8]
 802b1b8:	ed98 5a01 	vldr	s10, [r8, #4]
 802b1bc:	ed99 9a00 	vldr	s18, [r9]
 802b1c0:	ed99 8a01 	vldr	s16, [r9, #4]
 802b1c4:	edd9 8a02 	vldr	s17, [r9, #8]
 802b1c8:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 802b1cc:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 802b1d0:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 802b1d4:	eef0 6a67 	vmov.f32	s13, s15
 802b1d8:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 802b1dc:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 802b1e0:	eeb0 7a67 	vmov.f32	s14, s15
 802b1e4:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 802b1e8:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 802b1ec:	eeb0 6a67 	vmov.f32	s12, s15
 802b1f0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b1f4:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 802b1f8:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 802b1fc:	ee16 6a10 	vmov	r6, s12
 802b200:	eeb0 6a67 	vmov.f32	s12, s15
 802b204:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b208:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 802b20c:	f8d7 a008 	ldr.w	sl, [r7, #8]
 802b210:	f8d8 b008 	ldr.w	fp, [r8, #8]
 802b214:	68ff      	ldr	r7, [r7, #12]
 802b216:	9624      	str	r6, [sp, #144]	; 0x90
 802b218:	ee16 0a10 	vmov	r0, s12
 802b21c:	eeb0 6a67 	vmov.f32	s12, s15
 802b220:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b224:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 802b228:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 802b22c:	ee16 1a10 	vmov	r1, s12
 802b230:	eeb0 6a67 	vmov.f32	s12, s15
 802b234:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b238:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 802b23c:	ee16 2a10 	vmov	r2, s12
 802b240:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 802b244:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 802b248:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 802b24c:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 802b250:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b254:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 802b258:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 802b25c:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 802b260:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 802b264:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 802b268:	922d      	str	r2, [sp, #180]	; 0xb4
 802b26a:	4a2b      	ldr	r2, [pc, #172]	; (802b318 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 802b26c:	9b06      	ldr	r3, [sp, #24]
 802b26e:	8812      	ldrh	r2, [r2, #0]
 802b270:	9317      	str	r3, [sp, #92]	; 0x5c
 802b272:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 802b276:	9b07      	ldr	r3, [sp, #28]
 802b278:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 802b27c:	4628      	mov	r0, r5
 802b27e:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 802b282:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802b286:	9218      	str	r2, [sp, #96]	; 0x60
 802b288:	9319      	str	r3, [sp, #100]	; 0x64
 802b28a:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802b28e:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 802b292:	9731      	str	r7, [sp, #196]	; 0xc4
 802b294:	f7f1 f830 	bl	801c2f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802b298:	901a      	str	r0, [sp, #104]	; 0x68
 802b29a:	4628      	mov	r0, r5
 802b29c:	f7f0 ff10 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b2a0:	901b      	str	r0, [sp, #108]	; 0x6c
 802b2a2:	4628      	mov	r0, r5
 802b2a4:	f7f0 ff40 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802b2a8:	901c      	str	r0, [sp, #112]	; 0x70
 802b2aa:	4628      	mov	r0, r5
 802b2ac:	f7f0 ff08 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b2b0:	eeb4 9a48 	vcmp.f32	s18, s16
 802b2b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b2b8:	901d      	str	r0, [sp, #116]	; 0x74
 802b2ba:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802b2be:	d107      	bne.n	802b2d0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 802b2c0:	eeb4 8a68 	vcmp.f32	s16, s17
 802b2c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b2c8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802b2cc:	bf08      	it	eq
 802b2ce:	461e      	moveq	r6, r3
 802b2d0:	4b12      	ldr	r3, [pc, #72]	; (802b31c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 802b2d2:	681b      	ldr	r3, [r3, #0]
 802b2d4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 802b2d8:	b10a      	cbz	r2, 802b2de <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802b2da:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 802b2dc:	b905      	cbnz	r5, 802b2e0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802b2de:	689d      	ldr	r5, [r3, #8]
 802b2e0:	682b      	ldr	r3, [r5, #0]
 802b2e2:	4620      	mov	r0, r4
 802b2e4:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 802b2e6:	f7ff fec2 	bl	802b06e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802b2ea:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802b2ee:	9604      	str	r6, [sp, #16]
 802b2f0:	e9cd 0302 	strd	r0, r3, [sp, #8]
 802b2f4:	ab13      	add	r3, sp, #76	; 0x4c
 802b2f6:	9301      	str	r3, [sp, #4]
 802b2f8:	ab15      	add	r3, sp, #84	; 0x54
 802b2fa:	9300      	str	r3, [sp, #0]
 802b2fc:	aa1e      	add	r2, sp, #120	; 0x78
 802b2fe:	ab19      	add	r3, sp, #100	; 0x64
 802b300:	a917      	add	r1, sp, #92	; 0x5c
 802b302:	4628      	mov	r0, r5
 802b304:	47b8      	blx	r7
 802b306:	b033      	add	sp, #204	; 0xcc
 802b308:	ecbd 8b04 	vpop	{d8-d9}
 802b30c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b310:	2300      	movs	r3, #0
 802b312:	9312      	str	r3, [sp, #72]	; 0x48
 802b314:	e6f7      	b.n	802b106 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 802b316:	bf00      	nop
 802b318:	2001384e 	.word	0x2001384e
 802b31c:	20013854 	.word	0x20013854

0802b320 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 802b320:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b324:	ed2d 8b02 	vpush	{d8}
 802b328:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802b32c:	b098      	sub	sp, #96	; 0x60
 802b32e:	4604      	mov	r4, r0
 802b330:	4688      	mov	r8, r1
 802b332:	2b00      	cmp	r3, #0
 802b334:	d077      	beq.n	802b426 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 802b336:	f100 0526 	add.w	r5, r0, #38	; 0x26
 802b33a:	4628      	mov	r0, r5
 802b33c:	f7f0 fec0 	bl	801c0c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b340:	ee07 0a90 	vmov	s15, r0
 802b344:	4628      	mov	r0, r5
 802b346:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 802b34a:	f7f0 feed 	bl	801c128 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802b34e:	4b4e      	ldr	r3, [pc, #312]	; (802b488 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 802b350:	781b      	ldrb	r3, [r3, #0]
 802b352:	ee07 0a90 	vmov	s15, r0
 802b356:	2b01      	cmp	r3, #1
 802b358:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802b35c:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 802b360:	d066      	beq.n	802b430 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 802b362:	eeb0 6a47 	vmov.f32	s12, s14
 802b366:	ee17 3a10 	vmov	r3, s14
 802b36a:	eeb0 4a48 	vmov.f32	s8, s16
 802b36e:	eeb0 7a48 	vmov.f32	s14, s16
 802b372:	eef0 4a67 	vmov.f32	s9, s15
 802b376:	eeb0 8a67 	vmov.f32	s16, s15
 802b37a:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802b37e:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 802b382:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 802b386:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802b38a:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802b38e:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 802b392:	6f25      	ldr	r5, [r4, #112]	; 0x70
 802b394:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802b396:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 802b398:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 802b39c:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 802b3a0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b3a4:	ee73 1a65 	vsub.f32	s3, s6, s11
 802b3a8:	ee72 6ac5 	vsub.f32	s13, s5, s10
 802b3ac:	ee32 1a45 	vsub.f32	s2, s4, s10
 802b3b0:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 802b3b4:	ee73 1ae5 	vsub.f32	s3, s7, s11
 802b3b8:	eee1 6a21 	vfma.f32	s13, s2, s3
 802b3bc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 802b3c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b3c4:	dd3d      	ble.n	802b442 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 802b3c6:	ed8d 5a04 	vstr	s10, [sp, #16]
 802b3ca:	ed8d 2a05 	vstr	s4, [sp, #20]
 802b3ce:	edcd 2a06 	vstr	s5, [sp, #24]
 802b3d2:	f8cd c01c 	str.w	ip, [sp, #28]
 802b3d6:	edcd 5a08 	vstr	s11, [sp, #32]
 802b3da:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802b3de:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 802b3e2:	970b      	str	r7, [sp, #44]	; 0x2c
 802b3e4:	960c      	str	r6, [sp, #48]	; 0x30
 802b3e6:	950d      	str	r5, [sp, #52]	; 0x34
 802b3e8:	920e      	str	r2, [sp, #56]	; 0x38
 802b3ea:	900f      	str	r0, [sp, #60]	; 0x3c
 802b3ec:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 802b3f0:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 802b3f4:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 802b3f8:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 802b3fc:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 802b400:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 802b404:	9316      	str	r3, [sp, #88]	; 0x58
 802b406:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802b40a:	ab14      	add	r3, sp, #80	; 0x50
 802b40c:	9303      	str	r3, [sp, #12]
 802b40e:	ab10      	add	r3, sp, #64	; 0x40
 802b410:	9302      	str	r3, [sp, #8]
 802b412:	ab0c      	add	r3, sp, #48	; 0x30
 802b414:	9301      	str	r3, [sp, #4]
 802b416:	ab08      	add	r3, sp, #32
 802b418:	9300      	str	r3, [sp, #0]
 802b41a:	2200      	movs	r2, #0
 802b41c:	ab04      	add	r3, sp, #16
 802b41e:	4641      	mov	r1, r8
 802b420:	4620      	mov	r0, r4
 802b422:	f7ff fe2d 	bl	802b080 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 802b426:	b018      	add	sp, #96	; 0x60
 802b428:	ecbd 8b02 	vpop	{d8}
 802b42c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b430:	eeb0 6a48 	vmov.f32	s12, s16
 802b434:	eef0 4a47 	vmov.f32	s9, s14
 802b438:	ee17 3a90 	vmov	r3, s15
 802b43c:	eeb0 4a67 	vmov.f32	s8, s15
 802b440:	e79b      	b.n	802b37a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 802b442:	ed8d 5a05 	vstr	s10, [sp, #20]
 802b446:	ed8d 2a04 	vstr	s4, [sp, #16]
 802b44a:	f8cd c018 	str.w	ip, [sp, #24]
 802b44e:	edcd 2a07 	vstr	s5, [sp, #28]
 802b452:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 802b456:	ed8d 3a08 	vstr	s6, [sp, #32]
 802b45a:	970a      	str	r7, [sp, #40]	; 0x28
 802b45c:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 802b460:	960d      	str	r6, [sp, #52]	; 0x34
 802b462:	950c      	str	r5, [sp, #48]	; 0x30
 802b464:	900e      	str	r0, [sp, #56]	; 0x38
 802b466:	920f      	str	r2, [sp, #60]	; 0x3c
 802b468:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 802b46c:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 802b470:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 802b474:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802b478:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 802b47c:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802b480:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 802b484:	9317      	str	r3, [sp, #92]	; 0x5c
 802b486:	e7c0      	b.n	802b40a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 802b488:	2001384c 	.word	0x2001384c

0802b48c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 802b48c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802b48e:	b08d      	sub	sp, #52	; 0x34
 802b490:	2300      	movs	r3, #0
 802b492:	9304      	str	r3, [sp, #16]
 802b494:	9305      	str	r3, [sp, #20]
 802b496:	9306      	str	r3, [sp, #24]
 802b498:	aa04      	add	r2, sp, #16
 802b49a:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802b49e:	9307      	str	r3, [sp, #28]
 802b4a0:	f100 0640 	add.w	r6, r0, #64	; 0x40
 802b4a4:	4613      	mov	r3, r2
 802b4a6:	f101 0710 	add.w	r7, r1, #16
 802b4aa:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802b4e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802b4ae:	460c      	mov	r4, r1
 802b4b0:	4605      	mov	r5, r0
 802b4b2:	ecb4 7a01 	vldmia	r4!, {s14}
 802b4b6:	ecf5 6a01 	vldmia	r5!, {s13}
 802b4ba:	42bc      	cmp	r4, r7
 802b4bc:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b4c0:	d1f7      	bne.n	802b4b2 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 802b4c2:	3010      	adds	r0, #16
 802b4c4:	42b0      	cmp	r0, r6
 802b4c6:	ece2 7a01 	vstmia	r2!, {s15}
 802b4ca:	d1ee      	bne.n	802b4aa <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802b4cc:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802b4ce:	ac0c      	add	r4, sp, #48	; 0x30
 802b4d0:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 802b4d4:	ed9d 0a08 	vldr	s0, [sp, #32]
 802b4d8:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802b4dc:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 802b4e0:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 802b4e4:	b00d      	add	sp, #52	; 0x34
 802b4e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b4e8:	00000000 	.word	0x00000000

0802b4ec <_ZN8touchgfx9Matrix4x4C1Ev>:
 802b4ec:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 802b51c <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 802b4f0:	2300      	movs	r3, #0
 802b4f2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b4f6:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802b4fa:	2200      	movs	r2, #0
 802b4fc:	4293      	cmp	r3, r2
 802b4fe:	f102 0201 	add.w	r2, r2, #1
 802b502:	bf14      	ite	ne
 802b504:	eef0 6a47 	vmovne.f32	s13, s14
 802b508:	eef0 6a67 	vmoveq.f32	s13, s15
 802b50c:	2a04      	cmp	r2, #4
 802b50e:	ece1 6a01 	vstmia	r1!, {s13}
 802b512:	d1f3      	bne.n	802b4fc <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 802b514:	3301      	adds	r3, #1
 802b516:	2b04      	cmp	r3, #4
 802b518:	d1ed      	bne.n	802b4f6 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 802b51a:	4770      	bx	lr
 802b51c:	00000000 	.word	0x00000000

0802b520 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 802b520:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b524:	460c      	mov	r4, r1
 802b526:	4605      	mov	r5, r0
 802b528:	4690      	mov	r8, r2
 802b52a:	f7ff ffdf 	bl	802b4ec <_ZN8touchgfx9Matrix4x4C1Ev>
 802b52e:	4628      	mov	r0, r5
 802b530:	4621      	mov	r1, r4
 802b532:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 802b536:	2300      	movs	r3, #0
 802b538:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802b578 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 802b53c:	eb08 0603 	add.w	r6, r8, r3
 802b540:	460f      	mov	r7, r1
 802b542:	2400      	movs	r4, #0
 802b544:	4632      	mov	r2, r6
 802b546:	ecf7 6a01 	vldmia	r7!, {s13}
 802b54a:	ed92 7a00 	vldr	s14, [r2]
 802b54e:	3401      	adds	r4, #1
 802b550:	2c04      	cmp	r4, #4
 802b552:	f106 0610 	add.w	r6, r6, #16
 802b556:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b55a:	d1f3      	bne.n	802b544 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 802b55c:	18c2      	adds	r2, r0, r3
 802b55e:	3304      	adds	r3, #4
 802b560:	2b10      	cmp	r3, #16
 802b562:	edc2 7a00 	vstr	s15, [r2]
 802b566:	d1e7      	bne.n	802b538 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 802b568:	3110      	adds	r1, #16
 802b56a:	4561      	cmp	r1, ip
 802b56c:	f100 0010 	add.w	r0, r0, #16
 802b570:	d1e1      	bne.n	802b536 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 802b572:	4628      	mov	r0, r5
 802b574:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b578:	00000000 	.word	0x00000000

0802b57c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 802b57c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b580:	ee87 0a80 	vdiv.f32	s0, s15, s0
 802b584:	f100 0320 	add.w	r3, r0, #32
 802b588:	3030      	adds	r0, #48	; 0x30
 802b58a:	ecf3 7a01 	vldmia	r3!, {s15}
 802b58e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b592:	4283      	cmp	r3, r0
 802b594:	edc3 7a03 	vstr	s15, [r3, #12]
 802b598:	d1f7      	bne.n	802b58a <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802b59a:	4770      	bx	lr

0802b59c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 802b59c:	b510      	push	{r4, lr}
 802b59e:	ed2d 8b02 	vpush	{d8}
 802b5a2:	4604      	mov	r4, r0
 802b5a4:	eef0 8a40 	vmov.f32	s17, s0
 802b5a8:	f001 fb8a 	bl	802ccc0 <sinf>
 802b5ac:	eeb0 8a40 	vmov.f32	s16, s0
 802b5b0:	eeb0 0a68 	vmov.f32	s0, s17
 802b5b4:	f001 fb38 	bl	802cc28 <cosf>
 802b5b8:	f104 0310 	add.w	r3, r4, #16
 802b5bc:	f104 0220 	add.w	r2, r4, #32
 802b5c0:	eeb1 6a48 	vneg.f32	s12, s16
 802b5c4:	edd3 7a04 	vldr	s15, [r3, #16]
 802b5c8:	edd3 6a00 	vldr	s13, [r3]
 802b5cc:	ee26 7a27 	vmul.f32	s14, s12, s15
 802b5d0:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b5d4:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b5d8:	eee6 7a88 	vfma.f32	s15, s13, s16
 802b5dc:	eca3 7a01 	vstmia	r3!, {s14}
 802b5e0:	429a      	cmp	r2, r3
 802b5e2:	edc3 7a03 	vstr	s15, [r3, #12]
 802b5e6:	d1ed      	bne.n	802b5c4 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 802b5e8:	ecbd 8b02 	vpop	{d8}
 802b5ec:	4620      	mov	r0, r4
 802b5ee:	bd10      	pop	{r4, pc}

0802b5f0 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 802b5f0:	b510      	push	{r4, lr}
 802b5f2:	ed2d 8b02 	vpush	{d8}
 802b5f6:	4604      	mov	r4, r0
 802b5f8:	eef0 8a40 	vmov.f32	s17, s0
 802b5fc:	f001 fb60 	bl	802ccc0 <sinf>
 802b600:	eeb0 8a40 	vmov.f32	s16, s0
 802b604:	eeb0 0a68 	vmov.f32	s0, s17
 802b608:	f001 fb0e 	bl	802cc28 <cosf>
 802b60c:	4623      	mov	r3, r4
 802b60e:	f104 0210 	add.w	r2, r4, #16
 802b612:	eeb1 6a48 	vneg.f32	s12, s16
 802b616:	edd3 7a08 	vldr	s15, [r3, #32]
 802b61a:	edd3 6a00 	vldr	s13, [r3]
 802b61e:	ee27 7a88 	vmul.f32	s14, s15, s16
 802b622:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b626:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b62a:	eee6 7a26 	vfma.f32	s15, s12, s13
 802b62e:	eca3 7a01 	vstmia	r3!, {s14}
 802b632:	429a      	cmp	r2, r3
 802b634:	edc3 7a07 	vstr	s15, [r3, #28]
 802b638:	d1ed      	bne.n	802b616 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 802b63a:	ecbd 8b02 	vpop	{d8}
 802b63e:	4620      	mov	r0, r4
 802b640:	bd10      	pop	{r4, pc}

0802b642 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 802b642:	b510      	push	{r4, lr}
 802b644:	ed2d 8b02 	vpush	{d8}
 802b648:	4604      	mov	r4, r0
 802b64a:	eef0 8a40 	vmov.f32	s17, s0
 802b64e:	f001 fb37 	bl	802ccc0 <sinf>
 802b652:	eeb0 8a40 	vmov.f32	s16, s0
 802b656:	eeb0 0a68 	vmov.f32	s0, s17
 802b65a:	f001 fae5 	bl	802cc28 <cosf>
 802b65e:	4623      	mov	r3, r4
 802b660:	f104 0210 	add.w	r2, r4, #16
 802b664:	eeb1 6a48 	vneg.f32	s12, s16
 802b668:	edd3 7a04 	vldr	s15, [r3, #16]
 802b66c:	edd3 6a00 	vldr	s13, [r3]
 802b670:	ee26 7a27 	vmul.f32	s14, s12, s15
 802b674:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b678:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b67c:	eee6 7a88 	vfma.f32	s15, s13, s16
 802b680:	eca3 7a01 	vstmia	r3!, {s14}
 802b684:	429a      	cmp	r2, r3
 802b686:	edc3 7a03 	vstr	s15, [r3, #12]
 802b68a:	d1ed      	bne.n	802b668 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 802b68c:	ecbd 8b02 	vpop	{d8}
 802b690:	4620      	mov	r0, r4
 802b692:	bd10      	pop	{r4, pc}

0802b694 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 802b694:	4603      	mov	r3, r0
 802b696:	f100 0210 	add.w	r2, r0, #16
 802b69a:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 802b69e:	edd3 7a00 	vldr	s15, [r3]
 802b6a2:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b6a6:	ece3 7a01 	vstmia	r3!, {s15}
 802b6aa:	4293      	cmp	r3, r2
 802b6ac:	d1f5      	bne.n	802b69a <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 802b6ae:	4770      	bx	lr

0802b6b0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 802b6b0:	f100 0310 	add.w	r3, r0, #16
 802b6b4:	f100 0220 	add.w	r2, r0, #32
 802b6b8:	ed93 7a08 	vldr	s14, [r3, #32]
 802b6bc:	edd3 7a00 	vldr	s15, [r3]
 802b6c0:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b6c4:	ece3 7a01 	vstmia	r3!, {s15}
 802b6c8:	4293      	cmp	r3, r2
 802b6ca:	d1f5      	bne.n	802b6b8 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 802b6cc:	4770      	bx	lr

0802b6ce <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802b6ce:	f100 0320 	add.w	r3, r0, #32
 802b6d2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802b6d6:	ed93 7a04 	vldr	s14, [r3, #16]
 802b6da:	edd3 7a00 	vldr	s15, [r3]
 802b6de:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b6e2:	ece3 7a01 	vstmia	r3!, {s15}
 802b6e6:	4293      	cmp	r3, r2
 802b6e8:	d1f5      	bne.n	802b6d6 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 802b6ea:	4770      	bx	lr

0802b6ec <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 802b6ec:	4603      	mov	r3, r0
 802b6ee:	f100 0210 	add.w	r2, r0, #16
 802b6f2:	edd3 7a00 	vldr	s15, [r3]
 802b6f6:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b6fa:	ece3 7a01 	vstmia	r3!, {s15}
 802b6fe:	4293      	cmp	r3, r2
 802b700:	d1f7      	bne.n	802b6f2 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 802b702:	4770      	bx	lr

0802b704 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 802b704:	f100 0310 	add.w	r3, r0, #16
 802b708:	f100 0220 	add.w	r2, r0, #32
 802b70c:	edd3 7a00 	vldr	s15, [r3]
 802b710:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b714:	ece3 7a01 	vstmia	r3!, {s15}
 802b718:	4293      	cmp	r3, r2
 802b71a:	d1f7      	bne.n	802b70c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 802b71c:	4770      	bx	lr

0802b71e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 802b71e:	f100 0320 	add.w	r3, r0, #32
 802b722:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802b726:	edd3 7a00 	vldr	s15, [r3]
 802b72a:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b72e:	ece3 7a01 	vstmia	r3!, {s15}
 802b732:	4293      	cmp	r3, r2
 802b734:	d1f7      	bne.n	802b726 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 802b736:	4770      	bx	lr

0802b738 <arm_mean_f32>:
 802b738:	b430      	push	{r4, r5}
 802b73a:	088d      	lsrs	r5, r1, #2
 802b73c:	eddf 7a17 	vldr	s15, [pc, #92]	; 802b79c <arm_mean_f32+0x64>
 802b740:	d018      	beq.n	802b774 <arm_mean_f32+0x3c>
 802b742:	f100 0310 	add.w	r3, r0, #16
 802b746:	462c      	mov	r4, r5
 802b748:	ed13 7a04 	vldr	s14, [r3, #-16]
 802b74c:	ed53 5a03 	vldr	s11, [r3, #-12]
 802b750:	ed13 6a02 	vldr	s12, [r3, #-8]
 802b754:	ed53 6a01 	vldr	s13, [r3, #-4]
 802b758:	ee37 7a87 	vadd.f32	s14, s15, s14
 802b75c:	3c01      	subs	r4, #1
 802b75e:	ee77 7a25 	vadd.f32	s15, s14, s11
 802b762:	f103 0310 	add.w	r3, r3, #16
 802b766:	ee77 7a86 	vadd.f32	s15, s15, s12
 802b76a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b76e:	d1eb      	bne.n	802b748 <arm_mean_f32+0x10>
 802b770:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 802b774:	f011 0303 	ands.w	r3, r1, #3
 802b778:	d005      	beq.n	802b786 <arm_mean_f32+0x4e>
 802b77a:	ecb0 7a01 	vldmia	r0!, {s14}
 802b77e:	3b01      	subs	r3, #1
 802b780:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b784:	d1f9      	bne.n	802b77a <arm_mean_f32+0x42>
 802b786:	ee07 1a10 	vmov	s14, r1
 802b78a:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 802b78e:	bc30      	pop	{r4, r5}
 802b790:	eec7 7a87 	vdiv.f32	s15, s15, s14
 802b794:	edc2 7a00 	vstr	s15, [r2]
 802b798:	4770      	bx	lr
 802b79a:	bf00      	nop
 802b79c:	00000000 	.word	0x00000000

0802b7a0 <arm_max_f32>:
 802b7a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b7a4:	1e4f      	subs	r7, r1, #1
 802b7a6:	ea5f 0897 	movs.w	r8, r7, lsr #2
 802b7aa:	f100 0e04 	add.w	lr, r0, #4
 802b7ae:	edd0 7a00 	vldr	s15, [r0]
 802b7b2:	d058      	beq.n	802b866 <arm_max_f32+0xc6>
 802b7b4:	3014      	adds	r0, #20
 802b7b6:	46c4      	mov	ip, r8
 802b7b8:	2604      	movs	r6, #4
 802b7ba:	2400      	movs	r4, #0
 802b7bc:	ed10 6a04 	vldr	s12, [r0, #-16]
 802b7c0:	ed50 6a03 	vldr	s13, [r0, #-12]
 802b7c4:	ed10 7a02 	vldr	s14, [r0, #-8]
 802b7c8:	ed50 5a01 	vldr	s11, [r0, #-4]
 802b7cc:	eeb4 6ae7 	vcmpe.f32	s12, s15
 802b7d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b7d4:	bfc8      	it	gt
 802b7d6:	eef0 7a46 	vmovgt.f32	s15, s12
 802b7da:	f1a6 0503 	sub.w	r5, r6, #3
 802b7de:	eef4 7ae6 	vcmpe.f32	s15, s13
 802b7e2:	bfc8      	it	gt
 802b7e4:	462c      	movgt	r4, r5
 802b7e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b7ea:	bf48      	it	mi
 802b7ec:	eef0 7a66 	vmovmi.f32	s15, s13
 802b7f0:	f1a6 0502 	sub.w	r5, r6, #2
 802b7f4:	eef4 7ac7 	vcmpe.f32	s15, s14
 802b7f8:	bf48      	it	mi
 802b7fa:	462c      	movmi	r4, r5
 802b7fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b800:	bf48      	it	mi
 802b802:	eef0 7a47 	vmovmi.f32	s15, s14
 802b806:	f106 35ff 	add.w	r5, r6, #4294967295
 802b80a:	eef4 7ae5 	vcmpe.f32	s15, s11
 802b80e:	bf48      	it	mi
 802b810:	462c      	movmi	r4, r5
 802b812:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b816:	bf48      	it	mi
 802b818:	4634      	movmi	r4, r6
 802b81a:	bf48      	it	mi
 802b81c:	eef0 7a65 	vmovmi.f32	s15, s11
 802b820:	f1bc 0c01 	subs.w	ip, ip, #1
 802b824:	f106 0604 	add.w	r6, r6, #4
 802b828:	f100 0010 	add.w	r0, r0, #16
 802b82c:	d1c6      	bne.n	802b7bc <arm_max_f32+0x1c>
 802b82e:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 802b832:	f017 0003 	ands.w	r0, r7, #3
 802b836:	d018      	beq.n	802b86a <arm_max_f32+0xca>
 802b838:	1a08      	subs	r0, r1, r0
 802b83a:	ecbe 7a01 	vldmia	lr!, {s14}
 802b83e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802b842:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b846:	bfc8      	it	gt
 802b848:	4604      	movgt	r4, r0
 802b84a:	f100 0001 	add.w	r0, r0, #1
 802b84e:	bfd8      	it	le
 802b850:	eeb0 7a67 	vmovle.f32	s14, s15
 802b854:	4288      	cmp	r0, r1
 802b856:	eef0 7a47 	vmov.f32	s15, s14
 802b85a:	d1ee      	bne.n	802b83a <arm_max_f32+0x9a>
 802b85c:	ed82 7a00 	vstr	s14, [r2]
 802b860:	601c      	str	r4, [r3, #0]
 802b862:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b866:	4644      	mov	r4, r8
 802b868:	e7e3      	b.n	802b832 <arm_max_f32+0x92>
 802b86a:	eeb0 7a67 	vmov.f32	s14, s15
 802b86e:	e7f5      	b.n	802b85c <arm_max_f32+0xbc>

0802b870 <arm_rfft_fast_init_f32>:
 802b870:	084b      	lsrs	r3, r1, #1
 802b872:	2b80      	cmp	r3, #128	; 0x80
 802b874:	b410      	push	{r4}
 802b876:	8201      	strh	r1, [r0, #16]
 802b878:	8003      	strh	r3, [r0, #0]
 802b87a:	d047      	beq.n	802b90c <arm_rfft_fast_init_f32+0x9c>
 802b87c:	d917      	bls.n	802b8ae <arm_rfft_fast_init_f32+0x3e>
 802b87e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802b882:	d03d      	beq.n	802b900 <arm_rfft_fast_init_f32+0x90>
 802b884:	d929      	bls.n	802b8da <arm_rfft_fast_init_f32+0x6a>
 802b886:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802b88a:	d020      	beq.n	802b8ce <arm_rfft_fast_init_f32+0x5e>
 802b88c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 802b890:	d113      	bne.n	802b8ba <arm_rfft_fast_init_f32+0x4a>
 802b892:	4921      	ldr	r1, [pc, #132]	; (802b918 <arm_rfft_fast_init_f32+0xa8>)
 802b894:	4a21      	ldr	r2, [pc, #132]	; (802b91c <arm_rfft_fast_init_f32+0xac>)
 802b896:	4b22      	ldr	r3, [pc, #136]	; (802b920 <arm_rfft_fast_init_f32+0xb0>)
 802b898:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 802b89c:	8184      	strh	r4, [r0, #12]
 802b89e:	6081      	str	r1, [r0, #8]
 802b8a0:	6042      	str	r2, [r0, #4]
 802b8a2:	6143      	str	r3, [r0, #20]
 802b8a4:	2000      	movs	r0, #0
 802b8a6:	b240      	sxtb	r0, r0
 802b8a8:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b8ac:	4770      	bx	lr
 802b8ae:	2b20      	cmp	r3, #32
 802b8b0:	d01c      	beq.n	802b8ec <arm_rfft_fast_init_f32+0x7c>
 802b8b2:	2b40      	cmp	r3, #64	; 0x40
 802b8b4:	d006      	beq.n	802b8c4 <arm_rfft_fast_init_f32+0x54>
 802b8b6:	2b10      	cmp	r3, #16
 802b8b8:	d01d      	beq.n	802b8f6 <arm_rfft_fast_init_f32+0x86>
 802b8ba:	20ff      	movs	r0, #255	; 0xff
 802b8bc:	b240      	sxtb	r0, r0
 802b8be:	f85d 4b04 	ldr.w	r4, [sp], #4
 802b8c2:	4770      	bx	lr
 802b8c4:	2438      	movs	r4, #56	; 0x38
 802b8c6:	4917      	ldr	r1, [pc, #92]	; (802b924 <arm_rfft_fast_init_f32+0xb4>)
 802b8c8:	4a17      	ldr	r2, [pc, #92]	; (802b928 <arm_rfft_fast_init_f32+0xb8>)
 802b8ca:	4b18      	ldr	r3, [pc, #96]	; (802b92c <arm_rfft_fast_init_f32+0xbc>)
 802b8cc:	e7e6      	b.n	802b89c <arm_rfft_fast_init_f32+0x2c>
 802b8ce:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 802b8d2:	4917      	ldr	r1, [pc, #92]	; (802b930 <arm_rfft_fast_init_f32+0xc0>)
 802b8d4:	4a17      	ldr	r2, [pc, #92]	; (802b934 <arm_rfft_fast_init_f32+0xc4>)
 802b8d6:	4b18      	ldr	r3, [pc, #96]	; (802b938 <arm_rfft_fast_init_f32+0xc8>)
 802b8d8:	e7e0      	b.n	802b89c <arm_rfft_fast_init_f32+0x2c>
 802b8da:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802b8de:	d1ec      	bne.n	802b8ba <arm_rfft_fast_init_f32+0x4a>
 802b8e0:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 802b8e4:	4915      	ldr	r1, [pc, #84]	; (802b93c <arm_rfft_fast_init_f32+0xcc>)
 802b8e6:	4a16      	ldr	r2, [pc, #88]	; (802b940 <arm_rfft_fast_init_f32+0xd0>)
 802b8e8:	4b16      	ldr	r3, [pc, #88]	; (802b944 <arm_rfft_fast_init_f32+0xd4>)
 802b8ea:	e7d7      	b.n	802b89c <arm_rfft_fast_init_f32+0x2c>
 802b8ec:	2430      	movs	r4, #48	; 0x30
 802b8ee:	4916      	ldr	r1, [pc, #88]	; (802b948 <arm_rfft_fast_init_f32+0xd8>)
 802b8f0:	4a16      	ldr	r2, [pc, #88]	; (802b94c <arm_rfft_fast_init_f32+0xdc>)
 802b8f2:	4b17      	ldr	r3, [pc, #92]	; (802b950 <arm_rfft_fast_init_f32+0xe0>)
 802b8f4:	e7d2      	b.n	802b89c <arm_rfft_fast_init_f32+0x2c>
 802b8f6:	2414      	movs	r4, #20
 802b8f8:	4916      	ldr	r1, [pc, #88]	; (802b954 <arm_rfft_fast_init_f32+0xe4>)
 802b8fa:	4a17      	ldr	r2, [pc, #92]	; (802b958 <arm_rfft_fast_init_f32+0xe8>)
 802b8fc:	4b17      	ldr	r3, [pc, #92]	; (802b95c <arm_rfft_fast_init_f32+0xec>)
 802b8fe:	e7cd      	b.n	802b89c <arm_rfft_fast_init_f32+0x2c>
 802b900:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 802b904:	4916      	ldr	r1, [pc, #88]	; (802b960 <arm_rfft_fast_init_f32+0xf0>)
 802b906:	4a17      	ldr	r2, [pc, #92]	; (802b964 <arm_rfft_fast_init_f32+0xf4>)
 802b908:	4b17      	ldr	r3, [pc, #92]	; (802b968 <arm_rfft_fast_init_f32+0xf8>)
 802b90a:	e7c7      	b.n	802b89c <arm_rfft_fast_init_f32+0x2c>
 802b90c:	24d0      	movs	r4, #208	; 0xd0
 802b90e:	4917      	ldr	r1, [pc, #92]	; (802b96c <arm_rfft_fast_init_f32+0xfc>)
 802b910:	4a17      	ldr	r2, [pc, #92]	; (802b970 <arm_rfft_fast_init_f32+0x100>)
 802b912:	4b18      	ldr	r3, [pc, #96]	; (802b974 <arm_rfft_fast_init_f32+0x104>)
 802b914:	e7c2      	b.n	802b89c <arm_rfft_fast_init_f32+0x2c>
 802b916:	bf00      	nop
 802b918:	08041014 	.word	0x08041014
 802b91c:	0803220c 	.word	0x0803220c
 802b920:	0803837c 	.word	0x0803837c
 802b924:	0803630c 	.word	0x0803630c
 802b928:	08042dd4 	.word	0x08042dd4
 802b92c:	080452c4 	.word	0x080452c4
 802b930:	0803ecfc 	.word	0x0803ecfc
 802b934:	0803cbfc 	.word	0x0803cbfc
 802b938:	0803637c 	.word	0x0803637c
 802b93c:	08044f54 	.word	0x08044f54
 802b940:	0803c37c 	.word	0x0803c37c
 802b944:	08042fd4 	.word	0x08042fd4
 802b948:	0803fbb4 	.word	0x0803fbb4
 802b94c:	0803ebfc 	.word	0x0803ebfc
 802b950:	0803620c 	.word	0x0803620c
 802b954:	0803fb0c 	.word	0x0803fb0c
 802b958:	0803cb7c 	.word	0x0803cb7c
 802b95c:	0803fb34 	.word	0x0803fb34
 802b960:	080437d4 	.word	0x080437d4
 802b964:	08040014 	.word	0x08040014
 802b968:	08043b54 	.word	0x08043b54
 802b96c:	080454c4 	.word	0x080454c4
 802b970:	0803fc14 	.word	0x0803fc14
 802b974:	08044b54 	.word	0x08044b54

0802b978 <arm_rfft_fast_f32>:
 802b978:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b97c:	8a06      	ldrh	r6, [r0, #16]
 802b97e:	0876      	lsrs	r6, r6, #1
 802b980:	4607      	mov	r7, r0
 802b982:	4615      	mov	r5, r2
 802b984:	8006      	strh	r6, [r0, #0]
 802b986:	460c      	mov	r4, r1
 802b988:	2b00      	cmp	r3, #0
 802b98a:	d15c      	bne.n	802ba46 <arm_rfft_fast_f32+0xce>
 802b98c:	461a      	mov	r2, r3
 802b98e:	2301      	movs	r3, #1
 802b990:	f000 fbe6 	bl	802c160 <arm_cfft_f32>
 802b994:	edd4 7a00 	vldr	s15, [r4]
 802b998:	ed94 7a01 	vldr	s14, [r4, #4]
 802b99c:	883e      	ldrh	r6, [r7, #0]
 802b99e:	6978      	ldr	r0, [r7, #20]
 802b9a0:	ee37 7a07 	vadd.f32	s14, s14, s14
 802b9a4:	ee77 7aa7 	vadd.f32	s15, s15, s15
 802b9a8:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802b9ac:	ee77 6a87 	vadd.f32	s13, s15, s14
 802b9b0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b9b4:	3e01      	subs	r6, #1
 802b9b6:	ee26 7aa3 	vmul.f32	s14, s13, s7
 802b9ba:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802b9be:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802b9c2:	ed85 7a00 	vstr	s14, [r5]
 802b9c6:	edc5 7a01 	vstr	s15, [r5, #4]
 802b9ca:	3010      	adds	r0, #16
 802b9cc:	f105 0210 	add.w	r2, r5, #16
 802b9d0:	3b08      	subs	r3, #8
 802b9d2:	f104 0110 	add.w	r1, r4, #16
 802b9d6:	ed51 4a02 	vldr	s9, [r1, #-8]
 802b9da:	ed93 5a02 	vldr	s10, [r3, #8]
 802b9de:	ed11 7a01 	vldr	s14, [r1, #-4]
 802b9e2:	ed10 6a02 	vldr	s12, [r0, #-8]
 802b9e6:	edd3 5a03 	vldr	s11, [r3, #12]
 802b9ea:	ed50 6a01 	vldr	s13, [r0, #-4]
 802b9ee:	ee75 7a64 	vsub.f32	s15, s10, s9
 802b9f2:	ee35 4a87 	vadd.f32	s8, s11, s14
 802b9f6:	ee35 5a24 	vadd.f32	s10, s10, s9
 802b9fa:	ee77 5a65 	vsub.f32	s11, s14, s11
 802b9fe:	ee66 4a27 	vmul.f32	s9, s12, s15
 802ba02:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802ba06:	ee34 5a85 	vadd.f32	s10, s9, s10
 802ba0a:	ee26 6a04 	vmul.f32	s12, s12, s8
 802ba0e:	ee66 6a84 	vmul.f32	s13, s13, s8
 802ba12:	ee77 7a25 	vadd.f32	s15, s14, s11
 802ba16:	ee76 6a85 	vadd.f32	s13, s13, s10
 802ba1a:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802ba1e:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802ba22:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802ba26:	3e01      	subs	r6, #1
 802ba28:	ed42 6a02 	vstr	s13, [r2, #-8]
 802ba2c:	ed42 7a01 	vstr	s15, [r2, #-4]
 802ba30:	f1a3 0308 	sub.w	r3, r3, #8
 802ba34:	f101 0108 	add.w	r1, r1, #8
 802ba38:	f100 0008 	add.w	r0, r0, #8
 802ba3c:	f102 0208 	add.w	r2, r2, #8
 802ba40:	d1c9      	bne.n	802b9d6 <arm_rfft_fast_f32+0x5e>
 802ba42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ba46:	edd1 7a00 	vldr	s15, [r1]
 802ba4a:	edd1 6a01 	vldr	s13, [r1, #4]
 802ba4e:	6941      	ldr	r1, [r0, #20]
 802ba50:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802ba54:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802ba58:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802ba5c:	ee27 7a23 	vmul.f32	s14, s14, s7
 802ba60:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802ba64:	3e01      	subs	r6, #1
 802ba66:	ed82 7a00 	vstr	s14, [r2]
 802ba6a:	edc2 7a01 	vstr	s15, [r2, #4]
 802ba6e:	00f0      	lsls	r0, r6, #3
 802ba70:	b3ee      	cbz	r6, 802baee <arm_rfft_fast_f32+0x176>
 802ba72:	3808      	subs	r0, #8
 802ba74:	f101 0e10 	add.w	lr, r1, #16
 802ba78:	4420      	add	r0, r4
 802ba7a:	f104 0110 	add.w	r1, r4, #16
 802ba7e:	f102 0c10 	add.w	ip, r2, #16
 802ba82:	ed90 7a02 	vldr	s14, [r0, #8]
 802ba86:	ed51 6a02 	vldr	s13, [r1, #-8]
 802ba8a:	ed1e 6a02 	vldr	s12, [lr, #-8]
 802ba8e:	ed90 4a03 	vldr	s8, [r0, #12]
 802ba92:	ed11 5a01 	vldr	s10, [r1, #-4]
 802ba96:	ed5e 5a01 	vldr	s11, [lr, #-4]
 802ba9a:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802ba9e:	ee74 4a05 	vadd.f32	s9, s8, s10
 802baa2:	ee26 3a27 	vmul.f32	s6, s12, s15
 802baa6:	ee77 6a26 	vadd.f32	s13, s14, s13
 802baaa:	ee35 5a44 	vsub.f32	s10, s10, s8
 802baae:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802bab2:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802bab6:	ee77 7a05 	vadd.f32	s15, s14, s10
 802baba:	ee26 6a24 	vmul.f32	s12, s12, s9
 802babe:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802bac2:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802bac6:	ee36 7ae5 	vsub.f32	s14, s13, s11
 802baca:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bace:	ee27 7a23 	vmul.f32	s14, s14, s7
 802bad2:	3e01      	subs	r6, #1
 802bad4:	ed0c 7a02 	vstr	s14, [ip, #-8]
 802bad8:	ed4c 7a01 	vstr	s15, [ip, #-4]
 802badc:	f1a0 0008 	sub.w	r0, r0, #8
 802bae0:	f101 0108 	add.w	r1, r1, #8
 802bae4:	f10e 0e08 	add.w	lr, lr, #8
 802bae8:	f10c 0c08 	add.w	ip, ip, #8
 802baec:	d1c9      	bne.n	802ba82 <arm_rfft_fast_f32+0x10a>
 802baee:	4638      	mov	r0, r7
 802baf0:	4629      	mov	r1, r5
 802baf2:	461a      	mov	r2, r3
 802baf4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802baf8:	2301      	movs	r3, #1
 802bafa:	f000 bb31 	b.w	802c160 <arm_cfft_f32>
 802bafe:	bf00      	nop

0802bb00 <arm_cfft_radix8by2_f32>:
 802bb00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bb04:	ed2d 8b08 	vpush	{d8-d11}
 802bb08:	f8b0 e000 	ldrh.w	lr, [r0]
 802bb0c:	6842      	ldr	r2, [r0, #4]
 802bb0e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802bb12:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 802bb16:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 802bb1a:	4607      	mov	r7, r0
 802bb1c:	ea4f 038c 	mov.w	r3, ip, lsl #2
 802bb20:	f000 80af 	beq.w	802bc82 <arm_cfft_radix8by2_f32+0x182>
 802bb24:	3310      	adds	r3, #16
 802bb26:	18ce      	adds	r6, r1, r3
 802bb28:	3210      	adds	r2, #16
 802bb2a:	4443      	add	r3, r8
 802bb2c:	f101 0510 	add.w	r5, r1, #16
 802bb30:	f108 0410 	add.w	r4, r8, #16
 802bb34:	ed54 1a04 	vldr	s3, [r4, #-16]
 802bb38:	ed13 4a04 	vldr	s8, [r3, #-16]
 802bb3c:	ed53 3a03 	vldr	s7, [r3, #-12]
 802bb40:	ed53 5a02 	vldr	s11, [r3, #-8]
 802bb44:	ed13 5a01 	vldr	s10, [r3, #-4]
 802bb48:	ed54 6a03 	vldr	s13, [r4, #-12]
 802bb4c:	ed14 0a02 	vldr	s0, [r4, #-8]
 802bb50:	ed16 2a04 	vldr	s4, [r6, #-16]
 802bb54:	ed56 2a03 	vldr	s5, [r6, #-12]
 802bb58:	ed15 6a03 	vldr	s12, [r5, #-12]
 802bb5c:	ed15 7a01 	vldr	s14, [r5, #-4]
 802bb60:	ed15 3a04 	vldr	s6, [r5, #-16]
 802bb64:	ed54 7a01 	vldr	s15, [r4, #-4]
 802bb68:	ed56 0a02 	vldr	s1, [r6, #-8]
 802bb6c:	ed16 1a01 	vldr	s2, [r6, #-4]
 802bb70:	ed55 4a02 	vldr	s9, [r5, #-8]
 802bb74:	ee73 ba21 	vadd.f32	s23, s6, s3
 802bb78:	ee36 ba26 	vadd.f32	s22, s12, s13
 802bb7c:	ee37 aa27 	vadd.f32	s20, s14, s15
 802bb80:	ee72 9a04 	vadd.f32	s19, s4, s8
 802bb84:	ee32 9aa3 	vadd.f32	s18, s5, s7
 802bb88:	ee31 8a05 	vadd.f32	s16, s2, s10
 802bb8c:	ee74 aa80 	vadd.f32	s21, s9, s0
 802bb90:	ee70 8aa5 	vadd.f32	s17, s1, s11
 802bb94:	ed45 ba04 	vstr	s23, [r5, #-16]
 802bb98:	ed05 ba03 	vstr	s22, [r5, #-12]
 802bb9c:	ed45 aa02 	vstr	s21, [r5, #-8]
 802bba0:	ed05 aa01 	vstr	s20, [r5, #-4]
 802bba4:	ed06 8a01 	vstr	s16, [r6, #-4]
 802bba8:	ed46 9a04 	vstr	s19, [r6, #-16]
 802bbac:	ed06 9a03 	vstr	s18, [r6, #-12]
 802bbb0:	ed46 8a02 	vstr	s17, [r6, #-8]
 802bbb4:	ee76 6a66 	vsub.f32	s13, s12, s13
 802bbb8:	ee73 3ae2 	vsub.f32	s7, s7, s5
 802bbbc:	ed12 6a03 	vldr	s12, [r2, #-12]
 802bbc0:	ed52 2a04 	vldr	s5, [r2, #-16]
 802bbc4:	ee33 3a61 	vsub.f32	s6, s6, s3
 802bbc8:	ee34 4a42 	vsub.f32	s8, s8, s4
 802bbcc:	ee26 8a86 	vmul.f32	s16, s13, s12
 802bbd0:	ee24 2a06 	vmul.f32	s4, s8, s12
 802bbd4:	ee63 1a22 	vmul.f32	s3, s6, s5
 802bbd8:	ee24 4a22 	vmul.f32	s8, s8, s5
 802bbdc:	ee23 3a06 	vmul.f32	s6, s6, s12
 802bbe0:	ee66 6aa2 	vmul.f32	s13, s13, s5
 802bbe4:	ee23 6a86 	vmul.f32	s12, s7, s12
 802bbe8:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802bbec:	ee36 6a04 	vadd.f32	s12, s12, s8
 802bbf0:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802bbf4:	ee72 3a63 	vsub.f32	s7, s4, s7
 802bbf8:	ee71 2a88 	vadd.f32	s5, s3, s16
 802bbfc:	ed44 6a03 	vstr	s13, [r4, #-12]
 802bc00:	ed44 2a04 	vstr	s5, [r4, #-16]
 802bc04:	ed43 3a04 	vstr	s7, [r3, #-16]
 802bc08:	ed03 6a03 	vstr	s12, [r3, #-12]
 802bc0c:	ee77 7a67 	vsub.f32	s15, s14, s15
 802bc10:	ee75 6ae0 	vsub.f32	s13, s11, s1
 802bc14:	ed12 7a01 	vldr	s14, [r2, #-4]
 802bc18:	ed52 5a02 	vldr	s11, [r2, #-8]
 802bc1c:	ee35 6a41 	vsub.f32	s12, s10, s2
 802bc20:	ee74 4ac0 	vsub.f32	s9, s9, s0
 802bc24:	ee67 3a87 	vmul.f32	s7, s15, s14
 802bc28:	ee26 5a87 	vmul.f32	s10, s13, s14
 802bc2c:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802bc30:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802bc34:	ee64 4a87 	vmul.f32	s9, s9, s14
 802bc38:	ee66 6aa5 	vmul.f32	s13, s13, s11
 802bc3c:	ee26 7a07 	vmul.f32	s14, s12, s14
 802bc40:	ee26 6a25 	vmul.f32	s12, s12, s11
 802bc44:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802bc48:	ee74 5a23 	vadd.f32	s11, s8, s7
 802bc4c:	ee35 6a46 	vsub.f32	s12, s10, s12
 802bc50:	ee37 7a26 	vadd.f32	s14, s14, s13
 802bc54:	f1be 0e01 	subs.w	lr, lr, #1
 802bc58:	ed44 5a02 	vstr	s11, [r4, #-8]
 802bc5c:	f105 0510 	add.w	r5, r5, #16
 802bc60:	ed44 7a01 	vstr	s15, [r4, #-4]
 802bc64:	f106 0610 	add.w	r6, r6, #16
 802bc68:	ed03 6a02 	vstr	s12, [r3, #-8]
 802bc6c:	ed03 7a01 	vstr	s14, [r3, #-4]
 802bc70:	f102 0210 	add.w	r2, r2, #16
 802bc74:	f104 0410 	add.w	r4, r4, #16
 802bc78:	f103 0310 	add.w	r3, r3, #16
 802bc7c:	f47f af5a 	bne.w	802bb34 <arm_cfft_radix8by2_f32+0x34>
 802bc80:	687a      	ldr	r2, [r7, #4]
 802bc82:	fa1f f48c 	uxth.w	r4, ip
 802bc86:	4608      	mov	r0, r1
 802bc88:	2302      	movs	r3, #2
 802bc8a:	4621      	mov	r1, r4
 802bc8c:	f000 fbca 	bl	802c424 <arm_radix8_butterfly_f32>
 802bc90:	ecbd 8b08 	vpop	{d8-d11}
 802bc94:	4640      	mov	r0, r8
 802bc96:	4621      	mov	r1, r4
 802bc98:	687a      	ldr	r2, [r7, #4]
 802bc9a:	2302      	movs	r3, #2
 802bc9c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802bca0:	f000 bbc0 	b.w	802c424 <arm_radix8_butterfly_f32>

0802bca4 <arm_cfft_radix8by4_f32>:
 802bca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bca8:	ed2d 8b0a 	vpush	{d8-d12}
 802bcac:	8802      	ldrh	r2, [r0, #0]
 802bcae:	ed91 6a00 	vldr	s12, [r1]
 802bcb2:	b08f      	sub	sp, #60	; 0x3c
 802bcb4:	460f      	mov	r7, r1
 802bcb6:	0852      	lsrs	r2, r2, #1
 802bcb8:	0093      	lsls	r3, r2, #2
 802bcba:	900c      	str	r0, [sp, #48]	; 0x30
 802bcbc:	9103      	str	r1, [sp, #12]
 802bcbe:	6841      	ldr	r1, [r0, #4]
 802bcc0:	ed97 7a01 	vldr	s14, [r7, #4]
 802bcc4:	4638      	mov	r0, r7
 802bcc6:	4418      	add	r0, r3
 802bcc8:	4606      	mov	r6, r0
 802bcca:	9009      	str	r0, [sp, #36]	; 0x24
 802bccc:	4418      	add	r0, r3
 802bcce:	edd0 6a00 	vldr	s13, [r0]
 802bcd2:	edd6 3a00 	vldr	s7, [r6]
 802bcd6:	edd6 2a01 	vldr	s5, [r6, #4]
 802bcda:	edd0 7a01 	vldr	s15, [r0, #4]
 802bcde:	900a      	str	r0, [sp, #40]	; 0x28
 802bce0:	ee76 5a26 	vadd.f32	s11, s12, s13
 802bce4:	4604      	mov	r4, r0
 802bce6:	4625      	mov	r5, r4
 802bce8:	441c      	add	r4, r3
 802bcea:	ed94 4a00 	vldr	s8, [r4]
 802bcee:	ed94 5a01 	vldr	s10, [r4, #4]
 802bcf2:	9401      	str	r4, [sp, #4]
 802bcf4:	ee75 4aa3 	vadd.f32	s9, s11, s7
 802bcf8:	4630      	mov	r0, r6
 802bcfa:	ee74 4a24 	vadd.f32	s9, s8, s9
 802bcfe:	463e      	mov	r6, r7
 802bd00:	ee14 ea90 	vmov	lr, s9
 802bd04:	ee76 6a66 	vsub.f32	s13, s12, s13
 802bd08:	f846 eb08 	str.w	lr, [r6], #8
 802bd0c:	ee37 6a27 	vadd.f32	s12, s14, s15
 802bd10:	edd0 4a01 	vldr	s9, [r0, #4]
 802bd14:	9604      	str	r6, [sp, #16]
 802bd16:	ee77 7a67 	vsub.f32	s15, s14, s15
 802bd1a:	9e01      	ldr	r6, [sp, #4]
 802bd1c:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802bd20:	ed96 2a01 	vldr	s4, [r6, #4]
 802bd24:	ee36 7a24 	vadd.f32	s14, s12, s9
 802bd28:	ee75 5ae3 	vsub.f32	s11, s11, s7
 802bd2c:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802bd30:	ee36 6a62 	vsub.f32	s12, s12, s5
 802bd34:	ee77 7aa3 	vadd.f32	s15, s15, s7
 802bd38:	ee76 6ae2 	vsub.f32	s13, s13, s5
 802bd3c:	ee73 3a45 	vsub.f32	s7, s6, s10
 802bd40:	4604      	mov	r4, r0
 802bd42:	ee36 6a45 	vsub.f32	s12, s12, s10
 802bd46:	ee75 6a26 	vadd.f32	s13, s10, s13
 802bd4a:	46a3      	mov	fp, r4
 802bd4c:	ee37 7a02 	vadd.f32	s14, s14, s4
 802bd50:	ee34 5a84 	vadd.f32	s10, s9, s8
 802bd54:	ee13 8a90 	vmov	r8, s7
 802bd58:	46a4      	mov	ip, r4
 802bd5a:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802bd5e:	ed87 7a01 	vstr	s14, [r7, #4]
 802bd62:	f84b 8b08 	str.w	r8, [fp], #8
 802bd66:	f1ac 0704 	sub.w	r7, ip, #4
 802bd6a:	ed8c 5a01 	vstr	s10, [ip, #4]
 802bd6e:	f101 0c08 	add.w	ip, r1, #8
 802bd72:	462c      	mov	r4, r5
 802bd74:	f8cd c014 	str.w	ip, [sp, #20]
 802bd78:	ee15 ca90 	vmov	ip, s11
 802bd7c:	f844 cb08 	str.w	ip, [r4], #8
 802bd80:	9407      	str	r4, [sp, #28]
 802bd82:	f101 0410 	add.w	r4, r1, #16
 802bd86:	ed85 6a01 	vstr	s12, [r5, #4]
 802bd8a:	0852      	lsrs	r2, r2, #1
 802bd8c:	9402      	str	r4, [sp, #8]
 802bd8e:	462c      	mov	r4, r5
 802bd90:	f101 0518 	add.w	r5, r1, #24
 802bd94:	920b      	str	r2, [sp, #44]	; 0x2c
 802bd96:	46b2      	mov	sl, r6
 802bd98:	9506      	str	r5, [sp, #24]
 802bd9a:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802bd9e:	3a02      	subs	r2, #2
 802bda0:	ee16 5a90 	vmov	r5, s13
 802bda4:	46b6      	mov	lr, r6
 802bda6:	4630      	mov	r0, r6
 802bda8:	0852      	lsrs	r2, r2, #1
 802bdaa:	f84a 5b08 	str.w	r5, [sl], #8
 802bdae:	f1a0 0604 	sub.w	r6, r0, #4
 802bdb2:	edce 7a01 	vstr	s15, [lr, #4]
 802bdb6:	9208      	str	r2, [sp, #32]
 802bdb8:	f000 8130 	beq.w	802c01c <arm_cfft_radix8by4_f32+0x378>
 802bdbc:	4691      	mov	r9, r2
 802bdbe:	9a03      	ldr	r2, [sp, #12]
 802bdc0:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802bdc4:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 802bdc8:	3b08      	subs	r3, #8
 802bdca:	f102 0510 	add.w	r5, r2, #16
 802bdce:	f101 0c20 	add.w	ip, r1, #32
 802bdd2:	f1a4 020c 	sub.w	r2, r4, #12
 802bdd6:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 802bdda:	4433      	add	r3, r6
 802bddc:	3410      	adds	r4, #16
 802bdde:	4650      	mov	r0, sl
 802bde0:	4659      	mov	r1, fp
 802bde2:	ed55 3a02 	vldr	s7, [r5, #-8]
 802bde6:	ed14 5a02 	vldr	s10, [r4, #-8]
 802bdea:	ed91 7a00 	vldr	s14, [r1]
 802bdee:	edd0 7a00 	vldr	s15, [r0]
 802bdf2:	ed15 4a01 	vldr	s8, [r5, #-4]
 802bdf6:	ed54 5a01 	vldr	s11, [r4, #-4]
 802bdfa:	edd0 6a01 	vldr	s13, [r0, #4]
 802bdfe:	ed91 6a01 	vldr	s12, [r1, #4]
 802be02:	ee33 8a85 	vadd.f32	s16, s7, s10
 802be06:	ee34 0a25 	vadd.f32	s0, s8, s11
 802be0a:	ee78 4a07 	vadd.f32	s9, s16, s14
 802be0e:	ee74 5a65 	vsub.f32	s11, s8, s11
 802be12:	ee77 4aa4 	vadd.f32	s9, s15, s9
 802be16:	ee33 5ac5 	vsub.f32	s10, s7, s10
 802be1a:	ed45 4a02 	vstr	s9, [r5, #-8]
 802be1e:	edd1 4a01 	vldr	s9, [r1, #4]
 802be22:	ed90 4a01 	vldr	s8, [r0, #4]
 802be26:	ee70 4a24 	vadd.f32	s9, s0, s9
 802be2a:	ee76 aa05 	vadd.f32	s21, s12, s10
 802be2e:	ee74 4a84 	vadd.f32	s9, s9, s8
 802be32:	ee35 aac7 	vsub.f32	s20, s11, s14
 802be36:	ed45 4a01 	vstr	s9, [r5, #-4]
 802be3a:	edd6 1a00 	vldr	s3, [r6]
 802be3e:	edd7 0a00 	vldr	s1, [r7]
 802be42:	ed92 4a02 	vldr	s8, [r2, #8]
 802be46:	edd3 3a02 	vldr	s7, [r3, #8]
 802be4a:	ed93 2a01 	vldr	s4, [r3, #4]
 802be4e:	ed16 1a01 	vldr	s2, [r6, #-4]
 802be52:	edd2 2a01 	vldr	s5, [r2, #4]
 802be56:	ed57 9a01 	vldr	s19, [r7, #-4]
 802be5a:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802be5e:	ee39 3a81 	vadd.f32	s6, s19, s2
 802be62:	ee74 8a84 	vadd.f32	s17, s9, s8
 802be66:	ee70 1ae1 	vsub.f32	s3, s1, s3
 802be6a:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802be6e:	ee7a aae6 	vsub.f32	s21, s21, s13
 802be72:	ee18 aa90 	vmov	sl, s17
 802be76:	f847 a908 	str.w	sl, [r7], #-8
 802be7a:	edd2 8a01 	vldr	s17, [r2, #4]
 802be7e:	ed93 9a01 	vldr	s18, [r3, #4]
 802be82:	ee73 8a28 	vadd.f32	s17, s6, s17
 802be86:	ee3a aa27 	vadd.f32	s20, s20, s15
 802be8a:	ee78 8a89 	vadd.f32	s17, s17, s18
 802be8e:	ee74 0a63 	vsub.f32	s1, s8, s7
 802be92:	edc7 8a01 	vstr	s17, [r7, #4]
 802be96:	ed18 ba02 	vldr	s22, [r8, #-8]
 802be9a:	ed58 8a01 	vldr	s17, [r8, #-4]
 802be9e:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802bea2:	ee6a ba28 	vmul.f32	s23, s20, s17
 802bea6:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802beaa:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802beae:	ee30 9a81 	vadd.f32	s18, s1, s2
 802beb2:	ee79 9a82 	vadd.f32	s19, s19, s4
 802beb6:	ee3c ca2b 	vadd.f32	s24, s24, s23
 802beba:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802bebe:	ee69 baa8 	vmul.f32	s23, s19, s17
 802bec2:	ee2a aa0b 	vmul.f32	s20, s20, s22
 802bec6:	ee69 9a8b 	vmul.f32	s19, s19, s22
 802beca:	ee69 8a28 	vmul.f32	s17, s18, s17
 802bece:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802bed2:	ee1c aa10 	vmov	sl, s24
 802bed6:	ee78 8aa9 	vadd.f32	s17, s17, s19
 802beda:	f841 ab08 	str.w	sl, [r1], #8
 802bede:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802bee2:	ee3b bacb 	vsub.f32	s22, s23, s22
 802bee6:	ee34 4ac4 	vsub.f32	s8, s9, s8
 802beea:	ee33 3a62 	vsub.f32	s6, s6, s5
 802beee:	ed01 aa01 	vstr	s20, [r1, #-4]
 802bef2:	edc2 8a01 	vstr	s17, [r2, #4]
 802bef6:	ed82 ba02 	vstr	s22, [r2, #8]
 802befa:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802befe:	ee74 3a63 	vsub.f32	s7, s8, s7
 802bf02:	ee38 8a47 	vsub.f32	s16, s16, s14
 802bf06:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802bf0a:	ee30 0a46 	vsub.f32	s0, s0, s12
 802bf0e:	ee33 3a42 	vsub.f32	s6, s6, s4
 802bf12:	ee38 8a67 	vsub.f32	s16, s16, s15
 802bf16:	ee30 0a66 	vsub.f32	s0, s0, s13
 802bf1a:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802bf1e:	ee63 8a04 	vmul.f32	s17, s6, s8
 802bf22:	ee28 aa24 	vmul.f32	s20, s16, s9
 802bf26:	ee60 9a04 	vmul.f32	s19, s0, s8
 802bf2a:	ee28 8a04 	vmul.f32	s16, s16, s8
 802bf2e:	ee20 0a24 	vmul.f32	s0, s0, s9
 802bf32:	ee63 3a84 	vmul.f32	s7, s7, s8
 802bf36:	ee39 4a68 	vsub.f32	s8, s18, s17
 802bf3a:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802bf3e:	ee14 aa10 	vmov	sl, s8
 802bf42:	ee30 0a48 	vsub.f32	s0, s0, s16
 802bf46:	ee63 4a24 	vmul.f32	s9, s6, s9
 802bf4a:	ed44 9a02 	vstr	s19, [r4, #-8]
 802bf4e:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802bf52:	ed04 0a01 	vstr	s0, [r4, #-4]
 802bf56:	f846 a908 	str.w	sl, [r6], #-8
 802bf5a:	ee35 6a46 	vsub.f32	s12, s10, s12
 802bf5e:	ee35 7a87 	vadd.f32	s14, s11, s14
 802bf62:	edc6 3a01 	vstr	s7, [r6, #4]
 802bf66:	ee76 6a86 	vadd.f32	s13, s13, s12
 802bf6a:	ee77 7a67 	vsub.f32	s15, s14, s15
 802bf6e:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802bf72:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802bf76:	ee67 5a86 	vmul.f32	s11, s15, s12
 802bf7a:	ee26 5a87 	vmul.f32	s10, s13, s14
 802bf7e:	ee72 2a62 	vsub.f32	s5, s4, s5
 802bf82:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802bf86:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802bf8a:	ee75 5a25 	vadd.f32	s11, s10, s11
 802bf8e:	ee62 0a86 	vmul.f32	s1, s5, s12
 802bf92:	ee66 6a86 	vmul.f32	s13, s13, s12
 802bf96:	ee67 7a87 	vmul.f32	s15, s15, s14
 802bf9a:	ee21 6a06 	vmul.f32	s12, s2, s12
 802bf9e:	ee62 2a87 	vmul.f32	s5, s5, s14
 802bfa2:	ee21 1a07 	vmul.f32	s2, s2, s14
 802bfa6:	ee15 aa90 	vmov	sl, s11
 802bfaa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802bfae:	f840 ab08 	str.w	sl, [r0], #8
 802bfb2:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802bfb6:	ee76 2a22 	vadd.f32	s5, s12, s5
 802bfba:	f1b9 0901 	subs.w	r9, r9, #1
 802bfbe:	ed40 7a01 	vstr	s15, [r0, #-4]
 802bfc2:	f105 0508 	add.w	r5, r5, #8
 802bfc6:	ed83 1a02 	vstr	s2, [r3, #8]
 802bfca:	edc3 2a01 	vstr	s5, [r3, #4]
 802bfce:	f108 0808 	add.w	r8, r8, #8
 802bfd2:	f1a2 0208 	sub.w	r2, r2, #8
 802bfd6:	f10c 0c10 	add.w	ip, ip, #16
 802bfda:	f104 0408 	add.w	r4, r4, #8
 802bfde:	f10e 0e18 	add.w	lr, lr, #24
 802bfe2:	f1a3 0308 	sub.w	r3, r3, #8
 802bfe6:	f47f aefc 	bne.w	802bde2 <arm_cfft_radix8by4_f32+0x13e>
 802bfea:	9908      	ldr	r1, [sp, #32]
 802bfec:	9802      	ldr	r0, [sp, #8]
 802bfee:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802bff2:	00cb      	lsls	r3, r1, #3
 802bff4:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 802bff8:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 802bffc:	9102      	str	r1, [sp, #8]
 802bffe:	9904      	ldr	r1, [sp, #16]
 802c000:	4419      	add	r1, r3
 802c002:	9104      	str	r1, [sp, #16]
 802c004:	9905      	ldr	r1, [sp, #20]
 802c006:	4419      	add	r1, r3
 802c008:	9105      	str	r1, [sp, #20]
 802c00a:	9907      	ldr	r1, [sp, #28]
 802c00c:	449b      	add	fp, r3
 802c00e:	4419      	add	r1, r3
 802c010:	449a      	add	sl, r3
 802c012:	9b06      	ldr	r3, [sp, #24]
 802c014:	9107      	str	r1, [sp, #28]
 802c016:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802c01a:	9306      	str	r3, [sp, #24]
 802c01c:	9a04      	ldr	r2, [sp, #16]
 802c01e:	9807      	ldr	r0, [sp, #28]
 802c020:	edd2 3a00 	vldr	s7, [r2]
 802c024:	ed90 4a00 	vldr	s8, [r0]
 802c028:	eddb 7a00 	vldr	s15, [fp]
 802c02c:	ed9a 3a00 	vldr	s6, [sl]
 802c030:	edd2 4a01 	vldr	s9, [r2, #4]
 802c034:	ed90 7a01 	vldr	s14, [r0, #4]
 802c038:	ed9b 2a01 	vldr	s4, [fp, #4]
 802c03c:	edda 5a01 	vldr	s11, [sl, #4]
 802c040:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 802c044:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802c046:	ee73 6a84 	vadd.f32	s13, s7, s8
 802c04a:	ee34 6a87 	vadd.f32	s12, s9, s14
 802c04e:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802c052:	ee34 7ac7 	vsub.f32	s14, s9, s14
 802c056:	ee33 5a05 	vadd.f32	s10, s6, s10
 802c05a:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802c05e:	ed82 5a00 	vstr	s10, [r2]
 802c062:	ed9b 5a01 	vldr	s10, [fp, #4]
 802c066:	edda 4a01 	vldr	s9, [sl, #4]
 802c06a:	ee36 5a05 	vadd.f32	s10, s12, s10
 802c06e:	ee72 3a04 	vadd.f32	s7, s4, s8
 802c072:	ee35 5a24 	vadd.f32	s10, s10, s9
 802c076:	ee77 4a67 	vsub.f32	s9, s14, s15
 802c07a:	ed82 5a01 	vstr	s10, [r2, #4]
 802c07e:	9a05      	ldr	r2, [sp, #20]
 802c080:	ee34 5a83 	vadd.f32	s10, s9, s6
 802c084:	edd2 1a00 	vldr	s3, [r2]
 802c088:	edd2 2a01 	vldr	s5, [r2, #4]
 802c08c:	9a02      	ldr	r2, [sp, #8]
 802c08e:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802c092:	ee36 6a42 	vsub.f32	s12, s12, s4
 802c096:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802c09a:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802c09e:	ee65 2a22 	vmul.f32	s5, s10, s5
 802c0a2:	ee25 5a21 	vmul.f32	s10, s10, s3
 802c0a6:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802c0aa:	ee35 5a63 	vsub.f32	s10, s10, s7
 802c0ae:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802c0b2:	edcb 2a00 	vstr	s5, [fp]
 802c0b6:	ed8b 5a01 	vstr	s10, [fp, #4]
 802c0ba:	edd2 3a01 	vldr	s7, [r2, #4]
 802c0be:	ed92 5a00 	vldr	s10, [r2]
 802c0c2:	9a06      	ldr	r2, [sp, #24]
 802c0c4:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802c0c8:	ee36 6a65 	vsub.f32	s12, s12, s11
 802c0cc:	ee66 4a85 	vmul.f32	s9, s13, s10
 802c0d0:	ee26 5a05 	vmul.f32	s10, s12, s10
 802c0d4:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802c0d8:	ee26 6a23 	vmul.f32	s12, s12, s7
 802c0dc:	ee75 6a66 	vsub.f32	s13, s10, s13
 802c0e0:	ee34 6a86 	vadd.f32	s12, s9, s12
 802c0e4:	ee34 4a42 	vsub.f32	s8, s8, s4
 802c0e8:	ee37 7a27 	vadd.f32	s14, s14, s15
 802c0ec:	edc0 6a01 	vstr	s13, [r0, #4]
 802c0f0:	ed80 6a00 	vstr	s12, [r0]
 802c0f4:	ed92 6a01 	vldr	s12, [r2, #4]
 802c0f8:	9803      	ldr	r0, [sp, #12]
 802c0fa:	ee77 7a43 	vsub.f32	s15, s14, s6
 802c0fe:	ee75 5a84 	vadd.f32	s11, s11, s8
 802c102:	ed92 7a00 	vldr	s14, [r2]
 802c106:	ee65 6a87 	vmul.f32	s13, s11, s14
 802c10a:	ee27 7a87 	vmul.f32	s14, s15, s14
 802c10e:	ee65 5a86 	vmul.f32	s11, s11, s12
 802c112:	ee67 7a86 	vmul.f32	s15, s15, s12
 802c116:	ee77 5a65 	vsub.f32	s11, s14, s11
 802c11a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802c11e:	edca 5a01 	vstr	s11, [sl, #4]
 802c122:	edca 7a00 	vstr	s15, [sl]
 802c126:	6872      	ldr	r2, [r6, #4]
 802c128:	4621      	mov	r1, r4
 802c12a:	2304      	movs	r3, #4
 802c12c:	f000 f97a 	bl	802c424 <arm_radix8_butterfly_f32>
 802c130:	9809      	ldr	r0, [sp, #36]	; 0x24
 802c132:	6872      	ldr	r2, [r6, #4]
 802c134:	4621      	mov	r1, r4
 802c136:	2304      	movs	r3, #4
 802c138:	f000 f974 	bl	802c424 <arm_radix8_butterfly_f32>
 802c13c:	980a      	ldr	r0, [sp, #40]	; 0x28
 802c13e:	6872      	ldr	r2, [r6, #4]
 802c140:	4621      	mov	r1, r4
 802c142:	2304      	movs	r3, #4
 802c144:	f000 f96e 	bl	802c424 <arm_radix8_butterfly_f32>
 802c148:	9801      	ldr	r0, [sp, #4]
 802c14a:	6872      	ldr	r2, [r6, #4]
 802c14c:	4621      	mov	r1, r4
 802c14e:	2304      	movs	r3, #4
 802c150:	b00f      	add	sp, #60	; 0x3c
 802c152:	ecbd 8b0a 	vpop	{d8-d12}
 802c156:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c15a:	f000 b963 	b.w	802c424 <arm_radix8_butterfly_f32>
 802c15e:	bf00      	nop

0802c160 <arm_cfft_f32>:
 802c160:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c164:	2a01      	cmp	r2, #1
 802c166:	4606      	mov	r6, r0
 802c168:	4617      	mov	r7, r2
 802c16a:	460c      	mov	r4, r1
 802c16c:	4698      	mov	r8, r3
 802c16e:	8805      	ldrh	r5, [r0, #0]
 802c170:	d054      	beq.n	802c21c <arm_cfft_f32+0xbc>
 802c172:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802c176:	d04c      	beq.n	802c212 <arm_cfft_f32+0xb2>
 802c178:	d916      	bls.n	802c1a8 <arm_cfft_f32+0x48>
 802c17a:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802c17e:	d01a      	beq.n	802c1b6 <arm_cfft_f32+0x56>
 802c180:	d95c      	bls.n	802c23c <arm_cfft_f32+0xdc>
 802c182:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802c186:	d044      	beq.n	802c212 <arm_cfft_f32+0xb2>
 802c188:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802c18c:	d105      	bne.n	802c19a <arm_cfft_f32+0x3a>
 802c18e:	4620      	mov	r0, r4
 802c190:	4629      	mov	r1, r5
 802c192:	6872      	ldr	r2, [r6, #4]
 802c194:	2301      	movs	r3, #1
 802c196:	f000 f945 	bl	802c424 <arm_radix8_butterfly_f32>
 802c19a:	f1b8 0f00 	cmp.w	r8, #0
 802c19e:	d111      	bne.n	802c1c4 <arm_cfft_f32+0x64>
 802c1a0:	2f01      	cmp	r7, #1
 802c1a2:	d016      	beq.n	802c1d2 <arm_cfft_f32+0x72>
 802c1a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c1a8:	2d20      	cmp	r5, #32
 802c1aa:	d032      	beq.n	802c212 <arm_cfft_f32+0xb2>
 802c1ac:	d94a      	bls.n	802c244 <arm_cfft_f32+0xe4>
 802c1ae:	2d40      	cmp	r5, #64	; 0x40
 802c1b0:	d0ed      	beq.n	802c18e <arm_cfft_f32+0x2e>
 802c1b2:	2d80      	cmp	r5, #128	; 0x80
 802c1b4:	d1f1      	bne.n	802c19a <arm_cfft_f32+0x3a>
 802c1b6:	4630      	mov	r0, r6
 802c1b8:	4621      	mov	r1, r4
 802c1ba:	f7ff fca1 	bl	802bb00 <arm_cfft_radix8by2_f32>
 802c1be:	f1b8 0f00 	cmp.w	r8, #0
 802c1c2:	d0ed      	beq.n	802c1a0 <arm_cfft_f32+0x40>
 802c1c4:	4620      	mov	r0, r4
 802c1c6:	89b1      	ldrh	r1, [r6, #12]
 802c1c8:	68b2      	ldr	r2, [r6, #8]
 802c1ca:	f7d4 f811 	bl	80001f0 <arm_bitreversal_32>
 802c1ce:	2f01      	cmp	r7, #1
 802c1d0:	d1e8      	bne.n	802c1a4 <arm_cfft_f32+0x44>
 802c1d2:	ee07 5a90 	vmov	s15, r5
 802c1d6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802c1da:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802c1de:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802c1e2:	2d00      	cmp	r5, #0
 802c1e4:	d0de      	beq.n	802c1a4 <arm_cfft_f32+0x44>
 802c1e6:	f104 0108 	add.w	r1, r4, #8
 802c1ea:	2300      	movs	r3, #0
 802c1ec:	3301      	adds	r3, #1
 802c1ee:	429d      	cmp	r5, r3
 802c1f0:	f101 0108 	add.w	r1, r1, #8
 802c1f4:	ed11 7a04 	vldr	s14, [r1, #-16]
 802c1f8:	ed51 7a03 	vldr	s15, [r1, #-12]
 802c1fc:	ee27 7a26 	vmul.f32	s14, s14, s13
 802c200:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802c204:	ed01 7a04 	vstr	s14, [r1, #-16]
 802c208:	ed41 7a03 	vstr	s15, [r1, #-12]
 802c20c:	d1ee      	bne.n	802c1ec <arm_cfft_f32+0x8c>
 802c20e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c212:	4630      	mov	r0, r6
 802c214:	4621      	mov	r1, r4
 802c216:	f7ff fd45 	bl	802bca4 <arm_cfft_radix8by4_f32>
 802c21a:	e7be      	b.n	802c19a <arm_cfft_f32+0x3a>
 802c21c:	b1ad      	cbz	r5, 802c24a <arm_cfft_f32+0xea>
 802c21e:	f101 030c 	add.w	r3, r1, #12
 802c222:	2200      	movs	r2, #0
 802c224:	ed53 7a02 	vldr	s15, [r3, #-8]
 802c228:	3201      	adds	r2, #1
 802c22a:	eef1 7a67 	vneg.f32	s15, s15
 802c22e:	4295      	cmp	r5, r2
 802c230:	ed43 7a02 	vstr	s15, [r3, #-8]
 802c234:	f103 0308 	add.w	r3, r3, #8
 802c238:	d1f4      	bne.n	802c224 <arm_cfft_f32+0xc4>
 802c23a:	e79a      	b.n	802c172 <arm_cfft_f32+0x12>
 802c23c:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802c240:	d0a5      	beq.n	802c18e <arm_cfft_f32+0x2e>
 802c242:	e7aa      	b.n	802c19a <arm_cfft_f32+0x3a>
 802c244:	2d10      	cmp	r5, #16
 802c246:	d0b6      	beq.n	802c1b6 <arm_cfft_f32+0x56>
 802c248:	e7a7      	b.n	802c19a <arm_cfft_f32+0x3a>
 802c24a:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802c24e:	d894      	bhi.n	802c17a <arm_cfft_f32+0x1a>
 802c250:	e7aa      	b.n	802c1a8 <arm_cfft_f32+0x48>
 802c252:	bf00      	nop

0802c254 <arm_cmplx_mag_f32>:
 802c254:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c258:	ea5f 0892 	movs.w	r8, r2, lsr #2
 802c25c:	b084      	sub	sp, #16
 802c25e:	d07f      	beq.n	802c360 <arm_cmplx_mag_f32+0x10c>
 802c260:	2700      	movs	r7, #0
 802c262:	f100 0420 	add.w	r4, r0, #32
 802c266:	f101 0510 	add.w	r5, r1, #16
 802c26a:	4646      	mov	r6, r8
 802c26c:	e05a      	b.n	802c324 <arm_cmplx_mag_f32+0xd0>
 802c26e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c272:	eeb4 0a40 	vcmp.f32	s0, s0
 802c276:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c27a:	f040 80a4 	bne.w	802c3c6 <arm_cmplx_mag_f32+0x172>
 802c27e:	ed05 0a04 	vstr	s0, [r5, #-16]
 802c282:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802c286:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802c28a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c28e:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c292:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c296:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c29a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c29e:	f2c0 808f 	blt.w	802c3c0 <arm_cmplx_mag_f32+0x16c>
 802c2a2:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c2a6:	eeb4 0a40 	vcmp.f32	s0, s0
 802c2aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c2ae:	f040 80af 	bne.w	802c410 <arm_cmplx_mag_f32+0x1bc>
 802c2b2:	ed05 0a03 	vstr	s0, [r5, #-12]
 802c2b6:	ed54 7a04 	vldr	s15, [r4, #-16]
 802c2ba:	ed14 0a03 	vldr	s0, [r4, #-12]
 802c2be:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c2c2:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c2c6:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c2ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c2ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c2d2:	db72      	blt.n	802c3ba <arm_cmplx_mag_f32+0x166>
 802c2d4:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c2d8:	eeb4 0a40 	vcmp.f32	s0, s0
 802c2dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c2e0:	f040 808c 	bne.w	802c3fc <arm_cmplx_mag_f32+0x1a8>
 802c2e4:	ed05 0a02 	vstr	s0, [r5, #-8]
 802c2e8:	ed54 7a02 	vldr	s15, [r4, #-8]
 802c2ec:	ed14 0a01 	vldr	s0, [r4, #-4]
 802c2f0:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c2f4:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c2f8:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c2fc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c300:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c304:	db20      	blt.n	802c348 <arm_cmplx_mag_f32+0xf4>
 802c306:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c30a:	eeb4 0a40 	vcmp.f32	s0, s0
 802c30e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c312:	d169      	bne.n	802c3e8 <arm_cmplx_mag_f32+0x194>
 802c314:	3e01      	subs	r6, #1
 802c316:	ed05 0a01 	vstr	s0, [r5, #-4]
 802c31a:	f104 0420 	add.w	r4, r4, #32
 802c31e:	f105 0510 	add.w	r5, r5, #16
 802c322:	d019      	beq.n	802c358 <arm_cmplx_mag_f32+0x104>
 802c324:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802c328:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 802c32c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c330:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c334:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c338:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c33c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c340:	da95      	bge.n	802c26e <arm_cmplx_mag_f32+0x1a>
 802c342:	f845 7c10 	str.w	r7, [r5, #-16]
 802c346:	e79c      	b.n	802c282 <arm_cmplx_mag_f32+0x2e>
 802c348:	3e01      	subs	r6, #1
 802c34a:	f845 7c04 	str.w	r7, [r5, #-4]
 802c34e:	f104 0420 	add.w	r4, r4, #32
 802c352:	f105 0510 	add.w	r5, r5, #16
 802c356:	d1e5      	bne.n	802c324 <arm_cmplx_mag_f32+0xd0>
 802c358:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 802c35c:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802c360:	f012 0503 	ands.w	r5, r2, #3
 802c364:	d026      	beq.n	802c3b4 <arm_cmplx_mag_f32+0x160>
 802c366:	2600      	movs	r6, #0
 802c368:	f100 0408 	add.w	r4, r0, #8
 802c36c:	e00c      	b.n	802c388 <arm_cmplx_mag_f32+0x134>
 802c36e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c372:	eeb4 0a40 	vcmp.f32	s0, s0
 802c376:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c37a:	d12e      	bne.n	802c3da <arm_cmplx_mag_f32+0x186>
 802c37c:	3d01      	subs	r5, #1
 802c37e:	ed01 0a01 	vstr	s0, [r1, #-4]
 802c382:	f104 0408 	add.w	r4, r4, #8
 802c386:	d015      	beq.n	802c3b4 <arm_cmplx_mag_f32+0x160>
 802c388:	ed54 7a02 	vldr	s15, [r4, #-8]
 802c38c:	ed14 0a01 	vldr	s0, [r4, #-4]
 802c390:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c394:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c398:	3104      	adds	r1, #4
 802c39a:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c39e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c3a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c3a6:	dae2      	bge.n	802c36e <arm_cmplx_mag_f32+0x11a>
 802c3a8:	3d01      	subs	r5, #1
 802c3aa:	f841 6c04 	str.w	r6, [r1, #-4]
 802c3ae:	f104 0408 	add.w	r4, r4, #8
 802c3b2:	d1e9      	bne.n	802c388 <arm_cmplx_mag_f32+0x134>
 802c3b4:	b004      	add	sp, #16
 802c3b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c3ba:	f845 7c08 	str.w	r7, [r5, #-8]
 802c3be:	e793      	b.n	802c2e8 <arm_cmplx_mag_f32+0x94>
 802c3c0:	f845 7c0c 	str.w	r7, [r5, #-12]
 802c3c4:	e777      	b.n	802c2b6 <arm_cmplx_mag_f32+0x62>
 802c3c6:	eeb0 0a67 	vmov.f32	s0, s15
 802c3ca:	9203      	str	r2, [sp, #12]
 802c3cc:	9102      	str	r1, [sp, #8]
 802c3ce:	9001      	str	r0, [sp, #4]
 802c3d0:	f000 fb38 	bl	802ca44 <sqrtf>
 802c3d4:	a801      	add	r0, sp, #4
 802c3d6:	c807      	ldmia	r0, {r0, r1, r2}
 802c3d8:	e751      	b.n	802c27e <arm_cmplx_mag_f32+0x2a>
 802c3da:	eeb0 0a67 	vmov.f32	s0, s15
 802c3de:	9101      	str	r1, [sp, #4]
 802c3e0:	f000 fb30 	bl	802ca44 <sqrtf>
 802c3e4:	9901      	ldr	r1, [sp, #4]
 802c3e6:	e7c9      	b.n	802c37c <arm_cmplx_mag_f32+0x128>
 802c3e8:	eeb0 0a67 	vmov.f32	s0, s15
 802c3ec:	9203      	str	r2, [sp, #12]
 802c3ee:	9102      	str	r1, [sp, #8]
 802c3f0:	9001      	str	r0, [sp, #4]
 802c3f2:	f000 fb27 	bl	802ca44 <sqrtf>
 802c3f6:	a801      	add	r0, sp, #4
 802c3f8:	c807      	ldmia	r0, {r0, r1, r2}
 802c3fa:	e78b      	b.n	802c314 <arm_cmplx_mag_f32+0xc0>
 802c3fc:	eeb0 0a67 	vmov.f32	s0, s15
 802c400:	9203      	str	r2, [sp, #12]
 802c402:	9102      	str	r1, [sp, #8]
 802c404:	9001      	str	r0, [sp, #4]
 802c406:	f000 fb1d 	bl	802ca44 <sqrtf>
 802c40a:	a801      	add	r0, sp, #4
 802c40c:	c807      	ldmia	r0, {r0, r1, r2}
 802c40e:	e769      	b.n	802c2e4 <arm_cmplx_mag_f32+0x90>
 802c410:	eeb0 0a67 	vmov.f32	s0, s15
 802c414:	9203      	str	r2, [sp, #12]
 802c416:	9102      	str	r1, [sp, #8]
 802c418:	9001      	str	r0, [sp, #4]
 802c41a:	f000 fb13 	bl	802ca44 <sqrtf>
 802c41e:	a801      	add	r0, sp, #4
 802c420:	c807      	ldmia	r0, {r0, r1, r2}
 802c422:	e746      	b.n	802c2b2 <arm_cmplx_mag_f32+0x5e>

0802c424 <arm_radix8_butterfly_f32>:
 802c424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c428:	ed2d 8b10 	vpush	{d8-d15}
 802c42c:	b09d      	sub	sp, #116	; 0x74
 802c42e:	461c      	mov	r4, r3
 802c430:	ed9f bac8 	vldr	s22, [pc, #800]	; 802c754 <arm_radix8_butterfly_f32+0x330>
 802c434:	921a      	str	r2, [sp, #104]	; 0x68
 802c436:	1d03      	adds	r3, r0, #4
 802c438:	4682      	mov	sl, r0
 802c43a:	4689      	mov	r9, r1
 802c43c:	468b      	mov	fp, r1
 802c43e:	931b      	str	r3, [sp, #108]	; 0x6c
 802c440:	9400      	str	r4, [sp, #0]
 802c442:	469e      	mov	lr, r3
 802c444:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802c448:	005a      	lsls	r2, r3, #1
 802c44a:	18d6      	adds	r6, r2, r3
 802c44c:	18f5      	adds	r5, r6, r3
 802c44e:	9203      	str	r2, [sp, #12]
 802c450:	195a      	adds	r2, r3, r5
 802c452:	18d0      	adds	r0, r2, r3
 802c454:	00df      	lsls	r7, r3, #3
 802c456:	1819      	adds	r1, r3, r0
 802c458:	463c      	mov	r4, r7
 802c45a:	9701      	str	r7, [sp, #4]
 802c45c:	4457      	add	r7, sl
 802c45e:	930c      	str	r3, [sp, #48]	; 0x30
 802c460:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802c464:	011b      	lsls	r3, r3, #4
 802c466:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802c46a:	eb07 0c04 	add.w	ip, r7, r4
 802c46e:	9c00      	ldr	r4, [sp, #0]
 802c470:	9302      	str	r3, [sp, #8]
 802c472:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802c476:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802c47a:	3204      	adds	r2, #4
 802c47c:	3104      	adds	r1, #4
 802c47e:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802c482:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802c486:	f04f 0800 	mov.w	r8, #0
 802c48a:	eddc 7a00 	vldr	s15, [ip]
 802c48e:	edd7 6a00 	vldr	s13, [r7]
 802c492:	edd6 3a00 	vldr	s7, [r6]
 802c496:	ed5e aa01 	vldr	s21, [lr, #-4]
 802c49a:	edd5 4a00 	vldr	s9, [r5]
 802c49e:	ed90 2a00 	vldr	s4, [r0]
 802c4a2:	ed12 7a01 	vldr	s14, [r2, #-4]
 802c4a6:	ed51 0a01 	vldr	s1, [r1, #-4]
 802c4aa:	ee77 8a82 	vadd.f32	s17, s15, s4
 802c4ae:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802c4b2:	ee76 1a87 	vadd.f32	s3, s13, s14
 802c4b6:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802c4ba:	ee31 6a84 	vadd.f32	s12, s3, s8
 802c4be:	ee33 5a28 	vadd.f32	s10, s6, s17
 802c4c2:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802c4c6:	ee75 6a06 	vadd.f32	s13, s10, s12
 802c4ca:	ee35 5a46 	vsub.f32	s10, s10, s12
 802c4ce:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802c4d2:	ed85 5a00 	vstr	s10, [r5]
 802c4d6:	ed96 1a01 	vldr	s2, [r6, #4]
 802c4da:	edd7 5a01 	vldr	s11, [r7, #4]
 802c4de:	ed92 aa00 	vldr	s20, [r2]
 802c4e2:	ed91 6a00 	vldr	s12, [r1]
 802c4e6:	ed9e 9a00 	vldr	s18, [lr]
 802c4ea:	ed95 5a01 	vldr	s10, [r5, #4]
 802c4ee:	eddc 6a01 	vldr	s13, [ip, #4]
 802c4f2:	edd0 9a01 	vldr	s19, [r0, #4]
 802c4f6:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802c4fa:	ee71 2a46 	vsub.f32	s5, s2, s12
 802c4fe:	ee75 3aca 	vsub.f32	s7, s11, s20
 802c502:	ee37 0a60 	vsub.f32	s0, s14, s1
 802c506:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802c50a:	ee37 7a20 	vadd.f32	s14, s14, s1
 802c50e:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802c512:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802c516:	ee79 3a05 	vadd.f32	s7, s18, s10
 802c51a:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802c51e:	ee39 5a45 	vsub.f32	s10, s18, s10
 802c522:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802c526:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802c52a:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802c52e:	ee31 6a06 	vadd.f32	s12, s2, s12
 802c532:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802c536:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802c53a:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802c53e:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802c542:	ee33 3a68 	vsub.f32	s6, s6, s17
 802c546:	ee36 0a88 	vadd.f32	s0, s13, s16
 802c54a:	ee75 8a86 	vadd.f32	s17, s11, s12
 802c54e:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802c552:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802c556:	ee75 6a62 	vsub.f32	s13, s10, s5
 802c55a:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802c55e:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802c562:	ee33 1a89 	vadd.f32	s2, s7, s18
 802c566:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802c56a:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802c56e:	ee75 4a22 	vadd.f32	s9, s10, s5
 802c572:	ee32 5a27 	vadd.f32	s10, s4, s15
 802c576:	ee72 7a67 	vsub.f32	s15, s4, s15
 802c57a:	ee33 8a06 	vadd.f32	s16, s6, s12
 802c57e:	ee75 2a87 	vadd.f32	s5, s11, s14
 802c582:	ee31 9a28 	vadd.f32	s18, s2, s17
 802c586:	ee33 6a46 	vsub.f32	s12, s6, s12
 802c58a:	ee74 0a61 	vsub.f32	s1, s8, s3
 802c58e:	ee33 2a80 	vadd.f32	s4, s7, s0
 802c592:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802c596:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802c59a:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802c59e:	ee31 1a68 	vsub.f32	s2, s2, s17
 802c5a2:	ee34 4a21 	vadd.f32	s8, s8, s3
 802c5a6:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802c5aa:	ee74 4a85 	vadd.f32	s9, s9, s10
 802c5ae:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802c5b2:	44d8      	add	r8, fp
 802c5b4:	45c1      	cmp	r9, r8
 802c5b6:	ed8e 9a00 	vstr	s18, [lr]
 802c5ba:	ed85 1a01 	vstr	s2, [r5, #4]
 802c5be:	449e      	add	lr, r3
 802c5c0:	ed8c 8a00 	vstr	s16, [ip]
 802c5c4:	441d      	add	r5, r3
 802c5c6:	ed80 6a00 	vstr	s12, [r0]
 802c5ca:	edcc 0a01 	vstr	s1, [ip, #4]
 802c5ce:	ed80 4a01 	vstr	s8, [r0, #4]
 802c5d2:	449c      	add	ip, r3
 802c5d4:	ed87 2a00 	vstr	s4, [r7]
 802c5d8:	4418      	add	r0, r3
 802c5da:	ed41 3a01 	vstr	s7, [r1, #-4]
 802c5de:	ed42 2a01 	vstr	s5, [r2, #-4]
 802c5e2:	ed86 7a00 	vstr	s14, [r6]
 802c5e6:	ed87 3a01 	vstr	s6, [r7, #4]
 802c5ea:	edc1 4a00 	vstr	s9, [r1]
 802c5ee:	441f      	add	r7, r3
 802c5f0:	edc2 5a00 	vstr	s11, [r2]
 802c5f4:	4419      	add	r1, r3
 802c5f6:	edc6 6a01 	vstr	s13, [r6, #4]
 802c5fa:	441a      	add	r2, r3
 802c5fc:	441e      	add	r6, r3
 802c5fe:	f63f af44 	bhi.w	802c48a <arm_radix8_butterfly_f32+0x66>
 802c602:	990c      	ldr	r1, [sp, #48]	; 0x30
 802c604:	2907      	cmp	r1, #7
 802c606:	4620      	mov	r0, r4
 802c608:	f240 81e9 	bls.w	802c9de <arm_radix8_butterfly_f32+0x5ba>
 802c60c:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802c610:	193e      	adds	r6, r7, r4
 802c612:	1935      	adds	r5, r6, r4
 802c614:	9c03      	ldr	r4, [sp, #12]
 802c616:	9000      	str	r0, [sp, #0]
 802c618:	4622      	mov	r2, r4
 802c61a:	3201      	adds	r2, #1
 802c61c:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802c620:	9900      	ldr	r1, [sp, #0]
 802c622:	1828      	adds	r0, r5, r0
 802c624:	eb00 0e01 	add.w	lr, r0, r1
 802c628:	990c      	ldr	r1, [sp, #48]	; 0x30
 802c62a:	440a      	add	r2, r1
 802c62c:	eb04 0c01 	add.w	ip, r4, r1
 802c630:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802c634:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802c638:	9a00      	ldr	r2, [sp, #0]
 802c63a:	940f      	str	r4, [sp, #60]	; 0x3c
 802c63c:	00ed      	lsls	r5, r5, #3
 802c63e:	9511      	str	r5, [sp, #68]	; 0x44
 802c640:	00d5      	lsls	r5, r2, #3
 802c642:	950d      	str	r5, [sp, #52]	; 0x34
 802c644:	9d01      	ldr	r5, [sp, #4]
 802c646:	3508      	adds	r5, #8
 802c648:	9516      	str	r5, [sp, #88]	; 0x58
 802c64a:	9d02      	ldr	r5, [sp, #8]
 802c64c:	3508      	adds	r5, #8
 802c64e:	0114      	lsls	r4, r2, #4
 802c650:	9517      	str	r5, [sp, #92]	; 0x5c
 802c652:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802c654:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802c656:	940e      	str	r4, [sp, #56]	; 0x38
 802c658:	00c0      	lsls	r0, r0, #3
 802c65a:	9010      	str	r0, [sp, #64]	; 0x40
 802c65c:	18aa      	adds	r2, r5, r2
 802c65e:	9207      	str	r2, [sp, #28]
 802c660:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802c662:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802c664:	18aa      	adds	r2, r5, r2
 802c666:	9208      	str	r2, [sp, #32]
 802c668:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802c66a:	18aa      	adds	r2, r5, r2
 802c66c:	9209      	str	r2, [sp, #36]	; 0x24
 802c66e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802c672:	f10e 0204 	add.w	r2, lr, #4
 802c676:	920a      	str	r2, [sp, #40]	; 0x28
 802c678:	00c9      	lsls	r1, r1, #3
 802c67a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802c67c:	310c      	adds	r1, #12
 802c67e:	00f6      	lsls	r6, r6, #3
 802c680:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802c684:	9114      	str	r1, [sp, #80]	; 0x50
 802c686:	18a9      	adds	r1, r5, r2
 802c688:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802c68a:	9612      	str	r6, [sp, #72]	; 0x48
 802c68c:	00ff      	lsls	r7, r7, #3
 802c68e:	19ae      	adds	r6, r5, r6
 802c690:	3008      	adds	r0, #8
 802c692:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802c696:	9606      	str	r6, [sp, #24]
 802c698:	9019      	str	r0, [sp, #100]	; 0x64
 802c69a:	18aa      	adds	r2, r5, r2
 802c69c:	0164      	lsls	r4, r4, #5
 802c69e:	19ee      	adds	r6, r5, r7
 802c6a0:	f10c 000c 	add.w	r0, ip, #12
 802c6a4:	9713      	str	r7, [sp, #76]	; 0x4c
 802c6a6:	9604      	str	r6, [sp, #16]
 802c6a8:	9015      	str	r0, [sp, #84]	; 0x54
 802c6aa:	9103      	str	r1, [sp, #12]
 802c6ac:	9205      	str	r2, [sp, #20]
 802c6ae:	f104 0208 	add.w	r2, r4, #8
 802c6b2:	9218      	str	r2, [sp, #96]	; 0x60
 802c6b4:	f04f 0801 	mov.w	r8, #1
 802c6b8:	2200      	movs	r2, #0
 802c6ba:	f102 0108 	add.w	r1, r2, #8
 802c6be:	460f      	mov	r7, r1
 802c6c0:	910b      	str	r1, [sp, #44]	; 0x2c
 802c6c2:	9918      	ldr	r1, [sp, #96]	; 0x60
 802c6c4:	188e      	adds	r6, r1, r2
 802c6c6:	9916      	ldr	r1, [sp, #88]	; 0x58
 802c6c8:	188d      	adds	r5, r1, r2
 802c6ca:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802c6cc:	188c      	adds	r4, r1, r2
 802c6ce:	9919      	ldr	r1, [sp, #100]	; 0x64
 802c6d0:	1888      	adds	r0, r1, r2
 802c6d2:	9914      	ldr	r1, [sp, #80]	; 0x50
 802c6d4:	eb01 0c02 	add.w	ip, r1, r2
 802c6d8:	9915      	ldr	r1, [sp, #84]	; 0x54
 802c6da:	440a      	add	r2, r1
 802c6dc:	9903      	ldr	r1, [sp, #12]
 802c6de:	edd1 fa00 	vldr	s31, [r1]
 802c6e2:	9905      	ldr	r1, [sp, #20]
 802c6e4:	ed91 fa00 	vldr	s30, [r1]
 802c6e8:	9904      	ldr	r1, [sp, #16]
 802c6ea:	edd1 ea00 	vldr	s29, [r1]
 802c6ee:	9906      	ldr	r1, [sp, #24]
 802c6f0:	ed91 ea00 	vldr	s28, [r1]
 802c6f4:	9909      	ldr	r1, [sp, #36]	; 0x24
 802c6f6:	edd1 da00 	vldr	s27, [r1]
 802c6fa:	9908      	ldr	r1, [sp, #32]
 802c6fc:	ed91 da00 	vldr	s26, [r1]
 802c700:	9907      	ldr	r1, [sp, #28]
 802c702:	edd1 ca00 	vldr	s25, [r1]
 802c706:	9903      	ldr	r1, [sp, #12]
 802c708:	ed91 ca01 	vldr	s24, [r1, #4]
 802c70c:	9905      	ldr	r1, [sp, #20]
 802c70e:	edd1 ba01 	vldr	s23, [r1, #4]
 802c712:	9904      	ldr	r1, [sp, #16]
 802c714:	edd1 aa01 	vldr	s21, [r1, #4]
 802c718:	9906      	ldr	r1, [sp, #24]
 802c71a:	ed91 aa01 	vldr	s20, [r1, #4]
 802c71e:	9909      	ldr	r1, [sp, #36]	; 0x24
 802c720:	edd1 7a01 	vldr	s15, [r1, #4]
 802c724:	9908      	ldr	r1, [sp, #32]
 802c726:	edcd 7a00 	vstr	s15, [sp]
 802c72a:	edd1 7a01 	vldr	s15, [r1, #4]
 802c72e:	9907      	ldr	r1, [sp, #28]
 802c730:	edcd 7a01 	vstr	s15, [sp, #4]
 802c734:	edd1 7a01 	vldr	s15, [r1, #4]
 802c738:	eb0a 0e07 	add.w	lr, sl, r7
 802c73c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802c73e:	edcd 7a02 	vstr	s15, [sp, #8]
 802c742:	eb0c 010a 	add.w	r1, ip, sl
 802c746:	4456      	add	r6, sl
 802c748:	4455      	add	r5, sl
 802c74a:	4454      	add	r4, sl
 802c74c:	4450      	add	r0, sl
 802c74e:	4452      	add	r2, sl
 802c750:	46c4      	mov	ip, r8
 802c752:	e001      	b.n	802c758 <arm_radix8_butterfly_f32+0x334>
 802c754:	3f3504f3 	.word	0x3f3504f3
 802c758:	ed96 5a00 	vldr	s10, [r6]
 802c75c:	ed52 9a01 	vldr	s19, [r2, #-4]
 802c760:	ed11 6a01 	vldr	s12, [r1, #-4]
 802c764:	edd0 7a00 	vldr	s15, [r0]
 802c768:	ed17 7a01 	vldr	s14, [r7, #-4]
 802c76c:	edde 3a00 	vldr	s7, [lr]
 802c770:	ed94 3a00 	vldr	s6, [r4]
 802c774:	ed95 2a00 	vldr	s4, [r5]
 802c778:	ed9e 0a01 	vldr	s0, [lr, #4]
 802c77c:	ee33 8a85 	vadd.f32	s16, s7, s10
 802c780:	ee32 1a06 	vadd.f32	s2, s4, s12
 802c784:	ee33 4a29 	vadd.f32	s8, s6, s19
 802c788:	ee77 4a87 	vadd.f32	s9, s15, s14
 802c78c:	ee78 1a04 	vadd.f32	s3, s16, s8
 802c790:	ee71 6a24 	vadd.f32	s13, s2, s9
 802c794:	ee32 2a46 	vsub.f32	s4, s4, s12
 802c798:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802c79c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802c7a0:	ed8e 6a00 	vstr	s12, [lr]
 802c7a4:	edd0 8a01 	vldr	s17, [r0, #4]
 802c7a8:	ed95 9a01 	vldr	s18, [r5, #4]
 802c7ac:	edd1 2a00 	vldr	s5, [r1]
 802c7b0:	ed97 7a00 	vldr	s14, [r7]
 802c7b4:	edd4 0a01 	vldr	s1, [r4, #4]
 802c7b8:	ed96 6a01 	vldr	s12, [r6, #4]
 802c7bc:	edd2 5a00 	vldr	s11, [r2]
 802c7c0:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802c7c4:	ee33 3a69 	vsub.f32	s6, s6, s19
 802c7c8:	ee39 5a62 	vsub.f32	s10, s18, s5
 802c7cc:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802c7d0:	ee38 4a44 	vsub.f32	s8, s16, s8
 802c7d4:	ee38 7a87 	vadd.f32	s14, s17, s14
 802c7d8:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802c7dc:	ee79 2a22 	vadd.f32	s5, s18, s5
 802c7e0:	ee75 8a69 	vsub.f32	s17, s10, s19
 802c7e4:	ee32 9a27 	vadd.f32	s18, s4, s15
 802c7e8:	ee35 5a29 	vadd.f32	s10, s10, s19
 802c7ec:	ee72 7a67 	vsub.f32	s15, s4, s15
 802c7f0:	ee30 2a06 	vadd.f32	s4, s0, s12
 802c7f4:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802c7f8:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802c7fc:	ee32 9a08 	vadd.f32	s18, s4, s16
 802c800:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802c804:	ee32 2a48 	vsub.f32	s4, s4, s16
 802c808:	ee71 4a64 	vsub.f32	s9, s2, s9
 802c80c:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802c810:	ee32 1a87 	vadd.f32	s2, s5, s14
 802c814:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802c818:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802c81c:	ee30 6a46 	vsub.f32	s12, s0, s12
 802c820:	ee73 0a29 	vadd.f32	s1, s6, s19
 802c824:	ee36 0a28 	vadd.f32	s0, s12, s17
 802c828:	ee33 3a69 	vsub.f32	s6, s6, s19
 802c82c:	ee32 7a64 	vsub.f32	s14, s4, s9
 802c830:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802c834:	ee36 6a68 	vsub.f32	s12, s12, s17
 802c838:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802c83c:	ee75 8a85 	vadd.f32	s17, s11, s10
 802c840:	ee74 3a22 	vadd.f32	s7, s8, s5
 802c844:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802c848:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802c84c:	ee79 1a41 	vsub.f32	s3, s18, s2
 802c850:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802c854:	ee76 5a43 	vsub.f32	s11, s12, s6
 802c858:	ee74 2a62 	vsub.f32	s5, s8, s5
 802c85c:	ee72 4a24 	vadd.f32	s9, s4, s9
 802c860:	ee30 4a60 	vsub.f32	s8, s0, s1
 802c864:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802c868:	ee30 0a20 	vadd.f32	s0, s0, s1
 802c86c:	ee77 9a85 	vadd.f32	s19, s15, s10
 802c870:	ee36 6a03 	vadd.f32	s12, s12, s6
 802c874:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802c878:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802c87c:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802c880:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802c884:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802c888:	ee39 1a01 	vadd.f32	s2, s18, s2
 802c88c:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802c890:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802c894:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802c898:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802c89c:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802c8a0:	ee35 3a03 	vadd.f32	s6, s10, s6
 802c8a4:	ee72 6a66 	vsub.f32	s13, s4, s13
 802c8a8:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802c8ac:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802c8b0:	ed9d 4a02 	vldr	s8, [sp, #8]
 802c8b4:	ed8e 1a01 	vstr	s2, [lr, #4]
 802c8b8:	ee77 3a63 	vsub.f32	s7, s14, s7
 802c8bc:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802c8c0:	ed9d 7a01 	vldr	s14, [sp, #4]
 802c8c4:	ed86 3a00 	vstr	s6, [r6]
 802c8c8:	ee30 9a89 	vadd.f32	s18, s1, s18
 802c8cc:	ee32 2a05 	vadd.f32	s4, s4, s10
 802c8d0:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802c8d4:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802c8d8:	ee67 2a22 	vmul.f32	s5, s14, s5
 802c8dc:	ee64 1a00 	vmul.f32	s3, s8, s0
 802c8e0:	ee27 7a24 	vmul.f32	s14, s14, s9
 802c8e4:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802c8e8:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802c8ec:	ee64 8a28 	vmul.f32	s17, s8, s17
 802c8f0:	ed9d 4a00 	vldr	s8, [sp]
 802c8f4:	edc6 6a01 	vstr	s13, [r6, #4]
 802c8f8:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802c8fc:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802c900:	ee64 9a29 	vmul.f32	s19, s8, s19
 802c904:	ee24 4a25 	vmul.f32	s8, s8, s11
 802c908:	ee30 7a87 	vadd.f32	s14, s1, s14
 802c90c:	ee74 4a84 	vadd.f32	s9, s9, s8
 802c910:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802c914:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802c918:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802c91c:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802c920:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802c924:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802c928:	ee75 1a21 	vadd.f32	s3, s10, s3
 802c92c:	ee30 0a68 	vsub.f32	s0, s0, s17
 802c930:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802c934:	ee70 0a84 	vadd.f32	s1, s1, s8
 802c938:	ee36 6a67 	vsub.f32	s12, s12, s15
 802c93c:	44dc      	add	ip, fp
 802c93e:	45e1      	cmp	r9, ip
 802c940:	ed84 9a00 	vstr	s18, [r4]
 802c944:	edc4 3a01 	vstr	s7, [r4, #4]
 802c948:	449e      	add	lr, r3
 802c94a:	ed02 7a01 	vstr	s14, [r2, #-4]
 802c94e:	edc2 2a00 	vstr	s5, [r2]
 802c952:	441e      	add	r6, r3
 802c954:	ed85 2a00 	vstr	s4, [r5]
 802c958:	ed85 8a01 	vstr	s16, [r5, #4]
 802c95c:	441c      	add	r4, r3
 802c95e:	ed47 1a01 	vstr	s3, [r7, #-4]
 802c962:	ed87 0a00 	vstr	s0, [r7]
 802c966:	441a      	add	r2, r3
 802c968:	ed41 4a01 	vstr	s9, [r1, #-4]
 802c96c:	edc1 9a00 	vstr	s19, [r1]
 802c970:	441d      	add	r5, r3
 802c972:	edc0 0a00 	vstr	s1, [r0]
 802c976:	441f      	add	r7, r3
 802c978:	ed80 6a01 	vstr	s12, [r0, #4]
 802c97c:	4419      	add	r1, r3
 802c97e:	4418      	add	r0, r3
 802c980:	f63f aeea 	bhi.w	802c758 <arm_radix8_butterfly_f32+0x334>
 802c984:	9a03      	ldr	r2, [sp, #12]
 802c986:	990d      	ldr	r1, [sp, #52]	; 0x34
 802c988:	440a      	add	r2, r1
 802c98a:	9203      	str	r2, [sp, #12]
 802c98c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802c98e:	9a05      	ldr	r2, [sp, #20]
 802c990:	440a      	add	r2, r1
 802c992:	9205      	str	r2, [sp, #20]
 802c994:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802c996:	9a04      	ldr	r2, [sp, #16]
 802c998:	440a      	add	r2, r1
 802c99a:	9204      	str	r2, [sp, #16]
 802c99c:	9912      	ldr	r1, [sp, #72]	; 0x48
 802c99e:	9a06      	ldr	r2, [sp, #24]
 802c9a0:	440a      	add	r2, r1
 802c9a2:	9206      	str	r2, [sp, #24]
 802c9a4:	9911      	ldr	r1, [sp, #68]	; 0x44
 802c9a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802c9a8:	440a      	add	r2, r1
 802c9aa:	9209      	str	r2, [sp, #36]	; 0x24
 802c9ac:	9910      	ldr	r1, [sp, #64]	; 0x40
 802c9ae:	9a08      	ldr	r2, [sp, #32]
 802c9b0:	440a      	add	r2, r1
 802c9b2:	9208      	str	r2, [sp, #32]
 802c9b4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802c9b6:	9a07      	ldr	r2, [sp, #28]
 802c9b8:	440a      	add	r2, r1
 802c9ba:	9207      	str	r2, [sp, #28]
 802c9bc:	990c      	ldr	r1, [sp, #48]	; 0x30
 802c9be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802c9c0:	f108 0801 	add.w	r8, r8, #1
 802c9c4:	3208      	adds	r2, #8
 802c9c6:	4588      	cmp	r8, r1
 802c9c8:	920a      	str	r2, [sp, #40]	; 0x28
 802c9ca:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802c9cc:	f47f ae75 	bne.w	802c6ba <arm_radix8_butterfly_f32+0x296>
 802c9d0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802c9d4:	9300      	str	r3, [sp, #0]
 802c9d6:	46c3      	mov	fp, r8
 802c9d8:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802c9dc:	e532      	b.n	802c444 <arm_radix8_butterfly_f32+0x20>
 802c9de:	b01d      	add	sp, #116	; 0x74
 802c9e0:	ecbd 8b10 	vpop	{d8-d15}
 802c9e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802c9e8 <__aeabi_atexit>:
 802c9e8:	460b      	mov	r3, r1
 802c9ea:	4601      	mov	r1, r0
 802c9ec:	4618      	mov	r0, r3
 802c9ee:	f000 bfc7 	b.w	802d980 <__cxa_atexit>

0802c9f2 <_ZdlPvj>:
 802c9f2:	f000 b812 	b.w	802ca1a <_ZdlPv>

0802c9f6 <__cxa_guard_acquire>:
 802c9f6:	6803      	ldr	r3, [r0, #0]
 802c9f8:	07db      	lsls	r3, r3, #31
 802c9fa:	d406      	bmi.n	802ca0a <__cxa_guard_acquire+0x14>
 802c9fc:	7843      	ldrb	r3, [r0, #1]
 802c9fe:	b103      	cbz	r3, 802ca02 <__cxa_guard_acquire+0xc>
 802ca00:	deff      	udf	#255	; 0xff
 802ca02:	2301      	movs	r3, #1
 802ca04:	7043      	strb	r3, [r0, #1]
 802ca06:	4618      	mov	r0, r3
 802ca08:	4770      	bx	lr
 802ca0a:	2000      	movs	r0, #0
 802ca0c:	4770      	bx	lr

0802ca0e <__cxa_guard_release>:
 802ca0e:	2301      	movs	r3, #1
 802ca10:	6003      	str	r3, [r0, #0]
 802ca12:	4770      	bx	lr

0802ca14 <__cxa_pure_virtual>:
 802ca14:	b508      	push	{r3, lr}
 802ca16:	f000 f80f 	bl	802ca38 <_ZSt9terminatev>

0802ca1a <_ZdlPv>:
 802ca1a:	f000 befd 	b.w	802d818 <free>

0802ca1e <_ZN10__cxxabiv111__terminateEPFvvE>:
 802ca1e:	b508      	push	{r3, lr}
 802ca20:	4780      	blx	r0
 802ca22:	f000 fec5 	bl	802d7b0 <abort>
	...

0802ca28 <_ZSt13get_terminatev>:
 802ca28:	4b02      	ldr	r3, [pc, #8]	; (802ca34 <_ZSt13get_terminatev+0xc>)
 802ca2a:	6818      	ldr	r0, [r3, #0]
 802ca2c:	f3bf 8f5b 	dmb	ish
 802ca30:	4770      	bx	lr
 802ca32:	bf00      	nop
 802ca34:	20000108 	.word	0x20000108

0802ca38 <_ZSt9terminatev>:
 802ca38:	b508      	push	{r3, lr}
 802ca3a:	f7ff fff5 	bl	802ca28 <_ZSt13get_terminatev>
 802ca3e:	f7ff ffee 	bl	802ca1e <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802ca44 <sqrtf>:
 802ca44:	b508      	push	{r3, lr}
 802ca46:	ed2d 8b02 	vpush	{d8}
 802ca4a:	eeb0 8a40 	vmov.f32	s16, s0
 802ca4e:	f000 f97d 	bl	802cd4c <__ieee754_sqrtf>
 802ca52:	eeb4 8a48 	vcmp.f32	s16, s16
 802ca56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ca5a:	d60c      	bvs.n	802ca76 <sqrtf+0x32>
 802ca5c:	eddf 8a07 	vldr	s17, [pc, #28]	; 802ca7c <sqrtf+0x38>
 802ca60:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802ca64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ca68:	d505      	bpl.n	802ca76 <sqrtf+0x32>
 802ca6a:	f001 f9a7 	bl	802ddbc <__errno>
 802ca6e:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802ca72:	2321      	movs	r3, #33	; 0x21
 802ca74:	6003      	str	r3, [r0, #0]
 802ca76:	ecbd 8b02 	vpop	{d8}
 802ca7a:	bd08      	pop	{r3, pc}
 802ca7c:	00000000 	.word	0x00000000

0802ca80 <atanf>:
 802ca80:	b538      	push	{r3, r4, r5, lr}
 802ca82:	ee10 5a10 	vmov	r5, s0
 802ca86:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 802ca8a:	f1b4 4fa1 	cmp.w	r4, #1350565888	; 0x50800000
 802ca8e:	eef0 7a40 	vmov.f32	s15, s0
 802ca92:	db10      	blt.n	802cab6 <atanf+0x36>
 802ca94:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 802ca98:	dd04      	ble.n	802caa4 <atanf+0x24>
 802ca9a:	ee70 7a00 	vadd.f32	s15, s0, s0
 802ca9e:	eeb0 0a67 	vmov.f32	s0, s15
 802caa2:	bd38      	pop	{r3, r4, r5, pc}
 802caa4:	eddf 7a4d 	vldr	s15, [pc, #308]	; 802cbdc <atanf+0x15c>
 802caa8:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 802cbe0 <atanf+0x160>
 802caac:	2d00      	cmp	r5, #0
 802caae:	bfd8      	it	le
 802cab0:	eef0 7a47 	vmovle.f32	s15, s14
 802cab4:	e7f3      	b.n	802ca9e <atanf+0x1e>
 802cab6:	4b4b      	ldr	r3, [pc, #300]	; (802cbe4 <atanf+0x164>)
 802cab8:	429c      	cmp	r4, r3
 802caba:	dc10      	bgt.n	802cade <atanf+0x5e>
 802cabc:	f1b4 5f44 	cmp.w	r4, #822083584	; 0x31000000
 802cac0:	da0a      	bge.n	802cad8 <atanf+0x58>
 802cac2:	ed9f 7a49 	vldr	s14, [pc, #292]	; 802cbe8 <atanf+0x168>
 802cac6:	ee30 7a07 	vadd.f32	s14, s0, s14
 802caca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802cace:	eeb4 7ae6 	vcmpe.f32	s14, s13
 802cad2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cad6:	dce2      	bgt.n	802ca9e <atanf+0x1e>
 802cad8:	f04f 33ff 	mov.w	r3, #4294967295
 802cadc:	e013      	b.n	802cb06 <atanf+0x86>
 802cade:	f000 f8e7 	bl	802ccb0 <fabsf>
 802cae2:	4b42      	ldr	r3, [pc, #264]	; (802cbec <atanf+0x16c>)
 802cae4:	429c      	cmp	r4, r3
 802cae6:	dc4f      	bgt.n	802cb88 <atanf+0x108>
 802cae8:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 802caec:	429c      	cmp	r4, r3
 802caee:	dc41      	bgt.n	802cb74 <atanf+0xf4>
 802caf0:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 802caf4:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802caf8:	eea0 7a27 	vfma.f32	s14, s0, s15
 802cafc:	2300      	movs	r3, #0
 802cafe:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cb02:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cb06:	1c5a      	adds	r2, r3, #1
 802cb08:	ee27 6aa7 	vmul.f32	s12, s15, s15
 802cb0c:	ed9f 7a38 	vldr	s14, [pc, #224]	; 802cbf0 <atanf+0x170>
 802cb10:	eddf 5a38 	vldr	s11, [pc, #224]	; 802cbf4 <atanf+0x174>
 802cb14:	ed9f 5a38 	vldr	s10, [pc, #224]	; 802cbf8 <atanf+0x178>
 802cb18:	ee66 6a06 	vmul.f32	s13, s12, s12
 802cb1c:	eee6 5a87 	vfma.f32	s11, s13, s14
 802cb20:	ed9f 7a36 	vldr	s14, [pc, #216]	; 802cbfc <atanf+0x17c>
 802cb24:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802cb28:	eddf 5a35 	vldr	s11, [pc, #212]	; 802cc00 <atanf+0x180>
 802cb2c:	eee7 5a26 	vfma.f32	s11, s14, s13
 802cb30:	ed9f 7a34 	vldr	s14, [pc, #208]	; 802cc04 <atanf+0x184>
 802cb34:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802cb38:	eddf 5a33 	vldr	s11, [pc, #204]	; 802cc08 <atanf+0x188>
 802cb3c:	eee7 5a26 	vfma.f32	s11, s14, s13
 802cb40:	ed9f 7a32 	vldr	s14, [pc, #200]	; 802cc0c <atanf+0x18c>
 802cb44:	eea6 5a87 	vfma.f32	s10, s13, s14
 802cb48:	ed9f 7a31 	vldr	s14, [pc, #196]	; 802cc10 <atanf+0x190>
 802cb4c:	eea5 7a26 	vfma.f32	s14, s10, s13
 802cb50:	ed9f 5a30 	vldr	s10, [pc, #192]	; 802cc14 <atanf+0x194>
 802cb54:	eea7 5a26 	vfma.f32	s10, s14, s13
 802cb58:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 802cc18 <atanf+0x198>
 802cb5c:	eea5 7a26 	vfma.f32	s14, s10, s13
 802cb60:	ee27 7a26 	vmul.f32	s14, s14, s13
 802cb64:	eea5 7a86 	vfma.f32	s14, s11, s12
 802cb68:	ee27 7a87 	vmul.f32	s14, s15, s14
 802cb6c:	d121      	bne.n	802cbb2 <atanf+0x132>
 802cb6e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802cb72:	e794      	b.n	802ca9e <atanf+0x1e>
 802cb74:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802cb78:	ee30 7a67 	vsub.f32	s14, s0, s15
 802cb7c:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cb80:	2301      	movs	r3, #1
 802cb82:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cb86:	e7be      	b.n	802cb06 <atanf+0x86>
 802cb88:	4b24      	ldr	r3, [pc, #144]	; (802cc1c <atanf+0x19c>)
 802cb8a:	429c      	cmp	r4, r3
 802cb8c:	dc0b      	bgt.n	802cba6 <atanf+0x126>
 802cb8e:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 802cb92:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802cb96:	eea0 7a27 	vfma.f32	s14, s0, s15
 802cb9a:	2302      	movs	r3, #2
 802cb9c:	ee70 6a67 	vsub.f32	s13, s0, s15
 802cba0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 802cba4:	e7af      	b.n	802cb06 <atanf+0x86>
 802cba6:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802cbaa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cbae:	2303      	movs	r3, #3
 802cbb0:	e7a9      	b.n	802cb06 <atanf+0x86>
 802cbb2:	4a1b      	ldr	r2, [pc, #108]	; (802cc20 <atanf+0x1a0>)
 802cbb4:	491b      	ldr	r1, [pc, #108]	; (802cc24 <atanf+0x1a4>)
 802cbb6:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802cbba:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802cbbe:	edd3 6a00 	vldr	s13, [r3]
 802cbc2:	ee37 7a66 	vsub.f32	s14, s14, s13
 802cbc6:	2d00      	cmp	r5, #0
 802cbc8:	ee37 7a67 	vsub.f32	s14, s14, s15
 802cbcc:	edd2 7a00 	vldr	s15, [r2]
 802cbd0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802cbd4:	bfb8      	it	lt
 802cbd6:	eef1 7a67 	vneglt.f32	s15, s15
 802cbda:	e760      	b.n	802ca9e <atanf+0x1e>
 802cbdc:	3fc90fdb 	.word	0x3fc90fdb
 802cbe0:	bfc90fdb 	.word	0xbfc90fdb
 802cbe4:	3edfffff 	.word	0x3edfffff
 802cbe8:	7149f2ca 	.word	0x7149f2ca
 802cbec:	3f97ffff 	.word	0x3f97ffff
 802cbf0:	3c8569d7 	.word	0x3c8569d7
 802cbf4:	3d4bda59 	.word	0x3d4bda59
 802cbf8:	bd6ef16b 	.word	0xbd6ef16b
 802cbfc:	3d886b35 	.word	0x3d886b35
 802cc00:	3dba2e6e 	.word	0x3dba2e6e
 802cc04:	3e124925 	.word	0x3e124925
 802cc08:	3eaaaaab 	.word	0x3eaaaaab
 802cc0c:	bd15a221 	.word	0xbd15a221
 802cc10:	bd9d8795 	.word	0xbd9d8795
 802cc14:	bde38e38 	.word	0xbde38e38
 802cc18:	be4ccccd 	.word	0xbe4ccccd
 802cc1c:	401bffff 	.word	0x401bffff
 802cc20:	08045664 	.word	0x08045664
 802cc24:	08045674 	.word	0x08045674

0802cc28 <cosf>:
 802cc28:	ee10 3a10 	vmov	r3, s0
 802cc2c:	b507      	push	{r0, r1, r2, lr}
 802cc2e:	4a1e      	ldr	r2, [pc, #120]	; (802cca8 <cosf+0x80>)
 802cc30:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802cc34:	4293      	cmp	r3, r2
 802cc36:	dc06      	bgt.n	802cc46 <cosf+0x1e>
 802cc38:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802ccac <cosf+0x84>
 802cc3c:	b003      	add	sp, #12
 802cc3e:	f85d eb04 	ldr.w	lr, [sp], #4
 802cc42:	f000 b90b 	b.w	802ce5c <__kernel_cosf>
 802cc46:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802cc4a:	db04      	blt.n	802cc56 <cosf+0x2e>
 802cc4c:	ee30 0a40 	vsub.f32	s0, s0, s0
 802cc50:	b003      	add	sp, #12
 802cc52:	f85d fb04 	ldr.w	pc, [sp], #4
 802cc56:	4668      	mov	r0, sp
 802cc58:	f000 f9a6 	bl	802cfa8 <__ieee754_rem_pio2f>
 802cc5c:	f000 0003 	and.w	r0, r0, #3
 802cc60:	2801      	cmp	r0, #1
 802cc62:	d009      	beq.n	802cc78 <cosf+0x50>
 802cc64:	2802      	cmp	r0, #2
 802cc66:	d010      	beq.n	802cc8a <cosf+0x62>
 802cc68:	b9b0      	cbnz	r0, 802cc98 <cosf+0x70>
 802cc6a:	eddd 0a01 	vldr	s1, [sp, #4]
 802cc6e:	ed9d 0a00 	vldr	s0, [sp]
 802cc72:	f000 f8f3 	bl	802ce5c <__kernel_cosf>
 802cc76:	e7eb      	b.n	802cc50 <cosf+0x28>
 802cc78:	eddd 0a01 	vldr	s1, [sp, #4]
 802cc7c:	ed9d 0a00 	vldr	s0, [sp]
 802cc80:	f000 f94a 	bl	802cf18 <__kernel_sinf>
 802cc84:	eeb1 0a40 	vneg.f32	s0, s0
 802cc88:	e7e2      	b.n	802cc50 <cosf+0x28>
 802cc8a:	eddd 0a01 	vldr	s1, [sp, #4]
 802cc8e:	ed9d 0a00 	vldr	s0, [sp]
 802cc92:	f000 f8e3 	bl	802ce5c <__kernel_cosf>
 802cc96:	e7f5      	b.n	802cc84 <cosf+0x5c>
 802cc98:	eddd 0a01 	vldr	s1, [sp, #4]
 802cc9c:	ed9d 0a00 	vldr	s0, [sp]
 802cca0:	2001      	movs	r0, #1
 802cca2:	f000 f939 	bl	802cf18 <__kernel_sinf>
 802cca6:	e7d3      	b.n	802cc50 <cosf+0x28>
 802cca8:	3f490fd8 	.word	0x3f490fd8
 802ccac:	00000000 	.word	0x00000000

0802ccb0 <fabsf>:
 802ccb0:	ee10 3a10 	vmov	r3, s0
 802ccb4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802ccb8:	ee00 3a10 	vmov	s0, r3
 802ccbc:	4770      	bx	lr
	...

0802ccc0 <sinf>:
 802ccc0:	ee10 3a10 	vmov	r3, s0
 802ccc4:	b507      	push	{r0, r1, r2, lr}
 802ccc6:	4a1f      	ldr	r2, [pc, #124]	; (802cd44 <sinf+0x84>)
 802ccc8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802cccc:	4293      	cmp	r3, r2
 802ccce:	dc07      	bgt.n	802cce0 <sinf+0x20>
 802ccd0:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802cd48 <sinf+0x88>
 802ccd4:	2000      	movs	r0, #0
 802ccd6:	b003      	add	sp, #12
 802ccd8:	f85d eb04 	ldr.w	lr, [sp], #4
 802ccdc:	f000 b91c 	b.w	802cf18 <__kernel_sinf>
 802cce0:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802cce4:	db04      	blt.n	802ccf0 <sinf+0x30>
 802cce6:	ee30 0a40 	vsub.f32	s0, s0, s0
 802ccea:	b003      	add	sp, #12
 802ccec:	f85d fb04 	ldr.w	pc, [sp], #4
 802ccf0:	4668      	mov	r0, sp
 802ccf2:	f000 f959 	bl	802cfa8 <__ieee754_rem_pio2f>
 802ccf6:	f000 0003 	and.w	r0, r0, #3
 802ccfa:	2801      	cmp	r0, #1
 802ccfc:	d00a      	beq.n	802cd14 <sinf+0x54>
 802ccfe:	2802      	cmp	r0, #2
 802cd00:	d00f      	beq.n	802cd22 <sinf+0x62>
 802cd02:	b9c0      	cbnz	r0, 802cd36 <sinf+0x76>
 802cd04:	eddd 0a01 	vldr	s1, [sp, #4]
 802cd08:	ed9d 0a00 	vldr	s0, [sp]
 802cd0c:	2001      	movs	r0, #1
 802cd0e:	f000 f903 	bl	802cf18 <__kernel_sinf>
 802cd12:	e7ea      	b.n	802ccea <sinf+0x2a>
 802cd14:	eddd 0a01 	vldr	s1, [sp, #4]
 802cd18:	ed9d 0a00 	vldr	s0, [sp]
 802cd1c:	f000 f89e 	bl	802ce5c <__kernel_cosf>
 802cd20:	e7e3      	b.n	802ccea <sinf+0x2a>
 802cd22:	eddd 0a01 	vldr	s1, [sp, #4]
 802cd26:	ed9d 0a00 	vldr	s0, [sp]
 802cd2a:	2001      	movs	r0, #1
 802cd2c:	f000 f8f4 	bl	802cf18 <__kernel_sinf>
 802cd30:	eeb1 0a40 	vneg.f32	s0, s0
 802cd34:	e7d9      	b.n	802ccea <sinf+0x2a>
 802cd36:	eddd 0a01 	vldr	s1, [sp, #4]
 802cd3a:	ed9d 0a00 	vldr	s0, [sp]
 802cd3e:	f000 f88d 	bl	802ce5c <__kernel_cosf>
 802cd42:	e7f5      	b.n	802cd30 <sinf+0x70>
 802cd44:	3f490fd8 	.word	0x3f490fd8
 802cd48:	00000000 	.word	0x00000000

0802cd4c <__ieee754_sqrtf>:
 802cd4c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802cd50:	4770      	bx	lr
	...

0802cd54 <ceilf>:
 802cd54:	ee10 3a10 	vmov	r3, s0
 802cd58:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802cd5c:	3a7f      	subs	r2, #127	; 0x7f
 802cd5e:	2a16      	cmp	r2, #22
 802cd60:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802cd64:	dc2a      	bgt.n	802cdbc <ceilf+0x68>
 802cd66:	2a00      	cmp	r2, #0
 802cd68:	da11      	bge.n	802cd8e <ceilf+0x3a>
 802cd6a:	eddf 7a19 	vldr	s15, [pc, #100]	; 802cdd0 <ceilf+0x7c>
 802cd6e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cd72:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cd76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cd7a:	dd05      	ble.n	802cd88 <ceilf+0x34>
 802cd7c:	2b00      	cmp	r3, #0
 802cd7e:	db23      	blt.n	802cdc8 <ceilf+0x74>
 802cd80:	2900      	cmp	r1, #0
 802cd82:	bf18      	it	ne
 802cd84:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802cd88:	ee00 3a10 	vmov	s0, r3
 802cd8c:	4770      	bx	lr
 802cd8e:	4911      	ldr	r1, [pc, #68]	; (802cdd4 <ceilf+0x80>)
 802cd90:	4111      	asrs	r1, r2
 802cd92:	420b      	tst	r3, r1
 802cd94:	d0fa      	beq.n	802cd8c <ceilf+0x38>
 802cd96:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802cdd0 <ceilf+0x7c>
 802cd9a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cd9e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cda2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cda6:	ddef      	ble.n	802cd88 <ceilf+0x34>
 802cda8:	2b00      	cmp	r3, #0
 802cdaa:	bfc2      	ittt	gt
 802cdac:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802cdb0:	fa40 f202 	asrgt.w	r2, r0, r2
 802cdb4:	189b      	addgt	r3, r3, r2
 802cdb6:	ea23 0301 	bic.w	r3, r3, r1
 802cdba:	e7e5      	b.n	802cd88 <ceilf+0x34>
 802cdbc:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802cdc0:	d3e4      	bcc.n	802cd8c <ceilf+0x38>
 802cdc2:	ee30 0a00 	vadd.f32	s0, s0, s0
 802cdc6:	4770      	bx	lr
 802cdc8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802cdcc:	e7dc      	b.n	802cd88 <ceilf+0x34>
 802cdce:	bf00      	nop
 802cdd0:	7149f2ca 	.word	0x7149f2ca
 802cdd4:	007fffff 	.word	0x007fffff

0802cdd8 <floorf>:
 802cdd8:	ee10 3a10 	vmov	r3, s0
 802cddc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802cde0:	3a7f      	subs	r2, #127	; 0x7f
 802cde2:	2a16      	cmp	r2, #22
 802cde4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802cde8:	dc2a      	bgt.n	802ce40 <floorf+0x68>
 802cdea:	2a00      	cmp	r2, #0
 802cdec:	da11      	bge.n	802ce12 <floorf+0x3a>
 802cdee:	eddf 7a18 	vldr	s15, [pc, #96]	; 802ce50 <floorf+0x78>
 802cdf2:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cdf6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cdfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cdfe:	dd05      	ble.n	802ce0c <floorf+0x34>
 802ce00:	2b00      	cmp	r3, #0
 802ce02:	da23      	bge.n	802ce4c <floorf+0x74>
 802ce04:	4a13      	ldr	r2, [pc, #76]	; (802ce54 <floorf+0x7c>)
 802ce06:	2900      	cmp	r1, #0
 802ce08:	bf18      	it	ne
 802ce0a:	4613      	movne	r3, r2
 802ce0c:	ee00 3a10 	vmov	s0, r3
 802ce10:	4770      	bx	lr
 802ce12:	4911      	ldr	r1, [pc, #68]	; (802ce58 <floorf+0x80>)
 802ce14:	4111      	asrs	r1, r2
 802ce16:	420b      	tst	r3, r1
 802ce18:	d0fa      	beq.n	802ce10 <floorf+0x38>
 802ce1a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802ce50 <floorf+0x78>
 802ce1e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802ce22:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802ce26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ce2a:	ddef      	ble.n	802ce0c <floorf+0x34>
 802ce2c:	2b00      	cmp	r3, #0
 802ce2e:	bfbe      	ittt	lt
 802ce30:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802ce34:	fa40 f202 	asrlt.w	r2, r0, r2
 802ce38:	189b      	addlt	r3, r3, r2
 802ce3a:	ea23 0301 	bic.w	r3, r3, r1
 802ce3e:	e7e5      	b.n	802ce0c <floorf+0x34>
 802ce40:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802ce44:	d3e4      	bcc.n	802ce10 <floorf+0x38>
 802ce46:	ee30 0a00 	vadd.f32	s0, s0, s0
 802ce4a:	4770      	bx	lr
 802ce4c:	2300      	movs	r3, #0
 802ce4e:	e7dd      	b.n	802ce0c <floorf+0x34>
 802ce50:	7149f2ca 	.word	0x7149f2ca
 802ce54:	bf800000 	.word	0xbf800000
 802ce58:	007fffff 	.word	0x007fffff

0802ce5c <__kernel_cosf>:
 802ce5c:	ee10 3a10 	vmov	r3, s0
 802ce60:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802ce64:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802ce68:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802ce6c:	da05      	bge.n	802ce7a <__kernel_cosf+0x1e>
 802ce6e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802ce72:	ee17 2a90 	vmov	r2, s15
 802ce76:	2a00      	cmp	r2, #0
 802ce78:	d03b      	beq.n	802cef2 <__kernel_cosf+0x96>
 802ce7a:	ee20 7a00 	vmul.f32	s14, s0, s0
 802ce7e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802cef8 <__kernel_cosf+0x9c>
 802ce82:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802cefc <__kernel_cosf+0xa0>
 802ce86:	4a1e      	ldr	r2, [pc, #120]	; (802cf00 <__kernel_cosf+0xa4>)
 802ce88:	eea7 6a27 	vfma.f32	s12, s14, s15
 802ce8c:	4293      	cmp	r3, r2
 802ce8e:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802cf04 <__kernel_cosf+0xa8>
 802ce92:	eee6 7a07 	vfma.f32	s15, s12, s14
 802ce96:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802cf08 <__kernel_cosf+0xac>
 802ce9a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802ce9e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802cf0c <__kernel_cosf+0xb0>
 802cea2:	eee6 7a07 	vfma.f32	s15, s12, s14
 802cea6:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802cf10 <__kernel_cosf+0xb4>
 802ceaa:	eea7 6a87 	vfma.f32	s12, s15, s14
 802ceae:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802ceb2:	ee26 6a07 	vmul.f32	s12, s12, s14
 802ceb6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802ceba:	eee7 0a06 	vfma.f32	s1, s14, s12
 802cebe:	ee67 7a27 	vmul.f32	s15, s14, s15
 802cec2:	dc04      	bgt.n	802cece <__kernel_cosf+0x72>
 802cec4:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802cec8:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802cecc:	4770      	bx	lr
 802cece:	4a11      	ldr	r2, [pc, #68]	; (802cf14 <__kernel_cosf+0xb8>)
 802ced0:	4293      	cmp	r3, r2
 802ced2:	bfda      	itte	le
 802ced4:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802ced8:	ee07 3a10 	vmovle	s14, r3
 802cedc:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802cee0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802cee4:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802cee8:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802ceec:	ee30 0a67 	vsub.f32	s0, s0, s15
 802cef0:	4770      	bx	lr
 802cef2:	eeb0 0a66 	vmov.f32	s0, s13
 802cef6:	4770      	bx	lr
 802cef8:	ad47d74e 	.word	0xad47d74e
 802cefc:	310f74f6 	.word	0x310f74f6
 802cf00:	3e999999 	.word	0x3e999999
 802cf04:	b493f27c 	.word	0xb493f27c
 802cf08:	37d00d01 	.word	0x37d00d01
 802cf0c:	bab60b61 	.word	0xbab60b61
 802cf10:	3d2aaaab 	.word	0x3d2aaaab
 802cf14:	3f480000 	.word	0x3f480000

0802cf18 <__kernel_sinf>:
 802cf18:	ee10 3a10 	vmov	r3, s0
 802cf1c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802cf20:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802cf24:	da04      	bge.n	802cf30 <__kernel_sinf+0x18>
 802cf26:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802cf2a:	ee17 3a90 	vmov	r3, s15
 802cf2e:	b35b      	cbz	r3, 802cf88 <__kernel_sinf+0x70>
 802cf30:	ee20 7a00 	vmul.f32	s14, s0, s0
 802cf34:	eddf 7a15 	vldr	s15, [pc, #84]	; 802cf8c <__kernel_sinf+0x74>
 802cf38:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802cf90 <__kernel_sinf+0x78>
 802cf3c:	eea7 6a27 	vfma.f32	s12, s14, s15
 802cf40:	eddf 7a14 	vldr	s15, [pc, #80]	; 802cf94 <__kernel_sinf+0x7c>
 802cf44:	eee6 7a07 	vfma.f32	s15, s12, s14
 802cf48:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802cf98 <__kernel_sinf+0x80>
 802cf4c:	eea7 6a87 	vfma.f32	s12, s15, s14
 802cf50:	eddf 7a12 	vldr	s15, [pc, #72]	; 802cf9c <__kernel_sinf+0x84>
 802cf54:	ee60 6a07 	vmul.f32	s13, s0, s14
 802cf58:	eee6 7a07 	vfma.f32	s15, s12, s14
 802cf5c:	b930      	cbnz	r0, 802cf6c <__kernel_sinf+0x54>
 802cf5e:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802cfa0 <__kernel_sinf+0x88>
 802cf62:	eea7 6a27 	vfma.f32	s12, s14, s15
 802cf66:	eea6 0a26 	vfma.f32	s0, s12, s13
 802cf6a:	4770      	bx	lr
 802cf6c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802cf70:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802cf74:	eee0 7a86 	vfma.f32	s15, s1, s12
 802cf78:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802cf7c:	eddf 7a09 	vldr	s15, [pc, #36]	; 802cfa4 <__kernel_sinf+0x8c>
 802cf80:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802cf84:	ee30 0a60 	vsub.f32	s0, s0, s1
 802cf88:	4770      	bx	lr
 802cf8a:	bf00      	nop
 802cf8c:	2f2ec9d3 	.word	0x2f2ec9d3
 802cf90:	b2d72f34 	.word	0xb2d72f34
 802cf94:	3638ef1b 	.word	0x3638ef1b
 802cf98:	b9500d01 	.word	0xb9500d01
 802cf9c:	3c088889 	.word	0x3c088889
 802cfa0:	be2aaaab 	.word	0xbe2aaaab
 802cfa4:	3e2aaaab 	.word	0x3e2aaaab

0802cfa8 <__ieee754_rem_pio2f>:
 802cfa8:	b5f0      	push	{r4, r5, r6, r7, lr}
 802cfaa:	ee10 6a10 	vmov	r6, s0
 802cfae:	4b86      	ldr	r3, [pc, #536]	; (802d1c8 <__ieee754_rem_pio2f+0x220>)
 802cfb0:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802cfb4:	429d      	cmp	r5, r3
 802cfb6:	b087      	sub	sp, #28
 802cfb8:	4604      	mov	r4, r0
 802cfba:	dc05      	bgt.n	802cfc8 <__ieee754_rem_pio2f+0x20>
 802cfbc:	2300      	movs	r3, #0
 802cfbe:	ed80 0a00 	vstr	s0, [r0]
 802cfc2:	6043      	str	r3, [r0, #4]
 802cfc4:	2000      	movs	r0, #0
 802cfc6:	e020      	b.n	802d00a <__ieee754_rem_pio2f+0x62>
 802cfc8:	4b80      	ldr	r3, [pc, #512]	; (802d1cc <__ieee754_rem_pio2f+0x224>)
 802cfca:	429d      	cmp	r5, r3
 802cfcc:	dc38      	bgt.n	802d040 <__ieee754_rem_pio2f+0x98>
 802cfce:	2e00      	cmp	r6, #0
 802cfd0:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802d1d0 <__ieee754_rem_pio2f+0x228>
 802cfd4:	4b7f      	ldr	r3, [pc, #508]	; (802d1d4 <__ieee754_rem_pio2f+0x22c>)
 802cfd6:	f025 050f 	bic.w	r5, r5, #15
 802cfda:	dd18      	ble.n	802d00e <__ieee754_rem_pio2f+0x66>
 802cfdc:	429d      	cmp	r5, r3
 802cfde:	ee70 7a47 	vsub.f32	s15, s0, s14
 802cfe2:	bf09      	itett	eq
 802cfe4:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802d1d8 <__ieee754_rem_pio2f+0x230>
 802cfe8:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802d1dc <__ieee754_rem_pio2f+0x234>
 802cfec:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802cff0:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802d1e0 <__ieee754_rem_pio2f+0x238>
 802cff4:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802cff8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802cffc:	edc0 6a00 	vstr	s13, [r0]
 802d000:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d004:	edc0 7a01 	vstr	s15, [r0, #4]
 802d008:	2001      	movs	r0, #1
 802d00a:	b007      	add	sp, #28
 802d00c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802d00e:	429d      	cmp	r5, r3
 802d010:	ee70 7a07 	vadd.f32	s15, s0, s14
 802d014:	bf09      	itett	eq
 802d016:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802d1d8 <__ieee754_rem_pio2f+0x230>
 802d01a:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802d1dc <__ieee754_rem_pio2f+0x234>
 802d01e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802d022:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802d1e0 <__ieee754_rem_pio2f+0x238>
 802d026:	ee77 6a87 	vadd.f32	s13, s15, s14
 802d02a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802d02e:	edc0 6a00 	vstr	s13, [r0]
 802d032:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d036:	edc0 7a01 	vstr	s15, [r0, #4]
 802d03a:	f04f 30ff 	mov.w	r0, #4294967295
 802d03e:	e7e4      	b.n	802d00a <__ieee754_rem_pio2f+0x62>
 802d040:	4b68      	ldr	r3, [pc, #416]	; (802d1e4 <__ieee754_rem_pio2f+0x23c>)
 802d042:	429d      	cmp	r5, r3
 802d044:	dc71      	bgt.n	802d12a <__ieee754_rem_pio2f+0x182>
 802d046:	f7ff fe33 	bl	802ccb0 <fabsf>
 802d04a:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802d1e8 <__ieee754_rem_pio2f+0x240>
 802d04e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d052:	eee0 7a07 	vfma.f32	s15, s0, s14
 802d056:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d05a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802d05e:	ee17 0a90 	vmov	r0, s15
 802d062:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802d1d0 <__ieee754_rem_pio2f+0x228>
 802d066:	eea7 0a67 	vfms.f32	s0, s14, s15
 802d06a:	281f      	cmp	r0, #31
 802d06c:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802d1dc <__ieee754_rem_pio2f+0x234>
 802d070:	ee67 7a27 	vmul.f32	s15, s14, s15
 802d074:	eeb1 6a47 	vneg.f32	s12, s14
 802d078:	ee70 6a67 	vsub.f32	s13, s0, s15
 802d07c:	ee16 2a90 	vmov	r2, s13
 802d080:	dc1c      	bgt.n	802d0bc <__ieee754_rem_pio2f+0x114>
 802d082:	495a      	ldr	r1, [pc, #360]	; (802d1ec <__ieee754_rem_pio2f+0x244>)
 802d084:	1e47      	subs	r7, r0, #1
 802d086:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802d08a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802d08e:	428b      	cmp	r3, r1
 802d090:	d014      	beq.n	802d0bc <__ieee754_rem_pio2f+0x114>
 802d092:	6022      	str	r2, [r4, #0]
 802d094:	ed94 7a00 	vldr	s14, [r4]
 802d098:	ee30 0a47 	vsub.f32	s0, s0, s14
 802d09c:	2e00      	cmp	r6, #0
 802d09e:	ee30 0a67 	vsub.f32	s0, s0, s15
 802d0a2:	ed84 0a01 	vstr	s0, [r4, #4]
 802d0a6:	dab0      	bge.n	802d00a <__ieee754_rem_pio2f+0x62>
 802d0a8:	eeb1 7a47 	vneg.f32	s14, s14
 802d0ac:	eeb1 0a40 	vneg.f32	s0, s0
 802d0b0:	ed84 7a00 	vstr	s14, [r4]
 802d0b4:	ed84 0a01 	vstr	s0, [r4, #4]
 802d0b8:	4240      	negs	r0, r0
 802d0ba:	e7a6      	b.n	802d00a <__ieee754_rem_pio2f+0x62>
 802d0bc:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802d0c0:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802d0c4:	2908      	cmp	r1, #8
 802d0c6:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802d0ca:	dde2      	ble.n	802d092 <__ieee754_rem_pio2f+0xea>
 802d0cc:	eddf 5a42 	vldr	s11, [pc, #264]	; 802d1d8 <__ieee754_rem_pio2f+0x230>
 802d0d0:	eef0 6a40 	vmov.f32	s13, s0
 802d0d4:	eee6 6a25 	vfma.f32	s13, s12, s11
 802d0d8:	ee70 7a66 	vsub.f32	s15, s0, s13
 802d0dc:	eee6 7a25 	vfma.f32	s15, s12, s11
 802d0e0:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802d1e0 <__ieee754_rem_pio2f+0x238>
 802d0e4:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802d0e8:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802d0ec:	ee15 2a90 	vmov	r2, s11
 802d0f0:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802d0f4:	1a5b      	subs	r3, r3, r1
 802d0f6:	2b19      	cmp	r3, #25
 802d0f8:	dc04      	bgt.n	802d104 <__ieee754_rem_pio2f+0x15c>
 802d0fa:	edc4 5a00 	vstr	s11, [r4]
 802d0fe:	eeb0 0a66 	vmov.f32	s0, s13
 802d102:	e7c7      	b.n	802d094 <__ieee754_rem_pio2f+0xec>
 802d104:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802d1f0 <__ieee754_rem_pio2f+0x248>
 802d108:	eeb0 0a66 	vmov.f32	s0, s13
 802d10c:	eea6 0a25 	vfma.f32	s0, s12, s11
 802d110:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802d114:	eddf 6a37 	vldr	s13, [pc, #220]	; 802d1f4 <__ieee754_rem_pio2f+0x24c>
 802d118:	eee6 7a25 	vfma.f32	s15, s12, s11
 802d11c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802d120:	ee30 7a67 	vsub.f32	s14, s0, s15
 802d124:	ed84 7a00 	vstr	s14, [r4]
 802d128:	e7b4      	b.n	802d094 <__ieee754_rem_pio2f+0xec>
 802d12a:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802d12e:	db06      	blt.n	802d13e <__ieee754_rem_pio2f+0x196>
 802d130:	ee70 7a40 	vsub.f32	s15, s0, s0
 802d134:	edc0 7a01 	vstr	s15, [r0, #4]
 802d138:	edc0 7a00 	vstr	s15, [r0]
 802d13c:	e742      	b.n	802cfc4 <__ieee754_rem_pio2f+0x1c>
 802d13e:	15ea      	asrs	r2, r5, #23
 802d140:	3a86      	subs	r2, #134	; 0x86
 802d142:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802d146:	ee07 3a90 	vmov	s15, r3
 802d14a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802d14e:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802d1f8 <__ieee754_rem_pio2f+0x250>
 802d152:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802d156:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d15a:	ed8d 7a03 	vstr	s14, [sp, #12]
 802d15e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802d162:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802d166:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802d16a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d16e:	ed8d 7a04 	vstr	s14, [sp, #16]
 802d172:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802d176:	eef5 7a40 	vcmp.f32	s15, #0.0
 802d17a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d17e:	edcd 7a05 	vstr	s15, [sp, #20]
 802d182:	d11e      	bne.n	802d1c2 <__ieee754_rem_pio2f+0x21a>
 802d184:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802d188:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d18c:	bf14      	ite	ne
 802d18e:	2302      	movne	r3, #2
 802d190:	2301      	moveq	r3, #1
 802d192:	491a      	ldr	r1, [pc, #104]	; (802d1fc <__ieee754_rem_pio2f+0x254>)
 802d194:	9101      	str	r1, [sp, #4]
 802d196:	2102      	movs	r1, #2
 802d198:	9100      	str	r1, [sp, #0]
 802d19a:	a803      	add	r0, sp, #12
 802d19c:	4621      	mov	r1, r4
 802d19e:	f000 f895 	bl	802d2cc <__kernel_rem_pio2f>
 802d1a2:	2e00      	cmp	r6, #0
 802d1a4:	f6bf af31 	bge.w	802d00a <__ieee754_rem_pio2f+0x62>
 802d1a8:	edd4 7a00 	vldr	s15, [r4]
 802d1ac:	eef1 7a67 	vneg.f32	s15, s15
 802d1b0:	edc4 7a00 	vstr	s15, [r4]
 802d1b4:	edd4 7a01 	vldr	s15, [r4, #4]
 802d1b8:	eef1 7a67 	vneg.f32	s15, s15
 802d1bc:	edc4 7a01 	vstr	s15, [r4, #4]
 802d1c0:	e77a      	b.n	802d0b8 <__ieee754_rem_pio2f+0x110>
 802d1c2:	2303      	movs	r3, #3
 802d1c4:	e7e5      	b.n	802d192 <__ieee754_rem_pio2f+0x1ea>
 802d1c6:	bf00      	nop
 802d1c8:	3f490fd8 	.word	0x3f490fd8
 802d1cc:	4016cbe3 	.word	0x4016cbe3
 802d1d0:	3fc90f80 	.word	0x3fc90f80
 802d1d4:	3fc90fd0 	.word	0x3fc90fd0
 802d1d8:	37354400 	.word	0x37354400
 802d1dc:	37354443 	.word	0x37354443
 802d1e0:	2e85a308 	.word	0x2e85a308
 802d1e4:	43490f80 	.word	0x43490f80
 802d1e8:	3f22f984 	.word	0x3f22f984
 802d1ec:	08045684 	.word	0x08045684
 802d1f0:	2e85a300 	.word	0x2e85a300
 802d1f4:	248d3132 	.word	0x248d3132
 802d1f8:	43800000 	.word	0x43800000
 802d1fc:	08045704 	.word	0x08045704

0802d200 <scalbnf>:
 802d200:	ee10 3a10 	vmov	r3, s0
 802d204:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802d208:	d02b      	beq.n	802d262 <scalbnf+0x62>
 802d20a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802d20e:	d302      	bcc.n	802d216 <scalbnf+0x16>
 802d210:	ee30 0a00 	vadd.f32	s0, s0, s0
 802d214:	4770      	bx	lr
 802d216:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802d21a:	d123      	bne.n	802d264 <scalbnf+0x64>
 802d21c:	4b24      	ldr	r3, [pc, #144]	; (802d2b0 <scalbnf+0xb0>)
 802d21e:	eddf 7a25 	vldr	s15, [pc, #148]	; 802d2b4 <scalbnf+0xb4>
 802d222:	4298      	cmp	r0, r3
 802d224:	ee20 0a27 	vmul.f32	s0, s0, s15
 802d228:	db17      	blt.n	802d25a <scalbnf+0x5a>
 802d22a:	ee10 3a10 	vmov	r3, s0
 802d22e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802d232:	3a19      	subs	r2, #25
 802d234:	f24c 3150 	movw	r1, #50000	; 0xc350
 802d238:	4288      	cmp	r0, r1
 802d23a:	dd15      	ble.n	802d268 <scalbnf+0x68>
 802d23c:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802d2b8 <scalbnf+0xb8>
 802d240:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802d2bc <scalbnf+0xbc>
 802d244:	ee10 3a10 	vmov	r3, s0
 802d248:	eeb0 7a67 	vmov.f32	s14, s15
 802d24c:	2b00      	cmp	r3, #0
 802d24e:	bfb8      	it	lt
 802d250:	eef0 7a66 	vmovlt.f32	s15, s13
 802d254:	ee27 0a87 	vmul.f32	s0, s15, s14
 802d258:	4770      	bx	lr
 802d25a:	eddf 7a19 	vldr	s15, [pc, #100]	; 802d2c0 <scalbnf+0xc0>
 802d25e:	ee27 0a80 	vmul.f32	s0, s15, s0
 802d262:	4770      	bx	lr
 802d264:	0dd2      	lsrs	r2, r2, #23
 802d266:	e7e5      	b.n	802d234 <scalbnf+0x34>
 802d268:	4410      	add	r0, r2
 802d26a:	28fe      	cmp	r0, #254	; 0xfe
 802d26c:	dce6      	bgt.n	802d23c <scalbnf+0x3c>
 802d26e:	2800      	cmp	r0, #0
 802d270:	dd06      	ble.n	802d280 <scalbnf+0x80>
 802d272:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802d276:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802d27a:	ee00 3a10 	vmov	s0, r3
 802d27e:	4770      	bx	lr
 802d280:	f110 0f16 	cmn.w	r0, #22
 802d284:	da09      	bge.n	802d29a <scalbnf+0x9a>
 802d286:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802d2c0 <scalbnf+0xc0>
 802d28a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802d2c4 <scalbnf+0xc4>
 802d28e:	ee10 3a10 	vmov	r3, s0
 802d292:	eeb0 7a67 	vmov.f32	s14, s15
 802d296:	2b00      	cmp	r3, #0
 802d298:	e7d9      	b.n	802d24e <scalbnf+0x4e>
 802d29a:	3019      	adds	r0, #25
 802d29c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802d2a0:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802d2a4:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802d2c8 <scalbnf+0xc8>
 802d2a8:	ee07 3a90 	vmov	s15, r3
 802d2ac:	e7d7      	b.n	802d25e <scalbnf+0x5e>
 802d2ae:	bf00      	nop
 802d2b0:	ffff3cb0 	.word	0xffff3cb0
 802d2b4:	4c000000 	.word	0x4c000000
 802d2b8:	7149f2ca 	.word	0x7149f2ca
 802d2bc:	f149f2ca 	.word	0xf149f2ca
 802d2c0:	0da24260 	.word	0x0da24260
 802d2c4:	8da24260 	.word	0x8da24260
 802d2c8:	33000000 	.word	0x33000000

0802d2cc <__kernel_rem_pio2f>:
 802d2cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d2d0:	ed2d 8b04 	vpush	{d8-d9}
 802d2d4:	b0d9      	sub	sp, #356	; 0x164
 802d2d6:	4688      	mov	r8, r1
 802d2d8:	9002      	str	r0, [sp, #8]
 802d2da:	49b8      	ldr	r1, [pc, #736]	; (802d5bc <__kernel_rem_pio2f+0x2f0>)
 802d2dc:	9866      	ldr	r0, [sp, #408]	; 0x198
 802d2de:	9301      	str	r3, [sp, #4]
 802d2e0:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802d2e4:	9901      	ldr	r1, [sp, #4]
 802d2e6:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802d2e8:	f101 3bff 	add.w	fp, r1, #4294967295
 802d2ec:	1d11      	adds	r1, r2, #4
 802d2ee:	db25      	blt.n	802d33c <__kernel_rem_pio2f+0x70>
 802d2f0:	1ed0      	subs	r0, r2, #3
 802d2f2:	bf48      	it	mi
 802d2f4:	1d10      	addmi	r0, r2, #4
 802d2f6:	10c0      	asrs	r0, r0, #3
 802d2f8:	1c45      	adds	r5, r0, #1
 802d2fa:	00e9      	lsls	r1, r5, #3
 802d2fc:	eba0 070b 	sub.w	r7, r0, fp
 802d300:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802d5cc <__kernel_rem_pio2f+0x300>
 802d304:	9103      	str	r1, [sp, #12]
 802d306:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802d30a:	eb0a 0c0b 	add.w	ip, sl, fp
 802d30e:	ae1c      	add	r6, sp, #112	; 0x70
 802d310:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802d314:	2400      	movs	r4, #0
 802d316:	4564      	cmp	r4, ip
 802d318:	dd12      	ble.n	802d340 <__kernel_rem_pio2f+0x74>
 802d31a:	9901      	ldr	r1, [sp, #4]
 802d31c:	ac1c      	add	r4, sp, #112	; 0x70
 802d31e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802d322:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802d326:	f04f 0c00 	mov.w	ip, #0
 802d32a:	45d4      	cmp	ip, sl
 802d32c:	dc27      	bgt.n	802d37e <__kernel_rem_pio2f+0xb2>
 802d32e:	f8dd e008 	ldr.w	lr, [sp, #8]
 802d332:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802d5cc <__kernel_rem_pio2f+0x300>
 802d336:	4627      	mov	r7, r4
 802d338:	2600      	movs	r6, #0
 802d33a:	e016      	b.n	802d36a <__kernel_rem_pio2f+0x9e>
 802d33c:	2000      	movs	r0, #0
 802d33e:	e7db      	b.n	802d2f8 <__kernel_rem_pio2f+0x2c>
 802d340:	42e7      	cmn	r7, r4
 802d342:	bf5d      	ittte	pl
 802d344:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802d348:	ee07 1a90 	vmovpl	s15, r1
 802d34c:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802d350:	eef0 7a47 	vmovmi.f32	s15, s14
 802d354:	ece6 7a01 	vstmia	r6!, {s15}
 802d358:	3401      	adds	r4, #1
 802d35a:	e7dc      	b.n	802d316 <__kernel_rem_pio2f+0x4a>
 802d35c:	ecfe 6a01 	vldmia	lr!, {s13}
 802d360:	ed97 7a00 	vldr	s14, [r7]
 802d364:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d368:	3601      	adds	r6, #1
 802d36a:	455e      	cmp	r6, fp
 802d36c:	f1a7 0704 	sub.w	r7, r7, #4
 802d370:	ddf4      	ble.n	802d35c <__kernel_rem_pio2f+0x90>
 802d372:	ece9 7a01 	vstmia	r9!, {s15}
 802d376:	f10c 0c01 	add.w	ip, ip, #1
 802d37a:	3404      	adds	r4, #4
 802d37c:	e7d5      	b.n	802d32a <__kernel_rem_pio2f+0x5e>
 802d37e:	a908      	add	r1, sp, #32
 802d380:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802d384:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802d388:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802d5c8 <__kernel_rem_pio2f+0x2fc>
 802d38c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802d5c4 <__kernel_rem_pio2f+0x2f8>
 802d390:	9105      	str	r1, [sp, #20]
 802d392:	9304      	str	r3, [sp, #16]
 802d394:	4656      	mov	r6, sl
 802d396:	00b3      	lsls	r3, r6, #2
 802d398:	9306      	str	r3, [sp, #24]
 802d39a:	ab58      	add	r3, sp, #352	; 0x160
 802d39c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802d3a0:	ac08      	add	r4, sp, #32
 802d3a2:	ab44      	add	r3, sp, #272	; 0x110
 802d3a4:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802d3a8:	46a4      	mov	ip, r4
 802d3aa:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802d3ae:	4637      	mov	r7, r6
 802d3b0:	2f00      	cmp	r7, #0
 802d3b2:	f1a0 0004 	sub.w	r0, r0, #4
 802d3b6:	dc4a      	bgt.n	802d44e <__kernel_rem_pio2f+0x182>
 802d3b8:	4628      	mov	r0, r5
 802d3ba:	9207      	str	r2, [sp, #28]
 802d3bc:	f7ff ff20 	bl	802d200 <scalbnf>
 802d3c0:	eeb0 8a40 	vmov.f32	s16, s0
 802d3c4:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802d3c8:	ee28 0a00 	vmul.f32	s0, s16, s0
 802d3cc:	f7ff fd04 	bl	802cdd8 <floorf>
 802d3d0:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802d3d4:	eea0 8a67 	vfms.f32	s16, s0, s15
 802d3d8:	2d00      	cmp	r5, #0
 802d3da:	9a07      	ldr	r2, [sp, #28]
 802d3dc:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802d3e0:	ee17 9a90 	vmov	r9, s15
 802d3e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d3e8:	ee38 8a67 	vsub.f32	s16, s16, s15
 802d3ec:	dd41      	ble.n	802d472 <__kernel_rem_pio2f+0x1a6>
 802d3ee:	f106 3cff 	add.w	ip, r6, #4294967295
 802d3f2:	ab08      	add	r3, sp, #32
 802d3f4:	f1c5 0e08 	rsb	lr, r5, #8
 802d3f8:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802d3fc:	fa47 f00e 	asr.w	r0, r7, lr
 802d400:	4481      	add	r9, r0
 802d402:	fa00 f00e 	lsl.w	r0, r0, lr
 802d406:	1a3f      	subs	r7, r7, r0
 802d408:	f1c5 0007 	rsb	r0, r5, #7
 802d40c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802d410:	4107      	asrs	r7, r0
 802d412:	2f00      	cmp	r7, #0
 802d414:	dd3c      	ble.n	802d490 <__kernel_rem_pio2f+0x1c4>
 802d416:	f04f 0e00 	mov.w	lr, #0
 802d41a:	f109 0901 	add.w	r9, r9, #1
 802d41e:	4671      	mov	r1, lr
 802d420:	4576      	cmp	r6, lr
 802d422:	dc67      	bgt.n	802d4f4 <__kernel_rem_pio2f+0x228>
 802d424:	2d00      	cmp	r5, #0
 802d426:	dd03      	ble.n	802d430 <__kernel_rem_pio2f+0x164>
 802d428:	2d01      	cmp	r5, #1
 802d42a:	d074      	beq.n	802d516 <__kernel_rem_pio2f+0x24a>
 802d42c:	2d02      	cmp	r5, #2
 802d42e:	d07b      	beq.n	802d528 <__kernel_rem_pio2f+0x25c>
 802d430:	2f02      	cmp	r7, #2
 802d432:	d12d      	bne.n	802d490 <__kernel_rem_pio2f+0x1c4>
 802d434:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802d438:	ee30 8a48 	vsub.f32	s16, s0, s16
 802d43c:	b341      	cbz	r1, 802d490 <__kernel_rem_pio2f+0x1c4>
 802d43e:	4628      	mov	r0, r5
 802d440:	9207      	str	r2, [sp, #28]
 802d442:	f7ff fedd 	bl	802d200 <scalbnf>
 802d446:	9a07      	ldr	r2, [sp, #28]
 802d448:	ee38 8a40 	vsub.f32	s16, s16, s0
 802d44c:	e020      	b.n	802d490 <__kernel_rem_pio2f+0x1c4>
 802d44e:	ee60 7a28 	vmul.f32	s15, s0, s17
 802d452:	3f01      	subs	r7, #1
 802d454:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d458:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d45c:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802d460:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d464:	ecac 0a01 	vstmia	ip!, {s0}
 802d468:	ed90 0a00 	vldr	s0, [r0]
 802d46c:	ee37 0a80 	vadd.f32	s0, s15, s0
 802d470:	e79e      	b.n	802d3b0 <__kernel_rem_pio2f+0xe4>
 802d472:	d105      	bne.n	802d480 <__kernel_rem_pio2f+0x1b4>
 802d474:	1e70      	subs	r0, r6, #1
 802d476:	ab08      	add	r3, sp, #32
 802d478:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802d47c:	11ff      	asrs	r7, r7, #7
 802d47e:	e7c8      	b.n	802d412 <__kernel_rem_pio2f+0x146>
 802d480:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d484:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802d488:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d48c:	da30      	bge.n	802d4f0 <__kernel_rem_pio2f+0x224>
 802d48e:	2700      	movs	r7, #0
 802d490:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802d494:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d498:	f040 809a 	bne.w	802d5d0 <__kernel_rem_pio2f+0x304>
 802d49c:	1e74      	subs	r4, r6, #1
 802d49e:	46a4      	mov	ip, r4
 802d4a0:	2100      	movs	r1, #0
 802d4a2:	45d4      	cmp	ip, sl
 802d4a4:	da47      	bge.n	802d536 <__kernel_rem_pio2f+0x26a>
 802d4a6:	2900      	cmp	r1, #0
 802d4a8:	d063      	beq.n	802d572 <__kernel_rem_pio2f+0x2a6>
 802d4aa:	ab08      	add	r3, sp, #32
 802d4ac:	3d08      	subs	r5, #8
 802d4ae:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802d4b2:	2b00      	cmp	r3, #0
 802d4b4:	d07f      	beq.n	802d5b6 <__kernel_rem_pio2f+0x2ea>
 802d4b6:	4628      	mov	r0, r5
 802d4b8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802d4bc:	f7ff fea0 	bl	802d200 <scalbnf>
 802d4c0:	1c63      	adds	r3, r4, #1
 802d4c2:	aa44      	add	r2, sp, #272	; 0x110
 802d4c4:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802d5c8 <__kernel_rem_pio2f+0x2fc>
 802d4c8:	0099      	lsls	r1, r3, #2
 802d4ca:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802d4ce:	4623      	mov	r3, r4
 802d4d0:	2b00      	cmp	r3, #0
 802d4d2:	f280 80ad 	bge.w	802d630 <__kernel_rem_pio2f+0x364>
 802d4d6:	4623      	mov	r3, r4
 802d4d8:	2b00      	cmp	r3, #0
 802d4da:	f2c0 80cb 	blt.w	802d674 <__kernel_rem_pio2f+0x3a8>
 802d4de:	aa44      	add	r2, sp, #272	; 0x110
 802d4e0:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802d4e4:	4e36      	ldr	r6, [pc, #216]	; (802d5c0 <__kernel_rem_pio2f+0x2f4>)
 802d4e6:	eddf 7a39 	vldr	s15, [pc, #228]	; 802d5cc <__kernel_rem_pio2f+0x300>
 802d4ea:	2000      	movs	r0, #0
 802d4ec:	1ae2      	subs	r2, r4, r3
 802d4ee:	e0b6      	b.n	802d65e <__kernel_rem_pio2f+0x392>
 802d4f0:	2702      	movs	r7, #2
 802d4f2:	e790      	b.n	802d416 <__kernel_rem_pio2f+0x14a>
 802d4f4:	6820      	ldr	r0, [r4, #0]
 802d4f6:	b949      	cbnz	r1, 802d50c <__kernel_rem_pio2f+0x240>
 802d4f8:	b118      	cbz	r0, 802d502 <__kernel_rem_pio2f+0x236>
 802d4fa:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802d4fe:	6020      	str	r0, [r4, #0]
 802d500:	2001      	movs	r0, #1
 802d502:	f10e 0e01 	add.w	lr, lr, #1
 802d506:	3404      	adds	r4, #4
 802d508:	4601      	mov	r1, r0
 802d50a:	e789      	b.n	802d420 <__kernel_rem_pio2f+0x154>
 802d50c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802d510:	6020      	str	r0, [r4, #0]
 802d512:	4608      	mov	r0, r1
 802d514:	e7f5      	b.n	802d502 <__kernel_rem_pio2f+0x236>
 802d516:	1e74      	subs	r4, r6, #1
 802d518:	ab08      	add	r3, sp, #32
 802d51a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802d51e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802d522:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802d526:	e783      	b.n	802d430 <__kernel_rem_pio2f+0x164>
 802d528:	1e74      	subs	r4, r6, #1
 802d52a:	ab08      	add	r3, sp, #32
 802d52c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802d530:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802d534:	e7f5      	b.n	802d522 <__kernel_rem_pio2f+0x256>
 802d536:	ab08      	add	r3, sp, #32
 802d538:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802d53c:	f10c 3cff 	add.w	ip, ip, #4294967295
 802d540:	4301      	orrs	r1, r0
 802d542:	e7ae      	b.n	802d4a2 <__kernel_rem_pio2f+0x1d6>
 802d544:	3001      	adds	r0, #1
 802d546:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802d54a:	2f00      	cmp	r7, #0
 802d54c:	d0fa      	beq.n	802d544 <__kernel_rem_pio2f+0x278>
 802d54e:	9b06      	ldr	r3, [sp, #24]
 802d550:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802d554:	eb0d 0403 	add.w	r4, sp, r3
 802d558:	9b01      	ldr	r3, [sp, #4]
 802d55a:	18f7      	adds	r7, r6, r3
 802d55c:	ab1c      	add	r3, sp, #112	; 0x70
 802d55e:	f106 0c01 	add.w	ip, r6, #1
 802d562:	3c4c      	subs	r4, #76	; 0x4c
 802d564:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802d568:	4430      	add	r0, r6
 802d56a:	4560      	cmp	r0, ip
 802d56c:	da04      	bge.n	802d578 <__kernel_rem_pio2f+0x2ac>
 802d56e:	4606      	mov	r6, r0
 802d570:	e711      	b.n	802d396 <__kernel_rem_pio2f+0xca>
 802d572:	9c05      	ldr	r4, [sp, #20]
 802d574:	2001      	movs	r0, #1
 802d576:	e7e6      	b.n	802d546 <__kernel_rem_pio2f+0x27a>
 802d578:	9b04      	ldr	r3, [sp, #16]
 802d57a:	f8dd e008 	ldr.w	lr, [sp, #8]
 802d57e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802d582:	9306      	str	r3, [sp, #24]
 802d584:	ee07 3a90 	vmov	s15, r3
 802d588:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d58c:	2600      	movs	r6, #0
 802d58e:	ece7 7a01 	vstmia	r7!, {s15}
 802d592:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802d5cc <__kernel_rem_pio2f+0x300>
 802d596:	46b9      	mov	r9, r7
 802d598:	455e      	cmp	r6, fp
 802d59a:	dd04      	ble.n	802d5a6 <__kernel_rem_pio2f+0x2da>
 802d59c:	ece4 7a01 	vstmia	r4!, {s15}
 802d5a0:	f10c 0c01 	add.w	ip, ip, #1
 802d5a4:	e7e1      	b.n	802d56a <__kernel_rem_pio2f+0x29e>
 802d5a6:	ecfe 6a01 	vldmia	lr!, {s13}
 802d5aa:	ed39 7a01 	vldmdb	r9!, {s14}
 802d5ae:	3601      	adds	r6, #1
 802d5b0:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d5b4:	e7f0      	b.n	802d598 <__kernel_rem_pio2f+0x2cc>
 802d5b6:	3c01      	subs	r4, #1
 802d5b8:	e777      	b.n	802d4aa <__kernel_rem_pio2f+0x1de>
 802d5ba:	bf00      	nop
 802d5bc:	08045a48 	.word	0x08045a48
 802d5c0:	08045a1c 	.word	0x08045a1c
 802d5c4:	43800000 	.word	0x43800000
 802d5c8:	3b800000 	.word	0x3b800000
 802d5cc:	00000000 	.word	0x00000000
 802d5d0:	9b03      	ldr	r3, [sp, #12]
 802d5d2:	eeb0 0a48 	vmov.f32	s0, s16
 802d5d6:	1a98      	subs	r0, r3, r2
 802d5d8:	f7ff fe12 	bl	802d200 <scalbnf>
 802d5dc:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802d5c4 <__kernel_rem_pio2f+0x2f8>
 802d5e0:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802d5e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d5e8:	db19      	blt.n	802d61e <__kernel_rem_pio2f+0x352>
 802d5ea:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802d5c8 <__kernel_rem_pio2f+0x2fc>
 802d5ee:	ee60 7a27 	vmul.f32	s15, s0, s15
 802d5f2:	aa08      	add	r2, sp, #32
 802d5f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d5f8:	1c74      	adds	r4, r6, #1
 802d5fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d5fe:	3508      	adds	r5, #8
 802d600:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802d604:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d608:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d60c:	ee10 3a10 	vmov	r3, s0
 802d610:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802d614:	ee17 3a90 	vmov	r3, s15
 802d618:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802d61c:	e74b      	b.n	802d4b6 <__kernel_rem_pio2f+0x1ea>
 802d61e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d622:	aa08      	add	r2, sp, #32
 802d624:	ee10 3a10 	vmov	r3, s0
 802d628:	4634      	mov	r4, r6
 802d62a:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802d62e:	e742      	b.n	802d4b6 <__kernel_rem_pio2f+0x1ea>
 802d630:	a808      	add	r0, sp, #32
 802d632:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802d636:	9001      	str	r0, [sp, #4]
 802d638:	ee07 0a90 	vmov	s15, r0
 802d63c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d640:	3b01      	subs	r3, #1
 802d642:	ee67 7a80 	vmul.f32	s15, s15, s0
 802d646:	ee20 0a07 	vmul.f32	s0, s0, s14
 802d64a:	ed62 7a01 	vstmdb	r2!, {s15}
 802d64e:	e73f      	b.n	802d4d0 <__kernel_rem_pio2f+0x204>
 802d650:	ecf6 6a01 	vldmia	r6!, {s13}
 802d654:	ecb5 7a01 	vldmia	r5!, {s14}
 802d658:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d65c:	3001      	adds	r0, #1
 802d65e:	4550      	cmp	r0, sl
 802d660:	dc01      	bgt.n	802d666 <__kernel_rem_pio2f+0x39a>
 802d662:	4290      	cmp	r0, r2
 802d664:	ddf4      	ble.n	802d650 <__kernel_rem_pio2f+0x384>
 802d666:	a858      	add	r0, sp, #352	; 0x160
 802d668:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802d66c:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802d670:	3b01      	subs	r3, #1
 802d672:	e731      	b.n	802d4d8 <__kernel_rem_pio2f+0x20c>
 802d674:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802d676:	2b02      	cmp	r3, #2
 802d678:	dc09      	bgt.n	802d68e <__kernel_rem_pio2f+0x3c2>
 802d67a:	2b00      	cmp	r3, #0
 802d67c:	dc2b      	bgt.n	802d6d6 <__kernel_rem_pio2f+0x40a>
 802d67e:	d044      	beq.n	802d70a <__kernel_rem_pio2f+0x43e>
 802d680:	f009 0007 	and.w	r0, r9, #7
 802d684:	b059      	add	sp, #356	; 0x164
 802d686:	ecbd 8b04 	vpop	{d8-d9}
 802d68a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d68e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802d690:	2b03      	cmp	r3, #3
 802d692:	d1f5      	bne.n	802d680 <__kernel_rem_pio2f+0x3b4>
 802d694:	aa30      	add	r2, sp, #192	; 0xc0
 802d696:	1f0b      	subs	r3, r1, #4
 802d698:	4413      	add	r3, r2
 802d69a:	461a      	mov	r2, r3
 802d69c:	4620      	mov	r0, r4
 802d69e:	2800      	cmp	r0, #0
 802d6a0:	f1a2 0204 	sub.w	r2, r2, #4
 802d6a4:	dc52      	bgt.n	802d74c <__kernel_rem_pio2f+0x480>
 802d6a6:	4622      	mov	r2, r4
 802d6a8:	2a01      	cmp	r2, #1
 802d6aa:	f1a3 0304 	sub.w	r3, r3, #4
 802d6ae:	dc5d      	bgt.n	802d76c <__kernel_rem_pio2f+0x4a0>
 802d6b0:	ab30      	add	r3, sp, #192	; 0xc0
 802d6b2:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802d5cc <__kernel_rem_pio2f+0x300>
 802d6b6:	440b      	add	r3, r1
 802d6b8:	2c01      	cmp	r4, #1
 802d6ba:	dc67      	bgt.n	802d78c <__kernel_rem_pio2f+0x4c0>
 802d6bc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802d6c0:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802d6c4:	2f00      	cmp	r7, #0
 802d6c6:	d167      	bne.n	802d798 <__kernel_rem_pio2f+0x4cc>
 802d6c8:	edc8 6a00 	vstr	s13, [r8]
 802d6cc:	ed88 7a01 	vstr	s14, [r8, #4]
 802d6d0:	edc8 7a02 	vstr	s15, [r8, #8]
 802d6d4:	e7d4      	b.n	802d680 <__kernel_rem_pio2f+0x3b4>
 802d6d6:	ab30      	add	r3, sp, #192	; 0xc0
 802d6d8:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802d5cc <__kernel_rem_pio2f+0x300>
 802d6dc:	440b      	add	r3, r1
 802d6de:	4622      	mov	r2, r4
 802d6e0:	2a00      	cmp	r2, #0
 802d6e2:	da24      	bge.n	802d72e <__kernel_rem_pio2f+0x462>
 802d6e4:	b34f      	cbz	r7, 802d73a <__kernel_rem_pio2f+0x46e>
 802d6e6:	eef1 7a47 	vneg.f32	s15, s14
 802d6ea:	edc8 7a00 	vstr	s15, [r8]
 802d6ee:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802d6f2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d6f6:	aa31      	add	r2, sp, #196	; 0xc4
 802d6f8:	2301      	movs	r3, #1
 802d6fa:	429c      	cmp	r4, r3
 802d6fc:	da20      	bge.n	802d740 <__kernel_rem_pio2f+0x474>
 802d6fe:	b10f      	cbz	r7, 802d704 <__kernel_rem_pio2f+0x438>
 802d700:	eef1 7a67 	vneg.f32	s15, s15
 802d704:	edc8 7a01 	vstr	s15, [r8, #4]
 802d708:	e7ba      	b.n	802d680 <__kernel_rem_pio2f+0x3b4>
 802d70a:	ab30      	add	r3, sp, #192	; 0xc0
 802d70c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802d5cc <__kernel_rem_pio2f+0x300>
 802d710:	440b      	add	r3, r1
 802d712:	2c00      	cmp	r4, #0
 802d714:	da05      	bge.n	802d722 <__kernel_rem_pio2f+0x456>
 802d716:	b10f      	cbz	r7, 802d71c <__kernel_rem_pio2f+0x450>
 802d718:	eef1 7a67 	vneg.f32	s15, s15
 802d71c:	edc8 7a00 	vstr	s15, [r8]
 802d720:	e7ae      	b.n	802d680 <__kernel_rem_pio2f+0x3b4>
 802d722:	ed33 7a01 	vldmdb	r3!, {s14}
 802d726:	3c01      	subs	r4, #1
 802d728:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d72c:	e7f1      	b.n	802d712 <__kernel_rem_pio2f+0x446>
 802d72e:	ed73 7a01 	vldmdb	r3!, {s15}
 802d732:	3a01      	subs	r2, #1
 802d734:	ee37 7a27 	vadd.f32	s14, s14, s15
 802d738:	e7d2      	b.n	802d6e0 <__kernel_rem_pio2f+0x414>
 802d73a:	eef0 7a47 	vmov.f32	s15, s14
 802d73e:	e7d4      	b.n	802d6ea <__kernel_rem_pio2f+0x41e>
 802d740:	ecb2 7a01 	vldmia	r2!, {s14}
 802d744:	3301      	adds	r3, #1
 802d746:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d74a:	e7d6      	b.n	802d6fa <__kernel_rem_pio2f+0x42e>
 802d74c:	edd2 7a00 	vldr	s15, [r2]
 802d750:	edd2 6a01 	vldr	s13, [r2, #4]
 802d754:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802d758:	3801      	subs	r0, #1
 802d75a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d75e:	ed82 7a00 	vstr	s14, [r2]
 802d762:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802d766:	edc2 7a01 	vstr	s15, [r2, #4]
 802d76a:	e798      	b.n	802d69e <__kernel_rem_pio2f+0x3d2>
 802d76c:	edd3 7a00 	vldr	s15, [r3]
 802d770:	edd3 6a01 	vldr	s13, [r3, #4]
 802d774:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802d778:	3a01      	subs	r2, #1
 802d77a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d77e:	ed83 7a00 	vstr	s14, [r3]
 802d782:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802d786:	edc3 7a01 	vstr	s15, [r3, #4]
 802d78a:	e78d      	b.n	802d6a8 <__kernel_rem_pio2f+0x3dc>
 802d78c:	ed33 7a01 	vldmdb	r3!, {s14}
 802d790:	3c01      	subs	r4, #1
 802d792:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d796:	e78f      	b.n	802d6b8 <__kernel_rem_pio2f+0x3ec>
 802d798:	eef1 6a66 	vneg.f32	s13, s13
 802d79c:	eeb1 7a47 	vneg.f32	s14, s14
 802d7a0:	edc8 6a00 	vstr	s13, [r8]
 802d7a4:	ed88 7a01 	vstr	s14, [r8, #4]
 802d7a8:	eef1 7a67 	vneg.f32	s15, s15
 802d7ac:	e790      	b.n	802d6d0 <__kernel_rem_pio2f+0x404>
 802d7ae:	bf00      	nop

0802d7b0 <abort>:
 802d7b0:	b508      	push	{r3, lr}
 802d7b2:	2006      	movs	r0, #6
 802d7b4:	f000 fa3a 	bl	802dc2c <raise>
 802d7b8:	2001      	movs	r0, #1
 802d7ba:	f7d4 ffad 	bl	8002718 <_exit>
	...

0802d7c0 <__assert_func>:
 802d7c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802d7c2:	4614      	mov	r4, r2
 802d7c4:	461a      	mov	r2, r3
 802d7c6:	4b09      	ldr	r3, [pc, #36]	; (802d7ec <__assert_func+0x2c>)
 802d7c8:	681b      	ldr	r3, [r3, #0]
 802d7ca:	4605      	mov	r5, r0
 802d7cc:	68d8      	ldr	r0, [r3, #12]
 802d7ce:	b14c      	cbz	r4, 802d7e4 <__assert_func+0x24>
 802d7d0:	4b07      	ldr	r3, [pc, #28]	; (802d7f0 <__assert_func+0x30>)
 802d7d2:	9100      	str	r1, [sp, #0]
 802d7d4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802d7d8:	4906      	ldr	r1, [pc, #24]	; (802d7f4 <__assert_func+0x34>)
 802d7da:	462b      	mov	r3, r5
 802d7dc:	f000 f982 	bl	802dae4 <fiprintf>
 802d7e0:	f7ff ffe6 	bl	802d7b0 <abort>
 802d7e4:	4b04      	ldr	r3, [pc, #16]	; (802d7f8 <__assert_func+0x38>)
 802d7e6:	461c      	mov	r4, r3
 802d7e8:	e7f3      	b.n	802d7d2 <__assert_func+0x12>
 802d7ea:	bf00      	nop
 802d7ec:	20000164 	.word	0x20000164
 802d7f0:	08045a54 	.word	0x08045a54
 802d7f4:	08045a61 	.word	0x08045a61
 802d7f8:	08045a8f 	.word	0x08045a8f

0802d7fc <atexit>:
 802d7fc:	2300      	movs	r3, #0
 802d7fe:	4601      	mov	r1, r0
 802d800:	461a      	mov	r2, r3
 802d802:	4618      	mov	r0, r3
 802d804:	f000 bb16 	b.w	802de34 <__register_exitproc>

0802d808 <malloc>:
 802d808:	4b02      	ldr	r3, [pc, #8]	; (802d814 <malloc+0xc>)
 802d80a:	4601      	mov	r1, r0
 802d80c:	6818      	ldr	r0, [r3, #0]
 802d80e:	f000 b82b 	b.w	802d868 <_malloc_r>
 802d812:	bf00      	nop
 802d814:	20000164 	.word	0x20000164

0802d818 <free>:
 802d818:	4b02      	ldr	r3, [pc, #8]	; (802d824 <free+0xc>)
 802d81a:	4601      	mov	r1, r0
 802d81c:	6818      	ldr	r0, [r3, #0]
 802d81e:	f000 bb67 	b.w	802def0 <_free_r>
 802d822:	bf00      	nop
 802d824:	20000164 	.word	0x20000164

0802d828 <sbrk_aligned>:
 802d828:	b570      	push	{r4, r5, r6, lr}
 802d82a:	4e0e      	ldr	r6, [pc, #56]	; (802d864 <sbrk_aligned+0x3c>)
 802d82c:	460c      	mov	r4, r1
 802d82e:	6831      	ldr	r1, [r6, #0]
 802d830:	4605      	mov	r5, r0
 802d832:	b911      	cbnz	r1, 802d83a <sbrk_aligned+0x12>
 802d834:	f000 faa0 	bl	802dd78 <_sbrk_r>
 802d838:	6030      	str	r0, [r6, #0]
 802d83a:	4621      	mov	r1, r4
 802d83c:	4628      	mov	r0, r5
 802d83e:	f000 fa9b 	bl	802dd78 <_sbrk_r>
 802d842:	1c43      	adds	r3, r0, #1
 802d844:	d00a      	beq.n	802d85c <sbrk_aligned+0x34>
 802d846:	1cc4      	adds	r4, r0, #3
 802d848:	f024 0403 	bic.w	r4, r4, #3
 802d84c:	42a0      	cmp	r0, r4
 802d84e:	d007      	beq.n	802d860 <sbrk_aligned+0x38>
 802d850:	1a21      	subs	r1, r4, r0
 802d852:	4628      	mov	r0, r5
 802d854:	f000 fa90 	bl	802dd78 <_sbrk_r>
 802d858:	3001      	adds	r0, #1
 802d85a:	d101      	bne.n	802d860 <sbrk_aligned+0x38>
 802d85c:	f04f 34ff 	mov.w	r4, #4294967295
 802d860:	4620      	mov	r0, r4
 802d862:	bd70      	pop	{r4, r5, r6, pc}
 802d864:	200141ac 	.word	0x200141ac

0802d868 <_malloc_r>:
 802d868:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802d86c:	1ccd      	adds	r5, r1, #3
 802d86e:	f025 0503 	bic.w	r5, r5, #3
 802d872:	3508      	adds	r5, #8
 802d874:	2d0c      	cmp	r5, #12
 802d876:	bf38      	it	cc
 802d878:	250c      	movcc	r5, #12
 802d87a:	2d00      	cmp	r5, #0
 802d87c:	4607      	mov	r7, r0
 802d87e:	db01      	blt.n	802d884 <_malloc_r+0x1c>
 802d880:	42a9      	cmp	r1, r5
 802d882:	d905      	bls.n	802d890 <_malloc_r+0x28>
 802d884:	230c      	movs	r3, #12
 802d886:	603b      	str	r3, [r7, #0]
 802d888:	2600      	movs	r6, #0
 802d88a:	4630      	mov	r0, r6
 802d88c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802d890:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802d964 <_malloc_r+0xfc>
 802d894:	f000 f868 	bl	802d968 <__malloc_lock>
 802d898:	f8d8 3000 	ldr.w	r3, [r8]
 802d89c:	461c      	mov	r4, r3
 802d89e:	bb5c      	cbnz	r4, 802d8f8 <_malloc_r+0x90>
 802d8a0:	4629      	mov	r1, r5
 802d8a2:	4638      	mov	r0, r7
 802d8a4:	f7ff ffc0 	bl	802d828 <sbrk_aligned>
 802d8a8:	1c43      	adds	r3, r0, #1
 802d8aa:	4604      	mov	r4, r0
 802d8ac:	d155      	bne.n	802d95a <_malloc_r+0xf2>
 802d8ae:	f8d8 4000 	ldr.w	r4, [r8]
 802d8b2:	4626      	mov	r6, r4
 802d8b4:	2e00      	cmp	r6, #0
 802d8b6:	d145      	bne.n	802d944 <_malloc_r+0xdc>
 802d8b8:	2c00      	cmp	r4, #0
 802d8ba:	d048      	beq.n	802d94e <_malloc_r+0xe6>
 802d8bc:	6823      	ldr	r3, [r4, #0]
 802d8be:	4631      	mov	r1, r6
 802d8c0:	4638      	mov	r0, r7
 802d8c2:	eb04 0903 	add.w	r9, r4, r3
 802d8c6:	f000 fa57 	bl	802dd78 <_sbrk_r>
 802d8ca:	4581      	cmp	r9, r0
 802d8cc:	d13f      	bne.n	802d94e <_malloc_r+0xe6>
 802d8ce:	6821      	ldr	r1, [r4, #0]
 802d8d0:	1a6d      	subs	r5, r5, r1
 802d8d2:	4629      	mov	r1, r5
 802d8d4:	4638      	mov	r0, r7
 802d8d6:	f7ff ffa7 	bl	802d828 <sbrk_aligned>
 802d8da:	3001      	adds	r0, #1
 802d8dc:	d037      	beq.n	802d94e <_malloc_r+0xe6>
 802d8de:	6823      	ldr	r3, [r4, #0]
 802d8e0:	442b      	add	r3, r5
 802d8e2:	6023      	str	r3, [r4, #0]
 802d8e4:	f8d8 3000 	ldr.w	r3, [r8]
 802d8e8:	2b00      	cmp	r3, #0
 802d8ea:	d038      	beq.n	802d95e <_malloc_r+0xf6>
 802d8ec:	685a      	ldr	r2, [r3, #4]
 802d8ee:	42a2      	cmp	r2, r4
 802d8f0:	d12b      	bne.n	802d94a <_malloc_r+0xe2>
 802d8f2:	2200      	movs	r2, #0
 802d8f4:	605a      	str	r2, [r3, #4]
 802d8f6:	e00f      	b.n	802d918 <_malloc_r+0xb0>
 802d8f8:	6822      	ldr	r2, [r4, #0]
 802d8fa:	1b52      	subs	r2, r2, r5
 802d8fc:	d41f      	bmi.n	802d93e <_malloc_r+0xd6>
 802d8fe:	2a0b      	cmp	r2, #11
 802d900:	d917      	bls.n	802d932 <_malloc_r+0xca>
 802d902:	1961      	adds	r1, r4, r5
 802d904:	42a3      	cmp	r3, r4
 802d906:	6025      	str	r5, [r4, #0]
 802d908:	bf18      	it	ne
 802d90a:	6059      	strne	r1, [r3, #4]
 802d90c:	6863      	ldr	r3, [r4, #4]
 802d90e:	bf08      	it	eq
 802d910:	f8c8 1000 	streq.w	r1, [r8]
 802d914:	5162      	str	r2, [r4, r5]
 802d916:	604b      	str	r3, [r1, #4]
 802d918:	4638      	mov	r0, r7
 802d91a:	f104 060b 	add.w	r6, r4, #11
 802d91e:	f000 f829 	bl	802d974 <__malloc_unlock>
 802d922:	f026 0607 	bic.w	r6, r6, #7
 802d926:	1d23      	adds	r3, r4, #4
 802d928:	1af2      	subs	r2, r6, r3
 802d92a:	d0ae      	beq.n	802d88a <_malloc_r+0x22>
 802d92c:	1b9b      	subs	r3, r3, r6
 802d92e:	50a3      	str	r3, [r4, r2]
 802d930:	e7ab      	b.n	802d88a <_malloc_r+0x22>
 802d932:	42a3      	cmp	r3, r4
 802d934:	6862      	ldr	r2, [r4, #4]
 802d936:	d1dd      	bne.n	802d8f4 <_malloc_r+0x8c>
 802d938:	f8c8 2000 	str.w	r2, [r8]
 802d93c:	e7ec      	b.n	802d918 <_malloc_r+0xb0>
 802d93e:	4623      	mov	r3, r4
 802d940:	6864      	ldr	r4, [r4, #4]
 802d942:	e7ac      	b.n	802d89e <_malloc_r+0x36>
 802d944:	4634      	mov	r4, r6
 802d946:	6876      	ldr	r6, [r6, #4]
 802d948:	e7b4      	b.n	802d8b4 <_malloc_r+0x4c>
 802d94a:	4613      	mov	r3, r2
 802d94c:	e7cc      	b.n	802d8e8 <_malloc_r+0x80>
 802d94e:	230c      	movs	r3, #12
 802d950:	603b      	str	r3, [r7, #0]
 802d952:	4638      	mov	r0, r7
 802d954:	f000 f80e 	bl	802d974 <__malloc_unlock>
 802d958:	e797      	b.n	802d88a <_malloc_r+0x22>
 802d95a:	6025      	str	r5, [r4, #0]
 802d95c:	e7dc      	b.n	802d918 <_malloc_r+0xb0>
 802d95e:	605b      	str	r3, [r3, #4]
 802d960:	deff      	udf	#255	; 0xff
 802d962:	bf00      	nop
 802d964:	200141a8 	.word	0x200141a8

0802d968 <__malloc_lock>:
 802d968:	4801      	ldr	r0, [pc, #4]	; (802d970 <__malloc_lock+0x8>)
 802d96a:	f000 ba52 	b.w	802de12 <__retarget_lock_acquire_recursive>
 802d96e:	bf00      	nop
 802d970:	200142f1 	.word	0x200142f1

0802d974 <__malloc_unlock>:
 802d974:	4801      	ldr	r0, [pc, #4]	; (802d97c <__malloc_unlock+0x8>)
 802d976:	f000 ba4d 	b.w	802de14 <__retarget_lock_release_recursive>
 802d97a:	bf00      	nop
 802d97c:	200142f1 	.word	0x200142f1

0802d980 <__cxa_atexit>:
 802d980:	b510      	push	{r4, lr}
 802d982:	4c05      	ldr	r4, [pc, #20]	; (802d998 <__cxa_atexit+0x18>)
 802d984:	4613      	mov	r3, r2
 802d986:	b12c      	cbz	r4, 802d994 <__cxa_atexit+0x14>
 802d988:	460a      	mov	r2, r1
 802d98a:	4601      	mov	r1, r0
 802d98c:	2002      	movs	r0, #2
 802d98e:	f000 fa51 	bl	802de34 <__register_exitproc>
 802d992:	bd10      	pop	{r4, pc}
 802d994:	4620      	mov	r0, r4
 802d996:	e7fc      	b.n	802d992 <__cxa_atexit+0x12>
 802d998:	0802de35 	.word	0x0802de35

0802d99c <std>:
 802d99c:	2300      	movs	r3, #0
 802d99e:	b510      	push	{r4, lr}
 802d9a0:	4604      	mov	r4, r0
 802d9a2:	e9c0 3300 	strd	r3, r3, [r0]
 802d9a6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802d9aa:	6083      	str	r3, [r0, #8]
 802d9ac:	8181      	strh	r1, [r0, #12]
 802d9ae:	6643      	str	r3, [r0, #100]	; 0x64
 802d9b0:	81c2      	strh	r2, [r0, #14]
 802d9b2:	6183      	str	r3, [r0, #24]
 802d9b4:	4619      	mov	r1, r3
 802d9b6:	2208      	movs	r2, #8
 802d9b8:	305c      	adds	r0, #92	; 0x5c
 802d9ba:	f000 f906 	bl	802dbca <memset>
 802d9be:	4b0d      	ldr	r3, [pc, #52]	; (802d9f4 <std+0x58>)
 802d9c0:	6263      	str	r3, [r4, #36]	; 0x24
 802d9c2:	4b0d      	ldr	r3, [pc, #52]	; (802d9f8 <std+0x5c>)
 802d9c4:	62a3      	str	r3, [r4, #40]	; 0x28
 802d9c6:	4b0d      	ldr	r3, [pc, #52]	; (802d9fc <std+0x60>)
 802d9c8:	62e3      	str	r3, [r4, #44]	; 0x2c
 802d9ca:	4b0d      	ldr	r3, [pc, #52]	; (802da00 <std+0x64>)
 802d9cc:	6323      	str	r3, [r4, #48]	; 0x30
 802d9ce:	4b0d      	ldr	r3, [pc, #52]	; (802da04 <std+0x68>)
 802d9d0:	6224      	str	r4, [r4, #32]
 802d9d2:	429c      	cmp	r4, r3
 802d9d4:	d006      	beq.n	802d9e4 <std+0x48>
 802d9d6:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802d9da:	4294      	cmp	r4, r2
 802d9dc:	d002      	beq.n	802d9e4 <std+0x48>
 802d9de:	33d0      	adds	r3, #208	; 0xd0
 802d9e0:	429c      	cmp	r4, r3
 802d9e2:	d105      	bne.n	802d9f0 <std+0x54>
 802d9e4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802d9e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802d9ec:	f000 ba10 	b.w	802de10 <__retarget_lock_init_recursive>
 802d9f0:	bd10      	pop	{r4, pc}
 802d9f2:	bf00      	nop
 802d9f4:	0802db45 	.word	0x0802db45
 802d9f8:	0802db67 	.word	0x0802db67
 802d9fc:	0802db9f 	.word	0x0802db9f
 802da00:	0802dbc3 	.word	0x0802dbc3
 802da04:	200141b0 	.word	0x200141b0

0802da08 <stdio_exit_handler>:
 802da08:	4a02      	ldr	r2, [pc, #8]	; (802da14 <stdio_exit_handler+0xc>)
 802da0a:	4903      	ldr	r1, [pc, #12]	; (802da18 <stdio_exit_handler+0x10>)
 802da0c:	4803      	ldr	r0, [pc, #12]	; (802da1c <stdio_exit_handler+0x14>)
 802da0e:	f000 b87b 	b.w	802db08 <_fwalk_sglue>
 802da12:	bf00      	nop
 802da14:	2000010c 	.word	0x2000010c
 802da18:	0802e63d 	.word	0x0802e63d
 802da1c:	20000118 	.word	0x20000118

0802da20 <cleanup_stdio>:
 802da20:	6841      	ldr	r1, [r0, #4]
 802da22:	4b0c      	ldr	r3, [pc, #48]	; (802da54 <cleanup_stdio+0x34>)
 802da24:	4299      	cmp	r1, r3
 802da26:	b510      	push	{r4, lr}
 802da28:	4604      	mov	r4, r0
 802da2a:	d001      	beq.n	802da30 <cleanup_stdio+0x10>
 802da2c:	f000 fe06 	bl	802e63c <_fflush_r>
 802da30:	68a1      	ldr	r1, [r4, #8]
 802da32:	4b09      	ldr	r3, [pc, #36]	; (802da58 <cleanup_stdio+0x38>)
 802da34:	4299      	cmp	r1, r3
 802da36:	d002      	beq.n	802da3e <cleanup_stdio+0x1e>
 802da38:	4620      	mov	r0, r4
 802da3a:	f000 fdff 	bl	802e63c <_fflush_r>
 802da3e:	68e1      	ldr	r1, [r4, #12]
 802da40:	4b06      	ldr	r3, [pc, #24]	; (802da5c <cleanup_stdio+0x3c>)
 802da42:	4299      	cmp	r1, r3
 802da44:	d004      	beq.n	802da50 <cleanup_stdio+0x30>
 802da46:	4620      	mov	r0, r4
 802da48:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802da4c:	f000 bdf6 	b.w	802e63c <_fflush_r>
 802da50:	bd10      	pop	{r4, pc}
 802da52:	bf00      	nop
 802da54:	200141b0 	.word	0x200141b0
 802da58:	20014218 	.word	0x20014218
 802da5c:	20014280 	.word	0x20014280

0802da60 <global_stdio_init.part.0>:
 802da60:	b510      	push	{r4, lr}
 802da62:	4b0b      	ldr	r3, [pc, #44]	; (802da90 <global_stdio_init.part.0+0x30>)
 802da64:	4c0b      	ldr	r4, [pc, #44]	; (802da94 <global_stdio_init.part.0+0x34>)
 802da66:	4a0c      	ldr	r2, [pc, #48]	; (802da98 <global_stdio_init.part.0+0x38>)
 802da68:	601a      	str	r2, [r3, #0]
 802da6a:	4620      	mov	r0, r4
 802da6c:	2200      	movs	r2, #0
 802da6e:	2104      	movs	r1, #4
 802da70:	f7ff ff94 	bl	802d99c <std>
 802da74:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802da78:	2201      	movs	r2, #1
 802da7a:	2109      	movs	r1, #9
 802da7c:	f7ff ff8e 	bl	802d99c <std>
 802da80:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802da84:	2202      	movs	r2, #2
 802da86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802da8a:	2112      	movs	r1, #18
 802da8c:	f7ff bf86 	b.w	802d99c <std>
 802da90:	200142e8 	.word	0x200142e8
 802da94:	200141b0 	.word	0x200141b0
 802da98:	0802da09 	.word	0x0802da09

0802da9c <__sfp_lock_acquire>:
 802da9c:	4801      	ldr	r0, [pc, #4]	; (802daa4 <__sfp_lock_acquire+0x8>)
 802da9e:	f000 b9b8 	b.w	802de12 <__retarget_lock_acquire_recursive>
 802daa2:	bf00      	nop
 802daa4:	200142f2 	.word	0x200142f2

0802daa8 <__sfp_lock_release>:
 802daa8:	4801      	ldr	r0, [pc, #4]	; (802dab0 <__sfp_lock_release+0x8>)
 802daaa:	f000 b9b3 	b.w	802de14 <__retarget_lock_release_recursive>
 802daae:	bf00      	nop
 802dab0:	200142f2 	.word	0x200142f2

0802dab4 <__sinit>:
 802dab4:	b510      	push	{r4, lr}
 802dab6:	4604      	mov	r4, r0
 802dab8:	f7ff fff0 	bl	802da9c <__sfp_lock_acquire>
 802dabc:	6a23      	ldr	r3, [r4, #32]
 802dabe:	b11b      	cbz	r3, 802dac8 <__sinit+0x14>
 802dac0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802dac4:	f7ff bff0 	b.w	802daa8 <__sfp_lock_release>
 802dac8:	4b04      	ldr	r3, [pc, #16]	; (802dadc <__sinit+0x28>)
 802daca:	6223      	str	r3, [r4, #32]
 802dacc:	4b04      	ldr	r3, [pc, #16]	; (802dae0 <__sinit+0x2c>)
 802dace:	681b      	ldr	r3, [r3, #0]
 802dad0:	2b00      	cmp	r3, #0
 802dad2:	d1f5      	bne.n	802dac0 <__sinit+0xc>
 802dad4:	f7ff ffc4 	bl	802da60 <global_stdio_init.part.0>
 802dad8:	e7f2      	b.n	802dac0 <__sinit+0xc>
 802dada:	bf00      	nop
 802dadc:	0802da21 	.word	0x0802da21
 802dae0:	200142e8 	.word	0x200142e8

0802dae4 <fiprintf>:
 802dae4:	b40e      	push	{r1, r2, r3}
 802dae6:	b503      	push	{r0, r1, lr}
 802dae8:	4601      	mov	r1, r0
 802daea:	ab03      	add	r3, sp, #12
 802daec:	4805      	ldr	r0, [pc, #20]	; (802db04 <fiprintf+0x20>)
 802daee:	f853 2b04 	ldr.w	r2, [r3], #4
 802daf2:	6800      	ldr	r0, [r0, #0]
 802daf4:	9301      	str	r3, [sp, #4]
 802daf6:	f000 fa71 	bl	802dfdc <_vfiprintf_r>
 802dafa:	b002      	add	sp, #8
 802dafc:	f85d eb04 	ldr.w	lr, [sp], #4
 802db00:	b003      	add	sp, #12
 802db02:	4770      	bx	lr
 802db04:	20000164 	.word	0x20000164

0802db08 <_fwalk_sglue>:
 802db08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802db0c:	4607      	mov	r7, r0
 802db0e:	4688      	mov	r8, r1
 802db10:	4614      	mov	r4, r2
 802db12:	2600      	movs	r6, #0
 802db14:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802db18:	f1b9 0901 	subs.w	r9, r9, #1
 802db1c:	d505      	bpl.n	802db2a <_fwalk_sglue+0x22>
 802db1e:	6824      	ldr	r4, [r4, #0]
 802db20:	2c00      	cmp	r4, #0
 802db22:	d1f7      	bne.n	802db14 <_fwalk_sglue+0xc>
 802db24:	4630      	mov	r0, r6
 802db26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802db2a:	89ab      	ldrh	r3, [r5, #12]
 802db2c:	2b01      	cmp	r3, #1
 802db2e:	d907      	bls.n	802db40 <_fwalk_sglue+0x38>
 802db30:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802db34:	3301      	adds	r3, #1
 802db36:	d003      	beq.n	802db40 <_fwalk_sglue+0x38>
 802db38:	4629      	mov	r1, r5
 802db3a:	4638      	mov	r0, r7
 802db3c:	47c0      	blx	r8
 802db3e:	4306      	orrs	r6, r0
 802db40:	3568      	adds	r5, #104	; 0x68
 802db42:	e7e9      	b.n	802db18 <_fwalk_sglue+0x10>

0802db44 <__sread>:
 802db44:	b510      	push	{r4, lr}
 802db46:	460c      	mov	r4, r1
 802db48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802db4c:	f000 f8ee 	bl	802dd2c <_read_r>
 802db50:	2800      	cmp	r0, #0
 802db52:	bfab      	itete	ge
 802db54:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802db56:	89a3      	ldrhlt	r3, [r4, #12]
 802db58:	181b      	addge	r3, r3, r0
 802db5a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802db5e:	bfac      	ite	ge
 802db60:	6563      	strge	r3, [r4, #84]	; 0x54
 802db62:	81a3      	strhlt	r3, [r4, #12]
 802db64:	bd10      	pop	{r4, pc}

0802db66 <__swrite>:
 802db66:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802db6a:	461f      	mov	r7, r3
 802db6c:	898b      	ldrh	r3, [r1, #12]
 802db6e:	05db      	lsls	r3, r3, #23
 802db70:	4605      	mov	r5, r0
 802db72:	460c      	mov	r4, r1
 802db74:	4616      	mov	r6, r2
 802db76:	d505      	bpl.n	802db84 <__swrite+0x1e>
 802db78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802db7c:	2302      	movs	r3, #2
 802db7e:	2200      	movs	r2, #0
 802db80:	f000 f8c2 	bl	802dd08 <_lseek_r>
 802db84:	89a3      	ldrh	r3, [r4, #12]
 802db86:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802db8a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802db8e:	81a3      	strh	r3, [r4, #12]
 802db90:	4632      	mov	r2, r6
 802db92:	463b      	mov	r3, r7
 802db94:	4628      	mov	r0, r5
 802db96:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802db9a:	f000 b8fd 	b.w	802dd98 <_write_r>

0802db9e <__sseek>:
 802db9e:	b510      	push	{r4, lr}
 802dba0:	460c      	mov	r4, r1
 802dba2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dba6:	f000 f8af 	bl	802dd08 <_lseek_r>
 802dbaa:	1c43      	adds	r3, r0, #1
 802dbac:	89a3      	ldrh	r3, [r4, #12]
 802dbae:	bf15      	itete	ne
 802dbb0:	6560      	strne	r0, [r4, #84]	; 0x54
 802dbb2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802dbb6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802dbba:	81a3      	strheq	r3, [r4, #12]
 802dbbc:	bf18      	it	ne
 802dbbe:	81a3      	strhne	r3, [r4, #12]
 802dbc0:	bd10      	pop	{r4, pc}

0802dbc2 <__sclose>:
 802dbc2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dbc6:	f000 b839 	b.w	802dc3c <_close_r>

0802dbca <memset>:
 802dbca:	4402      	add	r2, r0
 802dbcc:	4603      	mov	r3, r0
 802dbce:	4293      	cmp	r3, r2
 802dbd0:	d100      	bne.n	802dbd4 <memset+0xa>
 802dbd2:	4770      	bx	lr
 802dbd4:	f803 1b01 	strb.w	r1, [r3], #1
 802dbd8:	e7f9      	b.n	802dbce <memset+0x4>

0802dbda <_raise_r>:
 802dbda:	291f      	cmp	r1, #31
 802dbdc:	b538      	push	{r3, r4, r5, lr}
 802dbde:	4604      	mov	r4, r0
 802dbe0:	460d      	mov	r5, r1
 802dbe2:	d904      	bls.n	802dbee <_raise_r+0x14>
 802dbe4:	2316      	movs	r3, #22
 802dbe6:	6003      	str	r3, [r0, #0]
 802dbe8:	f04f 30ff 	mov.w	r0, #4294967295
 802dbec:	bd38      	pop	{r3, r4, r5, pc}
 802dbee:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802dbf0:	b112      	cbz	r2, 802dbf8 <_raise_r+0x1e>
 802dbf2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802dbf6:	b94b      	cbnz	r3, 802dc0c <_raise_r+0x32>
 802dbf8:	4620      	mov	r0, r4
 802dbfa:	f000 f8bb 	bl	802dd74 <_getpid_r>
 802dbfe:	462a      	mov	r2, r5
 802dc00:	4601      	mov	r1, r0
 802dc02:	4620      	mov	r0, r4
 802dc04:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802dc08:	f000 b8a2 	b.w	802dd50 <_kill_r>
 802dc0c:	2b01      	cmp	r3, #1
 802dc0e:	d00a      	beq.n	802dc26 <_raise_r+0x4c>
 802dc10:	1c59      	adds	r1, r3, #1
 802dc12:	d103      	bne.n	802dc1c <_raise_r+0x42>
 802dc14:	2316      	movs	r3, #22
 802dc16:	6003      	str	r3, [r0, #0]
 802dc18:	2001      	movs	r0, #1
 802dc1a:	e7e7      	b.n	802dbec <_raise_r+0x12>
 802dc1c:	2400      	movs	r4, #0
 802dc1e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802dc22:	4628      	mov	r0, r5
 802dc24:	4798      	blx	r3
 802dc26:	2000      	movs	r0, #0
 802dc28:	e7e0      	b.n	802dbec <_raise_r+0x12>
	...

0802dc2c <raise>:
 802dc2c:	4b02      	ldr	r3, [pc, #8]	; (802dc38 <raise+0xc>)
 802dc2e:	4601      	mov	r1, r0
 802dc30:	6818      	ldr	r0, [r3, #0]
 802dc32:	f7ff bfd2 	b.w	802dbda <_raise_r>
 802dc36:	bf00      	nop
 802dc38:	20000164 	.word	0x20000164

0802dc3c <_close_r>:
 802dc3c:	b538      	push	{r3, r4, r5, lr}
 802dc3e:	4d06      	ldr	r5, [pc, #24]	; (802dc58 <_close_r+0x1c>)
 802dc40:	2300      	movs	r3, #0
 802dc42:	4604      	mov	r4, r0
 802dc44:	4608      	mov	r0, r1
 802dc46:	602b      	str	r3, [r5, #0]
 802dc48:	f7d4 fd88 	bl	800275c <_close>
 802dc4c:	1c43      	adds	r3, r0, #1
 802dc4e:	d102      	bne.n	802dc56 <_close_r+0x1a>
 802dc50:	682b      	ldr	r3, [r5, #0]
 802dc52:	b103      	cbz	r3, 802dc56 <_close_r+0x1a>
 802dc54:	6023      	str	r3, [r4, #0]
 802dc56:	bd38      	pop	{r3, r4, r5, pc}
 802dc58:	200142ec 	.word	0x200142ec

0802dc5c <_reclaim_reent>:
 802dc5c:	4b29      	ldr	r3, [pc, #164]	; (802dd04 <_reclaim_reent+0xa8>)
 802dc5e:	681b      	ldr	r3, [r3, #0]
 802dc60:	4283      	cmp	r3, r0
 802dc62:	b570      	push	{r4, r5, r6, lr}
 802dc64:	4604      	mov	r4, r0
 802dc66:	d04b      	beq.n	802dd00 <_reclaim_reent+0xa4>
 802dc68:	69c3      	ldr	r3, [r0, #28]
 802dc6a:	b143      	cbz	r3, 802dc7e <_reclaim_reent+0x22>
 802dc6c:	68db      	ldr	r3, [r3, #12]
 802dc6e:	2b00      	cmp	r3, #0
 802dc70:	d144      	bne.n	802dcfc <_reclaim_reent+0xa0>
 802dc72:	69e3      	ldr	r3, [r4, #28]
 802dc74:	6819      	ldr	r1, [r3, #0]
 802dc76:	b111      	cbz	r1, 802dc7e <_reclaim_reent+0x22>
 802dc78:	4620      	mov	r0, r4
 802dc7a:	f000 f939 	bl	802def0 <_free_r>
 802dc7e:	6961      	ldr	r1, [r4, #20]
 802dc80:	b111      	cbz	r1, 802dc88 <_reclaim_reent+0x2c>
 802dc82:	4620      	mov	r0, r4
 802dc84:	f000 f934 	bl	802def0 <_free_r>
 802dc88:	69e1      	ldr	r1, [r4, #28]
 802dc8a:	b111      	cbz	r1, 802dc92 <_reclaim_reent+0x36>
 802dc8c:	4620      	mov	r0, r4
 802dc8e:	f000 f92f 	bl	802def0 <_free_r>
 802dc92:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802dc94:	b111      	cbz	r1, 802dc9c <_reclaim_reent+0x40>
 802dc96:	4620      	mov	r0, r4
 802dc98:	f000 f92a 	bl	802def0 <_free_r>
 802dc9c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802dc9e:	b111      	cbz	r1, 802dca6 <_reclaim_reent+0x4a>
 802dca0:	4620      	mov	r0, r4
 802dca2:	f000 f925 	bl	802def0 <_free_r>
 802dca6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802dca8:	b111      	cbz	r1, 802dcb0 <_reclaim_reent+0x54>
 802dcaa:	4620      	mov	r0, r4
 802dcac:	f000 f920 	bl	802def0 <_free_r>
 802dcb0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802dcb2:	b111      	cbz	r1, 802dcba <_reclaim_reent+0x5e>
 802dcb4:	4620      	mov	r0, r4
 802dcb6:	f000 f91b 	bl	802def0 <_free_r>
 802dcba:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802dcbc:	b111      	cbz	r1, 802dcc4 <_reclaim_reent+0x68>
 802dcbe:	4620      	mov	r0, r4
 802dcc0:	f000 f916 	bl	802def0 <_free_r>
 802dcc4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802dcc6:	b111      	cbz	r1, 802dcce <_reclaim_reent+0x72>
 802dcc8:	4620      	mov	r0, r4
 802dcca:	f000 f911 	bl	802def0 <_free_r>
 802dcce:	6a23      	ldr	r3, [r4, #32]
 802dcd0:	b1b3      	cbz	r3, 802dd00 <_reclaim_reent+0xa4>
 802dcd2:	4620      	mov	r0, r4
 802dcd4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802dcd8:	4718      	bx	r3
 802dcda:	5949      	ldr	r1, [r1, r5]
 802dcdc:	b941      	cbnz	r1, 802dcf0 <_reclaim_reent+0x94>
 802dcde:	3504      	adds	r5, #4
 802dce0:	69e3      	ldr	r3, [r4, #28]
 802dce2:	2d80      	cmp	r5, #128	; 0x80
 802dce4:	68d9      	ldr	r1, [r3, #12]
 802dce6:	d1f8      	bne.n	802dcda <_reclaim_reent+0x7e>
 802dce8:	4620      	mov	r0, r4
 802dcea:	f000 f901 	bl	802def0 <_free_r>
 802dcee:	e7c0      	b.n	802dc72 <_reclaim_reent+0x16>
 802dcf0:	680e      	ldr	r6, [r1, #0]
 802dcf2:	4620      	mov	r0, r4
 802dcf4:	f000 f8fc 	bl	802def0 <_free_r>
 802dcf8:	4631      	mov	r1, r6
 802dcfa:	e7ef      	b.n	802dcdc <_reclaim_reent+0x80>
 802dcfc:	2500      	movs	r5, #0
 802dcfe:	e7ef      	b.n	802dce0 <_reclaim_reent+0x84>
 802dd00:	bd70      	pop	{r4, r5, r6, pc}
 802dd02:	bf00      	nop
 802dd04:	20000164 	.word	0x20000164

0802dd08 <_lseek_r>:
 802dd08:	b538      	push	{r3, r4, r5, lr}
 802dd0a:	4d07      	ldr	r5, [pc, #28]	; (802dd28 <_lseek_r+0x20>)
 802dd0c:	4604      	mov	r4, r0
 802dd0e:	4608      	mov	r0, r1
 802dd10:	4611      	mov	r1, r2
 802dd12:	2200      	movs	r2, #0
 802dd14:	602a      	str	r2, [r5, #0]
 802dd16:	461a      	mov	r2, r3
 802dd18:	f7d4 fd2c 	bl	8002774 <_lseek>
 802dd1c:	1c43      	adds	r3, r0, #1
 802dd1e:	d102      	bne.n	802dd26 <_lseek_r+0x1e>
 802dd20:	682b      	ldr	r3, [r5, #0]
 802dd22:	b103      	cbz	r3, 802dd26 <_lseek_r+0x1e>
 802dd24:	6023      	str	r3, [r4, #0]
 802dd26:	bd38      	pop	{r3, r4, r5, pc}
 802dd28:	200142ec 	.word	0x200142ec

0802dd2c <_read_r>:
 802dd2c:	b538      	push	{r3, r4, r5, lr}
 802dd2e:	4d07      	ldr	r5, [pc, #28]	; (802dd4c <_read_r+0x20>)
 802dd30:	4604      	mov	r4, r0
 802dd32:	4608      	mov	r0, r1
 802dd34:	4611      	mov	r1, r2
 802dd36:	2200      	movs	r2, #0
 802dd38:	602a      	str	r2, [r5, #0]
 802dd3a:	461a      	mov	r2, r3
 802dd3c:	f7d4 fcf2 	bl	8002724 <_read>
 802dd40:	1c43      	adds	r3, r0, #1
 802dd42:	d102      	bne.n	802dd4a <_read_r+0x1e>
 802dd44:	682b      	ldr	r3, [r5, #0]
 802dd46:	b103      	cbz	r3, 802dd4a <_read_r+0x1e>
 802dd48:	6023      	str	r3, [r4, #0]
 802dd4a:	bd38      	pop	{r3, r4, r5, pc}
 802dd4c:	200142ec 	.word	0x200142ec

0802dd50 <_kill_r>:
 802dd50:	b538      	push	{r3, r4, r5, lr}
 802dd52:	4d07      	ldr	r5, [pc, #28]	; (802dd70 <_kill_r+0x20>)
 802dd54:	2300      	movs	r3, #0
 802dd56:	4604      	mov	r4, r0
 802dd58:	4608      	mov	r0, r1
 802dd5a:	4611      	mov	r1, r2
 802dd5c:	602b      	str	r3, [r5, #0]
 802dd5e:	f7d4 fcd3 	bl	8002708 <_kill>
 802dd62:	1c43      	adds	r3, r0, #1
 802dd64:	d102      	bne.n	802dd6c <_kill_r+0x1c>
 802dd66:	682b      	ldr	r3, [r5, #0]
 802dd68:	b103      	cbz	r3, 802dd6c <_kill_r+0x1c>
 802dd6a:	6023      	str	r3, [r4, #0]
 802dd6c:	bd38      	pop	{r3, r4, r5, pc}
 802dd6e:	bf00      	nop
 802dd70:	200142ec 	.word	0x200142ec

0802dd74 <_getpid_r>:
 802dd74:	f7d4 bcc6 	b.w	8002704 <_getpid>

0802dd78 <_sbrk_r>:
 802dd78:	b538      	push	{r3, r4, r5, lr}
 802dd7a:	4d06      	ldr	r5, [pc, #24]	; (802dd94 <_sbrk_r+0x1c>)
 802dd7c:	2300      	movs	r3, #0
 802dd7e:	4604      	mov	r4, r0
 802dd80:	4608      	mov	r0, r1
 802dd82:	602b      	str	r3, [r5, #0]
 802dd84:	f7d4 fcf8 	bl	8002778 <_sbrk>
 802dd88:	1c43      	adds	r3, r0, #1
 802dd8a:	d102      	bne.n	802dd92 <_sbrk_r+0x1a>
 802dd8c:	682b      	ldr	r3, [r5, #0]
 802dd8e:	b103      	cbz	r3, 802dd92 <_sbrk_r+0x1a>
 802dd90:	6023      	str	r3, [r4, #0]
 802dd92:	bd38      	pop	{r3, r4, r5, pc}
 802dd94:	200142ec 	.word	0x200142ec

0802dd98 <_write_r>:
 802dd98:	b538      	push	{r3, r4, r5, lr}
 802dd9a:	4d07      	ldr	r5, [pc, #28]	; (802ddb8 <_write_r+0x20>)
 802dd9c:	4604      	mov	r4, r0
 802dd9e:	4608      	mov	r0, r1
 802dda0:	4611      	mov	r1, r2
 802dda2:	2200      	movs	r2, #0
 802dda4:	602a      	str	r2, [r5, #0]
 802dda6:	461a      	mov	r2, r3
 802dda8:	f7d4 fcca 	bl	8002740 <_write>
 802ddac:	1c43      	adds	r3, r0, #1
 802ddae:	d102      	bne.n	802ddb6 <_write_r+0x1e>
 802ddb0:	682b      	ldr	r3, [r5, #0]
 802ddb2:	b103      	cbz	r3, 802ddb6 <_write_r+0x1e>
 802ddb4:	6023      	str	r3, [r4, #0]
 802ddb6:	bd38      	pop	{r3, r4, r5, pc}
 802ddb8:	200142ec 	.word	0x200142ec

0802ddbc <__errno>:
 802ddbc:	4b01      	ldr	r3, [pc, #4]	; (802ddc4 <__errno+0x8>)
 802ddbe:	6818      	ldr	r0, [r3, #0]
 802ddc0:	4770      	bx	lr
 802ddc2:	bf00      	nop
 802ddc4:	20000164 	.word	0x20000164

0802ddc8 <__libc_init_array>:
 802ddc8:	b570      	push	{r4, r5, r6, lr}
 802ddca:	4d0d      	ldr	r5, [pc, #52]	; (802de00 <__libc_init_array+0x38>)
 802ddcc:	4c0d      	ldr	r4, [pc, #52]	; (802de04 <__libc_init_array+0x3c>)
 802ddce:	1b64      	subs	r4, r4, r5
 802ddd0:	10a4      	asrs	r4, r4, #2
 802ddd2:	2600      	movs	r6, #0
 802ddd4:	42a6      	cmp	r6, r4
 802ddd6:	d109      	bne.n	802ddec <__libc_init_array+0x24>
 802ddd8:	4d0b      	ldr	r5, [pc, #44]	; (802de08 <__libc_init_array+0x40>)
 802ddda:	4c0c      	ldr	r4, [pc, #48]	; (802de0c <__libc_init_array+0x44>)
 802dddc:	f000 fd70 	bl	802e8c0 <_init>
 802dde0:	1b64      	subs	r4, r4, r5
 802dde2:	10a4      	asrs	r4, r4, #2
 802dde4:	2600      	movs	r6, #0
 802dde6:	42a6      	cmp	r6, r4
 802dde8:	d105      	bne.n	802ddf6 <__libc_init_array+0x2e>
 802ddea:	bd70      	pop	{r4, r5, r6, pc}
 802ddec:	f855 3b04 	ldr.w	r3, [r5], #4
 802ddf0:	4798      	blx	r3
 802ddf2:	3601      	adds	r6, #1
 802ddf4:	e7ee      	b.n	802ddd4 <__libc_init_array+0xc>
 802ddf6:	f855 3b04 	ldr.w	r3, [r5], #4
 802ddfa:	4798      	blx	r3
 802ddfc:	3601      	adds	r6, #1
 802ddfe:	e7f2      	b.n	802dde6 <__libc_init_array+0x1e>
 802de00:	080cf238 	.word	0x080cf238
 802de04:	080cf238 	.word	0x080cf238
 802de08:	080cf238 	.word	0x080cf238
 802de0c:	080cf24c 	.word	0x080cf24c

0802de10 <__retarget_lock_init_recursive>:
 802de10:	4770      	bx	lr

0802de12 <__retarget_lock_acquire_recursive>:
 802de12:	4770      	bx	lr

0802de14 <__retarget_lock_release_recursive>:
 802de14:	4770      	bx	lr

0802de16 <memcpy>:
 802de16:	440a      	add	r2, r1
 802de18:	4291      	cmp	r1, r2
 802de1a:	f100 33ff 	add.w	r3, r0, #4294967295
 802de1e:	d100      	bne.n	802de22 <memcpy+0xc>
 802de20:	4770      	bx	lr
 802de22:	b510      	push	{r4, lr}
 802de24:	f811 4b01 	ldrb.w	r4, [r1], #1
 802de28:	f803 4f01 	strb.w	r4, [r3, #1]!
 802de2c:	4291      	cmp	r1, r2
 802de2e:	d1f9      	bne.n	802de24 <memcpy+0xe>
 802de30:	bd10      	pop	{r4, pc}
	...

0802de34 <__register_exitproc>:
 802de34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802de38:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802deec <__register_exitproc+0xb8>
 802de3c:	4606      	mov	r6, r0
 802de3e:	f8d8 0000 	ldr.w	r0, [r8]
 802de42:	461f      	mov	r7, r3
 802de44:	460d      	mov	r5, r1
 802de46:	4691      	mov	r9, r2
 802de48:	f7ff ffe3 	bl	802de12 <__retarget_lock_acquire_recursive>
 802de4c:	4b23      	ldr	r3, [pc, #140]	; (802dedc <__register_exitproc+0xa8>)
 802de4e:	681c      	ldr	r4, [r3, #0]
 802de50:	b934      	cbnz	r4, 802de60 <__register_exitproc+0x2c>
 802de52:	4c23      	ldr	r4, [pc, #140]	; (802dee0 <__register_exitproc+0xac>)
 802de54:	601c      	str	r4, [r3, #0]
 802de56:	4b23      	ldr	r3, [pc, #140]	; (802dee4 <__register_exitproc+0xb0>)
 802de58:	b113      	cbz	r3, 802de60 <__register_exitproc+0x2c>
 802de5a:	681b      	ldr	r3, [r3, #0]
 802de5c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802de60:	6863      	ldr	r3, [r4, #4]
 802de62:	2b1f      	cmp	r3, #31
 802de64:	dd07      	ble.n	802de76 <__register_exitproc+0x42>
 802de66:	f8d8 0000 	ldr.w	r0, [r8]
 802de6a:	f7ff ffd3 	bl	802de14 <__retarget_lock_release_recursive>
 802de6e:	f04f 30ff 	mov.w	r0, #4294967295
 802de72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802de76:	b32e      	cbz	r6, 802dec4 <__register_exitproc+0x90>
 802de78:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802de7c:	b968      	cbnz	r0, 802de9a <__register_exitproc+0x66>
 802de7e:	4b1a      	ldr	r3, [pc, #104]	; (802dee8 <__register_exitproc+0xb4>)
 802de80:	2b00      	cmp	r3, #0
 802de82:	d0f0      	beq.n	802de66 <__register_exitproc+0x32>
 802de84:	f44f 7084 	mov.w	r0, #264	; 0x108
 802de88:	f7ff fcbe 	bl	802d808 <malloc>
 802de8c:	2800      	cmp	r0, #0
 802de8e:	d0ea      	beq.n	802de66 <__register_exitproc+0x32>
 802de90:	2300      	movs	r3, #0
 802de92:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802de96:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802de9a:	6863      	ldr	r3, [r4, #4]
 802de9c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802dea0:	2201      	movs	r2, #1
 802dea2:	409a      	lsls	r2, r3
 802dea4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802dea8:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802deac:	4313      	orrs	r3, r2
 802deae:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802deb2:	2e02      	cmp	r6, #2
 802deb4:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802deb8:	bf02      	ittt	eq
 802deba:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802debe:	4313      	orreq	r3, r2
 802dec0:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802dec4:	6863      	ldr	r3, [r4, #4]
 802dec6:	f8d8 0000 	ldr.w	r0, [r8]
 802deca:	1c5a      	adds	r2, r3, #1
 802decc:	3302      	adds	r3, #2
 802dece:	6062      	str	r2, [r4, #4]
 802ded0:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802ded4:	f7ff ff9e 	bl	802de14 <__retarget_lock_release_recursive>
 802ded8:	2000      	movs	r0, #0
 802deda:	e7ca      	b.n	802de72 <__register_exitproc+0x3e>
 802dedc:	20014380 	.word	0x20014380
 802dee0:	200142f4 	.word	0x200142f4
 802dee4:	08045a90 	.word	0x08045a90
 802dee8:	0802d809 	.word	0x0802d809
 802deec:	20000168 	.word	0x20000168

0802def0 <_free_r>:
 802def0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802def2:	2900      	cmp	r1, #0
 802def4:	d044      	beq.n	802df80 <_free_r+0x90>
 802def6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802defa:	9001      	str	r0, [sp, #4]
 802defc:	2b00      	cmp	r3, #0
 802defe:	f1a1 0404 	sub.w	r4, r1, #4
 802df02:	bfb8      	it	lt
 802df04:	18e4      	addlt	r4, r4, r3
 802df06:	f7ff fd2f 	bl	802d968 <__malloc_lock>
 802df0a:	4a1e      	ldr	r2, [pc, #120]	; (802df84 <_free_r+0x94>)
 802df0c:	9801      	ldr	r0, [sp, #4]
 802df0e:	6813      	ldr	r3, [r2, #0]
 802df10:	b933      	cbnz	r3, 802df20 <_free_r+0x30>
 802df12:	6063      	str	r3, [r4, #4]
 802df14:	6014      	str	r4, [r2, #0]
 802df16:	b003      	add	sp, #12
 802df18:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802df1c:	f7ff bd2a 	b.w	802d974 <__malloc_unlock>
 802df20:	42a3      	cmp	r3, r4
 802df22:	d908      	bls.n	802df36 <_free_r+0x46>
 802df24:	6825      	ldr	r5, [r4, #0]
 802df26:	1961      	adds	r1, r4, r5
 802df28:	428b      	cmp	r3, r1
 802df2a:	bf01      	itttt	eq
 802df2c:	6819      	ldreq	r1, [r3, #0]
 802df2e:	685b      	ldreq	r3, [r3, #4]
 802df30:	1949      	addeq	r1, r1, r5
 802df32:	6021      	streq	r1, [r4, #0]
 802df34:	e7ed      	b.n	802df12 <_free_r+0x22>
 802df36:	461a      	mov	r2, r3
 802df38:	685b      	ldr	r3, [r3, #4]
 802df3a:	b10b      	cbz	r3, 802df40 <_free_r+0x50>
 802df3c:	42a3      	cmp	r3, r4
 802df3e:	d9fa      	bls.n	802df36 <_free_r+0x46>
 802df40:	6811      	ldr	r1, [r2, #0]
 802df42:	1855      	adds	r5, r2, r1
 802df44:	42a5      	cmp	r5, r4
 802df46:	d10b      	bne.n	802df60 <_free_r+0x70>
 802df48:	6824      	ldr	r4, [r4, #0]
 802df4a:	4421      	add	r1, r4
 802df4c:	1854      	adds	r4, r2, r1
 802df4e:	42a3      	cmp	r3, r4
 802df50:	6011      	str	r1, [r2, #0]
 802df52:	d1e0      	bne.n	802df16 <_free_r+0x26>
 802df54:	681c      	ldr	r4, [r3, #0]
 802df56:	685b      	ldr	r3, [r3, #4]
 802df58:	6053      	str	r3, [r2, #4]
 802df5a:	440c      	add	r4, r1
 802df5c:	6014      	str	r4, [r2, #0]
 802df5e:	e7da      	b.n	802df16 <_free_r+0x26>
 802df60:	d902      	bls.n	802df68 <_free_r+0x78>
 802df62:	230c      	movs	r3, #12
 802df64:	6003      	str	r3, [r0, #0]
 802df66:	e7d6      	b.n	802df16 <_free_r+0x26>
 802df68:	6825      	ldr	r5, [r4, #0]
 802df6a:	1961      	adds	r1, r4, r5
 802df6c:	428b      	cmp	r3, r1
 802df6e:	bf04      	itt	eq
 802df70:	6819      	ldreq	r1, [r3, #0]
 802df72:	685b      	ldreq	r3, [r3, #4]
 802df74:	6063      	str	r3, [r4, #4]
 802df76:	bf04      	itt	eq
 802df78:	1949      	addeq	r1, r1, r5
 802df7a:	6021      	streq	r1, [r4, #0]
 802df7c:	6054      	str	r4, [r2, #4]
 802df7e:	e7ca      	b.n	802df16 <_free_r+0x26>
 802df80:	b003      	add	sp, #12
 802df82:	bd30      	pop	{r4, r5, pc}
 802df84:	200141a8 	.word	0x200141a8

0802df88 <__sfputc_r>:
 802df88:	6893      	ldr	r3, [r2, #8]
 802df8a:	3b01      	subs	r3, #1
 802df8c:	2b00      	cmp	r3, #0
 802df8e:	b410      	push	{r4}
 802df90:	6093      	str	r3, [r2, #8]
 802df92:	da08      	bge.n	802dfa6 <__sfputc_r+0x1e>
 802df94:	6994      	ldr	r4, [r2, #24]
 802df96:	42a3      	cmp	r3, r4
 802df98:	db01      	blt.n	802df9e <__sfputc_r+0x16>
 802df9a:	290a      	cmp	r1, #10
 802df9c:	d103      	bne.n	802dfa6 <__sfputc_r+0x1e>
 802df9e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802dfa2:	f000 bb73 	b.w	802e68c <__swbuf_r>
 802dfa6:	6813      	ldr	r3, [r2, #0]
 802dfa8:	1c58      	adds	r0, r3, #1
 802dfaa:	6010      	str	r0, [r2, #0]
 802dfac:	7019      	strb	r1, [r3, #0]
 802dfae:	4608      	mov	r0, r1
 802dfb0:	f85d 4b04 	ldr.w	r4, [sp], #4
 802dfb4:	4770      	bx	lr

0802dfb6 <__sfputs_r>:
 802dfb6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802dfb8:	4606      	mov	r6, r0
 802dfba:	460f      	mov	r7, r1
 802dfbc:	4614      	mov	r4, r2
 802dfbe:	18d5      	adds	r5, r2, r3
 802dfc0:	42ac      	cmp	r4, r5
 802dfc2:	d101      	bne.n	802dfc8 <__sfputs_r+0x12>
 802dfc4:	2000      	movs	r0, #0
 802dfc6:	e007      	b.n	802dfd8 <__sfputs_r+0x22>
 802dfc8:	f814 1b01 	ldrb.w	r1, [r4], #1
 802dfcc:	463a      	mov	r2, r7
 802dfce:	4630      	mov	r0, r6
 802dfd0:	f7ff ffda 	bl	802df88 <__sfputc_r>
 802dfd4:	1c43      	adds	r3, r0, #1
 802dfd6:	d1f3      	bne.n	802dfc0 <__sfputs_r+0xa>
 802dfd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802dfdc <_vfiprintf_r>:
 802dfdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802dfe0:	460d      	mov	r5, r1
 802dfe2:	b09d      	sub	sp, #116	; 0x74
 802dfe4:	4614      	mov	r4, r2
 802dfe6:	4698      	mov	r8, r3
 802dfe8:	4606      	mov	r6, r0
 802dfea:	b118      	cbz	r0, 802dff4 <_vfiprintf_r+0x18>
 802dfec:	6a03      	ldr	r3, [r0, #32]
 802dfee:	b90b      	cbnz	r3, 802dff4 <_vfiprintf_r+0x18>
 802dff0:	f7ff fd60 	bl	802dab4 <__sinit>
 802dff4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802dff6:	07d9      	lsls	r1, r3, #31
 802dff8:	d405      	bmi.n	802e006 <_vfiprintf_r+0x2a>
 802dffa:	89ab      	ldrh	r3, [r5, #12]
 802dffc:	059a      	lsls	r2, r3, #22
 802dffe:	d402      	bmi.n	802e006 <_vfiprintf_r+0x2a>
 802e000:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e002:	f7ff ff06 	bl	802de12 <__retarget_lock_acquire_recursive>
 802e006:	89ab      	ldrh	r3, [r5, #12]
 802e008:	071b      	lsls	r3, r3, #28
 802e00a:	d501      	bpl.n	802e010 <_vfiprintf_r+0x34>
 802e00c:	692b      	ldr	r3, [r5, #16]
 802e00e:	b99b      	cbnz	r3, 802e038 <_vfiprintf_r+0x5c>
 802e010:	4629      	mov	r1, r5
 802e012:	4630      	mov	r0, r6
 802e014:	f000 fb78 	bl	802e708 <__swsetup_r>
 802e018:	b170      	cbz	r0, 802e038 <_vfiprintf_r+0x5c>
 802e01a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e01c:	07dc      	lsls	r4, r3, #31
 802e01e:	d504      	bpl.n	802e02a <_vfiprintf_r+0x4e>
 802e020:	f04f 30ff 	mov.w	r0, #4294967295
 802e024:	b01d      	add	sp, #116	; 0x74
 802e026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e02a:	89ab      	ldrh	r3, [r5, #12]
 802e02c:	0598      	lsls	r0, r3, #22
 802e02e:	d4f7      	bmi.n	802e020 <_vfiprintf_r+0x44>
 802e030:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e032:	f7ff feef 	bl	802de14 <__retarget_lock_release_recursive>
 802e036:	e7f3      	b.n	802e020 <_vfiprintf_r+0x44>
 802e038:	2300      	movs	r3, #0
 802e03a:	9309      	str	r3, [sp, #36]	; 0x24
 802e03c:	2320      	movs	r3, #32
 802e03e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802e042:	f8cd 800c 	str.w	r8, [sp, #12]
 802e046:	2330      	movs	r3, #48	; 0x30
 802e048:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802e1fc <_vfiprintf_r+0x220>
 802e04c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802e050:	f04f 0901 	mov.w	r9, #1
 802e054:	4623      	mov	r3, r4
 802e056:	469a      	mov	sl, r3
 802e058:	f813 2b01 	ldrb.w	r2, [r3], #1
 802e05c:	b10a      	cbz	r2, 802e062 <_vfiprintf_r+0x86>
 802e05e:	2a25      	cmp	r2, #37	; 0x25
 802e060:	d1f9      	bne.n	802e056 <_vfiprintf_r+0x7a>
 802e062:	ebba 0b04 	subs.w	fp, sl, r4
 802e066:	d00b      	beq.n	802e080 <_vfiprintf_r+0xa4>
 802e068:	465b      	mov	r3, fp
 802e06a:	4622      	mov	r2, r4
 802e06c:	4629      	mov	r1, r5
 802e06e:	4630      	mov	r0, r6
 802e070:	f7ff ffa1 	bl	802dfb6 <__sfputs_r>
 802e074:	3001      	adds	r0, #1
 802e076:	f000 80a9 	beq.w	802e1cc <_vfiprintf_r+0x1f0>
 802e07a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802e07c:	445a      	add	r2, fp
 802e07e:	9209      	str	r2, [sp, #36]	; 0x24
 802e080:	f89a 3000 	ldrb.w	r3, [sl]
 802e084:	2b00      	cmp	r3, #0
 802e086:	f000 80a1 	beq.w	802e1cc <_vfiprintf_r+0x1f0>
 802e08a:	2300      	movs	r3, #0
 802e08c:	f04f 32ff 	mov.w	r2, #4294967295
 802e090:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802e094:	f10a 0a01 	add.w	sl, sl, #1
 802e098:	9304      	str	r3, [sp, #16]
 802e09a:	9307      	str	r3, [sp, #28]
 802e09c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802e0a0:	931a      	str	r3, [sp, #104]	; 0x68
 802e0a2:	4654      	mov	r4, sl
 802e0a4:	2205      	movs	r2, #5
 802e0a6:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e0aa:	4854      	ldr	r0, [pc, #336]	; (802e1fc <_vfiprintf_r+0x220>)
 802e0ac:	f7d2 f900 	bl	80002b0 <memchr>
 802e0b0:	9a04      	ldr	r2, [sp, #16]
 802e0b2:	b9d8      	cbnz	r0, 802e0ec <_vfiprintf_r+0x110>
 802e0b4:	06d1      	lsls	r1, r2, #27
 802e0b6:	bf44      	itt	mi
 802e0b8:	2320      	movmi	r3, #32
 802e0ba:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802e0be:	0713      	lsls	r3, r2, #28
 802e0c0:	bf44      	itt	mi
 802e0c2:	232b      	movmi	r3, #43	; 0x2b
 802e0c4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802e0c8:	f89a 3000 	ldrb.w	r3, [sl]
 802e0cc:	2b2a      	cmp	r3, #42	; 0x2a
 802e0ce:	d015      	beq.n	802e0fc <_vfiprintf_r+0x120>
 802e0d0:	9a07      	ldr	r2, [sp, #28]
 802e0d2:	4654      	mov	r4, sl
 802e0d4:	2000      	movs	r0, #0
 802e0d6:	f04f 0c0a 	mov.w	ip, #10
 802e0da:	4621      	mov	r1, r4
 802e0dc:	f811 3b01 	ldrb.w	r3, [r1], #1
 802e0e0:	3b30      	subs	r3, #48	; 0x30
 802e0e2:	2b09      	cmp	r3, #9
 802e0e4:	d94d      	bls.n	802e182 <_vfiprintf_r+0x1a6>
 802e0e6:	b1b0      	cbz	r0, 802e116 <_vfiprintf_r+0x13a>
 802e0e8:	9207      	str	r2, [sp, #28]
 802e0ea:	e014      	b.n	802e116 <_vfiprintf_r+0x13a>
 802e0ec:	eba0 0308 	sub.w	r3, r0, r8
 802e0f0:	fa09 f303 	lsl.w	r3, r9, r3
 802e0f4:	4313      	orrs	r3, r2
 802e0f6:	9304      	str	r3, [sp, #16]
 802e0f8:	46a2      	mov	sl, r4
 802e0fa:	e7d2      	b.n	802e0a2 <_vfiprintf_r+0xc6>
 802e0fc:	9b03      	ldr	r3, [sp, #12]
 802e0fe:	1d19      	adds	r1, r3, #4
 802e100:	681b      	ldr	r3, [r3, #0]
 802e102:	9103      	str	r1, [sp, #12]
 802e104:	2b00      	cmp	r3, #0
 802e106:	bfbb      	ittet	lt
 802e108:	425b      	neglt	r3, r3
 802e10a:	f042 0202 	orrlt.w	r2, r2, #2
 802e10e:	9307      	strge	r3, [sp, #28]
 802e110:	9307      	strlt	r3, [sp, #28]
 802e112:	bfb8      	it	lt
 802e114:	9204      	strlt	r2, [sp, #16]
 802e116:	7823      	ldrb	r3, [r4, #0]
 802e118:	2b2e      	cmp	r3, #46	; 0x2e
 802e11a:	d10c      	bne.n	802e136 <_vfiprintf_r+0x15a>
 802e11c:	7863      	ldrb	r3, [r4, #1]
 802e11e:	2b2a      	cmp	r3, #42	; 0x2a
 802e120:	d134      	bne.n	802e18c <_vfiprintf_r+0x1b0>
 802e122:	9b03      	ldr	r3, [sp, #12]
 802e124:	1d1a      	adds	r2, r3, #4
 802e126:	681b      	ldr	r3, [r3, #0]
 802e128:	9203      	str	r2, [sp, #12]
 802e12a:	2b00      	cmp	r3, #0
 802e12c:	bfb8      	it	lt
 802e12e:	f04f 33ff 	movlt.w	r3, #4294967295
 802e132:	3402      	adds	r4, #2
 802e134:	9305      	str	r3, [sp, #20]
 802e136:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802e20c <_vfiprintf_r+0x230>
 802e13a:	7821      	ldrb	r1, [r4, #0]
 802e13c:	2203      	movs	r2, #3
 802e13e:	4650      	mov	r0, sl
 802e140:	f7d2 f8b6 	bl	80002b0 <memchr>
 802e144:	b138      	cbz	r0, 802e156 <_vfiprintf_r+0x17a>
 802e146:	9b04      	ldr	r3, [sp, #16]
 802e148:	eba0 000a 	sub.w	r0, r0, sl
 802e14c:	2240      	movs	r2, #64	; 0x40
 802e14e:	4082      	lsls	r2, r0
 802e150:	4313      	orrs	r3, r2
 802e152:	3401      	adds	r4, #1
 802e154:	9304      	str	r3, [sp, #16]
 802e156:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e15a:	4829      	ldr	r0, [pc, #164]	; (802e200 <_vfiprintf_r+0x224>)
 802e15c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802e160:	2206      	movs	r2, #6
 802e162:	f7d2 f8a5 	bl	80002b0 <memchr>
 802e166:	2800      	cmp	r0, #0
 802e168:	d03f      	beq.n	802e1ea <_vfiprintf_r+0x20e>
 802e16a:	4b26      	ldr	r3, [pc, #152]	; (802e204 <_vfiprintf_r+0x228>)
 802e16c:	bb1b      	cbnz	r3, 802e1b6 <_vfiprintf_r+0x1da>
 802e16e:	9b03      	ldr	r3, [sp, #12]
 802e170:	3307      	adds	r3, #7
 802e172:	f023 0307 	bic.w	r3, r3, #7
 802e176:	3308      	adds	r3, #8
 802e178:	9303      	str	r3, [sp, #12]
 802e17a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802e17c:	443b      	add	r3, r7
 802e17e:	9309      	str	r3, [sp, #36]	; 0x24
 802e180:	e768      	b.n	802e054 <_vfiprintf_r+0x78>
 802e182:	fb0c 3202 	mla	r2, ip, r2, r3
 802e186:	460c      	mov	r4, r1
 802e188:	2001      	movs	r0, #1
 802e18a:	e7a6      	b.n	802e0da <_vfiprintf_r+0xfe>
 802e18c:	2300      	movs	r3, #0
 802e18e:	3401      	adds	r4, #1
 802e190:	9305      	str	r3, [sp, #20]
 802e192:	4619      	mov	r1, r3
 802e194:	f04f 0c0a 	mov.w	ip, #10
 802e198:	4620      	mov	r0, r4
 802e19a:	f810 2b01 	ldrb.w	r2, [r0], #1
 802e19e:	3a30      	subs	r2, #48	; 0x30
 802e1a0:	2a09      	cmp	r2, #9
 802e1a2:	d903      	bls.n	802e1ac <_vfiprintf_r+0x1d0>
 802e1a4:	2b00      	cmp	r3, #0
 802e1a6:	d0c6      	beq.n	802e136 <_vfiprintf_r+0x15a>
 802e1a8:	9105      	str	r1, [sp, #20]
 802e1aa:	e7c4      	b.n	802e136 <_vfiprintf_r+0x15a>
 802e1ac:	fb0c 2101 	mla	r1, ip, r1, r2
 802e1b0:	4604      	mov	r4, r0
 802e1b2:	2301      	movs	r3, #1
 802e1b4:	e7f0      	b.n	802e198 <_vfiprintf_r+0x1bc>
 802e1b6:	ab03      	add	r3, sp, #12
 802e1b8:	9300      	str	r3, [sp, #0]
 802e1ba:	462a      	mov	r2, r5
 802e1bc:	4b12      	ldr	r3, [pc, #72]	; (802e208 <_vfiprintf_r+0x22c>)
 802e1be:	a904      	add	r1, sp, #16
 802e1c0:	4630      	mov	r0, r6
 802e1c2:	f3af 8000 	nop.w
 802e1c6:	4607      	mov	r7, r0
 802e1c8:	1c78      	adds	r0, r7, #1
 802e1ca:	d1d6      	bne.n	802e17a <_vfiprintf_r+0x19e>
 802e1cc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e1ce:	07d9      	lsls	r1, r3, #31
 802e1d0:	d405      	bmi.n	802e1de <_vfiprintf_r+0x202>
 802e1d2:	89ab      	ldrh	r3, [r5, #12]
 802e1d4:	059a      	lsls	r2, r3, #22
 802e1d6:	d402      	bmi.n	802e1de <_vfiprintf_r+0x202>
 802e1d8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e1da:	f7ff fe1b 	bl	802de14 <__retarget_lock_release_recursive>
 802e1de:	89ab      	ldrh	r3, [r5, #12]
 802e1e0:	065b      	lsls	r3, r3, #25
 802e1e2:	f53f af1d 	bmi.w	802e020 <_vfiprintf_r+0x44>
 802e1e6:	9809      	ldr	r0, [sp, #36]	; 0x24
 802e1e8:	e71c      	b.n	802e024 <_vfiprintf_r+0x48>
 802e1ea:	ab03      	add	r3, sp, #12
 802e1ec:	9300      	str	r3, [sp, #0]
 802e1ee:	462a      	mov	r2, r5
 802e1f0:	4b05      	ldr	r3, [pc, #20]	; (802e208 <_vfiprintf_r+0x22c>)
 802e1f2:	a904      	add	r1, sp, #16
 802e1f4:	4630      	mov	r0, r6
 802e1f6:	f000 f879 	bl	802e2ec <_printf_i>
 802e1fa:	e7e4      	b.n	802e1c6 <_vfiprintf_r+0x1ea>
 802e1fc:	08045a94 	.word	0x08045a94
 802e200:	08045a9e 	.word	0x08045a9e
 802e204:	00000000 	.word	0x00000000
 802e208:	0802dfb7 	.word	0x0802dfb7
 802e20c:	08045a9a 	.word	0x08045a9a

0802e210 <_printf_common>:
 802e210:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802e214:	4616      	mov	r6, r2
 802e216:	4699      	mov	r9, r3
 802e218:	688a      	ldr	r2, [r1, #8]
 802e21a:	690b      	ldr	r3, [r1, #16]
 802e21c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802e220:	4293      	cmp	r3, r2
 802e222:	bfb8      	it	lt
 802e224:	4613      	movlt	r3, r2
 802e226:	6033      	str	r3, [r6, #0]
 802e228:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802e22c:	4607      	mov	r7, r0
 802e22e:	460c      	mov	r4, r1
 802e230:	b10a      	cbz	r2, 802e236 <_printf_common+0x26>
 802e232:	3301      	adds	r3, #1
 802e234:	6033      	str	r3, [r6, #0]
 802e236:	6823      	ldr	r3, [r4, #0]
 802e238:	0699      	lsls	r1, r3, #26
 802e23a:	bf42      	ittt	mi
 802e23c:	6833      	ldrmi	r3, [r6, #0]
 802e23e:	3302      	addmi	r3, #2
 802e240:	6033      	strmi	r3, [r6, #0]
 802e242:	6825      	ldr	r5, [r4, #0]
 802e244:	f015 0506 	ands.w	r5, r5, #6
 802e248:	d106      	bne.n	802e258 <_printf_common+0x48>
 802e24a:	f104 0a19 	add.w	sl, r4, #25
 802e24e:	68e3      	ldr	r3, [r4, #12]
 802e250:	6832      	ldr	r2, [r6, #0]
 802e252:	1a9b      	subs	r3, r3, r2
 802e254:	42ab      	cmp	r3, r5
 802e256:	dc26      	bgt.n	802e2a6 <_printf_common+0x96>
 802e258:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802e25c:	1e13      	subs	r3, r2, #0
 802e25e:	6822      	ldr	r2, [r4, #0]
 802e260:	bf18      	it	ne
 802e262:	2301      	movne	r3, #1
 802e264:	0692      	lsls	r2, r2, #26
 802e266:	d42b      	bmi.n	802e2c0 <_printf_common+0xb0>
 802e268:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802e26c:	4649      	mov	r1, r9
 802e26e:	4638      	mov	r0, r7
 802e270:	47c0      	blx	r8
 802e272:	3001      	adds	r0, #1
 802e274:	d01e      	beq.n	802e2b4 <_printf_common+0xa4>
 802e276:	6823      	ldr	r3, [r4, #0]
 802e278:	6922      	ldr	r2, [r4, #16]
 802e27a:	f003 0306 	and.w	r3, r3, #6
 802e27e:	2b04      	cmp	r3, #4
 802e280:	bf02      	ittt	eq
 802e282:	68e5      	ldreq	r5, [r4, #12]
 802e284:	6833      	ldreq	r3, [r6, #0]
 802e286:	1aed      	subeq	r5, r5, r3
 802e288:	68a3      	ldr	r3, [r4, #8]
 802e28a:	bf0c      	ite	eq
 802e28c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802e290:	2500      	movne	r5, #0
 802e292:	4293      	cmp	r3, r2
 802e294:	bfc4      	itt	gt
 802e296:	1a9b      	subgt	r3, r3, r2
 802e298:	18ed      	addgt	r5, r5, r3
 802e29a:	2600      	movs	r6, #0
 802e29c:	341a      	adds	r4, #26
 802e29e:	42b5      	cmp	r5, r6
 802e2a0:	d11a      	bne.n	802e2d8 <_printf_common+0xc8>
 802e2a2:	2000      	movs	r0, #0
 802e2a4:	e008      	b.n	802e2b8 <_printf_common+0xa8>
 802e2a6:	2301      	movs	r3, #1
 802e2a8:	4652      	mov	r2, sl
 802e2aa:	4649      	mov	r1, r9
 802e2ac:	4638      	mov	r0, r7
 802e2ae:	47c0      	blx	r8
 802e2b0:	3001      	adds	r0, #1
 802e2b2:	d103      	bne.n	802e2bc <_printf_common+0xac>
 802e2b4:	f04f 30ff 	mov.w	r0, #4294967295
 802e2b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e2bc:	3501      	adds	r5, #1
 802e2be:	e7c6      	b.n	802e24e <_printf_common+0x3e>
 802e2c0:	18e1      	adds	r1, r4, r3
 802e2c2:	1c5a      	adds	r2, r3, #1
 802e2c4:	2030      	movs	r0, #48	; 0x30
 802e2c6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802e2ca:	4422      	add	r2, r4
 802e2cc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802e2d0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802e2d4:	3302      	adds	r3, #2
 802e2d6:	e7c7      	b.n	802e268 <_printf_common+0x58>
 802e2d8:	2301      	movs	r3, #1
 802e2da:	4622      	mov	r2, r4
 802e2dc:	4649      	mov	r1, r9
 802e2de:	4638      	mov	r0, r7
 802e2e0:	47c0      	blx	r8
 802e2e2:	3001      	adds	r0, #1
 802e2e4:	d0e6      	beq.n	802e2b4 <_printf_common+0xa4>
 802e2e6:	3601      	adds	r6, #1
 802e2e8:	e7d9      	b.n	802e29e <_printf_common+0x8e>
	...

0802e2ec <_printf_i>:
 802e2ec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802e2f0:	7e0f      	ldrb	r7, [r1, #24]
 802e2f2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802e2f4:	2f78      	cmp	r7, #120	; 0x78
 802e2f6:	4691      	mov	r9, r2
 802e2f8:	4680      	mov	r8, r0
 802e2fa:	460c      	mov	r4, r1
 802e2fc:	469a      	mov	sl, r3
 802e2fe:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802e302:	d807      	bhi.n	802e314 <_printf_i+0x28>
 802e304:	2f62      	cmp	r7, #98	; 0x62
 802e306:	d80a      	bhi.n	802e31e <_printf_i+0x32>
 802e308:	2f00      	cmp	r7, #0
 802e30a:	f000 80d4 	beq.w	802e4b6 <_printf_i+0x1ca>
 802e30e:	2f58      	cmp	r7, #88	; 0x58
 802e310:	f000 80c0 	beq.w	802e494 <_printf_i+0x1a8>
 802e314:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802e318:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802e31c:	e03a      	b.n	802e394 <_printf_i+0xa8>
 802e31e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802e322:	2b15      	cmp	r3, #21
 802e324:	d8f6      	bhi.n	802e314 <_printf_i+0x28>
 802e326:	a101      	add	r1, pc, #4	; (adr r1, 802e32c <_printf_i+0x40>)
 802e328:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802e32c:	0802e385 	.word	0x0802e385
 802e330:	0802e399 	.word	0x0802e399
 802e334:	0802e315 	.word	0x0802e315
 802e338:	0802e315 	.word	0x0802e315
 802e33c:	0802e315 	.word	0x0802e315
 802e340:	0802e315 	.word	0x0802e315
 802e344:	0802e399 	.word	0x0802e399
 802e348:	0802e315 	.word	0x0802e315
 802e34c:	0802e315 	.word	0x0802e315
 802e350:	0802e315 	.word	0x0802e315
 802e354:	0802e315 	.word	0x0802e315
 802e358:	0802e49d 	.word	0x0802e49d
 802e35c:	0802e3c5 	.word	0x0802e3c5
 802e360:	0802e457 	.word	0x0802e457
 802e364:	0802e315 	.word	0x0802e315
 802e368:	0802e315 	.word	0x0802e315
 802e36c:	0802e4bf 	.word	0x0802e4bf
 802e370:	0802e315 	.word	0x0802e315
 802e374:	0802e3c5 	.word	0x0802e3c5
 802e378:	0802e315 	.word	0x0802e315
 802e37c:	0802e315 	.word	0x0802e315
 802e380:	0802e45f 	.word	0x0802e45f
 802e384:	682b      	ldr	r3, [r5, #0]
 802e386:	1d1a      	adds	r2, r3, #4
 802e388:	681b      	ldr	r3, [r3, #0]
 802e38a:	602a      	str	r2, [r5, #0]
 802e38c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802e390:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802e394:	2301      	movs	r3, #1
 802e396:	e09f      	b.n	802e4d8 <_printf_i+0x1ec>
 802e398:	6820      	ldr	r0, [r4, #0]
 802e39a:	682b      	ldr	r3, [r5, #0]
 802e39c:	0607      	lsls	r7, r0, #24
 802e39e:	f103 0104 	add.w	r1, r3, #4
 802e3a2:	6029      	str	r1, [r5, #0]
 802e3a4:	d501      	bpl.n	802e3aa <_printf_i+0xbe>
 802e3a6:	681e      	ldr	r6, [r3, #0]
 802e3a8:	e003      	b.n	802e3b2 <_printf_i+0xc6>
 802e3aa:	0646      	lsls	r6, r0, #25
 802e3ac:	d5fb      	bpl.n	802e3a6 <_printf_i+0xba>
 802e3ae:	f9b3 6000 	ldrsh.w	r6, [r3]
 802e3b2:	2e00      	cmp	r6, #0
 802e3b4:	da03      	bge.n	802e3be <_printf_i+0xd2>
 802e3b6:	232d      	movs	r3, #45	; 0x2d
 802e3b8:	4276      	negs	r6, r6
 802e3ba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802e3be:	485a      	ldr	r0, [pc, #360]	; (802e528 <_printf_i+0x23c>)
 802e3c0:	230a      	movs	r3, #10
 802e3c2:	e012      	b.n	802e3ea <_printf_i+0xfe>
 802e3c4:	682b      	ldr	r3, [r5, #0]
 802e3c6:	6820      	ldr	r0, [r4, #0]
 802e3c8:	1d19      	adds	r1, r3, #4
 802e3ca:	6029      	str	r1, [r5, #0]
 802e3cc:	0605      	lsls	r5, r0, #24
 802e3ce:	d501      	bpl.n	802e3d4 <_printf_i+0xe8>
 802e3d0:	681e      	ldr	r6, [r3, #0]
 802e3d2:	e002      	b.n	802e3da <_printf_i+0xee>
 802e3d4:	0641      	lsls	r1, r0, #25
 802e3d6:	d5fb      	bpl.n	802e3d0 <_printf_i+0xe4>
 802e3d8:	881e      	ldrh	r6, [r3, #0]
 802e3da:	4853      	ldr	r0, [pc, #332]	; (802e528 <_printf_i+0x23c>)
 802e3dc:	2f6f      	cmp	r7, #111	; 0x6f
 802e3de:	bf0c      	ite	eq
 802e3e0:	2308      	moveq	r3, #8
 802e3e2:	230a      	movne	r3, #10
 802e3e4:	2100      	movs	r1, #0
 802e3e6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802e3ea:	6865      	ldr	r5, [r4, #4]
 802e3ec:	60a5      	str	r5, [r4, #8]
 802e3ee:	2d00      	cmp	r5, #0
 802e3f0:	bfa2      	ittt	ge
 802e3f2:	6821      	ldrge	r1, [r4, #0]
 802e3f4:	f021 0104 	bicge.w	r1, r1, #4
 802e3f8:	6021      	strge	r1, [r4, #0]
 802e3fa:	b90e      	cbnz	r6, 802e400 <_printf_i+0x114>
 802e3fc:	2d00      	cmp	r5, #0
 802e3fe:	d04b      	beq.n	802e498 <_printf_i+0x1ac>
 802e400:	4615      	mov	r5, r2
 802e402:	fbb6 f1f3 	udiv	r1, r6, r3
 802e406:	fb03 6711 	mls	r7, r3, r1, r6
 802e40a:	5dc7      	ldrb	r7, [r0, r7]
 802e40c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802e410:	4637      	mov	r7, r6
 802e412:	42bb      	cmp	r3, r7
 802e414:	460e      	mov	r6, r1
 802e416:	d9f4      	bls.n	802e402 <_printf_i+0x116>
 802e418:	2b08      	cmp	r3, #8
 802e41a:	d10b      	bne.n	802e434 <_printf_i+0x148>
 802e41c:	6823      	ldr	r3, [r4, #0]
 802e41e:	07de      	lsls	r6, r3, #31
 802e420:	d508      	bpl.n	802e434 <_printf_i+0x148>
 802e422:	6923      	ldr	r3, [r4, #16]
 802e424:	6861      	ldr	r1, [r4, #4]
 802e426:	4299      	cmp	r1, r3
 802e428:	bfde      	ittt	le
 802e42a:	2330      	movle	r3, #48	; 0x30
 802e42c:	f805 3c01 	strble.w	r3, [r5, #-1]
 802e430:	f105 35ff 	addle.w	r5, r5, #4294967295
 802e434:	1b52      	subs	r2, r2, r5
 802e436:	6122      	str	r2, [r4, #16]
 802e438:	f8cd a000 	str.w	sl, [sp]
 802e43c:	464b      	mov	r3, r9
 802e43e:	aa03      	add	r2, sp, #12
 802e440:	4621      	mov	r1, r4
 802e442:	4640      	mov	r0, r8
 802e444:	f7ff fee4 	bl	802e210 <_printf_common>
 802e448:	3001      	adds	r0, #1
 802e44a:	d14a      	bne.n	802e4e2 <_printf_i+0x1f6>
 802e44c:	f04f 30ff 	mov.w	r0, #4294967295
 802e450:	b004      	add	sp, #16
 802e452:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e456:	6823      	ldr	r3, [r4, #0]
 802e458:	f043 0320 	orr.w	r3, r3, #32
 802e45c:	6023      	str	r3, [r4, #0]
 802e45e:	4833      	ldr	r0, [pc, #204]	; (802e52c <_printf_i+0x240>)
 802e460:	2778      	movs	r7, #120	; 0x78
 802e462:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802e466:	6823      	ldr	r3, [r4, #0]
 802e468:	6829      	ldr	r1, [r5, #0]
 802e46a:	061f      	lsls	r7, r3, #24
 802e46c:	f851 6b04 	ldr.w	r6, [r1], #4
 802e470:	d402      	bmi.n	802e478 <_printf_i+0x18c>
 802e472:	065f      	lsls	r7, r3, #25
 802e474:	bf48      	it	mi
 802e476:	b2b6      	uxthmi	r6, r6
 802e478:	07df      	lsls	r7, r3, #31
 802e47a:	bf48      	it	mi
 802e47c:	f043 0320 	orrmi.w	r3, r3, #32
 802e480:	6029      	str	r1, [r5, #0]
 802e482:	bf48      	it	mi
 802e484:	6023      	strmi	r3, [r4, #0]
 802e486:	b91e      	cbnz	r6, 802e490 <_printf_i+0x1a4>
 802e488:	6823      	ldr	r3, [r4, #0]
 802e48a:	f023 0320 	bic.w	r3, r3, #32
 802e48e:	6023      	str	r3, [r4, #0]
 802e490:	2310      	movs	r3, #16
 802e492:	e7a7      	b.n	802e3e4 <_printf_i+0xf8>
 802e494:	4824      	ldr	r0, [pc, #144]	; (802e528 <_printf_i+0x23c>)
 802e496:	e7e4      	b.n	802e462 <_printf_i+0x176>
 802e498:	4615      	mov	r5, r2
 802e49a:	e7bd      	b.n	802e418 <_printf_i+0x12c>
 802e49c:	682b      	ldr	r3, [r5, #0]
 802e49e:	6826      	ldr	r6, [r4, #0]
 802e4a0:	6961      	ldr	r1, [r4, #20]
 802e4a2:	1d18      	adds	r0, r3, #4
 802e4a4:	6028      	str	r0, [r5, #0]
 802e4a6:	0635      	lsls	r5, r6, #24
 802e4a8:	681b      	ldr	r3, [r3, #0]
 802e4aa:	d501      	bpl.n	802e4b0 <_printf_i+0x1c4>
 802e4ac:	6019      	str	r1, [r3, #0]
 802e4ae:	e002      	b.n	802e4b6 <_printf_i+0x1ca>
 802e4b0:	0670      	lsls	r0, r6, #25
 802e4b2:	d5fb      	bpl.n	802e4ac <_printf_i+0x1c0>
 802e4b4:	8019      	strh	r1, [r3, #0]
 802e4b6:	2300      	movs	r3, #0
 802e4b8:	6123      	str	r3, [r4, #16]
 802e4ba:	4615      	mov	r5, r2
 802e4bc:	e7bc      	b.n	802e438 <_printf_i+0x14c>
 802e4be:	682b      	ldr	r3, [r5, #0]
 802e4c0:	1d1a      	adds	r2, r3, #4
 802e4c2:	602a      	str	r2, [r5, #0]
 802e4c4:	681d      	ldr	r5, [r3, #0]
 802e4c6:	6862      	ldr	r2, [r4, #4]
 802e4c8:	2100      	movs	r1, #0
 802e4ca:	4628      	mov	r0, r5
 802e4cc:	f7d1 fef0 	bl	80002b0 <memchr>
 802e4d0:	b108      	cbz	r0, 802e4d6 <_printf_i+0x1ea>
 802e4d2:	1b40      	subs	r0, r0, r5
 802e4d4:	6060      	str	r0, [r4, #4]
 802e4d6:	6863      	ldr	r3, [r4, #4]
 802e4d8:	6123      	str	r3, [r4, #16]
 802e4da:	2300      	movs	r3, #0
 802e4dc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802e4e0:	e7aa      	b.n	802e438 <_printf_i+0x14c>
 802e4e2:	6923      	ldr	r3, [r4, #16]
 802e4e4:	462a      	mov	r2, r5
 802e4e6:	4649      	mov	r1, r9
 802e4e8:	4640      	mov	r0, r8
 802e4ea:	47d0      	blx	sl
 802e4ec:	3001      	adds	r0, #1
 802e4ee:	d0ad      	beq.n	802e44c <_printf_i+0x160>
 802e4f0:	6823      	ldr	r3, [r4, #0]
 802e4f2:	079b      	lsls	r3, r3, #30
 802e4f4:	d413      	bmi.n	802e51e <_printf_i+0x232>
 802e4f6:	68e0      	ldr	r0, [r4, #12]
 802e4f8:	9b03      	ldr	r3, [sp, #12]
 802e4fa:	4298      	cmp	r0, r3
 802e4fc:	bfb8      	it	lt
 802e4fe:	4618      	movlt	r0, r3
 802e500:	e7a6      	b.n	802e450 <_printf_i+0x164>
 802e502:	2301      	movs	r3, #1
 802e504:	4632      	mov	r2, r6
 802e506:	4649      	mov	r1, r9
 802e508:	4640      	mov	r0, r8
 802e50a:	47d0      	blx	sl
 802e50c:	3001      	adds	r0, #1
 802e50e:	d09d      	beq.n	802e44c <_printf_i+0x160>
 802e510:	3501      	adds	r5, #1
 802e512:	68e3      	ldr	r3, [r4, #12]
 802e514:	9903      	ldr	r1, [sp, #12]
 802e516:	1a5b      	subs	r3, r3, r1
 802e518:	42ab      	cmp	r3, r5
 802e51a:	dcf2      	bgt.n	802e502 <_printf_i+0x216>
 802e51c:	e7eb      	b.n	802e4f6 <_printf_i+0x20a>
 802e51e:	2500      	movs	r5, #0
 802e520:	f104 0619 	add.w	r6, r4, #25
 802e524:	e7f5      	b.n	802e512 <_printf_i+0x226>
 802e526:	bf00      	nop
 802e528:	08045aa5 	.word	0x08045aa5
 802e52c:	08045ab6 	.word	0x08045ab6

0802e530 <__sflush_r>:
 802e530:	898a      	ldrh	r2, [r1, #12]
 802e532:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802e536:	4605      	mov	r5, r0
 802e538:	0710      	lsls	r0, r2, #28
 802e53a:	460c      	mov	r4, r1
 802e53c:	d458      	bmi.n	802e5f0 <__sflush_r+0xc0>
 802e53e:	684b      	ldr	r3, [r1, #4]
 802e540:	2b00      	cmp	r3, #0
 802e542:	dc05      	bgt.n	802e550 <__sflush_r+0x20>
 802e544:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802e546:	2b00      	cmp	r3, #0
 802e548:	dc02      	bgt.n	802e550 <__sflush_r+0x20>
 802e54a:	2000      	movs	r0, #0
 802e54c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e550:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e552:	2e00      	cmp	r6, #0
 802e554:	d0f9      	beq.n	802e54a <__sflush_r+0x1a>
 802e556:	2300      	movs	r3, #0
 802e558:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802e55c:	682f      	ldr	r7, [r5, #0]
 802e55e:	6a21      	ldr	r1, [r4, #32]
 802e560:	602b      	str	r3, [r5, #0]
 802e562:	d032      	beq.n	802e5ca <__sflush_r+0x9a>
 802e564:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802e566:	89a3      	ldrh	r3, [r4, #12]
 802e568:	075a      	lsls	r2, r3, #29
 802e56a:	d505      	bpl.n	802e578 <__sflush_r+0x48>
 802e56c:	6863      	ldr	r3, [r4, #4]
 802e56e:	1ac0      	subs	r0, r0, r3
 802e570:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802e572:	b10b      	cbz	r3, 802e578 <__sflush_r+0x48>
 802e574:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802e576:	1ac0      	subs	r0, r0, r3
 802e578:	2300      	movs	r3, #0
 802e57a:	4602      	mov	r2, r0
 802e57c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e57e:	6a21      	ldr	r1, [r4, #32]
 802e580:	4628      	mov	r0, r5
 802e582:	47b0      	blx	r6
 802e584:	1c43      	adds	r3, r0, #1
 802e586:	89a3      	ldrh	r3, [r4, #12]
 802e588:	d106      	bne.n	802e598 <__sflush_r+0x68>
 802e58a:	6829      	ldr	r1, [r5, #0]
 802e58c:	291d      	cmp	r1, #29
 802e58e:	d82b      	bhi.n	802e5e8 <__sflush_r+0xb8>
 802e590:	4a29      	ldr	r2, [pc, #164]	; (802e638 <__sflush_r+0x108>)
 802e592:	410a      	asrs	r2, r1
 802e594:	07d6      	lsls	r6, r2, #31
 802e596:	d427      	bmi.n	802e5e8 <__sflush_r+0xb8>
 802e598:	2200      	movs	r2, #0
 802e59a:	6062      	str	r2, [r4, #4]
 802e59c:	04d9      	lsls	r1, r3, #19
 802e59e:	6922      	ldr	r2, [r4, #16]
 802e5a0:	6022      	str	r2, [r4, #0]
 802e5a2:	d504      	bpl.n	802e5ae <__sflush_r+0x7e>
 802e5a4:	1c42      	adds	r2, r0, #1
 802e5a6:	d101      	bne.n	802e5ac <__sflush_r+0x7c>
 802e5a8:	682b      	ldr	r3, [r5, #0]
 802e5aa:	b903      	cbnz	r3, 802e5ae <__sflush_r+0x7e>
 802e5ac:	6560      	str	r0, [r4, #84]	; 0x54
 802e5ae:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802e5b0:	602f      	str	r7, [r5, #0]
 802e5b2:	2900      	cmp	r1, #0
 802e5b4:	d0c9      	beq.n	802e54a <__sflush_r+0x1a>
 802e5b6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802e5ba:	4299      	cmp	r1, r3
 802e5bc:	d002      	beq.n	802e5c4 <__sflush_r+0x94>
 802e5be:	4628      	mov	r0, r5
 802e5c0:	f7ff fc96 	bl	802def0 <_free_r>
 802e5c4:	2000      	movs	r0, #0
 802e5c6:	6360      	str	r0, [r4, #52]	; 0x34
 802e5c8:	e7c0      	b.n	802e54c <__sflush_r+0x1c>
 802e5ca:	2301      	movs	r3, #1
 802e5cc:	4628      	mov	r0, r5
 802e5ce:	47b0      	blx	r6
 802e5d0:	1c41      	adds	r1, r0, #1
 802e5d2:	d1c8      	bne.n	802e566 <__sflush_r+0x36>
 802e5d4:	682b      	ldr	r3, [r5, #0]
 802e5d6:	2b00      	cmp	r3, #0
 802e5d8:	d0c5      	beq.n	802e566 <__sflush_r+0x36>
 802e5da:	2b1d      	cmp	r3, #29
 802e5dc:	d001      	beq.n	802e5e2 <__sflush_r+0xb2>
 802e5de:	2b16      	cmp	r3, #22
 802e5e0:	d101      	bne.n	802e5e6 <__sflush_r+0xb6>
 802e5e2:	602f      	str	r7, [r5, #0]
 802e5e4:	e7b1      	b.n	802e54a <__sflush_r+0x1a>
 802e5e6:	89a3      	ldrh	r3, [r4, #12]
 802e5e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e5ec:	81a3      	strh	r3, [r4, #12]
 802e5ee:	e7ad      	b.n	802e54c <__sflush_r+0x1c>
 802e5f0:	690f      	ldr	r7, [r1, #16]
 802e5f2:	2f00      	cmp	r7, #0
 802e5f4:	d0a9      	beq.n	802e54a <__sflush_r+0x1a>
 802e5f6:	0793      	lsls	r3, r2, #30
 802e5f8:	680e      	ldr	r6, [r1, #0]
 802e5fa:	bf08      	it	eq
 802e5fc:	694b      	ldreq	r3, [r1, #20]
 802e5fe:	600f      	str	r7, [r1, #0]
 802e600:	bf18      	it	ne
 802e602:	2300      	movne	r3, #0
 802e604:	eba6 0807 	sub.w	r8, r6, r7
 802e608:	608b      	str	r3, [r1, #8]
 802e60a:	f1b8 0f00 	cmp.w	r8, #0
 802e60e:	dd9c      	ble.n	802e54a <__sflush_r+0x1a>
 802e610:	6a21      	ldr	r1, [r4, #32]
 802e612:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802e614:	4643      	mov	r3, r8
 802e616:	463a      	mov	r2, r7
 802e618:	4628      	mov	r0, r5
 802e61a:	47b0      	blx	r6
 802e61c:	2800      	cmp	r0, #0
 802e61e:	dc06      	bgt.n	802e62e <__sflush_r+0xfe>
 802e620:	89a3      	ldrh	r3, [r4, #12]
 802e622:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e626:	81a3      	strh	r3, [r4, #12]
 802e628:	f04f 30ff 	mov.w	r0, #4294967295
 802e62c:	e78e      	b.n	802e54c <__sflush_r+0x1c>
 802e62e:	4407      	add	r7, r0
 802e630:	eba8 0800 	sub.w	r8, r8, r0
 802e634:	e7e9      	b.n	802e60a <__sflush_r+0xda>
 802e636:	bf00      	nop
 802e638:	dfbffffe 	.word	0xdfbffffe

0802e63c <_fflush_r>:
 802e63c:	b538      	push	{r3, r4, r5, lr}
 802e63e:	690b      	ldr	r3, [r1, #16]
 802e640:	4605      	mov	r5, r0
 802e642:	460c      	mov	r4, r1
 802e644:	b913      	cbnz	r3, 802e64c <_fflush_r+0x10>
 802e646:	2500      	movs	r5, #0
 802e648:	4628      	mov	r0, r5
 802e64a:	bd38      	pop	{r3, r4, r5, pc}
 802e64c:	b118      	cbz	r0, 802e656 <_fflush_r+0x1a>
 802e64e:	6a03      	ldr	r3, [r0, #32]
 802e650:	b90b      	cbnz	r3, 802e656 <_fflush_r+0x1a>
 802e652:	f7ff fa2f 	bl	802dab4 <__sinit>
 802e656:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e65a:	2b00      	cmp	r3, #0
 802e65c:	d0f3      	beq.n	802e646 <_fflush_r+0xa>
 802e65e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802e660:	07d0      	lsls	r0, r2, #31
 802e662:	d404      	bmi.n	802e66e <_fflush_r+0x32>
 802e664:	0599      	lsls	r1, r3, #22
 802e666:	d402      	bmi.n	802e66e <_fflush_r+0x32>
 802e668:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802e66a:	f7ff fbd2 	bl	802de12 <__retarget_lock_acquire_recursive>
 802e66e:	4628      	mov	r0, r5
 802e670:	4621      	mov	r1, r4
 802e672:	f7ff ff5d 	bl	802e530 <__sflush_r>
 802e676:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802e678:	07da      	lsls	r2, r3, #31
 802e67a:	4605      	mov	r5, r0
 802e67c:	d4e4      	bmi.n	802e648 <_fflush_r+0xc>
 802e67e:	89a3      	ldrh	r3, [r4, #12]
 802e680:	059b      	lsls	r3, r3, #22
 802e682:	d4e1      	bmi.n	802e648 <_fflush_r+0xc>
 802e684:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802e686:	f7ff fbc5 	bl	802de14 <__retarget_lock_release_recursive>
 802e68a:	e7dd      	b.n	802e648 <_fflush_r+0xc>

0802e68c <__swbuf_r>:
 802e68c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e68e:	460e      	mov	r6, r1
 802e690:	4614      	mov	r4, r2
 802e692:	4605      	mov	r5, r0
 802e694:	b118      	cbz	r0, 802e69e <__swbuf_r+0x12>
 802e696:	6a03      	ldr	r3, [r0, #32]
 802e698:	b90b      	cbnz	r3, 802e69e <__swbuf_r+0x12>
 802e69a:	f7ff fa0b 	bl	802dab4 <__sinit>
 802e69e:	69a3      	ldr	r3, [r4, #24]
 802e6a0:	60a3      	str	r3, [r4, #8]
 802e6a2:	89a3      	ldrh	r3, [r4, #12]
 802e6a4:	071a      	lsls	r2, r3, #28
 802e6a6:	d525      	bpl.n	802e6f4 <__swbuf_r+0x68>
 802e6a8:	6923      	ldr	r3, [r4, #16]
 802e6aa:	b31b      	cbz	r3, 802e6f4 <__swbuf_r+0x68>
 802e6ac:	6823      	ldr	r3, [r4, #0]
 802e6ae:	6922      	ldr	r2, [r4, #16]
 802e6b0:	1a98      	subs	r0, r3, r2
 802e6b2:	6963      	ldr	r3, [r4, #20]
 802e6b4:	b2f6      	uxtb	r6, r6
 802e6b6:	4283      	cmp	r3, r0
 802e6b8:	4637      	mov	r7, r6
 802e6ba:	dc04      	bgt.n	802e6c6 <__swbuf_r+0x3a>
 802e6bc:	4621      	mov	r1, r4
 802e6be:	4628      	mov	r0, r5
 802e6c0:	f7ff ffbc 	bl	802e63c <_fflush_r>
 802e6c4:	b9e0      	cbnz	r0, 802e700 <__swbuf_r+0x74>
 802e6c6:	68a3      	ldr	r3, [r4, #8]
 802e6c8:	3b01      	subs	r3, #1
 802e6ca:	60a3      	str	r3, [r4, #8]
 802e6cc:	6823      	ldr	r3, [r4, #0]
 802e6ce:	1c5a      	adds	r2, r3, #1
 802e6d0:	6022      	str	r2, [r4, #0]
 802e6d2:	701e      	strb	r6, [r3, #0]
 802e6d4:	6962      	ldr	r2, [r4, #20]
 802e6d6:	1c43      	adds	r3, r0, #1
 802e6d8:	429a      	cmp	r2, r3
 802e6da:	d004      	beq.n	802e6e6 <__swbuf_r+0x5a>
 802e6dc:	89a3      	ldrh	r3, [r4, #12]
 802e6de:	07db      	lsls	r3, r3, #31
 802e6e0:	d506      	bpl.n	802e6f0 <__swbuf_r+0x64>
 802e6e2:	2e0a      	cmp	r6, #10
 802e6e4:	d104      	bne.n	802e6f0 <__swbuf_r+0x64>
 802e6e6:	4621      	mov	r1, r4
 802e6e8:	4628      	mov	r0, r5
 802e6ea:	f7ff ffa7 	bl	802e63c <_fflush_r>
 802e6ee:	b938      	cbnz	r0, 802e700 <__swbuf_r+0x74>
 802e6f0:	4638      	mov	r0, r7
 802e6f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802e6f4:	4621      	mov	r1, r4
 802e6f6:	4628      	mov	r0, r5
 802e6f8:	f000 f806 	bl	802e708 <__swsetup_r>
 802e6fc:	2800      	cmp	r0, #0
 802e6fe:	d0d5      	beq.n	802e6ac <__swbuf_r+0x20>
 802e700:	f04f 37ff 	mov.w	r7, #4294967295
 802e704:	e7f4      	b.n	802e6f0 <__swbuf_r+0x64>
	...

0802e708 <__swsetup_r>:
 802e708:	b538      	push	{r3, r4, r5, lr}
 802e70a:	4b2a      	ldr	r3, [pc, #168]	; (802e7b4 <__swsetup_r+0xac>)
 802e70c:	4605      	mov	r5, r0
 802e70e:	6818      	ldr	r0, [r3, #0]
 802e710:	460c      	mov	r4, r1
 802e712:	b118      	cbz	r0, 802e71c <__swsetup_r+0x14>
 802e714:	6a03      	ldr	r3, [r0, #32]
 802e716:	b90b      	cbnz	r3, 802e71c <__swsetup_r+0x14>
 802e718:	f7ff f9cc 	bl	802dab4 <__sinit>
 802e71c:	89a3      	ldrh	r3, [r4, #12]
 802e71e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802e722:	0718      	lsls	r0, r3, #28
 802e724:	d422      	bmi.n	802e76c <__swsetup_r+0x64>
 802e726:	06d9      	lsls	r1, r3, #27
 802e728:	d407      	bmi.n	802e73a <__swsetup_r+0x32>
 802e72a:	2309      	movs	r3, #9
 802e72c:	602b      	str	r3, [r5, #0]
 802e72e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802e732:	81a3      	strh	r3, [r4, #12]
 802e734:	f04f 30ff 	mov.w	r0, #4294967295
 802e738:	e034      	b.n	802e7a4 <__swsetup_r+0x9c>
 802e73a:	0758      	lsls	r0, r3, #29
 802e73c:	d512      	bpl.n	802e764 <__swsetup_r+0x5c>
 802e73e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802e740:	b141      	cbz	r1, 802e754 <__swsetup_r+0x4c>
 802e742:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802e746:	4299      	cmp	r1, r3
 802e748:	d002      	beq.n	802e750 <__swsetup_r+0x48>
 802e74a:	4628      	mov	r0, r5
 802e74c:	f7ff fbd0 	bl	802def0 <_free_r>
 802e750:	2300      	movs	r3, #0
 802e752:	6363      	str	r3, [r4, #52]	; 0x34
 802e754:	89a3      	ldrh	r3, [r4, #12]
 802e756:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802e75a:	81a3      	strh	r3, [r4, #12]
 802e75c:	2300      	movs	r3, #0
 802e75e:	6063      	str	r3, [r4, #4]
 802e760:	6923      	ldr	r3, [r4, #16]
 802e762:	6023      	str	r3, [r4, #0]
 802e764:	89a3      	ldrh	r3, [r4, #12]
 802e766:	f043 0308 	orr.w	r3, r3, #8
 802e76a:	81a3      	strh	r3, [r4, #12]
 802e76c:	6923      	ldr	r3, [r4, #16]
 802e76e:	b94b      	cbnz	r3, 802e784 <__swsetup_r+0x7c>
 802e770:	89a3      	ldrh	r3, [r4, #12]
 802e772:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802e776:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802e77a:	d003      	beq.n	802e784 <__swsetup_r+0x7c>
 802e77c:	4621      	mov	r1, r4
 802e77e:	4628      	mov	r0, r5
 802e780:	f000 f840 	bl	802e804 <__smakebuf_r>
 802e784:	89a0      	ldrh	r0, [r4, #12]
 802e786:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802e78a:	f010 0301 	ands.w	r3, r0, #1
 802e78e:	d00a      	beq.n	802e7a6 <__swsetup_r+0x9e>
 802e790:	2300      	movs	r3, #0
 802e792:	60a3      	str	r3, [r4, #8]
 802e794:	6963      	ldr	r3, [r4, #20]
 802e796:	425b      	negs	r3, r3
 802e798:	61a3      	str	r3, [r4, #24]
 802e79a:	6923      	ldr	r3, [r4, #16]
 802e79c:	b943      	cbnz	r3, 802e7b0 <__swsetup_r+0xa8>
 802e79e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802e7a2:	d1c4      	bne.n	802e72e <__swsetup_r+0x26>
 802e7a4:	bd38      	pop	{r3, r4, r5, pc}
 802e7a6:	0781      	lsls	r1, r0, #30
 802e7a8:	bf58      	it	pl
 802e7aa:	6963      	ldrpl	r3, [r4, #20]
 802e7ac:	60a3      	str	r3, [r4, #8]
 802e7ae:	e7f4      	b.n	802e79a <__swsetup_r+0x92>
 802e7b0:	2000      	movs	r0, #0
 802e7b2:	e7f7      	b.n	802e7a4 <__swsetup_r+0x9c>
 802e7b4:	20000164 	.word	0x20000164

0802e7b8 <__swhatbuf_r>:
 802e7b8:	b570      	push	{r4, r5, r6, lr}
 802e7ba:	460c      	mov	r4, r1
 802e7bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802e7c0:	2900      	cmp	r1, #0
 802e7c2:	b096      	sub	sp, #88	; 0x58
 802e7c4:	4615      	mov	r5, r2
 802e7c6:	461e      	mov	r6, r3
 802e7c8:	da0d      	bge.n	802e7e6 <__swhatbuf_r+0x2e>
 802e7ca:	89a3      	ldrh	r3, [r4, #12]
 802e7cc:	f013 0f80 	tst.w	r3, #128	; 0x80
 802e7d0:	f04f 0100 	mov.w	r1, #0
 802e7d4:	bf0c      	ite	eq
 802e7d6:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802e7da:	2340      	movne	r3, #64	; 0x40
 802e7dc:	2000      	movs	r0, #0
 802e7de:	6031      	str	r1, [r6, #0]
 802e7e0:	602b      	str	r3, [r5, #0]
 802e7e2:	b016      	add	sp, #88	; 0x58
 802e7e4:	bd70      	pop	{r4, r5, r6, pc}
 802e7e6:	466a      	mov	r2, sp
 802e7e8:	f000 f848 	bl	802e87c <_fstat_r>
 802e7ec:	2800      	cmp	r0, #0
 802e7ee:	dbec      	blt.n	802e7ca <__swhatbuf_r+0x12>
 802e7f0:	9901      	ldr	r1, [sp, #4]
 802e7f2:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802e7f6:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802e7fa:	4259      	negs	r1, r3
 802e7fc:	4159      	adcs	r1, r3
 802e7fe:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802e802:	e7eb      	b.n	802e7dc <__swhatbuf_r+0x24>

0802e804 <__smakebuf_r>:
 802e804:	898b      	ldrh	r3, [r1, #12]
 802e806:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802e808:	079d      	lsls	r5, r3, #30
 802e80a:	4606      	mov	r6, r0
 802e80c:	460c      	mov	r4, r1
 802e80e:	d507      	bpl.n	802e820 <__smakebuf_r+0x1c>
 802e810:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802e814:	6023      	str	r3, [r4, #0]
 802e816:	6123      	str	r3, [r4, #16]
 802e818:	2301      	movs	r3, #1
 802e81a:	6163      	str	r3, [r4, #20]
 802e81c:	b002      	add	sp, #8
 802e81e:	bd70      	pop	{r4, r5, r6, pc}
 802e820:	ab01      	add	r3, sp, #4
 802e822:	466a      	mov	r2, sp
 802e824:	f7ff ffc8 	bl	802e7b8 <__swhatbuf_r>
 802e828:	9900      	ldr	r1, [sp, #0]
 802e82a:	4605      	mov	r5, r0
 802e82c:	4630      	mov	r0, r6
 802e82e:	f7ff f81b 	bl	802d868 <_malloc_r>
 802e832:	b948      	cbnz	r0, 802e848 <__smakebuf_r+0x44>
 802e834:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e838:	059a      	lsls	r2, r3, #22
 802e83a:	d4ef      	bmi.n	802e81c <__smakebuf_r+0x18>
 802e83c:	f023 0303 	bic.w	r3, r3, #3
 802e840:	f043 0302 	orr.w	r3, r3, #2
 802e844:	81a3      	strh	r3, [r4, #12]
 802e846:	e7e3      	b.n	802e810 <__smakebuf_r+0xc>
 802e848:	89a3      	ldrh	r3, [r4, #12]
 802e84a:	6020      	str	r0, [r4, #0]
 802e84c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802e850:	81a3      	strh	r3, [r4, #12]
 802e852:	9b00      	ldr	r3, [sp, #0]
 802e854:	6163      	str	r3, [r4, #20]
 802e856:	9b01      	ldr	r3, [sp, #4]
 802e858:	6120      	str	r0, [r4, #16]
 802e85a:	b15b      	cbz	r3, 802e874 <__smakebuf_r+0x70>
 802e85c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802e860:	4630      	mov	r0, r6
 802e862:	f000 f81d 	bl	802e8a0 <_isatty_r>
 802e866:	b128      	cbz	r0, 802e874 <__smakebuf_r+0x70>
 802e868:	89a3      	ldrh	r3, [r4, #12]
 802e86a:	f023 0303 	bic.w	r3, r3, #3
 802e86e:	f043 0301 	orr.w	r3, r3, #1
 802e872:	81a3      	strh	r3, [r4, #12]
 802e874:	89a3      	ldrh	r3, [r4, #12]
 802e876:	431d      	orrs	r5, r3
 802e878:	81a5      	strh	r5, [r4, #12]
 802e87a:	e7cf      	b.n	802e81c <__smakebuf_r+0x18>

0802e87c <_fstat_r>:
 802e87c:	b538      	push	{r3, r4, r5, lr}
 802e87e:	4d07      	ldr	r5, [pc, #28]	; (802e89c <_fstat_r+0x20>)
 802e880:	2300      	movs	r3, #0
 802e882:	4604      	mov	r4, r0
 802e884:	4608      	mov	r0, r1
 802e886:	4611      	mov	r1, r2
 802e888:	602b      	str	r3, [r5, #0]
 802e88a:	f7d3 ff6b 	bl	8002764 <_fstat>
 802e88e:	1c43      	adds	r3, r0, #1
 802e890:	d102      	bne.n	802e898 <_fstat_r+0x1c>
 802e892:	682b      	ldr	r3, [r5, #0]
 802e894:	b103      	cbz	r3, 802e898 <_fstat_r+0x1c>
 802e896:	6023      	str	r3, [r4, #0]
 802e898:	bd38      	pop	{r3, r4, r5, pc}
 802e89a:	bf00      	nop
 802e89c:	200142ec 	.word	0x200142ec

0802e8a0 <_isatty_r>:
 802e8a0:	b538      	push	{r3, r4, r5, lr}
 802e8a2:	4d06      	ldr	r5, [pc, #24]	; (802e8bc <_isatty_r+0x1c>)
 802e8a4:	2300      	movs	r3, #0
 802e8a6:	4604      	mov	r4, r0
 802e8a8:	4608      	mov	r0, r1
 802e8aa:	602b      	str	r3, [r5, #0]
 802e8ac:	f7d3 ff60 	bl	8002770 <_isatty>
 802e8b0:	1c43      	adds	r3, r0, #1
 802e8b2:	d102      	bne.n	802e8ba <_isatty_r+0x1a>
 802e8b4:	682b      	ldr	r3, [r5, #0]
 802e8b6:	b103      	cbz	r3, 802e8ba <_isatty_r+0x1a>
 802e8b8:	6023      	str	r3, [r4, #0]
 802e8ba:	bd38      	pop	{r3, r4, r5, pc}
 802e8bc:	200142ec 	.word	0x200142ec

0802e8c0 <_init>:
 802e8c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e8c2:	bf00      	nop
 802e8c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802e8c6:	bc08      	pop	{r3}
 802e8c8:	469e      	mov	lr, r3
 802e8ca:	4770      	bx	lr

0802e8cc <_fini>:
 802e8cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e8ce:	bf00      	nop
 802e8d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802e8d2:	bc08      	pop	{r3}
 802e8d4:	469e      	mov	lr, r3
 802e8d6:	4770      	bx	lr
